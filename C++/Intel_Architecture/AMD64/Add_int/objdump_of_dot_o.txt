
add.o:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000077  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  000000b7  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0000000000000000  0000000000000000  000000b7  2**0
                  ALLOC
  3 .init_array   00000008  0000000000000000  0000000000000000  000000b8  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  4 .comment      00000036  0000000000000000  0000000000000000  000000c0  2**0
                  CONTENTS, READONLY
  5 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000f6  2**0
                  CONTENTS, READONLY
  6 .eh_frame     00000078  0000000000000000  0000000000000000  000000f8  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%rbp)
   b:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%rbp)
  12:	8b 55 f4             	mov    -0xc(%rbp),%edx
  15:	8b 45 f8             	mov    -0x8(%rbp),%eax
  18:	01 d0                	add    %edx,%eax
  1a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  1d:	b8 00 00 00 00       	mov    $0x0,%eax
  22:	5d                   	pop    %rbp
  23:	c3                   	retq   

0000000000000024 <_Z41__static_initialization_and_destruction_0ii>:
  24:	55                   	push   %rbp
  25:	48 89 e5             	mov    %rsp,%rbp
  28:	48 83 ec 10          	sub    $0x10,%rsp
  2c:	89 7d fc             	mov    %edi,-0x4(%rbp)
  2f:	89 75 f8             	mov    %esi,-0x8(%rbp)
  32:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  36:	75 27                	jne    5f <_Z41__static_initialization_and_destruction_0ii+0x3b>
  38:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  3f:	75 1e                	jne    5f <_Z41__static_initialization_and_destruction_0ii+0x3b>
  41:	bf 00 00 00 00       	mov    $0x0,%edi
  46:	e8 00 00 00 00       	callq  4b <_Z41__static_initialization_and_destruction_0ii+0x27>
  4b:	ba 00 00 00 00       	mov    $0x0,%edx
  50:	be 00 00 00 00       	mov    $0x0,%esi
  55:	bf 00 00 00 00       	mov    $0x0,%edi
  5a:	e8 00 00 00 00       	callq  5f <_Z41__static_initialization_and_destruction_0ii+0x3b>
  5f:	90                   	nop
  60:	c9                   	leaveq 
  61:	c3                   	retq   

0000000000000062 <_GLOBAL__sub_I_main>:
  62:	55                   	push   %rbp
  63:	48 89 e5             	mov    %rsp,%rbp
  66:	be ff ff 00 00       	mov    $0xffff,%esi
  6b:	bf 01 00 00 00       	mov    $0x1,%edi
  70:	e8 af ff ff ff       	callq  24 <_Z41__static_initialization_and_destruction_0ii>
  75:	5d                   	pop    %rbp
  76:	c3                   	retq   

Disassembly of section .bss:

0000000000000000 <_ZStL8__ioinit>:
	...

Disassembly of section .init_array:

0000000000000000 <.init_array>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 55 62             	sub    %dl,0x62(%rbp)
   9:	75 6e                	jne    79 <_GLOBAL__sub_I_main+0x17>
   b:	74 75                	je     82 <_GLOBAL__sub_I_main+0x20>
   d:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3441 <_GLOBAL__sub_I_main+0x302e33df>
  13:	2d 36 75 62 75       	sub    $0x75627536,%eax
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <_GLOBAL__sub_I_main+0x2e>
  1b:	31 7e 31             	xor    %edi,0x31(%rsi)
  1e:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  23:	31 31                	xor    %esi,(%rcx)
  25:	29 20                	sub    %esp,(%rax)
  27:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2c:	20 32                	and    %dh,(%rdx)
  2e:	30 31                	xor    %dh,(%rcx)
  30:	36 30 36             	xor    %dh,%ss:(%rsi)
  33:	30 39                	xor    %bh,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	24 00                	and    $0x0,%al
  26:	00 00                	add    %al,(%rax)
  28:	00 41 0e             	add    %al,0xe(%rcx)
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	5f                   	pop    %rdi
  32:	0c 07                	or     $0x7,%al
  34:	08 00                	or     %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	1c 00                	sbb    $0x0,%al
  3a:	00 00                	add    %al,(%rax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	3e 00 00             	add    %al,%ds:(%rax)
  47:	00 00                	add    %al,(%rax)
  49:	41 0e                	rex.B (bad) 
  4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  51:	79 0c                	jns    5f <.eh_frame+0x5f>
  53:	07                   	(bad)  
  54:	08 00                	or     %al,(%rax)
  56:	00 00                	add    %al,(%rax)
  58:	1c 00                	sbb    $0x0,%al
  5a:	00 00                	add    %al,(%rax)
  5c:	5c                   	pop    %rsp
  5d:	00 00                	add    %al,(%rax)
  5f:	00 00                	add    %al,(%rax)
  61:	00 00                	add    %al,(%rax)
  63:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 69 <.eh_frame+0x69>
  69:	41 0e                	rex.B (bad) 
  6b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  71:	50                   	push   %rax
  72:	0c 07                	or     $0x7,%al
  74:	08 00                	or     %al,(%rax)
	...

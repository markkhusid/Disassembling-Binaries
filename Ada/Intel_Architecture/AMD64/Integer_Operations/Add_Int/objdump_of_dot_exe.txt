
add_int_Ada_AMD64:     file format elf64-x86-64
add_int_Ada_AMD64
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000002180

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x0000000000000268 memsz 0x0000000000000268 flags r--
  INTERP off    0x00000000000002a8 vaddr 0x00000000000002a8 paddr 0x00000000000002a8 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000001710 memsz 0x0000000000001710 flags r--
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x00000000000006bd memsz 0x00000000000006bd flags r-x
    LOAD off    0x0000000000003000 vaddr 0x0000000000003000 paddr 0x0000000000003000 align 2**12
         filesz 0x00000000000003f0 memsz 0x00000000000003f0 flags r--
    LOAD off    0x0000000000003db8 vaddr 0x0000000000004db8 paddr 0x0000000000004db8 align 2**12
         filesz 0x0000000000000313 memsz 0x0000000000002d08 flags rw-
 DYNAMIC off    0x0000000000003dc8 vaddr 0x0000000000004dc8 paddr 0x0000000000004dc8 align 2**3
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags rw-
    NOTE off    0x00000000000002c4 vaddr 0x00000000000002c4 paddr 0x00000000000002c4 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000031dc vaddr 0x00000000000031dc paddr 0x00000000000031dc align 2**2
         filesz 0x0000000000000064 memsz 0x0000000000000064 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000003db8 vaddr 0x0000000000004db8 paddr 0x0000000000004db8 align 2**0
         filesz 0x0000000000000248 memsz 0x0000000000000248 flags r--

Dynamic Section:
  NEEDED               libgnat-8.so.1
  NEEDED               libdl.so.2
  NEEDED               libgcc_s.so.1
  NEEDED               libc.so.6
  INIT                 0x0000000000002000
  FINI                 0x00000000000026b4
  INIT_ARRAY           0x0000000000004db8
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000004dc0
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000308
  STRTAB               0x0000000000000a50
  SYMTAB               0x0000000000000468
  STRSZ                0x0000000000000603
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000005000
  PLTRELSZ             0x00000000000001e0
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000001530
  RELA                 0x00000000000010f8
  RELASZ               0x0000000000000438
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  VERNEED              0x00000000000010d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000001054
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  00000000000002a8  00000000000002a8  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00000000000002c4  00000000000002c4  000002c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  00000000000002e4  00000000000002e4  000002e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000015c  0000000000000308  0000000000000308  00000308  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000005e8  0000000000000468  0000000000000468  00000468  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000603  0000000000000a50  0000000000000a50  00000a50  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000007e  0000000000001054  0000000000001054  00001054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000010d8  00000000000010d8  000010d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000438  00000000000010f8  00000000000010f8  000010f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     000001e0  0000000000001530  0000000000001530  00001530  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000150  0000000000002020  0000000000002020  00002020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000002170  0000000000002170  00002170  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000531  0000000000002180  0000000000002180  00002180  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  00000000000026b4  00000000000026b4  000026b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000001da  0000000000003000  0000000000003000  00003000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000064  00000000000031dc  00000000000031dc  000031dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000001b0  0000000000003240  0000000000003240  00003240  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000004db8  0000000000004db8  00003db8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000004dc0  0000000000004dc0  00003dc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000210  0000000000004dc8  0000000000004dc8  00003dc8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000028  0000000000004fd8  0000000000004fd8  00003fd8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      000000b8  0000000000005000  0000000000005000  00004000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000013  00000000000050b8  00000000000050b8  000040b8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          000029e0  00000000000050e0  00000000000050e0  000040cb  2**5
                  ALLOC
 25 .comment      0000001d  0000000000000000  0000000000000000  000040cb  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000000002a8 l    d  .interp	0000000000000000              .interp
00000000000002c4 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000002e4 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000308 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000468 l    d  .dynsym	0000000000000000              .dynsym
0000000000000a50 l    d  .dynstr	0000000000000000              .dynstr
0000000000001054 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000010d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000010f8 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000001530 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000002000 l    d  .init	0000000000000000              .init
0000000000002020 l    d  .plt	0000000000000000              .plt
0000000000002170 l    d  .plt.got	0000000000000000              .plt.got
0000000000002180 l    d  .text	0000000000000000              .text
00000000000026b4 l    d  .fini	0000000000000000              .fini
0000000000003000 l    d  .rodata	0000000000000000              .rodata
00000000000031dc l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000003240 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000004db8 l    d  .init_array	0000000000000000              .init_array
0000000000004dc0 l    d  .fini_array	0000000000000000              .fini_array
0000000000004dc8 l    d  .dynamic	0000000000000000              .dynamic
0000000000004fd8 l    d  .got	0000000000000000              .got
0000000000005000 l    d  .got.plt	0000000000000000              .got.plt
00000000000050b8 l    d  .data	0000000000000000              .data
00000000000050e0 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000021b0 l     F .text	0000000000000000              deregister_tm_clones
00000000000021e0 l     F .text	0000000000000000              register_tm_clones
0000000000002220 l     F .text	0000000000000000              __do_global_dtors_aux
000000000000526a l     O .bss	0000000000000001              completed.7325
0000000000004dc0 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000002260 l     F .text	0000000000000000              frame_dummy
0000000000004db8 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              b~add_int.adb
00000000000050ca l     O .data	0000000000000001              ada_main__is_elaborated
00000000000031d8 l     O .rodata	0000000000000001              ada_main__local_priority_specific_dispatching
00000000000031d9 l     O .rodata	0000000000000001              ada_main__local_interrupt_states
0000000000005280 l     O .bss	0000000000002840              ada_main__sec_default_sized_stacks
0000000000000000 l    df *ABS*	0000000000000000              add_int.adb
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000033ec l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
00000000000031dc l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000005000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000004dc0 l       .init_array	0000000000000000              __init_array_end
0000000000004db8 l       .init_array	0000000000000000              __init_array_start
0000000000004dc8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000002000 l     F .init	0000000000000000              _init
00000000000050b8  w      .data	0000000000000000              data_start
0000000000003094 g     O .rodata	0000000000000004              system__parametersS
00000000000050e0 g     O .bss	0000000000000001              __gl_task_dispatching_policy
0000000000000000       F *UND*	0000000000000000              interfaces__c___elabs
00000000000031ac g     O .rodata	0000000000000004              system__val_utilS
0000000000005100 g     O .bss	0000000000000004              __gnat_default_ss_size
0000000000003144 g     O .rodata	0000000000000004              ada__strings__maps__constantsS
00000000000030a8 g     O .rodata	0000000000000004              system__stack_checkingB
0000000000005104 g     O .bss	0000000000000002              system__os_lib_E
0000000000003188 g     O .rodata	0000000000000004              system__stringsB
000000000000305c g     O .rodata	0000000000000004              gnat__ioS
00000000000026b0 g     F .text	0000000000000001              __libc_csu_fini
0000000000003148 g     O .rodata	0000000000000004              system__address_imageB
0000000000005108 g     O .bss	0000000000000002              ada__containers_E
0000000000002180 g     F .text	000000000000002b              _start
0000000000003180 g     O .rodata	0000000000000004              system__case_utilB
000000000000262a g     F .text	000000000000001c              _ada_add_int
0000000000003158 g     O .rodata	0000000000000004              system__ioB
00000000000025f6 g     F .text	0000000000000033              ada_main___elabb
0000000000000000       F *UND*	0000000000000000              __gnat_finalize
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000003090 g     O .rodata	0000000000000004              system__parametersB
0000000000003038 g     O .rodata	000000000000000d              __gnat_ada_main_program_name
000000000000319c g     O .rodata	0000000000000004              system__val_lliS
00000000000030cc g     O .rodata	0000000000000004              system__exceptions_debugS
0000000000003150 g     O .rodata	0000000000000004              system__img_unsB
0000000000005120 g     O .bss	0000000000000002              system__soft_links_E
0000000000003128 g     O .rodata	0000000000000004              ada__characters__latin_1S
0000000000005140 g     O .bss	0000000000000002              system__traceback__symbolic_E
0000000000003098 g     O .rodata	0000000000000004              system__storage_elementsB
00000000000026b4 g     F .fini	0000000000000000              .hidden _fini
0000000000003054 g     O .rodata	0000000000000004              gnatS
0000000000003048 g     O .rodata	0000000000000004              add_intB
00000000000030a0 g     O .rodata	0000000000000004              system__soft_links__initializeB
0000000000000000       F *UND*	0000000000000000              system__soft_links__initialize___elabb
000000000000304c g     O .rodata	0000000000000004              system__standard_libraryB
0000000000000000       F *UND*	0000000000000000              system__os_lib___elabb
0000000000003104 g     O .rodata	0000000000000004              interfaces__cS
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000003134 g     O .rodata	0000000000000004              ada__strings__mapsS
000000000000315c g     O .rodata	0000000000000004              system__ioS
0000000000005150 g     O .bss	0000000000000008              gnat_envp
00000000000030d0 g     O .rodata	0000000000000004              system__img_intB
00000000000031d4 g     O .rodata	0000000000000004              system__wch_jisS
0000000000003084 g     O .rodata	0000000000000004              system__soft_linksS
0000000000003110 g     O .rodata	0000000000000004              system__crtlS
0000000000003074 g     O .rodata	0000000000000004              adaS
0000000000003140 g     O .rodata	0000000000000004              system__unsigned_typesS
0000000000003078 g     O .rodata	0000000000000004              ada__exceptions__last_chance_handlerB
00000000000030bc g     O .rodata	0000000000000004              system__exceptionsS
0000000000003070 g     O .rodata	0000000000000004              ada__exceptionsS
00000000000031a8 g     O .rodata	0000000000000004              system__val_utilB
0000000000005158 g     O .bss	0000000000000008              __gl_interrupt_states
000000000000316c g     O .rodata	0000000000000004              system__mmap__os_interfaceB
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000003000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000000       F *UND*	0000000000000000              ada__strings__maps___elabs
0000000000005160 g     O .bss	0000000000000008              __gnat_finalize_library_objects
0000000000005168 g     O .bss	0000000000000002              system__soft_links__initialize_E
0000000000000000       F *UND*	0000000000000000              ada__containers___elabs
0000000000003160 g     O .rodata	0000000000000004              system__mmapB
0000000000003168 g     O .rodata	0000000000000004              ada__io_exceptionsS
00000000000030dc g     O .rodata	0000000000000004              system__tracebackS
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
00000000000050b8 g       .data	0000000000000000              __data_start
000000000000317c g     O .rodata	0000000000000004              system__os_libS
0000000000000000       F *UND*	0000000000000000              system__exceptions___elabs
0000000000000000       F *UND*	0000000000000000              system__exception_table___elabb
0000000000005180 g     O .bss	0000000000000002              ada__io_exceptions_E
000000000000310c g     O .rodata	0000000000000004              system__bounded_stringsS
0000000000003064 g     O .rodata	0000000000000004              system__memoryB
0000000000000000       F *UND*	0000000000000000              system__standard_library__adafinal
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000030c8 g     O .rodata	0000000000000004              system__exceptions_debugB
0000000000002344 g     F .text	0000000000000029              adafinal
00000000000030f4 g     O .rodata	0000000000000004              ada__exceptions__tracebackB
00000000000031a0 g     O .rodata	0000000000000004              system__val_lluB
0000000000003178 g     O .rodata	0000000000000004              system__os_libB
0000000000000000       F *UND*	0000000000000000              __gnat_initialize
00000000000031b8 g     O .rodata	0000000000000004              system__wch_conB
0000000000005184 g     O .bss	0000000000000004              __gnat_binder_ss_count
0000000000003118 g     O .rodata	0000000000000004              system__dwarf_linesS
00000000000031c4 g     O .rodata	0000000000000004              system__wch_stwS
000000000000313c g     O .rodata	0000000000000004              system__bit_opsS
000000000000236e g     F .text	0000000000000222              adainit
00000000000050d0 g     O .data	0000000000000000              .hidden __TMC_END__
00000000000030b0 g     O .rodata	0000000000000004              system__exception_tableB
0000000000000000       F *UND*	0000000000000000              system__object_reader___elabs
0000000000000000       F *UND*	0000000000000000              __gnat_runtime_finalize
0000000000005188 g     O .bss	0000000000000004              __gl_main_cpu
00000000000050c0 g     O .data	0000000000000000              .hidden __dso_handle
0000000000005190 g     O .bss	0000000000000008              __gnat_default_ss_pool
00000000000030d4 g     O .rodata	0000000000000004              system__img_intS
000000000000308c g     O .rodata	0000000000000004              system__secondary_stackS
00000000000031cc g     O .rodata	0000000000000004              system__wch_cnvS
0000000000002650 g     F .text	000000000000005d              __libc_csu_init
00000000000030c4 g     O .rodata	0000000000000004              system__exceptions__machineS
0000000000000000       F *UND*	0000000000000000              system__soft_links___elabs
0000000000003068 g     O .rodata	0000000000000004              system__memoryS
0000000000005198 g     O .bss	0000000000000001              __gl_locking_policy
0000000000003198 g     O .rodata	0000000000000004              system__val_lliB
00000000000030e0 g     O .rodata	0000000000000004              system__traceback_entriesB
00000000000051a0 g     O .bss	0000000000000004              __gl_time_slice_val
00000000000030f0 g     O .rodata	0000000000000004              ada__containersS
00000000000051a8 g     O .bss	0000000000000004              gnat_exit_status
0000000000003130 g     O .rodata	0000000000000004              ada__strings__mapsB
00000000000051ac g     O .bss	0000000000000004              __gl_leap_seconds_support
000000000000307c g     O .rodata	0000000000000004              ada__exceptions__last_chance_handlerS
00000000000051b0 g     O .bss	0000000000000004              __gl_unreserve_all_interrupts
0000000000003164 g     O .rodata	0000000000000004              system__mmapS
00000000000031a4 g     O .rodata	0000000000000004              system__val_lluS
0000000000003080 g     O .rodata	0000000000000004              system__soft_linksB
0000000000002266 g     F .text	00000000000000de              ada_main__Tsec_default_sized_stacksBIP
000000000000306c g     O .rodata	0000000000000004              ada__exceptionsB
000000000000311c g     O .rodata	0000000000000004              ada__charactersS
00000000000050cb g       .bss	0000000000000000              __bss_start
00000000000030fc g     O .rodata	0000000000000004              interfacesS
0000000000000000       F *UND*	0000000000000000              ada__strings__maps__constants___elabs
0000000000003108 g     O .rodata	0000000000000004              system__bounded_stringsB
000000000000309c g     O .rodata	0000000000000004              system__storage_elementsS
0000000000003114 g     O .rodata	0000000000000004              system__dwarf_linesB
00000000000051c0 g     O .bss	0000000000000002              system__dwarf_lines_E
00000000000051c2 g     O .bss	0000000000000001              __gl_wc_encoding
00000000000030ac g     O .rodata	0000000000000004              system__stack_checkingS
0000000000003058 g     O .rodata	0000000000000004              gnat__ioB
00000000000050c8 g     O .data	0000000000000002              ada_main_E
00000000000030d8 g     O .rodata	0000000000000004              system__tracebackB
0000000000003020 g     O .rodata	0000000000000014              __gnat_version
00000000000031b0 g     O .rodata	0000000000000004              system__exception_tracesB
00000000000051c4 g     O .bss	0000000000000002              ada__strings_E
00000000000031c8 g     O .rodata	0000000000000004              system__wch_cnvB
0000000000003138 g     O .rodata	0000000000000004              system__bit_opsB
0000000000003174 g     O .rodata	0000000000000004              system__mmap__unixS
0000000000003120 g     O .rodata	0000000000000004              ada__characters__handlingB
000000000000318c g     O .rodata	0000000000000004              system__stringsS
00000000000051c8 g     O .bss	0000000000000008              gnat_argv
0000000000000000       F *UND*	0000000000000000              system__traceback__symbolic___elabb
00000000000051d0 g     O .bss	0000000000000002              interfaces__c_E
00000000000030b4 g     O .rodata	0000000000000004              system__exception_tableS
0000000000007ac0 g       .bss	0000000000000000              _end
00000000000030c0 g     O .rodata	0000000000000004              system__exceptions__machineB
00000000000031b4 g     O .rodata	0000000000000004              system__exception_tracesS
000000000000314c g     O .rodata	0000000000000004              system__address_imageS
00000000000030b8 g     O .rodata	0000000000000004              system__exceptionsB
0000000000003088 g     O .rodata	0000000000000004              system__secondary_stackB
0000000000000000       F *UND*	0000000000000000              system__dwarf_lines___elabs
00000000000051d2 g     O .bss	0000000000000001              __gl_queuing_policy
00000000000031bc g     O .rodata	0000000000000004              system__wch_conS
0000000000000000       F *UND*	0000000000000000              ada__io_exceptions___elabs
00000000000051e0 g     O .bss	0000000000000004              __gl_num_specific_dispatching
00000000000031c0 g     O .rodata	0000000000000004              system__wch_stwB
00000000000051f0 g     O .bss	0000000000000004              __gl_main_priority
0000000000000000       F *UND*	0000000000000000              system__secondary_stack__ss_stackIP
00000000000051f8 g     O .bss	0000000000000008              __gl_priority_specific_dispatching
00000000000030e4 g     O .rodata	0000000000000004              system__traceback_entriesS
0000000000005200 g     O .bss	0000000000000002              system__object_reader_E
0000000000005202 g     O .bss	0000000000000002              system__exceptions_E
0000000000005220 g     O .bss	0000000000000004              __gl_detect_blocking
00000000000030f8 g     O .rodata	0000000000000004              ada__exceptions__tracebackS
0000000000005240 g     O .bss	0000000000000004              gnat_argc
0000000000005250 g     O .bss	0000000000000004              __gl_num_interrupt_states
000000000000312c g     O .rodata	0000000000000004              ada__stringsS
00000000000030ec g     O .rodata	0000000000000004              system__traceback__symbolicS
00000000000050cb g       .data	0000000000000000              _edata
00000000000030a4 g     O .rodata	0000000000000004              system__soft_links__initializeS
0000000000005258 g     O .bss	0000000000000002              system__exception_table_E
0000000000003170 g     O .rodata	0000000000000004              system__mmap__os_interfaceS
0000000000000000       F *UND*	0000000000000000              ada__strings___elabs
0000000000005260 g     O .bss	0000000000000004              __gl_default_stack_size
0000000000000000       F *UND*	0000000000000000              __gnat_runtime_initialize
0000000000003154 g     O .rodata	0000000000000004              system__img_unsS
0000000000005264 g     O .bss	0000000000000002              ada__strings__maps__constants_E
0000000000003184 g     O .rodata	0000000000000004              system__case_utilS
0000000000003100 g     O .rodata	0000000000000004              interfaces__cB
0000000000003060 g     O .rodata	0000000000000004              systemS
00000000000031d0 g     O .rodata	0000000000000004              system__wch_jisB
0000000000003124 g     O .rodata	0000000000000004              ada__characters__handlingS
00000000000030e8 g     O .rodata	0000000000000004              system__traceback__symbolicB
0000000000003190 g     O .rodata	0000000000000004              system__object_readerB
0000000000002590 g     F .text	0000000000000065              main
0000000000003194 g     O .rodata	0000000000000004              system__object_readerS
0000000000003050 g     O .rodata	0000000000000004              system__standard_libraryS
0000000000005268 g     O .bss	0000000000000002              ada__strings__maps_E


Contents of section .interp:
 02a8 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 02b8 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 02c4 04000000 10000000 01000000 474e5500  ............GNU.
 02d4 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 02e4 04000000 14000000 03000000 474e5500  ............GNU.
 02f4 257d151a f318df54 0f8a638f a5c634f8  %}.....T..c...4.
 0304 508c8bbe                             P...            
Contents of section .gnu.hash:
 0308 25000000 19000000 04000000 08000000  %...............
 0318 420c00e9 d000220c 5212c300 9a080080  B.....".R.......
 0328 f42b3040 0a81a120 0140b100 e6c06082  .+0@... .@....`.
 0338 19000000 1b000000 00000000 00000000  ................
 0348 1d000000 1e000000 20000000 00000000  ........ .......
 0358 23000000 25000000 00000000 28000000  #...%.......(...
 0368 29000000 2b000000 00000000 2d000000  )...+.......-...
 0378 00000000 00000000 2f000000 30000000  ......../...0...
 0388 31000000 32000000 00000000 34000000  1...2.......4...
 0398 00000000 35000000 36000000 37000000  ....5...6...7...
 03a8 3a000000 3b000000 00000000 00000000  :...;...........
 03b8 00000000 00000000 3d000000 3e000000  ........=...>...
 03c8 00000000 d065ce6d 61a7ba84 6481301e  .....e.ma...d.0.
 03d8 0b1d157a e1d49047 061f3304 f7000156  ...z...G..3....V
 03e8 b021de73 44a75bb8 cfb5a5cc 6ad15c9b  .!.sD.[.....j.\.
 03f8 83451616 a8fdd790 0a24cd94 4756e575  .E.......$..GV.u
 0408 4d57355e 8646cf94 af94dc73 48d06fc5  MW5^.F.....sH.o.
 0418 89485434 8a1e8361 d7ef7db0 3b8a7ff5  .HT4...a..}.;...
 0428 e13f4262 e3a6e2b5 62bf8495 8d3525a3  .?Bb....b....5%.
 0438 35664954 95fded32 85a86bdd 18c18f85  5fIT...2..k.....
 0448 b482205b b7e3d51f 1f24cd94 d43937df  .. [.....$...97.
 0458 efe72040 1ba7c1a2 3b31857a           .. @....;1.z    
Contents of section .dynsym:
 0468 00000000 00000000 00000000 00000000  ................
 0478 00000000 00000000 39040000 12000000  ........9.......
 0488 00000000 00000000 00000000 00000000  ................
 0498 5d020000 12000000 00000000 00000000  ]...............
 04a8 00000000 00000000 10000000 20000000  ............ ...
 04b8 00000000 00000000 00000000 00000000  ................
 04c8 d1020000 12000000 00000000 00000000  ................
 04d8 00000000 00000000 b7010000 12000000  ................
 04e8 00000000 00000000 00000000 00000000  ................
 04f8 e5050000 12000000 00000000 00000000  ................
 0508 00000000 00000000 1f000000 20000000  ............ ...
 0518 00000000 00000000 00000000 00000000  ................
 0528 79010000 12000000 00000000 00000000  y...............
 0538 00000000 00000000 7b030000 12000000  ........{.......
 0548 00000000 00000000 00000000 00000000  ................
 0558 3b000000 20000000 00000000 00000000  ;... ...........
 0568 00000000 00000000 66040000 12000000  ........f.......
 0578 00000000 00000000 00000000 00000000  ................
 0588 1e050000 12000000 00000000 00000000  ................
 0598 00000000 00000000 ac000000 12000000  ................
 05a8 00000000 00000000 00000000 00000000  ................
 05b8 27040000 12000000 00000000 00000000  '...............
 05c8 00000000 00000000 3f020000 12000000  ........?.......
 05d8 00000000 00000000 00000000 00000000  ................
 05e8 3d030000 12000000 00000000 00000000  =...............
 05f8 00000000 00000000 3e050000 12000000  ........>.......
 0608 00000000 00000000 00000000 00000000  ................
 0618 72000000 12000000 00000000 00000000  r...............
 0628 00000000 00000000 cf000000 12000000  ................
 0638 00000000 00000000 00000000 00000000  ................
 0648 21030000 12000000 00000000 00000000  !...............
 0658 00000000 00000000 d9030000 12000000  ................
 0668 00000000 00000000 00000000 00000000  ................
 0678 e3010000 12000000 00000000 00000000  ................
 0688 00000000 00000000 66030000 12000000  ........f.......
 0698 00000000 00000000 00000000 00000000  ................
 06a8 d8040000 12000000 00000000 00000000  ................
 06b8 00000000 00000000 d6050000 22000000  ............"...
 06c8 00000000 00000000 00000000 00000000  ................
 06d8 b7020000 11001900 ac510000 00000000  .........Q......
 06e8 04000000 00000000 55000000 11001900  ........U.......
 06f8 e0500000 00000000 01000000 00000000  .P..............
 0708 65010000 11001900 98510000 00000000  e........Q......
 0718 01000000 00000000 45010000 11001900  ........E.......
 0728 64520000 00000000 02000000 00000000  dR..............
 0738 ce010000 11001900 80510000 00000000  .........Q......
 0748 02000000 00000000 a2020000 11001900  ................
 0758 20520000 00000000 04000000 00000000   R..............
 0768 4f040000 11001900 00510000 00000000  O........Q......
 0778 04000000 00000000 f8020000 11001900  ................
 0788 04510000 00000000 02000000 00000000  .Q..............
 0798 ac040000 11001900 02520000 00000000  .........R......
 07a8 02000000 00000000 09040000 11001900  ................
 07b8 b0510000 00000000 04000000 00000000  .Q..............
 07c8 93030000 11001900 d2510000 00000000  .........Q......
 07d8 01000000 00000000 f4030000 11001900  ................
 07e8 20510000 00000000 02000000 00000000   Q..............
 07f8 98000000 11001900 40520000 00000000  ........@R......
 0808 04000000 00000000 81040000 11001900  ................
 0818 68520000 00000000 02000000 00000000  hR..............
 0828 07020000 11001900 40510000 00000000  ........@Q......
 0838 02000000 00000000 f3000000 11001900  ................
 0848 50510000 00000000 08000000 00000000  PQ..............
 0858 6d020000 11001900 90510000 00000000  m........Q......
 0868 08000000 00000000 94010000 11001900  ................
 0878 f8510000 00000000 08000000 00000000  .Q..............
 0888 09030000 11001900 60520000 00000000  ........`R......
 0898 04000000 00000000 55030000 11001900  ........U.......
 08a8 a8510000 00000000 04000000 00000000  .Q..............
 08b8 a4050000 11001900 c4510000 00000000  .........Q......
 08c8 02000000 00000000 2f010000 11001900  ......../.......
 08d8 c0510000 00000000 02000000 00000000  .Q..............
 08e8 84020000 11001900 88510000 00000000  .........Q......
 08f8 04000000 00000000 f2040000 11001900  ................
 0908 58520000 00000000 02000000 00000000  XR..............
 0918 0c050000 11001900 08510000 00000000  .........Q......
 0928 02000000 00000000 c1040000 11001900  ................
 0938 84510000 00000000 04000000 00000000  .Q..............
 0948 96040000 11001900 58510000 00000000  ........XQ......
 0958 08000000 00000000 79050000 11001900  ........y.......
 0968 00520000 00000000 02000000 00000000  .R..............
 0978 25020000 11001900 50520000 00000000  %.......PR......
 0988 04000000 00000000 a7030000 11001900  ................
 0998 68510000 00000000 02000000 00000000  hQ..............
 09a8 c8030000 11001900 c2510000 00000000  .........Q......
 09b8 01000000 00000000 fd000000 11001900  ................
 09c8 e0510000 00000000 04000000 00000000  .Q..............
 09d8 a2000000 11001900 c8510000 00000000  .........Q......
 09e8 08000000 00000000 1b010000 11001900  ................
 09f8 a0510000 00000000 04000000 00000000  .Q..............
 0a08 92020000 11001900 d0510000 00000000  .........Q......
 0a18 02000000 00000000 91050000 11001900  ................
 0a28 f0510000 00000000 04000000 00000000  .Q..............
 0a38 59050000 11001900 60510000 00000000  Y.......`Q......
 0a48 08000000 00000000                    ........        
Contents of section .dynstr:
 0a50 006c6962 676e6174 2d382e73 6f2e3100  .libgnat-8.so.1.
 0a60 5f5f676d 6f6e5f73 74617274 5f5f005f  __gmon_start__._
 0a70 49544d5f 64657265 67697374 6572544d  ITM_deregisterTM
 0a80 436c6f6e 65546162 6c65005f 49544d5f  CloneTable._ITM_
 0a90 72656769 73746572 544d436c 6f6e6554  registerTMCloneT
 0aa0 61626c65 005f5f67 6c5f7461 736b5f64  able.__gl_task_d
 0ab0 69737061 74636869 6e675f70 6f6c6963  ispatching_polic
 0ac0 79006164 615f5f73 7472696e 67735f5f  y.ada__strings__
 0ad0 6d617073 5f5f636f 6e737461 6e74735f  maps__constants_
 0ae0 5f5f656c 61627300 676e6174 5f617267  __elabs.gnat_arg
 0af0 6300676e 61745f61 72677600 73797374  c.gnat_argv.syst
 0b00 656d5f5f 7374616e 64617264 5f6c6962  em__standard_lib
 0b10 72617279 5f5f6164 6166696e 616c0073  rary__adafinal.s
 0b20 79737465 6d5f5f74 72616365 6261636b  ystem__traceback
 0b30 5f5f7379 6d626f6c 69635f5f 5f656c61  __symbolic___ela
 0b40 62620067 6e61745f 656e7670 005f5f67  bb.gnat_envp.__g
 0b50 6c5f6e75 6d5f7370 65636966 69635f64  l_num_specific_d
 0b60 69737061 74636869 6e67005f 5f676c5f  ispatching.__gl_
 0b70 74696d65 5f736c69 63655f76 616c0073  time_slice_val.s
 0b80 79737465 6d5f5f64 77617266 5f6c696e  ystem__dwarf_lin
 0b90 65735f45 00616461 5f5f7374 72696e67  es_E.ada__string
 0ba0 735f5f6d 6170735f 5f636f6e 7374616e  s__maps__constan
 0bb0 74735f45 005f5f67 6c5f6c6f 636b696e  ts_E.__gl_lockin
 0bc0 675f706f 6c696379 00616461 5f5f7374  g_policy.ada__st
 0bd0 72696e67 735f5f6d 6170735f 5f5f656c  rings__maps___el
 0be0 61627300 5f5f676c 5f707269 6f726974  abs.__gl_priorit
 0bf0 795f7370 65636966 69635f64 69737061  y_specific_dispa
 0c00 74636869 6e670073 79737465 6d5f5f6f  tching.system__o
 0c10 735f6c69 625f5f5f 656c6162 62006164  s_lib___elabb.ad
 0c20 615f5f69 6f5f6578 63657074 696f6e73  a__io_exceptions
 0c30 5f450073 79737465 6d5f5f73 65636f6e  _E.system__secon
 0c40 64617279 5f737461 636b5f5f 73735f73  dary_stack__ss_s
 0c50 7461636b 49500073 79737465 6d5f5f74  tackIP.system__t
 0c60 72616365 6261636b 5f5f7379 6d626f6c  raceback__symbol
 0c70 69635f45 005f5f67 6c5f6e75 6d5f696e  ic_E.__gl_num_in
 0c80 74657272 7570745f 73746174 65730073  terrupt_states.s
 0c90 79737465 6d5f5f6f 626a6563 745f7265  ystem__object_re
 0ca0 61646572 5f5f5f65 6c616273 005f5f67  ader___elabs.__g
 0cb0 6e61745f 66696e61 6c697a65 005f5f67  nat_finalize.__g
 0cc0 6e61745f 64656661 756c745f 73735f70  nat_default_ss_p
 0cd0 6f6f6c00 5f5f676c 5f6d6169 6e5f6370  ool.__gl_main_cp
 0ce0 7500696e 74657266 61636573 5f5f635f  u.interfaces__c_
 0cf0 45005f5f 676c5f64 65746563 745f626c  E.__gl_detect_bl
 0d00 6f636b69 6e67005f 5f676c5f 6c656170  ocking.__gl_leap
 0d10 5f736563 6f6e6473 5f737570 706f7274  _seconds_support
 0d20 00737973 74656d5f 5f736f66 745f6c69  .system__soft_li
 0d30 6e6b735f 5f696e69 7469616c 697a655f  nks__initialize_
 0d40 5f5f656c 61626200 73797374 656d5f5f  __elabb.system__
 0d50 6f735f6c 69625f45 005f5f67 6c5f6465  os_lib_E.__gl_de
 0d60 6661756c 745f7374 61636b5f 73697a65  fault_stack_size
 0d70 00737973 74656d5f 5f647761 72665f6c  .system__dwarf_l
 0d80 696e6573 5f5f5f65 6c616273 005f5f67  ines___elabs.__g
 0d90 6e61745f 72756e74 696d655f 66696e61  nat_runtime_fina
 0da0 6c697a65 00676e61 745f6578 69745f73  lize.gnat_exit_s
 0db0 74617475 73006164 615f5f73 7472696e  tatus.ada__strin
 0dc0 67735f5f 5f656c61 62730061 64615f5f  gs___elabs.ada__
 0dd0 636f6e74 61696e65 72735f5f 5f656c61  containers___ela
 0de0 6273005f 5f676c5f 71756575 696e675f  bs.__gl_queuing_
 0df0 706f6c69 63790073 79737465 6d5f5f73  policy.system__s
 0e00 6f66745f 6c696e6b 735f5f69 6e697469  oft_links__initi
 0e10 616c697a 655f4500 5f5f676c 5f77635f  alize_E.__gl_wc_
 0e20 656e636f 64696e67 00616461 5f5f696f  encoding.ada__io
 0e30 5f657863 65707469 6f6e735f 5f5f656c  _exceptions___el
 0e40 61627300 73797374 656d5f5f 736f6674  abs.system__soft
 0e50 5f6c696e 6b735f45 005f5f67 6c5f756e  _links_E.__gl_un
 0e60 72657365 7276655f 616c6c5f 696e7465  reserve_all_inte
 0e70 72727570 7473005f 5f676e61 745f696e  rrupts.__gnat_in
 0e80 69746961 6c697a65 00696e74 65726661  itialize.interfa
 0e90 6365735f 5f635f5f 5f656c61 6273005f  ces__c___elabs._
 0ea0 5f676e61 745f6465 6661756c 745f7373  _gnat_default_ss
 0eb0 5f73697a 65007379 7374656d 5f5f6578  _size.system__ex
 0ec0 63657074 696f6e73 5f5f5f65 6c616273  ceptions___elabs
 0ed0 00616461 5f5f7374 72696e67 735f5f6d  .ada__strings__m
 0ee0 6170735f 45005f5f 676c5f69 6e746572  aps_E.__gl_inter
 0ef0 72757074 5f737461 74657300 73797374  rupt_states.syst
 0f00 656d5f5f 65786365 7074696f 6e735f45  em__exceptions_E
 0f10 005f5f67 6e61745f 62696e64 65725f73  .__gnat_binder_s
 0f20 735f636f 756e7400 5f5f676e 61745f72  s_count.__gnat_r
 0f30 756e7469 6d655f69 6e697469 616c697a  untime_initializ
 0f40 65007379 7374656d 5f5f6578 63657074  e.system__except
 0f50 696f6e5f 7461626c 655f4500 6164615f  ion_table_E.ada_
 0f60 5f636f6e 7461696e 6572735f 45007379  _containers_E.sy
 0f70 7374656d 5f5f6578 63657074 696f6e5f  stem__exception_
 0f80 7461626c 655f5f5f 656c6162 62007379  table___elabb.sy
 0f90 7374656d 5f5f736f 66745f6c 696e6b73  stem__soft_links
 0fa0 5f5f5f65 6c616273 005f5f67 6e61745f  ___elabs.__gnat_
 0fb0 66696e61 6c697a65 5f6c6962 72617279  finalize_library
 0fc0 5f6f626a 65637473 00737973 74656d5f  _objects.system_
 0fd0 5f6f626a 6563745f 72656164 65725f45  _object_reader_E
 0fe0 005f5f67 6c5f6d61 696e5f70 72696f72  .__gl_main_prior
 0ff0 69747900 6164615f 5f737472 696e6773  ity.ada__strings
 1000 5f45006c 6962646c 2e736f2e 32006c69  _E.libdl.so.2.li
 1010 62676363 5f732e73 6f2e3100 6c696263  bgcc_s.so.1.libc
 1020 2e736f2e 36005f5f 6378615f 66696e61  .so.6.__cxa_fina
 1030 6c697a65 005f5f6c 6962635f 73746172  lize.__libc_star
 1040 745f6d61 696e0047 4c494243 5f322e32  t_main.GLIBC_2.2
 1050 2e3500                               .5.             
Contents of section .gnu.version:
 1054 00000000 00000000 00000000 02000000  ................
 1064 00000000 00000000 00000000 00000000  ................
 1074 00000000 00000000 00000000 00000000  ................
 1084 00000200 00000000 00000000 00000000  ................
 1094 00000000 00000000 00000000 00000000  ................
 10a4 00000000 00000000 00000000 00000000  ................
 10b4 00000000 00000000 00000000 00000000  ................
 10c4 00000000 00000000 00000000 0000      ..............  
Contents of section .gnu.version_r:
 10d8 01000100 cc050000 10000000 00000000  ................
 10e8 751a6909 00000200 f7050000 00000000  u.i.............
Contents of section .rela.dyn:
 10f8 b84d0000 00000000 08000000 00000000  .M..............
 1108 60220000 00000000 c04d0000 00000000  `".......M......
 1118 08000000 00000000 20220000 00000000  ........ "......
 1128 c0500000 00000000 08000000 00000000  .P..............
 1138 c0500000 00000000 d84f0000 00000000  .P.......O......
 1148 06000000 03000000 00000000 00000000  ................
 1158 e04f0000 00000000 06000000 06000000  .O..............
 1168 00000000 00000000 e84f0000 00000000  .........O......
 1178 06000000 07000000 00000000 00000000  ................
 1188 f04f0000 00000000 06000000 0a000000  .O..............
 1198 00000000 00000000 f84f0000 00000000  .........O......
 11a8 06000000 19000000 00000000 00000000  ................
 11b8 e0500000 00000000 05000000 1b000000  .P..............
 11c8 00000000 00000000 00510000 00000000  .........Q......
 11d8 05000000 20000000 00000000 00000000  .... ...........
 11e8 04510000 00000000 05000000 21000000  .Q..........!...
 11f8 00000000 00000000 08510000 00000000  .........Q......
 1208 05000000 32000000 00000000 00000000  ....2...........
 1218 20510000 00000000 05000000 25000000   Q..........%...
 1228 00000000 00000000 40510000 00000000  ........@Q......
 1238 05000000 28000000 00000000 00000000  ....(...........
 1248 50510000 00000000 05000000 29000000  PQ..........)...
 1258 00000000 00000000 58510000 00000000  ........XQ......
 1268 05000000 34000000 00000000 00000000  ....4...........
 1278 60510000 00000000 05000000 3e000000  `Q..........>...
 1288 00000000 00000000 68510000 00000000  ........hQ......
 1298 05000000 37000000 00000000 00000000  ....7...........
 12a8 80510000 00000000 05000000 1e000000  .Q..............
 12b8 00000000 00000000 84510000 00000000  .........Q......
 12c8 05000000 33000000 00000000 00000000  ....3...........
 12d8 88510000 00000000 05000000 30000000  .Q..........0...
 12e8 00000000 00000000 90510000 00000000  .........Q......
 12f8 05000000 2a000000 00000000 00000000  ....*...........
 1308 98510000 00000000 05000000 1c000000  .Q..............
 1318 00000000 00000000 a0510000 00000000  .........Q......
 1328 05000000 3b000000 00000000 00000000  ....;...........
 1338 a8510000 00000000 05000000 2d000000  .Q..........-...
 1348 00000000 00000000 ac510000 00000000  .........Q......
 1358 05000000 1a000000 00000000 00000000  ................
 1368 b0510000 00000000 05000000 23000000  .Q..........#...
 1378 00000000 00000000 c0510000 00000000  .........Q......
 1388 05000000 2f000000 00000000 00000000  ..../...........
 1398 c2510000 00000000 05000000 38000000  .Q..........8...
 13a8 00000000 00000000 c4510000 00000000  .........Q......
 13b8 05000000 2e000000 00000000 00000000  ................
 13c8 c8510000 00000000 05000000 3a000000  .Q..........:...
 13d8 00000000 00000000 d0510000 00000000  .........Q......
 13e8 05000000 3c000000 00000000 00000000  ....<...........
 13f8 d2510000 00000000 05000000 24000000  .Q..........$...
 1408 00000000 00000000 e0510000 00000000  .........Q......
 1418 05000000 39000000 00000000 00000000  ....9...........
 1428 f0510000 00000000 05000000 3d000000  .Q..........=...
 1438 00000000 00000000 f8510000 00000000  .........Q......
 1448 05000000 2b000000 00000000 00000000  ....+...........
 1458 00520000 00000000 05000000 35000000  .R..........5...
 1468 00000000 00000000 02520000 00000000  .........R......
 1478 05000000 22000000 00000000 00000000  ...."...........
 1488 20520000 00000000 05000000 1f000000   R..............
 1498 00000000 00000000 40520000 00000000  ........@R......
 14a8 05000000 26000000 00000000 00000000  ....&...........
 14b8 50520000 00000000 05000000 36000000  PR..........6...
 14c8 00000000 00000000 58520000 00000000  ........XR......
 14d8 05000000 31000000 00000000 00000000  ....1...........
 14e8 60520000 00000000 05000000 2c000000  `R..........,...
 14f8 00000000 00000000 64520000 00000000  ........dR......
 1508 05000000 1d000000 00000000 00000000  ................
 1518 68520000 00000000 05000000 27000000  hR..........'...
 1528 00000000 00000000                    ........        
Contents of section .rela.plt:
 1530 18500000 00000000 07000000 01000000  .P..............
 1540 00000000 00000000 20500000 00000000  ........ P......
 1550 07000000 02000000 00000000 00000000  ................
 1560 28500000 00000000 07000000 04000000  (P..............
 1570 00000000 00000000 30500000 00000000  ........0P......
 1580 07000000 05000000 00000000 00000000  ................
 1590 38500000 00000000 07000000 08000000  8P..............
 15a0 00000000 00000000 40500000 00000000  ........@P......
 15b0 07000000 09000000 00000000 00000000  ................
 15c0 48500000 00000000 07000000 0b000000  HP..............
 15d0 00000000 00000000 50500000 00000000  ........PP......
 15e0 07000000 0c000000 00000000 00000000  ................
 15f0 58500000 00000000 07000000 0d000000  XP..............
 1600 00000000 00000000 60500000 00000000  ........`P......
 1610 07000000 0e000000 00000000 00000000  ................
 1620 68500000 00000000 07000000 0f000000  hP..............
 1630 00000000 00000000 70500000 00000000  ........pP......
 1640 07000000 10000000 00000000 00000000  ................
 1650 78500000 00000000 07000000 11000000  xP..............
 1660 00000000 00000000 80500000 00000000  .........P......
 1670 07000000 12000000 00000000 00000000  ................
 1680 88500000 00000000 07000000 13000000  .P..............
 1690 00000000 00000000 90500000 00000000  .........P......
 16a0 07000000 14000000 00000000 00000000  ................
 16b0 98500000 00000000 07000000 15000000  .P..............
 16c0 00000000 00000000 a0500000 00000000  .........P......
 16d0 07000000 16000000 00000000 00000000  ................
 16e0 a8500000 00000000 07000000 17000000  .P..............
 16f0 00000000 00000000 b0500000 00000000  .........P......
 1700 07000000 18000000 00000000 00000000  ................
Contents of section .init:
 2000 4883ec08 488b05cd 2f000048 85c07402  H...H.../..H..t.
 2010 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 2020 ff35e22f 0000ff25 e42f0000 0f1f4000  .5./...%./....@.
 2030 ff25e22f 00006800 000000e9 e0ffffff  .%./..h.........
 2040 ff25da2f 00006801 000000e9 d0ffffff  .%./..h.........
 2050 ff25d22f 00006802 000000e9 c0ffffff  .%./..h.........
 2060 ff25ca2f 00006803 000000e9 b0ffffff  .%./..h.........
 2070 ff25c22f 00006804 000000e9 a0ffffff  .%./..h.........
 2080 ff25ba2f 00006805 000000e9 90ffffff  .%./..h.........
 2090 ff25b22f 00006806 000000e9 80ffffff  .%./..h.........
 20a0 ff25aa2f 00006807 000000e9 70ffffff  .%./..h.....p...
 20b0 ff25a22f 00006808 000000e9 60ffffff  .%./..h.....`...
 20c0 ff259a2f 00006809 000000e9 50ffffff  .%./..h.....P...
 20d0 ff25922f 0000680a 000000e9 40ffffff  .%./..h.....@...
 20e0 ff258a2f 0000680b 000000e9 30ffffff  .%./..h.....0...
 20f0 ff25822f 0000680c 000000e9 20ffffff  .%./..h..... ...
 2100 ff257a2f 0000680d 000000e9 10ffffff  .%z/..h.........
 2110 ff25722f 0000680e 000000e9 00ffffff  .%r/..h.........
 2120 ff256a2f 0000680f 000000e9 f0feffff  .%j/..h.........
 2130 ff25622f 00006810 000000e9 e0feffff  .%b/..h.........
 2140 ff255a2f 00006811 000000e9 d0feffff  .%Z/..h.........
 2150 ff25522f 00006812 000000e9 c0feffff  .%R/..h.........
 2160 ff254a2f 00006813 000000e9 b0feffff  .%J/..h.........
Contents of section .plt.got:
 2170 ff25822e 00006690                    .%....f.        
Contents of section .text:
 2180 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 2190 8d051a05 0000488d 0db30400 00488d3d  ......H......H.=
 21a0 ec030000 ff15362e 0000f40f 1f440000  ......6......D..
 21b0 488d3d19 2f000048 8d05122f 00004839  H.=./..H.../..H9
 21c0 f8741548 8b051e2e 00004885 c07409ff  .t.H......H..t..
 21d0 e00f1f80 00000000 c30f1f80 00000000  ................
 21e0 488d3de9 2e000048 8d35e22e 00004829  H.=....H.5....H)
 21f0 fe48c1fe 034889f0 48c1e83f 4801c648  .H...H..H..?H..H
 2200 d1fe7414 488b05e5 2d000048 85c07408  ..t.H...-..H..t.
 2210 ffe0660f 1f440000 c30f1f80 00000000  ..f..D..........
 2220 803d4330 00000075 2f554883 3dc62d00  .=C0...u/UH.=.-.
 2230 00004889 e5740c48 8b3d822e 0000e82d  ..H..t.H.=.....-
 2240 ffffffe8 68ffffff c6051b30 0000015d  ....h......0...]
 2250 c30f1f80 00000000 c30f1f80 00000000  ................
 2260 e97bffff ff905548 89e54155 41545348  .{....UH..AUATSH
 2270 83ec1848 89f94889 f348894d d048895d  ...H..H..H.M.H.]
 2280 d8488b4d d88b094c 63e9488b 4dd88b71  .H.M...Lc.H.M..q
 2290 04488b4d d88b0939 ce488b4d d88b7104  .H.M...9.H.M..q.
 22a0 488b4dd8 8b0939ce 7c41488b 4dd88b49  H.M...9.|AH.M..I
 22b0 044863f1 488b4dd8 8b094863 c94829ce  .Hc.H.M...Hc.H).
 22c0 4889f148 83c10148 89c8ba00 00000048  H..H...H.......H
 22d0 69f20042 0100486b c8004801 f1be0042  i..B..Hk..H....B
 22e0 010048f7 e64801d1 4889ca48 8b45d88b  ..H..H..H..H.E..
 22f0 5004488b 45d88b00 39c2488b 45d88b18  P.H.E...9.H.E...
 2300 488b45d8 448b6004 4439e37f 2b488b55  H.E.D.`.D9..+H.U
 2310 d04863c3 4c29e848 69c04028 00004801  .Hc.L).Hi.@(..H.
 2320 d0be0028 00004889 c7e812fe ffff4439  ...(..H.......D9
 2330 e3740583 c301ebd5 904883c4 185b415c  .t.......H...[A\
 2340 415d5dc3 554889e5 0fb6057b 2d000083  A]].UH.....{-...
 2350 f00184c0 7514c605 6d2d0000 00e87efd  ....u...m-....~.
 2360 ffffe849 fdffff90 eb01905d c3905548  ...I.......]..UH
 2370 89e50fb6 05512d00 0084c00f 850c0200  .....Q-.........
 2380 00c60542 2d000001 c7055e2e 0000ffff  ...B-.....^.....
 2390 ffffc705 042e0000 ffffffff c6051f2e  ................
 23a0 000062c6 05ee2d00 0020c605 212e0000  ..b...-.. ..!...
 23b0 20c60528 2d000020 488d0519 0e000048   ..(-.. H......H
 23c0 8905322e 0000c705 102e0000 00000000  ..2.............
 23d0 c705ae2d 0000ffff ffff488d 05f80d00  ...-......H.....
 23e0 00488905 702d0000 c7055e2e 00000000  .H..p-....^.....
 23f0 0000c705 b42d0000 00000000 c7051a2e  .....-..........
 2400 00000000 0000c705 502e0000 ffffffff  ........P.......
 2410 c705922d 00000000 0000e8d7 010000c7  ...-............
 2420 05d72c00 00002800 00c70551 2d000001  ..,...(....Q-...
 2430 00000048 8d05462e 00004889 054f2d00  ...H..F...H..O-.
 2440 00bf0100 0000e815 fdffff48 c7050a2d  ...........H...-
 2450 00000000 0000e895 fcffffe8 40fcffff  ............@...
 2460 0fb705f1 2d000083 c0016689 05e72d00  ....-.....f...-.
 2470 00e8bafc ffff0fb7 05032d00 0083c001  ..........-.....
 2480 668905f9 2c0000e8 c4fcffff 0fb70531  f...,..........1
 2490 2d000083 c0016689 05272d00 00e8defb  -.....f..'-.....
 24a0 ffff0fb7 055f2c00 0083c001 66890555  ....._,.....f..U
 24b0 2c0000e8 d8fbffff 0fb70543 2d000083  ,..........C-...
 24c0 c0016689 05392d00 00e882fb ffff0fb7  ..f..9-.........
 24d0 05932c00 0083c001 66890589 2c00000f  ..,.....f...,...
 24e0 b7053a2c 000083c0 01668905 302c0000  ..:,.....f..0,..
 24f0 e86bfbff ff0fb705 082c0000 83c00166  .k.......,.....f
 2500 8905fe2b 0000e865 fbffffe8 f0fbffff  ...+...e........
 2510 0fb7054d 2d000083 c0016689 05432d00  ...M-.....f..C-.
 2520 00e80afb ffff0fb7 053b2d00 0083c001  .........;-.....
 2530 66890531 2d00000f b705922c 000083c0  f..1-......,....
 2540 01668905 882c0000 e883fbff ffe8cefb  .f...,..........
 2550 ffff0fb7 05672c00 0083c001 6689055d  .....g,.....f..]
 2560 2c0000e8 a8fbffff 0fb705d1 2b000083  ,...........+...
 2570 c0016689 05c72b00 000fb705 802c0000  ..f...+......,..
 2580 83c00166 8905762c 000090eb 01905dc3  ...f..v,......].
 2590 554889e5 4883ec30 897dec48 8975e048  UH..H..0.}.H.u.H
 25a0 8955d848 8d058e0a 00004889 45f08b45  .U.H......H.E..E
 25b0 ec890589 2c000048 8b45e048 8905062c  ....,..H.E.H...,
 25c0 0000488b 45d84889 05832b00 00488d45  ..H.E.H...+..H.E
 25d0 f84889c7 e8e7faff ffe890fd ffffe847  .H.............G
 25e0 000000e8 5cfdffff e853faff ff8b05b5  ....\....S......
 25f0 2b0000c9 c3905548 89e55348 83ec0848  +.....UH..SH...H
 2600 8d057a2c 0000488d 15030a00 004889c1  ..z,..H......H..
 2610 4889d348 89d04889 cf4889c6 e845fcff  H..H..H..H...E..
 2620 ff904883 c4085b5d c3905548 89e5c745  ..H...[]..UH...E
 2630 fc030000 00c745f8 05000000 c745f408  ......E......E..
 2640 00000090 5dc3662e 0f1f8400 00000000  ....].f.........
 2650 41574989 d7415649 89f64155 4189fd41  AWI..AVI..AUA..A
 2660 544c8d25 50270000 55488d2d 50270000  TL.%P'..UH.-P'..
 2670 534c29e5 4883ec08 e883f9ff ff48c1fd  SL).H........H..
 2680 03741b31 db0f1f00 4c89fa4c 89f64489  .t.1....L..L..D.
 2690 ef41ff14 dc4883c3 014839dd 75ea4883  .A...H...H9.u.H.
 26a0 c4085b5d 415c415d 415e415f c30f1f00  ..[]A\A]A^A_....
 26b0 c3                                   .               
Contents of section .fini:
 26b4 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 3000 01000200 00000000 00000000 00000000  ................
 3010 01000000 01000000 00000000 00000000  ................
 3020 474e4154 20566572 73696f6e 3a20382e  GNAT Version: 8.
 3030 322e3000 00000000 5f616461 5f616464  2.0....._ada_add
 3040 5f696e74 00000000 fa8e6f1d f0f20f05  _int......o.....
 3050 2bf21341 f1d22afd f50281b4 43e82762  +..A..*.....C.'b
 3060 04ec3546 d8385993 308a481f cafe2ef5  ..5F.8Y.0.H.....
 3070 1c6824e8 a19d7876 edab2657 2e55e541  .h$...xv..&W.U.A
 3080 170186ae c77dcabb ed05d220 688e5dbb  .....}..... h.].
 3090 3464a136 5828a3be 9095d0ce 00a6f66b  4d.6X(.........k
 30a0 5e5b397d 2bfc9756 1e7d8341 ec878ac8  ^[9}+..V.}.A....
 30b0 01297434 46859b1b 20f04ace f281562e  .)t4F... .J...V.
 30c0 27649180 8190ad3b fc6305aa c015bf38  'd.....;.c.....8
 30d0 02882f6c c60cee44 178cdf39 c0321718  ../l...D...9.2..
 30e0 2595d49e 741a6e46 246b48c2 d16140c8  %...t.nF$kH..a@.
 30f0 287d9d17 889d1f70 755e2420 6852b55a  (}.....pu^$ hR.Z
 3100 e6259e76 af8702f6 81e665e8 1dcdc831  .%.v......e....1
 3110 29f318b0 1f736022 607e135f fa59465b  )....s`"`~._.YF[
 3120 f87d638f 54613f3b 6ab97b4b 36fad4e6  .}c.Ta?;j.{K6...
 3130 3f1adf96 ec6b521e f1b88fd6 a3e36507  ?....kR.......e.
 3140 8790b372 135ff092 2bd2d3a0 3e71d9e7  ...r._..+...>q..
 3150 bfc278ec 70ac47ed 0cc2aad7 4b1b77d8  ..x.p.G.....K.w.
 3160 efd190f7 6353447c c582d892 4aa5da0c  ....cSD|....J...
 3170 7798f282 5efe4d83 ea7a2668 5db54245  w...^.M..z&h].BE
 3180 880606d1 d3853c62 ad898e2a 91c02326  ......<b...*..#&
 3190 b4f06fef 7e49060b 54a3741a a40a11dc  ..o.~I..T.t.....
 31a0 93f3dbaf f5c74108 b200b627 fa5a95ea  ......A....'.Z..
 31b0 293fbfd7 9eccea62 17a5338c d6ce485d  )?.....b..3...H]
 31c0 40e82197 d7e25970 9c6731a8 2574ff52  @.!...Yp.g1.%t.R
 31d0 b6fde6ec 046d8fd2 0000               .....m....      
Contents of section .eh_frame_hdr:
 31dc 011b033b 60000000 0b000000 44eeffff  ...;`.......D...
 31ec ac000000 94efffff d4000000 a4efffff  ................
 31fc 7c000000 8af0ffff ec000000 68f1ffff  |...........h...
 320c 14010000 92f1ffff 34010000 b4f3ffff  ........4.......
 321c 54010000 1af4ffff 74010000 4ef4ffff  T.......t...N...
 322c 94010000 74f4ffff b4010000 d4f4ffff  ....t...........
 323c fc010000                             ....            
Contents of section .eh_frame:
 3240 14000000 00000000 017a5200 01781001  .........zR..x..
 3250 1b0c0708 90010710 14000000 1c000000  ................
 3260 20efffff 2b000000 00000000 00000000   ...+...........
 3270 14000000 00000000 017a5200 01781001  .........zR..x..
 3280 1b0c0708 90010000 24000000 1c000000  ........$.......
 3290 90edffff 50010000 000e1046 0e184a0f  ....P......F..J.
 32a0 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 32b0 14000000 44000000 b8eeffff 08000000  ....D...........
 32c0 00000000 00000000 24000000 5c000000  ........$...\...
 32d0 96efffff de000000 00410e10 8602430d  .........A....C.
 32e0 06498d03 8c048305 02d00c07 08000000  .I..............
 32f0 1c000000 84000000 4cf0ffff 29000000  ........L...)...
 3300 00410e10 8602430d 06640c07 08000000  .A....C..d......
 3310 1c000000 a4000000 56f0ffff 22020000  ........V..."...
 3320 00410e10 8602430d 06031d02 0c070800  .A....C.........
 3330 1c000000 c4000000 58f2ffff 65000000  ........X...e...
 3340 00410e10 8602430d 0602600c 07080000  .A....C...`.....
 3350 1c000000 e4000000 9ef2ffff 33000000  ............3...
 3360 00410e10 8602430d 06458303 690c0708  .A....C..E..i...
 3370 1c000000 04010000 b2f2ffff 1c000000  ................
 3380 00410e10 8602430d 06570c07 08000000  .A....C..W......
 3390 44000000 24010000 b8f2ffff 5d000000  D...$.......]...
 33a0 00420e10 8f02450e 188e0345 0e208d04  .B....E....E. ..
 33b0 450e288c 05480e30 8606480e 38830747  E.(..H.0..H.8..G
 33c0 0e406a0e 38410e30 410e2842 0e20420e  .@j.8A.0A.(B. B.
 33d0 18420e10 420e0800 10000000 6c010000  .B..B.......l...
 33e0 d0f2ffff 01000000 00000000 00000000  ................
Contents of section .init_array:
 4db8 60220000 00000000                    `"......        
Contents of section .fini_array:
 4dc0 20220000 00000000                     "......        
Contents of section .dynamic:
 4dc8 01000000 00000000 01000000 00000000  ................
 4dd8 01000000 00000000 b3050000 00000000  ................
 4de8 01000000 00000000 be050000 00000000  ................
 4df8 01000000 00000000 cc050000 00000000  ................
 4e08 0c000000 00000000 00200000 00000000  ......... ......
 4e18 0d000000 00000000 b4260000 00000000  .........&......
 4e28 19000000 00000000 b84d0000 00000000  .........M......
 4e38 1b000000 00000000 08000000 00000000  ................
 4e48 1a000000 00000000 c04d0000 00000000  .........M......
 4e58 1c000000 00000000 08000000 00000000  ................
 4e68 f5feff6f 00000000 08030000 00000000  ...o............
 4e78 05000000 00000000 500a0000 00000000  ........P.......
 4e88 06000000 00000000 68040000 00000000  ........h.......
 4e98 0a000000 00000000 03060000 00000000  ................
 4ea8 0b000000 00000000 18000000 00000000  ................
 4eb8 15000000 00000000 00000000 00000000  ................
 4ec8 03000000 00000000 00500000 00000000  .........P......
 4ed8 02000000 00000000 e0010000 00000000  ................
 4ee8 14000000 00000000 07000000 00000000  ................
 4ef8 17000000 00000000 30150000 00000000  ........0.......
 4f08 07000000 00000000 f8100000 00000000  ................
 4f18 08000000 00000000 38040000 00000000  ........8.......
 4f28 09000000 00000000 18000000 00000000  ................
 4f38 fbffff6f 00000000 00000008 00000000  ...o............
 4f48 feffff6f 00000000 d8100000 00000000  ...o............
 4f58 ffffff6f 00000000 01000000 00000000  ...o............
 4f68 f0ffff6f 00000000 54100000 00000000  ...o....T.......
 4f78 f9ffff6f 00000000 03000000 00000000  ...o............
 4f88 00000000 00000000 00000000 00000000  ................
 4f98 00000000 00000000 00000000 00000000  ................
 4fa8 00000000 00000000 00000000 00000000  ................
 4fb8 00000000 00000000 00000000 00000000  ................
 4fc8 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 4fd8 00000000 00000000 00000000 00000000  ................
 4fe8 00000000 00000000 00000000 00000000  ................
 4ff8 00000000 00000000                    ........        
Contents of section .got.plt:
 5000 c84d0000 00000000 00000000 00000000  .M..............
 5010 00000000 00000000 36200000 00000000  ........6 ......
 5020 46200000 00000000 56200000 00000000  F ......V ......
 5030 66200000 00000000 76200000 00000000  f ......v ......
 5040 86200000 00000000 96200000 00000000  . ....... ......
 5050 a6200000 00000000 b6200000 00000000  . ....... ......
 5060 c6200000 00000000 d6200000 00000000  . ....... ......
 5070 e6200000 00000000 f6200000 00000000  . ....... ......
 5080 06210000 00000000 16210000 00000000  .!.......!......
 5090 26210000 00000000 36210000 00000000  &!......6!......
 50a0 46210000 00000000 56210000 00000000  F!......V!......
 50b0 66210000 00000000                    f!......        
Contents of section .data:
 50b8 00000000 00000000 c0500000 00000000  .........P......
 50c8 000000                               ...             
Contents of section .comment:
 0000 4743433a 20284465 6269616e 20382e32  GCC: (Debian 8.2
 0010 2e302d31 34292038 2e322e30 00        .0-14) 8.2.0.   

Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 2aa:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 2b1:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 2b6:	78 2d                	js     2e5 <_init-0x1d1b>
 2b8:	78 38                	js     2f2 <_init-0x1d0e>
 2ba:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 2c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2c1:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

00000000000002c4 <.note.ABI-tag>:
 2c4:	04 00                	add    al,0x0
 2c6:	00 00                	add    BYTE PTR [rax],al
 2c8:	10 00                	adc    BYTE PTR [rax],al
 2ca:	00 00                	add    BYTE PTR [rax],al
 2cc:	01 00                	add    DWORD PTR [rax],eax
 2ce:	00 00                	add    BYTE PTR [rax],al
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push rbp
 2d3:	00 00                	add    BYTE PTR [rax],al
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	00 03                	add    BYTE PTR [rbx],al
 2d9:	00 00                	add    BYTE PTR [rax],al
 2db:	00 02                	add    BYTE PTR [rdx],al
 2dd:	00 00                	add    BYTE PTR [rax],al
 2df:	00 00                	add    BYTE PTR [rax],al
 2e1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000002e4 <.note.gnu.build-id>:
 2e4:	04 00                	add    al,0x0
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	14 00                	adc    al,0x0
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	03 00                	add    eax,DWORD PTR [rax]
 2ee:	00 00                	add    BYTE PTR [rax],al
 2f0:	47                   	rex.RXB
 2f1:	4e 55                	rex.WRX push rbp
 2f3:	00 25 7d 15 1a f3    	add    BYTE PTR [rip+0xfffffffff31a157d],ah        # fffffffff31a1876 <_end+0xfffffffff3199db6>
 2f9:	18 df                	sbb    bh,bl
 2fb:	54                   	push   rsp
 2fc:	0f 8a 63 8f a5 c6    	jp     ffffffffc6a59265 <_end+0xffffffffc6a517a5>
 302:	34 f8                	xor    al,0xf8
 304:	50                   	push   rax
 305:	8c                   	.byte 0x8c
 306:	8b                   	.byte 0x8b
 307:	be                   	.byte 0xbe

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	25 00 00 00 19       	and    eax,0x19000000
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 312:	00 00                	add    BYTE PTR [rax],al
 314:	08 00                	or     BYTE PTR [rax],al
 316:	00 00                	add    BYTE PTR [rax],al
 318:	42 0c 00             	rex.X or al,0x0
 31b:	e9 d0 00 22 0c       	jmp    c2203f0 <_end+0xc218930>
 320:	52                   	push   rdx
 321:	12 c3                	adc    al,bl
 323:	00 9a 08 00 80 f4    	add    BYTE PTR [rdx-0xb7ffff8],bl
 329:	2b 30                	sub    esi,DWORD PTR [rax]
 32b:	40 0a 81 a1 20 01 40 	or     al,BYTE PTR [rcx+0x400120a1]
 332:	b1 00                	mov    cl,0x0
 334:	e6 c0                	out    0xc0,al
 336:	60                   	(bad)  
 337:	82                   	(bad)  
 338:	19 00                	sbb    DWORD PTR [rax],eax
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	1b 00                	sbb    eax,DWORD PTR [rax]
	...
 346:	00 00                	add    BYTE PTR [rax],al
 348:	1d 00 00 00 1e       	sbb    eax,0x1e000000
 34d:	00 00                	add    BYTE PTR [rax],al
 34f:	00 20                	add    BYTE PTR [rax],ah
 351:	00 00                	add    BYTE PTR [rax],al
 353:	00 00                	add    BYTE PTR [rax],al
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 23                	add    BYTE PTR [rbx],ah
 359:	00 00                	add    BYTE PTR [rax],al
 35b:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 361 <_init-0x1c9f>
 361:	00 00                	add    BYTE PTR [rax],al
 363:	00 28                	add    BYTE PTR [rax],ch
 365:	00 00                	add    BYTE PTR [rax],al
 367:	00 29                	add    BYTE PTR [rcx],ch
 369:	00 00                	add    BYTE PTR [rax],al
 36b:	00 2b                	add    BYTE PTR [rbx],ch
 36d:	00 00                	add    BYTE PTR [rax],al
 36f:	00 00                	add    BYTE PTR [rax],al
 371:	00 00                	add    BYTE PTR [rax],al
 373:	00 2d 00 00 00 00    	add    BYTE PTR [rip+0x0],ch        # 379 <_init-0x1c87>
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	00 00                	add    BYTE PTR [rax],al
 37d:	00 00                	add    BYTE PTR [rax],al
 37f:	00 2f                	add    BYTE PTR [rdi],ch
 381:	00 00                	add    BYTE PTR [rax],al
 383:	00 30                	add    BYTE PTR [rax],dh
 385:	00 00                	add    BYTE PTR [rax],al
 387:	00 31                	add    BYTE PTR [rcx],dh
 389:	00 00                	add    BYTE PTR [rax],al
 38b:	00 32                	add    BYTE PTR [rdx],dh
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 00                	add    BYTE PTR [rax],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
 396:	00 00                	add    BYTE PTR [rax],al
 398:	00 00                	add    BYTE PTR [rax],al
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	35 00 00 00 36       	xor    eax,0x36000000
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	00 37                	add    BYTE PTR [rdi],dh
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 3a                	add    BYTE PTR [rdx],bh
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 3b                	add    BYTE PTR [rbx],bh
	...
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 3d 00 00 00 3e    	add    BYTE PTR [rip+0x3e000000],bh        # 3e0003c5 <_end+0x3dff8905>
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 00                	add    BYTE PTR [rax],al
 3c9:	00 00                	add    BYTE PTR [rax],al
 3cb:	00 d0                	add    al,dl
 3cd:	65 ce                	gs (bad) 
 3cf:	6d                   	ins    DWORD PTR es:[rdi],dx
 3d0:	61                   	(bad)  
 3d1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 3d2:	ba 84 64 81 30       	mov    edx,0x30816484
 3d7:	1e                   	(bad)  
 3d8:	0b 1d 15 7a e1 d4    	or     ebx,DWORD PTR [rip+0xffffffffd4e17a15]        # ffffffffd4e17df3 <_end+0xffffffffd4e10333>
 3de:	90                   	nop
 3df:	47 06                	rex.RXB (bad) 
 3e1:	1f                   	(bad)  
 3e2:	33 04 f7             	xor    eax,DWORD PTR [rdi+rsi*8]
 3e5:	00 01                	add    BYTE PTR [rcx],al
 3e7:	56                   	push   rsi
 3e8:	b0 21                	mov    al,0x21
 3ea:	de 73 44             	fidiv  WORD PTR [rbx+0x44]
 3ed:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 3ee:	5b                   	pop    rbx
 3ef:	b8 cf b5 a5 cc       	mov    eax,0xcca5b5cf
 3f4:	6a d1                	push   0xffffffffffffffd1
 3f6:	5c                   	pop    rsp
 3f7:	9b                   	fwait
 3f8:	83 45 16 16          	add    DWORD PTR [rbp+0x16],0x16
 3fc:	a8 fd                	test   al,0xfd
 3fe:	d7                   	xlat   BYTE PTR ds:[rbx]
 3ff:	90                   	nop
 400:	0a 24 cd 94 47 56 e5 	or     ah,BYTE PTR [rcx*8-0x1aa9b86c]
 407:	75 4d                	jne    456 <_init-0x1baa>
 409:	57                   	push   rdi
 40a:	35 5e 86 46 cf       	xor    eax,0xcf46865e
 40f:	94                   	xchg   esp,eax
 410:	af                   	scas   eax,DWORD PTR es:[rdi]
 411:	94                   	xchg   esp,eax
 412:	dc 73 48             	fdiv   QWORD PTR [rbx+0x48]
 415:	d0 6f c5             	shr    BYTE PTR [rdi-0x3b],1
 418:	89 48 54             	mov    DWORD PTR [rax+0x54],ecx
 41b:	34 8a                	xor    al,0x8a
 41d:	1e                   	(bad)  
 41e:	83 61 d7 ef          	and    DWORD PTR [rcx-0x29],0xffffffef
 422:	7d b0                	jge    3d4 <_init-0x1c2c>
 424:	3b 8a 7f f5 e1 3f    	cmp    ecx,DWORD PTR [rdx+0x3fe1f57f]
 42a:	42 62 e3 a6 e2 b5    	rex.X (bad) {k2}{z}
 430:	62                   	(bad)  
 431:	bf 84 95 8d 35       	mov    edi,0x358d9584
 436:	25 a3 35 66 49       	and    eax,0x496635a3
 43b:	54                   	push   rsp
 43c:	95                   	xchg   ebp,eax
 43d:	fd                   	std    
 43e:	ed                   	in     eax,dx
 43f:	32 85 a8 6b dd 18    	xor    al,BYTE PTR [rbp+0x18dd6ba8]
 445:	c1 8f 85 b4 82 20 5b 	ror    DWORD PTR [rdi+0x2082b485],0x5b
 44c:	b7 e3                	mov    bh,0xe3
 44e:	d5                   	(bad)  
 44f:	1f                   	(bad)  
 450:	1f                   	(bad)  
 451:	24 cd                	and    al,0xcd
 453:	94                   	xchg   esp,eax
 454:	d4                   	(bad)  
 455:	39 37                	cmp    DWORD PTR [rdi],esi
 457:	df ef                	fucomip st,st(7)
 459:	e7 20                	out    0x20,eax
 45b:	40 1b a7 c1 a2 3b 31 	rex sbb esp,DWORD PTR [rdi+0x313ba2c1]
 462:	85                   	.byte 0x85
 463:	7a                   	.byte 0x7a

Disassembly of section .dynsym:

0000000000000468 <.dynsym>:
	...
 480:	39 04 00             	cmp    DWORD PTR [rax+rax*1],eax
 483:	00 12                	add    BYTE PTR [rdx],dl
	...
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 5d 02             	add    BYTE PTR [rbp+0x2],bl
 49a:	00 00                	add    BYTE PTR [rax],al
 49c:	12 00                	adc    al,BYTE PTR [rax]
	...
 4ae:	00 00                	add    BYTE PTR [rax],al
 4b0:	10 00                	adc    BYTE PTR [rax],al
 4b2:	00 00                	add    BYTE PTR [rax],al
 4b4:	20 00                	and    BYTE PTR [rax],al
	...
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	d1 02                	rol    DWORD PTR [rdx],1
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	12 00                	adc    al,BYTE PTR [rax]
	...
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	b7 01                	mov    bh,0x1
 4e2:	00 00                	add    BYTE PTR [rax],al
 4e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	e5 05                	in     eax,0x5
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	1f                   	(bad)  
 511:	00 00                	add    BYTE PTR [rax],al
 513:	00 20                	add    BYTE PTR [rax],ah
	...
 525:	00 00                	add    BYTE PTR [rax],al
 527:	00 79 01             	add    BYTE PTR [rcx+0x1],bh
 52a:	00 00                	add    BYTE PTR [rax],al
 52c:	12 00                	adc    al,BYTE PTR [rax]
	...
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	7b 03                	jnp    545 <_init-0x1abb>
 542:	00 00                	add    BYTE PTR [rax],al
 544:	12 00                	adc    al,BYTE PTR [rax]
	...
 556:	00 00                	add    BYTE PTR [rax],al
 558:	3b 00                	cmp    eax,DWORD PTR [rax]
 55a:	00 00                	add    BYTE PTR [rax],al
 55c:	20 00                	and    BYTE PTR [rax],al
	...
 56e:	00 00                	add    BYTE PTR [rax],al
 570:	66 04 00             	data16 add al,0x0
 573:	00 12                	add    BYTE PTR [rdx],dl
	...
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 1e                	add    BYTE PTR [rsi],bl
 589:	05 00 00 12 00       	add    eax,0x120000
	...
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	ac                   	lods   al,BYTE PTR ds:[rsi]
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5b5:	00 00                	add    BYTE PTR [rax],al
 5b7:	00 27                	add    BYTE PTR [rdi],ah
 5b9:	04 00                	add    al,0x0
 5bb:	00 12                	add    BYTE PTR [rdx],dl
	...
 5cd:	00 00                	add    BYTE PTR [rax],al
 5cf:	00 3f                	add    BYTE PTR [rdi],bh
 5d1:	02 00                	add    al,BYTE PTR [rax]
 5d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 5e5:	00 00                	add    BYTE PTR [rax],al
 5e7:	00 3d 03 00 00 12    	add    BYTE PTR [rip+0x12000003],bh        # 120005f0 <_end+0x11ff8b30>
	...
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 3e                	add    BYTE PTR [rsi],bh
 601:	05 00 00 12 00       	add    eax,0x120000
	...
 616:	00 00                	add    BYTE PTR [rax],al
 618:	72 00                	jb     61a <_init-0x19e6>
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	12 00                	adc    al,BYTE PTR [rax]
	...
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	cf                   	iret   
 631:	00 00                	add    BYTE PTR [rax],al
 633:	00 12                	add    BYTE PTR [rdx],dl
	...
 645:	00 00                	add    BYTE PTR [rax],al
 647:	00 21                	add    BYTE PTR [rcx],ah
 649:	03 00                	add    eax,DWORD PTR [rax]
 64b:	00 12                	add    BYTE PTR [rdx],dl
	...
 65d:	00 00                	add    BYTE PTR [rax],al
 65f:	00 d9                	add    cl,bl
 661:	03 00                	add    eax,DWORD PTR [rax]
 663:	00 12                	add    BYTE PTR [rdx],dl
	...
 675:	00 00                	add    BYTE PTR [rax],al
 677:	00 e3                	add    bl,ah
 679:	01 00                	add    DWORD PTR [rax],eax
 67b:	00 12                	add    BYTE PTR [rdx],dl
	...
 68d:	00 00                	add    BYTE PTR [rax],al
 68f:	00 66 03             	add    BYTE PTR [rsi+0x3],ah
 692:	00 00                	add    BYTE PTR [rax],al
 694:	12 00                	adc    al,BYTE PTR [rax]
	...
 6a6:	00 00                	add    BYTE PTR [rax],al
 6a8:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
 6ab:	00 12                	add    BYTE PTR [rdx],dl
	...
 6bd:	00 00                	add    BYTE PTR [rax],al
 6bf:	00 d6                	add    dh,dl
 6c1:	05 00 00 22 00       	add    eax,0x220000
	...
 6d6:	00 00                	add    BYTE PTR [rax],al
 6d8:	b7 02                	mov    bh,0x2
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	11 00                	adc    DWORD PTR [rax],eax
 6de:	19 00                	sbb    DWORD PTR [rax],eax
 6e0:	ac                   	lods   al,BYTE PTR ds:[rsi]
 6e1:	51                   	push   rcx
 6e2:	00 00                	add    BYTE PTR [rax],al
 6e4:	00 00                	add    BYTE PTR [rax],al
 6e6:	00 00                	add    BYTE PTR [rax],al
 6e8:	04 00                	add    al,0x0
 6ea:	00 00                	add    BYTE PTR [rax],al
 6ec:	00 00                	add    BYTE PTR [rax],al
 6ee:	00 00                	add    BYTE PTR [rax],al
 6f0:	55                   	push   rbp
 6f1:	00 00                	add    BYTE PTR [rax],al
 6f3:	00 11                	add    BYTE PTR [rcx],dl
 6f5:	00 19                	add    BYTE PTR [rcx],bl
 6f7:	00 e0                	add    al,ah
 6f9:	50                   	push   rax
 6fa:	00 00                	add    BYTE PTR [rax],al
 6fc:	00 00                	add    BYTE PTR [rax],al
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	01 00                	add    DWORD PTR [rax],eax
 702:	00 00                	add    BYTE PTR [rax],al
 704:	00 00                	add    BYTE PTR [rax],al
 706:	00 00                	add    BYTE PTR [rax],al
 708:	65 01 00             	add    DWORD PTR gs:[rax],eax
 70b:	00 11                	add    BYTE PTR [rcx],dl
 70d:	00 19                	add    BYTE PTR [rcx],bl
 70f:	00 98 51 00 00 00    	add    BYTE PTR [rax+0x51],bl
 715:	00 00                	add    BYTE PTR [rax],al
 717:	00 01                	add    BYTE PTR [rcx],al
 719:	00 00                	add    BYTE PTR [rax],al
 71b:	00 00                	add    BYTE PTR [rax],al
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 45 01             	add    BYTE PTR [rbp+0x1],al
 722:	00 00                	add    BYTE PTR [rax],al
 724:	11 00                	adc    DWORD PTR [rax],eax
 726:	19 00                	sbb    DWORD PTR [rax],eax
 728:	64 52                	fs push rdx
 72a:	00 00                	add    BYTE PTR [rax],al
 72c:	00 00                	add    BYTE PTR [rax],al
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	02 00                	add    al,BYTE PTR [rax]
 732:	00 00                	add    BYTE PTR [rax],al
 734:	00 00                	add    BYTE PTR [rax],al
 736:	00 00                	add    BYTE PTR [rax],al
 738:	ce                   	(bad)  
 739:	01 00                	add    DWORD PTR [rax],eax
 73b:	00 11                	add    BYTE PTR [rcx],dl
 73d:	00 19                	add    BYTE PTR [rcx],bl
 73f:	00 80 51 00 00 00    	add    BYTE PTR [rax+0x51],al
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 02                	add    BYTE PTR [rdx],al
 749:	00 00                	add    BYTE PTR [rax],al
 74b:	00 00                	add    BYTE PTR [rax],al
 74d:	00 00                	add    BYTE PTR [rax],al
 74f:	00 a2 02 00 00 11    	add    BYTE PTR [rdx+0x11000002],ah
 755:	00 19                	add    BYTE PTR [rcx],bl
 757:	00 20                	add    BYTE PTR [rax],ah
 759:	52                   	push   rdx
 75a:	00 00                	add    BYTE PTR [rax],al
 75c:	00 00                	add    BYTE PTR [rax],al
 75e:	00 00                	add    BYTE PTR [rax],al
 760:	04 00                	add    al,0x0
 762:	00 00                	add    BYTE PTR [rax],al
 764:	00 00                	add    BYTE PTR [rax],al
 766:	00 00                	add    BYTE PTR [rax],al
 768:	4f 04 00             	rex.WRXB add al,0x0
 76b:	00 11                	add    BYTE PTR [rcx],dl
 76d:	00 19                	add    BYTE PTR [rcx],bl
 76f:	00 00                	add    BYTE PTR [rax],al
 771:	51                   	push   rcx
 772:	00 00                	add    BYTE PTR [rax],al
 774:	00 00                	add    BYTE PTR [rax],al
 776:	00 00                	add    BYTE PTR [rax],al
 778:	04 00                	add    al,0x0
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	00 00                	add    BYTE PTR [rax],al
 77e:	00 00                	add    BYTE PTR [rax],al
 780:	f8                   	clc    
 781:	02 00                	add    al,BYTE PTR [rax]
 783:	00 11                	add    BYTE PTR [rcx],dl
 785:	00 19                	add    BYTE PTR [rcx],bl
 787:	00 04 51             	add    BYTE PTR [rcx+rdx*2],al
 78a:	00 00                	add    BYTE PTR [rax],al
 78c:	00 00                	add    BYTE PTR [rax],al
 78e:	00 00                	add    BYTE PTR [rax],al
 790:	02 00                	add    al,BYTE PTR [rax]
 792:	00 00                	add    BYTE PTR [rax],al
 794:	00 00                	add    BYTE PTR [rax],al
 796:	00 00                	add    BYTE PTR [rax],al
 798:	ac                   	lods   al,BYTE PTR ds:[rsi]
 799:	04 00                	add    al,0x0
 79b:	00 11                	add    BYTE PTR [rcx],dl
 79d:	00 19                	add    BYTE PTR [rcx],bl
 79f:	00 02                	add    BYTE PTR [rdx],al
 7a1:	52                   	push   rdx
 7a2:	00 00                	add    BYTE PTR [rax],al
 7a4:	00 00                	add    BYTE PTR [rax],al
 7a6:	00 00                	add    BYTE PTR [rax],al
 7a8:	02 00                	add    al,BYTE PTR [rax]
 7aa:	00 00                	add    BYTE PTR [rax],al
 7ac:	00 00                	add    BYTE PTR [rax],al
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	09 04 00             	or     DWORD PTR [rax+rax*1],eax
 7b3:	00 11                	add    BYTE PTR [rcx],dl
 7b5:	00 19                	add    BYTE PTR [rcx],bl
 7b7:	00 b0 51 00 00 00    	add    BYTE PTR [rax+0x51],dh
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 7c2:	00 00                	add    BYTE PTR [rax],al
 7c4:	00 00                	add    BYTE PTR [rax],al
 7c6:	00 00                	add    BYTE PTR [rax],al
 7c8:	93                   	xchg   ebx,eax
 7c9:	03 00                	add    eax,DWORD PTR [rax]
 7cb:	00 11                	add    BYTE PTR [rcx],dl
 7cd:	00 19                	add    BYTE PTR [rcx],bl
 7cf:	00 d2                	add    dl,dl
 7d1:	51                   	push   rcx
 7d2:	00 00                	add    BYTE PTR [rax],al
 7d4:	00 00                	add    BYTE PTR [rax],al
 7d6:	00 00                	add    BYTE PTR [rax],al
 7d8:	01 00                	add    DWORD PTR [rax],eax
 7da:	00 00                	add    BYTE PTR [rax],al
 7dc:	00 00                	add    BYTE PTR [rax],al
 7de:	00 00                	add    BYTE PTR [rax],al
 7e0:	f4                   	hlt    
 7e1:	03 00                	add    eax,DWORD PTR [rax]
 7e3:	00 11                	add    BYTE PTR [rcx],dl
 7e5:	00 19                	add    BYTE PTR [rcx],bl
 7e7:	00 20                	add    BYTE PTR [rax],ah
 7e9:	51                   	push   rcx
 7ea:	00 00                	add    BYTE PTR [rax],al
 7ec:	00 00                	add    BYTE PTR [rax],al
 7ee:	00 00                	add    BYTE PTR [rax],al
 7f0:	02 00                	add    al,BYTE PTR [rax]
 7f2:	00 00                	add    BYTE PTR [rax],al
 7f4:	00 00                	add    BYTE PTR [rax],al
 7f6:	00 00                	add    BYTE PTR [rax],al
 7f8:	98                   	cwde   
 7f9:	00 00                	add    BYTE PTR [rax],al
 7fb:	00 11                	add    BYTE PTR [rcx],dl
 7fd:	00 19                	add    BYTE PTR [rcx],bl
 7ff:	00 40 52             	add    BYTE PTR [rax+0x52],al
 802:	00 00                	add    BYTE PTR [rax],al
 804:	00 00                	add    BYTE PTR [rax],al
 806:	00 00                	add    BYTE PTR [rax],al
 808:	04 00                	add    al,0x0
 80a:	00 00                	add    BYTE PTR [rax],al
 80c:	00 00                	add    BYTE PTR [rax],al
 80e:	00 00                	add    BYTE PTR [rax],al
 810:	81 04 00 00 11 00 19 	add    DWORD PTR [rax+rax*1],0x19001100
 817:	00 68 52             	add    BYTE PTR [rax+0x52],ch
 81a:	00 00                	add    BYTE PTR [rax],al
 81c:	00 00                	add    BYTE PTR [rax],al
 81e:	00 00                	add    BYTE PTR [rax],al
 820:	02 00                	add    al,BYTE PTR [rax]
 822:	00 00                	add    BYTE PTR [rax],al
 824:	00 00                	add    BYTE PTR [rax],al
 826:	00 00                	add    BYTE PTR [rax],al
 828:	07                   	(bad)  
 829:	02 00                	add    al,BYTE PTR [rax]
 82b:	00 11                	add    BYTE PTR [rcx],dl
 82d:	00 19                	add    BYTE PTR [rcx],bl
 82f:	00 40 51             	add    BYTE PTR [rax+0x51],al
 832:	00 00                	add    BYTE PTR [rax],al
 834:	00 00                	add    BYTE PTR [rax],al
 836:	00 00                	add    BYTE PTR [rax],al
 838:	02 00                	add    al,BYTE PTR [rax]
 83a:	00 00                	add    BYTE PTR [rax],al
 83c:	00 00                	add    BYTE PTR [rax],al
 83e:	00 00                	add    BYTE PTR [rax],al
 840:	f3 00 00             	repz add BYTE PTR [rax],al
 843:	00 11                	add    BYTE PTR [rcx],dl
 845:	00 19                	add    BYTE PTR [rcx],bl
 847:	00 50 51             	add    BYTE PTR [rax+0x51],dl
 84a:	00 00                	add    BYTE PTR [rax],al
 84c:	00 00                	add    BYTE PTR [rax],al
 84e:	00 00                	add    BYTE PTR [rax],al
 850:	08 00                	or     BYTE PTR [rax],al
 852:	00 00                	add    BYTE PTR [rax],al
 854:	00 00                	add    BYTE PTR [rax],al
 856:	00 00                	add    BYTE PTR [rax],al
 858:	6d                   	ins    DWORD PTR es:[rdi],dx
 859:	02 00                	add    al,BYTE PTR [rax]
 85b:	00 11                	add    BYTE PTR [rcx],dl
 85d:	00 19                	add    BYTE PTR [rcx],bl
 85f:	00 90 51 00 00 00    	add    BYTE PTR [rax+0x51],dl
 865:	00 00                	add    BYTE PTR [rax],al
 867:	00 08                	add    BYTE PTR [rax],cl
 869:	00 00                	add    BYTE PTR [rax],al
 86b:	00 00                	add    BYTE PTR [rax],al
 86d:	00 00                	add    BYTE PTR [rax],al
 86f:	00 94 01 00 00 11 00 	add    BYTE PTR [rcx+rax*1+0x110000],dl
 876:	19 00                	sbb    DWORD PTR [rax],eax
 878:	f8                   	clc    
 879:	51                   	push   rcx
 87a:	00 00                	add    BYTE PTR [rax],al
 87c:	00 00                	add    BYTE PTR [rax],al
 87e:	00 00                	add    BYTE PTR [rax],al
 880:	08 00                	or     BYTE PTR [rax],al
 882:	00 00                	add    BYTE PTR [rax],al
 884:	00 00                	add    BYTE PTR [rax],al
 886:	00 00                	add    BYTE PTR [rax],al
 888:	09 03                	or     DWORD PTR [rbx],eax
 88a:	00 00                	add    BYTE PTR [rax],al
 88c:	11 00                	adc    DWORD PTR [rax],eax
 88e:	19 00                	sbb    DWORD PTR [rax],eax
 890:	60                   	(bad)  
 891:	52                   	push   rdx
 892:	00 00                	add    BYTE PTR [rax],al
 894:	00 00                	add    BYTE PTR [rax],al
 896:	00 00                	add    BYTE PTR [rax],al
 898:	04 00                	add    al,0x0
 89a:	00 00                	add    BYTE PTR [rax],al
 89c:	00 00                	add    BYTE PTR [rax],al
 89e:	00 00                	add    BYTE PTR [rax],al
 8a0:	55                   	push   rbp
 8a1:	03 00                	add    eax,DWORD PTR [rax]
 8a3:	00 11                	add    BYTE PTR [rcx],dl
 8a5:	00 19                	add    BYTE PTR [rcx],bl
 8a7:	00 a8 51 00 00 00    	add    BYTE PTR [rax+0x51],ch
 8ad:	00 00                	add    BYTE PTR [rax],al
 8af:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 8b2:	00 00                	add    BYTE PTR [rax],al
 8b4:	00 00                	add    BYTE PTR [rax],al
 8b6:	00 00                	add    BYTE PTR [rax],al
 8b8:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 8b9:	05 00 00 11 00       	add    eax,0x110000
 8be:	19 00                	sbb    DWORD PTR [rax],eax
 8c0:	c4                   	(bad)  
 8c1:	51                   	push   rcx
 8c2:	00 00                	add    BYTE PTR [rax],al
 8c4:	00 00                	add    BYTE PTR [rax],al
 8c6:	00 00                	add    BYTE PTR [rax],al
 8c8:	02 00                	add    al,BYTE PTR [rax]
 8ca:	00 00                	add    BYTE PTR [rax],al
 8cc:	00 00                	add    BYTE PTR [rax],al
 8ce:	00 00                	add    BYTE PTR [rax],al
 8d0:	2f                   	(bad)  
 8d1:	01 00                	add    DWORD PTR [rax],eax
 8d3:	00 11                	add    BYTE PTR [rcx],dl
 8d5:	00 19                	add    BYTE PTR [rcx],bl
 8d7:	00 c0                	add    al,al
 8d9:	51                   	push   rcx
 8da:	00 00                	add    BYTE PTR [rax],al
 8dc:	00 00                	add    BYTE PTR [rax],al
 8de:	00 00                	add    BYTE PTR [rax],al
 8e0:	02 00                	add    al,BYTE PTR [rax]
 8e2:	00 00                	add    BYTE PTR [rax],al
 8e4:	00 00                	add    BYTE PTR [rax],al
 8e6:	00 00                	add    BYTE PTR [rax],al
 8e8:	84 02                	test   BYTE PTR [rdx],al
 8ea:	00 00                	add    BYTE PTR [rax],al
 8ec:	11 00                	adc    DWORD PTR [rax],eax
 8ee:	19 00                	sbb    DWORD PTR [rax],eax
 8f0:	88 51 00             	mov    BYTE PTR [rcx+0x0],dl
 8f3:	00 00                	add    BYTE PTR [rax],al
 8f5:	00 00                	add    BYTE PTR [rax],al
 8f7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	00 00                	add    BYTE PTR [rax],al
 8fe:	00 00                	add    BYTE PTR [rax],al
 900:	f2 04 00             	repnz add al,0x0
 903:	00 11                	add    BYTE PTR [rcx],dl
 905:	00 19                	add    BYTE PTR [rcx],bl
 907:	00 58 52             	add    BYTE PTR [rax+0x52],bl
 90a:	00 00                	add    BYTE PTR [rax],al
 90c:	00 00                	add    BYTE PTR [rax],al
 90e:	00 00                	add    BYTE PTR [rax],al
 910:	02 00                	add    al,BYTE PTR [rax]
 912:	00 00                	add    BYTE PTR [rax],al
 914:	00 00                	add    BYTE PTR [rax],al
 916:	00 00                	add    BYTE PTR [rax],al
 918:	0c 05                	or     al,0x5
 91a:	00 00                	add    BYTE PTR [rax],al
 91c:	11 00                	adc    DWORD PTR [rax],eax
 91e:	19 00                	sbb    DWORD PTR [rax],eax
 920:	08 51 00             	or     BYTE PTR [rcx+0x0],dl
 923:	00 00                	add    BYTE PTR [rax],al
 925:	00 00                	add    BYTE PTR [rax],al
 927:	00 02                	add    BYTE PTR [rdx],al
 929:	00 00                	add    BYTE PTR [rax],al
 92b:	00 00                	add    BYTE PTR [rax],al
 92d:	00 00                	add    BYTE PTR [rax],al
 92f:	00 c1                	add    cl,al
 931:	04 00                	add    al,0x0
 933:	00 11                	add    BYTE PTR [rcx],dl
 935:	00 19                	add    BYTE PTR [rcx],bl
 937:	00 84 51 00 00 00 00 	add    BYTE PTR [rcx+rdx*2+0x0],al
 93e:	00 00                	add    BYTE PTR [rax],al
 940:	04 00                	add    al,0x0
 942:	00 00                	add    BYTE PTR [rax],al
 944:	00 00                	add    BYTE PTR [rax],al
 946:	00 00                	add    BYTE PTR [rax],al
 948:	96                   	xchg   esi,eax
 949:	04 00                	add    al,0x0
 94b:	00 11                	add    BYTE PTR [rcx],dl
 94d:	00 19                	add    BYTE PTR [rcx],bl
 94f:	00 58 51             	add    BYTE PTR [rax+0x51],bl
 952:	00 00                	add    BYTE PTR [rax],al
 954:	00 00                	add    BYTE PTR [rax],al
 956:	00 00                	add    BYTE PTR [rax],al
 958:	08 00                	or     BYTE PTR [rax],al
 95a:	00 00                	add    BYTE PTR [rax],al
 95c:	00 00                	add    BYTE PTR [rax],al
 95e:	00 00                	add    BYTE PTR [rax],al
 960:	79 05                	jns    967 <_init-0x1699>
 962:	00 00                	add    BYTE PTR [rax],al
 964:	11 00                	adc    DWORD PTR [rax],eax
 966:	19 00                	sbb    DWORD PTR [rax],eax
 968:	00 52 00             	add    BYTE PTR [rdx+0x0],dl
 96b:	00 00                	add    BYTE PTR [rax],al
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 02                	add    BYTE PTR [rdx],al
 971:	00 00                	add    BYTE PTR [rax],al
 973:	00 00                	add    BYTE PTR [rax],al
 975:	00 00                	add    BYTE PTR [rax],al
 977:	00 25 02 00 00 11    	add    BYTE PTR [rip+0x11000002],ah        # 1100097f <_end+0x10ff8ebf>
 97d:	00 19                	add    BYTE PTR [rcx],bl
 97f:	00 50 52             	add    BYTE PTR [rax+0x52],dl
 982:	00 00                	add    BYTE PTR [rax],al
 984:	00 00                	add    BYTE PTR [rax],al
 986:	00 00                	add    BYTE PTR [rax],al
 988:	04 00                	add    al,0x0
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	00 00                	add    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 991:	03 00                	add    eax,DWORD PTR [rax]
 993:	00 11                	add    BYTE PTR [rcx],dl
 995:	00 19                	add    BYTE PTR [rcx],bl
 997:	00 68 51             	add    BYTE PTR [rax+0x51],ch
 99a:	00 00                	add    BYTE PTR [rax],al
 99c:	00 00                	add    BYTE PTR [rax],al
 99e:	00 00                	add    BYTE PTR [rax],al
 9a0:	02 00                	add    al,BYTE PTR [rax]
 9a2:	00 00                	add    BYTE PTR [rax],al
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	c8 03 00 00          	enter  0x3,0x0
 9ac:	11 00                	adc    DWORD PTR [rax],eax
 9ae:	19 00                	sbb    DWORD PTR [rax],eax
 9b0:	c2 51 00             	ret    0x51
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 01                	add    BYTE PTR [rcx],al
 9b9:	00 00                	add    BYTE PTR [rax],al
 9bb:	00 00                	add    BYTE PTR [rax],al
 9bd:	00 00                	add    BYTE PTR [rax],al
 9bf:	00 fd                	add    ch,bh
 9c1:	00 00                	add    BYTE PTR [rax],al
 9c3:	00 11                	add    BYTE PTR [rcx],dl
 9c5:	00 19                	add    BYTE PTR [rcx],bl
 9c7:	00 e0                	add    al,ah
 9c9:	51                   	push   rcx
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	00 00                	add    BYTE PTR [rax],al
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	04 00                	add    al,0x0
 9d2:	00 00                	add    BYTE PTR [rax],al
 9d4:	00 00                	add    BYTE PTR [rax],al
 9d6:	00 00                	add    BYTE PTR [rax],al
 9d8:	a2 00 00 00 11 00 19 	movabs ds:0xc800190011000000,al
 9df:	00 c8 
 9e1:	51                   	push   rcx
 9e2:	00 00                	add    BYTE PTR [rax],al
 9e4:	00 00                	add    BYTE PTR [rax],al
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	08 00                	or     BYTE PTR [rax],al
 9ea:	00 00                	add    BYTE PTR [rax],al
 9ec:	00 00                	add    BYTE PTR [rax],al
 9ee:	00 00                	add    BYTE PTR [rax],al
 9f0:	1b 01                	sbb    eax,DWORD PTR [rcx]
 9f2:	00 00                	add    BYTE PTR [rax],al
 9f4:	11 00                	adc    DWORD PTR [rax],eax
 9f6:	19 00                	sbb    DWORD PTR [rax],eax
 9f8:	a0 51 00 00 00 00 00 	movabs al,ds:0x400000000000051
 9ff:	00 04 
 a01:	00 00                	add    BYTE PTR [rax],al
 a03:	00 00                	add    BYTE PTR [rax],al
 a05:	00 00                	add    BYTE PTR [rax],al
 a07:	00 92 02 00 00 11    	add    BYTE PTR [rdx+0x11000002],dl
 a0d:	00 19                	add    BYTE PTR [rcx],bl
 a0f:	00 d0                	add    al,dl
 a11:	51                   	push   rcx
 a12:	00 00                	add    BYTE PTR [rax],al
 a14:	00 00                	add    BYTE PTR [rax],al
 a16:	00 00                	add    BYTE PTR [rax],al
 a18:	02 00                	add    al,BYTE PTR [rax]
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	91                   	xchg   ecx,eax
 a21:	05 00 00 11 00       	add    eax,0x110000
 a26:	19 00                	sbb    DWORD PTR [rax],eax
 a28:	f0 51                	lock push rcx
 a2a:	00 00                	add    BYTE PTR [rax],al
 a2c:	00 00                	add    BYTE PTR [rax],al
 a2e:	00 00                	add    BYTE PTR [rax],al
 a30:	04 00                	add    al,0x0
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	59                   	pop    rcx
 a39:	05 00 00 11 00       	add    eax,0x110000
 a3e:	19 00                	sbb    DWORD PTR [rax],eax
 a40:	60                   	(bad)  
 a41:	51                   	push   rcx
 a42:	00 00                	add    BYTE PTR [rax],al
 a44:	00 00                	add    BYTE PTR [rax],al
 a46:	00 00                	add    BYTE PTR [rax],al
 a48:	08 00                	or     BYTE PTR [rax],al
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000a50 <.dynstr>:
     a50:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
     a54:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     a56:	61                   	(bad)  
     a57:	74 2d                	je     a86 <_init-0x157a>
     a59:	38 2e                	cmp    BYTE PTR [rsi],ch
     a5b:	73 6f                	jae    acc <_init-0x1534>
     a5d:	2e 31 00             	xor    DWORD PTR cs:[rax],eax
     a60:	5f                   	pop    rdi
     a61:	5f                   	pop    rdi
     a62:	67 6d                	ins    DWORD PTR es:[edi],dx
     a64:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a65:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a66:	5f                   	pop    rdi
     a67:	73 74                	jae    add <_init-0x1523>
     a69:	61                   	(bad)  
     a6a:	72 74                	jb     ae0 <_init-0x1520>
     a6c:	5f                   	pop    rdi
     a6d:	5f                   	pop    rdi
     a6e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     a71:	54                   	push   rsp
     a72:	4d 5f                	rex.WRB pop r15
     a74:	64 65 72 65          	fs gs jb add <_init-0x1523>
     a78:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
     a7f:	4d 
     a80:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
     a82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a84:	65 54                	gs push rsp
     a86:	61                   	(bad)  
     a87:	62                   	(bad)  
     a88:	6c                   	ins    BYTE PTR es:[rdi],dx
     a89:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
     a8d:	54                   	push   rsp
     a8e:	4d 5f                	rex.WRB pop r15
     a90:	72 65                	jb     af7 <_init-0x1509>
     a92:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
     a99:	4d 
     a9a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
     a9c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a9e:	65 54                	gs push rsp
     aa0:	61                   	(bad)  
     aa1:	62                   	(bad)  
     aa2:	6c                   	ins    BYTE PTR es:[rdi],dx
     aa3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
     aa7:	67 6c                	ins    BYTE PTR es:[edi],dx
     aa9:	5f                   	pop    rdi
     aaa:	74 61                	je     b0d <_init-0x14f3>
     aac:	73 6b                	jae    b19 <_init-0x14e7>
     aae:	5f                   	pop    rdi
     aaf:	64 69 73 70 61 74 63 	imul   esi,DWORD PTR fs:[rbx+0x70],0x68637461
     ab6:	68 
     ab7:	69 6e 67 5f 70 6f 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c6f705f
     abe:	69 63 79 00 61 64 61 	imul   esp,DWORD PTR [rbx+0x79],0x61646100
     ac5:	5f                   	pop    rdi
     ac6:	5f                   	pop    rdi
     ac7:	73 74                	jae    b3d <_init-0x14c3>
     ac9:	72 69                	jb     b34 <_init-0x14cc>
     acb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     acc:	67 73 5f             	addr32 jae b2e <_init-0x14d2>
     acf:	5f                   	pop    rdi
     ad0:	6d                   	ins    DWORD PTR es:[rdi],dx
     ad1:	61                   	(bad)  
     ad2:	70 73                	jo     b47 <_init-0x14b9>
     ad4:	5f                   	pop    rdi
     ad5:	5f                   	pop    rdi
     ad6:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     ad9:	73 74                	jae    b4f <_init-0x14b1>
     adb:	61                   	(bad)  
     adc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     add:	74 73                	je     b52 <_init-0x14ae>
     adf:	5f                   	pop    rdi
     ae0:	5f                   	pop    rdi
     ae1:	5f                   	pop    rdi
     ae2:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     ae4:	61                   	(bad)  
     ae5:	62 73                	(bad)  
     ae7:	00 67 6e             	add    BYTE PTR [rdi+0x6e],ah
     aea:	61                   	(bad)  
     aeb:	74 5f                	je     b4c <_init-0x14b4>
     aed:	61                   	(bad)  
     aee:	72 67                	jb     b57 <_init-0x14a9>
     af0:	63 00                	movsxd eax,DWORD PTR [rax]
     af2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     af4:	61                   	(bad)  
     af5:	74 5f                	je     b56 <_init-0x14aa>
     af7:	61                   	(bad)  
     af8:	72 67                	jb     b61 <_init-0x149f>
     afa:	76 00                	jbe    afc <_init-0x1504>
     afc:	73 79                	jae    b77 <_init-0x1489>
     afe:	73 74                	jae    b74 <_init-0x148c>
     b00:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     b02:	5f                   	pop    rdi
     b03:	5f                   	pop    rdi
     b04:	73 74                	jae    b7a <_init-0x1486>
     b06:	61                   	(bad)  
     b07:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b08:	64 61                	fs (bad) 
     b0a:	72 64                	jb     b70 <_init-0x1490>
     b0c:	5f                   	pop    rdi
     b0d:	6c                   	ins    BYTE PTR es:[rdi],dx
     b0e:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
     b15:	5f                   	pop    rdi
     b16:	61                   	(bad)  
     b17:	64 61                	fs (bad) 
     b19:	66 69 6e 61 6c 00    	imul   bp,WORD PTR [rsi+0x61],0x6c
     b1f:	73 79                	jae    b9a <_init-0x1466>
     b21:	73 74                	jae    b97 <_init-0x1469>
     b23:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     b25:	5f                   	pop    rdi
     b26:	5f                   	pop    rdi
     b27:	74 72                	je     b9b <_init-0x1465>
     b29:	61                   	(bad)  
     b2a:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
     b2d:	61                   	(bad)  
     b2e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     b31:	5f                   	pop    rdi
     b32:	73 79                	jae    bad <_init-0x1453>
     b34:	6d                   	ins    DWORD PTR es:[rdi],dx
     b35:	62                   	(bad)  
     b36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b37:	6c                   	ins    BYTE PTR es:[rdi],dx
     b38:	69 63 5f 5f 5f 65 6c 	imul   esp,DWORD PTR [rbx+0x5f],0x6c655f5f
     b3f:	61                   	(bad)  
     b40:	62 62                	(bad)  
     b42:	00 67 6e             	add    BYTE PTR [rdi+0x6e],ah
     b45:	61                   	(bad)  
     b46:	74 5f                	je     ba7 <_init-0x1459>
     b48:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     b4a:	76 70                	jbe    bbc <_init-0x1444>
     b4c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b4f:	67 6c                	ins    BYTE PTR es:[edi],dx
     b51:	5f                   	pop    rdi
     b52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b53:	75 6d                	jne    bc2 <_init-0x143e>
     b55:	5f                   	pop    rdi
     b56:	73 70                	jae    bc8 <_init-0x1438>
     b58:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
     b5c:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
     b63:	61                   	(bad)  
     b64:	74 63                	je     bc9 <_init-0x1437>
     b66:	68 69 6e 67 00       	push   0x676e69
     b6b:	5f                   	pop    rdi
     b6c:	5f                   	pop    rdi
     b6d:	67 6c                	ins    BYTE PTR es:[edi],dx
     b6f:	5f                   	pop    rdi
     b70:	74 69                	je     bdb <_init-0x1425>
     b72:	6d                   	ins    DWORD PTR es:[rdi],dx
     b73:	65 5f                	gs pop rdi
     b75:	73 6c                	jae    be3 <_init-0x141d>
     b77:	69 63 65 5f 76 61 6c 	imul   esp,DWORD PTR [rbx+0x65],0x6c61765f
     b7e:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     b81:	73 74                	jae    bf7 <_init-0x1409>
     b83:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     b85:	5f                   	pop    rdi
     b86:	5f                   	pop    rdi
     b87:	64 77 61             	fs ja  beb <_init-0x1415>
     b8a:	72 66                	jb     bf2 <_init-0x140e>
     b8c:	5f                   	pop    rdi
     b8d:	6c                   	ins    BYTE PTR es:[rdi],dx
     b8e:	69 6e 65 73 5f 45 00 	imul   ebp,DWORD PTR [rsi+0x65],0x455f73
     b95:	61                   	(bad)  
     b96:	64 61                	fs (bad) 
     b98:	5f                   	pop    rdi
     b99:	5f                   	pop    rdi
     b9a:	73 74                	jae    c10 <_init-0x13f0>
     b9c:	72 69                	jb     c07 <_init-0x13f9>
     b9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b9f:	67 73 5f             	addr32 jae c01 <_init-0x13ff>
     ba2:	5f                   	pop    rdi
     ba3:	6d                   	ins    DWORD PTR es:[rdi],dx
     ba4:	61                   	(bad)  
     ba5:	70 73                	jo     c1a <_init-0x13e6>
     ba7:	5f                   	pop    rdi
     ba8:	5f                   	pop    rdi
     ba9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     bac:	73 74                	jae    c22 <_init-0x13de>
     bae:	61                   	(bad)  
     baf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bb0:	74 73                	je     c25 <_init-0x13db>
     bb2:	5f                   	pop    rdi
     bb3:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     bb7:	67 6c                	ins    BYTE PTR es:[edi],dx
     bb9:	5f                   	pop    rdi
     bba:	6c                   	ins    BYTE PTR es:[rdi],dx
     bbb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bbc:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
     bbf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bc0:	67 5f                	addr32 pop rdi
     bc2:	70 6f                	jo     c33 <_init-0x13cd>
     bc4:	6c                   	ins    BYTE PTR es:[rdi],dx
     bc5:	69 63 79 00 61 64 61 	imul   esp,DWORD PTR [rbx+0x79],0x61646100
     bcc:	5f                   	pop    rdi
     bcd:	5f                   	pop    rdi
     bce:	73 74                	jae    c44 <_init-0x13bc>
     bd0:	72 69                	jb     c3b <_init-0x13c5>
     bd2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bd3:	67 73 5f             	addr32 jae c35 <_init-0x13cb>
     bd6:	5f                   	pop    rdi
     bd7:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd8:	61                   	(bad)  
     bd9:	70 73                	jo     c4e <_init-0x13b2>
     bdb:	5f                   	pop    rdi
     bdc:	5f                   	pop    rdi
     bdd:	5f                   	pop    rdi
     bde:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     be0:	61                   	(bad)  
     be1:	62 73                	(bad)  
     be3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     be6:	67 6c                	ins    BYTE PTR es:[edi],dx
     be8:	5f                   	pop    rdi
     be9:	70 72                	jo     c5d <_init-0x13a3>
     beb:	69 6f 72 69 74 79 5f 	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
     bf2:	73 70                	jae    c64 <_init-0x139c>
     bf4:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
     bf8:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
     bff:	61                   	(bad)  
     c00:	74 63                	je     c65 <_init-0x139b>
     c02:	68 69 6e 67 00       	push   0x676e69
     c07:	73 79                	jae    c82 <_init-0x137e>
     c09:	73 74                	jae    c7f <_init-0x1381>
     c0b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     c0d:	5f                   	pop    rdi
     c0e:	5f                   	pop    rdi
     c0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c10:	73 5f                	jae    c71 <_init-0x138f>
     c12:	6c                   	ins    BYTE PTR es:[rdi],dx
     c13:	69 62 5f 5f 5f 65 6c 	imul   esp,DWORD PTR [rdx+0x5f],0x6c655f5f
     c1a:	61                   	(bad)  
     c1b:	62 62                	(bad)  
     c1d:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
     c20:	61                   	(bad)  
     c21:	5f                   	pop    rdi
     c22:	5f                   	pop    rdi
     c23:	69 6f 5f 65 78 63 65 	imul   ebp,DWORD PTR [rdi+0x5f],0x65637865
     c2a:	70 74                	jo     ca0 <_init-0x1360>
     c2c:	69 6f 6e 73 5f 45 00 	imul   ebp,DWORD PTR [rdi+0x6e],0x455f73
     c33:	73 79                	jae    cae <_init-0x1352>
     c35:	73 74                	jae    cab <_init-0x1355>
     c37:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     c39:	5f                   	pop    rdi
     c3a:	5f                   	pop    rdi
     c3b:	73 65                	jae    ca2 <_init-0x135e>
     c3d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     c40:	64 61                	fs (bad) 
     c42:	72 79                	jb     cbd <_init-0x1343>
     c44:	5f                   	pop    rdi
     c45:	73 74                	jae    cbb <_init-0x1345>
     c47:	61                   	(bad)  
     c48:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     c4b:	5f                   	pop    rdi
     c4c:	73 73                	jae    cc1 <_init-0x133f>
     c4e:	5f                   	pop    rdi
     c4f:	73 74                	jae    cc5 <_init-0x133b>
     c51:	61                   	(bad)  
     c52:	63 6b 49             	movsxd ebp,DWORD PTR [rbx+0x49]
     c55:	50                   	push   rax
     c56:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     c59:	73 74                	jae    ccf <_init-0x1331>
     c5b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     c5d:	5f                   	pop    rdi
     c5e:	5f                   	pop    rdi
     c5f:	74 72                	je     cd3 <_init-0x132d>
     c61:	61                   	(bad)  
     c62:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
     c65:	61                   	(bad)  
     c66:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     c69:	5f                   	pop    rdi
     c6a:	73 79                	jae    ce5 <_init-0x131b>
     c6c:	6d                   	ins    DWORD PTR es:[rdi],dx
     c6d:	62                   	(bad)  
     c6e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c6f:	6c                   	ins    BYTE PTR es:[rdi],dx
     c70:	69 63 5f 45 00 5f 5f 	imul   esp,DWORD PTR [rbx+0x5f],0x5f5f0045
     c77:	67 6c                	ins    BYTE PTR es:[edi],dx
     c79:	5f                   	pop    rdi
     c7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c7b:	75 6d                	jne    cea <_init-0x1316>
     c7d:	5f                   	pop    rdi
     c7e:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     c85:	70 74                	jo     cfb <_init-0x1305>
     c87:	5f                   	pop    rdi
     c88:	73 74                	jae    cfe <_init-0x1302>
     c8a:	61                   	(bad)  
     c8b:	74 65                	je     cf2 <_init-0x130e>
     c8d:	73 00                	jae    c8f <_init-0x1371>
     c8f:	73 79                	jae    d0a <_init-0x12f6>
     c91:	73 74                	jae    d07 <_init-0x12f9>
     c93:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     c95:	5f                   	pop    rdi
     c96:	5f                   	pop    rdi
     c97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c98:	62                   	(bad)  
     c99:	6a 65                	push   0x65
     c9b:	63 74 5f 72          	movsxd esi,DWORD PTR [rdi+rbx*2+0x72]
     c9f:	65 61                	gs (bad) 
     ca1:	64 65 72 5f          	fs gs jb d04 <_init-0x12fc>
     ca5:	5f                   	pop    rdi
     ca6:	5f                   	pop    rdi
     ca7:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     ca9:	61                   	(bad)  
     caa:	62 73                	(bad)  
     cac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     caf:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     cb1:	61                   	(bad)  
     cb2:	74 5f                	je     d13 <_init-0x12ed>
     cb4:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
     cba:	7a 65                	jp     d21 <_init-0x12df>
     cbc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cbf:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     cc1:	61                   	(bad)  
     cc2:	74 5f                	je     d23 <_init-0x12dd>
     cc4:	64 65 66 61          	fs gs data16 (bad) 
     cc8:	75 6c                	jne    d36 <_init-0x12ca>
     cca:	74 5f                	je     d2b <_init-0x12d5>
     ccc:	73 73                	jae    d41 <_init-0x12bf>
     cce:	5f                   	pop    rdi
     ccf:	70 6f                	jo     d40 <_init-0x12c0>
     cd1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cd2:	6c                   	ins    BYTE PTR es:[rdi],dx
     cd3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cd6:	67 6c                	ins    BYTE PTR es:[edi],dx
     cd8:	5f                   	pop    rdi
     cd9:	6d                   	ins    DWORD PTR es:[rdi],dx
     cda:	61                   	(bad)  
     cdb:	69 6e 5f 63 70 75 00 	imul   ebp,DWORD PTR [rsi+0x5f],0x757063
     ce2:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
     ce9:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
     cec:	5f                   	pop    rdi
     ced:	5f                   	pop    rdi
     cee:	63 5f 45             	movsxd ebx,DWORD PTR [rdi+0x45]
     cf1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cf4:	67 6c                	ins    BYTE PTR es:[edi],dx
     cf6:	5f                   	pop    rdi
     cf7:	64 65 74 65          	fs gs je d60 <_init-0x12a0>
     cfb:	63 74 5f 62          	movsxd esi,DWORD PTR [rdi+rbx*2+0x62]
     cff:	6c                   	ins    BYTE PTR es:[rdi],dx
     d00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d01:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
     d04:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d05:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     d09:	67 6c                	ins    BYTE PTR es:[edi],dx
     d0b:	5f                   	pop    rdi
     d0c:	6c                   	ins    BYTE PTR es:[rdi],dx
     d0d:	65 61                	gs (bad) 
     d0f:	70 5f                	jo     d70 <_init-0x1290>
     d11:	73 65                	jae    d78 <_init-0x1288>
     d13:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     d16:	64 73 5f             	fs jae d78 <_init-0x1288>
     d19:	73 75                	jae    d90 <_init-0x1270>
     d1b:	70 70                	jo     d8d <_init-0x1273>
     d1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1e:	72 74                	jb     d94 <_init-0x126c>
     d20:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     d23:	73 74                	jae    d99 <_init-0x1267>
     d25:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     d27:	5f                   	pop    rdi
     d28:	5f                   	pop    rdi
     d29:	73 6f                	jae    d9a <_init-0x1266>
     d2b:	66 74 5f             	data16 je d8d <_init-0x1273>
     d2e:	6c                   	ins    BYTE PTR es:[rdi],dx
     d2f:	69 6e 6b 73 5f 5f 69 	imul   ebp,DWORD PTR [rsi+0x6b],0x695f5f73
     d36:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d37:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
     d3e:	65 
     d3f:	5f                   	pop    rdi
     d40:	5f                   	pop    rdi
     d41:	5f                   	pop    rdi
     d42:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     d44:	61                   	(bad)  
     d45:	62 62                	(bad)  
     d47:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     d4a:	73 74                	jae    dc0 <_init-0x1240>
     d4c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     d4e:	5f                   	pop    rdi
     d4f:	5f                   	pop    rdi
     d50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d51:	73 5f                	jae    db2 <_init-0x124e>
     d53:	6c                   	ins    BYTE PTR es:[rdi],dx
     d54:	69 62 5f 45 00 5f 5f 	imul   esp,DWORD PTR [rdx+0x5f],0x5f5f0045
     d5b:	67 6c                	ins    BYTE PTR es:[edi],dx
     d5d:	5f                   	pop    rdi
     d5e:	64 65 66 61          	fs gs data16 (bad) 
     d62:	75 6c                	jne    dd0 <_init-0x1230>
     d64:	74 5f                	je     dc5 <_init-0x123b>
     d66:	73 74                	jae    ddc <_init-0x1224>
     d68:	61                   	(bad)  
     d69:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     d6c:	73 69                	jae    dd7 <_init-0x1229>
     d6e:	7a 65                	jp     dd5 <_init-0x122b>
     d70:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     d73:	73 74                	jae    de9 <_init-0x1217>
     d75:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     d77:	5f                   	pop    rdi
     d78:	5f                   	pop    rdi
     d79:	64 77 61             	fs ja  ddd <_init-0x1223>
     d7c:	72 66                	jb     de4 <_init-0x121c>
     d7e:	5f                   	pop    rdi
     d7f:	6c                   	ins    BYTE PTR es:[rdi],dx
     d80:	69 6e 65 73 5f 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f5f73
     d87:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     d89:	61                   	(bad)  
     d8a:	62 73                	(bad)  
     d8c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d8f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     d91:	61                   	(bad)  
     d92:	74 5f                	je     df3 <_init-0x120d>
     d94:	72 75                	jb     e0b <_init-0x11f5>
     d96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d97:	74 69                	je     e02 <_init-0x11fe>
     d99:	6d                   	ins    DWORD PTR es:[rdi],dx
     d9a:	65 5f                	gs pop rdi
     d9c:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
     da2:	7a 65                	jp     e09 <_init-0x11f7>
     da4:	00 67 6e             	add    BYTE PTR [rdi+0x6e],ah
     da7:	61                   	(bad)  
     da8:	74 5f                	je     e09 <_init-0x11f7>
     daa:	65 78 69             	gs js  e16 <_init-0x11ea>
     dad:	74 5f                	je     e0e <_init-0x11f2>
     daf:	73 74                	jae    e25 <_init-0x11db>
     db1:	61                   	(bad)  
     db2:	74 75                	je     e29 <_init-0x11d7>
     db4:	73 00                	jae    db6 <_init-0x124a>
     db6:	61                   	(bad)  
     db7:	64 61                	fs (bad) 
     db9:	5f                   	pop    rdi
     dba:	5f                   	pop    rdi
     dbb:	73 74                	jae    e31 <_init-0x11cf>
     dbd:	72 69                	jb     e28 <_init-0x11d8>
     dbf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dc0:	67 73 5f             	addr32 jae e22 <_init-0x11de>
     dc3:	5f                   	pop    rdi
     dc4:	5f                   	pop    rdi
     dc5:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     dc7:	61                   	(bad)  
     dc8:	62 73                	(bad)  
     dca:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
     dcd:	61                   	(bad)  
     dce:	5f                   	pop    rdi
     dcf:	5f                   	pop    rdi
     dd0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     dd3:	74 61                	je     e36 <_init-0x11ca>
     dd5:	69 6e 65 72 73 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f7372
     ddc:	5f                   	pop    rdi
     ddd:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     ddf:	61                   	(bad)  
     de0:	62 73                	(bad)  
     de2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     de5:	67 6c                	ins    BYTE PTR es:[edi],dx
     de7:	5f                   	pop    rdi
     de8:	71 75                	jno    e5f <_init-0x11a1>
     dea:	65 75 69             	gs jne e56 <_init-0x11aa>
     ded:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dee:	67 5f                	addr32 pop rdi
     df0:	70 6f                	jo     e61 <_init-0x119f>
     df2:	6c                   	ins    BYTE PTR es:[rdi],dx
     df3:	69 63 79 00 73 79 73 	imul   esp,DWORD PTR [rbx+0x79],0x73797300
     dfa:	74 65                	je     e61 <_init-0x119f>
     dfc:	6d                   	ins    DWORD PTR es:[rdi],dx
     dfd:	5f                   	pop    rdi
     dfe:	5f                   	pop    rdi
     dff:	73 6f                	jae    e70 <_init-0x1190>
     e01:	66 74 5f             	data16 je e63 <_init-0x119d>
     e04:	6c                   	ins    BYTE PTR es:[rdi],dx
     e05:	69 6e 6b 73 5f 5f 69 	imul   ebp,DWORD PTR [rsi+0x6b],0x695f5f73
     e0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e0d:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
     e14:	65 
     e15:	5f                   	pop    rdi
     e16:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     e1a:	67 6c                	ins    BYTE PTR es:[edi],dx
     e1c:	5f                   	pop    rdi
     e1d:	77 63                	ja     e82 <_init-0x117e>
     e1f:	5f                   	pop    rdi
     e20:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e22:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
     e25:	69 6e 67 00 61 64 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61646100
     e2c:	5f                   	pop    rdi
     e2d:	5f                   	pop    rdi
     e2e:	69 6f 5f 65 78 63 65 	imul   ebp,DWORD PTR [rdi+0x5f],0x65637865
     e35:	70 74                	jo     eab <_init-0x1155>
     e37:	69 6f 6e 73 5f 5f 5f 	imul   ebp,DWORD PTR [rdi+0x6e],0x5f5f5f73
     e3e:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     e40:	61                   	(bad)  
     e41:	62 73                	(bad)  
     e43:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     e46:	73 74                	jae    ebc <_init-0x1144>
     e48:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     e4a:	5f                   	pop    rdi
     e4b:	5f                   	pop    rdi
     e4c:	73 6f                	jae    ebd <_init-0x1143>
     e4e:	66 74 5f             	data16 je eb0 <_init-0x1150>
     e51:	6c                   	ins    BYTE PTR es:[rdi],dx
     e52:	69 6e 6b 73 5f 45 00 	imul   ebp,DWORD PTR [rsi+0x6b],0x455f73
     e59:	5f                   	pop    rdi
     e5a:	5f                   	pop    rdi
     e5b:	67 6c                	ins    BYTE PTR es:[edi],dx
     e5d:	5f                   	pop    rdi
     e5e:	75 6e                	jne    ece <_init-0x1132>
     e60:	72 65                	jb     ec7 <_init-0x1139>
     e62:	73 65                	jae    ec9 <_init-0x1137>
     e64:	72 76                	jb     edc <_init-0x1124>
     e66:	65 5f                	gs pop rdi
     e68:	61                   	(bad)  
     e69:	6c                   	ins    BYTE PTR es:[rdi],dx
     e6a:	6c                   	ins    BYTE PTR es:[rdi],dx
     e6b:	5f                   	pop    rdi
     e6c:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     e73:	70 74                	jo     ee9 <_init-0x1117>
     e75:	73 00                	jae    e77 <_init-0x1189>
     e77:	5f                   	pop    rdi
     e78:	5f                   	pop    rdi
     e79:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     e7b:	61                   	(bad)  
     e7c:	74 5f                	je     edd <_init-0x1123>
     e7e:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
     e85:	69 7a 65 00 69 6e 74 	imul   edi,DWORD PTR [rdx+0x65],0x746e6900
     e8c:	65 72 66             	gs jb  ef5 <_init-0x110b>
     e8f:	61                   	(bad)  
     e90:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
     e93:	5f                   	pop    rdi
     e94:	5f                   	pop    rdi
     e95:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
     e98:	5f                   	pop    rdi
     e99:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     e9b:	61                   	(bad)  
     e9c:	62 73                	(bad)  
     e9e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ea1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     ea3:	61                   	(bad)  
     ea4:	74 5f                	je     f05 <_init-0x10fb>
     ea6:	64 65 66 61          	fs gs data16 (bad) 
     eaa:	75 6c                	jne    f18 <_init-0x10e8>
     eac:	74 5f                	je     f0d <_init-0x10f3>
     eae:	73 73                	jae    f23 <_init-0x10dd>
     eb0:	5f                   	pop    rdi
     eb1:	73 69                	jae    f1c <_init-0x10e4>
     eb3:	7a 65                	jp     f1a <_init-0x10e6>
     eb5:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     eb8:	73 74                	jae    f2e <_init-0x10d2>
     eba:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     ebc:	5f                   	pop    rdi
     ebd:	5f                   	pop    rdi
     ebe:	65 78 63             	gs js  f24 <_init-0x10dc>
     ec1:	65 70 74             	gs jo  f38 <_init-0x10c8>
     ec4:	69 6f 6e 73 5f 5f 5f 	imul   ebp,DWORD PTR [rdi+0x6e],0x5f5f5f73
     ecb:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     ecd:	61                   	(bad)  
     ece:	62 73                	(bad)  
     ed0:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
     ed3:	61                   	(bad)  
     ed4:	5f                   	pop    rdi
     ed5:	5f                   	pop    rdi
     ed6:	73 74                	jae    f4c <_init-0x10b4>
     ed8:	72 69                	jb     f43 <_init-0x10bd>
     eda:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     edb:	67 73 5f             	addr32 jae f3d <_init-0x10c3>
     ede:	5f                   	pop    rdi
     edf:	6d                   	ins    DWORD PTR es:[rdi],dx
     ee0:	61                   	(bad)  
     ee1:	70 73                	jo     f56 <_init-0x10aa>
     ee3:	5f                   	pop    rdi
     ee4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     ee8:	67 6c                	ins    BYTE PTR es:[edi],dx
     eea:	5f                   	pop    rdi
     eeb:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     ef2:	70 74                	jo     f68 <_init-0x1098>
     ef4:	5f                   	pop    rdi
     ef5:	73 74                	jae    f6b <_init-0x1095>
     ef7:	61                   	(bad)  
     ef8:	74 65                	je     f5f <_init-0x10a1>
     efa:	73 00                	jae    efc <_init-0x1104>
     efc:	73 79                	jae    f77 <_init-0x1089>
     efe:	73 74                	jae    f74 <_init-0x108c>
     f00:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f02:	5f                   	pop    rdi
     f03:	5f                   	pop    rdi
     f04:	65 78 63             	gs js  f6a <_init-0x1096>
     f07:	65 70 74             	gs jo  f7e <_init-0x1082>
     f0a:	69 6f 6e 73 5f 45 00 	imul   ebp,DWORD PTR [rdi+0x6e],0x455f73
     f11:	5f                   	pop    rdi
     f12:	5f                   	pop    rdi
     f13:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     f15:	61                   	(bad)  
     f16:	74 5f                	je     f77 <_init-0x1089>
     f18:	62                   	(bad)  
     f19:	69 6e 64 65 72 5f 73 	imul   ebp,DWORD PTR [rsi+0x64],0x735f7265
     f20:	73 5f                	jae    f81 <_init-0x107f>
     f22:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     f25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f26:	74 00                	je     f28 <_init-0x10d8>
     f28:	5f                   	pop    rdi
     f29:	5f                   	pop    rdi
     f2a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     f2c:	61                   	(bad)  
     f2d:	74 5f                	je     f8e <_init-0x1072>
     f2f:	72 75                	jb     fa6 <_init-0x105a>
     f31:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f32:	74 69                	je     f9d <_init-0x1063>
     f34:	6d                   	ins    DWORD PTR es:[rdi],dx
     f35:	65 5f                	gs pop rdi
     f37:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
     f3e:	69 7a 65 00 73 79 73 	imul   edi,DWORD PTR [rdx+0x65],0x73797300
     f45:	74 65                	je     fac <_init-0x1054>
     f47:	6d                   	ins    DWORD PTR es:[rdi],dx
     f48:	5f                   	pop    rdi
     f49:	5f                   	pop    rdi
     f4a:	65 78 63             	gs js  fb0 <_init-0x1050>
     f4d:	65 70 74             	gs jo  fc4 <_init-0x103c>
     f50:	69 6f 6e 5f 74 61 62 	imul   ebp,DWORD PTR [rdi+0x6e],0x6261745f
     f57:	6c                   	ins    BYTE PTR es:[rdi],dx
     f58:	65 5f                	gs pop rdi
     f5a:	45 00 61 64          	add    BYTE PTR [r9+0x64],r12b
     f5e:	61                   	(bad)  
     f5f:	5f                   	pop    rdi
     f60:	5f                   	pop    rdi
     f61:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     f64:	74 61                	je     fc7 <_init-0x1039>
     f66:	69 6e 65 72 73 5f 45 	imul   ebp,DWORD PTR [rsi+0x65],0x455f7372
     f6d:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     f70:	73 74                	jae    fe6 <_init-0x101a>
     f72:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f74:	5f                   	pop    rdi
     f75:	5f                   	pop    rdi
     f76:	65 78 63             	gs js  fdc <_init-0x1024>
     f79:	65 70 74             	gs jo  ff0 <_init-0x1010>
     f7c:	69 6f 6e 5f 74 61 62 	imul   ebp,DWORD PTR [rdi+0x6e],0x6261745f
     f83:	6c                   	ins    BYTE PTR es:[rdi],dx
     f84:	65 5f                	gs pop rdi
     f86:	5f                   	pop    rdi
     f87:	5f                   	pop    rdi
     f88:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     f8a:	61                   	(bad)  
     f8b:	62 62                	(bad)  
     f8d:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
     f90:	73 74                	jae    1006 <_init-0xffa>
     f92:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f94:	5f                   	pop    rdi
     f95:	5f                   	pop    rdi
     f96:	73 6f                	jae    1007 <_init-0xff9>
     f98:	66 74 5f             	data16 je ffa <_init-0x1006>
     f9b:	6c                   	ins    BYTE PTR es:[rdi],dx
     f9c:	69 6e 6b 73 5f 5f 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f5f5f73
     fa3:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     fa5:	61                   	(bad)  
     fa6:	62 73                	(bad)  
     fa8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     fab:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     fad:	61                   	(bad)  
     fae:	74 5f                	je     100f <_init-0xff1>
     fb0:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
     fb6:	7a 65                	jp     101d <_init-0xfe3>
     fb8:	5f                   	pop    rdi
     fb9:	6c                   	ins    BYTE PTR es:[rdi],dx
     fba:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
     fc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fc2:	62                   	(bad)  
     fc3:	6a 65                	push   0x65
     fc5:	63 74 73 00          	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
     fc9:	73 79                	jae    1044 <_init-0xfbc>
     fcb:	73 74                	jae    1041 <_init-0xfbf>
     fcd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     fcf:	5f                   	pop    rdi
     fd0:	5f                   	pop    rdi
     fd1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fd2:	62                   	(bad)  
     fd3:	6a 65                	push   0x65
     fd5:	63 74 5f 72          	movsxd esi,DWORD PTR [rdi+rbx*2+0x72]
     fd9:	65 61                	gs (bad) 
     fdb:	64 65 72 5f          	fs gs jb 103e <_init-0xfc2>
     fdf:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     fe3:	67 6c                	ins    BYTE PTR es:[edi],dx
     fe5:	5f                   	pop    rdi
     fe6:	6d                   	ins    DWORD PTR es:[rdi],dx
     fe7:	61                   	(bad)  
     fe8:	69 6e 5f 70 72 69 6f 	imul   ebp,DWORD PTR [rsi+0x5f],0x6f697270
     fef:	72 69                	jb     105a <_init-0xfa6>
     ff1:	74 79                	je     106c <_init-0xf94>
     ff3:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
     ff6:	61                   	(bad)  
     ff7:	5f                   	pop    rdi
     ff8:	5f                   	pop    rdi
     ff9:	73 74                	jae    106f <_init-0xf91>
     ffb:	72 69                	jb     1066 <_init-0xf9a>
     ffd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ffe:	67 73 5f             	addr32 jae 1060 <_init-0xfa0>
    1001:	45 00 6c 69 62       	add    BYTE PTR [r9+rbp*2+0x62],r13b
    1006:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    1008:	2e 73 6f             	cs jae 107a <_init-0xf86>
    100b:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
    100e:	6c                   	ins    BYTE PTR es:[rdi],dx
    100f:	69 62 67 63 63 5f 73 	imul   esp,DWORD PTR [rdx+0x67],0x735f6363
    1016:	2e 73 6f             	cs jae 1088 <_init-0xf78>
    1019:	2e 31 00             	xor    DWORD PTR cs:[rax],eax
    101c:	6c                   	ins    BYTE PTR es:[rdi],dx
    101d:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
    1024:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1028:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
    102b:	5f                   	pop    rdi
    102c:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
    1032:	7a 65                	jp     1099 <_init-0xf67>
    1034:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1037:	6c                   	ins    BYTE PTR es:[rdi],dx
    1038:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
    103f:	72 74                	jb     10b5 <_init-0xf4b>
    1041:	5f                   	pop    rdi
    1042:	6d                   	ins    DWORD PTR es:[rdi],dx
    1043:	61                   	(bad)  
    1044:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
    104b:	43 5f                	rex.XB pop r15
    104d:	32 2e                	xor    ch,BYTE PTR [rsi]
    104f:	32 2e                	xor    ch,BYTE PTR [rsi]
    1051:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000001054 <.gnu.version>:
	...
    1060:	02 00                	add    al,BYTE PTR [rax]
	...
    1086:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

00000000000010d8 <.gnu.version_r>:
    10d8:	01 00                	add    DWORD PTR [rax],eax
    10da:	01 00                	add    DWORD PTR [rax],eax
    10dc:	cc                   	int3   
    10dd:	05 00 00 10 00       	add    eax,0x100000
    10e2:	00 00                	add    BYTE PTR [rax],al
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	75 1a                	jne    1104 <_init-0xefc>
    10ea:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
    10f0:	f7                   	.byte 0xf7
    10f1:	05 00 00 00 00       	add    eax,0x0
	...

Disassembly of section .rela.dyn:

00000000000010f8 <.rela.dyn>:
    10f8:	b8 4d 00 00 00       	mov    eax,0x4d
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	00 08                	add    BYTE PTR [rax],cl
    1101:	00 00                	add    BYTE PTR [rax],al
    1103:	00 00                	add    BYTE PTR [rax],al
    1105:	00 00                	add    BYTE PTR [rax],al
    1107:	00 60 22             	add    BYTE PTR [rax+0x22],ah
    110a:	00 00                	add    BYTE PTR [rax],al
    110c:	00 00                	add    BYTE PTR [rax],al
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	c0 4d 00 00          	ror    BYTE PTR [rbp+0x0],0x0
    1114:	00 00                	add    BYTE PTR [rax],al
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	08 00                	or     BYTE PTR [rax],al
    111a:	00 00                	add    BYTE PTR [rax],al
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	20 22                	and    BYTE PTR [rdx],ah
    1122:	00 00                	add    BYTE PTR [rax],al
    1124:	00 00                	add    BYTE PTR [rax],al
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	c0 50 00 00          	rcl    BYTE PTR [rax+0x0],0x0
    112c:	00 00                	add    BYTE PTR [rax],al
    112e:	00 00                	add    BYTE PTR [rax],al
    1130:	08 00                	or     BYTE PTR [rax],al
    1132:	00 00                	add    BYTE PTR [rax],al
    1134:	00 00                	add    BYTE PTR [rax],al
    1136:	00 00                	add    BYTE PTR [rax],al
    1138:	c0 50 00 00          	rcl    BYTE PTR [rax+0x0],0x0
    113c:	00 00                	add    BYTE PTR [rax],al
    113e:	00 00                	add    BYTE PTR [rax],al
    1140:	d8 4f 00             	fmul   DWORD PTR [rdi+0x0]
    1143:	00 00                	add    BYTE PTR [rax],al
    1145:	00 00                	add    BYTE PTR [rax],al
    1147:	00 06                	add    BYTE PTR [rsi],al
    1149:	00 00                	add    BYTE PTR [rax],al
    114b:	00 03                	add    BYTE PTR [rbx],al
	...
    1155:	00 00                	add    BYTE PTR [rax],al
    1157:	00 e0                	add    al,ah
    1159:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    115c:	00 00                	add    BYTE PTR [rax],al
    115e:	00 00                	add    BYTE PTR [rax],al
    1160:	06                   	(bad)  
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	00 06                	add    BYTE PTR [rsi],al
	...
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 e8                	add    al,ch
    1171:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	00 00                	add    BYTE PTR [rax],al
    1178:	06                   	(bad)  
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 07                	add    BYTE PTR [rdi],al
	...
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	00 f0                	add    al,dh
    1189:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	00 00                	add    BYTE PTR [rax],al
    1190:	06                   	(bad)  
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	00 0a                	add    BYTE PTR [rdx],cl
	...
    119d:	00 00                	add    BYTE PTR [rax],al
    119f:	00 f8                	add    al,bh
    11a1:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    11a4:	00 00                	add    BYTE PTR [rax],al
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	06                   	(bad)  
    11a9:	00 00                	add    BYTE PTR [rax],al
    11ab:	00 19                	add    BYTE PTR [rcx],bl
	...
    11b5:	00 00                	add    BYTE PTR [rax],al
    11b7:	00 e0                	add    al,ah
    11b9:	50                   	push   rax
    11ba:	00 00                	add    BYTE PTR [rax],al
    11bc:	00 00                	add    BYTE PTR [rax],al
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	05 00 00 00 1b       	add    eax,0x1b000000
	...
    11d1:	51                   	push   rcx
    11d2:	00 00                	add    BYTE PTR [rax],al
    11d4:	00 00                	add    BYTE PTR [rax],al
    11d6:	00 00                	add    BYTE PTR [rax],al
    11d8:	05 00 00 00 20       	add    eax,0x20000000
	...
    11e5:	00 00                	add    BYTE PTR [rax],al
    11e7:	00 04 51             	add    BYTE PTR [rcx+rdx*2],al
    11ea:	00 00                	add    BYTE PTR [rax],al
    11ec:	00 00                	add    BYTE PTR [rax],al
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	05 00 00 00 21       	add    eax,0x21000000
	...
    11fd:	00 00                	add    BYTE PTR [rax],al
    11ff:	00 08                	add    BYTE PTR [rax],cl
    1201:	51                   	push   rcx
    1202:	00 00                	add    BYTE PTR [rax],al
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	00 00                	add    BYTE PTR [rax],al
    1208:	05 00 00 00 32       	add    eax,0x32000000
	...
    1215:	00 00                	add    BYTE PTR [rax],al
    1217:	00 20                	add    BYTE PTR [rax],ah
    1219:	51                   	push   rcx
    121a:	00 00                	add    BYTE PTR [rax],al
    121c:	00 00                	add    BYTE PTR [rax],al
    121e:	00 00                	add    BYTE PTR [rax],al
    1220:	05 00 00 00 25       	add    eax,0x25000000
	...
    122d:	00 00                	add    BYTE PTR [rax],al
    122f:	00 40 51             	add    BYTE PTR [rax+0x51],al
    1232:	00 00                	add    BYTE PTR [rax],al
    1234:	00 00                	add    BYTE PTR [rax],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	05 00 00 00 28       	add    eax,0x28000000
	...
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	00 50 51             	add    BYTE PTR [rax+0x51],dl
    124a:	00 00                	add    BYTE PTR [rax],al
    124c:	00 00                	add    BYTE PTR [rax],al
    124e:	00 00                	add    BYTE PTR [rax],al
    1250:	05 00 00 00 29       	add    eax,0x29000000
	...
    125d:	00 00                	add    BYTE PTR [rax],al
    125f:	00 58 51             	add    BYTE PTR [rax+0x51],bl
    1262:	00 00                	add    BYTE PTR [rax],al
    1264:	00 00                	add    BYTE PTR [rax],al
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	05 00 00 00 34       	add    eax,0x34000000
	...
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	00 60 51             	add    BYTE PTR [rax+0x51],ah
    127a:	00 00                	add    BYTE PTR [rax],al
    127c:	00 00                	add    BYTE PTR [rax],al
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	05 00 00 00 3e       	add    eax,0x3e000000
	...
    128d:	00 00                	add    BYTE PTR [rax],al
    128f:	00 68 51             	add    BYTE PTR [rax+0x51],ch
    1292:	00 00                	add    BYTE PTR [rax],al
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	00 00                	add    BYTE PTR [rax],al
    1298:	05 00 00 00 37       	add    eax,0x37000000
	...
    12a5:	00 00                	add    BYTE PTR [rax],al
    12a7:	00 80 51 00 00 00    	add    BYTE PTR [rax+0x51],al
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 05 00 00 00 1e    	add    BYTE PTR [rip+0x1e000000],al        # 1e0012b5 <_end+0x1dff97f5>
	...
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	00 84 51 00 00 00 00 	add    BYTE PTR [rcx+rdx*2+0x0],al
    12c6:	00 00                	add    BYTE PTR [rax],al
    12c8:	05 00 00 00 33       	add    eax,0x33000000
	...
    12d5:	00 00                	add    BYTE PTR [rax],al
    12d7:	00 88 51 00 00 00    	add    BYTE PTR [rax+0x51],cl
    12dd:	00 00                	add    BYTE PTR [rax],al
    12df:	00 05 00 00 00 30    	add    BYTE PTR [rip+0x30000000],al        # 300012e5 <_end+0x2fff9825>
	...
    12ed:	00 00                	add    BYTE PTR [rax],al
    12ef:	00 90 51 00 00 00    	add    BYTE PTR [rax+0x51],dl
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	00 05 00 00 00 2a    	add    BYTE PTR [rip+0x2a000000],al        # 2a0012fd <_end+0x29ff983d>
	...
    1305:	00 00                	add    BYTE PTR [rax],al
    1307:	00 98 51 00 00 00    	add    BYTE PTR [rax+0x51],bl
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	00 05 00 00 00 1c    	add    BYTE PTR [rip+0x1c000000],al        # 1c001315 <_end+0x1bff9855>
	...
    131d:	00 00                	add    BYTE PTR [rax],al
    131f:	00 a0 51 00 00 00    	add    BYTE PTR [rax+0x51],ah
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	00 05 00 00 00 3b    	add    BYTE PTR [rip+0x3b000000],al        # 3b00132d <_end+0x3aff986d>
	...
    1335:	00 00                	add    BYTE PTR [rax],al
    1337:	00 a8 51 00 00 00    	add    BYTE PTR [rax+0x51],ch
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	00 05 00 00 00 2d    	add    BYTE PTR [rip+0x2d000000],al        # 2d001345 <_end+0x2cff9885>
	...
    134d:	00 00                	add    BYTE PTR [rax],al
    134f:	00 ac 51 00 00 00 00 	add    BYTE PTR [rcx+rdx*2+0x0],ch
    1356:	00 00                	add    BYTE PTR [rax],al
    1358:	05 00 00 00 1a       	add    eax,0x1a000000
	...
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 b0 51 00 00 00    	add    BYTE PTR [rax+0x51],dh
    136d:	00 00                	add    BYTE PTR [rax],al
    136f:	00 05 00 00 00 23    	add    BYTE PTR [rip+0x23000000],al        # 23001375 <_end+0x22ff98b5>
	...
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	00 c0                	add    al,al
    1381:	51                   	push   rcx
    1382:	00 00                	add    BYTE PTR [rax],al
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	05 00 00 00 2f       	add    eax,0x2f000000
	...
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 c2                	add    dl,al
    1399:	51                   	push   rcx
    139a:	00 00                	add    BYTE PTR [rax],al
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	05 00 00 00 38       	add    eax,0x38000000
	...
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 c4                	add    ah,al
    13b1:	51                   	push   rcx
    13b2:	00 00                	add    BYTE PTR [rax],al
    13b4:	00 00                	add    BYTE PTR [rax],al
    13b6:	00 00                	add    BYTE PTR [rax],al
    13b8:	05 00 00 00 2e       	add    eax,0x2e000000
	...
    13c5:	00 00                	add    BYTE PTR [rax],al
    13c7:	00 c8                	add    al,cl
    13c9:	51                   	push   rcx
    13ca:	00 00                	add    BYTE PTR [rax],al
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	00 00                	add    BYTE PTR [rax],al
    13d0:	05 00 00 00 3a       	add    eax,0x3a000000
	...
    13dd:	00 00                	add    BYTE PTR [rax],al
    13df:	00 d0                	add    al,dl
    13e1:	51                   	push   rcx
    13e2:	00 00                	add    BYTE PTR [rax],al
    13e4:	00 00                	add    BYTE PTR [rax],al
    13e6:	00 00                	add    BYTE PTR [rax],al
    13e8:	05 00 00 00 3c       	add    eax,0x3c000000
	...
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	00 d2                	add    dl,dl
    13f9:	51                   	push   rcx
    13fa:	00 00                	add    BYTE PTR [rax],al
    13fc:	00 00                	add    BYTE PTR [rax],al
    13fe:	00 00                	add    BYTE PTR [rax],al
    1400:	05 00 00 00 24       	add    eax,0x24000000
	...
    140d:	00 00                	add    BYTE PTR [rax],al
    140f:	00 e0                	add    al,ah
    1411:	51                   	push   rcx
    1412:	00 00                	add    BYTE PTR [rax],al
    1414:	00 00                	add    BYTE PTR [rax],al
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	05 00 00 00 39       	add    eax,0x39000000
	...
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 f0                	add    al,dh
    1429:	51                   	push   rcx
    142a:	00 00                	add    BYTE PTR [rax],al
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	00 00                	add    BYTE PTR [rax],al
    1430:	05 00 00 00 3d       	add    eax,0x3d000000
	...
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	00 f8                	add    al,bh
    1441:	51                   	push   rcx
    1442:	00 00                	add    BYTE PTR [rax],al
    1444:	00 00                	add    BYTE PTR [rax],al
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	05 00 00 00 2b       	add    eax,0x2b000000
	...
    1459:	52                   	push   rdx
    145a:	00 00                	add    BYTE PTR [rax],al
    145c:	00 00                	add    BYTE PTR [rax],al
    145e:	00 00                	add    BYTE PTR [rax],al
    1460:	05 00 00 00 35       	add    eax,0x35000000
	...
    146d:	00 00                	add    BYTE PTR [rax],al
    146f:	00 02                	add    BYTE PTR [rdx],al
    1471:	52                   	push   rdx
    1472:	00 00                	add    BYTE PTR [rax],al
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	05 00 00 00 22       	add    eax,0x22000000
	...
    1485:	00 00                	add    BYTE PTR [rax],al
    1487:	00 20                	add    BYTE PTR [rax],ah
    1489:	52                   	push   rdx
    148a:	00 00                	add    BYTE PTR [rax],al
    148c:	00 00                	add    BYTE PTR [rax],al
    148e:	00 00                	add    BYTE PTR [rax],al
    1490:	05 00 00 00 1f       	add    eax,0x1f000000
	...
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 40 52             	add    BYTE PTR [rax+0x52],al
    14a2:	00 00                	add    BYTE PTR [rax],al
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	05 00 00 00 26       	add    eax,0x26000000
	...
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    14ba:	00 00                	add    BYTE PTR [rax],al
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	05 00 00 00 36       	add    eax,0x36000000
	...
    14cd:	00 00                	add    BYTE PTR [rax],al
    14cf:	00 58 52             	add    BYTE PTR [rax+0x52],bl
    14d2:	00 00                	add    BYTE PTR [rax],al
    14d4:	00 00                	add    BYTE PTR [rax],al
    14d6:	00 00                	add    BYTE PTR [rax],al
    14d8:	05 00 00 00 31       	add    eax,0x31000000
	...
    14e5:	00 00                	add    BYTE PTR [rax],al
    14e7:	00 60 52             	add    BYTE PTR [rax+0x52],ah
    14ea:	00 00                	add    BYTE PTR [rax],al
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	05 00 00 00 2c       	add    eax,0x2c000000
	...
    14fd:	00 00                	add    BYTE PTR [rax],al
    14ff:	00 64 52 00          	add    BYTE PTR [rdx+rdx*2+0x0],ah
    1503:	00 00                	add    BYTE PTR [rax],al
    1505:	00 00                	add    BYTE PTR [rax],al
    1507:	00 05 00 00 00 1d    	add    BYTE PTR [rip+0x1d000000],al        # 1d00150d <_end+0x1cff9a4d>
	...
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 68 52             	add    BYTE PTR [rax+0x52],ch
    151a:	00 00                	add    BYTE PTR [rax],al
    151c:	00 00                	add    BYTE PTR [rax],al
    151e:	00 00                	add    BYTE PTR [rax],al
    1520:	05 00 00 00 27       	add    eax,0x27000000
	...

Disassembly of section .rela.plt:

0000000000001530 <.rela.plt>:
    1530:	18 50 00             	sbb    BYTE PTR [rax+0x0],dl
    1533:	00 00                	add    BYTE PTR [rax],al
    1535:	00 00                	add    BYTE PTR [rax],al
    1537:	00 07                	add    BYTE PTR [rdi],al
    1539:	00 00                	add    BYTE PTR [rax],al
    153b:	00 01                	add    BYTE PTR [rcx],al
	...
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 20                	add    BYTE PTR [rax],ah
    1549:	50                   	push   rax
    154a:	00 00                	add    BYTE PTR [rax],al
    154c:	00 00                	add    BYTE PTR [rax],al
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	07                   	(bad)  
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	00 02                	add    BYTE PTR [rdx],al
	...
    155d:	00 00                	add    BYTE PTR [rax],al
    155f:	00 28                	add    BYTE PTR [rax],ch
    1561:	50                   	push   rax
    1562:	00 00                	add    BYTE PTR [rax],al
    1564:	00 00                	add    BYTE PTR [rax],al
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	07                   	(bad)  
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    1576:	00 00                	add    BYTE PTR [rax],al
    1578:	30 50 00             	xor    BYTE PTR [rax+0x0],dl
    157b:	00 00                	add    BYTE PTR [rax],al
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	00 07                	add    BYTE PTR [rdi],al
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1589 <_init-0xa77>
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	00 00                	add    BYTE PTR [rax],al
    158d:	00 00                	add    BYTE PTR [rax],al
    158f:	00 38                	add    BYTE PTR [rax],bh
    1591:	50                   	push   rax
    1592:	00 00                	add    BYTE PTR [rax],al
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	07                   	(bad)  
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	00 08                	add    BYTE PTR [rax],cl
	...
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	00 40 50             	add    BYTE PTR [rax+0x50],al
    15aa:	00 00                	add    BYTE PTR [rax],al
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 00                	add    BYTE PTR [rax],al
    15b0:	07                   	(bad)  
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 09                	add    BYTE PTR [rcx],cl
	...
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 48 50             	add    BYTE PTR [rax+0x50],cl
    15c2:	00 00                	add    BYTE PTR [rax],al
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 00                	add    BYTE PTR [rax],al
    15c8:	07                   	(bad)  
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	00 0b                	add    BYTE PTR [rbx],cl
	...
    15d5:	00 00                	add    BYTE PTR [rax],al
    15d7:	00 50 50             	add    BYTE PTR [rax+0x50],dl
    15da:	00 00                	add    BYTE PTR [rax],al
    15dc:	00 00                	add    BYTE PTR [rax],al
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	07                   	(bad)  
    15e1:	00 00                	add    BYTE PTR [rax],al
    15e3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
    15ee:	00 00                	add    BYTE PTR [rax],al
    15f0:	58                   	pop    rax
    15f1:	50                   	push   rax
    15f2:	00 00                	add    BYTE PTR [rax],al
    15f4:	00 00                	add    BYTE PTR [rax],al
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	07                   	(bad)  
    15f9:	00 00                	add    BYTE PTR [rax],al
    15fb:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1601 <_init-0x9ff>
    1601:	00 00                	add    BYTE PTR [rax],al
    1603:	00 00                	add    BYTE PTR [rax],al
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 60 50             	add    BYTE PTR [rax+0x50],ah
    160a:	00 00                	add    BYTE PTR [rax],al
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	00 00                	add    BYTE PTR [rax],al
    1610:	07                   	(bad)  
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	00 0e                	add    BYTE PTR [rsi],cl
	...
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	00 68 50             	add    BYTE PTR [rax+0x50],ch
    1622:	00 00                	add    BYTE PTR [rax],al
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	07                   	(bad)  
    1629:	00 00                	add    BYTE PTR [rax],al
    162b:	00 0f                	add    BYTE PTR [rdi],cl
	...
    1635:	00 00                	add    BYTE PTR [rax],al
    1637:	00 70 50             	add    BYTE PTR [rax+0x50],dh
    163a:	00 00                	add    BYTE PTR [rax],al
    163c:	00 00                	add    BYTE PTR [rax],al
    163e:	00 00                	add    BYTE PTR [rax],al
    1640:	07                   	(bad)  
    1641:	00 00                	add    BYTE PTR [rax],al
    1643:	00 10                	add    BYTE PTR [rax],dl
	...
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	00 78 50             	add    BYTE PTR [rax+0x50],bh
    1652:	00 00                	add    BYTE PTR [rax],al
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 00                	add    BYTE PTR [rax],al
    1658:	07                   	(bad)  
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	00 11                	add    BYTE PTR [rcx],dl
	...
    1665:	00 00                	add    BYTE PTR [rax],al
    1667:	00 80 50 00 00 00    	add    BYTE PTR [rax+0x50],al
    166d:	00 00                	add    BYTE PTR [rax],al
    166f:	00 07                	add    BYTE PTR [rdi],al
    1671:	00 00                	add    BYTE PTR [rax],al
    1673:	00 12                	add    BYTE PTR [rdx],dl
	...
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 88 50 00 00 00    	add    BYTE PTR [rax+0x50],cl
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	00 07                	add    BYTE PTR [rdi],al
    1689:	00 00                	add    BYTE PTR [rax],al
    168b:	00 13                	add    BYTE PTR [rbx],dl
	...
    1695:	00 00                	add    BYTE PTR [rax],al
    1697:	00 90 50 00 00 00    	add    BYTE PTR [rax+0x50],dl
    169d:	00 00                	add    BYTE PTR [rax],al
    169f:	00 07                	add    BYTE PTR [rdi],al
    16a1:	00 00                	add    BYTE PTR [rax],al
    16a3:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	98                   	cwde   
    16b1:	50                   	push   rax
    16b2:	00 00                	add    BYTE PTR [rax],al
    16b4:	00 00                	add    BYTE PTR [rax],al
    16b6:	00 00                	add    BYTE PTR [rax],al
    16b8:	07                   	(bad)  
    16b9:	00 00                	add    BYTE PTR [rax],al
    16bb:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 16c1 <_init-0x93f>
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	00 00                	add    BYTE PTR [rax],al
    16c5:	00 00                	add    BYTE PTR [rax],al
    16c7:	00 a0 50 00 00 00    	add    BYTE PTR [rax+0x50],ah
    16cd:	00 00                	add    BYTE PTR [rax],al
    16cf:	00 07                	add    BYTE PTR [rdi],al
    16d1:	00 00                	add    BYTE PTR [rax],al
    16d3:	00 16                	add    BYTE PTR [rsi],dl
	...
    16dd:	00 00                	add    BYTE PTR [rax],al
    16df:	00 a8 50 00 00 00    	add    BYTE PTR [rax+0x50],ch
    16e5:	00 00                	add    BYTE PTR [rax],al
    16e7:	00 07                	add    BYTE PTR [rdi],al
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	00 17                	add    BYTE PTR [rdi],dl
	...
    16f5:	00 00                	add    BYTE PTR [rax],al
    16f7:	00 b0 50 00 00 00    	add    BYTE PTR [rax+0x50],dh
    16fd:	00 00                	add    BYTE PTR [rax],al
    16ff:	00 07                	add    BYTE PTR [rdi],al
    1701:	00 00                	add    BYTE PTR [rax],al
    1703:	00 18                	add    BYTE PTR [rax],bl
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    rsp,0x8
    2004:	48 8b 05 cd 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fcd]        # 4fd8 <__gmon_start__>
    200b:	48 85 c0             	test   rax,rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   rax
    2012:	48 83 c4 08          	add    rsp,0x8
    2016:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 e2 2f 00 00    	push   QWORD PTR [rip+0x2fe2]        # 5008 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 e4 2f 00 00    	jmp    QWORD PTR [rip+0x2fe4]        # 5010 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002030 <interfaces__c___elabs@plt>:
    2030:	ff 25 e2 2f 00 00    	jmp    QWORD PTR [rip+0x2fe2]        # 5018 <interfaces__c___elabs>
    2036:	68 00 00 00 00       	push   0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <.plt>

0000000000002040 <__gnat_finalize@plt>:
    2040:	ff 25 da 2f 00 00    	jmp    QWORD PTR [rip+0x2fda]        # 5020 <__gnat_finalize>
    2046:	68 01 00 00 00       	push   0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <.plt>

0000000000002050 <system__soft_links__initialize___elabb@plt>:
    2050:	ff 25 d2 2f 00 00    	jmp    QWORD PTR [rip+0x2fd2]        # 5028 <system__soft_links__initialize___elabb>
    2056:	68 02 00 00 00       	push   0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <.plt>

0000000000002060 <system__os_lib___elabb@plt>:
    2060:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 5030 <system__os_lib___elabb>
    2066:	68 03 00 00 00       	push   0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <.plt>

0000000000002070 <ada__strings__maps___elabs@plt>:
    2070:	ff 25 c2 2f 00 00    	jmp    QWORD PTR [rip+0x2fc2]        # 5038 <ada__strings__maps___elabs>
    2076:	68 04 00 00 00       	push   0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <.plt>

0000000000002080 <ada__containers___elabs@plt>:
    2080:	ff 25 ba 2f 00 00    	jmp    QWORD PTR [rip+0x2fba]        # 5040 <ada__containers___elabs>
    2086:	68 05 00 00 00       	push   0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <.plt>

0000000000002090 <system__exceptions___elabs@plt>:
    2090:	ff 25 b2 2f 00 00    	jmp    QWORD PTR [rip+0x2fb2]        # 5048 <system__exceptions___elabs>
    2096:	68 06 00 00 00       	push   0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <.plt>

00000000000020a0 <system__exception_table___elabb@plt>:
    20a0:	ff 25 aa 2f 00 00    	jmp    QWORD PTR [rip+0x2faa]        # 5050 <system__exception_table___elabb>
    20a6:	68 07 00 00 00       	push   0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <.plt>

00000000000020b0 <system__standard_library__adafinal@plt>:
    20b0:	ff 25 a2 2f 00 00    	jmp    QWORD PTR [rip+0x2fa2]        # 5058 <system__standard_library__adafinal>
    20b6:	68 08 00 00 00       	push   0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <.plt>

00000000000020c0 <__gnat_initialize@plt>:
    20c0:	ff 25 9a 2f 00 00    	jmp    QWORD PTR [rip+0x2f9a]        # 5060 <__gnat_initialize>
    20c6:	68 09 00 00 00       	push   0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <.plt>

00000000000020d0 <system__object_reader___elabs@plt>:
    20d0:	ff 25 92 2f 00 00    	jmp    QWORD PTR [rip+0x2f92]        # 5068 <system__object_reader___elabs>
    20d6:	68 0a 00 00 00       	push   0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <.plt>

00000000000020e0 <__gnat_runtime_finalize@plt>:
    20e0:	ff 25 8a 2f 00 00    	jmp    QWORD PTR [rip+0x2f8a]        # 5070 <__gnat_runtime_finalize>
    20e6:	68 0b 00 00 00       	push   0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <.plt>

00000000000020f0 <system__soft_links___elabs@plt>:
    20f0:	ff 25 82 2f 00 00    	jmp    QWORD PTR [rip+0x2f82]        # 5078 <system__soft_links___elabs>
    20f6:	68 0c 00 00 00       	push   0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <.plt>

0000000000002100 <ada__strings__maps__constants___elabs@plt>:
    2100:	ff 25 7a 2f 00 00    	jmp    QWORD PTR [rip+0x2f7a]        # 5080 <ada__strings__maps__constants___elabs>
    2106:	68 0d 00 00 00       	push   0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <.plt>

0000000000002110 <system__traceback__symbolic___elabb@plt>:
    2110:	ff 25 72 2f 00 00    	jmp    QWORD PTR [rip+0x2f72]        # 5088 <system__traceback__symbolic___elabb>
    2116:	68 0e 00 00 00       	push   0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <.plt>

0000000000002120 <system__dwarf_lines___elabs@plt>:
    2120:	ff 25 6a 2f 00 00    	jmp    QWORD PTR [rip+0x2f6a]        # 5090 <system__dwarf_lines___elabs>
    2126:	68 0f 00 00 00       	push   0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <.plt>

0000000000002130 <ada__io_exceptions___elabs@plt>:
    2130:	ff 25 62 2f 00 00    	jmp    QWORD PTR [rip+0x2f62]        # 5098 <ada__io_exceptions___elabs>
    2136:	68 10 00 00 00       	push   0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <.plt>

0000000000002140 <system__secondary_stack__ss_stackIP@plt>:
    2140:	ff 25 5a 2f 00 00    	jmp    QWORD PTR [rip+0x2f5a]        # 50a0 <system__secondary_stack__ss_stackIP>
    2146:	68 11 00 00 00       	push   0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <.plt>

0000000000002150 <ada__strings___elabs@plt>:
    2150:	ff 25 52 2f 00 00    	jmp    QWORD PTR [rip+0x2f52]        # 50a8 <ada__strings___elabs>
    2156:	68 12 00 00 00       	push   0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <.plt>

0000000000002160 <__gnat_runtime_initialize@plt>:
    2160:	ff 25 4a 2f 00 00    	jmp    QWORD PTR [rip+0x2f4a]        # 50b0 <__gnat_runtime_initialize>
    2166:	68 13 00 00 00       	push   0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <.plt>

Disassembly of section .plt.got:

0000000000002170 <__cxa_finalize@plt>:
    2170:	ff 25 82 2e 00 00    	jmp    QWORD PTR [rip+0x2e82]        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    2176:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000002180 <_start>:
    2180:	31 ed                	xor    ebp,ebp
    2182:	49 89 d1             	mov    r9,rdx
    2185:	5e                   	pop    rsi
    2186:	48 89 e2             	mov    rdx,rsp
    2189:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    218d:	50                   	push   rax
    218e:	54                   	push   rsp
    218f:	4c 8d 05 1a 05 00 00 	lea    r8,[rip+0x51a]        # 26b0 <__libc_csu_fini>
    2196:	48 8d 0d b3 04 00 00 	lea    rcx,[rip+0x4b3]        # 2650 <__libc_csu_init>
    219d:	48 8d 3d ec 03 00 00 	lea    rdi,[rip+0x3ec]        # 2590 <main>
    21a4:	ff 15 36 2e 00 00    	call   QWORD PTR [rip+0x2e36]        # 4fe0 <__libc_start_main@GLIBC_2.2.5>
    21aa:	f4                   	hlt    
    21ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000021b0 <deregister_tm_clones>:
    21b0:	48 8d 3d 19 2f 00 00 	lea    rdi,[rip+0x2f19]        # 50d0 <__TMC_END__>
    21b7:	48 8d 05 12 2f 00 00 	lea    rax,[rip+0x2f12]        # 50d0 <__TMC_END__>
    21be:	48 39 f8             	cmp    rax,rdi
    21c1:	74 15                	je     21d8 <deregister_tm_clones+0x28>
    21c3:	48 8b 05 1e 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e1e]        # 4fe8 <_ITM_deregisterTMCloneTable>
    21ca:	48 85 c0             	test   rax,rax
    21cd:	74 09                	je     21d8 <deregister_tm_clones+0x28>
    21cf:	ff e0                	jmp    rax
    21d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    21d8:	c3                   	ret    
    21d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000021e0 <register_tm_clones>:
    21e0:	48 8d 3d e9 2e 00 00 	lea    rdi,[rip+0x2ee9]        # 50d0 <__TMC_END__>
    21e7:	48 8d 35 e2 2e 00 00 	lea    rsi,[rip+0x2ee2]        # 50d0 <__TMC_END__>
    21ee:	48 29 fe             	sub    rsi,rdi
    21f1:	48 c1 fe 03          	sar    rsi,0x3
    21f5:	48 89 f0             	mov    rax,rsi
    21f8:	48 c1 e8 3f          	shr    rax,0x3f
    21fc:	48 01 c6             	add    rsi,rax
    21ff:	48 d1 fe             	sar    rsi,1
    2202:	74 14                	je     2218 <register_tm_clones+0x38>
    2204:	48 8b 05 e5 2d 00 00 	mov    rax,QWORD PTR [rip+0x2de5]        # 4ff0 <_ITM_registerTMCloneTable>
    220b:	48 85 c0             	test   rax,rax
    220e:	74 08                	je     2218 <register_tm_clones+0x38>
    2210:	ff e0                	jmp    rax
    2212:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2218:	c3                   	ret    
    2219:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002220 <__do_global_dtors_aux>:
    2220:	80 3d 43 30 00 00 00 	cmp    BYTE PTR [rip+0x3043],0x0        # 526a <completed.7325>
    2227:	75 2f                	jne    2258 <__do_global_dtors_aux+0x38>
    2229:	55                   	push   rbp
    222a:	48 83 3d c6 2d 00 00 	cmp    QWORD PTR [rip+0x2dc6],0x0        # 4ff8 <__cxa_finalize@GLIBC_2.2.5>
    2231:	00 
    2232:	48 89 e5             	mov    rbp,rsp
    2235:	74 0c                	je     2243 <__do_global_dtors_aux+0x23>
    2237:	48 8b 3d 82 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e82]        # 50c0 <__dso_handle>
    223e:	e8 2d ff ff ff       	call   2170 <__cxa_finalize@plt>
    2243:	e8 68 ff ff ff       	call   21b0 <deregister_tm_clones>
    2248:	c6 05 1b 30 00 00 01 	mov    BYTE PTR [rip+0x301b],0x1        # 526a <completed.7325>
    224f:	5d                   	pop    rbp
    2250:	c3                   	ret    
    2251:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2258:	c3                   	ret    
    2259:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000002260 <frame_dummy>:
    2260:	e9 7b ff ff ff       	jmp    21e0 <register_tm_clones>
    2265:	90                   	nop

0000000000002266 <ada_main__Tsec_default_sized_stacksBIP>:
    2266:	55                   	push   rbp
    2267:	48 89 e5             	mov    rbp,rsp
    226a:	41 55                	push   r13
    226c:	41 54                	push   r12
    226e:	53                   	push   rbx
    226f:	48 83 ec 18          	sub    rsp,0x18
    2273:	48 89 f9             	mov    rcx,rdi
    2276:	48 89 f3             	mov    rbx,rsi
    2279:	48 89 4d d0          	mov    QWORD PTR [rbp-0x30],rcx
    227d:	48 89 5d d8          	mov    QWORD PTR [rbp-0x28],rbx
    2281:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    2285:	8b 09                	mov    ecx,DWORD PTR [rcx]
    2287:	4c 63 e9             	movsxd r13,ecx
    228a:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    228e:	8b 71 04             	mov    esi,DWORD PTR [rcx+0x4]
    2291:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    2295:	8b 09                	mov    ecx,DWORD PTR [rcx]
    2297:	39 ce                	cmp    esi,ecx
    2299:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    229d:	8b 71 04             	mov    esi,DWORD PTR [rcx+0x4]
    22a0:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    22a4:	8b 09                	mov    ecx,DWORD PTR [rcx]
    22a6:	39 ce                	cmp    esi,ecx
    22a8:	7c 41                	jl     22eb <ada_main__Tsec_default_sized_stacksBIP+0x85>
    22aa:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    22ae:	8b 49 04             	mov    ecx,DWORD PTR [rcx+0x4]
    22b1:	48 63 f1             	movsxd rsi,ecx
    22b4:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
    22b8:	8b 09                	mov    ecx,DWORD PTR [rcx]
    22ba:	48 63 c9             	movsxd rcx,ecx
    22bd:	48 29 ce             	sub    rsi,rcx
    22c0:	48 89 f1             	mov    rcx,rsi
    22c3:	48 83 c1 01          	add    rcx,0x1
    22c7:	48 89 c8             	mov    rax,rcx
    22ca:	ba 00 00 00 00       	mov    edx,0x0
    22cf:	48 69 f2 00 42 01 00 	imul   rsi,rdx,0x14200
    22d6:	48 6b c8 00          	imul   rcx,rax,0x0
    22da:	48 01 f1             	add    rcx,rsi
    22dd:	be 00 42 01 00       	mov    esi,0x14200
    22e2:	48 f7 e6             	mul    rsi
    22e5:	48 01 d1             	add    rcx,rdx
    22e8:	48 89 ca             	mov    rdx,rcx
    22eb:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    22ef:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    22f2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    22f6:	8b 00                	mov    eax,DWORD PTR [rax]
    22f8:	39 c2                	cmp    edx,eax
    22fa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    22fe:	8b 18                	mov    ebx,DWORD PTR [rax]
    2300:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    2304:	44 8b 60 04          	mov    r12d,DWORD PTR [rax+0x4]
    2308:	44 39 e3             	cmp    ebx,r12d
    230b:	7f 2b                	jg     2338 <ada_main__Tsec_default_sized_stacksBIP+0xd2>
    230d:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    2311:	48 63 c3             	movsxd rax,ebx
    2314:	4c 29 e8             	sub    rax,r13
    2317:	48 69 c0 40 28 00 00 	imul   rax,rax,0x2840
    231e:	48 01 d0             	add    rax,rdx
    2321:	be 00 28 00 00       	mov    esi,0x2800
    2326:	48 89 c7             	mov    rdi,rax
    2329:	e8 12 fe ff ff       	call   2140 <system__secondary_stack__ss_stackIP@plt>
    232e:	44 39 e3             	cmp    ebx,r12d
    2331:	74 05                	je     2338 <ada_main__Tsec_default_sized_stacksBIP+0xd2>
    2333:	83 c3 01             	add    ebx,0x1
    2336:	eb d5                	jmp    230d <ada_main__Tsec_default_sized_stacksBIP+0xa7>
    2338:	90                   	nop
    2339:	48 83 c4 18          	add    rsp,0x18
    233d:	5b                   	pop    rbx
    233e:	41 5c                	pop    r12
    2340:	41 5d                	pop    r13
    2342:	5d                   	pop    rbp
    2343:	c3                   	ret    

0000000000002344 <adafinal>:
    2344:	55                   	push   rbp
    2345:	48 89 e5             	mov    rbp,rsp
    2348:	0f b6 05 7b 2d 00 00 	movzx  eax,BYTE PTR [rip+0x2d7b]        # 50ca <ada_main__is_elaborated>
    234f:	83 f0 01             	xor    eax,0x1
    2352:	84 c0                	test   al,al
    2354:	75 14                	jne    236a <adafinal+0x26>
    2356:	c6 05 6d 2d 00 00 00 	mov    BYTE PTR [rip+0x2d6d],0x0        # 50ca <ada_main__is_elaborated>
    235d:	e8 7e fd ff ff       	call   20e0 <__gnat_runtime_finalize@plt>
    2362:	e8 49 fd ff ff       	call   20b0 <system__standard_library__adafinal@plt>
    2367:	90                   	nop
    2368:	eb 01                	jmp    236b <adafinal+0x27>
    236a:	90                   	nop
    236b:	5d                   	pop    rbp
    236c:	c3                   	ret    
    236d:	90                   	nop

000000000000236e <adainit>:
    236e:	55                   	push   rbp
    236f:	48 89 e5             	mov    rbp,rsp
    2372:	0f b6 05 51 2d 00 00 	movzx  eax,BYTE PTR [rip+0x2d51]        # 50ca <ada_main__is_elaborated>
    2379:	84 c0                	test   al,al
    237b:	0f 85 0c 02 00 00    	jne    258d <adainit+0x21f>
    2381:	c6 05 42 2d 00 00 01 	mov    BYTE PTR [rip+0x2d42],0x1        # 50ca <ada_main__is_elaborated>
    2388:	c7 05 5e 2e 00 00 ff 	mov    DWORD PTR [rip+0x2e5e],0xffffffff        # 51f0 <__gl_main_priority>
    238f:	ff ff ff 
    2392:	c7 05 04 2e 00 00 ff 	mov    DWORD PTR [rip+0x2e04],0xffffffff        # 51a0 <__gl_time_slice_val>
    2399:	ff ff ff 
    239c:	c6 05 1f 2e 00 00 62 	mov    BYTE PTR [rip+0x2e1f],0x62        # 51c2 <__gl_wc_encoding>
    23a3:	c6 05 ee 2d 00 00 20 	mov    BYTE PTR [rip+0x2dee],0x20        # 5198 <__gl_locking_policy>
    23aa:	c6 05 21 2e 00 00 20 	mov    BYTE PTR [rip+0x2e21],0x20        # 51d2 <__gl_queuing_policy>
    23b1:	c6 05 28 2d 00 00 20 	mov    BYTE PTR [rip+0x2d28],0x20        # 50e0 <__gl_task_dispatching_policy>
    23b8:	48 8d 05 19 0e 00 00 	lea    rax,[rip+0xe19]        # 31d8 <ada_main__local_priority_specific_dispatching>
    23bf:	48 89 05 32 2e 00 00 	mov    QWORD PTR [rip+0x2e32],rax        # 51f8 <__gl_priority_specific_dispatching>
    23c6:	c7 05 10 2e 00 00 00 	mov    DWORD PTR [rip+0x2e10],0x0        # 51e0 <__gl_num_specific_dispatching>
    23cd:	00 00 00 
    23d0:	c7 05 ae 2d 00 00 ff 	mov    DWORD PTR [rip+0x2dae],0xffffffff        # 5188 <__gl_main_cpu>
    23d7:	ff ff ff 
    23da:	48 8d 05 f8 0d 00 00 	lea    rax,[rip+0xdf8]        # 31d9 <ada_main__local_interrupt_states>
    23e1:	48 89 05 70 2d 00 00 	mov    QWORD PTR [rip+0x2d70],rax        # 5158 <__gl_interrupt_states>
    23e8:	c7 05 5e 2e 00 00 00 	mov    DWORD PTR [rip+0x2e5e],0x0        # 5250 <__gl_num_interrupt_states>
    23ef:	00 00 00 
    23f2:	c7 05 b4 2d 00 00 00 	mov    DWORD PTR [rip+0x2db4],0x0        # 51b0 <__gl_unreserve_all_interrupts>
    23f9:	00 00 00 
    23fc:	c7 05 1a 2e 00 00 00 	mov    DWORD PTR [rip+0x2e1a],0x0        # 5220 <__gl_detect_blocking>
    2403:	00 00 00 
    2406:	c7 05 50 2e 00 00 ff 	mov    DWORD PTR [rip+0x2e50],0xffffffff        # 5260 <__gl_default_stack_size>
    240d:	ff ff ff 
    2410:	c7 05 92 2d 00 00 00 	mov    DWORD PTR [rip+0x2d92],0x0        # 51ac <__gl_leap_seconds_support>
    2417:	00 00 00 
    241a:	e8 d7 01 00 00       	call   25f6 <ada_main___elabb>
    241f:	c7 05 d7 2c 00 00 00 	mov    DWORD PTR [rip+0x2cd7],0x2800        # 5100 <__gnat_default_ss_size>
    2426:	28 00 00 
    2429:	c7 05 51 2d 00 00 01 	mov    DWORD PTR [rip+0x2d51],0x1        # 5184 <__gnat_binder_ss_count>
    2430:	00 00 00 
    2433:	48 8d 05 46 2e 00 00 	lea    rax,[rip+0x2e46]        # 5280 <ada_main__sec_default_sized_stacks>
    243a:	48 89 05 4f 2d 00 00 	mov    QWORD PTR [rip+0x2d4f],rax        # 5190 <__gnat_default_ss_pool>
    2441:	bf 01 00 00 00       	mov    edi,0x1
    2446:	e8 15 fd ff ff       	call   2160 <__gnat_runtime_initialize@plt>
    244b:	48 c7 05 0a 2d 00 00 	mov    QWORD PTR [rip+0x2d0a],0x0        # 5160 <__gnat_finalize_library_objects>
    2452:	00 00 00 00 
    2456:	e8 95 fc ff ff       	call   20f0 <system__soft_links___elabs@plt>
    245b:	e8 40 fc ff ff       	call   20a0 <system__exception_table___elabb@plt>
    2460:	0f b7 05 f1 2d 00 00 	movzx  eax,WORD PTR [rip+0x2df1]        # 5258 <system__exception_table_E>
    2467:	83 c0 01             	add    eax,0x1
    246a:	66 89 05 e7 2d 00 00 	mov    WORD PTR [rip+0x2de7],ax        # 5258 <system__exception_table_E>
    2471:	e8 ba fc ff ff       	call   2130 <ada__io_exceptions___elabs@plt>
    2476:	0f b7 05 03 2d 00 00 	movzx  eax,WORD PTR [rip+0x2d03]        # 5180 <ada__io_exceptions_E>
    247d:	83 c0 01             	add    eax,0x1
    2480:	66 89 05 f9 2c 00 00 	mov    WORD PTR [rip+0x2cf9],ax        # 5180 <ada__io_exceptions_E>
    2487:	e8 c4 fc ff ff       	call   2150 <ada__strings___elabs@plt>
    248c:	0f b7 05 31 2d 00 00 	movzx  eax,WORD PTR [rip+0x2d31]        # 51c4 <ada__strings_E>
    2493:	83 c0 01             	add    eax,0x1
    2496:	66 89 05 27 2d 00 00 	mov    WORD PTR [rip+0x2d27],ax        # 51c4 <ada__strings_E>
    249d:	e8 de fb ff ff       	call   2080 <ada__containers___elabs@plt>
    24a2:	0f b7 05 5f 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c5f]        # 5108 <ada__containers_E>
    24a9:	83 c0 01             	add    eax,0x1
    24ac:	66 89 05 55 2c 00 00 	mov    WORD PTR [rip+0x2c55],ax        # 5108 <ada__containers_E>
    24b3:	e8 d8 fb ff ff       	call   2090 <system__exceptions___elabs@plt>
    24b8:	0f b7 05 43 2d 00 00 	movzx  eax,WORD PTR [rip+0x2d43]        # 5202 <system__exceptions_E>
    24bf:	83 c0 01             	add    eax,0x1
    24c2:	66 89 05 39 2d 00 00 	mov    WORD PTR [rip+0x2d39],ax        # 5202 <system__exceptions_E>
    24c9:	e8 82 fb ff ff       	call   2050 <system__soft_links__initialize___elabb@plt>
    24ce:	0f b7 05 93 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c93]        # 5168 <system__soft_links__initialize_E>
    24d5:	83 c0 01             	add    eax,0x1
    24d8:	66 89 05 89 2c 00 00 	mov    WORD PTR [rip+0x2c89],ax        # 5168 <system__soft_links__initialize_E>
    24df:	0f b7 05 3a 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c3a]        # 5120 <system__soft_links_E>
    24e6:	83 c0 01             	add    eax,0x1
    24e9:	66 89 05 30 2c 00 00 	mov    WORD PTR [rip+0x2c30],ax        # 5120 <system__soft_links_E>
    24f0:	e8 6b fb ff ff       	call   2060 <system__os_lib___elabb@plt>
    24f5:	0f b7 05 08 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c08]        # 5104 <system__os_lib_E>
    24fc:	83 c0 01             	add    eax,0x1
    24ff:	66 89 05 fe 2b 00 00 	mov    WORD PTR [rip+0x2bfe],ax        # 5104 <system__os_lib_E>
    2506:	e8 65 fb ff ff       	call   2070 <ada__strings__maps___elabs@plt>
    250b:	e8 f0 fb ff ff       	call   2100 <ada__strings__maps__constants___elabs@plt>
    2510:	0f b7 05 4d 2d 00 00 	movzx  eax,WORD PTR [rip+0x2d4d]        # 5264 <ada__strings__maps__constants_E>
    2517:	83 c0 01             	add    eax,0x1
    251a:	66 89 05 43 2d 00 00 	mov    WORD PTR [rip+0x2d43],ax        # 5264 <ada__strings__maps__constants_E>
    2521:	e8 0a fb ff ff       	call   2030 <interfaces__c___elabs@plt>
    2526:	0f b7 05 3b 2d 00 00 	movzx  eax,WORD PTR [rip+0x2d3b]        # 5268 <ada__strings__maps_E>
    252d:	83 c0 01             	add    eax,0x1
    2530:	66 89 05 31 2d 00 00 	mov    WORD PTR [rip+0x2d31],ax        # 5268 <ada__strings__maps_E>
    2537:	0f b7 05 92 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c92]        # 51d0 <interfaces__c_E>
    253e:	83 c0 01             	add    eax,0x1
    2541:	66 89 05 88 2c 00 00 	mov    WORD PTR [rip+0x2c88],ax        # 51d0 <interfaces__c_E>
    2548:	e8 83 fb ff ff       	call   20d0 <system__object_reader___elabs@plt>
    254d:	e8 ce fb ff ff       	call   2120 <system__dwarf_lines___elabs@plt>
    2552:	0f b7 05 67 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c67]        # 51c0 <system__dwarf_lines_E>
    2559:	83 c0 01             	add    eax,0x1
    255c:	66 89 05 5d 2c 00 00 	mov    WORD PTR [rip+0x2c5d],ax        # 51c0 <system__dwarf_lines_E>
    2563:	e8 a8 fb ff ff       	call   2110 <system__traceback__symbolic___elabb@plt>
    2568:	0f b7 05 d1 2b 00 00 	movzx  eax,WORD PTR [rip+0x2bd1]        # 5140 <system__traceback__symbolic_E>
    256f:	83 c0 01             	add    eax,0x1
    2572:	66 89 05 c7 2b 00 00 	mov    WORD PTR [rip+0x2bc7],ax        # 5140 <system__traceback__symbolic_E>
    2579:	0f b7 05 80 2c 00 00 	movzx  eax,WORD PTR [rip+0x2c80]        # 5200 <system__object_reader_E>
    2580:	83 c0 01             	add    eax,0x1
    2583:	66 89 05 76 2c 00 00 	mov    WORD PTR [rip+0x2c76],ax        # 5200 <system__object_reader_E>
    258a:	90                   	nop
    258b:	eb 01                	jmp    258e <adainit+0x220>
    258d:	90                   	nop
    258e:	5d                   	pop    rbp
    258f:	c3                   	ret    

0000000000002590 <main>:
    2590:	55                   	push   rbp
    2591:	48 89 e5             	mov    rbp,rsp
    2594:	48 83 ec 30          	sub    rsp,0x30
    2598:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    259b:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    259f:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    25a3:	48 8d 05 8e 0a 00 00 	lea    rax,[rip+0xa8e]        # 3038 <__gnat_ada_main_program_name>
    25aa:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    25ae:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    25b1:	89 05 89 2c 00 00    	mov    DWORD PTR [rip+0x2c89],eax        # 5240 <gnat_argc>
    25b7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    25bb:	48 89 05 06 2c 00 00 	mov    QWORD PTR [rip+0x2c06],rax        # 51c8 <gnat_argv>
    25c2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    25c6:	48 89 05 83 2b 00 00 	mov    QWORD PTR [rip+0x2b83],rax        # 5150 <gnat_envp>
    25cd:	48 8d 45 f8          	lea    rax,[rbp-0x8]
    25d1:	48 89 c7             	mov    rdi,rax
    25d4:	e8 e7 fa ff ff       	call   20c0 <__gnat_initialize@plt>
    25d9:	e8 90 fd ff ff       	call   236e <adainit>
    25de:	e8 47 00 00 00       	call   262a <_ada_add_int>
    25e3:	e8 5c fd ff ff       	call   2344 <adafinal>
    25e8:	e8 53 fa ff ff       	call   2040 <__gnat_finalize@plt>
    25ed:	8b 05 b5 2b 00 00    	mov    eax,DWORD PTR [rip+0x2bb5]        # 51a8 <gnat_exit_status>
    25f3:	c9                   	leave  
    25f4:	c3                   	ret    
    25f5:	90                   	nop

00000000000025f6 <ada_main___elabb>:
    25f6:	55                   	push   rbp
    25f7:	48 89 e5             	mov    rbp,rsp
    25fa:	53                   	push   rbx
    25fb:	48 83 ec 08          	sub    rsp,0x8
    25ff:	48 8d 05 7a 2c 00 00 	lea    rax,[rip+0x2c7a]        # 5280 <ada_main__sec_default_sized_stacks>
    2606:	48 8d 15 03 0a 00 00 	lea    rdx,[rip+0xa03]        # 3010 <_IO_stdin_used+0x10>
    260d:	48 89 c1             	mov    rcx,rax
    2610:	48 89 d3             	mov    rbx,rdx
    2613:	48 89 d0             	mov    rax,rdx
    2616:	48 89 cf             	mov    rdi,rcx
    2619:	48 89 c6             	mov    rsi,rax
    261c:	e8 45 fc ff ff       	call   2266 <ada_main__Tsec_default_sized_stacksBIP>
    2621:	90                   	nop
    2622:	48 83 c4 08          	add    rsp,0x8
    2626:	5b                   	pop    rbx
    2627:	5d                   	pop    rbp
    2628:	c3                   	ret    
    2629:	90                   	nop

000000000000262a <_ada_add_int>:
    262a:	55                   	push   rbp
    262b:	48 89 e5             	mov    rbp,rsp
    262e:	c7 45 fc 03 00 00 00 	mov    DWORD PTR [rbp-0x4],0x3
    2635:	c7 45 f8 05 00 00 00 	mov    DWORD PTR [rbp-0x8],0x5
    263c:	c7 45 f4 08 00 00 00 	mov    DWORD PTR [rbp-0xc],0x8
    2643:	90                   	nop
    2644:	5d                   	pop    rbp
    2645:	c3                   	ret    
    2646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    264d:	00 00 00 

0000000000002650 <__libc_csu_init>:
    2650:	41 57                	push   r15
    2652:	49 89 d7             	mov    r15,rdx
    2655:	41 56                	push   r14
    2657:	49 89 f6             	mov    r14,rsi
    265a:	41 55                	push   r13
    265c:	41 89 fd             	mov    r13d,edi
    265f:	41 54                	push   r12
    2661:	4c 8d 25 50 27 00 00 	lea    r12,[rip+0x2750]        # 4db8 <__frame_dummy_init_array_entry>
    2668:	55                   	push   rbp
    2669:	48 8d 2d 50 27 00 00 	lea    rbp,[rip+0x2750]        # 4dc0 <__init_array_end>
    2670:	53                   	push   rbx
    2671:	4c 29 e5             	sub    rbp,r12
    2674:	48 83 ec 08          	sub    rsp,0x8
    2678:	e8 83 f9 ff ff       	call   2000 <_init>
    267d:	48 c1 fd 03          	sar    rbp,0x3
    2681:	74 1b                	je     269e <__libc_csu_init+0x4e>
    2683:	31 db                	xor    ebx,ebx
    2685:	0f 1f 00             	nop    DWORD PTR [rax]
    2688:	4c 89 fa             	mov    rdx,r15
    268b:	4c 89 f6             	mov    rsi,r14
    268e:	44 89 ef             	mov    edi,r13d
    2691:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    2695:	48 83 c3 01          	add    rbx,0x1
    2699:	48 39 dd             	cmp    rbp,rbx
    269c:	75 ea                	jne    2688 <__libc_csu_init+0x38>
    269e:	48 83 c4 08          	add    rsp,0x8
    26a2:	5b                   	pop    rbx
    26a3:	5d                   	pop    rbp
    26a4:	41 5c                	pop    r12
    26a6:	41 5d                	pop    r13
    26a8:	41 5e                	pop    r14
    26aa:	41 5f                	pop    r15
    26ac:	c3                   	ret    
    26ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000026b0 <__libc_csu_fini>:
    26b0:	c3                   	ret    

Disassembly of section .fini:

00000000000026b4 <_fini>:
    26b4:	48 83 ec 08          	sub    rsp,0x8
    26b8:	48 83 c4 08          	add    rsp,0x8
    26bc:	c3                   	ret    

Disassembly of section .rodata:

0000000000003000 <_IO_stdin_used>:
    3000:	01 00                	add    DWORD PTR [rax],eax
    3002:	02 00                	add    al,BYTE PTR [rax]
	...
    3010:	01 00                	add    DWORD PTR [rax],eax
    3012:	00 00                	add    BYTE PTR [rax],al
    3014:	01 00                	add    DWORD PTR [rax],eax
	...

0000000000003020 <__gnat_version>:
    3020:	47                   	rex.RXB
    3021:	4e                   	rex.WRX
    3022:	41 54                	push   r12
    3024:	20 56 65             	and    BYTE PTR [rsi+0x65],dl
    3027:	72 73                	jb     309c <system__storage_elementsS>
    3029:	69 6f 6e 3a 20 38 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e38203a
    3030:	32 2e                	xor    ch,BYTE PTR [rsi]
    3032:	30 00                	xor    BYTE PTR [rax],al
    3034:	00 00                	add    BYTE PTR [rax],al
	...

0000000000003038 <__gnat_ada_main_program_name>:
    3038:	5f                   	pop    rdi
    3039:	61                   	(bad)  
    303a:	64 61                	fs (bad) 
    303c:	5f                   	pop    rdi
    303d:	61                   	(bad)  
    303e:	64 64 5f             	fs fs pop rdi
    3041:	69 6e 74 00 00 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x0

0000000000003048 <add_intB>:
    3048:	fa                   	cli    
    3049:	8e 6f 1d             	mov    gs,WORD PTR [rdi+0x1d]

000000000000304c <system__standard_libraryB>:
    304c:	f0 f2 0f 05          	lock repnz syscall 

0000000000003050 <system__standard_libraryS>:
    3050:	2b f2                	sub    esi,edx
    3052:	13 41              	adc    eax,DWORD PTR [rcx-0xf]

0000000000003054 <gnatS>:
    3054:	f1                   	icebp  
    3055:	d2 2a                	shr    BYTE PTR [rdx],cl
    3057:	fd                   	std    

0000000000003058 <gnat__ioB>:
    3058:	f5                   	cmc    
    3059:	02 81 b4       	add    al,BYTE PTR [rcx+0x27e843b4]

000000000000305c <gnat__ioS>:
    305c:	43 e8 27 62      	rex.XB call ffffffffec049289 <_end+0xffffffffec0417c9>

0000000000003060 <systemS>:
    3060:	04 ec                	add    al,0xec
    3062:	35 46          	xor    eax,0x5938d846

0000000000003064 <system__memoryB>:
    3064:	d8 38                	fdivr  DWORD PTR [rax]
    3066:	59                   	pop    rcx
    3067:	93                   	xchg   ebx,eax

0000000000003068 <system__memoryS>:
    3068:	30 8a 48 1f      	xor    BYTE PTR [rdx-0x135e0b8],cl

000000000000306c <ada__exceptionsB>:
    306c:	ca fe 2e             	retf   0x2efe
    306f:	f5                   	cmc    

0000000000003070 <ada__exceptionsS>:
    3070:	1c 68                	sbb    al,0x68
    3072:	24 e8                	and    al,0xe8

0000000000003074 <adaS>:
    3074:	a1 9d 78 76    	movabs eax,ds:0x2e5726abed76789d
    307b:	  

0000000000003078 <ada__exceptions__last_chance_handlerB>:
    3078:	ed                   	in     eax,dx
    3079:	ab                   	stos   DWORD PTR es:[rdi],eax
    307a:	26 57                	es push rdi

000000000000307c <ada__exceptions__last_chance_handlerS>:
    307c:	2e 55                	cs push rbp
    307e:	e5 41                	in     eax,0x41

0000000000003080 <system__soft_linksB>:
    3080:	17                   	(bad)  
    3081:	01 86 ae       	add    DWORD PTR [rsi-0x35823852],eax

0000000000003084 <system__soft_linksS>:
    3084:	c7                   	(bad)  
    3085:	7d ca                	jge    3051 <system__standard_libraryS+0x1>
    3087:	bb           	mov    ebx,0x20d205ed

0000000000003088 <system__secondary_stackB>:
    3088:	ed                   	in     eax,dx
    3089:	05 d2 20         	add    eax,0x8e6820d2

000000000000308c <system__secondary_stackS>:
    308c:	68 8e 5d bb        	push   0x34bb5d8e

0000000000003090 <system__parametersB>:
    3090:	34 64                	xor    al,0x64
    3092:	a1 36      	movabs eax,ds:0xd09590bea3285836
    3099:	  

0000000000003094 <system__parametersS>:
    3094:	58                   	pop    rax
    3095:	28 a3 be       	sub    BYTE PTR [rbx-0x2f6a6f42],ah

0000000000003098 <system__storage_elementsB>:
    3098:	90                   	nop
    3099:	95                   	xchg   ebp,eax
    309a:	d0 ce                	ror    dh,1

000000000000309c <system__storage_elementsS>:
    309c:	00 a6 f6 6b      	add    BYTE PTR [rsi+0x5b5e6bf6],ah

00000000000030a0 <system__soft_links__initializeB>:
    30a0:	5e                   	pop    rsi
    30a1:	5b                   	pop    rbx
    30a2:	39 7d              	cmp    DWORD PTR [rbp+0x2b],edi

00000000000030a4 <system__soft_links__initializeS>:
    30a4:	2b fc                	sub    edi,esp
    30a6:	97                   	xchg   edi,eax
    30a7:	56                   	push   rsi

00000000000030a8 <system__stack_checkingB>:
    30a8:	1e                   	(bad)  
    30a9:	7d 83                	jge    302e <__gnat_version+0xe>
    30ab:	41                 	rex.B in al,dx

00000000000030ac <system__stack_checkingS>:
    30ac:	ec                   	in     al,dx
    30ad:	87 8a c8       	xchg   DWORD PTR [rdx+0x742901c8],ecx

00000000000030b0 <system__exception_tableB>:
    30b0:	01 29                	add    DWORD PTR [rcx],ebp
    30b2:	74 34                	je     30e8 <system__traceback__symbolicB>

00000000000030b4 <system__exception_tableS>:
    30b4:	46 85 9b 1b    	rex.RX test DWORD PTR [rbx+0x4af0201b],r11d

00000000000030b8 <system__exceptionsB>:
    30b8:	20 f0                	and    al,dh
    30ba:	4a ce                	rex.WX (bad) 

00000000000030bc <system__exceptionsS>:
    30bc:	f2 81 56 2e    	repnz adc DWORD PTR [rsi+0x2e],0x80916427
    30c3:	 

00000000000030c0 <system__exceptions__machineB>:
    30c0:	27                   	(bad)  
    30c1:	64 91                	fs xchg ecx,eax
    30c3:	80       	add    BYTE PTR [rcx-0x3c45270],0x63

00000000000030c4 <system__exceptions__machineS>:
    30c4:	81 90 ad 3b    	adc    DWORD PTR [rax+0x63fc3bad],0x15c0aa05
    30cb:	   

00000000000030c8 <system__exceptions_debugB>:
    30c8:	fc                   	cld    
    30c9:	63 05 aa       	movsxd eax,DWORD PTR [rip+0xffffffffbf15c0aa]        # ffffffffbf15f179 <_end+0xffffffffbf1576b9>

00000000000030cc <system__exceptions_debugS>:
    30cc:	c0 15 bf 38    	rcl    BYTE PTR [rip+0xffffffff880238bf],0x2f        # ffffffff88026992 <_end+0xffffffff8801eed2>

00000000000030d0 <system__img_intB>:
    30d0:	02 88 2f 6c      	add    cl,BYTE PTR [rax+0xcc66c2f]

00000000000030d4 <system__img_intS>:
    30d4:	c6                   	(bad)  
    30d5:	0c ee                	or     al,0xee
    30d7:	44                 	rex.R (bad) 

00000000000030d8 <system__tracebackB>:
    30d8:	17                   	(bad)  
    30d9:	8c df                	mov    edi,ds
    30db:	39                 	cmp    eax,eax

00000000000030dc <system__tracebackS>:
    30dc:	c0 32 17             	shl    BYTE PTR [rdx],0x17
    30df:	18         	sbb    BYTE PTR [rip+0x749ed495],ah        # 749f057a <_end+0x749e8aba>

00000000000030e0 <system__traceback_entriesB>:
    30e0:	25 95 d4 9e        	and    eax,0x749ed495

00000000000030e4 <system__traceback_entriesS>:
    30e4:	74 1a                	je     3100 <interfaces__cB>
    30e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30e7:	46               	rex.RX and al,0x6b

00000000000030e8 <system__traceback__symbolicB>:
    30e8:	24 6b                	and    al,0x6b
    30ea:	48 c2            	rex.W ret 0x61d1

00000000000030ec <system__traceback__symbolicS>:
    30ec:	d1 61 40             	shl    DWORD PTR [rcx+0x40],1
    30ef:	c8             	enter  0x7d28,0x9d

00000000000030f0 <ada__containersS>:
    30f0:	28 7d 9d             	sub    BYTE PTR [rbp-0x63],bh
    30f3:	17                   	(bad)  

00000000000030f4 <ada__exceptions__tracebackB>:
    30f4:	88 9d 1f 70      	mov    BYTE PTR [rbp+0x5e75701f],bl

00000000000030f8 <ada__exceptions__tracebackS>:
    30f8:	75 5e                	jne    3158 <system__ioB>
    30fa:	24 20                	and    al,0x20

00000000000030fc <interfacesS>:
    30fc:	68 52 b5 5a        	push   0xffffffffe65ab552

0000000000003100 <interfaces__cB>:
    3100:	e6 25                	out    0x25,al
    3102:	9e                   	sahf   
    3103:	76                 	jbe    30b4 <system__exception_tableS>

0000000000003104 <interfaces__cS>:
    3104:	af                   	scas   eax,DWORD PTR es:[rdi]
    3105:	87 02                	xchg   DWORD PTR [rdx],eax
    3107:	f6       	test   BYTE PTR [rcx+0x1de865e6],0xcd

0000000000003108 <system__bounded_stringsB>:
    3108:	81 e6 65 e8      	and    esi,0xcd1de865

000000000000310c <system__bounded_stringsS>:
    310c:	1d cd c8 31        	sbb    eax,0x2931c8cd

0000000000003110 <system__crtlS>:
    3110:	29 f3                	sub    ebx,esi
    3112:	18 b0        	sbb    BYTE PTR [rax+0x2260731f],dh

0000000000003114 <system__dwarf_linesB>:
    3114:	1f                   	(bad)  
    3115:	73 60                	jae    3177 <system__mmap__unixS+0x3>
    3117:	22               	and    ah,BYTE PTR [rax+0x7e]

0000000000003118 <system__dwarf_linesS>:
    3118:	60                   	(bad)  
    3119:	7e 13                	jle    312e <ada__stringsS+0x2>
    311b:	5f                   	pop    rdi

000000000000311c <ada__charactersS>:
    311c:	fa                   	cli    
    311d:	59                   	pop    rcx
    311e:	46 5b                	rex.RX pop rbx

0000000000003120 <ada__characters__handlingB>:
    3120:	f8                   	clc    
    3121:	7d 63                	jge    3186 <system__case_utilS+0x2>
    3123:	8f                   	(bad)  

0000000000003124 <ada__characters__handlingS>:
    3124:	54                   	push   rsp
    3125:	61                   	(bad)  
    3126:	3f                   	(bad)  
    3127:	3b               	cmp    ebp,DWORD PTR [rdx-0x47]

0000000000003128 <ada__characters__latin_1S>:
    3128:	6a b9                	push   0xffffffffffffffb9
    312a:	7b 4b                	jnp    3177 <system__mmap__unixS+0x3>

000000000000312c <ada__stringsS>:
    312c:	36 fa                	ss cli 
    312e:	d4                   	(bad)  
    312f:	e6                 	out    0x3f,al

0000000000003130 <ada__strings__mapsB>:
    3130:	3f                   	(bad)  
    3131:	1a df                	sbb    bl,bh
    3133:	96                   	xchg   esi,eax

0000000000003134 <ada__strings__mapsS>:
    3134:	ec                   	in     al,dx
    3135:	6b 52 1e           	imul   edx,DWORD PTR [rdx+0x1e],0xfffffff1

0000000000003138 <system__bit_opsB>:
    3138:	f1                   	icebp  
    3139:	b8 8f d6         	mov    eax,0xe3a3d68f

000000000000313c <system__bit_opsS>:
    313c:	a3 e3 65 07    	movabs ds:0x1372b390870765e3,eax
    3143:	  

0000000000003140 <system__unsigned_typesS>:
    3140:	87 90 b3 72      	xchg   DWORD PTR [rax+0x5f1372b3],edx

0000000000003144 <ada__strings__maps__constantsS>:
    3144:	13 5f f0             	adc    ebx,DWORD PTR [rdi-0x10]
    3147:	92                   	xchg   edx,eax

0000000000003148 <system__address_imageB>:
    3148:	2b d2                	sub    edx,edx
    314a:	d3 a0        	shl    DWORD PTR [rax-0x18268ec2],cl

000000000000314c <system__address_imageS>:
    314c:	3e 71 d9             	ds jno 3128 <ada__characters__latin_1S>
    314f:	e7                 	out    0xbf,eax

0000000000003150 <system__img_unsB>:
    3150:	bf c2 78 ec        	mov    edi,0x70ec78c2

0000000000003154 <system__img_unsS>:
    3154:	70 ac                	jo     3102 <interfaces__cB+0x2>
    3156:	47 ed                	rex.RXB in eax,dx

0000000000003158 <system__ioB>:
    3158:	0c c2                	or     al,0xc2
    315a:	aa                   	stos   BYTE PTR es:[rdi],al
    315b:	d7                   	xlat   BYTE PTR ds:[rbx]

000000000000315c <system__ioS>:
    315c:	4b 1b 77 d8          	rex.WXB sbb rsi,QWORD PTR [r15-0x28]

0000000000003160 <system__mmapB>:
    3160:	ef                   	out    dx,eax
    3161:	d1 90 f7       	rcl    DWORD PTR [rax+0x445363f7],1

0000000000003164 <system__mmapS>:
    3164:	63 53 44             	movsxd edx,DWORD PTR [rbx+0x44]
    3167:	7c                 	jl     312e <ada__stringsS+0x2>

0000000000003168 <ada__io_exceptionsS>:
    3168:	c5 82 d8             	(bad)  
    316b:	92                   	xchg   edx,eax

000000000000316c <system__mmap__os_interfaceB>:
    316c:	4a a5                	rex.WX movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
    316e:	da 0c              	fimul  DWORD PTR [rdi+rsi*2]

0000000000003170 <system__mmap__os_interfaceS>:
    3170:	77 98                	ja     310a <system__bounded_stringsB+0x2>
    3172:	f2 82                	repnz (bad) 

0000000000003174 <system__mmap__unixS>:
    3174:	5e                   	pop    rsi
    3175:	fe 4d 83             	dec    BYTE PTR [rbp-0x7d]

0000000000003178 <system__os_libB>:
    3178:	ea                   	(bad)  
    3179:	7a 26                	jp     31a1 <system__val_lluB+0x1>
    317b:	68           	push   0x4542b55d

000000000000317c <system__os_libS>:
    317c:	5d                   	pop    rbp
    317d:	b5 42                	mov    ch,0x42
    317f:	45               	mov    BYTE PTR [r14],r8b

0000000000003180 <system__case_utilB>:
    3180:	88 06                	mov    BYTE PTR [rsi],al
    3182:	06                   	(bad)  
    3183:	d1                 	rcl    ebx,1

0000000000003184 <system__case_utilS>:
    3184:	d3 85 3c 62      	rol    DWORD PTR [rbp-0x76529dc4],cl

0000000000003188 <system__stringsB>:
    3188:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3189:	89 8e 2a       	mov    DWORD PTR [rsi+0x23c0912a],ecx

000000000000318c <system__stringsS>:
    318c:	91                   	xchg   ecx,eax
    318d:	c0 23 26             	shl    BYTE PTR [rbx],0x26

0000000000003190 <system__object_readerB>:
    3190:	b4 f0                	mov    ah,0xf0
    3192:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3193:	ef                   	out    dx,eax

0000000000003194 <system__object_readerS>:
    3194:	7e 49                	jle    31df <__GNU_EH_FRAME_HDR+0x3>
    3196:	06                   	(bad)  
    3197:	0b             	or     edx,DWORD PTR [rbx+riz*4+0x74]

0000000000003198 <system__val_lliB>:
    3198:	54                   	push   rsp
    3199:	a3 74 1a     	movabs ds:0xf393dc110aa41a74,eax
    31a0:	  

000000000000319c <system__val_lliS>:
    319c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    319d:	0a 11                	or     dl,BYTE PTR [rcx]
    319f:	dc         	fcom   QWORD PTR [rbx-0xa50240d]

00000000000031a0 <system__val_lluB>:
    31a0:	93                   	xchg   ebx,eax
    31a1:	f3 db af     	repz fld TBYTE PTR [rdi+0x841c7f5]

00000000000031a4 <system__val_lluS>:
    31a4:	f5                   	cmc    
    31a5:	c7 41 08     	mov    DWORD PTR [rcx+0x8],0x27b600b2

00000000000031a8 <system__val_utilB>:
    31a8:	b2 00                	mov    dl,0x0
    31aa:	b6 27                	mov    dh,0x27

00000000000031ac <system__val_utilS>:
    31ac:	fa                   	cli    
    31ad:	5a                   	pop    rdx
    31ae:	95                   	xchg   ebp,eax
    31af:	ea                   	(bad)  

00000000000031b0 <system__exception_tracesB>:
    31b0:	29 3f                	sub    DWORD PTR [rdi],edi
    31b2:	bf d7          	mov    edi,0xeacc9ed7

00000000000031b4 <system__exception_tracesS>:
    31b4:	9e                   	sahf   
    31b5:	cc                   	int3   
    31b6:	ea                   	(bad)  
    31b7:	62                   	(bad)  

00000000000031b8 <system__wch_conB>:
    31b8:	17                   	(bad)  
    31b9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    31ba:	33 8c      	xor    ecx,DWORD PTR [rsi+rdx*8+0x405d48ce]

00000000000031bc <system__wch_conS>:
    31bc:	d6                   	(bad)  
    31bd:	ce                   	(bad)  
    31be:	48 5d                	rex.W pop rbp

00000000000031c0 <system__wch_stwB>:
    31c0:	40 e8 21 97      	rex call ffffffffe2d7c8e7 <_end+0xffffffffe2d74e27>

00000000000031c4 <system__wch_stwS>:
    31c4:	d7                   	xlat   BYTE PTR ds:[rbx]
    31c5:	e2 59                	loop   3220 <__GNU_EH_FRAME_HDR+0x44>
    31c7:	70                 	jo     3165 <system__mmapS+0x1>

00000000000031c8 <system__wch_cnvB>:
    31c8:	9c                   	pushf  
    31c9:	67 31 a8     	xor    DWORD PTR [eax+0x52ff7425],ebp

00000000000031cc <system__wch_cnvS>:
    31cc:	25 74 ff 52        	and    eax,0xb652ff74

00000000000031d0 <system__wch_jisB>:
    31d0:	b6 fd                	mov    dh,0xfd
    31d2:	e6 ec                	out    0xec,al

00000000000031d4 <system__wch_jisS>:
    31d4:	04 6d                	add    al,0x6d
    31d6:	8f                   	(bad)  
    31d7:	d2                 	rol    BYTE PTR [rax],cl

00000000000031d8 <ada_main__local_priority_specific_dispatching>:
	...

00000000000031d9 <ada_main__local_interrupt_states>:
	...

Disassembly of section .eh_frame_hdr:

00000000000031dc <__GNU_EH_FRAME_HDR>:
    31dc:	01 1b                	add    DWORD PTR [rbx],ebx
    31de:	03 3b                	add    edi,DWORD PTR [rbx]
    31e0:	60                   	(bad)  
    31e1:	00 00                	add    BYTE PTR [rax],al
    31e3:	00 0b                	add    BYTE PTR [rbx],cl
    31e5:	00 00                	add    BYTE PTR [rax],al
    31e7:	00 44 ee ff          	add    BYTE PTR [rsi+rbp*8-0x1],al
    31eb:	ff ac 00 00 00 94 ef 	jmp    FWORD PTR [rax+rax*1-0x106c0000]
    31f2:	ff                   	(bad)  
    31f3:	ff d4                	call   rsp
    31f5:	00 00                	add    BYTE PTR [rax],al
    31f7:	00 a4 ef ff ff 7c 00 	add    BYTE PTR [rdi+rbp*8+0x7cffff],ah
    31fe:	00 00                	add    BYTE PTR [rax],al
    3200:	8a f0                	mov    dh,al
    3202:	ff                   	(bad)  
    3203:	ff                   	(bad)  
    3204:	ec                   	in     al,dx
    3205:	00 00                	add    BYTE PTR [rax],al
    3207:	00 68 f1             	add    BYTE PTR [rax-0xf],ch
    320a:	ff                   	(bad)  
    320b:	ff 14 01             	call   QWORD PTR [rcx+rax*1]
    320e:	00 00                	add    BYTE PTR [rax],al
    3210:	92                   	xchg   edx,eax
    3211:	f1                   	icebp  
    3212:	ff                   	(bad)  
    3213:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
    3216:	00 00                	add    BYTE PTR [rax],al
    3218:	b4 f3                	mov    ah,0xf3
    321a:	ff                   	(bad)  
    321b:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
    321f:	00 1a                	add    BYTE PTR [rdx],bl
    3221:	f4                   	hlt    
    3222:	ff                   	(bad)  
    3223:	ff 74 01 00          	push   QWORD PTR [rcx+rax*1+0x0]
    3227:	00 4e f4             	add    BYTE PTR [rsi-0xc],cl
    322a:	ff                   	(bad)  
    322b:	ff 94 01 00 00 74 f4 	call   QWORD PTR [rcx+rax*1-0xb8c0000]
    3232:	ff                   	(bad)  
    3233:	ff b4 01 00 00 d4 f4 	push   QWORD PTR [rcx+rax*1-0xb2c0000]
    323a:	ff                   	(bad)  
    323b:	ff                   	(bad)  
    323c:	fc                   	cld    
    323d:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

0000000000003240 <__FRAME_END__-0x1ac>:
    3240:	14 00                	adc    al,0x0
    3242:	00 00                	add    BYTE PTR [rax],al
    3244:	00 00                	add    BYTE PTR [rax],al
    3246:	00 00                	add    BYTE PTR [rax],al
    3248:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    324b:	00 01                	add    BYTE PTR [rcx],al
    324d:	78 10                	js     325f <__GNU_EH_FRAME_HDR+0x83>
    324f:	01 1b                	add    DWORD PTR [rbx],ebx
    3251:	0c 07                	or     al,0x7
    3253:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    3259:	00 00                	add    BYTE PTR [rax],al
    325b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    325e:	00 00                	add    BYTE PTR [rax],al
    3260:	20 ef                	and    bh,ch
    3262:	ff                   	(bad)  
    3263:	ff 2b                	jmp    FWORD PTR [rbx]
	...
    326d:	00 00                	add    BYTE PTR [rax],al
    326f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    3272:	00 00                	add    BYTE PTR [rax],al
    3274:	00 00                	add    BYTE PTR [rax],al
    3276:	00 00                	add    BYTE PTR [rax],al
    3278:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    327b:	00 01                	add    BYTE PTR [rcx],al
    327d:	78 10                	js     328f <__GNU_EH_FRAME_HDR+0xb3>
    327f:	01 1b                	add    DWORD PTR [rbx],ebx
    3281:	0c 07                	or     al,0x7
    3283:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    3289:	00 00                	add    BYTE PTR [rax],al
    328b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    328e:	00 00                	add    BYTE PTR [rax],al
    3290:	90                   	nop
    3291:	ed                   	in     eax,dx
    3292:	ff                   	(bad)  
    3293:	ff 50 01             	call   QWORD PTR [rax+0x1]
    3296:	00 00                	add    BYTE PTR [rax],al
    3298:	00 0e                	add    BYTE PTR [rsi],cl
    329a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    329d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    32a0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    32a3:	80 00 3f             	add    BYTE PTR [rax],0x3f
    32a6:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    32a8:	2a 33                	sub    dh,BYTE PTR [rbx]
    32aa:	24 22                	and    al,0x22
    32ac:	00 00                	add    BYTE PTR [rax],al
    32ae:	00 00                	add    BYTE PTR [rax],al
    32b0:	14 00                	adc    al,0x0
    32b2:	00 00                	add    BYTE PTR [rax],al
    32b4:	44 00 00             	add    BYTE PTR [rax],r8b
    32b7:	00 b8 ee ff ff 08    	add    BYTE PTR [rax+0x8ffffee],bh
	...
    32c5:	00 00                	add    BYTE PTR [rax],al
    32c7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    32ca:	00 00                	add    BYTE PTR [rax],al
    32cc:	5c                   	pop    rsp
    32cd:	00 00                	add    BYTE PTR [rax],al
    32cf:	00 96 ef ff ff de    	add    BYTE PTR [rsi-0x21000011],dl
    32d5:	00 00                	add    BYTE PTR [rax],al
    32d7:	00 00                	add    BYTE PTR [rax],al
    32d9:	41 0e                	rex.B (bad) 
    32db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    32e1:	49 8d 03             	lea    rax,[r11]
    32e4:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
    32e7:	05 02 d0 0c 07       	add    eax,0x70cd002
    32ec:	08 00                	or     BYTE PTR [rax],al
    32ee:	00 00                	add    BYTE PTR [rax],al
    32f0:	1c 00                	sbb    al,0x0
    32f2:	00 00                	add    BYTE PTR [rax],al
    32f4:	84 00                	test   BYTE PTR [rax],al
    32f6:	00 00                	add    BYTE PTR [rax],al
    32f8:	4c                   	rex.WR
    32f9:	f0 ff                	lock (bad) 
    32fb:	ff 29                	jmp    FWORD PTR [rcx]
    32fd:	00 00                	add    BYTE PTR [rax],al
    32ff:	00 00                	add    BYTE PTR [rax],al
    3301:	41 0e                	rex.B (bad) 
    3303:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3309:	64 0c 07             	fs or  al,0x7
    330c:	08 00                	or     BYTE PTR [rax],al
    330e:	00 00                	add    BYTE PTR [rax],al
    3310:	1c 00                	sbb    al,0x0
    3312:	00 00                	add    BYTE PTR [rax],al
    3314:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    3315:	00 00                	add    BYTE PTR [rax],al
    3317:	00 56 f0             	add    BYTE PTR [rsi-0x10],dl
    331a:	ff                   	(bad)  
    331b:	ff 22                	jmp    QWORD PTR [rdx]
    331d:	02 00                	add    al,BYTE PTR [rax]
    331f:	00 00                	add    BYTE PTR [rax],al
    3321:	41 0e                	rex.B (bad) 
    3323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3329:	03 1d 02 0c 07 08    	add    ebx,DWORD PTR [rip+0x8070c02]        # 8073f31 <_end+0x806c471>
    332f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3332:	00 00                	add    BYTE PTR [rax],al
    3334:	c4                   	(bad)  
    3335:	00 00                	add    BYTE PTR [rax],al
    3337:	00 58 f2             	add    BYTE PTR [rax-0xe],bl
    333a:	ff                   	(bad)  
    333b:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    333e:	00 00                	add    BYTE PTR [rax],al
    3340:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    3343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3349:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
    334c:	07                   	(bad)  
    334d:	08 00                	or     BYTE PTR [rax],al
    334f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    3352:	00 00                	add    BYTE PTR [rax],al
    3354:	e4 00                	in     al,0x0
    3356:	00 00                	add    BYTE PTR [rax],al
    3358:	9e                   	sahf   
    3359:	f2 ff                	repnz (bad) 
    335b:	ff 33                	push   QWORD PTR [rbx]
    335d:	00 00                	add    BYTE PTR [rax],al
    335f:	00 00                	add    BYTE PTR [rax],al
    3361:	41 0e                	rex.B (bad) 
    3363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3369:	45 83 03 69          	rex.RB add DWORD PTR [r11],0x69
    336d:	0c 07                	or     al,0x7
    336f:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
    3372:	00 00                	add    BYTE PTR [rax],al
    3374:	04 01                	add    al,0x1
    3376:	00 00                	add    BYTE PTR [rax],al
    3378:	b2 f2                	mov    dl,0xf2
    337a:	ff                   	(bad)  
    337b:	ff 1c 00             	call   FWORD PTR [rax+rax*1]
    337e:	00 00                	add    BYTE PTR [rax],al
    3380:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    3383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    3389:	57                   	push   rdi
    338a:	0c 07                	or     al,0x7
    338c:	08 00                	or     BYTE PTR [rax],al
    338e:	00 00                	add    BYTE PTR [rax],al
    3390:	44 00 00             	add    BYTE PTR [rax],r8b
    3393:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    3396:	00 00                	add    BYTE PTR [rax],al
    3398:	b8 f2 ff ff 5d       	mov    eax,0x5dfffff2
    339d:	00 00                	add    BYTE PTR [rax],al
    339f:	00 00                	add    BYTE PTR [rax],al
    33a1:	42 0e                	rex.X (bad) 
    33a3:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
    33a9:	8e 03                	mov    es,WORD PTR [rbx]
    33ab:	45 0e                	rex.RB (bad) 
    33ad:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
    33b3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86304201 <_end+0xffffffff862fc741>
    33b9:	06                   	(bad)  
    33ba:	48 0e                	rex.W (bad) 
    33bc:	38 83 07 47 0e 40    	cmp    BYTE PTR [rbx+0x400e4707],al
    33c2:	6a 0e                	push   0xe
    33c4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    33c7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    33ca:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    33cd:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    33d0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    33d3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    33d6:	08 00                	or     BYTE PTR [rax],al
    33d8:	10 00                	adc    BYTE PTR [rax],al
    33da:	00 00                	add    BYTE PTR [rax],al
    33dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    33dd:	01 00                	add    DWORD PTR [rax],eax
    33df:	00 d0                	add    al,dl
    33e1:	f2 ff                	repnz (bad) 
    33e3:	ff 01                	inc    DWORD PTR [rcx]
    33e5:	00 00                	add    BYTE PTR [rax],al
    33e7:	00 00                	add    BYTE PTR [rax],al
    33e9:	00 00                	add    BYTE PTR [rax],al
	...

00000000000033ec <__FRAME_END__>:
    33ec:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000004db8 <__frame_dummy_init_array_entry>:
    4db8:	60                   	(bad)  
    4db9:	22 00                	and    al,BYTE PTR [rax]
    4dbb:	00 00                	add    BYTE PTR [rax],al
    4dbd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000004dc0 <__do_global_dtors_aux_fini_array_entry>:
    4dc0:	20 22                	and    BYTE PTR [rdx],ah
    4dc2:	00 00                	add    BYTE PTR [rax],al
    4dc4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000004dc8 <_DYNAMIC>:
    4dc8:	01 00                	add    DWORD PTR [rax],eax
    4dca:	00 00                	add    BYTE PTR [rax],al
    4dcc:	00 00                	add    BYTE PTR [rax],al
    4dce:	00 00                	add    BYTE PTR [rax],al
    4dd0:	01 00                	add    DWORD PTR [rax],eax
    4dd2:	00 00                	add    BYTE PTR [rax],al
    4dd4:	00 00                	add    BYTE PTR [rax],al
    4dd6:	00 00                	add    BYTE PTR [rax],al
    4dd8:	01 00                	add    DWORD PTR [rax],eax
    4dda:	00 00                	add    BYTE PTR [rax],al
    4ddc:	00 00                	add    BYTE PTR [rax],al
    4dde:	00 00                	add    BYTE PTR [rax],al
    4de0:	b3 05                	mov    bl,0x5
    4de2:	00 00                	add    BYTE PTR [rax],al
    4de4:	00 00                	add    BYTE PTR [rax],al
    4de6:	00 00                	add    BYTE PTR [rax],al
    4de8:	01 00                	add    DWORD PTR [rax],eax
    4dea:	00 00                	add    BYTE PTR [rax],al
    4dec:	00 00                	add    BYTE PTR [rax],al
    4dee:	00 00                	add    BYTE PTR [rax],al
    4df0:	be 05 00 00 00       	mov    esi,0x5
    4df5:	00 00                	add    BYTE PTR [rax],al
    4df7:	00 01                	add    BYTE PTR [rcx],al
    4df9:	00 00                	add    BYTE PTR [rax],al
    4dfb:	00 00                	add    BYTE PTR [rax],al
    4dfd:	00 00                	add    BYTE PTR [rax],al
    4dff:	00 cc                	add    ah,cl
    4e01:	05 00 00 00 00       	add    eax,0x0
    4e06:	00 00                	add    BYTE PTR [rax],al
    4e08:	0c 00                	or     al,0x0
    4e0a:	00 00                	add    BYTE PTR [rax],al
    4e0c:	00 00                	add    BYTE PTR [rax],al
    4e0e:	00 00                	add    BYTE PTR [rax],al
    4e10:	00 20                	add    BYTE PTR [rax],ah
    4e12:	00 00                	add    BYTE PTR [rax],al
    4e14:	00 00                	add    BYTE PTR [rax],al
    4e16:	00 00                	add    BYTE PTR [rax],al
    4e18:	0d 00 00 00 00       	or     eax,0x0
    4e1d:	00 00                	add    BYTE PTR [rax],al
    4e1f:	00 b4 26 00 00 00 00 	add    BYTE PTR [rsi+riz*1+0x0],dh
    4e26:	00 00                	add    BYTE PTR [rax],al
    4e28:	19 00                	sbb    DWORD PTR [rax],eax
    4e2a:	00 00                	add    BYTE PTR [rax],al
    4e2c:	00 00                	add    BYTE PTR [rax],al
    4e2e:	00 00                	add    BYTE PTR [rax],al
    4e30:	b8 4d 00 00 00       	mov    eax,0x4d
    4e35:	00 00                	add    BYTE PTR [rax],al
    4e37:	00 1b                	add    BYTE PTR [rbx],bl
    4e39:	00 00                	add    BYTE PTR [rax],al
    4e3b:	00 00                	add    BYTE PTR [rax],al
    4e3d:	00 00                	add    BYTE PTR [rax],al
    4e3f:	00 08                	add    BYTE PTR [rax],cl
    4e41:	00 00                	add    BYTE PTR [rax],al
    4e43:	00 00                	add    BYTE PTR [rax],al
    4e45:	00 00                	add    BYTE PTR [rax],al
    4e47:	00 1a                	add    BYTE PTR [rdx],bl
    4e49:	00 00                	add    BYTE PTR [rax],al
    4e4b:	00 00                	add    BYTE PTR [rax],al
    4e4d:	00 00                	add    BYTE PTR [rax],al
    4e4f:	00 c0                	add    al,al
    4e51:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4e54:	00 00                	add    BYTE PTR [rax],al
    4e56:	00 00                	add    BYTE PTR [rax],al
    4e58:	1c 00                	sbb    al,0x0
    4e5a:	00 00                	add    BYTE PTR [rax],al
    4e5c:	00 00                	add    BYTE PTR [rax],al
    4e5e:	00 00                	add    BYTE PTR [rax],al
    4e60:	08 00                	or     BYTE PTR [rax],al
    4e62:	00 00                	add    BYTE PTR [rax],al
    4e64:	00 00                	add    BYTE PTR [rax],al
    4e66:	00 00                	add    BYTE PTR [rax],al
    4e68:	f5                   	cmc    
    4e69:	fe                   	(bad)  
    4e6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4e6d:	00 00                	add    BYTE PTR [rax],al
    4e6f:	00 08                	add    BYTE PTR [rax],cl
    4e71:	03 00                	add    eax,DWORD PTR [rax]
    4e73:	00 00                	add    BYTE PTR [rax],al
    4e75:	00 00                	add    BYTE PTR [rax],al
    4e77:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4e7d <_DYNAMIC+0xb5>
    4e7d:	00 00                	add    BYTE PTR [rax],al
    4e7f:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    4e82:	00 00                	add    BYTE PTR [rax],al
    4e84:	00 00                	add    BYTE PTR [rax],al
    4e86:	00 00                	add    BYTE PTR [rax],al
    4e88:	06                   	(bad)  
    4e89:	00 00                	add    BYTE PTR [rax],al
    4e8b:	00 00                	add    BYTE PTR [rax],al
    4e8d:	00 00                	add    BYTE PTR [rax],al
    4e8f:	00 68 04             	add    BYTE PTR [rax+0x4],ch
    4e92:	00 00                	add    BYTE PTR [rax],al
    4e94:	00 00                	add    BYTE PTR [rax],al
    4e96:	00 00                	add    BYTE PTR [rax],al
    4e98:	0a 00                	or     al,BYTE PTR [rax]
    4e9a:	00 00                	add    BYTE PTR [rax],al
    4e9c:	00 00                	add    BYTE PTR [rax],al
    4e9e:	00 00                	add    BYTE PTR [rax],al
    4ea0:	03 06                	add    eax,DWORD PTR [rsi]
    4ea2:	00 00                	add    BYTE PTR [rax],al
    4ea4:	00 00                	add    BYTE PTR [rax],al
    4ea6:	00 00                	add    BYTE PTR [rax],al
    4ea8:	0b 00                	or     eax,DWORD PTR [rax]
    4eaa:	00 00                	add    BYTE PTR [rax],al
    4eac:	00 00                	add    BYTE PTR [rax],al
    4eae:	00 00                	add    BYTE PTR [rax],al
    4eb0:	18 00                	sbb    BYTE PTR [rax],al
    4eb2:	00 00                	add    BYTE PTR [rax],al
    4eb4:	00 00                	add    BYTE PTR [rax],al
    4eb6:	00 00                	add    BYTE PTR [rax],al
    4eb8:	15 00 00 00 00       	adc    eax,0x0
	...
    4ec5:	00 00                	add    BYTE PTR [rax],al
    4ec7:	00 03                	add    BYTE PTR [rbx],al
	...
    4ed1:	50                   	push   rax
    4ed2:	00 00                	add    BYTE PTR [rax],al
    4ed4:	00 00                	add    BYTE PTR [rax],al
    4ed6:	00 00                	add    BYTE PTR [rax],al
    4ed8:	02 00                	add    al,BYTE PTR [rax]
    4eda:	00 00                	add    BYTE PTR [rax],al
    4edc:	00 00                	add    BYTE PTR [rax],al
    4ede:	00 00                	add    BYTE PTR [rax],al
    4ee0:	e0 01                	loopne 4ee3 <_DYNAMIC+0x11b>
    4ee2:	00 00                	add    BYTE PTR [rax],al
    4ee4:	00 00                	add    BYTE PTR [rax],al
    4ee6:	00 00                	add    BYTE PTR [rax],al
    4ee8:	14 00                	adc    al,0x0
    4eea:	00 00                	add    BYTE PTR [rax],al
    4eec:	00 00                	add    BYTE PTR [rax],al
    4eee:	00 00                	add    BYTE PTR [rax],al
    4ef0:	07                   	(bad)  
    4ef1:	00 00                	add    BYTE PTR [rax],al
    4ef3:	00 00                	add    BYTE PTR [rax],al
    4ef5:	00 00                	add    BYTE PTR [rax],al
    4ef7:	00 17                	add    BYTE PTR [rdi],dl
    4ef9:	00 00                	add    BYTE PTR [rax],al
    4efb:	00 00                	add    BYTE PTR [rax],al
    4efd:	00 00                	add    BYTE PTR [rax],al
    4eff:	00 30                	add    BYTE PTR [rax],dh
    4f01:	15 00 00 00 00       	adc    eax,0x0
    4f06:	00 00                	add    BYTE PTR [rax],al
    4f08:	07                   	(bad)  
    4f09:	00 00                	add    BYTE PTR [rax],al
    4f0b:	00 00                	add    BYTE PTR [rax],al
    4f0d:	00 00                	add    BYTE PTR [rax],al
    4f0f:	00 f8                	add    al,bh
    4f11:	10 00                	adc    BYTE PTR [rax],al
    4f13:	00 00                	add    BYTE PTR [rax],al
    4f15:	00 00                	add    BYTE PTR [rax],al
    4f17:	00 08                	add    BYTE PTR [rax],cl
    4f19:	00 00                	add    BYTE PTR [rax],al
    4f1b:	00 00                	add    BYTE PTR [rax],al
    4f1d:	00 00                	add    BYTE PTR [rax],al
    4f1f:	00 38                	add    BYTE PTR [rax],bh
    4f21:	04 00                	add    al,0x0
    4f23:	00 00                	add    BYTE PTR [rax],al
    4f25:	00 00                	add    BYTE PTR [rax],al
    4f27:	00 09                	add    BYTE PTR [rcx],cl
    4f29:	00 00                	add    BYTE PTR [rax],al
    4f2b:	00 00                	add    BYTE PTR [rax],al
    4f2d:	00 00                	add    BYTE PTR [rax],al
    4f2f:	00 18                	add    BYTE PTR [rax],bl
    4f31:	00 00                	add    BYTE PTR [rax],al
    4f33:	00 00                	add    BYTE PTR [rax],al
    4f35:	00 00                	add    BYTE PTR [rax],al
    4f37:	00 fb                	add    bl,bh
    4f39:	ff                   	(bad)  
    4f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4f3d:	00 00                	add    BYTE PTR [rax],al
    4f3f:	00 00                	add    BYTE PTR [rax],al
    4f41:	00 00                	add    BYTE PTR [rax],al
    4f43:	08 00                	or     BYTE PTR [rax],al
    4f45:	00 00                	add    BYTE PTR [rax],al
    4f47:	00 fe                	add    dh,bh
    4f49:	ff                   	(bad)  
    4f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4f4d:	00 00                	add    BYTE PTR [rax],al
    4f4f:	00 d8                	add    al,bl
    4f51:	10 00                	adc    BYTE PTR [rax],al
    4f53:	00 00                	add    BYTE PTR [rax],al
    4f55:	00 00                	add    BYTE PTR [rax],al
    4f57:	00 ff                	add    bh,bh
    4f59:	ff                   	(bad)  
    4f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4f5d:	00 00                	add    BYTE PTR [rax],al
    4f5f:	00 01                	add    BYTE PTR [rcx],al
    4f61:	00 00                	add    BYTE PTR [rax],al
    4f63:	00 00                	add    BYTE PTR [rax],al
    4f65:	00 00                	add    BYTE PTR [rax],al
    4f67:	00 f0                	add    al,dh
    4f69:	ff                   	(bad)  
    4f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4f6d:	00 00                	add    BYTE PTR [rax],al
    4f6f:	00 54 10 00          	add    BYTE PTR [rax+rdx*1+0x0],dl
    4f73:	00 00                	add    BYTE PTR [rax],al
    4f75:	00 00                	add    BYTE PTR [rax],al
    4f77:	00 f9                	add    cl,bh
    4f79:	ff                   	(bad)  
    4f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    4f7d:	00 00                	add    BYTE PTR [rax],al
    4f7f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000004fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000005000 <_GLOBAL_OFFSET_TABLE_>:
    5000:	c8 4d 00 00          	enter  0x4d,0x0
	...
    5018:	36 20 00             	and    BYTE PTR ss:[rax],al
    501b:	00 00                	add    BYTE PTR [rax],al
    501d:	00 00                	add    BYTE PTR [rax],al
    501f:	00 46 20             	add    BYTE PTR [rsi+0x20],al
    5022:	00 00                	add    BYTE PTR [rax],al
    5024:	00 00                	add    BYTE PTR [rax],al
    5026:	00 00                	add    BYTE PTR [rax],al
    5028:	56                   	push   rsi
    5029:	20 00                	and    BYTE PTR [rax],al
    502b:	00 00                	add    BYTE PTR [rax],al
    502d:	00 00                	add    BYTE PTR [rax],al
    502f:	00 66 20             	add    BYTE PTR [rsi+0x20],ah
    5032:	00 00                	add    BYTE PTR [rax],al
    5034:	00 00                	add    BYTE PTR [rax],al
    5036:	00 00                	add    BYTE PTR [rax],al
    5038:	76 20                	jbe    505a <_GLOBAL_OFFSET_TABLE_+0x5a>
    503a:	00 00                	add    BYTE PTR [rax],al
    503c:	00 00                	add    BYTE PTR [rax],al
    503e:	00 00                	add    BYTE PTR [rax],al
    5040:	86 20                	xchg   BYTE PTR [rax],ah
    5042:	00 00                	add    BYTE PTR [rax],al
    5044:	00 00                	add    BYTE PTR [rax],al
    5046:	00 00                	add    BYTE PTR [rax],al
    5048:	96                   	xchg   esi,eax
    5049:	20 00                	and    BYTE PTR [rax],al
    504b:	00 00                	add    BYTE PTR [rax],al
    504d:	00 00                	add    BYTE PTR [rax],al
    504f:	00 a6 20 00 00 00    	add    BYTE PTR [rsi+0x20],ah
    5055:	00 00                	add    BYTE PTR [rax],al
    5057:	00 b6 20 00 00 00    	add    BYTE PTR [rsi+0x20],dh
    505d:	00 00                	add    BYTE PTR [rax],al
    505f:	00 c6                	add    dh,al
    5061:	20 00                	and    BYTE PTR [rax],al
    5063:	00 00                	add    BYTE PTR [rax],al
    5065:	00 00                	add    BYTE PTR [rax],al
    5067:	00 d6                	add    dh,dl
    5069:	20 00                	and    BYTE PTR [rax],al
    506b:	00 00                	add    BYTE PTR [rax],al
    506d:	00 00                	add    BYTE PTR [rax],al
    506f:	00 e6                	add    dh,ah
    5071:	20 00                	and    BYTE PTR [rax],al
    5073:	00 00                	add    BYTE PTR [rax],al
    5075:	00 00                	add    BYTE PTR [rax],al
    5077:	00 f6                	add    dh,dh
    5079:	20 00                	and    BYTE PTR [rax],al
    507b:	00 00                	add    BYTE PTR [rax],al
    507d:	00 00                	add    BYTE PTR [rax],al
    507f:	00 06                	add    BYTE PTR [rsi],al
    5081:	21 00                	and    DWORD PTR [rax],eax
    5083:	00 00                	add    BYTE PTR [rax],al
    5085:	00 00                	add    BYTE PTR [rax],al
    5087:	00 16                	add    BYTE PTR [rsi],dl
    5089:	21 00                	and    DWORD PTR [rax],eax
    508b:	00 00                	add    BYTE PTR [rax],al
    508d:	00 00                	add    BYTE PTR [rax],al
    508f:	00 26                	add    BYTE PTR [rsi],ah
    5091:	21 00                	and    DWORD PTR [rax],eax
    5093:	00 00                	add    BYTE PTR [rax],al
    5095:	00 00                	add    BYTE PTR [rax],al
    5097:	00 36                	add    BYTE PTR [rsi],dh
    5099:	21 00                	and    DWORD PTR [rax],eax
    509b:	00 00                	add    BYTE PTR [rax],al
    509d:	00 00                	add    BYTE PTR [rax],al
    509f:	00 46 21             	add    BYTE PTR [rsi+0x21],al
    50a2:	00 00                	add    BYTE PTR [rax],al
    50a4:	00 00                	add    BYTE PTR [rax],al
    50a6:	00 00                	add    BYTE PTR [rax],al
    50a8:	56                   	push   rsi
    50a9:	21 00                	and    DWORD PTR [rax],eax
    50ab:	00 00                	add    BYTE PTR [rax],al
    50ad:	00 00                	add    BYTE PTR [rax],al
    50af:	00 66 21             	add    BYTE PTR [rsi+0x21],ah
    50b2:	00 00                	add    BYTE PTR [rax],al
    50b4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

00000000000050b8 <__data_start>:
	...

00000000000050c0 <__dso_handle>:
    50c0:	c0 50 00 00          	rcl    BYTE PTR [rax+0x0],0x0
    50c4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000050c8 <ada_main_E>:
	...

00000000000050ca <ada_main__is_elaborated>:
	...

Disassembly of section .bss:

00000000000050e0 <__gl_task_dispatching_policy>:
	...

0000000000005100 <__gnat_default_ss_size>:
    5100:	00 00                	add    BYTE PTR [rax],al
	...

0000000000005104 <system__os_lib_E>:
    5104:	00 00                	add    BYTE PTR [rax],al
	...

0000000000005108 <ada__containers_E>:
	...

0000000000005120 <system__soft_links_E>:
	...

0000000000005140 <system__traceback__symbolic_E>:
	...

0000000000005150 <gnat_envp>:
	...

0000000000005158 <__gl_interrupt_states>:
	...

0000000000005160 <__gnat_finalize_library_objects>:
	...

0000000000005168 <system__soft_links__initialize_E>:
	...

0000000000005180 <ada__io_exceptions_E>:
    5180:	00 00                	add    BYTE PTR [rax],al
	...

0000000000005184 <__gnat_binder_ss_count>:
    5184:	00 00                	add    BYTE PTR [rax],al
	...

0000000000005188 <__gl_main_cpu>:
	...

0000000000005190 <__gnat_default_ss_pool>:
	...

0000000000005198 <__gl_locking_policy>:
	...

00000000000051a0 <__gl_time_slice_val>:
	...

00000000000051a8 <gnat_exit_status>:
    51a8:	00 00                	add    BYTE PTR [rax],al
	...

00000000000051ac <__gl_leap_seconds_support>:
    51ac:	00 00                	add    BYTE PTR [rax],al
	...

00000000000051b0 <__gl_unreserve_all_interrupts>:
	...

00000000000051c0 <system__dwarf_lines_E>:
	...

00000000000051c2 <__gl_wc_encoding>:
	...

00000000000051c4 <ada__strings_E>:
    51c4:	00 00                	add    BYTE PTR [rax],al
	...

00000000000051c8 <gnat_argv>:
	...

00000000000051d0 <interfaces__c_E>:
	...

00000000000051d2 <__gl_queuing_policy>:
	...

00000000000051e0 <__gl_num_specific_dispatching>:
	...

00000000000051f0 <__gl_main_priority>:
	...

00000000000051f8 <__gl_priority_specific_dispatching>:
	...

0000000000005200 <system__object_reader_E>:
	...

0000000000005202 <system__exceptions_E>:
	...

0000000000005220 <__gl_detect_blocking>:
	...

0000000000005240 <gnat_argc>:
	...

0000000000005250 <__gl_num_interrupt_states>:
	...

0000000000005258 <system__exception_table_E>:
	...

0000000000005260 <__gl_default_stack_size>:
    5260:	00 00                	add    BYTE PTR [rax],al
	...

0000000000005264 <ada__strings__maps__constants_E>:
    5264:	00 00                	add    BYTE PTR [rax],al
	...

0000000000005268 <ada__strings__maps_E>:
	...

000000000000526a <completed.7325>:
	...

0000000000005280 <ada_main__sec_default_sized_stacks>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 38 2e 32 	imul   esp,DWORD PTR [rcx+0x6e],0x322e3820
  10:	2e 30 2d 31 34 29 20 	xor    BYTE PTR cs:[rip+0x20293431],ch        # 20293448 <_end+0x2028b988>
  17:	38 2e                	cmp    BYTE PTR [rsi],ch
  19:	32 2e                	xor    ch,BYTE PTR [rsi]
  1b:	30 00                	xor    BYTE PTR [rax],al

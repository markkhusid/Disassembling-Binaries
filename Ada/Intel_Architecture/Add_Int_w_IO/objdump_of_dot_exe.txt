
add_int_w_io_Ada_AMD64:     file format elf64-x86-64
add_int_w_io_Ada_AMD64
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001270

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000001a38 memsz 0x0000000000001a38 flags r-x
    LOAD off    0x0000000000001d38 vaddr 0x0000000000201d38 paddr 0x0000000000201d38 align 2**21
         filesz 0x00000000000002db memsz 0x00000000000003f0 flags rw-
 DYNAMIC off    0x0000000000001d48 vaddr 0x0000000000201d48 paddr 0x0000000000201d48 align 2**3
         filesz 0x0000000000000200 memsz 0x0000000000000200 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000001868 vaddr 0x0000000000001868 paddr 0x0000000000001868 align 2**2
         filesz 0x0000000000000054 memsz 0x0000000000000054 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000001d38 vaddr 0x0000000000201d38 paddr 0x0000000000201d38 align 2**0
         filesz 0x00000000000002c8 memsz 0x00000000000002c8 flags r--

Dynamic Section:
  NEEDED               libgnat-7.so.1
  NEEDED               libc.so.6
  INIT                 0x0000000000001148
  FINI                 0x0000000000001694
  INIT_ARRAY           0x0000000000201d38
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000201d40
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000830
  SYMTAB               0x0000000000000380
  STRSZ                0x000000000000042c
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000201f48
  PLTRELSZ             0x0000000000000168
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000fe0
  RELA                 0x0000000000000ce0
  RELASZ               0x0000000000000300
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x0000000000000cc0
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000000c5c
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     000000e8  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000004b0  0000000000000380  0000000000000380  00000380  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000042c  0000000000000830  0000000000000830  00000830  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000064  0000000000000c5c  0000000000000c5c  00000c5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0000000000000cc0  0000000000000cc0  00000cc0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000300  0000000000000ce0  0000000000000ce0  00000ce0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000168  0000000000000fe0  0000000000000fe0  00000fe0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000001148  0000000000001148  00001148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000100  0000000000001160  0000000000001160  00001160  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000001260  0000000000001260  00001260  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000422  0000000000001270  0000000000001270  00001270  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000001694  0000000000001694  00001694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000001c8  00000000000016a0  00000000000016a0  000016a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000054  0000000000001868  0000000000001868  00001868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000178  00000000000018c0  00000000000018c0  000018c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000201d38  0000000000201d38  00001d38  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000201d40  0000000000201d40  00001d40  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000200  0000000000201d48  0000000000201d48  00001d48  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          000000b8  0000000000201f48  0000000000201f48  00001f48  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000013  0000000000202000  0000000000202000  00002000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000108  0000000000202020  0000000000202020  00002013  2**5
                  ALLOC
 24 .comment      0000002a  0000000000000000  0000000000000000  00002013  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000380 l    d  .dynsym	0000000000000000              .dynsym
0000000000000830 l    d  .dynstr	0000000000000000              .dynstr
0000000000000c5c l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000cc0 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000ce0 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000fe0 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001148 l    d  .init	0000000000000000              .init
0000000000001160 l    d  .plt	0000000000000000              .plt
0000000000001260 l    d  .plt.got	0000000000000000              .plt.got
0000000000001270 l    d  .text	0000000000000000              .text
0000000000001694 l    d  .fini	0000000000000000              .fini
00000000000016a0 l    d  .rodata	0000000000000000              .rodata
0000000000001868 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000018c0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000201d38 l    d  .init_array	0000000000000000              .init_array
0000000000201d40 l    d  .fini_array	0000000000000000              .fini_array
0000000000201d48 l    d  .dynamic	0000000000000000              .dynamic
0000000000201f48 l    d  .got	0000000000000000              .got
0000000000202000 l    d  .data	0000000000000000              .data
0000000000202020 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000012a0 l     F .text	0000000000000000              deregister_tm_clones
00000000000012e0 l     F .text	0000000000000000              register_tm_clones
0000000000001330 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000202124 l     O .bss	0000000000000001              completed.7696
0000000000201d40 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001370 l     F .text	0000000000000000              frame_dummy
0000000000201d38 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              b~add_int_w_io.adb
0000000000202012 l     O .data	0000000000000001              ada_main__is_elaborated
00000000000017b8 l     O .rodata	0000000000000001              ada_main__local_priority_specific_dispatching
00000000000017b9 l     O .rodata	0000000000000001              ada_main__local_interrupt_states
0000000000000000 l    df *ABS*	0000000000000000              add_int_w_io.adb
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001a34 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000001868 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000201f48 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000201d40 l       .init_array	0000000000000000              __init_array_end
0000000000201d38 l       .init_array	0000000000000000              __init_array_start
0000000000201d48 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000202000  w      .data	0000000000000000              data_start
0000000000001728 g     O .rodata	0000000000000004              system__parametersS
0000000000202020 g     O .bss	0000000000000001              __gl_task_dispatching_policy
000000000000173c g     O .rodata	0000000000000004              system__stack_checkingB
00000000000016f8 g     O .rodata	0000000000000004              gnat__ioS
0000000000001690 g     F .text	0000000000000002              __libc_csu_fini
0000000000001788 g     O .rodata	0000000000000004              system__address_imageB
0000000000001270 g     F .text	000000000000002b              _start
0000000000000000       F *UND*	0000000000000000              __gnat_finalize
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000001724 g     O .rodata	0000000000000004              system__parametersB
00000000000016d0 g     O .rodata	0000000000000012              __gnat_ada_main_program_name
0000000000202028 g     O .bss	0000000000000002              system__secondary_stack_E
000000000000175c g     O .rodata	0000000000000004              system__exceptions_debugS
0000000000202040 g     O .bss	0000000000000002              system__soft_links_E
0000000000001734 g     O .rodata	0000000000000004              system__storage_elementsB
0000000000001694 g     F .fini	0000000000000000              _fini
00000000000016f0 g     O .rodata	0000000000000004              gnatS
00000000000016e8 g     O .rodata	0000000000000004              system__standard_libraryB
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              system__secondary_stack___elabb
0000000000202050 g     O .bss	0000000000000008              gnat_envp
0000000000001760 g     O .rodata	0000000000000004              system__img_intB
00000000000017b0 g     O .rodata	0000000000000004              system__wch_jisS
0000000000001720 g     O .rodata	0000000000000004              system__soft_linksS
00000000000017b4 g     O .rodata	0000000000000004              system__crtlS
0000000000001710 g     O .rodata	0000000000000004              adaS
0000000000000000       F *UND*	0000000000000000              system__soft_links___elabb
0000000000001714 g     O .rodata	0000000000000004              ada__exceptions__last_chance_handlerB
0000000000001750 g     O .rodata	0000000000000004              system__exceptionsS
000000000000170c g     O .rodata	0000000000000004              ada__exceptionsS
0000000000202058 g     O .bss	0000000000000008              __gl_interrupt_states
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
00000000000016a0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000202060 g     O .bss	0000000000000008              __gnat_finalize_library_objects
000000000000176c g     O .rodata	0000000000000004              system__tracebackS
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000202000 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              system__exceptions___elabs
0000000000000000       F *UND*	0000000000000000              system__exception_table___elabb
0000000000001700 g     O .rodata	0000000000000004              system__memoryB
0000000000000000       F *UND*	0000000000000000              gnat__io__get
0000000000000000       F *UND*	0000000000000000              system__standard_library__adafinal
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000001758 g     O .rodata	0000000000000004              system__exceptions_debugB
000000000000137a g     F .text	0000000000000029              adafinal
0000000000001780 g     O .rodata	0000000000000004              ada__exceptions__tracebackB
0000000000000000       F *UND*	0000000000000000              __gnat_initialize
0000000000001790 g     O .rodata	0000000000000004              system__wch_conB
000000000000179c g     O .rodata	0000000000000004              system__wch_stwS
00000000000013a4 g     F .text	0000000000000124              adainit
0000000000202018 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000001744 g     O .rodata	0000000000000004              system__exception_tableB
0000000000000000       F *UND*	0000000000000000              __gnat_runtime_finalize
0000000000202068 g     O .bss	0000000000000004              __gl_main_cpu
0000000000202008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000001764 g     O .rodata	0000000000000004              system__img_intS
0000000000001730 g     O .rodata	0000000000000004              system__secondary_stackS
00000000000017a4 g     O .rodata	0000000000000004              system__wch_cnvS
0000000000001620 g     F .text	0000000000000065              __libc_csu_init
00000000000016e4 g     O .rodata	0000000000000004              add_int_w_ioB
0000000000001754 g     O .rodata	0000000000000004              system__exceptions__machineS
0000000000000000       F *UND*	0000000000000000              system__soft_links___elabs
0000000000001704 g     O .rodata	0000000000000004              system__memoryS
000000000020206c g     O .bss	0000000000000001              __gl_locking_policy
0000000000001770 g     O .rodata	0000000000000004              system__traceback_entriesB
0000000000202070 g     O .bss	0000000000000004              __gl_time_slice_val
0000000000202078 g     O .bss	0000000000000004              gnat_exit_status
000000000020207c g     O .bss	0000000000000004              __gl_leap_seconds_support
0000000000001718 g     O .rodata	0000000000000004              ada__exceptions__last_chance_handlerS
0000000000202080 g     O .bss	0000000000000004              __gl_unreserve_all_interrupts
000000000000171c g     O .rodata	0000000000000004              system__soft_linksB
0000000000001708 g     O .rodata	0000000000000004              ada__exceptionsB
0000000000202013 g       .bss	0000000000000000              __bss_start
00000000000017a8 g     O .rodata	0000000000000004              interfacesS
0000000000001738 g     O .rodata	0000000000000004              system__storage_elementsS
0000000000000000       F *UND*	0000000000000000              gnat__io__put__2
0000000000202084 g     O .bss	0000000000000001              __gl_wc_encoding
0000000000001740 g     O .rodata	0000000000000004              system__stack_checkingS
00000000000016f4 g     O .rodata	0000000000000004              gnat__ioB
0000000000202010 g     O .data	0000000000000002              ada_main_E
0000000000001768 g     O .rodata	0000000000000004              system__tracebackB
00000000000016b0 g     O .rodata	0000000000000014              __gnat_version
00000000000017a0 g     O .rodata	0000000000000004              system__wch_cnvB
0000000000202088 g     O .bss	0000000000000008              gnat_argv
0000000000001748 g     O .rodata	0000000000000004              system__exception_tableS
0000000000202128 g       .bss	0000000000000000              _end
0000000000000000       F *UND*	0000000000000000              gnat__io__new_line__2
000000000000178c g     O .rodata	0000000000000004              system__address_imageS
000000000000174c g     O .rodata	0000000000000004              system__exceptionsB
000000000000172c g     O .rodata	0000000000000004              system__secondary_stackB
0000000000202090 g     O .bss	0000000000000001              __gl_queuing_policy
0000000000001794 g     O .rodata	0000000000000004              system__wch_conS
00000000002020a0 g     O .bss	0000000000000004              __gl_num_specific_dispatching
0000000000001798 g     O .rodata	0000000000000004              system__wch_stwB
00000000002020b0 g     O .bss	0000000000000004              __gl_main_priority
00000000002020b8 g     O .bss	0000000000000008              __gl_priority_specific_dispatching
0000000000001774 g     O .rodata	0000000000000004              system__traceback_entriesS
00000000002020c0 g     O .bss	0000000000000002              system__exceptions_E
0000000000000000       F *UND*	0000000000000000              gnat__io__put__6
00000000002020e0 g     O .bss	0000000000000004              __gl_detect_blocking
0000000000001784 g     O .rodata	0000000000000004              ada__exceptions__tracebackS
0000000000202100 g     O .bss	0000000000000004              gnat_argc
0000000000202110 g     O .bss	0000000000000004              __gl_num_interrupt_states
000000000000177c g     O .rodata	0000000000000004              system__traceback__symbolicS
0000000000202013 g       .data	0000000000000000              _edata
0000000000000000       F *UND*	0000000000000000              __gnat_rcheck_CE_Overflow_Check
0000000000202118 g     O .bss	0000000000000002              system__exception_table_E
0000000000202120 g     O .bss	0000000000000004              __gl_default_stack_size
0000000000000000       F *UND*	0000000000000000              __gnat_runtime_initialize
00000000000016fc g     O .rodata	0000000000000004              systemS
000000000000152e g     F .text	00000000000000e9              _ada_add_int_w_io
00000000000017ac g     O .rodata	0000000000000004              system__wch_jisB
0000000000001778 g     O .rodata	0000000000000004              system__traceback__symbolicB
00000000000014c8 g     F .text	0000000000000065              main
0000000000001148 g     F .init	0000000000000000              _init
00000000000016ec g     O .rodata	0000000000000004              system__standard_libraryS


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 0989047b a769fb8f 0de992eb 1ed7eb2a  ...{.i.........*
 0294 68c5ef2a                             h..*            
Contents of section .gnu.hash:
 0298 11000000 15000000 04000000 08000000  ................
 02a8 00080068 d0002208 2a020300 92080000  ...h..".*.......
 02b8 f42b0040 0803a029 01402801 46046282  .+.@...).@(.F.b.
 02c8 15000000 16000000 18000000 1b000000  ................
 02d8 1c000000 1f000000 22000000 25000000  ........"...%...
 02e8 26000000 28000000 2a000000 2c000000  &...(...*...,...
 02f8 00000000 2e000000 00000000 2f000000  ............/...
 0308 30000000 e3a6e2b5 6481301e ebd3ef0e  0.......d.0.....
 0318 a8473d3a 6ad15c9b b98df10e d971581c  .G=:j.\......qX.
 0328 d43937df 60a7ba84 bbe3927c 82451616  .97.`......|.E..
 0338 1aa7c1a2 89485434 34664954 3a31857a  .....HT44fIT:1.z
 0348 8b1e8361 4345d5ec b6e3d51f cfb5a5cc  ...aCE..........
 0358 b482205b 0b24cd94 e03f4262 f7000156  .. [.$...?Bb...V
 0368 1e24cd94 49d06fc5 0b1d157a a9fdd790  .$..I.o....z....
 0378 8646cf94 85a86bdd                    .F....k.        
Contents of section .dynsym:
 0380 00000000 00000000 00000000 00000000  ................
 0390 00000000 00000000 3c010000 12000000  ........<.......
 03a0 00000000 00000000 00000000 00000000  ................
 03b0 10000000 20000000 00000000 00000000  .... ...........
 03c0 00000000 00000000 f6030000 12000000  ................
 03d0 00000000 00000000 00000000 00000000  ................
 03e0 1a020000 12000000 00000000 00000000  ................
 03f0 00000000 00000000 74030000 12000000  ........t.......
 0400 00000000 00000000 00000000 00000000  ................
 0410 1f000000 20000000 00000000 00000000  .... ...........
 0420 00000000 00000000 3b000000 20000000  ........;... ...
 0430 00000000 00000000 00000000 00000000  ................
 0440 ba020000 12000000 00000000 00000000  ................
 0450 00000000 00000000 54030000 12000000  ........T.......
 0460 00000000 00000000 00000000 00000000  ................
 0470 a9010000 12000000 00000000 00000000  ................
 0480 00000000 00000000 86000000 12000000  ................
 0490 00000000 00000000 00000000 00000000  ................
 04a0 e7030000 22000000 00000000 00000000  ...."...........
 04b0 00000000 00000000 a8020000 12000000  ................
 04c0 00000000 00000000 00000000 00000000  ................
 04d0 cf010000 12000000 00000000 00000000  ................
 04e0 00000000 00000000 8f030000 12000000  ................
 04f0 00000000 00000000 00000000 00000000  ................
 0500 e7010000 12000000 00000000 00000000  ................
 0510 00000000 00000000 5f020000 12000000  ........_.......
 0520 00000000 00000000 00000000 00000000  ................
 0530 f8010000 12000000 00000000 00000000  ................
 0540 00000000 00000000 00030000 12000000  ................
 0550 00000000 00000000 00000000 00000000  ................
 0560 20030000 12000000 00000000 00000000   ...............
 0570 00000000 00000000 3a030000 11001800  ........:.......
 0580 18212000 00000000 02000000 00000000  .! .............
 0590 55000000 11001800 20202000 00000000  U.......   .....
 05a0 01000000 00000000 89010000 12000f00  ................
 05b0 94160000 00000000 00000000 00000000  ................
 05c0 4c010000 11001800 28202000 00000000  L.......(  .....
 05d0 02000000 00000000 8a020000 11001800  ................
 05e0 80202000 00000000 04000000 00000000  .  .............
 05f0 a9000000 12000b00 48110000 00000000  ........H.......
 0600 00000000 00000000 0f040000 10001800  ................
 0610 13202000 00000000 00000000 00000000  .  .............
 0620 d7000000 11001800 70202000 00000000  ........p  .....
 0630 04000000 00000000 8f010000 11001800  ................
 0640 7c202000 00000000 04000000 00000000  |  .............
 0650 1b040000 10001800 28212000 00000000  ........(! .....
 0660 00000000 00000000 3a020000 11001800  ........:.......
 0670 90202000 00000000 01000000 00000000  .  .............
 0680 ca030000 11001800 b0202000 00000000  .........  .....
 0690 04000000 00000000 b7010000 11001800  ................
 06a0 20212000 00000000 04000000 00000000   ! .............
 06b0 d5020000 11001800 58202000 00000000  ........X  .....
 06c0 08000000 00000000 aa030000 11001800  ................
 06d0 60202000 00000000 08000000 00000000  `  .............
 06e0 09020000 11001800 78202000 00000000  ........x  .....
 06f0 04000000 00000000 08040000 10001700  ................
 0700 13202000 00000000 00000000 00000000  .  .............
 0710 b9000000 11001800 a0202000 00000000  .........  .....
 0720 04000000 00000000 eb020000 11001800  ................
 0730 c0202000 00000000 02000000 00000000  .  .............
 0740 4e020000 11001800 84202000 00000000  N........  .....
 0750 01000000 00000000 72000000 11001800  ........r.......
 0760 00212000 00000000 04000000 00000000  .! .............
 0770 66010000 11001800 68202000 00000000  f.......h  .....
 0780 04000000 00000000 74010000 11001800  ........t.......
 0790 e0202000 00000000 04000000 00000000  .  .............
 07a0 7c000000 11001800 88202000 00000000  |........  .....
 07b0 08000000 00000000 ff000000 11001800  ................
 07c0 b8202000 00000000 08000000 00000000  .  .............
 07d0 eb000000 11001800 6c202000 00000000  ........l  .....
 07e0 01000000 00000000 75020000 11001800  ........u.......
 07f0 40202000 00000000 02000000 00000000  @  .............
 0800 af000000 11001800 50202000 00000000  ........P  .....
 0810 08000000 00000000 22010000 11001800  ........".......
 0820 10212000 00000000 04000000 00000000  .! .............
Contents of section .dynstr:
 0830 006c6962 676e6174 2d372e73 6f2e3100  .libgnat-7.so.1.
 0840 5f5f676d 6f6e5f73 74617274 5f5f005f  __gmon_start__._
 0850 49544d5f 64657265 67697374 6572544d  ITM_deregisterTM
 0860 436c6f6e 65546162 6c65005f 49544d5f  CloneTable._ITM_
 0870 72656769 73746572 544d436c 6f6e6554  registerTMCloneT
 0880 61626c65 005f5f67 6c5f7461 736b5f64  able.__gl_task_d
 0890 69737061 74636869 6e675f70 6f6c6963  ispatching_polic
 08a0 7900676e 61745f61 72676300 676e6174  y.gnat_argc.gnat
 08b0 5f617267 76007379 7374656d 5f5f7374  _argv.system__st
 08c0 616e6461 72645f6c 69627261 72795f5f  andard_library__
 08d0 61646166 696e616c 005f696e 69740067  adafinal._init.g
 08e0 6e61745f 656e7670 005f5f67 6c5f6e75  nat_envp.__gl_nu
 08f0 6d5f7370 65636966 69635f64 69737061  m_specific_dispa
 0900 74636869 6e67005f 5f676c5f 74696d65  tching.__gl_time
 0910 5f736c69 63655f76 616c005f 5f676c5f  _slice_val.__gl_
 0920 6c6f636b 696e675f 706f6c69 6379005f  locking_policy._
 0930 5f676c5f 7072696f 72697479 5f737065  _gl_priority_spe
 0940 63696669 635f6469 73706174 6368696e  cific_dispatchin
 0950 67005f5f 676c5f6e 756d5f69 6e746572  g.__gl_num_inter
 0960 72757074 5f737461 74657300 5f5f676e  rupt_states.__gn
 0970 61745f66 696e616c 697a6500 73797374  at_finalize.syst
 0980 656d5f5f 7365636f 6e646172 795f7374  em__secondary_st
 0990 61636b5f 45005f5f 676c5f6d 61696e5f  ack_E.__gl_main_
 09a0 63707500 5f5f676c 5f646574 6563745f  cpu.__gl_detect_
 09b0 626c6f63 6b696e67 005f6669 6e69005f  blocking._fini._
 09c0 5f676c5f 6c656170 5f736563 6f6e6473  _gl_leap_seconds
 09d0 5f737570 706f7274 00676e61 745f5f69  _support.gnat__i
 09e0 6f5f5f67 6574005f 5f676c5f 64656661  o__get.__gl_defa
 09f0 756c745f 73746163 6b5f7369 7a65005f  ult_stack_size._
 0a00 5f676e61 745f7275 6e74696d 655f6669  _gnat_runtime_fi
 0a10 6e616c69 7a650067 6e61745f 5f696f5f  nalize.gnat__io_
 0a20 5f707574 5f5f3200 676e6174 5f5f696f  _put__2.gnat__io
 0a30 5f5f7075 745f5f36 00676e61 745f6578  __put__6.gnat_ex
 0a40 69745f73 74617475 73007379 7374656d  it_status.system
 0a50 5f5f7365 636f6e64 6172795f 73746163  __secondary_stac
 0a60 6b5f5f5f 656c6162 62005f5f 676c5f71  k___elabb.__gl_q
 0a70 75657569 6e675f70 6f6c6963 79005f5f  ueuing_policy.__
 0a80 676c5f77 635f656e 636f6469 6e670067  gl_wc_encoding.g
 0a90 6e61745f 5f696f5f 5f6e6577 5f6c696e  nat__io__new_lin
 0aa0 655f5f32 00737973 74656d5f 5f736f66  e__2.system__sof
 0ab0 745f6c69 6e6b735f 45005f5f 676c5f75  t_links_E.__gl_u
 0ac0 6e726573 65727665 5f616c6c 5f696e74  nreserve_all_int
 0ad0 65727275 70747300 5f5f676e 61745f69  errupts.__gnat_i
 0ae0 6e697469 616c697a 65007379 7374656d  nitialize.system
 0af0 5f5f6578 63657074 696f6e73 5f5f5f65  __exceptions___e
 0b00 6c616273 005f5f67 6c5f696e 74657272  labs.__gl_interr
 0b10 7570745f 73746174 65730073 79737465  upt_states.syste
 0b20 6d5f5f65 78636570 74696f6e 735f4500  m__exceptions_E.
 0b30 5f5f676e 61745f72 63686563 6b5f4345  __gnat_rcheck_CE
 0b40 5f4f7665 72666c6f 775f4368 65636b00  _Overflow_Check.
 0b50 5f5f676e 61745f72 756e7469 6d655f69  __gnat_runtime_i
 0b60 6e697469 616c697a 65007379 7374656d  nitialize.system
 0b70 5f5f6578 63657074 696f6e5f 7461626c  __exception_tabl
 0b80 655f4500 73797374 656d5f5f 65786365  e_E.system__exce
 0b90 7074696f 6e5f7461 626c655f 5f5f656c  ption_table___el
 0ba0 61626200 73797374 656d5f5f 736f6674  abb.system__soft
 0bb0 5f6c696e 6b735f5f 5f656c61 62620073  _links___elabb.s
 0bc0 79737465 6d5f5f73 6f66745f 6c696e6b  ystem__soft_link
 0bd0 735f5f5f 656c6162 73005f5f 676e6174  s___elabs.__gnat
 0be0 5f66696e 616c697a 655f6c69 62726172  _finalize_librar
 0bf0 795f6f62 6a656374 73005f5f 676c5f6d  y_objects.__gl_m
 0c00 61696e5f 7072696f 72697479 006c6962  ain_priority.lib
 0c10 632e736f 2e36005f 5f637861 5f66696e  c.so.6.__cxa_fin
 0c20 616c697a 65005f5f 6c696263 5f737461  alize.__libc_sta
 0c30 72745f6d 61696e00 5f656461 7461005f  rt_main._edata._
 0c40 5f627373 5f737461 7274005f 656e6400  _bss_start._end.
 0c50 474c4942 435f322e 322e3500           GLIBC_2.2.5.    
Contents of section .gnu.version:
 0c5c 00000000 00000200 00000000 00000000  ................
 0c6c 00000000 00000000 02000000 00000000  ................
 0c7c 00000000 00000000 00000000 00000100  ................
 0c8c 00000000 01000100 00000000 01000000  ................
 0c9c 00000000 00000000 00000100 00000000  ................
 0cac 00000000 00000000 00000000 00000000  ................
 0cbc 00000000                             ....            
Contents of section .gnu.version_r:
 0cc0 01000100 dd030000 10000000 00000000  ................
 0cd0 751a6909 00000200 20040000 00000000  u.i..... .......
Contents of section .rela.dyn:
 0ce0 381d2000 00000000 08000000 00000000  8. .............
 0cf0 70130000 00000000 401d2000 00000000  p.......@. .....
 0d00 08000000 00000000 30130000 00000000  ........0.......
 0d10 08202000 00000000 08000000 00000000  .  .............
 0d20 08202000 00000000 d81f2000 00000000  .  ....... .....
 0d30 06000000 02000000 00000000 00000000  ................
 0d40 e01f2000 00000000 06000000 03000000  .. .............
 0d50 00000000 00000000 e81f2000 00000000  .......... .....
 0d60 06000000 06000000 00000000 00000000  ................
 0d70 f01f2000 00000000 06000000 07000000  .. .............
 0d80 00000000 00000000 f81f2000 00000000  .......... .....
 0d90 06000000 0c000000 00000000 00000000  ................
 0da0 20202000 00000000 05000000 16000000     .............
 0db0 00000000 00000000 28202000 00000000  ........(  .....
 0dc0 05000000 18000000 00000000 00000000  ................
 0dd0 40202000 00000000 05000000 2f000000  @  ........./...
 0de0 00000000 00000000 50202000 00000000  ........P  .....
 0df0 05000000 30000000 00000000 00000000  ....0...........
 0e00 58202000 00000000 05000000 22000000  X  ........."...
 0e10 00000000 00000000 60202000 00000000  ........`  .....
 0e20 05000000 23000000 00000000 00000000  ....#...........
 0e30 68202000 00000000 05000000 2a000000  h  .........*...
 0e40 00000000 00000000 6c202000 00000000  ........l  .....
 0e50 05000000 2e000000 00000000 00000000  ................
 0e60 70202000 00000000 05000000 1c000000  p  .............
 0e70 00000000 00000000 78202000 00000000  ........x  .....
 0e80 05000000 24000000 00000000 00000000  ....$...........
 0e90 7c202000 00000000 05000000 1d000000  |  .............
 0ea0 00000000 00000000 80202000 00000000  .........  .....
 0eb0 05000000 19000000 00000000 00000000  ................
 0ec0 84202000 00000000 05000000 28000000  .  .........(...
 0ed0 00000000 00000000 88202000 00000000  .........  .....
 0ee0 05000000 2c000000 00000000 00000000  ....,...........
 0ef0 90202000 00000000 05000000 1f000000  .  .............
 0f00 00000000 00000000 a0202000 00000000  .........  .....
 0f10 05000000 26000000 00000000 00000000  ....&...........
 0f20 b0202000 00000000 05000000 20000000  .  ......... ...
 0f30 00000000 00000000 b8202000 00000000  .........  .....
 0f40 05000000 2d000000 00000000 00000000  ....-...........
 0f50 c0202000 00000000 05000000 27000000  .  .........'...
 0f60 00000000 00000000 e0202000 00000000  .........  .....
 0f70 05000000 2b000000 00000000 00000000  ....+...........
 0f80 00212000 00000000 05000000 29000000  .! .........)...
 0f90 00000000 00000000 10212000 00000000  .........! .....
 0fa0 05000000 31000000 00000000 00000000  ....1...........
 0fb0 18212000 00000000 05000000 15000000  .! .............
 0fc0 00000000 00000000 20212000 00000000  ........ ! .....
 0fd0 05000000 21000000 00000000 00000000  ....!...........
Contents of section .rela.plt:
 0fe0 601f2000 00000000 07000000 01000000  `. .............
 0ff0 00000000 00000000 681f2000 00000000  ........h. .....
 1000 07000000 04000000 00000000 00000000  ................
 1010 701f2000 00000000 07000000 05000000  p. .............
 1020 00000000 00000000 781f2000 00000000  ........x. .....
 1030 07000000 08000000 00000000 00000000  ................
 1040 801f2000 00000000 07000000 09000000  .. .............
 1050 00000000 00000000 881f2000 00000000  .......... .....
 1060 07000000 0a000000 00000000 00000000  ................
 1070 901f2000 00000000 07000000 0b000000  .. .............
 1080 00000000 00000000 981f2000 00000000  .......... .....
 1090 07000000 0d000000 00000000 00000000  ................
 10a0 a01f2000 00000000 07000000 0e000000  .. .............
 10b0 00000000 00000000 a81f2000 00000000  .......... .....
 10c0 07000000 0f000000 00000000 00000000  ................
 10d0 b01f2000 00000000 07000000 10000000  .. .............
 10e0 00000000 00000000 b81f2000 00000000  .......... .....
 10f0 07000000 11000000 00000000 00000000  ................
 1100 c01f2000 00000000 07000000 12000000  .. .............
 1110 00000000 00000000 c81f2000 00000000  .......... .....
 1120 07000000 13000000 00000000 00000000  ................
 1130 d01f2000 00000000 07000000 14000000  .. .............
 1140 00000000 00000000                    ........        
Contents of section .init:
 1148 4883ec08 488b0585 0e200048 85c07402  H...H.... .H..t.
 1158 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 1160 ff35ea0d 2000ff25 ec0d2000 0f1f4000  .5.. ..%.. ...@.
 1170 ff25ea0d 20006800 000000e9 e0ffffff  .%.. .h.........
 1180 ff25e20d 20006801 000000e9 d0ffffff  .%.. .h.........
 1190 ff25da0d 20006802 000000e9 c0ffffff  .%.. .h.........
 11a0 ff25d20d 20006803 000000e9 b0ffffff  .%.. .h.........
 11b0 ff25ca0d 20006804 000000e9 a0ffffff  .%.. .h.........
 11c0 ff25c20d 20006805 000000e9 90ffffff  .%.. .h.........
 11d0 ff25ba0d 20006806 000000e9 80ffffff  .%.. .h.........
 11e0 ff25b20d 20006807 000000e9 70ffffff  .%.. .h.....p...
 11f0 ff25aa0d 20006808 000000e9 60ffffff  .%.. .h.....`...
 1200 ff25a20d 20006809 000000e9 50ffffff  .%.. .h.....P...
 1210 ff259a0d 2000680a 000000e9 40ffffff  .%.. .h.....@...
 1220 ff25920d 2000680b 000000e9 30ffffff  .%.. .h.....0...
 1230 ff258a0d 2000680c 000000e9 20ffffff  .%.. .h..... ...
 1240 ff25820d 2000680d 000000e9 10ffffff  .%.. .h.........
 1250 ff257a0d 2000680e 000000e9 00ffffff  .%z. .h.........
Contents of section .plt.got:
 1260 ff25920d 20006690                    .%.. .f.        
Contents of section .text:
 1270 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 1280 8d050a04 0000488d 0d930300 00488d3d  ......H......H.=
 1290 34020000 ff15460d 2000f40f 1f440000  4.....F. ....D..
 12a0 488d3d71 0d200055 488d0569 0d200048  H.=q. .UH..i. .H
 12b0 39f84889 e5741948 8b052a0d 20004885  9.H..t.H..*. .H.
 12c0 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 12d0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 12e0 488d3d31 0d200048 8d352a0d 20005548  H.=1. .H.5*. .UH
 12f0 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 1300 4801c648 d1fe7418 488b05e1 0c200048  H..H..t.H.... .H
 1310 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 1320 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 1330 803ded0d 20000075 2f48833d b70c2000  .=.. ..u/H.=.. .
 1340 00554889 e5740c48 8b3dba0c 2000e80d  .UH..t.H.=.. ...
 1350 ffffffe8 48ffffff c605c50d 2000015d  ....H....... ..]
 1360 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 1370 554889e5 5de966ff ffff5548 89e50fb6  UH..].f...UH....
 1380 058d0c20 0083f001 84c07514 c6057f0c  ... ......u.....
 1390 200000e8 58feffff e833feff ff90eb01   ...X....3......
 13a0 905dc390 554889e5 0fb60563 0c200084  .]..UH.....c. ..
 13b0 c00f850e 010000c6 05540c20 0001c705  .........T. ....
 13c0 e80c2000 ffffffff c7059e0c 2000ffff  .. ......... ...
 13d0 ffffc605 ab0c2000 62c6058c 0c200020  ...... .b.... . 
 13e0 c605a90c 200020c6 05320c20 0020488d  .... . ..2. . H.
 13f0 05c30300 00488905 bc0c2000 c7059a0c  .....H.... .....
 1400 20000000 0000c705 580c2000 ffffffff   .......X. .....
 1410 488d05a2 03000048 89053a0c 2000c705  H......H..:. ...
 1420 e80c2000 00000000 c7054e0c 20000000  .. .......N. ...
 1430 0000c705 a40c2000 00000000 c705da0c  ...... .........
 1440 2000ffff ffffc705 2c0c2000 00000000   .......,. .....
 1450 bf010000 00e8f6fd ffff48c7 05fb0b20  ..........H.... 
 1460 00000000 00e896fd ffffe841 fdffff0f  ...........A....
 1470 b705a20c 200083c0 01668905 980c2000  .... ....f.... .
 1480 e81bfdff ff0fb705 340c2000 83c00166  ........4. ....f
 1490 89052a0c 2000e8f5 fcffff0f b7059e0b  ..*. ...........
 14a0 200083c0 01668905 940b2000 e8cffcff   ....f.... .....
 14b0 ff0fb705 700b2000 83c00166 8905660b  ....p. ....f..f.
 14c0 200090eb 01905dc3 554889e5 4883ec30   .....].UH..H..0
 14d0 897dec48 8975e048 8955d848 8d05ee01  .}.H.u.H.U.H....
 14e0 00004889 45f08b45 ec890511 0c200048  ..H.E..E..... .H
 14f0 8b45e048 89058e0b 2000488b 45d84889  .E.H.... .H.E.H.
 1500 054b0b20 00488d45 f84889c7 e8cffcff  .K. .H.E.H......
 1510 ffe88efe ffffe813 000000e8 5afeffff  ............Z...
 1520 e84bfcff ff8b054d 0b2000c9 c3905548  .K.....M. ....UH
 1530 89e54157 41564155 41545348 83ec1848  ..AWAVAUATSH...H
 1540 8d057a02 0000488d 15030300 004889c1  ..z...H......H..
 1550 4889d348 89d04889 cf4889c6 e8cffcff  H..H..H..H......
 1560 ffe85afc ffff8945 cc4c8d35 88020000  ..Z....E.L.5....
 1570 4c8d3de1 0200004c 89f14c89 fb4c89f0  L.=....L..L..L..
 1580 4c89fa48 89d04889 cf4889c6 e89ffcff  L..H..H..H......
 1590 ffe82afc ffff8945 c8b90000 00008b55  ..*....E.......U
 15a0 cc8b45c8 01d07105 b9010000 0089c289  ..E...q.........
 15b0 c885c074 11be1000 0000488d 3d6b0200  ...t......H.=k..
 15c0 00e87afc ffff89d0 8945c44c 8d256b02  ..z......E.L.%k.
 15d0 00004c8d 2d870200 004c89e1 4c89eb4c  ..L.-....L..L..L
 15e0 89e04c89 ea4889d0 4889cf48 89c6e83d  ..L..H..H..H...=
 15f0 fcffff8b 45c489c7 e813fcff ffbf0100  ....E...........
 1600 0000e819 fcffff90 4883c418 5b415c41  ........H...[A\A
 1610 5d415e41 5f5dc366 0f1f8400 00000000  ]A^A_].f........
 1620 41574156 4989d741 5541544c 8d250607  AWAVI..AUATL.%..
 1630 20005548 8d2d0607 20005341 89fd4989   .UH.-.. .SA..I.
 1640 f64c29e5 4883ec08 48c1fd03 e8f7faff  .L).H...H.......
 1650 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 1660 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 1670 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 1680 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 1690 f3c3                                 ..              
Contents of section .fini:
 1694 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 16a0 01000200 00000000 00000000 00000000  ................
 16b0 474e4154 20566572 73696f6e 3a20372e  GNAT Version: 7.
 16c0 332e3000 00000000 00000000 00000000  3.0.............
 16d0 5f616461 5f616464 5f696e74 5f775f69  _ada_add_int_w_i
 16e0 6f000000 312a701c 0e93dfb6 d393c07e  o...1*p........~
 16f0 f1d22afd f50281b4 43e82762 04ec3546  ..*.....C.'b..5F
 1700 059035a6 308a481f da6f32c2 3fa1986e  ..5.0.H..o2.?..n
 1710 a19d7876 a9e647e9 2e55e541 b885774e  ..xv..G..U.A..wN
 1720 5134b1d8 17ad1db0 7be11f38 e509ad30  Q4......{..8...0
 1730 7e13a7fc 68f403f1 00a6f66b 1e7d8341  ~...h......k.}.A
 1740 ec878ac8 ff48a487 46859b1b 20f04ace  .....H..F... .J.
 1750 f281562e dc483d84 fc6305aa c015bf38  ..V..H=..c.....8
 1760 02882f6c c60cee44 178cdf39 c0321718  ../l...D...9.2..
 1770 2595d49e 741a6e46 f210d26f 7af619dd  %...t.nF...oz...
 1780 889d1f70 755e2420 d3b3009f 3e71d9e7  ...pu^$ ....>q..
 1790 17a5338c d6ce485d 40e82197 d7e25970  ..3...H]@.!...Yp
 17a0 9c6731a8 2574ff52 6852b55a b6fde6ec  .g1.%t.RhR.Z....
 17b0 046d8fd2 0a3aa436 00000000 00000000  .m...:.6........
 17c0 506c6561 73652065 6e746572 20666972  Please enter fir
 17d0 73742069 6e746567 6572206e 6f772066  st integer now f
 17e0 6f6c6c6f 77656420 6279203c 43523e20  ollowed by <CR> 
 17f0 2d3e2000 00000000 506c6561 73652065  -> .....Please e
 1800 6e746572 20736563 6f6e6420 696e7465  nter second inte
 1810 67657220 6e6f7720 666f6c6c 6f776564  ger now followed
 1820 20627920 3c43523e 202d3e20 6164645f   by <CR> -> add_
 1830 696e745f 775f696f 2e616462 00546865  int_w_io.adb.The
 1840 2073756d 20697320 3a200000 00000000   sum is : ......
 1850 01000000 33000000 01000000 34000000  ....3.......4...
 1860 01000000 0d000000                    ........        
Contents of section .eh_frame_hdr:
 1868 011b033b 54000000 09000000 f8f8ffff  ...;T...........
 1878 a0000000 f8f9ffff c8000000 08faffff  ................
 1888 70000000 12fbffff e0000000 3cfbffff  p...........<...
 1898 00010000 60fcffff 20010000 c6fcffff  ....`... .......
 18a8 40010000 b8fdffff 70010000 28feffff  @.......p...(...
 18b8 b8010000                             ....            
Contents of section .eh_frame:
 18c0 14000000 00000000 017a5200 01781001  .........zR..x..
 18d0 1b0c0708 90010710 14000000 1c000000  ................
 18e0 90f9ffff 2b000000 00000000 00000000  ....+...........
 18f0 14000000 00000000 017a5200 01781001  .........zR..x..
 1900 1b0c0708 90010000 24000000 1c000000  ........$.......
 1910 50f8ffff 00010000 000e1046 0e184a0f  P..........F..J.
 1920 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 1930 14000000 44000000 28f9ffff 08000000  ....D...(.......
 1940 00000000 00000000 1c000000 5c000000  ............\...
 1950 2afaffff 29000000 00410e10 8602430d  *...)....A....C.
 1960 06640c07 08000000 1c000000 7c000000  .d..........|...
 1970 34faffff 24010000 00410e10 8602430d  4...$....A....C.
 1980 06031f01 0c070800 1c000000 9c000000  ................
 1990 38fbffff 65000000 00410e10 8602430d  8...e....A....C.
 19a0 0602600c 07080000 2c000000 bc000000  ..`.....,.......
 19b0 7efbffff e9000000 00410e10 8602430d  ~........A....C.
 19c0 064d8f03 8e048d05 8c068307 02d70c07  .M..............
 19d0 08000000 00000000 44000000 ec000000  ........D.......
 19e0 40fcffff 65000000 00420e10 8f02420e  @...e....B....B.
 19f0 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 1a00 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 1a10 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 1a20 10000000 34010000 68fcffff 02000000  ....4...h.......
 1a30 00000000 00000000                    ........        
Contents of section .init_array:
 201d38 70130000 00000000                    p.......        
Contents of section .fini_array:
 201d40 30130000 00000000                    0.......        
Contents of section .dynamic:
 201d48 01000000 00000000 01000000 00000000  ................
 201d58 01000000 00000000 dd030000 00000000  ................
 201d68 0c000000 00000000 48110000 00000000  ........H.......
 201d78 0d000000 00000000 94160000 00000000  ................
 201d88 19000000 00000000 381d2000 00000000  ........8. .....
 201d98 1b000000 00000000 08000000 00000000  ................
 201da8 1a000000 00000000 401d2000 00000000  ........@. .....
 201db8 1c000000 00000000 08000000 00000000  ................
 201dc8 f5feff6f 00000000 98020000 00000000  ...o............
 201dd8 05000000 00000000 30080000 00000000  ........0.......
 201de8 06000000 00000000 80030000 00000000  ................
 201df8 0a000000 00000000 2c040000 00000000  ........,.......
 201e08 0b000000 00000000 18000000 00000000  ................
 201e18 15000000 00000000 00000000 00000000  ................
 201e28 03000000 00000000 481f2000 00000000  ........H. .....
 201e38 02000000 00000000 68010000 00000000  ........h.......
 201e48 14000000 00000000 07000000 00000000  ................
 201e58 17000000 00000000 e00f0000 00000000  ................
 201e68 07000000 00000000 e00c0000 00000000  ................
 201e78 08000000 00000000 00030000 00000000  ................
 201e88 09000000 00000000 18000000 00000000  ................
 201e98 1e000000 00000000 08000000 00000000  ................
 201ea8 fbffff6f 00000000 01000008 00000000  ...o............
 201eb8 feffff6f 00000000 c00c0000 00000000  ...o............
 201ec8 ffffff6f 00000000 01000000 00000000  ...o............
 201ed8 f0ffff6f 00000000 5c0c0000 00000000  ...o....\.......
 201ee8 f9ffff6f 00000000 03000000 00000000  ...o............
 201ef8 00000000 00000000 00000000 00000000  ................
 201f08 00000000 00000000 00000000 00000000  ................
 201f18 00000000 00000000 00000000 00000000  ................
 201f28 00000000 00000000 00000000 00000000  ................
 201f38 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 201f48 481d2000 00000000 00000000 00000000  H. .............
 201f58 00000000 00000000 76110000 00000000  ........v.......
 201f68 86110000 00000000 96110000 00000000  ................
 201f78 a6110000 00000000 b6110000 00000000  ................
 201f88 c6110000 00000000 d6110000 00000000  ................
 201f98 e6110000 00000000 f6110000 00000000  ................
 201fa8 06120000 00000000 16120000 00000000  ................
 201fb8 26120000 00000000 36120000 00000000  &.......6.......
 201fc8 46120000 00000000 56120000 00000000  F.......V.......
 201fd8 00000000 00000000 00000000 00000000  ................
 201fe8 00000000 00000000 00000000 00000000  ................
 201ff8 00000000 00000000                    ........        
Contents of section .data:
 202000 00000000 00000000 08202000 00000000  .........  .....
 202010 000000                               ...             
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0xed3>
 248:	78 38                	js     282 <_init-0xec6>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 09                	add    BYTE PTR [rcx],cl
 285:	89 04 7b             	mov    DWORD PTR [rbx+rdi*2],eax
 288:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 289:	69 fb 8f 0d e9 92    	imul   edi,ebx,0x92e90d8f
 28f:	eb 1e                	jmp    2af <_init-0xe99>
 291:	d7                   	xlat   BYTE PTR ds:[rbx]
 292:	eb 2a                	jmp    2be <_init-0xe8a>
 294:	68                   	.byte 0x68
 295:	c5                   	.byte 0xc5
 296:	ef                   	out    dx,eax
 297:	2a                   	.byte 0x2a

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	11 00                	adc    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	15 00 00 00 04       	adc    eax,0x4000000
 2a1:	00 00                	add    BYTE PTR [rax],al
 2a3:	00 08                	add    BYTE PTR [rax],cl
 2a5:	00 00                	add    BYTE PTR [rax],al
 2a7:	00 00                	add    BYTE PTR [rax],al
 2a9:	08 00                	or     BYTE PTR [rax],al
 2ab:	68 d0 00 22 08       	push   0x82200d0
 2b0:	2a 02                	sub    al,BYTE PTR [rdx]
 2b2:	03 00                	add    eax,DWORD PTR [rax]
 2b4:	92                   	xchg   edx,eax
 2b5:	08 00                	or     BYTE PTR [rax],al
 2b7:	00 f4                	add    ah,dh
 2b9:	2b 00                	sub    eax,DWORD PTR [rax]
 2bb:	40 08 03             	or     BYTE PTR [rbx],al
 2be:	a0 29 01 40 28 01 46 	movabs al,ds:0x6204460128400129
 2c5:	04 62 
 2c7:	82                   	(bad)  
 2c8:	15 00 00 00 16       	adc    eax,0x16000000
 2cd:	00 00                	add    BYTE PTR [rax],al
 2cf:	00 18                	add    BYTE PTR [rax],bl
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 1b                	add    BYTE PTR [rbx],bl
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 2da:	00 00                	add    BYTE PTR [rax],al
 2dc:	1f                   	(bad)  
 2dd:	00 00                	add    BYTE PTR [rax],al
 2df:	00 22                	add    BYTE PTR [rdx],ah
 2e1:	00 00                	add    BYTE PTR [rax],al
 2e3:	00 25 00 00 00 26    	add    BYTE PTR [rip+0x26000000],ah        # 260002e9 <_end+0x25dfe1c1>
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 28                	add    BYTE PTR [rax],ch
 2ed:	00 00                	add    BYTE PTR [rax],al
 2ef:	00 2a                	add    BYTE PTR [rdx],ch
 2f1:	00 00                	add    BYTE PTR [rax],al
 2f3:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 2f6:	00 00                	add    BYTE PTR [rax],al
 2f8:	00 00                	add    BYTE PTR [rax],al
 2fa:	00 00                	add    BYTE PTR [rax],al
 2fc:	2e 00 00             	add    BYTE PTR cs:[rax],al
 2ff:	00 00                	add    BYTE PTR [rax],al
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 2f                	add    BYTE PTR [rdi],ch
 305:	00 00                	add    BYTE PTR [rax],al
 307:	00 30                	add    BYTE PTR [rax],dh
 309:	00 00                	add    BYTE PTR [rax],al
 30b:	00 e3                	add    bl,ah
 30d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 30e:	e2 b5                	loop   2c5 <_init-0xe83>
 310:	64 81 30 1e eb d3 ef 	xor    DWORD PTR fs:[rax],0xefd3eb1e
 317:	0e                   	(bad)  
 318:	a8 47                	test   al,0x47
 31a:	3d 3a 6a d1 5c       	cmp    eax,0x5cd16a3a
 31f:	9b                   	fwait
 320:	b9 8d f1 0e d9       	mov    ecx,0xd90ef18d
 325:	71 58                	jno    37f <_init-0xdc9>
 327:	1c d4                	sbb    al,0xd4
 329:	39 37                	cmp    DWORD PTR [rdi],esi
 32b:	df 60 a7             	fbld   TBYTE PTR [rax-0x59]
 32e:	ba 84 bb e3 92       	mov    edx,0x92e3bb84
 333:	7c 82                	jl     2b7 <_init-0xe91>
 335:	45 16                	rex.RB (bad) 
 337:	16                   	(bad)  
 338:	1a a7 c1 a2 89 48    	sbb    ah,BYTE PTR [rdi+0x4889a2c1]
 33e:	54                   	push   rsp
 33f:	34 34                	xor    al,0x34
 341:	66 49 54             	data16 rex.WB push r12
 344:	3a 31                	cmp    dh,BYTE PTR [rcx]
 346:	85 7a 8b             	test   DWORD PTR [rdx-0x75],edi
 349:	1e                   	(bad)  
 34a:	83 61 43 45          	and    DWORD PTR [rcx+0x43],0x45
 34e:	d5                   	(bad)  
 34f:	ec                   	in     al,dx
 350:	b6 e3                	mov    dh,0xe3
 352:	d5                   	(bad)  
 353:	1f                   	(bad)  
 354:	cf                   	iret   
 355:	b5 a5                	mov    ch,0xa5
 357:	cc                   	int3   
 358:	b4 82                	mov    ah,0x82
 35a:	20 5b 0b             	and    BYTE PTR [rbx+0xb],bl
 35d:	24 cd                	and    al,0xcd
 35f:	94                   	xchg   esp,eax
 360:	e0 3f                	loopne 3a1 <_init-0xda7>
 362:	42 62                	rex.X (bad) 
 364:	f7 00 01 56 1e 24    	test   DWORD PTR [rax],0x241e5601
 36a:	cd 94                	int    0x94
 36c:	49 d0 6f c5          	rex.WB shr BYTE PTR [r15-0x3b],1
 370:	0b 1d 15 7a a9 fd    	or     ebx,DWORD PTR [rip+0xfffffffffda97a15]        # fffffffffda97d8b <_end+0xfffffffffd895c63>
 376:	d7                   	xlat   BYTE PTR ds:[rbx]
 377:	90                   	nop
 378:	86 46 cf             	xchg   BYTE PTR [rsi-0x31],al
 37b:	94                   	xchg   esp,eax
 37c:	85                   	.byte 0x85
 37d:	a8 6b                	test   al,0x6b
 37f:	dd                   	.byte 0xdd

Disassembly of section .dynsym:

0000000000000380 <.dynsym>:
	...
 398:	3c 01                	cmp    al,0x1
 39a:	00 00                	add    BYTE PTR [rax],al
 39c:	12 00                	adc    al,BYTE PTR [rax]
	...
 3ae:	00 00                	add    BYTE PTR [rax],al
 3b0:	10 00                	adc    BYTE PTR [rax],al
 3b2:	00 00                	add    BYTE PTR [rax],al
 3b4:	20 00                	and    BYTE PTR [rax],al
	...
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	f6 03 00             	test   BYTE PTR [rbx],0x0
 3cb:	00 12                	add    BYTE PTR [rdx],dl
	...
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 1a                	add    BYTE PTR [rdx],bl
 3e1:	02 00                	add    al,BYTE PTR [rax]
 3e3:	00 12                	add    BYTE PTR [rdx],dl
	...
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	00 74 03 00          	add    BYTE PTR [rbx+rax*1+0x0],dh
 3fb:	00 12                	add    BYTE PTR [rdx],dl
	...
 40d:	00 00                	add    BYTE PTR [rax],al
 40f:	00 1f                	add    BYTE PTR [rdi],bl
 411:	00 00                	add    BYTE PTR [rax],al
 413:	00 20                	add    BYTE PTR [rax],ah
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 3b                	add    BYTE PTR [rbx],bh
 429:	00 00                	add    BYTE PTR [rax],al
 42b:	00 20                	add    BYTE PTR [rax],ah
	...
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 ba 02 00 00 12    	add    BYTE PTR [rdx+0x12000002],bh
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 54 03 00          	add    BYTE PTR [rbx+rax*1+0x0],dl
 45b:	00 12                	add    BYTE PTR [rdx],dl
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 a9 01 00 00 12    	add    BYTE PTR [rcx+0x12000001],ch
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 86 00 00 00 12    	add    BYTE PTR [rsi+0x12000000],al
	...
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 e7                	add    bh,ah
 4a1:	03 00                	add    eax,DWORD PTR [rax]
 4a3:	00 22                	add    BYTE PTR [rdx],ah
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 a8 02 00 00 12    	add    BYTE PTR [rax+0x12000002],ch
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 cf                	add    bh,cl
 4d1:	01 00                	add    DWORD PTR [rax],eax
 4d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4e5:	00 00                	add    BYTE PTR [rax],al
 4e7:	00 8f 03 00 00 12    	add    BYTE PTR [rdi+0x12000003],cl
	...
 4fd:	00 00                	add    BYTE PTR [rax],al
 4ff:	00 e7                	add    bh,ah
 501:	01 00                	add    DWORD PTR [rax],eax
 503:	00 12                	add    BYTE PTR [rdx],dl
	...
 515:	00 00                	add    BYTE PTR [rax],al
 517:	00 5f 02             	add    BYTE PTR [rdi+0x2],bl
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	12 00                	adc    al,BYTE PTR [rax]
	...
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	f8                   	clc    
 531:	01 00                	add    DWORD PTR [rax],eax
 533:	00 12                	add    BYTE PTR [rdx],dl
	...
 549:	03 00                	add    eax,DWORD PTR [rax]
 54b:	00 12                	add    BYTE PTR [rdx],dl
	...
 55d:	00 00                	add    BYTE PTR [rax],al
 55f:	00 20                	add    BYTE PTR [rax],ah
 561:	03 00                	add    eax,DWORD PTR [rax]
 563:	00 12                	add    BYTE PTR [rdx],dl
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 3a                	add    BYTE PTR [rdx],bh
 579:	03 00                	add    eax,DWORD PTR [rax]
 57b:	00 11                	add    BYTE PTR [rcx],dl
 57d:	00 18                	add    BYTE PTR [rax],bl
 57f:	00 18                	add    BYTE PTR [rax],bl
 581:	21 20                	and    DWORD PTR [rax],esp
 583:	00 00                	add    BYTE PTR [rax],al
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 02                	add    BYTE PTR [rdx],al
 589:	00 00                	add    BYTE PTR [rax],al
 58b:	00 00                	add    BYTE PTR [rax],al
 58d:	00 00                	add    BYTE PTR [rax],al
 58f:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
 592:	00 00                	add    BYTE PTR [rax],al
 594:	11 00                	adc    DWORD PTR [rax],eax
 596:	18 00                	sbb    BYTE PTR [rax],al
 598:	20 20                	and    BYTE PTR [rax],ah
 59a:	20 00                	and    BYTE PTR [rax],al
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	01 00                	add    DWORD PTR [rax],eax
 5a2:	00 00                	add    BYTE PTR [rax],al
 5a4:	00 00                	add    BYTE PTR [rax],al
 5a6:	00 00                	add    BYTE PTR [rax],al
 5a8:	89 01                	mov    DWORD PTR [rcx],eax
 5aa:	00 00                	add    BYTE PTR [rax],al
 5ac:	12 00                	adc    al,BYTE PTR [rax]
 5ae:	0f 00 94 16 00 00 00 	lldt   WORD PTR [rsi+rdx*1+0x0]
 5b5:	00 
	...
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	4c 01 00             	add    QWORD PTR [rax],r8
 5c3:	00 11                	add    BYTE PTR [rcx],dl
 5c5:	00 18                	add    BYTE PTR [rax],bl
 5c7:	00 28                	add    BYTE PTR [rax],ch
 5c9:	20 20                	and    BYTE PTR [rax],ah
 5cb:	00 00                	add    BYTE PTR [rax],al
 5cd:	00 00                	add    BYTE PTR [rax],al
 5cf:	00 02                	add    BYTE PTR [rdx],al
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 00                	add    BYTE PTR [rax],al
 5d5:	00 00                	add    BYTE PTR [rax],al
 5d7:	00 8a 02 00 00 11    	add    BYTE PTR [rdx+0x11000002],cl
 5dd:	00 18                	add    BYTE PTR [rax],bl
 5df:	00 80 20 20 00 00    	add    BYTE PTR [rax+0x2020],al
 5e5:	00 00                	add    BYTE PTR [rax],al
 5e7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 5ea:	00 00                	add    BYTE PTR [rax],al
 5ec:	00 00                	add    BYTE PTR [rax],al
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	a9 00 00 00 12       	test   eax,0x12000000
 5f5:	00 0b                	add    BYTE PTR [rbx],cl
 5f7:	00 48 11             	add    BYTE PTR [rax+0x11],cl
	...
 606:	00 00                	add    BYTE PTR [rax],al
 608:	0f 04                	(bad)  
 60a:	00 00                	add    BYTE PTR [rax],al
 60c:	10 00                	adc    BYTE PTR [rax],al
 60e:	18 00                	sbb    BYTE PTR [rax],al
 610:	13 20                	adc    esp,DWORD PTR [rax]
 612:	20 00                	and    BYTE PTR [rax],al
	...
 620:	d7                   	xlat   BYTE PTR ds:[rbx]
 621:	00 00                	add    BYTE PTR [rax],al
 623:	00 11                	add    BYTE PTR [rcx],dl
 625:	00 18                	add    BYTE PTR [rax],bl
 627:	00 70 20             	add    BYTE PTR [rax+0x20],dh
 62a:	20 00                	and    BYTE PTR [rax],al
 62c:	00 00                	add    BYTE PTR [rax],al
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	04 00                	add    al,0x0
 632:	00 00                	add    BYTE PTR [rax],al
 634:	00 00                	add    BYTE PTR [rax],al
 636:	00 00                	add    BYTE PTR [rax],al
 638:	8f 01                	pop    QWORD PTR [rcx]
 63a:	00 00                	add    BYTE PTR [rax],al
 63c:	11 00                	adc    DWORD PTR [rax],eax
 63e:	18 00                	sbb    BYTE PTR [rax],al
 640:	7c 20                	jl     662 <_init-0xae6>
 642:	20 00                	and    BYTE PTR [rax],al
 644:	00 00                	add    BYTE PTR [rax],al
 646:	00 00                	add    BYTE PTR [rax],al
 648:	04 00                	add    al,0x0
 64a:	00 00                	add    BYTE PTR [rax],al
 64c:	00 00                	add    BYTE PTR [rax],al
 64e:	00 00                	add    BYTE PTR [rax],al
 650:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
 653:	00 10                	add    BYTE PTR [rax],dl
 655:	00 18                	add    BYTE PTR [rax],bl
 657:	00 28                	add    BYTE PTR [rax],ch
 659:	21 20                	and    DWORD PTR [rax],esp
	...
 667:	00 3a                	add    BYTE PTR [rdx],bh
 669:	02 00                	add    al,BYTE PTR [rax]
 66b:	00 11                	add    BYTE PTR [rcx],dl
 66d:	00 18                	add    BYTE PTR [rax],bl
 66f:	00 90 20 20 00 00    	add    BYTE PTR [rax+0x2020],dl
 675:	00 00                	add    BYTE PTR [rax],al
 677:	00 01                	add    BYTE PTR [rcx],al
 679:	00 00                	add    BYTE PTR [rax],al
 67b:	00 00                	add    BYTE PTR [rax],al
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 ca                	add    dl,cl
 681:	03 00                	add    eax,DWORD PTR [rax]
 683:	00 11                	add    BYTE PTR [rcx],dl
 685:	00 18                	add    BYTE PTR [rax],bl
 687:	00 b0 20 20 00 00    	add    BYTE PTR [rax+0x2020],dh
 68d:	00 00                	add    BYTE PTR [rax],al
 68f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 692:	00 00                	add    BYTE PTR [rax],al
 694:	00 00                	add    BYTE PTR [rax],al
 696:	00 00                	add    BYTE PTR [rax],al
 698:	b7 01                	mov    bh,0x1
 69a:	00 00                	add    BYTE PTR [rax],al
 69c:	11 00                	adc    DWORD PTR [rax],eax
 69e:	18 00                	sbb    BYTE PTR [rax],al
 6a0:	20 21                	and    BYTE PTR [rcx],ah
 6a2:	20 00                	and    BYTE PTR [rax],al
 6a4:	00 00                	add    BYTE PTR [rax],al
 6a6:	00 00                	add    BYTE PTR [rax],al
 6a8:	04 00                	add    al,0x0
 6aa:	00 00                	add    BYTE PTR [rax],al
 6ac:	00 00                	add    BYTE PTR [rax],al
 6ae:	00 00                	add    BYTE PTR [rax],al
 6b0:	d5                   	(bad)  
 6b1:	02 00                	add    al,BYTE PTR [rax]
 6b3:	00 11                	add    BYTE PTR [rcx],dl
 6b5:	00 18                	add    BYTE PTR [rax],bl
 6b7:	00 58 20             	add    BYTE PTR [rax+0x20],bl
 6ba:	20 00                	and    BYTE PTR [rax],al
 6bc:	00 00                	add    BYTE PTR [rax],al
 6be:	00 00                	add    BYTE PTR [rax],al
 6c0:	08 00                	or     BYTE PTR [rax],al
 6c2:	00 00                	add    BYTE PTR [rax],al
 6c4:	00 00                	add    BYTE PTR [rax],al
 6c6:	00 00                	add    BYTE PTR [rax],al
 6c8:	aa                   	stos   BYTE PTR es:[rdi],al
 6c9:	03 00                	add    eax,DWORD PTR [rax]
 6cb:	00 11                	add    BYTE PTR [rcx],dl
 6cd:	00 18                	add    BYTE PTR [rax],bl
 6cf:	00 60 20             	add    BYTE PTR [rax+0x20],ah
 6d2:	20 00                	and    BYTE PTR [rax],al
 6d4:	00 00                	add    BYTE PTR [rax],al
 6d6:	00 00                	add    BYTE PTR [rax],al
 6d8:	08 00                	or     BYTE PTR [rax],al
 6da:	00 00                	add    BYTE PTR [rax],al
 6dc:	00 00                	add    BYTE PTR [rax],al
 6de:	00 00                	add    BYTE PTR [rax],al
 6e0:	09 02                	or     DWORD PTR [rdx],eax
 6e2:	00 00                	add    BYTE PTR [rax],al
 6e4:	11 00                	adc    DWORD PTR [rax],eax
 6e6:	18 00                	sbb    BYTE PTR [rax],al
 6e8:	78 20                	js     70a <_init-0xa3e>
 6ea:	20 00                	and    BYTE PTR [rax],al
 6ec:	00 00                	add    BYTE PTR [rax],al
 6ee:	00 00                	add    BYTE PTR [rax],al
 6f0:	04 00                	add    al,0x0
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	00 00                	add    BYTE PTR [rax],al
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	08 04 00             	or     BYTE PTR [rax+rax*1],al
 6fb:	00 10                	add    BYTE PTR [rax],dl
 6fd:	00 17                	add    BYTE PTR [rdi],dl
 6ff:	00 13                	add    BYTE PTR [rbx],dl
 701:	20 20                	and    BYTE PTR [rax],ah
	...
 70f:	00 b9 00 00 00 11    	add    BYTE PTR [rcx+0x11000000],bh
 715:	00 18                	add    BYTE PTR [rax],bl
 717:	00 a0 20 20 00 00    	add    BYTE PTR [rax+0x2020],ah
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 722:	00 00                	add    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	eb 02                	jmp    72c <_init-0xa1c>
 72a:	00 00                	add    BYTE PTR [rax],al
 72c:	11 00                	adc    DWORD PTR [rax],eax
 72e:	18 00                	sbb    BYTE PTR [rax],al
 730:	c0 20 20             	shl    BYTE PTR [rax],0x20
 733:	00 00                	add    BYTE PTR [rax],al
 735:	00 00                	add    BYTE PTR [rax],al
 737:	00 02                	add    BYTE PTR [rdx],al
 739:	00 00                	add    BYTE PTR [rax],al
 73b:	00 00                	add    BYTE PTR [rax],al
 73d:	00 00                	add    BYTE PTR [rax],al
 73f:	00 4e 02             	add    BYTE PTR [rsi+0x2],cl
 742:	00 00                	add    BYTE PTR [rax],al
 744:	11 00                	adc    DWORD PTR [rax],eax
 746:	18 00                	sbb    BYTE PTR [rax],al
 748:	84 20                	test   BYTE PTR [rax],ah
 74a:	20 00                	and    BYTE PTR [rax],al
 74c:	00 00                	add    BYTE PTR [rax],al
 74e:	00 00                	add    BYTE PTR [rax],al
 750:	01 00                	add    DWORD PTR [rax],eax
 752:	00 00                	add    BYTE PTR [rax],al
 754:	00 00                	add    BYTE PTR [rax],al
 756:	00 00                	add    BYTE PTR [rax],al
 758:	72 00                	jb     75a <_init-0x9ee>
 75a:	00 00                	add    BYTE PTR [rax],al
 75c:	11 00                	adc    DWORD PTR [rax],eax
 75e:	18 00                	sbb    BYTE PTR [rax],al
 760:	00 21                	add    BYTE PTR [rcx],ah
 762:	20 00                	and    BYTE PTR [rax],al
 764:	00 00                	add    BYTE PTR [rax],al
 766:	00 00                	add    BYTE PTR [rax],al
 768:	04 00                	add    al,0x0
 76a:	00 00                	add    BYTE PTR [rax],al
 76c:	00 00                	add    BYTE PTR [rax],al
 76e:	00 00                	add    BYTE PTR [rax],al
 770:	66 01 00             	add    WORD PTR [rax],ax
 773:	00 11                	add    BYTE PTR [rcx],dl
 775:	00 18                	add    BYTE PTR [rax],bl
 777:	00 68 20             	add    BYTE PTR [rax+0x20],ch
 77a:	20 00                	and    BYTE PTR [rax],al
 77c:	00 00                	add    BYTE PTR [rax],al
 77e:	00 00                	add    BYTE PTR [rax],al
 780:	04 00                	add    al,0x0
 782:	00 00                	add    BYTE PTR [rax],al
 784:	00 00                	add    BYTE PTR [rax],al
 786:	00 00                	add    BYTE PTR [rax],al
 788:	74 01                	je     78b <_init-0x9bd>
 78a:	00 00                	add    BYTE PTR [rax],al
 78c:	11 00                	adc    DWORD PTR [rax],eax
 78e:	18 00                	sbb    BYTE PTR [rax],al
 790:	e0 20                	loopne 7b2 <_init-0x996>
 792:	20 00                	and    BYTE PTR [rax],al
 794:	00 00                	add    BYTE PTR [rax],al
 796:	00 00                	add    BYTE PTR [rax],al
 798:	04 00                	add    al,0x0
 79a:	00 00                	add    BYTE PTR [rax],al
 79c:	00 00                	add    BYTE PTR [rax],al
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	7c 00                	jl     7a2 <_init-0x9a6>
 7a2:	00 00                	add    BYTE PTR [rax],al
 7a4:	11 00                	adc    DWORD PTR [rax],eax
 7a6:	18 00                	sbb    BYTE PTR [rax],al
 7a8:	88 20                	mov    BYTE PTR [rax],ah
 7aa:	20 00                	and    BYTE PTR [rax],al
 7ac:	00 00                	add    BYTE PTR [rax],al
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	08 00                	or     BYTE PTR [rax],al
 7b2:	00 00                	add    BYTE PTR [rax],al
 7b4:	00 00                	add    BYTE PTR [rax],al
 7b6:	00 00                	add    BYTE PTR [rax],al
 7b8:	ff 00                	inc    DWORD PTR [rax]
 7ba:	00 00                	add    BYTE PTR [rax],al
 7bc:	11 00                	adc    DWORD PTR [rax],eax
 7be:	18 00                	sbb    BYTE PTR [rax],al
 7c0:	b8 20 20 00 00       	mov    eax,0x2020
 7c5:	00 00                	add    BYTE PTR [rax],al
 7c7:	00 08                	add    BYTE PTR [rax],cl
 7c9:	00 00                	add    BYTE PTR [rax],al
 7cb:	00 00                	add    BYTE PTR [rax],al
 7cd:	00 00                	add    BYTE PTR [rax],al
 7cf:	00 eb                	add    bl,ch
 7d1:	00 00                	add    BYTE PTR [rax],al
 7d3:	00 11                	add    BYTE PTR [rcx],dl
 7d5:	00 18                	add    BYTE PTR [rax],bl
 7d7:	00 6c 20 20          	add    BYTE PTR [rax+riz*1+0x20],ch
 7db:	00 00                	add    BYTE PTR [rax],al
 7dd:	00 00                	add    BYTE PTR [rax],al
 7df:	00 01                	add    BYTE PTR [rcx],al
 7e1:	00 00                	add    BYTE PTR [rax],al
 7e3:	00 00                	add    BYTE PTR [rax],al
 7e5:	00 00                	add    BYTE PTR [rax],al
 7e7:	00 75 02             	add    BYTE PTR [rbp+0x2],dh
 7ea:	00 00                	add    BYTE PTR [rax],al
 7ec:	11 00                	adc    DWORD PTR [rax],eax
 7ee:	18 00                	sbb    BYTE PTR [rax],al
 7f0:	40 20 20             	and    BYTE PTR [rax],spl
 7f3:	00 00                	add    BYTE PTR [rax],al
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 02                	add    BYTE PTR [rdx],al
 7f9:	00 00                	add    BYTE PTR [rax],al
 7fb:	00 00                	add    BYTE PTR [rax],al
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 af 00 00 00 11    	add    BYTE PTR [rdi+0x11000000],ch
 805:	00 18                	add    BYTE PTR [rax],bl
 807:	00 50 20             	add    BYTE PTR [rax+0x20],dl
 80a:	20 00                	and    BYTE PTR [rax],al
 80c:	00 00                	add    BYTE PTR [rax],al
 80e:	00 00                	add    BYTE PTR [rax],al
 810:	08 00                	or     BYTE PTR [rax],al
 812:	00 00                	add    BYTE PTR [rax],al
 814:	00 00                	add    BYTE PTR [rax],al
 816:	00 00                	add    BYTE PTR [rax],al
 818:	22 01                	and    al,BYTE PTR [rcx]
 81a:	00 00                	add    BYTE PTR [rax],al
 81c:	11 00                	adc    DWORD PTR [rax],eax
 81e:	18 00                	sbb    BYTE PTR [rax],al
 820:	10 21                	adc    BYTE PTR [rcx],ah
 822:	20 00                	and    BYTE PTR [rax],al
 824:	00 00                	add    BYTE PTR [rax],al
 826:	00 00                	add    BYTE PTR [rax],al
 828:	04 00                	add    al,0x0
 82a:	00 00                	add    BYTE PTR [rax],al
 82c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000830 <.dynstr>:
 830:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 834:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 836:	61                   	(bad)  
 837:	74 2d                	je     866 <_init-0x8e2>
 839:	37                   	(bad)  
 83a:	2e 73 6f             	cs jae 8ac <_init-0x89c>
 83d:	2e 31 00             	xor    DWORD PTR cs:[rax],eax
 840:	5f                   	pop    rdi
 841:	5f                   	pop    rdi
 842:	67 6d                	ins    DWORD PTR es:[edi],dx
 844:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 845:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 846:	5f                   	pop    rdi
 847:	73 74                	jae    8bd <_init-0x88b>
 849:	61                   	(bad)  
 84a:	72 74                	jb     8c0 <_init-0x888>
 84c:	5f                   	pop    rdi
 84d:	5f                   	pop    rdi
 84e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 851:	54                   	push   rsp
 852:	4d 5f                	rex.WRB pop r15
 854:	64 65 72 65          	fs gs jb 8bd <_init-0x88b>
 858:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 85f:	4d 
 860:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 862:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 863:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 864:	65 54                	gs push rsp
 866:	61                   	(bad)  
 867:	62                   	(bad)  
 868:	6c                   	ins    BYTE PTR es:[rdi],dx
 869:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
 86d:	54                   	push   rsp
 86e:	4d 5f                	rex.WRB pop r15
 870:	72 65                	jb     8d7 <_init-0x871>
 872:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 879:	4d 
 87a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 87c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 87d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 87e:	65 54                	gs push rsp
 880:	61                   	(bad)  
 881:	62                   	(bad)  
 882:	6c                   	ins    BYTE PTR es:[rdi],dx
 883:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 887:	67 6c                	ins    BYTE PTR es:[edi],dx
 889:	5f                   	pop    rdi
 88a:	74 61                	je     8ed <_init-0x85b>
 88c:	73 6b                	jae    8f9 <_init-0x84f>
 88e:	5f                   	pop    rdi
 88f:	64 69 73 70 61 74 63 	imul   esi,DWORD PTR fs:[rbx+0x70],0x68637461
 896:	68 
 897:	69 6e 67 5f 70 6f 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c6f705f
 89e:	69 63 79 00 67 6e 61 	imul   esp,DWORD PTR [rbx+0x79],0x616e6700
 8a5:	74 5f                	je     906 <_init-0x842>
 8a7:	61                   	(bad)  
 8a8:	72 67                	jb     911 <_init-0x837>
 8aa:	63 00                	movsxd eax,DWORD PTR [rax]
 8ac:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 8ae:	61                   	(bad)  
 8af:	74 5f                	je     910 <_init-0x838>
 8b1:	61                   	(bad)  
 8b2:	72 67                	jb     91b <_init-0x82d>
 8b4:	76 00                	jbe    8b6 <_init-0x892>
 8b6:	73 79                	jae    931 <_init-0x817>
 8b8:	73 74                	jae    92e <_init-0x81a>
 8ba:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 8bc:	5f                   	pop    rdi
 8bd:	5f                   	pop    rdi
 8be:	73 74                	jae    934 <_init-0x814>
 8c0:	61                   	(bad)  
 8c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 8c2:	64 61                	fs (bad) 
 8c4:	72 64                	jb     92a <_init-0x81e>
 8c6:	5f                   	pop    rdi
 8c7:	6c                   	ins    BYTE PTR es:[rdi],dx
 8c8:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
 8cf:	5f                   	pop    rdi
 8d0:	61                   	(bad)  
 8d1:	64 61                	fs (bad) 
 8d3:	66 69 6e 61 6c 00    	imul   bp,WORD PTR [rsi+0x61],0x6c
 8d9:	5f                   	pop    rdi
 8da:	69 6e 69 74 00 67 6e 	imul   ebp,DWORD PTR [rsi+0x69],0x6e670074
 8e1:	61                   	(bad)  
 8e2:	74 5f                	je     943 <_init-0x805>
 8e4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 8e6:	76 70                	jbe    958 <_init-0x7f0>
 8e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 8eb:	67 6c                	ins    BYTE PTR es:[edi],dx
 8ed:	5f                   	pop    rdi
 8ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 8ef:	75 6d                	jne    95e <_init-0x7ea>
 8f1:	5f                   	pop    rdi
 8f2:	73 70                	jae    964 <_init-0x7e4>
 8f4:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
 8f8:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
 8ff:	61                   	(bad)  
 900:	74 63                	je     965 <_init-0x7e3>
 902:	68 69 6e 67 00       	push   0x676e69
 907:	5f                   	pop    rdi
 908:	5f                   	pop    rdi
 909:	67 6c                	ins    BYTE PTR es:[edi],dx
 90b:	5f                   	pop    rdi
 90c:	74 69                	je     977 <_init-0x7d1>
 90e:	6d                   	ins    DWORD PTR es:[rdi],dx
 90f:	65 5f                	gs pop rdi
 911:	73 6c                	jae    97f <_init-0x7c9>
 913:	69 63 65 5f 76 61 6c 	imul   esp,DWORD PTR [rbx+0x65],0x6c61765f
 91a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 91d:	67 6c                	ins    BYTE PTR es:[edi],dx
 91f:	5f                   	pop    rdi
 920:	6c                   	ins    BYTE PTR es:[rdi],dx
 921:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 922:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
 925:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 926:	67 5f                	addr32 pop rdi
 928:	70 6f                	jo     999 <_init-0x7af>
 92a:	6c                   	ins    BYTE PTR es:[rdi],dx
 92b:	69 63 79 00 5f 5f 67 	imul   esp,DWORD PTR [rbx+0x79],0x675f5f00
 932:	6c                   	ins    BYTE PTR es:[rdi],dx
 933:	5f                   	pop    rdi
 934:	70 72                	jo     9a8 <_init-0x7a0>
 936:	69 6f 72 69 74 79 5f 	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
 93d:	73 70                	jae    9af <_init-0x799>
 93f:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
 943:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
 94a:	61                   	(bad)  
 94b:	74 63                	je     9b0 <_init-0x798>
 94d:	68 69 6e 67 00       	push   0x676e69
 952:	5f                   	pop    rdi
 953:	5f                   	pop    rdi
 954:	67 6c                	ins    BYTE PTR es:[edi],dx
 956:	5f                   	pop    rdi
 957:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 958:	75 6d                	jne    9c7 <_init-0x781>
 95a:	5f                   	pop    rdi
 95b:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
 962:	70 74                	jo     9d8 <_init-0x770>
 964:	5f                   	pop    rdi
 965:	73 74                	jae    9db <_init-0x76d>
 967:	61                   	(bad)  
 968:	74 65                	je     9cf <_init-0x779>
 96a:	73 00                	jae    96c <_init-0x7dc>
 96c:	5f                   	pop    rdi
 96d:	5f                   	pop    rdi
 96e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 970:	61                   	(bad)  
 971:	74 5f                	je     9d2 <_init-0x776>
 973:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 979:	7a 65                	jp     9e0 <_init-0x768>
 97b:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 97e:	73 74                	jae    9f4 <_init-0x754>
 980:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 982:	5f                   	pop    rdi
 983:	5f                   	pop    rdi
 984:	73 65                	jae    9eb <_init-0x75d>
 986:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 989:	64 61                	fs (bad) 
 98b:	72 79                	jb     a06 <_init-0x742>
 98d:	5f                   	pop    rdi
 98e:	73 74                	jae    a04 <_init-0x744>
 990:	61                   	(bad)  
 991:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 994:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
 998:	67 6c                	ins    BYTE PTR es:[edi],dx
 99a:	5f                   	pop    rdi
 99b:	6d                   	ins    DWORD PTR es:[rdi],dx
 99c:	61                   	(bad)  
 99d:	69 6e 5f 63 70 75 00 	imul   ebp,DWORD PTR [rsi+0x5f],0x757063
 9a4:	5f                   	pop    rdi
 9a5:	5f                   	pop    rdi
 9a6:	67 6c                	ins    BYTE PTR es:[edi],dx
 9a8:	5f                   	pop    rdi
 9a9:	64 65 74 65          	fs gs je a12 <_init-0x736>
 9ad:	63 74 5f 62          	movsxd esi,DWORD PTR [rdi+rbx*2+0x62]
 9b1:	6c                   	ins    BYTE PTR es:[rdi],dx
 9b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 9b3:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
 9b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 9b7:	67 00 5f 66          	add    BYTE PTR [edi+0x66],bl
 9bb:	69 6e 69 00 5f 5f 67 	imul   ebp,DWORD PTR [rsi+0x69],0x675f5f00
 9c2:	6c                   	ins    BYTE PTR es:[rdi],dx
 9c3:	5f                   	pop    rdi
 9c4:	6c                   	ins    BYTE PTR es:[rdi],dx
 9c5:	65 61                	gs (bad) 
 9c7:	70 5f                	jo     a28 <_init-0x720>
 9c9:	73 65                	jae    a30 <_init-0x718>
 9cb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 9ce:	64 73 5f             	fs jae a30 <_init-0x718>
 9d1:	73 75                	jae    a48 <_init-0x700>
 9d3:	70 70                	jo     a45 <_init-0x703>
 9d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 9d6:	72 74                	jb     a4c <_init-0x6fc>
 9d8:	00 67 6e             	add    BYTE PTR [rdi+0x6e],ah
 9db:	61                   	(bad)  
 9dc:	74 5f                	je     a3d <_init-0x70b>
 9de:	5f                   	pop    rdi
 9df:	69 6f 5f 5f 67 65 74 	imul   ebp,DWORD PTR [rdi+0x5f],0x7465675f
 9e6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 9e9:	67 6c                	ins    BYTE PTR es:[edi],dx
 9eb:	5f                   	pop    rdi
 9ec:	64 65 66 61          	fs gs data16 (bad) 
 9f0:	75 6c                	jne    a5e <_init-0x6ea>
 9f2:	74 5f                	je     a53 <_init-0x6f5>
 9f4:	73 74                	jae    a6a <_init-0x6de>
 9f6:	61                   	(bad)  
 9f7:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 9fa:	73 69                	jae    a65 <_init-0x6e3>
 9fc:	7a 65                	jp     a63 <_init-0x6e5>
 9fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 a01:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 a03:	61                   	(bad)  
 a04:	74 5f                	je     a65 <_init-0x6e3>
 a06:	72 75                	jb     a7d <_init-0x6cb>
 a08:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a09:	74 69                	je     a74 <_init-0x6d4>
 a0b:	6d                   	ins    DWORD PTR es:[rdi],dx
 a0c:	65 5f                	gs pop rdi
 a0e:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 a14:	7a 65                	jp     a7b <_init-0x6cd>
 a16:	00 67 6e             	add    BYTE PTR [rdi+0x6e],ah
 a19:	61                   	(bad)  
 a1a:	74 5f                	je     a7b <_init-0x6cd>
 a1c:	5f                   	pop    rdi
 a1d:	69 6f 5f 5f 70 75 74 	imul   ebp,DWORD PTR [rdi+0x5f],0x7475705f
 a24:	5f                   	pop    rdi
 a25:	5f                   	pop    rdi
 a26:	32 00                	xor    al,BYTE PTR [rax]
 a28:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 a2a:	61                   	(bad)  
 a2b:	74 5f                	je     a8c <_init-0x6bc>
 a2d:	5f                   	pop    rdi
 a2e:	69 6f 5f 5f 70 75 74 	imul   ebp,DWORD PTR [rdi+0x5f],0x7475705f
 a35:	5f                   	pop    rdi
 a36:	5f                   	pop    rdi
 a37:	36 00 67 6e          	add    BYTE PTR ss:[rdi+0x6e],ah
 a3b:	61                   	(bad)  
 a3c:	74 5f                	je     a9d <_init-0x6ab>
 a3e:	65 78 69             	gs js  aaa <_init-0x69e>
 a41:	74 5f                	je     aa2 <_init-0x6a6>
 a43:	73 74                	jae    ab9 <_init-0x68f>
 a45:	61                   	(bad)  
 a46:	74 75                	je     abd <_init-0x68b>
 a48:	73 00                	jae    a4a <_init-0x6fe>
 a4a:	73 79                	jae    ac5 <_init-0x683>
 a4c:	73 74                	jae    ac2 <_init-0x686>
 a4e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 a50:	5f                   	pop    rdi
 a51:	5f                   	pop    rdi
 a52:	73 65                	jae    ab9 <_init-0x68f>
 a54:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 a57:	64 61                	fs (bad) 
 a59:	72 79                	jb     ad4 <_init-0x674>
 a5b:	5f                   	pop    rdi
 a5c:	73 74                	jae    ad2 <_init-0x676>
 a5e:	61                   	(bad)  
 a5f:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 a62:	5f                   	pop    rdi
 a63:	5f                   	pop    rdi
 a64:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 a66:	61                   	(bad)  
 a67:	62 62                	(bad)  
 a69:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 a6c:	67 6c                	ins    BYTE PTR es:[edi],dx
 a6e:	5f                   	pop    rdi
 a6f:	71 75                	jno    ae6 <_init-0x662>
 a71:	65 75 69             	gs jne add <_init-0x66b>
 a74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a75:	67 5f                	addr32 pop rdi
 a77:	70 6f                	jo     ae8 <_init-0x660>
 a79:	6c                   	ins    BYTE PTR es:[rdi],dx
 a7a:	69 63 79 00 5f 5f 67 	imul   esp,DWORD PTR [rbx+0x79],0x675f5f00
 a81:	6c                   	ins    BYTE PTR es:[rdi],dx
 a82:	5f                   	pop    rdi
 a83:	77 63                	ja     ae8 <_init-0x660>
 a85:	5f                   	pop    rdi
 a86:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 a88:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 a8b:	69 6e 67 00 67 6e 61 	imul   ebp,DWORD PTR [rsi+0x67],0x616e6700
 a92:	74 5f                	je     af3 <_init-0x655>
 a94:	5f                   	pop    rdi
 a95:	69 6f 5f 5f 6e 65 77 	imul   ebp,DWORD PTR [rdi+0x5f],0x77656e5f
 a9c:	5f                   	pop    rdi
 a9d:	6c                   	ins    BYTE PTR es:[rdi],dx
 a9e:	69 6e 65 5f 5f 32 00 	imul   ebp,DWORD PTR [rsi+0x65],0x325f5f
 aa5:	73 79                	jae    b20 <_init-0x628>
 aa7:	73 74                	jae    b1d <_init-0x62b>
 aa9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 aab:	5f                   	pop    rdi
 aac:	5f                   	pop    rdi
 aad:	73 6f                	jae    b1e <_init-0x62a>
 aaf:	66 74 5f             	data16 je b11 <_init-0x637>
 ab2:	6c                   	ins    BYTE PTR es:[rdi],dx
 ab3:	69 6e 6b 73 5f 45 00 	imul   ebp,DWORD PTR [rsi+0x6b],0x455f73
 aba:	5f                   	pop    rdi
 abb:	5f                   	pop    rdi
 abc:	67 6c                	ins    BYTE PTR es:[edi],dx
 abe:	5f                   	pop    rdi
 abf:	75 6e                	jne    b2f <_init-0x619>
 ac1:	72 65                	jb     b28 <_init-0x620>
 ac3:	73 65                	jae    b2a <_init-0x61e>
 ac5:	72 76                	jb     b3d <_init-0x60b>
 ac7:	65 5f                	gs pop rdi
 ac9:	61                   	(bad)  
 aca:	6c                   	ins    BYTE PTR es:[rdi],dx
 acb:	6c                   	ins    BYTE PTR es:[rdi],dx
 acc:	5f                   	pop    rdi
 acd:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
 ad4:	70 74                	jo     b4a <_init-0x5fe>
 ad6:	73 00                	jae    ad8 <_init-0x670>
 ad8:	5f                   	pop    rdi
 ad9:	5f                   	pop    rdi
 ada:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 adc:	61                   	(bad)  
 add:	74 5f                	je     b3e <_init-0x60a>
 adf:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
 ae6:	69 7a 65 00 73 79 73 	imul   edi,DWORD PTR [rdx+0x65],0x73797300
 aed:	74 65                	je     b54 <_init-0x5f4>
 aef:	6d                   	ins    DWORD PTR es:[rdi],dx
 af0:	5f                   	pop    rdi
 af1:	5f                   	pop    rdi
 af2:	65 78 63             	gs js  b58 <_init-0x5f0>
 af5:	65 70 74             	gs jo  b6c <_init-0x5dc>
 af8:	69 6f 6e 73 5f 5f 5f 	imul   ebp,DWORD PTR [rdi+0x6e],0x5f5f5f73
 aff:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 b01:	61                   	(bad)  
 b02:	62 73                	(bad)  
 b04:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 b07:	67 6c                	ins    BYTE PTR es:[edi],dx
 b09:	5f                   	pop    rdi
 b0a:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
 b11:	70 74                	jo     b87 <_init-0x5c1>
 b13:	5f                   	pop    rdi
 b14:	73 74                	jae    b8a <_init-0x5be>
 b16:	61                   	(bad)  
 b17:	74 65                	je     b7e <_init-0x5ca>
 b19:	73 00                	jae    b1b <_init-0x62d>
 b1b:	73 79                	jae    b96 <_init-0x5b2>
 b1d:	73 74                	jae    b93 <_init-0x5b5>
 b1f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 b21:	5f                   	pop    rdi
 b22:	5f                   	pop    rdi
 b23:	65 78 63             	gs js  b89 <_init-0x5bf>
 b26:	65 70 74             	gs jo  b9d <_init-0x5ab>
 b29:	69 6f 6e 73 5f 45 00 	imul   ebp,DWORD PTR [rdi+0x6e],0x455f73
 b30:	5f                   	pop    rdi
 b31:	5f                   	pop    rdi
 b32:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 b34:	61                   	(bad)  
 b35:	74 5f                	je     b96 <_init-0x5b2>
 b37:	72 63                	jb     b9c <_init-0x5ac>
 b39:	68 65 63 6b 5f       	push   0x5f6b6365
 b3e:	43                   	rex.XB
 b3f:	45 5f                	rex.RB pop r15
 b41:	4f 76 65             	rex.WRXB jbe ba9 <_init-0x59f>
 b44:	72 66                	jb     bac <_init-0x59c>
 b46:	6c                   	ins    BYTE PTR es:[rdi],dx
 b47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 b48:	77 5f                	ja     ba9 <_init-0x59f>
 b4a:	43 68 65 63 6b 00    	rex.XB push 0x6b6365
 b50:	5f                   	pop    rdi
 b51:	5f                   	pop    rdi
 b52:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 b54:	61                   	(bad)  
 b55:	74 5f                	je     bb6 <_init-0x592>
 b57:	72 75                	jb     bce <_init-0x57a>
 b59:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b5a:	74 69                	je     bc5 <_init-0x583>
 b5c:	6d                   	ins    DWORD PTR es:[rdi],dx
 b5d:	65 5f                	gs pop rdi
 b5f:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
 b66:	69 7a 65 00 73 79 73 	imul   edi,DWORD PTR [rdx+0x65],0x73797300
 b6d:	74 65                	je     bd4 <_init-0x574>
 b6f:	6d                   	ins    DWORD PTR es:[rdi],dx
 b70:	5f                   	pop    rdi
 b71:	5f                   	pop    rdi
 b72:	65 78 63             	gs js  bd8 <_init-0x570>
 b75:	65 70 74             	gs jo  bec <_init-0x55c>
 b78:	69 6f 6e 5f 74 61 62 	imul   ebp,DWORD PTR [rdi+0x6e],0x6261745f
 b7f:	6c                   	ins    BYTE PTR es:[rdi],dx
 b80:	65 5f                	gs pop rdi
 b82:	45 00 73 79          	add    BYTE PTR [r11+0x79],r14b
 b86:	73 74                	jae    bfc <_init-0x54c>
 b88:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 b8a:	5f                   	pop    rdi
 b8b:	5f                   	pop    rdi
 b8c:	65 78 63             	gs js  bf2 <_init-0x556>
 b8f:	65 70 74             	gs jo  c06 <_init-0x542>
 b92:	69 6f 6e 5f 74 61 62 	imul   ebp,DWORD PTR [rdi+0x6e],0x6261745f
 b99:	6c                   	ins    BYTE PTR es:[rdi],dx
 b9a:	65 5f                	gs pop rdi
 b9c:	5f                   	pop    rdi
 b9d:	5f                   	pop    rdi
 b9e:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 ba0:	61                   	(bad)  
 ba1:	62 62                	(bad)  
 ba3:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 ba6:	73 74                	jae    c1c <_init-0x52c>
 ba8:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 baa:	5f                   	pop    rdi
 bab:	5f                   	pop    rdi
 bac:	73 6f                	jae    c1d <_init-0x52b>
 bae:	66 74 5f             	data16 je c10 <_init-0x538>
 bb1:	6c                   	ins    BYTE PTR es:[rdi],dx
 bb2:	69 6e 6b 73 5f 5f 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f5f5f73
 bb9:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 bbb:	61                   	(bad)  
 bbc:	62 62                	(bad)  
 bbe:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 bc1:	73 74                	jae    c37 <_init-0x511>
 bc3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 bc5:	5f                   	pop    rdi
 bc6:	5f                   	pop    rdi
 bc7:	73 6f                	jae    c38 <_init-0x510>
 bc9:	66 74 5f             	data16 je c2b <_init-0x51d>
 bcc:	6c                   	ins    BYTE PTR es:[rdi],dx
 bcd:	69 6e 6b 73 5f 5f 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f5f5f73
 bd4:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 bd6:	61                   	(bad)  
 bd7:	62 73                	(bad)  
 bd9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 bdc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 bde:	61                   	(bad)  
 bdf:	74 5f                	je     c40 <_init-0x508>
 be1:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 be7:	7a 65                	jp     c4e <_init-0x4fa>
 be9:	5f                   	pop    rdi
 bea:	6c                   	ins    BYTE PTR es:[rdi],dx
 beb:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
 bf2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 bf3:	62                   	(bad)  
 bf4:	6a 65                	push   0x65
 bf6:	63 74 73 00          	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
 bfa:	5f                   	pop    rdi
 bfb:	5f                   	pop    rdi
 bfc:	67 6c                	ins    BYTE PTR es:[edi],dx
 bfe:	5f                   	pop    rdi
 bff:	6d                   	ins    DWORD PTR es:[rdi],dx
 c00:	61                   	(bad)  
 c01:	69 6e 5f 70 72 69 6f 	imul   ebp,DWORD PTR [rsi+0x5f],0x6f697270
 c08:	72 69                	jb     c73 <_init-0x4d5>
 c0a:	74 79                	je     c85 <_init-0x4c3>
 c0c:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 c10:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 c12:	73 6f                	jae    c83 <_init-0x4c5>
 c14:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 c19:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 c1c:	5f                   	pop    rdi
 c1d:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 c23:	7a 65                	jp     c8a <_init-0x4be>
 c25:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c28:	6c                   	ins    BYTE PTR es:[rdi],dx
 c29:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 c30:	72 74                	jb     ca6 <_init-0x4a2>
 c32:	5f                   	pop    rdi
 c33:	6d                   	ins    DWORD PTR es:[rdi],dx
 c34:	61                   	(bad)  
 c35:	69 6e 00 5f 65 64 61 	imul   ebp,DWORD PTR [rsi+0x0],0x6164655f
 c3c:	74 61                	je     c9f <_init-0x4a9>
 c3e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 c41:	62 73                	(bad)  
 c43:	73 5f                	jae    ca4 <_init-0x4a4>
 c45:	73 74                	jae    cbb <_init-0x48d>
 c47:	61                   	(bad)  
 c48:	72 74                	jb     cbe <_init-0x48a>
 c4a:	00 5f 65             	add    BYTE PTR [rdi+0x65],bl
 c4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 c4e:	64 00 47 4c          	add    BYTE PTR fs:[rdi+0x4c],al
 c52:	49                   	rex.WB
 c53:	42                   	rex.X
 c54:	43 5f                	rex.XB pop r15
 c56:	32 2e                	xor    ch,BYTE PTR [rsi]
 c58:	32 2e                	xor    ch,BYTE PTR [rsi]
 c5a:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000c5c <.gnu.version>:
 c5c:	00 00                	add    BYTE PTR [rax],al
 c5e:	00 00                	add    BYTE PTR [rax],al
 c60:	00 00                	add    BYTE PTR [rax],al
 c62:	02 00                	add    al,BYTE PTR [rax]
	...
 c74:	02 00                	add    al,BYTE PTR [rax]
	...
 c8a:	01 00                	add    DWORD PTR [rax],eax
 c8c:	00 00                	add    BYTE PTR [rax],al
 c8e:	00 00                	add    BYTE PTR [rax],al
 c90:	01 00                	add    DWORD PTR [rax],eax
 c92:	01 00                	add    DWORD PTR [rax],eax
 c94:	00 00                	add    BYTE PTR [rax],al
 c96:	00 00                	add    BYTE PTR [rax],al
 c98:	01 00                	add    DWORD PTR [rax],eax
	...
 ca6:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .gnu.version_r:

0000000000000cc0 <.gnu.version_r>:
 cc0:	01 00                	add    DWORD PTR [rax],eax
 cc2:	01 00                	add    DWORD PTR [rax],eax
 cc4:	dd 03                	fld    QWORD PTR [rbx]
 cc6:	00 00                	add    BYTE PTR [rax],al
 cc8:	10 00                	adc    BYTE PTR [rax],al
 cca:	00 00                	add    BYTE PTR [rax],al
 ccc:	00 00                	add    BYTE PTR [rax],al
 cce:	00 00                	add    BYTE PTR [rax],al
 cd0:	75 1a                	jne    cec <_init-0x45c>
 cd2:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 cd8:	20 04 00             	and    BYTE PTR [rax+rax*1],al
 cdb:	00 00                	add    BYTE PTR [rax],al
 cdd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000ce0 <.rela.dyn>:
 ce0:	38 1d 20 00 00 00    	cmp    BYTE PTR [rip+0x20],bl        # d06 <_init-0x442>
 ce6:	00 00                	add    BYTE PTR [rax],al
 ce8:	08 00                	or     BYTE PTR [rax],al
 cea:	00 00                	add    BYTE PTR [rax],al
 cec:	00 00                	add    BYTE PTR [rax],al
 cee:	00 00                	add    BYTE PTR [rax],al
 cf0:	70 13                	jo     d05 <_init-0x443>
 cf2:	00 00                	add    BYTE PTR [rax],al
 cf4:	00 00                	add    BYTE PTR [rax],al
 cf6:	00 00                	add    BYTE PTR [rax],al
 cf8:	40 1d 20 00 00 00    	rex sbb eax,0x20
 cfe:	00 00                	add    BYTE PTR [rax],al
 d00:	08 00                	or     BYTE PTR [rax],al
 d02:	00 00                	add    BYTE PTR [rax],al
 d04:	00 00                	add    BYTE PTR [rax],al
 d06:	00 00                	add    BYTE PTR [rax],al
 d08:	30 13                	xor    BYTE PTR [rbx],dl
 d0a:	00 00                	add    BYTE PTR [rax],al
 d0c:	00 00                	add    BYTE PTR [rax],al
 d0e:	00 00                	add    BYTE PTR [rax],al
 d10:	08 20                	or     BYTE PTR [rax],ah
 d12:	20 00                	and    BYTE PTR [rax],al
 d14:	00 00                	add    BYTE PTR [rax],al
 d16:	00 00                	add    BYTE PTR [rax],al
 d18:	08 00                	or     BYTE PTR [rax],al
 d1a:	00 00                	add    BYTE PTR [rax],al
 d1c:	00 00                	add    BYTE PTR [rax],al
 d1e:	00 00                	add    BYTE PTR [rax],al
 d20:	08 20                	or     BYTE PTR [rax],ah
 d22:	20 00                	and    BYTE PTR [rax],al
 d24:	00 00                	add    BYTE PTR [rax],al
 d26:	00 00                	add    BYTE PTR [rax],al
 d28:	d8 1f                	fcomp  DWORD PTR [rdi]
 d2a:	20 00                	and    BYTE PTR [rax],al
 d2c:	00 00                	add    BYTE PTR [rax],al
 d2e:	00 00                	add    BYTE PTR [rax],al
 d30:	06                   	(bad)  
 d31:	00 00                	add    BYTE PTR [rax],al
 d33:	00 02                	add    BYTE PTR [rdx],al
	...
 d3d:	00 00                	add    BYTE PTR [rax],al
 d3f:	00 e0                	add    al,ah
 d41:	1f                   	(bad)  
 d42:	20 00                	and    BYTE PTR [rax],al
 d44:	00 00                	add    BYTE PTR [rax],al
 d46:	00 00                	add    BYTE PTR [rax],al
 d48:	06                   	(bad)  
 d49:	00 00                	add    BYTE PTR [rax],al
 d4b:	00 03                	add    BYTE PTR [rbx],al
	...
 d55:	00 00                	add    BYTE PTR [rax],al
 d57:	00 e8                	add    al,ch
 d59:	1f                   	(bad)  
 d5a:	20 00                	and    BYTE PTR [rax],al
 d5c:	00 00                	add    BYTE PTR [rax],al
 d5e:	00 00                	add    BYTE PTR [rax],al
 d60:	06                   	(bad)  
 d61:	00 00                	add    BYTE PTR [rax],al
 d63:	00 06                	add    BYTE PTR [rsi],al
	...
 d6d:	00 00                	add    BYTE PTR [rax],al
 d6f:	00 f0                	add    al,dh
 d71:	1f                   	(bad)  
 d72:	20 00                	and    BYTE PTR [rax],al
 d74:	00 00                	add    BYTE PTR [rax],al
 d76:	00 00                	add    BYTE PTR [rax],al
 d78:	06                   	(bad)  
 d79:	00 00                	add    BYTE PTR [rax],al
 d7b:	00 07                	add    BYTE PTR [rdi],al
	...
 d85:	00 00                	add    BYTE PTR [rax],al
 d87:	00 f8                	add    al,bh
 d89:	1f                   	(bad)  
 d8a:	20 00                	and    BYTE PTR [rax],al
 d8c:	00 00                	add    BYTE PTR [rax],al
 d8e:	00 00                	add    BYTE PTR [rax],al
 d90:	06                   	(bad)  
 d91:	00 00                	add    BYTE PTR [rax],al
 d93:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 d9e:	00 00                	add    BYTE PTR [rax],al
 da0:	20 20                	and    BYTE PTR [rax],ah
 da2:	20 00                	and    BYTE PTR [rax],al
 da4:	00 00                	add    BYTE PTR [rax],al
 da6:	00 00                	add    BYTE PTR [rax],al
 da8:	05 00 00 00 16       	add    eax,0x16000000
	...
 db5:	00 00                	add    BYTE PTR [rax],al
 db7:	00 28                	add    BYTE PTR [rax],ch
 db9:	20 20                	and    BYTE PTR [rax],ah
 dbb:	00 00                	add    BYTE PTR [rax],al
 dbd:	00 00                	add    BYTE PTR [rax],al
 dbf:	00 05 00 00 00 18    	add    BYTE PTR [rip+0x18000000],al        # 18000dc5 <_end+0x17dfec9d>
	...
 dcd:	00 00                	add    BYTE PTR [rax],al
 dcf:	00 40 20             	add    BYTE PTR [rax+0x20],al
 dd2:	20 00                	and    BYTE PTR [rax],al
 dd4:	00 00                	add    BYTE PTR [rax],al
 dd6:	00 00                	add    BYTE PTR [rax],al
 dd8:	05 00 00 00 2f       	add    eax,0x2f000000
	...
 de5:	00 00                	add    BYTE PTR [rax],al
 de7:	00 50 20             	add    BYTE PTR [rax+0x20],dl
 dea:	20 00                	and    BYTE PTR [rax],al
 dec:	00 00                	add    BYTE PTR [rax],al
 dee:	00 00                	add    BYTE PTR [rax],al
 df0:	05 00 00 00 30       	add    eax,0x30000000
	...
 dfd:	00 00                	add    BYTE PTR [rax],al
 dff:	00 58 20             	add    BYTE PTR [rax+0x20],bl
 e02:	20 00                	and    BYTE PTR [rax],al
 e04:	00 00                	add    BYTE PTR [rax],al
 e06:	00 00                	add    BYTE PTR [rax],al
 e08:	05 00 00 00 22       	add    eax,0x22000000
	...
 e15:	00 00                	add    BYTE PTR [rax],al
 e17:	00 60 20             	add    BYTE PTR [rax+0x20],ah
 e1a:	20 00                	and    BYTE PTR [rax],al
 e1c:	00 00                	add    BYTE PTR [rax],al
 e1e:	00 00                	add    BYTE PTR [rax],al
 e20:	05 00 00 00 23       	add    eax,0x23000000
	...
 e2d:	00 00                	add    BYTE PTR [rax],al
 e2f:	00 68 20             	add    BYTE PTR [rax+0x20],ch
 e32:	20 00                	and    BYTE PTR [rax],al
 e34:	00 00                	add    BYTE PTR [rax],al
 e36:	00 00                	add    BYTE PTR [rax],al
 e38:	05 00 00 00 2a       	add    eax,0x2a000000
	...
 e45:	00 00                	add    BYTE PTR [rax],al
 e47:	00 6c 20 20          	add    BYTE PTR [rax+riz*1+0x20],ch
 e4b:	00 00                	add    BYTE PTR [rax],al
 e4d:	00 00                	add    BYTE PTR [rax],al
 e4f:	00 05 00 00 00 2e    	add    BYTE PTR [rip+0x2e000000],al        # 2e000e55 <_end+0x2ddfed2d>
	...
 e5d:	00 00                	add    BYTE PTR [rax],al
 e5f:	00 70 20             	add    BYTE PTR [rax+0x20],dh
 e62:	20 00                	and    BYTE PTR [rax],al
 e64:	00 00                	add    BYTE PTR [rax],al
 e66:	00 00                	add    BYTE PTR [rax],al
 e68:	05 00 00 00 1c       	add    eax,0x1c000000
	...
 e75:	00 00                	add    BYTE PTR [rax],al
 e77:	00 78 20             	add    BYTE PTR [rax+0x20],bh
 e7a:	20 00                	and    BYTE PTR [rax],al
 e7c:	00 00                	add    BYTE PTR [rax],al
 e7e:	00 00                	add    BYTE PTR [rax],al
 e80:	05 00 00 00 24       	add    eax,0x24000000
	...
 e8d:	00 00                	add    BYTE PTR [rax],al
 e8f:	00 7c 20 20          	add    BYTE PTR [rax+riz*1+0x20],bh
 e93:	00 00                	add    BYTE PTR [rax],al
 e95:	00 00                	add    BYTE PTR [rax],al
 e97:	00 05 00 00 00 1d    	add    BYTE PTR [rip+0x1d000000],al        # 1d000e9d <_end+0x1cdfed75>
	...
 ea5:	00 00                	add    BYTE PTR [rax],al
 ea7:	00 80 20 20 00 00    	add    BYTE PTR [rax+0x2020],al
 ead:	00 00                	add    BYTE PTR [rax],al
 eaf:	00 05 00 00 00 19    	add    BYTE PTR [rip+0x19000000],al        # 19000eb5 <_end+0x18dfed8d>
	...
 ebd:	00 00                	add    BYTE PTR [rax],al
 ebf:	00 84 20 20 00 00 00 	add    BYTE PTR [rax+riz*1+0x20],al
 ec6:	00 00                	add    BYTE PTR [rax],al
 ec8:	05 00 00 00 28       	add    eax,0x28000000
	...
 ed5:	00 00                	add    BYTE PTR [rax],al
 ed7:	00 88 20 20 00 00    	add    BYTE PTR [rax+0x2020],cl
 edd:	00 00                	add    BYTE PTR [rax],al
 edf:	00 05 00 00 00 2c    	add    BYTE PTR [rip+0x2c000000],al        # 2c000ee5 <_end+0x2bdfedbd>
	...
 eed:	00 00                	add    BYTE PTR [rax],al
 eef:	00 90 20 20 00 00    	add    BYTE PTR [rax+0x2020],dl
 ef5:	00 00                	add    BYTE PTR [rax],al
 ef7:	00 05 00 00 00 1f    	add    BYTE PTR [rip+0x1f000000],al        # 1f000efd <_end+0x1edfedd5>
	...
 f05:	00 00                	add    BYTE PTR [rax],al
 f07:	00 a0 20 20 00 00    	add    BYTE PTR [rax+0x2020],ah
 f0d:	00 00                	add    BYTE PTR [rax],al
 f0f:	00 05 00 00 00 26    	add    BYTE PTR [rip+0x26000000],al        # 26000f15 <_end+0x25dfeded>
	...
 f1d:	00 00                	add    BYTE PTR [rax],al
 f1f:	00 b0 20 20 00 00    	add    BYTE PTR [rax+0x2020],dh
 f25:	00 00                	add    BYTE PTR [rax],al
 f27:	00 05 00 00 00 20    	add    BYTE PTR [rip+0x20000000],al        # 20000f2d <_end+0x1fdfee05>
	...
 f35:	00 00                	add    BYTE PTR [rax],al
 f37:	00 b8 20 20 00 00    	add    BYTE PTR [rax+0x2020],bh
 f3d:	00 00                	add    BYTE PTR [rax],al
 f3f:	00 05 00 00 00 2d    	add    BYTE PTR [rip+0x2d000000],al        # 2d000f45 <_end+0x2cdfee1d>
	...
 f4d:	00 00                	add    BYTE PTR [rax],al
 f4f:	00 c0                	add    al,al
 f51:	20 20                	and    BYTE PTR [rax],ah
 f53:	00 00                	add    BYTE PTR [rax],al
 f55:	00 00                	add    BYTE PTR [rax],al
 f57:	00 05 00 00 00 27    	add    BYTE PTR [rip+0x27000000],al        # 27000f5d <_end+0x26dfee35>
	...
 f65:	00 00                	add    BYTE PTR [rax],al
 f67:	00 e0                	add    al,ah
 f69:	20 20                	and    BYTE PTR [rax],ah
 f6b:	00 00                	add    BYTE PTR [rax],al
 f6d:	00 00                	add    BYTE PTR [rax],al
 f6f:	00 05 00 00 00 2b    	add    BYTE PTR [rip+0x2b000000],al        # 2b000f75 <_end+0x2adfee4d>
	...
 f81:	21 20                	and    DWORD PTR [rax],esp
 f83:	00 00                	add    BYTE PTR [rax],al
 f85:	00 00                	add    BYTE PTR [rax],al
 f87:	00 05 00 00 00 29    	add    BYTE PTR [rip+0x29000000],al        # 29000f8d <_end+0x28dfee65>
	...
 f95:	00 00                	add    BYTE PTR [rax],al
 f97:	00 10                	add    BYTE PTR [rax],dl
 f99:	21 20                	and    DWORD PTR [rax],esp
 f9b:	00 00                	add    BYTE PTR [rax],al
 f9d:	00 00                	add    BYTE PTR [rax],al
 f9f:	00 05 00 00 00 31    	add    BYTE PTR [rip+0x31000000],al        # 31000fa5 <_end+0x30dfee7d>
	...
 fad:	00 00                	add    BYTE PTR [rax],al
 faf:	00 18                	add    BYTE PTR [rax],bl
 fb1:	21 20                	and    DWORD PTR [rax],esp
 fb3:	00 00                	add    BYTE PTR [rax],al
 fb5:	00 00                	add    BYTE PTR [rax],al
 fb7:	00 05 00 00 00 15    	add    BYTE PTR [rip+0x15000000],al        # 15000fbd <_end+0x14dfee95>
	...
 fc5:	00 00                	add    BYTE PTR [rax],al
 fc7:	00 20                	add    BYTE PTR [rax],ah
 fc9:	21 20                	and    DWORD PTR [rax],esp
 fcb:	00 00                	add    BYTE PTR [rax],al
 fcd:	00 00                	add    BYTE PTR [rax],al
 fcf:	00 05 00 00 00 21    	add    BYTE PTR [rip+0x21000000],al        # 21000fd5 <_end+0x20dfeead>
	...

Disassembly of section .rela.plt:

0000000000000fe0 <.rela.plt>:
     fe0:	60                   	(bad)  
     fe1:	1f                   	(bad)  
     fe2:	20 00                	and    BYTE PTR [rax],al
     fe4:	00 00                	add    BYTE PTR [rax],al
     fe6:	00 00                	add    BYTE PTR [rax],al
     fe8:	07                   	(bad)  
     fe9:	00 00                	add    BYTE PTR [rax],al
     feb:	00 01                	add    BYTE PTR [rcx],al
	...
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	00 68 1f             	add    BYTE PTR [rax+0x1f],ch
     ffa:	20 00                	and    BYTE PTR [rax],al
     ffc:	00 00                	add    BYTE PTR [rax],al
     ffe:	00 00                	add    BYTE PTR [rax],al
    1000:	07                   	(bad)  
    1001:	00 00                	add    BYTE PTR [rax],al
    1003:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	70 1f                	jo     1031 <_init-0x117>
    1012:	20 00                	and    BYTE PTR [rax],al
    1014:	00 00                	add    BYTE PTR [rax],al
    1016:	00 00                	add    BYTE PTR [rax],al
    1018:	07                   	(bad)  
    1019:	00 00                	add    BYTE PTR [rax],al
    101b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 1021 <_init-0x127>
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	00 00                	add    BYTE PTR [rax],al
    1025:	00 00                	add    BYTE PTR [rax],al
    1027:	00 78 1f             	add    BYTE PTR [rax+0x1f],bh
    102a:	20 00                	and    BYTE PTR [rax],al
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	00 00                	add    BYTE PTR [rax],al
    1030:	07                   	(bad)  
    1031:	00 00                	add    BYTE PTR [rax],al
    1033:	00 08                	add    BYTE PTR [rax],cl
	...
    103d:	00 00                	add    BYTE PTR [rax],al
    103f:	00 80 1f 20 00 00    	add    BYTE PTR [rax+0x201f],al
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	00 07                	add    BYTE PTR [rdi],al
    1049:	00 00                	add    BYTE PTR [rax],al
    104b:	00 09                	add    BYTE PTR [rcx],cl
	...
    1055:	00 00                	add    BYTE PTR [rax],al
    1057:	00 88 1f 20 00 00    	add    BYTE PTR [rax+0x201f],cl
    105d:	00 00                	add    BYTE PTR [rax],al
    105f:	00 07                	add    BYTE PTR [rdi],al
    1061:	00 00                	add    BYTE PTR [rax],al
    1063:	00 0a                	add    BYTE PTR [rdx],cl
	...
    106d:	00 00                	add    BYTE PTR [rax],al
    106f:	00 90 1f 20 00 00    	add    BYTE PTR [rax+0x201f],dl
    1075:	00 00                	add    BYTE PTR [rax],al
    1077:	00 07                	add    BYTE PTR [rdi],al
    1079:	00 00                	add    BYTE PTR [rax],al
    107b:	00 0b                	add    BYTE PTR [rbx],cl
	...
    1085:	00 00                	add    BYTE PTR [rax],al
    1087:	00 98 1f 20 00 00    	add    BYTE PTR [rax+0x201f],bl
    108d:	00 00                	add    BYTE PTR [rax],al
    108f:	00 07                	add    BYTE PTR [rdi],al
    1091:	00 00                	add    BYTE PTR [rax],al
    1093:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1099 <_init-0xaf>
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 00                	add    BYTE PTR [rax],al
    109d:	00 00                	add    BYTE PTR [rax],al
    109f:	00 a0 1f 20 00 00    	add    BYTE PTR [rax+0x201f],ah
    10a5:	00 00                	add    BYTE PTR [rax],al
    10a7:	00 07                	add    BYTE PTR [rdi],al
    10a9:	00 00                	add    BYTE PTR [rax],al
    10ab:	00 0e                	add    BYTE PTR [rsi],cl
	...
    10b5:	00 00                	add    BYTE PTR [rax],al
    10b7:	00 a8 1f 20 00 00    	add    BYTE PTR [rax+0x201f],ch
    10bd:	00 00                	add    BYTE PTR [rax],al
    10bf:	00 07                	add    BYTE PTR [rdi],al
    10c1:	00 00                	add    BYTE PTR [rax],al
    10c3:	00 0f                	add    BYTE PTR [rdi],cl
	...
    10cd:	00 00                	add    BYTE PTR [rax],al
    10cf:	00 b0 1f 20 00 00    	add    BYTE PTR [rax+0x201f],dh
    10d5:	00 00                	add    BYTE PTR [rax],al
    10d7:	00 07                	add    BYTE PTR [rdi],al
    10d9:	00 00                	add    BYTE PTR [rax],al
    10db:	00 10                	add    BYTE PTR [rax],dl
	...
    10e5:	00 00                	add    BYTE PTR [rax],al
    10e7:	00 b8 1f 20 00 00    	add    BYTE PTR [rax+0x201f],bh
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 07                	add    BYTE PTR [rdi],al
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	00 11                	add    BYTE PTR [rcx],dl
	...
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	00 c0                	add    al,al
    1101:	1f                   	(bad)  
    1102:	20 00                	and    BYTE PTR [rax],al
    1104:	00 00                	add    BYTE PTR [rax],al
    1106:	00 00                	add    BYTE PTR [rax],al
    1108:	07                   	(bad)  
    1109:	00 00                	add    BYTE PTR [rax],al
    110b:	00 12                	add    BYTE PTR [rdx],dl
	...
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	00 c8                	add    al,cl
    1119:	1f                   	(bad)  
    111a:	20 00                	and    BYTE PTR [rax],al
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	07                   	(bad)  
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 13                	add    BYTE PTR [rbx],dl
	...
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	00 d0                	add    al,dl
    1131:	1f                   	(bad)  
    1132:	20 00                	and    BYTE PTR [rax],al
    1134:	00 00                	add    BYTE PTR [rax],al
    1136:	00 00                	add    BYTE PTR [rax],al
    1138:	07                   	(bad)  
    1139:	00 00                	add    BYTE PTR [rax],al
    113b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...

Disassembly of section .init:

0000000000001148 <_init>:
    1148:	48 83 ec 08          	sub    rsp,0x8
    114c:	48 8b 05 85 0e 20 00 	mov    rax,QWORD PTR [rip+0x200e85]        # 201fd8 <__gmon_start__>
    1153:	48 85 c0             	test   rax,rax
    1156:	74 02                	je     115a <_init+0x12>
    1158:	ff d0                	call   rax
    115a:	48 83 c4 08          	add    rsp,0x8
    115e:	c3                   	ret    

Disassembly of section .plt:

0000000000001160 <.plt>:
    1160:	ff 35 ea 0d 20 00    	push   QWORD PTR [rip+0x200dea]        # 201f50 <_GLOBAL_OFFSET_TABLE_+0x8>
    1166:	ff 25 ec 0d 20 00    	jmp    QWORD PTR [rip+0x200dec]        # 201f58 <_GLOBAL_OFFSET_TABLE_+0x10>
    116c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001170 <__gnat_finalize@plt>:
    1170:	ff 25 ea 0d 20 00    	jmp    QWORD PTR [rip+0x200dea]        # 201f60 <__gnat_finalize>
    1176:	68 00 00 00 00       	push   0x0
    117b:	e9 e0 ff ff ff       	jmp    1160 <.plt>

0000000000001180 <system__secondary_stack___elabb@plt>:
    1180:	ff 25 e2 0d 20 00    	jmp    QWORD PTR [rip+0x200de2]        # 201f68 <system__secondary_stack___elabb>
    1186:	68 01 00 00 00       	push   0x1
    118b:	e9 d0 ff ff ff       	jmp    1160 <.plt>

0000000000001190 <system__soft_links___elabb@plt>:
    1190:	ff 25 da 0d 20 00    	jmp    QWORD PTR [rip+0x200dda]        # 201f70 <system__soft_links___elabb>
    1196:	68 02 00 00 00       	push   0x2
    119b:	e9 c0 ff ff ff       	jmp    1160 <.plt>

00000000000011a0 <system__exceptions___elabs@plt>:
    11a0:	ff 25 d2 0d 20 00    	jmp    QWORD PTR [rip+0x200dd2]        # 201f78 <system__exceptions___elabs>
    11a6:	68 03 00 00 00       	push   0x3
    11ab:	e9 b0 ff ff ff       	jmp    1160 <.plt>

00000000000011b0 <system__exception_table___elabb@plt>:
    11b0:	ff 25 ca 0d 20 00    	jmp    QWORD PTR [rip+0x200dca]        # 201f80 <system__exception_table___elabb>
    11b6:	68 04 00 00 00       	push   0x4
    11bb:	e9 a0 ff ff ff       	jmp    1160 <.plt>

00000000000011c0 <gnat__io__get@plt>:
    11c0:	ff 25 c2 0d 20 00    	jmp    QWORD PTR [rip+0x200dc2]        # 201f88 <gnat__io__get>
    11c6:	68 05 00 00 00       	push   0x5
    11cb:	e9 90 ff ff ff       	jmp    1160 <.plt>

00000000000011d0 <system__standard_library__adafinal@plt>:
    11d0:	ff 25 ba 0d 20 00    	jmp    QWORD PTR [rip+0x200dba]        # 201f90 <system__standard_library__adafinal>
    11d6:	68 06 00 00 00       	push   0x6
    11db:	e9 80 ff ff ff       	jmp    1160 <.plt>

00000000000011e0 <__gnat_initialize@plt>:
    11e0:	ff 25 b2 0d 20 00    	jmp    QWORD PTR [rip+0x200db2]        # 201f98 <__gnat_initialize>
    11e6:	68 07 00 00 00       	push   0x7
    11eb:	e9 70 ff ff ff       	jmp    1160 <.plt>

00000000000011f0 <__gnat_runtime_finalize@plt>:
    11f0:	ff 25 aa 0d 20 00    	jmp    QWORD PTR [rip+0x200daa]        # 201fa0 <__gnat_runtime_finalize>
    11f6:	68 08 00 00 00       	push   0x8
    11fb:	e9 60 ff ff ff       	jmp    1160 <.plt>

0000000000001200 <system__soft_links___elabs@plt>:
    1200:	ff 25 a2 0d 20 00    	jmp    QWORD PTR [rip+0x200da2]        # 201fa8 <system__soft_links___elabs>
    1206:	68 09 00 00 00       	push   0x9
    120b:	e9 50 ff ff ff       	jmp    1160 <.plt>

0000000000001210 <gnat__io__put__2@plt>:
    1210:	ff 25 9a 0d 20 00    	jmp    QWORD PTR [rip+0x200d9a]        # 201fb0 <gnat__io__put__2>
    1216:	68 0a 00 00 00       	push   0xa
    121b:	e9 40 ff ff ff       	jmp    1160 <.plt>

0000000000001220 <gnat__io__new_line__2@plt>:
    1220:	ff 25 92 0d 20 00    	jmp    QWORD PTR [rip+0x200d92]        # 201fb8 <gnat__io__new_line__2>
    1226:	68 0b 00 00 00       	push   0xb
    122b:	e9 30 ff ff ff       	jmp    1160 <.plt>

0000000000001230 <gnat__io__put__6@plt>:
    1230:	ff 25 8a 0d 20 00    	jmp    QWORD PTR [rip+0x200d8a]        # 201fc0 <gnat__io__put__6>
    1236:	68 0c 00 00 00       	push   0xc
    123b:	e9 20 ff ff ff       	jmp    1160 <.plt>

0000000000001240 <__gnat_rcheck_CE_Overflow_Check@plt>:
    1240:	ff 25 82 0d 20 00    	jmp    QWORD PTR [rip+0x200d82]        # 201fc8 <__gnat_rcheck_CE_Overflow_Check>
    1246:	68 0d 00 00 00       	push   0xd
    124b:	e9 10 ff ff ff       	jmp    1160 <.plt>

0000000000001250 <__gnat_runtime_initialize@plt>:
    1250:	ff 25 7a 0d 20 00    	jmp    QWORD PTR [rip+0x200d7a]        # 201fd0 <__gnat_runtime_initialize>
    1256:	68 0e 00 00 00       	push   0xe
    125b:	e9 00 ff ff ff       	jmp    1160 <.plt>

Disassembly of section .plt.got:

0000000000001260 <__cxa_finalize@plt>:
    1260:	ff 25 92 0d 20 00    	jmp    QWORD PTR [rip+0x200d92]        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
    1266:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001270 <_start>:
    1270:	31 ed                	xor    ebp,ebp
    1272:	49 89 d1             	mov    r9,rdx
    1275:	5e                   	pop    rsi
    1276:	48 89 e2             	mov    rdx,rsp
    1279:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    127d:	50                   	push   rax
    127e:	54                   	push   rsp
    127f:	4c 8d 05 0a 04 00 00 	lea    r8,[rip+0x40a]        # 1690 <__libc_csu_fini>
    1286:	48 8d 0d 93 03 00 00 	lea    rcx,[rip+0x393]        # 1620 <__libc_csu_init>
    128d:	48 8d 3d 34 02 00 00 	lea    rdi,[rip+0x234]        # 14c8 <main>
    1294:	ff 15 46 0d 20 00    	call   QWORD PTR [rip+0x200d46]        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
    129a:	f4                   	hlt    
    129b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000012a0 <deregister_tm_clones>:
    12a0:	48 8d 3d 71 0d 20 00 	lea    rdi,[rip+0x200d71]        # 202018 <__TMC_END__>
    12a7:	55                   	push   rbp
    12a8:	48 8d 05 69 0d 20 00 	lea    rax,[rip+0x200d69]        # 202018 <__TMC_END__>
    12af:	48 39 f8             	cmp    rax,rdi
    12b2:	48 89 e5             	mov    rbp,rsp
    12b5:	74 19                	je     12d0 <deregister_tm_clones+0x30>
    12b7:	48 8b 05 2a 0d 20 00 	mov    rax,QWORD PTR [rip+0x200d2a]        # 201fe8 <_ITM_deregisterTMCloneTable>
    12be:	48 85 c0             	test   rax,rax
    12c1:	74 0d                	je     12d0 <deregister_tm_clones+0x30>
    12c3:	5d                   	pop    rbp
    12c4:	ff e0                	jmp    rax
    12c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    12cd:	00 00 00 
    12d0:	5d                   	pop    rbp
    12d1:	c3                   	ret    
    12d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    12d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    12dd:	00 00 00 

00000000000012e0 <register_tm_clones>:
    12e0:	48 8d 3d 31 0d 20 00 	lea    rdi,[rip+0x200d31]        # 202018 <__TMC_END__>
    12e7:	48 8d 35 2a 0d 20 00 	lea    rsi,[rip+0x200d2a]        # 202018 <__TMC_END__>
    12ee:	55                   	push   rbp
    12ef:	48 29 fe             	sub    rsi,rdi
    12f2:	48 89 e5             	mov    rbp,rsp
    12f5:	48 c1 fe 03          	sar    rsi,0x3
    12f9:	48 89 f0             	mov    rax,rsi
    12fc:	48 c1 e8 3f          	shr    rax,0x3f
    1300:	48 01 c6             	add    rsi,rax
    1303:	48 d1 fe             	sar    rsi,1
    1306:	74 18                	je     1320 <register_tm_clones+0x40>
    1308:	48 8b 05 e1 0c 20 00 	mov    rax,QWORD PTR [rip+0x200ce1]        # 201ff0 <_ITM_registerTMCloneTable>
    130f:	48 85 c0             	test   rax,rax
    1312:	74 0c                	je     1320 <register_tm_clones+0x40>
    1314:	5d                   	pop    rbp
    1315:	ff e0                	jmp    rax
    1317:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    131e:	00 00 
    1320:	5d                   	pop    rbp
    1321:	c3                   	ret    
    1322:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1326:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    132d:	00 00 00 

0000000000001330 <__do_global_dtors_aux>:
    1330:	80 3d ed 0d 20 00 00 	cmp    BYTE PTR [rip+0x200ded],0x0        # 202124 <completed.7696>
    1337:	75 2f                	jne    1368 <__do_global_dtors_aux+0x38>
    1339:	48 83 3d b7 0c 20 00 	cmp    QWORD PTR [rip+0x200cb7],0x0        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
    1340:	00 
    1341:	55                   	push   rbp
    1342:	48 89 e5             	mov    rbp,rsp
    1345:	74 0c                	je     1353 <__do_global_dtors_aux+0x23>
    1347:	48 8b 3d ba 0c 20 00 	mov    rdi,QWORD PTR [rip+0x200cba]        # 202008 <__dso_handle>
    134e:	e8 0d ff ff ff       	call   1260 <__cxa_finalize@plt>
    1353:	e8 48 ff ff ff       	call   12a0 <deregister_tm_clones>
    1358:	c6 05 c5 0d 20 00 01 	mov    BYTE PTR [rip+0x200dc5],0x1        # 202124 <completed.7696>
    135f:	5d                   	pop    rbp
    1360:	c3                   	ret    
    1361:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1368:	f3 c3                	repz ret 
    136a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001370 <frame_dummy>:
    1370:	55                   	push   rbp
    1371:	48 89 e5             	mov    rbp,rsp
    1374:	5d                   	pop    rbp
    1375:	e9 66 ff ff ff       	jmp    12e0 <register_tm_clones>

000000000000137a <adafinal>:
    137a:	55                   	push   rbp
    137b:	48 89 e5             	mov    rbp,rsp
    137e:	0f b6 05 8d 0c 20 00 	movzx  eax,BYTE PTR [rip+0x200c8d]        # 202012 <ada_main__is_elaborated>
    1385:	83 f0 01             	xor    eax,0x1
    1388:	84 c0                	test   al,al
    138a:	75 14                	jne    13a0 <adafinal+0x26>
    138c:	c6 05 7f 0c 20 00 00 	mov    BYTE PTR [rip+0x200c7f],0x0        # 202012 <ada_main__is_elaborated>
    1393:	e8 58 fe ff ff       	call   11f0 <__gnat_runtime_finalize@plt>
    1398:	e8 33 fe ff ff       	call   11d0 <system__standard_library__adafinal@plt>
    139d:	90                   	nop
    139e:	eb 01                	jmp    13a1 <adafinal+0x27>
    13a0:	90                   	nop
    13a1:	5d                   	pop    rbp
    13a2:	c3                   	ret    
    13a3:	90                   	nop

00000000000013a4 <adainit>:
    13a4:	55                   	push   rbp
    13a5:	48 89 e5             	mov    rbp,rsp
    13a8:	0f b6 05 63 0c 20 00 	movzx  eax,BYTE PTR [rip+0x200c63]        # 202012 <ada_main__is_elaborated>
    13af:	84 c0                	test   al,al
    13b1:	0f 85 0e 01 00 00    	jne    14c5 <adainit+0x121>
    13b7:	c6 05 54 0c 20 00 01 	mov    BYTE PTR [rip+0x200c54],0x1        # 202012 <ada_main__is_elaborated>
    13be:	c7 05 e8 0c 20 00 ff 	mov    DWORD PTR [rip+0x200ce8],0xffffffff        # 2020b0 <__gl_main_priority>
    13c5:	ff ff ff 
    13c8:	c7 05 9e 0c 20 00 ff 	mov    DWORD PTR [rip+0x200c9e],0xffffffff        # 202070 <__gl_time_slice_val>
    13cf:	ff ff ff 
    13d2:	c6 05 ab 0c 20 00 62 	mov    BYTE PTR [rip+0x200cab],0x62        # 202084 <__gl_wc_encoding>
    13d9:	c6 05 8c 0c 20 00 20 	mov    BYTE PTR [rip+0x200c8c],0x20        # 20206c <__gl_locking_policy>
    13e0:	c6 05 a9 0c 20 00 20 	mov    BYTE PTR [rip+0x200ca9],0x20        # 202090 <__gl_queuing_policy>
    13e7:	c6 05 32 0c 20 00 20 	mov    BYTE PTR [rip+0x200c32],0x20        # 202020 <__gl_task_dispatching_policy>
    13ee:	48 8d 05 c3 03 00 00 	lea    rax,[rip+0x3c3]        # 17b8 <ada_main__local_priority_specific_dispatching>
    13f5:	48 89 05 bc 0c 20 00 	mov    QWORD PTR [rip+0x200cbc],rax        # 2020b8 <__gl_priority_specific_dispatching>
    13fc:	c7 05 9a 0c 20 00 00 	mov    DWORD PTR [rip+0x200c9a],0x0        # 2020a0 <__gl_num_specific_dispatching>
    1403:	00 00 00 
    1406:	c7 05 58 0c 20 00 ff 	mov    DWORD PTR [rip+0x200c58],0xffffffff        # 202068 <__gl_main_cpu>
    140d:	ff ff ff 
    1410:	48 8d 05 a2 03 00 00 	lea    rax,[rip+0x3a2]        # 17b9 <ada_main__local_interrupt_states>
    1417:	48 89 05 3a 0c 20 00 	mov    QWORD PTR [rip+0x200c3a],rax        # 202058 <__gl_interrupt_states>
    141e:	c7 05 e8 0c 20 00 00 	mov    DWORD PTR [rip+0x200ce8],0x0        # 202110 <__gl_num_interrupt_states>
    1425:	00 00 00 
    1428:	c7 05 4e 0c 20 00 00 	mov    DWORD PTR [rip+0x200c4e],0x0        # 202080 <__gl_unreserve_all_interrupts>
    142f:	00 00 00 
    1432:	c7 05 a4 0c 20 00 00 	mov    DWORD PTR [rip+0x200ca4],0x0        # 2020e0 <__gl_detect_blocking>
    1439:	00 00 00 
    143c:	c7 05 da 0c 20 00 ff 	mov    DWORD PTR [rip+0x200cda],0xffffffff        # 202120 <__gl_default_stack_size>
    1443:	ff ff ff 
    1446:	c7 05 2c 0c 20 00 00 	mov    DWORD PTR [rip+0x200c2c],0x0        # 20207c <__gl_leap_seconds_support>
    144d:	00 00 00 
    1450:	bf 01 00 00 00       	mov    edi,0x1
    1455:	e8 f6 fd ff ff       	call   1250 <__gnat_runtime_initialize@plt>
    145a:	48 c7 05 fb 0b 20 00 	mov    QWORD PTR [rip+0x200bfb],0x0        # 202060 <__gnat_finalize_library_objects>
    1461:	00 00 00 00 
    1465:	e8 96 fd ff ff       	call   1200 <system__soft_links___elabs@plt>
    146a:	e8 41 fd ff ff       	call   11b0 <system__exception_table___elabb@plt>
    146f:	0f b7 05 a2 0c 20 00 	movzx  eax,WORD PTR [rip+0x200ca2]        # 202118 <system__exception_table_E>
    1476:	83 c0 01             	add    eax,0x1
    1479:	66 89 05 98 0c 20 00 	mov    WORD PTR [rip+0x200c98],ax        # 202118 <system__exception_table_E>
    1480:	e8 1b fd ff ff       	call   11a0 <system__exceptions___elabs@plt>
    1485:	0f b7 05 34 0c 20 00 	movzx  eax,WORD PTR [rip+0x200c34]        # 2020c0 <system__exceptions_E>
    148c:	83 c0 01             	add    eax,0x1
    148f:	66 89 05 2a 0c 20 00 	mov    WORD PTR [rip+0x200c2a],ax        # 2020c0 <system__exceptions_E>
    1496:	e8 f5 fc ff ff       	call   1190 <system__soft_links___elabb@plt>
    149b:	0f b7 05 9e 0b 20 00 	movzx  eax,WORD PTR [rip+0x200b9e]        # 202040 <system__soft_links_E>
    14a2:	83 c0 01             	add    eax,0x1
    14a5:	66 89 05 94 0b 20 00 	mov    WORD PTR [rip+0x200b94],ax        # 202040 <system__soft_links_E>
    14ac:	e8 cf fc ff ff       	call   1180 <system__secondary_stack___elabb@plt>
    14b1:	0f b7 05 70 0b 20 00 	movzx  eax,WORD PTR [rip+0x200b70]        # 202028 <system__secondary_stack_E>
    14b8:	83 c0 01             	add    eax,0x1
    14bb:	66 89 05 66 0b 20 00 	mov    WORD PTR [rip+0x200b66],ax        # 202028 <system__secondary_stack_E>
    14c2:	90                   	nop
    14c3:	eb 01                	jmp    14c6 <adainit+0x122>
    14c5:	90                   	nop
    14c6:	5d                   	pop    rbp
    14c7:	c3                   	ret    

00000000000014c8 <main>:
    14c8:	55                   	push   rbp
    14c9:	48 89 e5             	mov    rbp,rsp
    14cc:	48 83 ec 30          	sub    rsp,0x30
    14d0:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    14d3:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    14d7:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    14db:	48 8d 05 ee 01 00 00 	lea    rax,[rip+0x1ee]        # 16d0 <__gnat_ada_main_program_name>
    14e2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    14e6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    14e9:	89 05 11 0c 20 00    	mov    DWORD PTR [rip+0x200c11],eax        # 202100 <gnat_argc>
    14ef:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
    14f3:	48 89 05 8e 0b 20 00 	mov    QWORD PTR [rip+0x200b8e],rax        # 202088 <gnat_argv>
    14fa:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
    14fe:	48 89 05 4b 0b 20 00 	mov    QWORD PTR [rip+0x200b4b],rax        # 202050 <gnat_envp>
    1505:	48 8d 45 f8          	lea    rax,[rbp-0x8]
    1509:	48 89 c7             	mov    rdi,rax
    150c:	e8 cf fc ff ff       	call   11e0 <__gnat_initialize@plt>
    1511:	e8 8e fe ff ff       	call   13a4 <adainit>
    1516:	e8 13 00 00 00       	call   152e <_ada_add_int_w_io>
    151b:	e8 5a fe ff ff       	call   137a <adafinal>
    1520:	e8 4b fc ff ff       	call   1170 <__gnat_finalize@plt>
    1525:	8b 05 4d 0b 20 00    	mov    eax,DWORD PTR [rip+0x200b4d]        # 202078 <gnat_exit_status>
    152b:	c9                   	leave  
    152c:	c3                   	ret    
    152d:	90                   	nop

000000000000152e <_ada_add_int_w_io>:
    152e:	55                   	push   rbp
    152f:	48 89 e5             	mov    rbp,rsp
    1532:	41 57                	push   r15
    1534:	41 56                	push   r14
    1536:	41 55                	push   r13
    1538:	41 54                	push   r12
    153a:	53                   	push   rbx
    153b:	48 83 ec 18          	sub    rsp,0x18
    153f:	48 8d 05 7a 02 00 00 	lea    rax,[rip+0x27a]        # 17c0 <ada_main__local_interrupt_states+0x7>
    1546:	48 8d 15 03 03 00 00 	lea    rdx,[rip+0x303]        # 1850 <ada_main__local_interrupt_states+0x97>
    154d:	48 89 c1             	mov    rcx,rax
    1550:	48 89 d3             	mov    rbx,rdx
    1553:	48 89 d0             	mov    rax,rdx
    1556:	48 89 cf             	mov    rdi,rcx
    1559:	48 89 c6             	mov    rsi,rax
    155c:	e8 cf fc ff ff       	call   1230 <gnat__io__put__6@plt>
    1561:	e8 5a fc ff ff       	call   11c0 <gnat__io__get@plt>
    1566:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
    1569:	4c 8d 35 88 02 00 00 	lea    r14,[rip+0x288]        # 17f8 <ada_main__local_interrupt_states+0x3f>
    1570:	4c 8d 3d e1 02 00 00 	lea    r15,[rip+0x2e1]        # 1858 <ada_main__local_interrupt_states+0x9f>
    1577:	4c 89 f1             	mov    rcx,r14
    157a:	4c 89 fb             	mov    rbx,r15
    157d:	4c 89 f0             	mov    rax,r14
    1580:	4c 89 fa             	mov    rdx,r15
    1583:	48 89 d0             	mov    rax,rdx
    1586:	48 89 cf             	mov    rdi,rcx
    1589:	48 89 c6             	mov    rsi,rax
    158c:	e8 9f fc ff ff       	call   1230 <gnat__io__put__6@plt>
    1591:	e8 2a fc ff ff       	call   11c0 <gnat__io__get@plt>
    1596:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
    1599:	b9 00 00 00 00       	mov    ecx,0x0
    159e:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
    15a1:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
    15a4:	01 d0                	add    eax,edx
    15a6:	71 05                	jno    15ad <_ada_add_int_w_io+0x7f>
    15a8:	b9 01 00 00 00       	mov    ecx,0x1
    15ad:	89 c2                	mov    edx,eax
    15af:	89 c8                	mov    eax,ecx
    15b1:	85 c0                	test   eax,eax
    15b3:	74 11                	je     15c6 <_ada_add_int_w_io+0x98>
    15b5:	be 10 00 00 00       	mov    esi,0x10
    15ba:	48 8d 3d 6b 02 00 00 	lea    rdi,[rip+0x26b]        # 182c <ada_main__local_interrupt_states+0x73>
    15c1:	e8 7a fc ff ff       	call   1240 <__gnat_rcheck_CE_Overflow_Check@plt>
    15c6:	89 d0                	mov    eax,edx
    15c8:	89 45 c4             	mov    DWORD PTR [rbp-0x3c],eax
    15cb:	4c 8d 25 6b 02 00 00 	lea    r12,[rip+0x26b]        # 183d <ada_main__local_interrupt_states+0x84>
    15d2:	4c 8d 2d 87 02 00 00 	lea    r13,[rip+0x287]        # 1860 <ada_main__local_interrupt_states+0xa7>
    15d9:	4c 89 e1             	mov    rcx,r12
    15dc:	4c 89 eb             	mov    rbx,r13
    15df:	4c 89 e0             	mov    rax,r12
    15e2:	4c 89 ea             	mov    rdx,r13
    15e5:	48 89 d0             	mov    rax,rdx
    15e8:	48 89 cf             	mov    rdi,rcx
    15eb:	48 89 c6             	mov    rsi,rax
    15ee:	e8 3d fc ff ff       	call   1230 <gnat__io__put__6@plt>
    15f3:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
    15f6:	89 c7                	mov    edi,eax
    15f8:	e8 13 fc ff ff       	call   1210 <gnat__io__put__2@plt>
    15fd:	bf 01 00 00 00       	mov    edi,0x1
    1602:	e8 19 fc ff ff       	call   1220 <gnat__io__new_line__2@plt>
    1607:	90                   	nop
    1608:	48 83 c4 18          	add    rsp,0x18
    160c:	5b                   	pop    rbx
    160d:	41 5c                	pop    r12
    160f:	41 5d                	pop    r13
    1611:	41 5e                	pop    r14
    1613:	41 5f                	pop    r15
    1615:	5d                   	pop    rbp
    1616:	c3                   	ret    
    1617:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    161e:	00 00 

0000000000001620 <__libc_csu_init>:
    1620:	41 57                	push   r15
    1622:	41 56                	push   r14
    1624:	49 89 d7             	mov    r15,rdx
    1627:	41 55                	push   r13
    1629:	41 54                	push   r12
    162b:	4c 8d 25 06 07 20 00 	lea    r12,[rip+0x200706]        # 201d38 <__frame_dummy_init_array_entry>
    1632:	55                   	push   rbp
    1633:	48 8d 2d 06 07 20 00 	lea    rbp,[rip+0x200706]        # 201d40 <__init_array_end>
    163a:	53                   	push   rbx
    163b:	41 89 fd             	mov    r13d,edi
    163e:	49 89 f6             	mov    r14,rsi
    1641:	4c 29 e5             	sub    rbp,r12
    1644:	48 83 ec 08          	sub    rsp,0x8
    1648:	48 c1 fd 03          	sar    rbp,0x3
    164c:	e8 f7 fa ff ff       	call   1148 <_init>
    1651:	48 85 ed             	test   rbp,rbp
    1654:	74 20                	je     1676 <__libc_csu_init+0x56>
    1656:	31 db                	xor    ebx,ebx
    1658:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    165f:	00 
    1660:	4c 89 fa             	mov    rdx,r15
    1663:	4c 89 f6             	mov    rsi,r14
    1666:	44 89 ef             	mov    edi,r13d
    1669:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
    166d:	48 83 c3 01          	add    rbx,0x1
    1671:	48 39 dd             	cmp    rbp,rbx
    1674:	75 ea                	jne    1660 <__libc_csu_init+0x40>
    1676:	48 83 c4 08          	add    rsp,0x8
    167a:	5b                   	pop    rbx
    167b:	5d                   	pop    rbp
    167c:	41 5c                	pop    r12
    167e:	41 5d                	pop    r13
    1680:	41 5e                	pop    r14
    1682:	41 5f                	pop    r15
    1684:	c3                   	ret    
    1685:	90                   	nop
    1686:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
    168d:	00 00 00 

0000000000001690 <__libc_csu_fini>:
    1690:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000001694 <_fini>:
    1694:	48 83 ec 08          	sub    rsp,0x8
    1698:	48 83 c4 08          	add    rsp,0x8
    169c:	c3                   	ret    

Disassembly of section .rodata:

00000000000016a0 <_IO_stdin_used>:
    16a0:	01 00                	add    DWORD PTR [rax],eax
    16a2:	02 00                	add    al,BYTE PTR [rax]
	...

00000000000016b0 <__gnat_version>:
    16b0:	47                   	rex.RXB
    16b1:	4e                   	rex.WRX
    16b2:	41 54                	push   r12
    16b4:	20 56 65             	and    BYTE PTR [rsi+0x65],dl
    16b7:	72 73                	jb     172c <system__secondary_stackB>
    16b9:	69 6f 6e 3a 20 37 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37203a
    16c0:	33 2e                	xor    ebp,DWORD PTR [rsi]
    16c2:	30 00                	xor    BYTE PTR [rax],al
	...

00000000000016d0 <__gnat_ada_main_program_name>:
    16d0:	5f                   	pop    rdi
    16d1:	61                   	(bad)  
    16d2:	64 61                	fs (bad) 
    16d4:	5f                   	pop    rdi
    16d5:	61                   	(bad)  
    16d6:	64 64 5f             	fs fs pop rdi
    16d9:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
    16e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16e1:	00 00                	add    BYTE PTR [rax],al
	...

00000000000016e4 <add_int_w_ioB>:
    16e4:	31 2a                	xor    DWORD PTR [rdx],ebp
    16e6:	70 1c                	jo     1704 <system__memoryS>

00000000000016e8 <system__standard_libraryB>:
    16e8:	0e                   	(bad)  
    16e9:	93                   	xchg   ebx,eax
    16ea:	df b6        	fbstp  TBYTE PTR [rsi+0x7ec093d3]

00000000000016ec <system__standard_libraryS>:
    16ec:	d3 93 c0 7e      	rcl    DWORD PTR [rbx-0x2d0e8140],cl

00000000000016f0 <gnatS>:
    16f0:	f1                   	icebp  
    16f1:	d2 2a                	shr    BYTE PTR [rdx],cl
    16f3:	fd                   	std    

00000000000016f4 <gnat__ioB>:
    16f4:	f5                   	cmc    
    16f5:	02 81 b4       	add    al,BYTE PTR [rcx+0x27e843b4]

00000000000016f8 <gnat__ioS>:
    16f8:	43 e8 27 62      	rex.XB call ffffffffec047925 <_end+0xffffffffebe457fd>

00000000000016fc <systemS>:
    16fc:	04 ec                	add    al,0xec
    16fe:	35 46          	xor    eax,0x35900546

0000000000001700 <system__memoryB>:
    1700:	05 90 35 a6        	add    eax,0x30a63590

0000000000001704 <system__memoryS>:
    1704:	30 8a 48 1f      	xor    BYTE PTR [rdx+0x6fda1f48],cl

0000000000001708 <ada__exceptionsB>:
    1708:	da 6f 32             	fisubr DWORD PTR [rdi+0x32]
    170b:	c2               	ret    0xa13f

000000000000170c <ada__exceptionsS>:
    170c:	3f                   	(bad)  
    170d:	a1 98 6e     	movabs eax,ds:0xe6a976789da16e98
    1714:	  

0000000000001710 <adaS>:
    1710:	a1 9d 78 76    	movabs eax,ds:0x2ee947e6a976789d
    1717:	  

0000000000001714 <ada__exceptions__last_chance_handlerB>:
    1714:	a9 e6 47 e9        	test   eax,0x2ee947e6

0000000000001718 <ada__exceptions__last_chance_handlerS>:
    1718:	2e 55                	cs push rbp
    171a:	e5 41                	in     eax,0x41

000000000000171c <system__soft_linksB>:
    171c:	b8 85 77 4e        	mov    eax,0x514e7785

0000000000001720 <system__soft_linksS>:
    1720:	51                   	push   rcx
    1721:	34 b1                	xor    al,0xb1
    1723:	d8                 	fcom   DWORD PTR [rdi]

0000000000001724 <system__parametersB>:
    1724:	17                   	(bad)  
    1725:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1726:	1d b0          	sbb    eax,0x1fe17bb0

0000000000001728 <system__parametersS>:
    1728:	7b e1                	jnp    170b <ada__exceptionsB+0x3>
    172a:	1f                   	(bad)  
    172b:	38                 	cmp    ch,ah

000000000000172c <system__secondary_stackB>:
    172c:	e5 09                	in     eax,0x9
    172e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    172f:	30               	xor    BYTE PTR [rsi+0x13],bh

0000000000001730 <system__secondary_stackS>:
    1730:	7e 13                	jle    1745 <system__exception_tableB+0x1>
    1732:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1733:	fc                   	cld    

0000000000001734 <system__storage_elementsB>:
    1734:	68 f4 03 f1        	push   0xf103f4

0000000000001738 <system__storage_elementsS>:
    1738:	00 a6 f6 6b      	add    BYTE PTR [rsi+0x7d1e6bf6],ah

000000000000173c <system__stack_checkingB>:
    173c:	1e                   	(bad)  
    173d:	7d 83                	jge    16c2 <__gnat_version+0x12>
    173f:	41                 	rex.B in al,dx

0000000000001740 <system__stack_checkingS>:
    1740:	ec                   	in     al,dx
    1741:	87 8a c8       	xchg   DWORD PTR [rdx-0x5bb70038],ecx

0000000000001744 <system__exception_tableB>:
    1744:	ff 48 a4             	dec    DWORD PTR [rax-0x5c]
    1747:	87               	xchg   DWORD PTR [rsi-0x7b],eax

0000000000001748 <system__exception_tableS>:
    1748:	46 85 9b 1b    	rex.RX test DWORD PTR [rbx+0x4af0201b],r11d

000000000000174c <system__exceptionsB>:
    174c:	20 f0                	and    al,dh
    174e:	4a ce                	rex.WX (bad) 

0000000000001750 <system__exceptionsS>:
    1750:	f2 81 56 2e    	repnz adc DWORD PTR [rsi+0x2e],0x843d48dc
    1757:	 

0000000000001754 <system__exceptions__machineS>:
    1754:	dc 48 3d             	fmul   QWORD PTR [rax+0x3d]
    1757:	84                 	test   ah,bh

0000000000001758 <system__exceptions_debugB>:
    1758:	fc                   	cld    
    1759:	63 05 aa       	movsxd eax,DWORD PTR [rip+0xffffffffbf15c0aa]        # ffffffffbf15d809 <_end+0xffffffffbef5b6e1>

000000000000175c <system__exceptions_debugS>:
    175c:	c0 15 bf 38    	rcl    BYTE PTR [rip+0xffffffff880238bf],0x2f        # ffffffff88025022 <_end+0xffffffff87e22efa>

0000000000001760 <system__img_intB>:
    1760:	02 88 2f 6c      	add    cl,BYTE PTR [rax+0xcc66c2f]

0000000000001764 <system__img_intS>:
    1764:	c6                   	(bad)  
    1765:	0c ee                	or     al,0xee
    1767:	44                 	rex.R (bad) 

0000000000001768 <system__tracebackB>:
    1768:	17                   	(bad)  
    1769:	8c df                	mov    edi,ds
    176b:	39                 	cmp    eax,eax

000000000000176c <system__tracebackS>:
    176c:	c0 32 17             	shl    BYTE PTR [rdx],0x17
    176f:	18         	sbb    BYTE PTR [rip+0x749ed495],ah        # 749eec0a <_end+0x747ecae2>

0000000000001770 <system__traceback_entriesB>:
    1770:	25 95 d4 9e        	and    eax,0x749ed495

0000000000001774 <system__traceback_entriesS>:
    1774:	74 1a                	je     1790 <system__wch_conB>
    1776:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1777:	46                   	rex.RX

0000000000001778 <system__traceback__symbolicB>:
    1778:	f2 10 d2             	repnz adc dl,dl
    177b:	6f                   	outs   dx,DWORD PTR ds:[rsi]

000000000000177c <system__traceback__symbolicS>:
    177c:	7a f6                	jp     1774 <system__traceback_entriesS>
    177e:	19 dd                	sbb    ebp,ebx

0000000000001780 <ada__exceptions__tracebackB>:
    1780:	88 9d 1f 70      	mov    BYTE PTR [rbp+0x5e75701f],bl

0000000000001784 <ada__exceptions__tracebackS>:
    1784:	75 5e                	jne    17e4 <ada_main__local_interrupt_states+0x2b>
    1786:	24 20                	and    al,0x20

0000000000001788 <system__address_imageB>:
    1788:	d3 b3 00 9f      	shl    DWORD PTR [rbx+0x713e9f00],cl

000000000000178c <system__address_imageS>:
    178c:	3e 71 d9             	ds jno 1768 <system__tracebackB>
    178f:	e7                 	out    0x17,eax

0000000000001790 <system__wch_conB>:
    1790:	17                   	(bad)  
    1791:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1792:	33 8c      	xor    ecx,DWORD PTR [rsi+rdx*8+0x405d48ce]

0000000000001794 <system__wch_conS>:
    1794:	d6                   	(bad)  
    1795:	ce                   	(bad)  
    1796:	48 5d                	rex.W pop rbp

0000000000001798 <system__wch_stwB>:
    1798:	40 e8 21 97      	rex call ffffffffe2d7aebf <_end+0xffffffffe2b78d97>

000000000000179c <system__wch_stwS>:
    179c:	d7                   	xlat   BYTE PTR ds:[rbx]
    179d:	e2 59                	loop   17f8 <ada_main__local_interrupt_states+0x3f>
    179f:	70                 	jo     173d <system__stack_checkingB+0x1>

00000000000017a0 <system__wch_cnvB>:
    17a0:	9c                   	pushf  
    17a1:	67 31 a8     	xor    DWORD PTR [eax+0x52ff7425],ebp

00000000000017a4 <system__wch_cnvS>:
    17a4:	25 74 ff 52        	and    eax,0x6852ff74

00000000000017a8 <interfacesS>:
    17a8:	68 52 b5 5a        	push   0xffffffffb65ab552

00000000000017ac <system__wch_jisB>:
    17ac:	b6 fd                	mov    dh,0xfd
    17ae:	e6 ec                	out    0xec,al

00000000000017b0 <system__wch_jisS>:
    17b0:	04 6d                	add    al,0x6d
    17b2:	8f                   	(bad)  
    17b3:	d2                 	ror    BYTE PTR [rdx],cl

00000000000017b4 <system__crtlS>:
    17b4:	0a 3a                	or     bh,BYTE PTR [rdx]
    17b6:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    17b7:	36               	add    BYTE PTR ss:[rax],al

00000000000017b8 <ada_main__local_priority_specific_dispatching>:
	...

00000000000017b9 <ada_main__local_interrupt_states>:
    17b9:	00 00                	add    BYTE PTR [rax],al
    17bb:	00 00                	add    BYTE PTR [rax],al
    17bd:	00 00                	add    BYTE PTR [rax],al
    17bf:	00 50 6c             	add    BYTE PTR [rax+0x6c],dl
    17c2:	65 61                	gs (bad) 
    17c4:	73 65                	jae    182b <ada_main__local_interrupt_states+0x72>
    17c6:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
    17c9:	74 65                	je     1830 <ada_main__local_interrupt_states+0x77>
    17cb:	72 20                	jb     17ed <ada_main__local_interrupt_states+0x34>
    17cd:	66 69 72 73 74 20    	imul   si,WORD PTR [rdx+0x73],0x2074
    17d3:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    17da:	20 6e 6f             	and    BYTE PTR [rsi+0x6f],ch
    17dd:	77 20                	ja     17ff <ada_main__local_interrupt_states+0x46>
    17df:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    17e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    17e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    17e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17e4:	77 65                	ja     184b <ada_main__local_interrupt_states+0x92>
    17e6:	64 20 62 79          	and    BYTE PTR fs:[rdx+0x79],ah
    17ea:	20 3c 43             	and    BYTE PTR [rbx+rax*2],bh
    17ed:	52                   	push   rdx
    17ee:	3e 20 2d 3e 20 00 00 	and    BYTE PTR ds:[rip+0x203e],ch        # 3833 <__FRAME_END__+0x1dff>
    17f5:	00 00                	add    BYTE PTR [rax],al
    17f7:	00 50 6c             	add    BYTE PTR [rax+0x6c],dl
    17fa:	65 61                	gs (bad) 
    17fc:	73 65                	jae    1863 <ada_main__local_interrupt_states+0xaa>
    17fe:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
    1801:	74 65                	je     1868 <__GNU_EH_FRAME_HDR>
    1803:	72 20                	jb     1825 <ada_main__local_interrupt_states+0x6c>
    1805:	73 65                	jae    186c <__GNU_EH_FRAME_HDR+0x4>
    1807:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    180a:	64 20 69 6e          	and    BYTE PTR fs:[rcx+0x6e],ch
    180e:	74 65                	je     1875 <__GNU_EH_FRAME_HDR+0xd>
    1810:	67 65 72 20          	addr32 gs jb 1834 <ada_main__local_interrupt_states+0x7b>
    1814:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1815:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1816:	77 20                	ja     1838 <ada_main__local_interrupt_states+0x7f>
    1818:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    181a:	6c                   	ins    BYTE PTR es:[rdi],dx
    181b:	6c                   	ins    BYTE PTR es:[rdi],dx
    181c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    181d:	77 65                	ja     1884 <__GNU_EH_FRAME_HDR+0x1c>
    181f:	64 20 62 79          	and    BYTE PTR fs:[rdx+0x79],ah
    1823:	20 3c 43             	and    BYTE PTR [rbx+rax*2],bh
    1826:	52                   	push   rdx
    1827:	3e 20 2d 3e 20 61 64 	and    BYTE PTR ds:[rip+0x6461203e],ch        # 6461386c <_end+0x64411744>
    182e:	64 5f                	fs pop rdi
    1830:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
    1837:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1838:	2e 61                	cs (bad) 
    183a:	64 62                	fs (bad) 
    183c:	00 54 68 65          	add    BYTE PTR [rax+rbp*2+0x65],dl
    1840:	20 73 75             	and    BYTE PTR [rbx+0x75],dh
    1843:	6d                   	ins    DWORD PTR es:[rdi],dx
    1844:	20 69 73             	and    BYTE PTR [rcx+0x73],ch
    1847:	20 3a                	and    BYTE PTR [rdx],bh
    1849:	20 00                	and    BYTE PTR [rax],al
    184b:	00 00                	add    BYTE PTR [rax],al
    184d:	00 00                	add    BYTE PTR [rax],al
    184f:	00 01                	add    BYTE PTR [rcx],al
    1851:	00 00                	add    BYTE PTR [rax],al
    1853:	00 33                	add    BYTE PTR [rbx],dh
    1855:	00 00                	add    BYTE PTR [rax],al
    1857:	00 01                	add    BYTE PTR [rcx],al
    1859:	00 00                	add    BYTE PTR [rax],al
    185b:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
    185e:	00 00                	add    BYTE PTR [rax],al
    1860:	01 00                	add    DWORD PTR [rax],eax
    1862:	00 00                	add    BYTE PTR [rax],al
    1864:	0d                   	.byte 0xd
    1865:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame_hdr:

0000000000001868 <__GNU_EH_FRAME_HDR>:
    1868:	01 1b                	add    DWORD PTR [rbx],ebx
    186a:	03 3b                	add    edi,DWORD PTR [rbx]
    186c:	54                   	push   rsp
    186d:	00 00                	add    BYTE PTR [rax],al
    186f:	00 09                	add    BYTE PTR [rcx],cl
    1871:	00 00                	add    BYTE PTR [rax],al
    1873:	00 f8                	add    al,bh
    1875:	f8                   	clc    
    1876:	ff                   	(bad)  
    1877:	ff a0 00 00 00 f8    	jmp    QWORD PTR [rax-0x8000000]
    187d:	f9                   	stc    
    187e:	ff                   	(bad)  
    187f:	ff c8                	dec    eax
    1881:	00 00                	add    BYTE PTR [rax],al
    1883:	00 08                	add    BYTE PTR [rax],cl
    1885:	fa                   	cli    
    1886:	ff                   	(bad)  
    1887:	ff 70 00             	push   QWORD PTR [rax+0x0]
    188a:	00 00                	add    BYTE PTR [rax],al
    188c:	12 fb                	adc    bh,bl
    188e:	ff                   	(bad)  
    188f:	ff e0                	jmp    rax
    1891:	00 00                	add    BYTE PTR [rax],al
    1893:	00 3c fb             	add    BYTE PTR [rbx+rdi*8],bh
    1896:	ff                   	(bad)  
    1897:	ff 00                	inc    DWORD PTR [rax]
    1899:	01 00                	add    DWORD PTR [rax],eax
    189b:	00 60 fc             	add    BYTE PTR [rax-0x4],ah
    189e:	ff                   	(bad)  
    189f:	ff 20                	jmp    QWORD PTR [rax]
    18a1:	01 00                	add    DWORD PTR [rax],eax
    18a3:	00 c6                	add    dh,al
    18a5:	fc                   	cld    
    18a6:	ff                   	(bad)  
    18a7:	ff 40 01             	inc    DWORD PTR [rax+0x1]
    18aa:	00 00                	add    BYTE PTR [rax],al
    18ac:	b8 fd ff ff 70       	mov    eax,0x70fffffd
    18b1:	01 00                	add    DWORD PTR [rax],eax
    18b3:	00 28                	add    BYTE PTR [rax],ch
    18b5:	fe                   	(bad)  
    18b6:	ff                   	(bad)  
    18b7:	ff                   	(bad)  
    18b8:	b8                   	.byte 0xb8
    18b9:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

00000000000018c0 <__FRAME_END__-0x174>:
    18c0:	14 00                	adc    al,0x0
    18c2:	00 00                	add    BYTE PTR [rax],al
    18c4:	00 00                	add    BYTE PTR [rax],al
    18c6:	00 00                	add    BYTE PTR [rax],al
    18c8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    18cb:	00 01                	add    BYTE PTR [rcx],al
    18cd:	78 10                	js     18df <__GNU_EH_FRAME_HDR+0x77>
    18cf:	01 1b                	add    DWORD PTR [rbx],ebx
    18d1:	0c 07                	or     al,0x7
    18d3:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
    18d9:	00 00                	add    BYTE PTR [rax],al
    18db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    18de:	00 00                	add    BYTE PTR [rax],al
    18e0:	90                   	nop
    18e1:	f9                   	stc    
    18e2:	ff                   	(bad)  
    18e3:	ff 2b                	jmp    FWORD PTR [rbx]
	...
    18ed:	00 00                	add    BYTE PTR [rax],al
    18ef:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    18f2:	00 00                	add    BYTE PTR [rax],al
    18f4:	00 00                	add    BYTE PTR [rax],al
    18f6:	00 00                	add    BYTE PTR [rax],al
    18f8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    18fb:	00 01                	add    BYTE PTR [rcx],al
    18fd:	78 10                	js     190f <__GNU_EH_FRAME_HDR+0xa7>
    18ff:	01 1b                	add    DWORD PTR [rbx],ebx
    1901:	0c 07                	or     al,0x7
    1903:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    1909:	00 00                	add    BYTE PTR [rax],al
    190b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    190e:	00 00                	add    BYTE PTR [rax],al
    1910:	50                   	push   rax
    1911:	f8                   	clc    
    1912:	ff                   	(bad)  
    1913:	ff 00                	inc    DWORD PTR [rax]
    1915:	01 00                	add    DWORD PTR [rax],eax
    1917:	00 00                	add    BYTE PTR [rax],al
    1919:	0e                   	(bad)  
    191a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    191d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    1920:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    1923:	80 00 3f             	add    BYTE PTR [rax],0x3f
    1926:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    1928:	2a 33                	sub    dh,BYTE PTR [rbx]
    192a:	24 22                	and    al,0x22
    192c:	00 00                	add    BYTE PTR [rax],al
    192e:	00 00                	add    BYTE PTR [rax],al
    1930:	14 00                	adc    al,0x0
    1932:	00 00                	add    BYTE PTR [rax],al
    1934:	44 00 00             	add    BYTE PTR [rax],r8b
    1937:	00 28                	add    BYTE PTR [rax],ch
    1939:	f9                   	stc    
    193a:	ff                   	(bad)  
    193b:	ff 08                	dec    DWORD PTR [rax]
	...
    1945:	00 00                	add    BYTE PTR [rax],al
    1947:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    194a:	00 00                	add    BYTE PTR [rax],al
    194c:	5c                   	pop    rsp
    194d:	00 00                	add    BYTE PTR [rax],al
    194f:	00 2a                	add    BYTE PTR [rdx],ch
    1951:	fa                   	cli    
    1952:	ff                   	(bad)  
    1953:	ff 29                	jmp    FWORD PTR [rcx]
    1955:	00 00                	add    BYTE PTR [rax],al
    1957:	00 00                	add    BYTE PTR [rax],al
    1959:	41 0e                	rex.B (bad) 
    195b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    1961:	64 0c 07             	fs or  al,0x7
    1964:	08 00                	or     BYTE PTR [rax],al
    1966:	00 00                	add    BYTE PTR [rax],al
    1968:	1c 00                	sbb    al,0x0
    196a:	00 00                	add    BYTE PTR [rax],al
    196c:	7c 00                	jl     196e <__GNU_EH_FRAME_HDR+0x106>
    196e:	00 00                	add    BYTE PTR [rax],al
    1970:	34 fa                	xor    al,0xfa
    1972:	ff                   	(bad)  
    1973:	ff 24 01             	jmp    QWORD PTR [rcx+rax*1]
    1976:	00 00                	add    BYTE PTR [rax],al
    1978:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    197b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    1981:	03 1f                	add    ebx,DWORD PTR [rdi]
    1983:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
    1986:	08 00                	or     BYTE PTR [rax],al
    1988:	1c 00                	sbb    al,0x0
    198a:	00 00                	add    BYTE PTR [rax],al
    198c:	9c                   	pushf  
    198d:	00 00                	add    BYTE PTR [rax],al
    198f:	00 38                	add    BYTE PTR [rax],bh
    1991:	fb                   	sti    
    1992:	ff                   	(bad)  
    1993:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    1996:	00 00                	add    BYTE PTR [rax],al
    1998:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    199b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    19a1:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
    19a4:	07                   	(bad)  
    19a5:	08 00                	or     BYTE PTR [rax],al
    19a7:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
    19aa:	00 00                	add    BYTE PTR [rax],al
    19ac:	bc 00 00 00 7e       	mov    esp,0x7e000000
    19b1:	fb                   	sti    
    19b2:	ff                   	(bad)  
    19b3:	ff                   	(bad)  
    19b4:	e9 00 00 00 00       	jmp    19b9 <__GNU_EH_FRAME_HDR+0x151>
    19b9:	41 0e                	rex.B (bad) 
    19bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    19c1:	4d 8f 03             	rex.WRB pop QWORD PTR [r11]
    19c4:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    19cb:	07                   	(bad)  
    19cc:	02 d7                	add    dl,bh
    19ce:	0c 07                	or     al,0x7
    19d0:	08 00                	or     BYTE PTR [rax],al
    19d2:	00 00                	add    BYTE PTR [rax],al
    19d4:	00 00                	add    BYTE PTR [rax],al
    19d6:	00 00                	add    BYTE PTR [rax],al
    19d8:	44 00 00             	add    BYTE PTR [rax],r8b
    19db:	00 ec                	add    ah,ch
    19dd:	00 00                	add    BYTE PTR [rax],al
    19df:	00 40 fc             	add    BYTE PTR [rax-0x4],al
    19e2:	ff                   	(bad)  
    19e3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
    19e6:	00 00                	add    BYTE PTR [rax],al
    19e8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
    19eb:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    19f1:	8e 03                	mov    es,WORD PTR [rbx]
    19f3:	45 0e                	rex.RB (bad) 
    19f5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    19fb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86302849 <_end+0xffffffff86100721>
    1a01:	06                   	(bad)  
    1a02:	48 0e                	rex.W (bad) 
    1a04:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
    1a0a:	72 0e                	jb     1a1a <__GNU_EH_FRAME_HDR+0x1b2>
    1a0c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    1a0f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    1a12:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    1a15:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    1a18:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    1a1b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    1a1e:	08 00                	or     BYTE PTR [rax],al
    1a20:	10 00                	adc    BYTE PTR [rax],al
    1a22:	00 00                	add    BYTE PTR [rax],al
    1a24:	34 01                	xor    al,0x1
    1a26:	00 00                	add    BYTE PTR [rax],al
    1a28:	68 fc ff ff 02       	push   0x2fffffc
    1a2d:	00 00                	add    BYTE PTR [rax],al
    1a2f:	00 00                	add    BYTE PTR [rax],al
    1a31:	00 00                	add    BYTE PTR [rax],al
	...

0000000000001a34 <__FRAME_END__>:
    1a34:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000201d38 <__frame_dummy_init_array_entry>:
  201d38:	70 13                	jo     201d4d <_DYNAMIC+0x5>
  201d3a:	00 00                	add    BYTE PTR [rax],al
  201d3c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000201d40 <__do_global_dtors_aux_fini_array_entry>:
  201d40:	30 13                	xor    BYTE PTR [rbx],dl
  201d42:	00 00                	add    BYTE PTR [rax],al
  201d44:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000201d48 <_DYNAMIC>:
  201d48:	01 00                	add    DWORD PTR [rax],eax
  201d4a:	00 00                	add    BYTE PTR [rax],al
  201d4c:	00 00                	add    BYTE PTR [rax],al
  201d4e:	00 00                	add    BYTE PTR [rax],al
  201d50:	01 00                	add    DWORD PTR [rax],eax
  201d52:	00 00                	add    BYTE PTR [rax],al
  201d54:	00 00                	add    BYTE PTR [rax],al
  201d56:	00 00                	add    BYTE PTR [rax],al
  201d58:	01 00                	add    DWORD PTR [rax],eax
  201d5a:	00 00                	add    BYTE PTR [rax],al
  201d5c:	00 00                	add    BYTE PTR [rax],al
  201d5e:	00 00                	add    BYTE PTR [rax],al
  201d60:	dd 03                	fld    QWORD PTR [rbx]
  201d62:	00 00                	add    BYTE PTR [rax],al
  201d64:	00 00                	add    BYTE PTR [rax],al
  201d66:	00 00                	add    BYTE PTR [rax],al
  201d68:	0c 00                	or     al,0x0
  201d6a:	00 00                	add    BYTE PTR [rax],al
  201d6c:	00 00                	add    BYTE PTR [rax],al
  201d6e:	00 00                	add    BYTE PTR [rax],al
  201d70:	48 11 00             	adc    QWORD PTR [rax],rax
  201d73:	00 00                	add    BYTE PTR [rax],al
  201d75:	00 00                	add    BYTE PTR [rax],al
  201d77:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 201d7d <_DYNAMIC+0x35>
  201d7d:	00 00                	add    BYTE PTR [rax],al
  201d7f:	00 94 16 00 00 00 00 	add    BYTE PTR [rsi+rdx*1+0x0],dl
  201d86:	00 00                	add    BYTE PTR [rax],al
  201d88:	19 00                	sbb    DWORD PTR [rax],eax
  201d8a:	00 00                	add    BYTE PTR [rax],al
  201d8c:	00 00                	add    BYTE PTR [rax],al
  201d8e:	00 00                	add    BYTE PTR [rax],al
  201d90:	38 1d 20 00 00 00    	cmp    BYTE PTR [rip+0x20],bl        # 201db6 <_DYNAMIC+0x6e>
  201d96:	00 00                	add    BYTE PTR [rax],al
  201d98:	1b 00                	sbb    eax,DWORD PTR [rax]
  201d9a:	00 00                	add    BYTE PTR [rax],al
  201d9c:	00 00                	add    BYTE PTR [rax],al
  201d9e:	00 00                	add    BYTE PTR [rax],al
  201da0:	08 00                	or     BYTE PTR [rax],al
  201da2:	00 00                	add    BYTE PTR [rax],al
  201da4:	00 00                	add    BYTE PTR [rax],al
  201da6:	00 00                	add    BYTE PTR [rax],al
  201da8:	1a 00                	sbb    al,BYTE PTR [rax]
  201daa:	00 00                	add    BYTE PTR [rax],al
  201dac:	00 00                	add    BYTE PTR [rax],al
  201dae:	00 00                	add    BYTE PTR [rax],al
  201db0:	40 1d 20 00 00 00    	rex sbb eax,0x20
  201db6:	00 00                	add    BYTE PTR [rax],al
  201db8:	1c 00                	sbb    al,0x0
  201dba:	00 00                	add    BYTE PTR [rax],al
  201dbc:	00 00                	add    BYTE PTR [rax],al
  201dbe:	00 00                	add    BYTE PTR [rax],al
  201dc0:	08 00                	or     BYTE PTR [rax],al
  201dc2:	00 00                	add    BYTE PTR [rax],al
  201dc4:	00 00                	add    BYTE PTR [rax],al
  201dc6:	00 00                	add    BYTE PTR [rax],al
  201dc8:	f5                   	cmc    
  201dc9:	fe                   	(bad)  
  201dca:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201dcd:	00 00                	add    BYTE PTR [rax],al
  201dcf:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  201dd5:	00 00                	add    BYTE PTR [rax],al
  201dd7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 201ddd <_DYNAMIC+0x95>
  201ddd:	00 00                	add    BYTE PTR [rax],al
  201ddf:	00 30                	add    BYTE PTR [rax],dh
  201de1:	08 00                	or     BYTE PTR [rax],al
  201de3:	00 00                	add    BYTE PTR [rax],al
  201de5:	00 00                	add    BYTE PTR [rax],al
  201de7:	00 06                	add    BYTE PTR [rsi],al
  201de9:	00 00                	add    BYTE PTR [rax],al
  201deb:	00 00                	add    BYTE PTR [rax],al
  201ded:	00 00                	add    BYTE PTR [rax],al
  201def:	00 80 03 00 00 00    	add    BYTE PTR [rax+0x3],al
  201df5:	00 00                	add    BYTE PTR [rax],al
  201df7:	00 0a                	add    BYTE PTR [rdx],cl
  201df9:	00 00                	add    BYTE PTR [rax],al
  201dfb:	00 00                	add    BYTE PTR [rax],al
  201dfd:	00 00                	add    BYTE PTR [rax],al
  201dff:	00 2c 04             	add    BYTE PTR [rsp+rax*1],ch
  201e02:	00 00                	add    BYTE PTR [rax],al
  201e04:	00 00                	add    BYTE PTR [rax],al
  201e06:	00 00                	add    BYTE PTR [rax],al
  201e08:	0b 00                	or     eax,DWORD PTR [rax]
  201e0a:	00 00                	add    BYTE PTR [rax],al
  201e0c:	00 00                	add    BYTE PTR [rax],al
  201e0e:	00 00                	add    BYTE PTR [rax],al
  201e10:	18 00                	sbb    BYTE PTR [rax],al
  201e12:	00 00                	add    BYTE PTR [rax],al
  201e14:	00 00                	add    BYTE PTR [rax],al
  201e16:	00 00                	add    BYTE PTR [rax],al
  201e18:	15 00 00 00 00       	adc    eax,0x0
	...
  201e25:	00 00                	add    BYTE PTR [rax],al
  201e27:	00 03                	add    BYTE PTR [rbx],al
  201e29:	00 00                	add    BYTE PTR [rax],al
  201e2b:	00 00                	add    BYTE PTR [rax],al
  201e2d:	00 00                	add    BYTE PTR [rax],al
  201e2f:	00 48 1f             	add    BYTE PTR [rax+0x1f],cl
  201e32:	20 00                	and    BYTE PTR [rax],al
  201e34:	00 00                	add    BYTE PTR [rax],al
  201e36:	00 00                	add    BYTE PTR [rax],al
  201e38:	02 00                	add    al,BYTE PTR [rax]
  201e3a:	00 00                	add    BYTE PTR [rax],al
  201e3c:	00 00                	add    BYTE PTR [rax],al
  201e3e:	00 00                	add    BYTE PTR [rax],al
  201e40:	68 01 00 00 00       	push   0x1
  201e45:	00 00                	add    BYTE PTR [rax],al
  201e47:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  201e4a:	00 00                	add    BYTE PTR [rax],al
  201e4c:	00 00                	add    BYTE PTR [rax],al
  201e4e:	00 00                	add    BYTE PTR [rax],al
  201e50:	07                   	(bad)  
  201e51:	00 00                	add    BYTE PTR [rax],al
  201e53:	00 00                	add    BYTE PTR [rax],al
  201e55:	00 00                	add    BYTE PTR [rax],al
  201e57:	00 17                	add    BYTE PTR [rdi],dl
  201e59:	00 00                	add    BYTE PTR [rax],al
  201e5b:	00 00                	add    BYTE PTR [rax],al
  201e5d:	00 00                	add    BYTE PTR [rax],al
  201e5f:	00 e0                	add    al,ah
  201e61:	0f 00 00             	sldt   WORD PTR [rax]
  201e64:	00 00                	add    BYTE PTR [rax],al
  201e66:	00 00                	add    BYTE PTR [rax],al
  201e68:	07                   	(bad)  
  201e69:	00 00                	add    BYTE PTR [rax],al
  201e6b:	00 00                	add    BYTE PTR [rax],al
  201e6d:	00 00                	add    BYTE PTR [rax],al
  201e6f:	00 e0                	add    al,ah
  201e71:	0c 00                	or     al,0x0
  201e73:	00 00                	add    BYTE PTR [rax],al
  201e75:	00 00                	add    BYTE PTR [rax],al
  201e77:	00 08                	add    BYTE PTR [rax],cl
	...
  201e81:	03 00                	add    eax,DWORD PTR [rax]
  201e83:	00 00                	add    BYTE PTR [rax],al
  201e85:	00 00                	add    BYTE PTR [rax],al
  201e87:	00 09                	add    BYTE PTR [rcx],cl
  201e89:	00 00                	add    BYTE PTR [rax],al
  201e8b:	00 00                	add    BYTE PTR [rax],al
  201e8d:	00 00                	add    BYTE PTR [rax],al
  201e8f:	00 18                	add    BYTE PTR [rax],bl
  201e91:	00 00                	add    BYTE PTR [rax],al
  201e93:	00 00                	add    BYTE PTR [rax],al
  201e95:	00 00                	add    BYTE PTR [rax],al
  201e97:	00 1e                	add    BYTE PTR [rsi],bl
  201e99:	00 00                	add    BYTE PTR [rax],al
  201e9b:	00 00                	add    BYTE PTR [rax],al
  201e9d:	00 00                	add    BYTE PTR [rax],al
  201e9f:	00 08                	add    BYTE PTR [rax],cl
  201ea1:	00 00                	add    BYTE PTR [rax],al
  201ea3:	00 00                	add    BYTE PTR [rax],al
  201ea5:	00 00                	add    BYTE PTR [rax],al
  201ea7:	00 fb                	add    bl,bh
  201ea9:	ff                   	(bad)  
  201eaa:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ead:	00 00                	add    BYTE PTR [rax],al
  201eaf:	00 01                	add    BYTE PTR [rcx],al
  201eb1:	00 00                	add    BYTE PTR [rax],al
  201eb3:	08 00                	or     BYTE PTR [rax],al
  201eb5:	00 00                	add    BYTE PTR [rax],al
  201eb7:	00 fe                	add    dh,bh
  201eb9:	ff                   	(bad)  
  201eba:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ebd:	00 00                	add    BYTE PTR [rax],al
  201ebf:	00 c0                	add    al,al
  201ec1:	0c 00                	or     al,0x0
  201ec3:	00 00                	add    BYTE PTR [rax],al
  201ec5:	00 00                	add    BYTE PTR [rax],al
  201ec7:	00 ff                	add    bh,bh
  201ec9:	ff                   	(bad)  
  201eca:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201ecd:	00 00                	add    BYTE PTR [rax],al
  201ecf:	00 01                	add    BYTE PTR [rcx],al
  201ed1:	00 00                	add    BYTE PTR [rax],al
  201ed3:	00 00                	add    BYTE PTR [rax],al
  201ed5:	00 00                	add    BYTE PTR [rax],al
  201ed7:	00 f0                	add    al,dh
  201ed9:	ff                   	(bad)  
  201eda:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201edd:	00 00                	add    BYTE PTR [rax],al
  201edf:	00 5c 0c 00          	add    BYTE PTR [rsp+rcx*1+0x0],bl
  201ee3:	00 00                	add    BYTE PTR [rax],al
  201ee5:	00 00                	add    BYTE PTR [rax],al
  201ee7:	00 f9                	add    cl,bh
  201ee9:	ff                   	(bad)  
  201eea:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  201eed:	00 00                	add    BYTE PTR [rax],al
  201eef:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000201f48 <_GLOBAL_OFFSET_TABLE_>:
  201f48:	48 1d 20 00 00 00    	sbb    rax,0x20
	...
  201f5e:	00 00                	add    BYTE PTR [rax],al
  201f60:	76 11                	jbe    201f73 <_GLOBAL_OFFSET_TABLE_+0x2b>
  201f62:	00 00                	add    BYTE PTR [rax],al
  201f64:	00 00                	add    BYTE PTR [rax],al
  201f66:	00 00                	add    BYTE PTR [rax],al
  201f68:	86 11                	xchg   BYTE PTR [rcx],dl
  201f6a:	00 00                	add    BYTE PTR [rax],al
  201f6c:	00 00                	add    BYTE PTR [rax],al
  201f6e:	00 00                	add    BYTE PTR [rax],al
  201f70:	96                   	xchg   esi,eax
  201f71:	11 00                	adc    DWORD PTR [rax],eax
  201f73:	00 00                	add    BYTE PTR [rax],al
  201f75:	00 00                	add    BYTE PTR [rax],al
  201f77:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
  201f7d:	00 00                	add    BYTE PTR [rax],al
  201f7f:	00 b6 11 00 00 00    	add    BYTE PTR [rsi+0x11],dh
  201f85:	00 00                	add    BYTE PTR [rax],al
  201f87:	00 c6                	add    dh,al
  201f89:	11 00                	adc    DWORD PTR [rax],eax
  201f8b:	00 00                	add    BYTE PTR [rax],al
  201f8d:	00 00                	add    BYTE PTR [rax],al
  201f8f:	00 d6                	add    dh,dl
  201f91:	11 00                	adc    DWORD PTR [rax],eax
  201f93:	00 00                	add    BYTE PTR [rax],al
  201f95:	00 00                	add    BYTE PTR [rax],al
  201f97:	00 e6                	add    dh,ah
  201f99:	11 00                	adc    DWORD PTR [rax],eax
  201f9b:	00 00                	add    BYTE PTR [rax],al
  201f9d:	00 00                	add    BYTE PTR [rax],al
  201f9f:	00 f6                	add    dh,dh
  201fa1:	11 00                	adc    DWORD PTR [rax],eax
  201fa3:	00 00                	add    BYTE PTR [rax],al
  201fa5:	00 00                	add    BYTE PTR [rax],al
  201fa7:	00 06                	add    BYTE PTR [rsi],al
  201fa9:	12 00                	adc    al,BYTE PTR [rax]
  201fab:	00 00                	add    BYTE PTR [rax],al
  201fad:	00 00                	add    BYTE PTR [rax],al
  201faf:	00 16                	add    BYTE PTR [rsi],dl
  201fb1:	12 00                	adc    al,BYTE PTR [rax]
  201fb3:	00 00                	add    BYTE PTR [rax],al
  201fb5:	00 00                	add    BYTE PTR [rax],al
  201fb7:	00 26                	add    BYTE PTR [rsi],ah
  201fb9:	12 00                	adc    al,BYTE PTR [rax]
  201fbb:	00 00                	add    BYTE PTR [rax],al
  201fbd:	00 00                	add    BYTE PTR [rax],al
  201fbf:	00 36                	add    BYTE PTR [rsi],dh
  201fc1:	12 00                	adc    al,BYTE PTR [rax]
  201fc3:	00 00                	add    BYTE PTR [rax],al
  201fc5:	00 00                	add    BYTE PTR [rax],al
  201fc7:	00 46 12             	add    BYTE PTR [rsi+0x12],al
  201fca:	00 00                	add    BYTE PTR [rax],al
  201fcc:	00 00                	add    BYTE PTR [rax],al
  201fce:	00 00                	add    BYTE PTR [rax],al
  201fd0:	56                   	push   rsi
  201fd1:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     BYTE PTR [rax],ah
  20200a:	20 00                	and    BYTE PTR [rax],al
  20200c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000202010 <ada_main_E>:
	...

0000000000202012 <ada_main__is_elaborated>:
	...

Disassembly of section .bss:

0000000000202020 <__gl_task_dispatching_policy>:
	...

0000000000202028 <system__secondary_stack_E>:
	...

0000000000202040 <system__soft_links_E>:
	...

0000000000202050 <gnat_envp>:
	...

0000000000202058 <__gl_interrupt_states>:
	...

0000000000202060 <__gnat_finalize_library_objects>:
	...

0000000000202068 <__gl_main_cpu>:
  202068:	00 00                	add    BYTE PTR [rax],al
	...

000000000020206c <__gl_locking_policy>:
  20206c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000202070 <__gl_time_slice_val>:
	...

0000000000202078 <gnat_exit_status>:
  202078:	00 00                	add    BYTE PTR [rax],al
	...

000000000020207c <__gl_leap_seconds_support>:
  20207c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000202080 <__gl_unreserve_all_interrupts>:
  202080:	00 00                	add    BYTE PTR [rax],al
	...

0000000000202084 <__gl_wc_encoding>:
  202084:	00 00                	add    BYTE PTR [rax],al
	...

0000000000202088 <gnat_argv>:
	...

0000000000202090 <__gl_queuing_policy>:
	...

00000000002020a0 <__gl_num_specific_dispatching>:
	...

00000000002020b0 <__gl_main_priority>:
	...

00000000002020b8 <__gl_priority_specific_dispatching>:
	...

00000000002020c0 <system__exceptions_E>:
	...

00000000002020e0 <__gl_detect_blocking>:
	...

0000000000202100 <gnat_argc>:
	...

0000000000202110 <__gl_num_interrupt_states>:
	...

0000000000202118 <system__exception_table_E>:
	...

0000000000202120 <__gl_default_stack_size>:
  202120:	00 00                	add    BYTE PTR [rax],al
	...

0000000000202124 <completed.7696>:
  202124:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x10d0>
   a:	74 75                	je     81 <_init-0x10c7>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62551621>
  17:	75 6e                	jne    87 <_init-0x10c1>
  19:	74 75                	je     90 <_init-0x10b8>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

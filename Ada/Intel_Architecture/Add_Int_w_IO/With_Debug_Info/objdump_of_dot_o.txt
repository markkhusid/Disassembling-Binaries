
b~add_int_w_io.o:     file format elf64-x86-64
b~add_int_w_io.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         000001b3  0000000000000000  0000000000000000  00000040  2**1
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000003  0000000000000000  0000000000000000  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  000001f7  2**0
                  ALLOC
  3 .rodata       0000010a  0000000000000000  0000000000000000  00000200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   0000076b  0000000000000000  0000000000000000  0000030a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_abbrev 000000f0  0000000000000000  0000000000000000  00000a75  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000030  0000000000000000  0000000000000000  00000b65  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_line   0000010c  0000000000000000  0000000000000000  00000b95  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_str    00000b8d  0000000000000000  0000000000000000  00000ca1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000002b  0000000000000000  0000000000000000  0000182e  2**0
                  CONTENTS, READONLY
 10 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00001859  2**0
                  CONTENTS, READONLY
 11 .eh_frame     00000078  0000000000000000  0000000000000000  00001860  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 b~add_int_w_io.adb
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000002 l     O .data	0000000000000001 ada_main__is_elaborated
0000000000000108 l     O .rodata	0000000000000001 ada_main__local_priority_specific_dispatching
0000000000000109 l     O .rodata	0000000000000001 ada_main__local_interrupt_states
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 g     F .text	0000000000000029 adafinal
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 __gnat_runtime_finalize
0000000000000000         *UND*	0000000000000000 system__standard_library__adafinal
000000000000002a g     F .text	0000000000000124 adainit
0000000000000000         *UND*	0000000000000000 __gl_main_priority
0000000000000000         *UND*	0000000000000000 __gl_time_slice_val
0000000000000000         *UND*	0000000000000000 __gl_wc_encoding
0000000000000000         *UND*	0000000000000000 __gl_locking_policy
0000000000000000         *UND*	0000000000000000 __gl_queuing_policy
0000000000000000         *UND*	0000000000000000 __gl_task_dispatching_policy
0000000000000000         *UND*	0000000000000000 __gl_priority_specific_dispatching
0000000000000000         *UND*	0000000000000000 __gl_num_specific_dispatching
0000000000000000         *UND*	0000000000000000 __gl_main_cpu
0000000000000000         *UND*	0000000000000000 __gl_interrupt_states
0000000000000000         *UND*	0000000000000000 __gl_num_interrupt_states
0000000000000000         *UND*	0000000000000000 __gl_unreserve_all_interrupts
0000000000000000         *UND*	0000000000000000 __gl_detect_blocking
0000000000000000         *UND*	0000000000000000 __gl_default_stack_size
0000000000000000         *UND*	0000000000000000 __gl_leap_seconds_support
0000000000000000         *UND*	0000000000000000 __gnat_runtime_initialize
0000000000000000         *UND*	0000000000000000 __gnat_finalize_library_objects
0000000000000000         *UND*	0000000000000000 system__soft_links___elabs
0000000000000000         *UND*	0000000000000000 system__exception_table___elabb
0000000000000000         *UND*	0000000000000000 system__exception_table_E
0000000000000000         *UND*	0000000000000000 system__exceptions___elabs
0000000000000000         *UND*	0000000000000000 system__exceptions_E
0000000000000000         *UND*	0000000000000000 system__soft_links___elabb
0000000000000000         *UND*	0000000000000000 system__soft_links_E
0000000000000000         *UND*	0000000000000000 system__secondary_stack___elabb
0000000000000000         *UND*	0000000000000000 system__secondary_stack_E
000000000000014e g     F .text	0000000000000065 main
0000000000000020 g     O .rodata	0000000000000012 __gnat_ada_main_program_name
0000000000000000         *UND*	0000000000000000 gnat_argc
0000000000000000         *UND*	0000000000000000 gnat_argv
0000000000000000         *UND*	0000000000000000 gnat_envp
0000000000000000         *UND*	0000000000000000 __gnat_initialize
0000000000000000         *UND*	0000000000000000 _ada_add_int_w_io
0000000000000000         *UND*	0000000000000000 __gnat_finalize
0000000000000000         *UND*	0000000000000000 gnat_exit_status
0000000000000000 g     O .data	0000000000000002 ada_main_E
0000000000000000 g     O .rodata	0000000000000014 __gnat_version
0000000000000034 g     O .rodata	0000000000000004 add_int_w_ioB
0000000000000038 g     O .rodata	0000000000000004 system__standard_libraryB
000000000000003c g     O .rodata	0000000000000004 system__standard_libraryS
0000000000000040 g     O .rodata	0000000000000004 gnatS
0000000000000044 g     O .rodata	0000000000000004 gnat__ioB
0000000000000048 g     O .rodata	0000000000000004 gnat__ioS
000000000000004c g     O .rodata	0000000000000004 systemS
0000000000000050 g     O .rodata	0000000000000004 system__memoryB
0000000000000054 g     O .rodata	0000000000000004 system__memoryS
0000000000000058 g     O .rodata	0000000000000004 ada__exceptionsB
000000000000005c g     O .rodata	0000000000000004 ada__exceptionsS
0000000000000060 g     O .rodata	0000000000000004 adaS
0000000000000064 g     O .rodata	0000000000000004 ada__exceptions__last_chance_handlerB
0000000000000068 g     O .rodata	0000000000000004 ada__exceptions__last_chance_handlerS
000000000000006c g     O .rodata	0000000000000004 system__soft_linksB
0000000000000070 g     O .rodata	0000000000000004 system__soft_linksS
0000000000000074 g     O .rodata	0000000000000004 system__parametersB
0000000000000078 g     O .rodata	0000000000000004 system__parametersS
000000000000007c g     O .rodata	0000000000000004 system__secondary_stackB
0000000000000080 g     O .rodata	0000000000000004 system__secondary_stackS
0000000000000084 g     O .rodata	0000000000000004 system__storage_elementsB
0000000000000088 g     O .rodata	0000000000000004 system__storage_elementsS
000000000000008c g     O .rodata	0000000000000004 system__stack_checkingB
0000000000000090 g     O .rodata	0000000000000004 system__stack_checkingS
0000000000000094 g     O .rodata	0000000000000004 system__exception_tableB
0000000000000098 g     O .rodata	0000000000000004 system__exception_tableS
000000000000009c g     O .rodata	0000000000000004 system__exceptionsB
00000000000000a0 g     O .rodata	0000000000000004 system__exceptionsS
00000000000000a4 g     O .rodata	0000000000000004 system__exceptions__machineS
00000000000000a8 g     O .rodata	0000000000000004 system__exceptions_debugB
00000000000000ac g     O .rodata	0000000000000004 system__exceptions_debugS
00000000000000b0 g     O .rodata	0000000000000004 system__img_intB
00000000000000b4 g     O .rodata	0000000000000004 system__img_intS
00000000000000b8 g     O .rodata	0000000000000004 system__tracebackB
00000000000000bc g     O .rodata	0000000000000004 system__tracebackS
00000000000000c0 g     O .rodata	0000000000000004 system__traceback_entriesB
00000000000000c4 g     O .rodata	0000000000000004 system__traceback_entriesS
00000000000000c8 g     O .rodata	0000000000000004 system__traceback__symbolicB
00000000000000cc g     O .rodata	0000000000000004 system__traceback__symbolicS
00000000000000d0 g     O .rodata	0000000000000004 ada__exceptions__tracebackB
00000000000000d4 g     O .rodata	0000000000000004 ada__exceptions__tracebackS
00000000000000d8 g     O .rodata	0000000000000004 system__address_imageB
00000000000000dc g     O .rodata	0000000000000004 system__address_imageS
00000000000000e0 g     O .rodata	0000000000000004 system__wch_conB
00000000000000e4 g     O .rodata	0000000000000004 system__wch_conS
00000000000000e8 g     O .rodata	0000000000000004 system__wch_stwB
00000000000000ec g     O .rodata	0000000000000004 system__wch_stwS
00000000000000f0 g     O .rodata	0000000000000004 system__wch_cnvB
00000000000000f4 g     O .rodata	0000000000000004 system__wch_cnvS
00000000000000f8 g     O .rodata	0000000000000004 interfacesS
00000000000000fc g     O .rodata	0000000000000004 system__wch_jisB
0000000000000100 g     O .rodata	0000000000000004 system__wch_jisS
0000000000000104 g     O .rodata	0000000000000004 system__crtlS


Contents of section .text:
 0000 554889e5 0fb60500 00000083 f00184c0  UH..............
 0010 7514c605 00000000 00e80000 0000e800  u...............
 0020 00000090 eb01905d c3905548 89e50fb6  .......]..UH....
 0030 05000000 0084c00f 850e0100 00c60500  ................
 0040 00000001 c7050000 0000ffff ffffc705  ................
 0050 00000000 ffffffff c6050000 000062c6  ..............b.
 0060 05000000 0020c605 00000000 20c60500  ..... ...... ...
 0070 00000020 488d0500 00000048 89050000  ... H......H....
 0080 0000c705 00000000 00000000 c7050000  ................
 0090 0000ffff ffff488d 05000000 00488905  ......H......H..
 00a0 00000000 c7050000 00000000 0000c705  ................
 00b0 00000000 00000000 c7050000 00000000  ................
 00c0 0000c705 00000000 ffffffff c7050000  ................
 00d0 00000000 0000bf01 000000e8 00000000  ................
 00e0 48c70500 00000000 000000e8 00000000  H...............
 00f0 e8000000 000fb705 00000000 83c00166  ...............f
 0100 89050000 0000e800 0000000f b7050000  ................
 0110 000083c0 01668905 00000000 e8000000  .....f..........
 0120 000fb705 00000000 83c00166 89050000  ...........f....
 0130 0000e800 0000000f b7050000 000083c0  ................
 0140 01668905 00000000 90eb0190 5dc35548  .f..........].UH
 0150 89e54883 ec30897d ec488975 e0488955  ..H..0.}.H.u.H.U
 0160 d8488d05 00000000 488945f0 8b45ec89  .H......H.E..E..
 0170 05000000 00488b45 e0488905 00000000  .....H.E.H......
 0180 488b45d8 48890500 00000048 8d45f848  H.E.H......H.E.H
 0190 89c7e800 000000e8 00000000 e8000000  ................
 01a0 00e80000 0000e800 0000008b 05000000  ................
 01b0 00c9c3                               ...             
Contents of section .data:
 0000 000000                               ...             
Contents of section .rodata:
 0000 474e4154 20566572 73696f6e 3a20372e  GNAT Version: 7.
 0010 332e3000 00000000 00000000 00000000  3.0.............
 0020 5f616461 5f616464 5f696e74 5f775f69  _ada_add_int_w_i
 0030 6f000000 312a701c 0e93dfb6 d393c07e  o...1*p........~
 0040 f1d22afd f50281b4 43e82762 04ec3546  ..*.....C.'b..5F
 0050 059035a6 308a481f da6f32c2 3fa1986e  ..5.0.H..o2.?..n
 0060 a19d7876 a9e647e9 2e55e541 b885774e  ..xv..G..U.A..wN
 0070 5134b1d8 17ad1db0 7be11f38 e509ad30  Q4......{..8...0
 0080 7e13a7fc 68f403f1 00a6f66b 1e7d8341  ~...h......k.}.A
 0090 ec878ac8 ff48a487 46859b1b 20f04ace  .....H..F... .J.
 00a0 f281562e dc483d84 fc6305aa c015bf38  ..V..H=..c.....8
 00b0 02882f6c c60cee44 178cdf39 c0321718  ../l...D...9.2..
 00c0 2595d49e 741a6e46 f210d26f 7af619dd  %...t.nF...oz...
 00d0 889d1f70 755e2420 d3b3009f 3e71d9e7  ...pu^$ ....>q..
 00e0 17a5338c d6ce485d 40e82197 d7e25970  ..3...H]@.!...Yp
 00f0 9c6731a8 2574ff52 6852b55a b6fde6ec  .g1.%t.RhR.Z....
 0100 046d8fd2 0a3aa436 0000               .m...:.6..      
Contents of section .debug_info:
 0000 67070000 04000000 00000801 00000000  g...............
 0010 0d000000 00000000 00000000 00000000  ................
 0020 00b30100 00000000 00000000 00020000  ................
 0030 00004d00 00004100 00000346 00000014  ..M...A....F....
 0040 00042d00 00000504 05000000 00050108  ..-.............
 0050 00000000 02000000 004d0000 00680000  .........M...h..
 0060 00034600 00001200 04540000 00050407  ..F......T......
 0070 00000000 066d0000 00020000 00004d00  .....m........M.
 0080 00008d00 00000346 00000000 00070000  .......F........
 0090 00000101 0ea40000 00084600 010e7900  ..........F...y.
 00a0 00000000 048d0000 00020000 00004d00  ..............M.
 00b0 0000bd00 00000346 00000000 00070000  .......F........
 00c0 00000101 0fd40000 00084600 010fa900  ..........F.....
 00d0 00000000 04bd0000 00050807 00000000  ................
 00e0 09d90000 000a0000 00000211 00000000  ................
 00f0 41000000 09030000 00000000 00000a00  A...............
 0100 00000002 15000000 00680000 00090300  .........h......
 0110 00000000 0000000a 00000000 02260000  .............&..
 0120 00007400 00000903 00000000 00000000  ..t.............
 0130 0a000000 00022800 00000074 00000009  ......(....t....
 0140 03000000 00000000 000a0000 0000022a  ...............*
 0150 00000000 74000000 09030000 00000000  ....t...........
 0160 00000a00 00000002 2c000000 00740000  ........,....t..
 0170 00090300 00000000 0000000a 00000000  ................
 0180 022e0000 00007400 00000903 00000000  ......t.........
 0190 00000000 0a000000 00023000 00000074  ..........0....t
 01a0 00000009 03000000 00000000 000a0000  ................
 01b0 00000232 00000000 74000000 09030000  ...2....t.......
 01c0 00000000 00000a00 00000002 34000000  ............4...
 01d0 00740000 00090300 00000000 0000000a  .t..............
 01e0 00000000 02360000 00007400 00000903  .....6....t.....
 01f0 00000000 00000000 0a000000 00023800  ..............8.
 0200 00000074 00000009 03000000 00000000  ...t............
 0210 000a0000 0000023a 00000000 74000000  .......:....t...
 0220 09030000 00000000 00000a00 00000002  ................
 0230 3c000000 00740000 00090300 00000000  <....t..........
 0240 0000000a 00000000 023e0000 00007400  .........>....t.
 0250 00000903 00000000 00000000 0a000000  ................
 0260 00024000 00000074 00000009 03000000  ..@....t........
 0270 00000000 000a0000 00000242 00000000  ...........B....
 0280 74000000 09030000 00000000 00000a00  t...............
 0290 00000002 44000000 00740000 00090300  ....D....t......
 02a0 00000000 0000000a 00000000 02460000  .............F..
 02b0 00007400 00000903 00000000 00000000  ..t.............
 02c0 0a000000 00024800 00000074 00000009  ......H....t....
 02d0 03000000 00000000 000a0000 0000024a  ...............J
 02e0 00000000 74000000 09030000 00000000  ....t...........
 02f0 00000a00 00000002 4c000000 00740000  ........L....t..
 0300 00090300 00000000 0000000a 00000000  ................
 0310 024e0000 00007400 00000903 00000000  .N....t.........
 0320 00000000 0a000000 00025000 00000074  ..........P....t
 0330 00000009 03000000 00000000 000a0000  ................
 0340 00000252 00000000 74000000 09030000  ...R....t.......
 0350 00000000 00000a00 00000002 54000000  ............T...
 0360 00740000 00090300 00000000 0000000a  .t..............
 0370 00000000 02560000 00007400 00000903  .....V....t.....
 0380 00000000 00000000 0a000000 00025800  ..............X.
 0390 00000074 00000009 03000000 00000000  ...t............
 03a0 000a0000 0000025a 00000000 74000000  .......Z....t...
 03b0 09030000 00000000 00000a00 00000002  ................
 03c0 5c000000 00740000 00090300 00000000  \....t..........
 03d0 0000000a 00000000 025e0000 00007400  .........^....t.
 03e0 00000903 00000000 00000000 0a000000  ................
 03f0 00026000 00000074 00000009 03000000  ..`....t........
 0400 00000000 000a0000 00000262 00000000  ...........b....
 0410 74000000 09030000 00000000 00000a00  t...............
 0420 00000002 64000000 00740000 00090300  ....d....t......
 0430 00000000 0000000a 00000000 02660000  .............f..
 0440 00007400 00000903 00000000 00000000  ..t.............
 0450 0a000000 00026800 00000074 00000009  ......h....t....
 0460 03000000 00000000 000a0000 0000026a  ...............j
 0470 00000000 74000000 09030000 00000000  ....t...........
 0480 00000a00 00000002 6c000000 00740000  ........l....t..
 0490 00090300 00000000 0000000a 00000000  ................
 04a0 026e0000 00007400 00000903 00000000  .n....t.........
 04b0 00000000 0a000000 00027000 00000074  ..........p....t
 04c0 00000009 03000000 00000000 000a0000  ................
 04d0 00000272 00000000 74000000 09030000  ...r....t.......
 04e0 00000000 00000a00 00000002 74000000  ............t...
 04f0 00740000 00090300 00000000 0000000a  .t..............
 0500 00000000 02760000 00007400 00000903  .....v....t.....
 0510 00000000 00000000 0a000000 00027800  ..............x.
 0520 00000074 00000009 03000000 00000000  ...t............
 0530 000a0000 0000027a 00000000 74000000  .......z....t...
 0540 09030000 00000000 00000a00 00000002  ................
 0550 7c000000 00740000 00090300 00000000  |....t..........
 0560 0000000a 00000000 027e0000 00007400  .........~....t.
 0570 00000903 00000000 00000000 0a000000  ................
 0580 00028000 00000074 00000009 03000000  .......t........
 0590 00000000 000a0000 00000282 00000000  ................
 05a0 74000000 09030000 00000000 00000a00  t...............
 05b0 00000002 84000000 00740000 00090300  .........t......
 05c0 00000000 0000000a 00000000 02860000  ................
 05d0 00007400 00000903 00000000 00000000  ..t.............
 05e0 0a000000 00028800 00000074 00000009  ...........t....
 05f0 03000000 00000000 000a0000 0000028a  ................
 0600 00000000 74000000 09030000 00000000  ....t...........
 0610 00000a00 00000002 8c000000 00740000  .............t..
 0620 00090300 00000000 0000000a 00000000  ................
 0630 028e0000 00007400 00000903 00000000  ......t.........
 0640 00000000 0b000000 00010ea4 00000009  ................
 0650 03000000 00000000 000b0000 0000010f  ................
 0660 d4000000 09030000 00000000 00000b00  ................
 0670 00000001 11830600 00090300 00000000  ................
 0680 00000005 01020000 00000c00 00000001  ................
 0690 741d0700 00000000 00000000 00650000  t............e..
 06a0 00000000 00019c1d 0700000d 00000000  ................
 06b0 021f2407 00000291 5c0d0000 00000220  ..$.....\...... 
 06c0 2b070000 0291500d 00000000 02212b07  +.....P......!+.
 06d0 00000291 48020000 00001d07 0000e906  ....H...........
 06e0 00000346 00000002 00070000 00000801  ...F............
 06f0 7f000700 00084600 017fd506 00000000  ......F.........
 0700 0e736568 00017fe9 06000002 91680b00  .seh.........h..
 0710 00000001 81e00000 00029160 000f0405  ...........`....
 0720 00000000 041d0700 00100806 29070000  ............)...
 0730 11000000 00012500 00000000 00000000  ......%.........
 0740 00000024 01000000 00000001 9c110000  ...$............
 0750 00000113 00000000 00000000 00000000  ................
 0760 29000000 00000000 019c00             )..........     
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17000002 0101030e 49130113 00000321  ........I......!
 0020 0049132f 0d000004 26004913 34190000  .I./....&.I.4...
 0030 0524000b 0b3e0b03 0e000006 26004913  .$...>......&.I.
 0040 00000713 01030e0b 0b3a0b3b 0b341901  .........:.;.4..
 0050 13000008 0d000308 3a0b3b0b 4913380b  ........:.;.I.8.
 0060 00000935 00491300 000a3400 030e3a0b  ...5.I....4...:.
 0070 3b0b6e0e 49133f19 02180000 0b340003  ;.n.I.?......4..
 0080 0e3a0b3b 0b491302 1800000c 2e013f19  .:.;.I........?.
 0090 030e3a0b 3b0b4913 11011207 40189642  ..:.;.I.....@..B
 00a0 19011300 000d0500 030e3a0b 3b0b4913  ..........:.;.I.
 00b0 02180000 0e340003 083a0b3b 0b491302  .....4...:.;.I..
 00c0 1800000f 24000b0b 3e0b030e 34190000  ....$...>...4...
 00d0 100f000b 0b000011 2e003f19 030e3a0b  ..........?...:.
 00e0 3b0b6e0e 11011207 40189642 19000000  ;.n.....@..B....
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 00000000 00000000 b3010000 00000000  ................
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_line:
 0000 08010000 0200af00 00000101 fb0e0d00  ................
 0010 01010101 00000001 0000012f 686f6d65  .........../home
 0020 2f756275 6e74752f 456e6769 6e656572  /ubuntu/Engineer
 0030 696e672f 50726f67 72616d6d 696e672f  ing/Programming/
 0040 44697361 7373656d 626c696e 672d4269  Disassembling-Bi
 0050 6e617269 65732f41 64612f49 6e74656c  naries/Ada/Intel
 0060 5f417263 68697465 63747572 652f4164  _Architecture/Ad
 0070 645f496e 745f775f 494f2f57 6974685f  d_Int_w_IO/With_
 0080 44656275 675f496e 666f0000 627e6164  Debug_Info..b~ad
 0090 645f696e 745f775f 696f2e61 64620001  d_int_w_io.adb..
 00a0 0000627e 6164645f 696e745f 775f696f  ..b~add_int_w_io
 00b0 2e616473 00010000 00000902 00000000  .ads............
 00c0 00000000 03120152 d9755959 37254003  .......R.uYY7%@.
 00d0 284ae775 9f9f7575 7575d89f 9fd79f9f  (J.u..uuuu......
 00e0 9f9fa0a0 ae595908 13590813 59081359  .....YY..Y..Y..Y
 00f0 0813035f 3c032120 33030d08 2eb091ad  ..._<.! 3.......
 0100 aebb5959 59596702 02000101           ..YYYYg.....    
Contents of section .debug_str:
 0000 73797374 656d5f5f 7763685f 6a697342  system__wch_jisB
 0010 00616461 5f6d6169 6e5f5f54 6c6f6361  .ada_main__Tloca
 0020 6c5f696e 74657272 7570745f 73746174  l_interrupt_stat
 0030 65735300 73797374 656d5f5f 6d656d6f  esS.system__memo
 0040 72794200 61726776 00616461 5f6d6169  ryB.argv.ada_mai
 0050 6e5f5f75 30303034 39006164 615f6d61  n__u00049.ada_ma
 0060 696e5f5f 75303030 34330073 79737465  in__u00043.syste
 0070 6d5f5f73 746f7261 67655f65 6c656d65  m__storage_eleme
 0080 6e747353 00616461 5f6d6169 6e5f5f75  ntsS.ada_main__u
 0090 30303032 31007379 7374656d 5f5f7365  00021.system__se
 00a0 636f6e64 6172795f 73746163 6b53002f  condary_stackS./
 00b0 686f6d65 2f756275 6e74752f 456e6769  home/ubuntu/Engi
 00c0 6e656572 696e672f 50726f67 72616d6d  neering/Programm
 00d0 696e672f 44697361 7373656d 626c696e  ing/Disassemblin
 00e0 672d4269 6e617269 65732f41 64612f49  g-Binaries/Ada/I
 00f0 6e74656c 5f417263 68697465 63747572  ntel_Architectur
 0100 652f4164 645f496e 745f775f 494f2f57  e/Add_Int_w_IO/W
 0110 6974685f 44656275 675f496e 666f0061  ith_Debug_Info.a
 0120 64615f6d 61696e5f 5f6c6f63 616c5f70  da_main__local_p
 0130 72696f72 6974795f 73706563 69666963  riority_specific
 0140 5f646973 70617463 68696e67 00616461  _dispatching.ada
 0150 5f6d6169 6e5f5f75 30303032 3400696e  _main__u00024.in
 0160 74656765 72007379 7374656d 5f5f7763  teger.system__wc
 0170 685f636f 6e530073 79737465 6d5f5f6d  h_conS.system__m
 0180 656d6f72 79530073 79737465 6d5f5f74  emoryS.system__t
 0190 72616365 6261636b 5f5f7379 6d626f6c  raceback__symbol
 01a0 69634200 73797374 656d5f5f 65786365  icB.system__exce
 01b0 7074696f 6e735f5f 6d616368 696e6553  ptions__machineS
 01c0 00737973 74656d5f 5f696d67 5f696e74  .system__img_int
 01d0 53007379 7374656d 5f5f6578 63657074  S.system__except
 01e0 696f6e73 5f646562 75674200 676e6174  ions_debugB.gnat
 01f0 5f5f696f 42007379 7374656d 5f5f7061  __ioB.system__pa
 0200 72616d65 74657273 53006164 615f6d61  rametersS.ada_ma
 0210 696e5f5f 75303030 30310061 64615f6d  in__u00001.ada_m
 0220 61696e5f 5f753030 30303200 6164615f  ain__u00002.ada_
 0230 6d61696e 5f5f7530 30303033 00616461  main__u00003.ada
 0240 5f6d6169 6e5f5f75 30303030 34006164  _main__u00004.ad
 0250 615f6d61 696e5f5f 75303030 30350061  a_main__u00005.a
 0260 64615f6d 61696e5f 5f753030 30303600  da_main__u00006.
 0270 6164615f 6d61696e 5f5f7530 30303037  ada_main__u00007
 0280 00616461 5f6d6169 6e5f5f75 30303030  .ada_main__u0000
 0290 38006164 615f6d61 696e5f5f 75303030  8.ada_main__u000
 02a0 30390073 79737465 6d5f5f73 7461636b  09.system__stack
 02b0 5f636865 636b696e 67420073 79737465  _checkingB.syste
 02c0 6d5f5f65 78636570 74696f6e 5f746162  m__exception_tab
 02d0 6c654200 6164615f 6d61696e 5f5f546c  leB.ada_main__Tl
 02e0 6f63616c 5f707269 6f726974 795f7370  ocal_priority_sp
 02f0 65636966 69635f64 69737061 74636869  ecific_dispatchi
 0300 6e675300 6164615f 6d61696e 5f5f7530  ngS.ada_main__u0
 0310 30303430 00616461 5f6d6169 6e5f5f75  0040.ada_main__u
 0320 30303034 31006164 615f6d61 696e5f5f  00041.ada_main__
 0330 75303030 34320073 79737465 6d5f5f61  u00042.system__a
 0340 64647265 73730061 64615f6d 61696e5f  ddress.ada_main_
 0350 5f753030 30343400 6164615f 6d61696e  _u00044.ada_main
 0360 5f5f7530 30303435 00616461 5f6d6169  __u00045.ada_mai
 0370 6e5f5f75 30303034 36007379 7374656d  n__u00046.system
 0380 5f5f7763 685f7374 77420061 64615f6d  __wch_stwB.ada_m
 0390 61696e5f 5f753030 30343800 6164615f  ain__u00048.ada_
 03a0 6d61696e 5f5f7530 30303335 00737973  main__u00035.sys
 03b0 74656d5f 5f737461 636b5f63 6865636b  tem__stack_check
 03c0 696e6753 00696e74 65726661 63657353  ingS.interfacesS
 03d0 00737973 74656d5f 5f657863 65707469  .system__excepti
 03e0 6f6e5f74 61626c65 53006172 67630061  on_tableS.argc.a
 03f0 64615f6d 61696e5f 5f6c6f63 616c5f69  da_main__local_i
 0400 6e746572 72757074 5f737461 7465735f  nterrupt_states_
 0410 5f5f5041 44005f5f 676e6174 5f766572  __PAD.__gnat_ver
 0420 73696f6e 00616461 696e6974 00737973  sion.adainit.sys
 0430 74656d5f 5f776368 5f737477 53006164  tem__wch_stwS.ad
 0440 615f5f65 78636570 74696f6e 735f5f74  a__exceptions__t
 0450 72616365 6261636b 42006164 615f6d61  racebackB.ada_ma
 0460 696e5f5f 6d61696e 5f5f7365 685f5f5f  in__main__seh___
 0470 50414400 6164615f 6d61696e 5f5f6c6f  PAD.ada_main__lo
 0480 63616c5f 696e7465 72727570 745f7374  cal_interrupt_st
 0490 61746573 00656e76 7000626f 6f6c6561  ates.envp.boolea
 04a0 6e006164 645f696e 745f775f 696f4200  n.add_int_w_ioB.
 04b0 6164615f 5f657863 65707469 6f6e735f  ada__exceptions_
 04c0 5f747261 63656261 636b5300 6164615f  _tracebackS.ada_
 04d0 6d61696e 5f5f7530 30303130 00616461  main__u00010.ada
 04e0 5f6d6169 6e5f5f75 30303031 31006164  _main__u00011.ad
 04f0 615f6d61 696e5f5f 75303030 31320061  a_main__u00012.a
 0500 64615f6d 61696e5f 5f753030 30313300  da_main__u00013.
 0510 63686172 61637465 72006164 615f6d61  character.ada_ma
 0520 696e5f5f 75303030 31350061 64615f6d  in__u00015.ada_m
 0530 61696e5f 5f753030 30313600 6164615f  ain__u00016.ada_
 0540 6d61696e 5f5f7530 30303137 00616461  main__u00017.ada
 0550 5f6d6169 6e5f5f75 30303031 38006164  _main__u00018.ad
 0560 615f6d61 696e5f5f 75303030 31390061  a_main__u00019.a
 0570 64615300 73797374 656d5f5f 7763685f  daS.system__wch_
 0580 636e7653 00616461 5f6d6169 6e5f5f75  cnvS.ada_main__u
 0590 30303035 31006164 615f6d61 696e5f5f  00051.ada_main__
 05a0 75303030 35320073 79737465 6d5f5f65  u00052.system__e
 05b0 78636570 74696f6e 73530073 79737465  xceptionsS.syste
 05c0 6d5f5f65 78636570 74696f6e 73420073  m__exceptionsB.s
 05d0 79737465 6d5f5f77 63685f63 6f6e4200  ystem__wch_conB.
 05e0 474e5520 41646120 372e332e 30202d67  GNU Ada 7.3.0 -g
 05f0 202d676e 61744120 2d676e61 74576220   -gnatA -gnatWb 
 0600 2d676e61 74697720 2d67202d 676e6174  -gnatiw -g -gnat
 0610 7773202d 6d74756e 653d6765 6e657269  ws -mtune=generi
 0620 63202d6d 61726368 3d783836 2d363400  c -march=x86-64.
 0630 6164615f 6d61696e 5f5f7530 30303233  ada_main__u00023
 0640 00616461 5f6d6169 6e5f5f75 30303031  .ada_main__u0001
 0650 34006164 615f6d61 696e5f5f 6d61696e  4.ada_main__main
 0660 5f5f5473 65685400 6164615f 6d61696e  __TsehT.ada_main
 0670 5f5f7530 30303331 00737973 74656d5f  __u00031.system_
 0680 5f616464 72657373 5f696d61 67655300  _address_imageS.
 0690 6164615f 5f657863 65707469 6f6e735f  ada__exceptions_
 06a0 5f6c6173 745f6368 616e6365 5f68616e  _last_chance_han
 06b0 646c6572 42006164 615f6d61 696e5f5f  dlerB.ada_main__
 06c0 75303030 3336006d 61696e00 6164615f  u00036.main.ada_
 06d0 6d61696e 5f5f7530 30303337 00737973  main__u00037.sys
 06e0 74656d5f 5f776368 5f6a6973 53007379  tem__wch_jisS.sy
 06f0 7374656d 53007379 7374656d 5f5f6578  stemS.system__ex
 0700 63657074 696f6e73 5f646562 75675300  ceptions_debugS.
 0710 6164615f 6d61696e 5f5f7530 30303530  ada_main__u00050
 0720 00737973 74656d5f 5f747261 63656261  .system__traceba
 0730 636b4200 73797374 656d5f5f 736f6674  ckB.system__soft
 0740 5f6c696e 6b734200 73797374 656d5f5f  _linksB.system__
 0750 70617261 6d657465 72734200 6164615f  parametersB.ada_
 0760 6d61696e 5f5f7530 30303533 00616461  main__u00053.ada
 0770 5f5f6578 63657074 696f6e73 5f5f6c61  __exceptions__la
 0780 73745f63 68616e63 655f6861 6e646c65  st_chance_handle
 0790 72530061 64615f6d 61696e5f 5f753030  rS.ada_main__u00
 07a0 30323000 6164615f 6d61696e 5f5f7665  020.ada_main__ve
 07b0 7273696f 6e5f3332 00616461 5f6d6169  rsion_32.ada_mai
 07c0 6e5f5f75 30303032 32006164 615f6d61  n__u00022.ada_ma
 07d0 696e5f5f 6c6f6361 6c5f7072 696f7269  in__local_priori
 07e0 74795f73 70656369 6669635f 64697370  ty_specific_disp
 07f0 61746368 696e675f 5f5f5041 4400676e  atching___PAD.gn
 0800 61745f5f 696f5300 6164615f 6d61696e  at__ioS.ada_main
 0810 5f5f7530 30303235 00616461 5f6d6169  __u00025.ada_mai
 0820 6e5f5f75 30303032 36006164 615f6d61  n__u00026.ada_ma
 0830 696e5f5f 75303030 32370061 64615f6d  in__u00027.ada_m
 0840 61696e5f 5f753030 30323800 6164615f  ain__u00028.ada_
 0850 6d61696e 5f5f7530 30303239 00737973  main__u00029.sys
 0860 74656d5f 5f736f66 745f6c69 6e6b7353  tem__soft_linksS
 0870 00676e61 74530061 64616669 6e616c00  .gnatS.adafinal.
 0880 6164615f 6d61696e 5f5f6164 61696e69  ada_main__adaini
 0890 74002f68 6f6d652f 7562756e 74752f45  t./home/ubuntu/E
 08a0 6e67696e 65657269 6e672f50 726f6772  ngineering/Progr
 08b0 616d6d69 6e672f44 69736173 73656d62  amming/Disassemb
 08c0 6c696e67 2d42696e 61726965 732f4164  ling-Binaries/Ad
 08d0 612f496e 74656c5f 41726368 69746563  a/Intel_Architec
 08e0 74757265 2f416464 5f496e74 5f775f49  ture/Add_Int_w_I
 08f0 4f2f5769 74685f44 65627567 5f496e66  O/With_Debug_Inf
 0900 6f2f627e 6164645f 696e745f 775f696f  o/b~add_int_w_io
 0910 2e616462 00737973 74656d5f 5f747261  .adb.system__tra
 0920 63656261 636b5f65 6e747269 65734200  ceback_entriesB.
 0930 5f5f676e 61745f61 64615f6d 61696e5f  __gnat_ada_main_
 0940 70726f67 72616d5f 6e616d65 00616461  program_name.ada
 0950 5f5f6578 63657074 696f6e73 4200656e  __exceptionsB.en
 0960 73757265 5f726566 6572656e 63650073  sure_reference.s
 0970 79737465 6d5f5f74 72616365 6261636b  ystem__traceback
 0980 5f5f7379 6d626f6c 69635300 73797374  __symbolicS.syst
 0990 656d5f5f 696d675f 696e7442 00616461  em__img_intB.ada
 09a0 5f6d6169 6e5f5f61 64615f6d 61696e5f  _main__ada_main_
 09b0 70726f67 72616d5f 6e616d65 00616461  program_name.ada
 09c0 5f6d6169 6e5f5f61 64616669 6e616c00  _main__adafinal.
 09d0 73797374 656d5f5f 74726163 65626163  system__tracebac
 09e0 6b5f656e 74726965 73530061 64615f5f  k_entriesS.ada__
 09f0 65786365 7074696f 6e735300 6164615f  exceptionsS.ada_
 0a00 6d61696e 5f5f6973 5f656c61 626f7261  main__is_elabora
 0a10 74656400 73797374 656d5f5f 7374616e  ted.system__stan
 0a20 64617264 5f6c6962 72617279 42006164  dard_libraryB.ad
 0a30 615f6d61 696e5f5f 676e6174 5f766572  a_main__gnat_ver
 0a40 73696f6e 00737973 74656d5f 5f776368  sion.system__wch
 0a50 5f636e76 42007379 7374656d 5f5f6164  _cnvB.system__ad
 0a60 64726573 735f696d 61676542 00737973  dress_imageB.sys
 0a70 74656d5f 5f637274 6c530061 64615f6d  tem__crtlS.ada_m
 0a80 61696e5f 5f54676e 61745f76 65727369  ain__Tgnat_versi
 0a90 6f6e5300 6164615f 6d61696e 5f5f7530  onS.ada_main__u0
 0aa0 30303330 00737973 74656d5f 5f737461  0030.system__sta
 0ab0 6e646172 645f6c69 62726172 79530061  ndard_libraryS.a
 0ac0 64615f6d 61696e5f 5f753030 30333200  da_main__u00032.
 0ad0 6164615f 6d61696e 5f5f7530 30303333  ada_main__u00033
 0ae0 00616461 5f6d6169 6e5f5f75 30303033  .ada_main__u0003
 0af0 34007379 7374656d 5f5f7374 6f726167  4.system__storag
 0b00 655f656c 656d656e 74734200 6164615f  e_elementsB.ada_
 0b10 6d61696e 5f5f5461 64615f6d 61696e5f  main__Tada_main_
 0b20 70726f67 72616d5f 6e616d65 53007379  program_nameS.sy
 0b30 7374656d 5f5f7472 61636562 61636b53  stem__tracebackS
 0b40 00616461 5f6d6169 6e5f5f75 30303033  .ada_main__u0003
 0b50 38006164 615f6d61 696e5f5f 75303030  8.ada_main__u000
 0b60 33390073 79737465 6d5f5f73 65636f6e  39.system__secon
 0b70 64617279 5f737461 636b4200 6164615f  dary_stackB.ada_
 0b80 6d61696e 5f5f7530 30303437 00        main__u00047.   
Contents of section .comment:
 0000 00474343 3a202855 62756e74 7520372e  .GCC: (Ubuntu 7.
 0010 332e302d 32377562 756e7475 317e3138  3.0-27ubuntu1~18
 0020 2e303429 20372e33 2e3000             .04) 7.3.0.     
Contents of section .eh_frame:
 0000 14000000 00000000 017a5200 01781001  .........zR..x..
 0010 1b0c0708 90010000 1c000000 1c000000  ................
 0020 00000000 29000000 00410e10 8602430d  ....)....A....C.
 0030 06640c07 08000000 1c000000 3c000000  .d..........<...
 0040 00000000 24010000 00410e10 8602430d  ....$....A....C.
 0050 06031f01 0c070800 1c000000 5c000000  ............\...
 0060 00000000 65000000 00410e10 8602430d  ....e....A....C.
 0070 0602600c 07080000                    ..`.....        

Disassembly of section .text:

0000000000000000 <adafinal>:
   Local_Priority_Specific_Dispatching : constant String := "";
   Local_Interrupt_States : constant String := "";

   Is_Elaborated : Boolean := False;

   procedure adafinal is
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp

      procedure Runtime_Finalize;
      pragma Import (C, Runtime_Finalize, "__gnat_runtime_finalize");

   begin
      if not Is_Elaborated then
   4:	0f b6 05 00 00 00 00 	movzx  eax,BYTE PTR [rip+0x0]        # b <adafinal+0xb>
			7: R_X86_64_PC32	.data-0x2
   b:	83 f0 01             	xor    eax,0x1
   e:	84 c0                	test   al,al
  10:	75 14                	jne    26 <adafinal+0x26>
         return;
      end if;
      Is_Elaborated := False;
  12:	c6 05 00 00 00 00 00 	mov    BYTE PTR [rip+0x0],0x0        # 19 <adafinal+0x19>
			14: R_X86_64_PC32	.data-0x3
      Runtime_Finalize;
  19:	e8 00 00 00 00       	call   1e <adafinal+0x1e>
			1a: R_X86_64_PLT32	__gnat_runtime_finalize-0x4
      s_stalib_adafinal;
  1e:	e8 00 00 00 00       	call   23 <adafinal+0x23>
			1f: R_X86_64_PLT32	system__standard_library__adafinal-0x4
   end adafinal;
  23:	90                   	nop
  24:	eb 01                	jmp    27 <adafinal+0x27>
         return;
  26:	90                   	nop
   end adafinal;
  27:	5d                   	pop    rbp
  28:	c3                   	ret    
  29:	90                   	nop

000000000000002a <adainit>:

   type No_Param_Proc is access procedure;

   procedure adainit is
  2a:	55                   	push   rbp
  2b:	48 89 e5             	mov    rbp,rsp
      pragma Import (C, Runtime_Initialize, "__gnat_runtime_initialize");

      Finalize_Library_Objects : No_Param_Proc;
      pragma Import (C, Finalize_Library_Objects, "__gnat_finalize_library_objects");
   begin
      if Is_Elaborated then
  2e:	0f b6 05 00 00 00 00 	movzx  eax,BYTE PTR [rip+0x0]        # 35 <adainit+0xb>
			31: R_X86_64_PC32	.data-0x2
  35:	84 c0                	test   al,al
  37:	0f 85 0e 01 00 00    	jne    14b <adainit+0x121>
         return;
      end if;
      Is_Elaborated := True;
  3d:	c6 05 00 00 00 00 01 	mov    BYTE PTR [rip+0x0],0x1        # 44 <adainit+0x1a>
			3f: R_X86_64_PC32	.data-0x3
      Main_Priority := -1;
  44:	c7 05 00 00 00 00 ff 	mov    DWORD PTR [rip+0x0],0xffffffff        # 4e <adainit+0x24>
  4b:	ff ff ff 
			46: R_X86_64_PC32	__gl_main_priority-0x8
      Time_Slice_Value := -1;
  4e:	c7 05 00 00 00 00 ff 	mov    DWORD PTR [rip+0x0],0xffffffff        # 58 <adainit+0x2e>
  55:	ff ff ff 
			50: R_X86_64_PC32	__gl_time_slice_val-0x8
      WC_Encoding := 'b';
  58:	c6 05 00 00 00 00 62 	mov    BYTE PTR [rip+0x0],0x62        # 5f <adainit+0x35>
			5a: R_X86_64_PC32	__gl_wc_encoding-0x5
      Locking_Policy := ' ';
  5f:	c6 05 00 00 00 00 20 	mov    BYTE PTR [rip+0x0],0x20        # 66 <adainit+0x3c>
			61: R_X86_64_PC32	__gl_locking_policy-0x5
      Queuing_Policy := ' ';
  66:	c6 05 00 00 00 00 20 	mov    BYTE PTR [rip+0x0],0x20        # 6d <adainit+0x43>
			68: R_X86_64_PC32	__gl_queuing_policy-0x5
      Task_Dispatching_Policy := ' ';
  6d:	c6 05 00 00 00 00 20 	mov    BYTE PTR [rip+0x0],0x20        # 74 <adainit+0x4a>
			6f: R_X86_64_PC32	__gl_task_dispatching_policy-0x5
      Priority_Specific_Dispatching :=
  74:	48 8d 05 00 00 00 00 	lea    rax,[rip+0x0]        # 7b <adainit+0x51>
			77: R_X86_64_PC32	.rodata+0x104
  7b:	48 89 05 00 00 00 00 	mov    QWORD PTR [rip+0x0],rax        # 82 <adainit+0x58>
			7e: R_X86_64_PC32	__gl_priority_specific_dispatching-0x4
        Local_Priority_Specific_Dispatching'Address;
      Num_Specific_Dispatching := 0;
  82:	c7 05 00 00 00 00 00 	mov    DWORD PTR [rip+0x0],0x0        # 8c <adainit+0x62>
  89:	00 00 00 
			84: R_X86_64_PC32	__gl_num_specific_dispatching-0x8
      Main_CPU := -1;
  8c:	c7 05 00 00 00 00 ff 	mov    DWORD PTR [rip+0x0],0xffffffff        # 96 <adainit+0x6c>
  93:	ff ff ff 
			8e: R_X86_64_PC32	__gl_main_cpu-0x8
      Interrupt_States := Local_Interrupt_States'Address;
  96:	48 8d 05 00 00 00 00 	lea    rax,[rip+0x0]        # 9d <adainit+0x73>
			99: R_X86_64_PC32	.rodata+0x105
  9d:	48 89 05 00 00 00 00 	mov    QWORD PTR [rip+0x0],rax        # a4 <adainit+0x7a>
			a0: R_X86_64_PC32	__gl_interrupt_states-0x4
      Num_Interrupt_States := 0;
  a4:	c7 05 00 00 00 00 00 	mov    DWORD PTR [rip+0x0],0x0        # ae <adainit+0x84>
  ab:	00 00 00 
			a6: R_X86_64_PC32	__gl_num_interrupt_states-0x8
      Unreserve_All_Interrupts := 0;
  ae:	c7 05 00 00 00 00 00 	mov    DWORD PTR [rip+0x0],0x0        # b8 <adainit+0x8e>
  b5:	00 00 00 
			b0: R_X86_64_PC32	__gl_unreserve_all_interrupts-0x8
      Detect_Blocking := 0;
  b8:	c7 05 00 00 00 00 00 	mov    DWORD PTR [rip+0x0],0x0        # c2 <adainit+0x98>
  bf:	00 00 00 
			ba: R_X86_64_PC32	__gl_detect_blocking-0x8
      Default_Stack_Size := -1;
  c2:	c7 05 00 00 00 00 ff 	mov    DWORD PTR [rip+0x0],0xffffffff        # cc <adainit+0xa2>
  c9:	ff ff ff 
			c4: R_X86_64_PC32	__gl_default_stack_size-0x8
      Leap_Seconds_Support := 0;
  cc:	c7 05 00 00 00 00 00 	mov    DWORD PTR [rip+0x0],0x0        # d6 <adainit+0xac>
  d3:	00 00 00 
			ce: R_X86_64_PC32	__gl_leap_seconds_support-0x8

      Runtime_Initialize (1);
  d6:	bf 01 00 00 00       	mov    edi,0x1
  db:	e8 00 00 00 00       	call   e0 <adainit+0xb6>
			dc: R_X86_64_PLT32	__gnat_runtime_initialize-0x4

      Finalize_Library_Objects := null;
  e0:	48 c7 05 00 00 00 00 	mov    QWORD PTR [rip+0x0],0x0        # eb <adainit+0xc1>
  e7:	00 00 00 00 
			e3: R_X86_64_PC32	__gnat_finalize_library_objects-0x8

      System.Soft_Links'Elab_Spec;
  eb:	e8 00 00 00 00       	call   f0 <adainit+0xc6>
			ec: R_X86_64_PLT32	system__soft_links___elabs-0x4
      System.Exception_Table'Elab_Body;
  f0:	e8 00 00 00 00       	call   f5 <adainit+0xcb>
			f1: R_X86_64_PLT32	system__exception_table___elabb-0x4
      E26 := E26 + 1;
  f5:	0f b7 05 00 00 00 00 	movzx  eax,WORD PTR [rip+0x0]        # fc <adainit+0xd2>
			f8: R_X86_64_PC32	system__exception_table_E-0x4
  fc:	83 c0 01             	add    eax,0x1
  ff:	66 89 05 00 00 00 00 	mov    WORD PTR [rip+0x0],ax        # 106 <adainit+0xdc>
			102: R_X86_64_PC32	system__exception_table_E-0x4
      System.Exceptions'Elab_Spec;
 106:	e8 00 00 00 00       	call   10b <adainit+0xe1>
			107: R_X86_64_PLT32	system__exceptions___elabs-0x4
      E28 := E28 + 1;
 10b:	0f b7 05 00 00 00 00 	movzx  eax,WORD PTR [rip+0x0]        # 112 <adainit+0xe8>
			10e: R_X86_64_PC32	system__exceptions_E-0x4
 112:	83 c0 01             	add    eax,0x1
 115:	66 89 05 00 00 00 00 	mov    WORD PTR [rip+0x0],ax        # 11c <adainit+0xf2>
			118: R_X86_64_PC32	system__exceptions_E-0x4
      System.Soft_Links'Elab_Body;
 11c:	e8 00 00 00 00       	call   121 <adainit+0xf7>
			11d: R_X86_64_PLT32	system__soft_links___elabb-0x4
      E16 := E16 + 1;
 121:	0f b7 05 00 00 00 00 	movzx  eax,WORD PTR [rip+0x0]        # 128 <adainit+0xfe>
			124: R_X86_64_PC32	system__soft_links_E-0x4
 128:	83 c0 01             	add    eax,0x1
 12b:	66 89 05 00 00 00 00 	mov    WORD PTR [rip+0x0],ax        # 132 <adainit+0x108>
			12e: R_X86_64_PC32	system__soft_links_E-0x4
      System.Secondary_Stack'Elab_Body;
 132:	e8 00 00 00 00       	call   137 <adainit+0x10d>
			133: R_X86_64_PLT32	system__secondary_stack___elabb-0x4
      E20 := E20 + 1;
 137:	0f b7 05 00 00 00 00 	movzx  eax,WORD PTR [rip+0x0]        # 13e <adainit+0x114>
			13a: R_X86_64_PC32	system__secondary_stack_E-0x4
 13e:	83 c0 01             	add    eax,0x1
 141:	66 89 05 00 00 00 00 	mov    WORD PTR [rip+0x0],ax        # 148 <adainit+0x11e>
			144: R_X86_64_PC32	system__secondary_stack_E-0x4
   end adainit;
 148:	90                   	nop
 149:	eb 01                	jmp    14c <adainit+0x122>
         return;
 14b:	90                   	nop
   end adainit;
 14c:	5d                   	pop    rbp
 14d:	c3                   	ret    

000000000000014e <main>:

   procedure Ada_Main_Program;
   pragma Import (Ada, Ada_Main_Program, "_ada_add_int_w_io");

   function main
 14e:	55                   	push   rbp
 14f:	48 89 e5             	mov    rbp,rsp
 152:	48 83 ec 30          	sub    rsp,0x30
 156:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 159:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 15d:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx

      procedure Finalize;
      pragma Import (C, Finalize, "__gnat_finalize");
      SEH : aliased array (1 .. 2) of Integer;

      Ensure_Reference : aliased System.Address := Ada_Main_Program_Name'Address;
 161:	48 8d 05 00 00 00 00 	lea    rax,[rip+0x0]        # 168 <main+0x1a>
			164: R_X86_64_PC32	__gnat_ada_main_program_name-0x4
 168:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
      pragma Volatile (Ensure_Reference);

   begin
      gnat_argc := argc;
 16c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
 16f:	89 05 00 00 00 00    	mov    DWORD PTR [rip+0x0],eax        # 175 <main+0x27>
			171: R_X86_64_PC32	gnat_argc-0x4
      gnat_argv := argv;
 175:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
 179:	48 89 05 00 00 00 00 	mov    QWORD PTR [rip+0x0],rax        # 180 <main+0x32>
			17c: R_X86_64_PC32	gnat_argv-0x4
      gnat_envp := envp;
 180:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 184:	48 89 05 00 00 00 00 	mov    QWORD PTR [rip+0x0],rax        # 18b <main+0x3d>
			187: R_X86_64_PC32	gnat_envp-0x4

      Initialize (SEH'Address);
 18b:	48 8d 45 f8          	lea    rax,[rbp-0x8]
 18f:	48 89 c7             	mov    rdi,rax
 192:	e8 00 00 00 00       	call   197 <main+0x49>
			193: R_X86_64_PLT32	__gnat_initialize-0x4
      adainit;
 197:	e8 00 00 00 00       	call   19c <main+0x4e>
			198: R_X86_64_PC32	adainit-0x4
      Ada_Main_Program;
 19c:	e8 00 00 00 00       	call   1a1 <main+0x53>
			19d: R_X86_64_PLT32	_ada_add_int_w_io-0x4
      adafinal;
 1a1:	e8 00 00 00 00       	call   1a6 <main+0x58>
			1a2: R_X86_64_PC32	adafinal-0x4
      Finalize;
 1a6:	e8 00 00 00 00       	call   1ab <main+0x5d>
			1a7: R_X86_64_PLT32	__gnat_finalize-0x4
      return (gnat_exit_status);
 1ab:	8b 05 00 00 00 00    	mov    eax,DWORD PTR [rip+0x0]        # 1b1 <main+0x63>
			1ad: R_X86_64_PC32	gnat_exit_status-0x4
   end;
 1b1:	c9                   	leave  
 1b2:	c3                   	ret    

Disassembly of section .data:

0000000000000000 <ada_main_E>:
	...

0000000000000002 <ada_main__is_elaborated>:
	...

Disassembly of section .rodata:

0000000000000000 <__gnat_version>:
   0:	47                   	rex.RXB
   1:	4e                   	rex.WRX
   2:	41 54                	push   r12
   4:	20 56 65             	and    BYTE PTR [rsi+0x65],dl
   7:	72 73                	jb     7c <system__secondary_stackB>
   9:	69 6f 6e 3a 20 37 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37203a
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 00                	xor    BYTE PTR [rax],al
	...

0000000000000020 <__gnat_ada_main_program_name>:
  20:	5f                   	pop    rdi
  21:	61                   	(bad)  
  22:	64 61                	fs (bad) 
  24:	5f                   	pop    rdi
  25:	61                   	(bad)  
  26:	64 64 5f             	fs fs pop rdi
  29:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
  30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  31:	00 00                	add    BYTE PTR [rax],al
	...

0000000000000034 <add_int_w_ioB>:
  34:	31 2a                	xor    DWORD PTR [rdx],ebp
  36:	70 1c                	jo     54 <system__memoryS>

0000000000000038 <system__standard_libraryB>:
  38:	0e                   	(bad)  
  39:	93                   	xchg   ebx,eax
  3a:	df b6        	fbstp  TBYTE PTR [rsi+0x7ec093d3]

000000000000003c <system__standard_libraryS>:
  3c:	d3 93 c0 7e      	rcl    DWORD PTR [rbx-0x2d0e8140],cl

0000000000000040 <gnatS>:
  40:	f1                   	icebp  
  41:	d2 2a                	shr    BYTE PTR [rdx],cl
  43:	fd                   	std    

0000000000000044 <gnat__ioB>:
  44:	f5                   	cmc    
  45:	02 81 b4       	add    al,BYTE PTR [rcx+0x27e843b4]

0000000000000048 <gnat__ioS>:
  48:	43 e8 27 62      	rex.XB call ffffffffec046275 <main+0xffffffffec046127>

000000000000004c <systemS>:
  4c:	04 ec                	add    al,0xec
  4e:	35 46          	xor    eax,0x35900546

0000000000000050 <system__memoryB>:
  50:	05 90 35 a6        	add    eax,0x30a63590

0000000000000054 <system__memoryS>:
  54:	30 8a 48 1f      	xor    BYTE PTR [rdx+0x6fda1f48],cl

0000000000000058 <ada__exceptionsB>:
  58:	da 6f 32             	fisubr DWORD PTR [rdi+0x32]
  5b:	c2               	ret    0xa13f

000000000000005c <ada__exceptionsS>:
  5c:	3f                   	(bad)  
  5d:	a1 98 6e     	movabs eax,ds:0xe6a976789da16e98
  64:	  

0000000000000060 <adaS>:
  60:	a1 9d 78 76    	movabs eax,ds:0x2ee947e6a976789d
  67:	  

0000000000000064 <ada__exceptions__last_chance_handlerB>:
  64:	a9 e6 47 e9        	test   eax,0x2ee947e6

0000000000000068 <ada__exceptions__last_chance_handlerS>:
  68:	2e 55                	cs push rbp
  6a:	e5 41                	in     eax,0x41

000000000000006c <system__soft_linksB>:
  6c:	b8 85 77 4e        	mov    eax,0x514e7785

0000000000000070 <system__soft_linksS>:
  70:	51                   	push   rcx
  71:	34 b1                	xor    al,0xb1
  73:	d8                 	fcom   DWORD PTR [rdi]

0000000000000074 <system__parametersB>:
  74:	17                   	(bad)  
  75:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  76:	1d b0          	sbb    eax,0x1fe17bb0

0000000000000078 <system__parametersS>:
  78:	7b e1                	jnp    5b <ada__exceptionsB+0x3>
  7a:	1f                   	(bad)  
  7b:	38                 	cmp    ch,ah

000000000000007c <system__secondary_stackB>:
  7c:	e5 09                	in     eax,0x9
  7e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  7f:	30               	xor    BYTE PTR [rsi+0x13],bh

0000000000000080 <system__secondary_stackS>:
  80:	7e 13                	jle    95 <system__exception_tableB+0x1>
  82:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  83:	fc                   	cld    

0000000000000084 <system__storage_elementsB>:
  84:	68 f4 03 f1        	push   0xf103f4

0000000000000088 <system__storage_elementsS>:
  88:	00 a6 f6 6b      	add    BYTE PTR [rsi+0x7d1e6bf6],ah

000000000000008c <system__stack_checkingB>:
  8c:	1e                   	(bad)  
  8d:	7d 83                	jge    12 <__gnat_version+0x12>
  8f:	41                 	rex.B in al,dx

0000000000000090 <system__stack_checkingS>:
  90:	ec                   	in     al,dx
  91:	87 8a c8       	xchg   DWORD PTR [rdx-0x5bb70038],ecx

0000000000000094 <system__exception_tableB>:
  94:	ff 48 a4             	dec    DWORD PTR [rax-0x5c]
  97:	87               	xchg   DWORD PTR [rsi-0x7b],eax

0000000000000098 <system__exception_tableS>:
  98:	46 85 9b 1b    	rex.RX test DWORD PTR [rbx+0x4af0201b],r11d

000000000000009c <system__exceptionsB>:
  9c:	20 f0                	and    al,dh
  9e:	4a ce                	rex.WX (bad) 

00000000000000a0 <system__exceptionsS>:
  a0:	f2 81 56 2e    	repnz adc DWORD PTR [rsi+0x2e],0x843d48dc
  a7:	 

00000000000000a4 <system__exceptions__machineS>:
  a4:	dc 48 3d             	fmul   QWORD PTR [rax+0x3d]
  a7:	84                 	test   ah,bh

00000000000000a8 <system__exceptions_debugB>:
  a8:	fc                   	cld    
  a9:	63 05 aa       	movsxd eax,DWORD PTR [rip+0xffffffffbf15c0aa]        # ffffffffbf15c159 <main+0xffffffffbf15c00b>

00000000000000ac <system__exceptions_debugS>:
  ac:	c0 15 bf 38    	rcl    BYTE PTR [rip+0xffffffff880238bf],0x2f        # ffffffff88023972 <main+0xffffffff88023824>

00000000000000b0 <system__img_intB>:
  b0:	02 88 2f 6c      	add    cl,BYTE PTR [rax+0xcc66c2f]

00000000000000b4 <system__img_intS>:
  b4:	c6                   	(bad)  
  b5:	0c ee                	or     al,0xee
  b7:	44                 	rex.R (bad) 

00000000000000b8 <system__tracebackB>:
  b8:	17                   	(bad)  
  b9:	8c df                	mov    edi,ds
  bb:	39                 	cmp    eax,eax

00000000000000bc <system__tracebackS>:
  bc:	c0 32 17             	shl    BYTE PTR [rdx],0x17
  bf:	18         	sbb    BYTE PTR [rip+0x749ed495],ah        # 749ed55a <main+0x749ed40c>

00000000000000c0 <system__traceback_entriesB>:
  c0:	25 95 d4 9e        	and    eax,0x749ed495

00000000000000c4 <system__traceback_entriesS>:
  c4:	74 1a                	je     e0 <system__wch_conB>
  c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  c7:	46                   	rex.RX

00000000000000c8 <system__traceback__symbolicB>:
  c8:	f2 10 d2             	repnz adc dl,dl
  cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]

00000000000000cc <system__traceback__symbolicS>:
  cc:	7a f6                	jp     c4 <system__traceback_entriesS>
  ce:	19 dd                	sbb    ebp,ebx

00000000000000d0 <ada__exceptions__tracebackB>:
  d0:	88 9d 1f 70      	mov    BYTE PTR [rbp+0x5e75701f],bl

00000000000000d4 <ada__exceptions__tracebackS>:
  d4:	75 5e                	jne    134 <ada_main__local_interrupt_states+0x2b>
  d6:	24 20                	and    al,0x20

00000000000000d8 <system__address_imageB>:
  d8:	d3 b3 00 9f      	shl    DWORD PTR [rbx+0x713e9f00],cl

00000000000000dc <system__address_imageS>:
  dc:	3e 71 d9             	ds jno b8 <system__tracebackB>
  df:	e7                 	out    0x17,eax

00000000000000e0 <system__wch_conB>:
  e0:	17                   	(bad)  
  e1:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  e2:	33 8c      	xor    ecx,DWORD PTR [rsi+rdx*8+0x405d48ce]

00000000000000e4 <system__wch_conS>:
  e4:	d6                   	(bad)  
  e5:	ce                   	(bad)  
  e6:	48 5d                	rex.W pop rbp

00000000000000e8 <system__wch_stwB>:
  e8:	40 e8 21 97      	rex call ffffffffe2d7980f <main+0xffffffffe2d796c1>

00000000000000ec <system__wch_stwS>:
  ec:	d7                   	xlat   BYTE PTR ds:[rbx]
  ed:	e2 59                	loop   148 <ada_main__local_interrupt_states+0x3f>
  ef:	70                 	jo     8d <system__stack_checkingB+0x1>

00000000000000f0 <system__wch_cnvB>:
  f0:	9c                   	pushf  
  f1:	67 31 a8     	xor    DWORD PTR [eax+0x52ff7425],ebp

00000000000000f4 <system__wch_cnvS>:
  f4:	25 74 ff 52        	and    eax,0x6852ff74

00000000000000f8 <interfacesS>:
  f8:	68 52 b5 5a        	push   0xffffffffb65ab552

00000000000000fc <system__wch_jisB>:
  fc:	b6 fd                	mov    dh,0xfd
  fe:	e6 ec                	out    0xec,al

0000000000000100 <system__wch_jisS>:
 100:	04 6d                	add    al,0x6d
 102:	8f                   	(bad)  
 103:	d2                 	ror    BYTE PTR [rdx],cl

0000000000000104 <system__crtlS>:
 104:	0a 3a                	or     bh,BYTE PTR [rdx]
 106:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 107:	36               	add    BYTE PTR ss:[rax],al

0000000000000108 <ada_main__local_priority_specific_dispatching>:
	...

0000000000000109 <ada_main__local_interrupt_states>:
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   procedure adafinal is
   0:	67 07                	addr32 (bad) 
   2:	00 00                	add    BYTE PTR [rax],al
      if not Is_Elaborated then
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_abbrev
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	00 00                	add    BYTE PTR [rax],al
			c: R_X86_64_32	.debug_str+0x5e0
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0d 00 00 00 00       	or     eax,0x0
			11: R_X86_64_32	.debug_str+0x892
	...
			15: R_X86_64_32	.debug_str+0xaf
			19: R_X86_64_64	.text
      s_stalib_adafinal;
  21:	b3 01                	mov    bl,0x1
	...
			29: R_X86_64_32	.debug_line
   procedure adainit is
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	02 00                	add    al,BYTE PTR [rax]
			2e: R_X86_64_32	.debug_str+0xa7b
      if Is_Elaborated then
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
  34:	00 00                	add    BYTE PTR [rax],al
  36:	41 00 00             	add    BYTE PTR [r8],al
  39:	00 03                	add    BYTE PTR [rbx],al
  3b:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
      Is_Elaborated := True;
  3e:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  41:	04 2d                	add    al,0x2d
  43:	00 00                	add    BYTE PTR [rax],al
      Main_Priority := -1;
  45:	00 05 04 05 00 00    	add    BYTE PTR [rip+0x504],al        # 54f <.debug_info+0x54f>
			49: R_X86_64_32	.debug_str+0x15e
  4b:	00 00                	add    BYTE PTR [rax],al
  4d:	05 01 08 00 00       	add    eax,0x801
			50: R_X86_64_32	.debug_str+0x510
      Time_Slice_Value := -1;
  52:	00 00                	add    BYTE PTR [rax],al
  54:	02 00                	add    al,BYTE PTR [rax]
			55: R_X86_64_32	.debug_str+0xb0c
  56:	00 00                	add    BYTE PTR [rax],al
      WC_Encoding := 'b';
  58:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	68 00 00 00 03       	push   0x3000000
      Locking_Policy := ' ';
  62:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
  65:	00 12                	add    BYTE PTR [rdx],dl
      Queuing_Policy := ' ';
  67:	00 04 54             	add    BYTE PTR [rsp+rdx*2],al
  6a:	00 00                	add    BYTE PTR [rax],al
  6c:	00 05 04 07 00 00    	add    BYTE PTR [rip+0x704],al        # 776 <main+0x628>
			70: R_X86_64_32	.debug_str+0x7a4
      Task_Dispatching_Policy := ' ';
  72:	00 00                	add    BYTE PTR [rax],al
      Priority_Specific_Dispatching :=
  74:	06                   	(bad)  
  75:	6d                   	ins    DWORD PTR es:[rdi],dx
  76:	00 00                	add    BYTE PTR [rax],al
  78:	00 02                	add    BYTE PTR [rdx],al
  7a:	00 00                	add    BYTE PTR [rax],al
			7a: R_X86_64_32	.debug_str+0x2d4
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
  81:	00 8d 00 00 00 03    	add    BYTE PTR [rbp+0x3000000],cl
      Num_Specific_Dispatching := 0;
  87:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
  8a:	00 00                	add    BYTE PTR [rax],al
      Main_CPU := -1;
  8c:	00 07                	add    BYTE PTR [rdi],al
  8e:	00 00                	add    BYTE PTR [rax],al
			8e: R_X86_64_32	.debug_str+0x7ca
  90:	00 00                	add    BYTE PTR [rax],al
  92:	01 01                	add    DWORD PTR [rcx],eax
  94:	0e                   	(bad)  
  95:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
      Interrupt_States := Local_Interrupt_States'Address;
  96:	00 00                	add    BYTE PTR [rax],al
  98:	00 08                	add    BYTE PTR [rax],cl
  9a:	46 00 01             	rex.RX add BYTE PTR [rcx],r8b
  9d:	0e                   	(bad)  
  9e:	79 00                	jns    a0 <.debug_info+0xa0>
  a0:	00 00                	add    BYTE PTR [rax],al
  a2:	00 00                	add    BYTE PTR [rax],al
      Num_Interrupt_States := 0;
  a4:	04 8d                	add    al,0x8d
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	00 02                	add    BYTE PTR [rdx],al
  aa:	00 00                	add    BYTE PTR [rax],al
			aa: R_X86_64_32	.debug_str+0x11
  ac:	00 00                	add    BYTE PTR [rax],al
      Unreserve_All_Interrupts := 0;
  ae:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
  b1:	00 bd 00 00 00 03    	add    BYTE PTR [rbp+0x3000000],bh
  b7:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
      Detect_Blocking := 0;
  ba:	00 00                	add    BYTE PTR [rax],al
  bc:	00 07                	add    BYTE PTR [rdi],al
  be:	00 00                	add    BYTE PTR [rax],al
			be: R_X86_64_32	.debug_str+0x3ef
  c0:	00 00                	add    BYTE PTR [rax],al
      Default_Stack_Size := -1;
  c2:	01 01                	add    DWORD PTR [rcx],eax
  c4:	0f d4 00             	paddq  mm0,QWORD PTR [rax]
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	08 46 00             	or     BYTE PTR [rsi+0x0],al
      Leap_Seconds_Support := 0;
  cc:	01 0f                	add    DWORD PTR [rdi],ecx
  ce:	a9 00 00 00 00       	test   eax,0x0
  d3:	00 04 bd 00 00 00 05 	add    BYTE PTR [rdi*4+0x5000000],al
      Runtime_Initialize (1);
  da:	08 07                	or     BYTE PTR [rdi],al
  dc:	00 00                	add    BYTE PTR [rax],al
			dc: R_X86_64_32	.debug_str+0x337
  de:	00 00                	add    BYTE PTR [rax],al
      Finalize_Library_Objects := null;
  e0:	09 d9                	or     ecx,ebx
  e2:	00 00                	add    BYTE PTR [rax],al
  e4:	00 0a                	add    BYTE PTR [rdx],cl
  e6:	00 00                	add    BYTE PTR [rax],al
			e6: R_X86_64_32	.debug_str+0xa2e
  e8:	00 00                	add    BYTE PTR [rax],al
  ea:	02 11                	add    dl,BYTE PTR [rcx]
      System.Soft_Links'Elab_Spec;
  ec:	00 00                	add    BYTE PTR [rax],al
			ec: R_X86_64_32	.debug_str+0x416
  ee:	00 00                	add    BYTE PTR [rax],al
      System.Exception_Table'Elab_Body;
  f0:	41 00 00             	add    BYTE PTR [r8],al
  f3:	00 09                	add    BYTE PTR [rcx],cl
      E26 := E26 + 1;
  f5:	03 00                	add    eax,DWORD PTR [rax]
			f6: R_X86_64_64	__gnat_version
  f7:	00 00                	add    BYTE PTR [rax],al
  f9:	00 00                	add    BYTE PTR [rax],al
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	00 0a                	add    BYTE PTR [rdx],cl
  ff:	00 00                	add    BYTE PTR [rax],al
			ff: R_X86_64_32	.debug_str+0x99d
 101:	00 00                	add    BYTE PTR [rax],al
 103:	02 15 00 00 00 00    	add    dl,BYTE PTR [rip+0x0]        # 109 <.debug_info+0x109>
			105: R_X86_64_32	.debug_str+0x930
      System.Exceptions'Elab_Spec;
 109:	68 00 00 00 09       	push   0x9000000
      E28 := E28 + 1;
 10e:	03 00                	add    eax,DWORD PTR [rax]
			10f: R_X86_64_64	__gnat_ada_main_program_name
 110:	00 00                	add    BYTE PTR [rax],al
 112:	00 00                	add    BYTE PTR [rax],al
 114:	00 00                	add    BYTE PTR [rax],al
 116:	00 0a                	add    BYTE PTR [rdx],cl
 118:	00 00                	add    BYTE PTR [rax],al
			118: R_X86_64_32	.debug_str+0x20a
 11a:	00 00                	add    BYTE PTR [rax],al
      System.Soft_Links'Elab_Body;
 11c:	02 26                	add    ah,BYTE PTR [rsi]
 11e:	00 00                	add    BYTE PTR [rax],al
			11e: R_X86_64_32	.debug_str+0x4a2
 120:	00 00                	add    BYTE PTR [rax],al
      E16 := E16 + 1;
 122:	74 00                	je     124 <.debug_info+0x124>
 124:	00 00                	add    BYTE PTR [rax],al
 126:	09 03                	or     DWORD PTR [rbx],eax
	...
			128: R_X86_64_64	add_int_w_ioB
 130:	0a 00                	or     al,BYTE PTR [rax]
			131: R_X86_64_32	.debug_str+0x21b
      System.Secondary_Stack'Elab_Body;
 132:	00 00                	add    BYTE PTR [rax],al
 134:	00 02                	add    BYTE PTR [rdx],al
 136:	28 00                	sub    BYTE PTR [rax],al
			137: R_X86_64_32	.debug_str+0xa14
      E20 := E20 + 1;
 138:	00 00                	add    BYTE PTR [rax],al
 13a:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 13e:	00 09                	add    BYTE PTR [rcx],cl
 140:	03 00                	add    eax,DWORD PTR [rax]
			141: R_X86_64_64	system__standard_libraryB
 142:	00 00                	add    BYTE PTR [rax],al
 144:	00 00                	add    BYTE PTR [rax],al
 146:	00 00                	add    BYTE PTR [rax],al
   end adainit;
 148:	00 0a                	add    BYTE PTR [rdx],cl
 14a:	00 00                	add    BYTE PTR [rax],al
			14a: R_X86_64_32	.debug_str+0x22c
 14c:	00 00                	add    BYTE PTR [rax],al
   function main
 14e:	02 2a                	add    ch,BYTE PTR [rdx]
 150:	00 00                	add    BYTE PTR [rax],al
			150: R_X86_64_32	.debug_str+0xaa5
 152:	00 00                	add    BYTE PTR [rax],al
 154:	74 00                	je     156 <.debug_info+0x156>
 156:	00 00                	add    BYTE PTR [rax],al
 158:	09 03                	or     DWORD PTR [rbx],eax
	...
			15a: R_X86_64_64	system__standard_libraryS
      Ensure_Reference : aliased System.Address := Ada_Main_Program_Name'Address;
 162:	0a 00                	or     al,BYTE PTR [rax]
			163: R_X86_64_32	.debug_str+0x23d
 164:	00 00                	add    BYTE PTR [rax],al
 166:	00 02                	add    BYTE PTR [rdx],al
 168:	2c 00                	sub    al,0x0
			169: R_X86_64_32	.debug_str+0x871
 16a:	00 00                	add    BYTE PTR [rax],al
      gnat_argc := argc;
 16c:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 170:	00 09                	add    BYTE PTR [rcx],cl
 172:	03 00                	add    eax,DWORD PTR [rax]
			173: R_X86_64_64	gnatS
 174:	00 00                	add    BYTE PTR [rax],al
      gnat_argv := argv;
 176:	00 00                	add    BYTE PTR [rax],al
 178:	00 00                	add    BYTE PTR [rax],al
 17a:	00 0a                	add    BYTE PTR [rdx],cl
 17c:	00 00                	add    BYTE PTR [rax],al
			17c: R_X86_64_32	.debug_str+0x24e
 17e:	00 00                	add    BYTE PTR [rax],al
      gnat_envp := envp;
 180:	02 2e                	add    ch,BYTE PTR [rsi]
 182:	00 00                	add    BYTE PTR [rax],al
			182: R_X86_64_32	.debug_str+0x1ec
 184:	00 00                	add    BYTE PTR [rax],al
 186:	74 00                	je     188 <.debug_info+0x188>
 188:	00 00                	add    BYTE PTR [rax],al
 18a:	09 03                	or     DWORD PTR [rbx],eax
	...
			18c: R_X86_64_64	gnat__ioB
      Initialize (SEH'Address);
 194:	0a 00                	or     al,BYTE PTR [rax]
			195: R_X86_64_32	.debug_str+0x25f
 196:	00 00                	add    BYTE PTR [rax],al
      adainit;
 198:	00 02                	add    BYTE PTR [rdx],al
 19a:	30 00                	xor    BYTE PTR [rax],al
			19b: R_X86_64_32	.debug_str+0x7fe
      Ada_Main_Program;
 19c:	00 00                	add    BYTE PTR [rax],al
 19e:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
      adafinal;
 1a2:	00 09                	add    BYTE PTR [rcx],cl
 1a4:	03 00                	add    eax,DWORD PTR [rax]
			1a5: R_X86_64_64	gnat__ioS
      Finalize;
 1a6:	00 00                	add    BYTE PTR [rax],al
 1a8:	00 00                	add    BYTE PTR [rax],al
 1aa:	00 00                	add    BYTE PTR [rax],al
      return (gnat_exit_status);
 1ac:	00 0a                	add    BYTE PTR [rdx],cl
 1ae:	00 00                	add    BYTE PTR [rax],al
			1ae: R_X86_64_32	.debug_str+0x270
 1b0:	00 00                	add    BYTE PTR [rax],al
   end;
 1b2:	02 32                	add    dh,BYTE PTR [rdx]
 1b4:	00 00                	add    BYTE PTR [rax],al
			1b4: R_X86_64_32	.debug_str+0x6ee
 1b6:	00 00                	add    BYTE PTR [rax],al
 1b8:	74 00                	je     1ba <.debug_info+0x1ba>
 1ba:	00 00                	add    BYTE PTR [rax],al
 1bc:	09 03                	or     DWORD PTR [rbx],eax
	...
			1be: R_X86_64_64	systemS
 1c6:	0a 00                	or     al,BYTE PTR [rax]
			1c7: R_X86_64_32	.debug_str+0x281
 1c8:	00 00                	add    BYTE PTR [rax],al
 1ca:	00 02                	add    BYTE PTR [rdx],al
 1cc:	34 00                	xor    al,0x0
			1cd: R_X86_64_32	.debug_str+0x34
 1ce:	00 00                	add    BYTE PTR [rax],al
 1d0:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 1d4:	00 09                	add    BYTE PTR [rcx],cl
 1d6:	03 00                	add    eax,DWORD PTR [rax]
			1d7: R_X86_64_64	system__memoryB
 1d8:	00 00                	add    BYTE PTR [rax],al
 1da:	00 00                	add    BYTE PTR [rax],al
 1dc:	00 00                	add    BYTE PTR [rax],al
 1de:	00 0a                	add    BYTE PTR [rdx],cl
 1e0:	00 00                	add    BYTE PTR [rax],al
			1e0: R_X86_64_32	.debug_str+0x292
 1e2:	00 00                	add    BYTE PTR [rax],al
 1e4:	02 36                	add    dh,BYTE PTR [rsi]
 1e6:	00 00                	add    BYTE PTR [rax],al
			1e6: R_X86_64_32	.debug_str+0x177
 1e8:	00 00                	add    BYTE PTR [rax],al
 1ea:	74 00                	je     1ec <.debug_info+0x1ec>
 1ec:	00 00                	add    BYTE PTR [rax],al
 1ee:	09 03                	or     DWORD PTR [rbx],eax
	...
			1f0: R_X86_64_64	system__memoryS
 1f8:	0a 00                	or     al,BYTE PTR [rax]
			1f9: R_X86_64_32	.debug_str+0x4cc
 1fa:	00 00                	add    BYTE PTR [rax],al
 1fc:	00 02                	add    BYTE PTR [rdx],al
 1fe:	38 00                	cmp    BYTE PTR [rax],al
			1ff: R_X86_64_32	.debug_str+0x94d
 200:	00 00                	add    BYTE PTR [rax],al
 202:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 206:	00 09                	add    BYTE PTR [rcx],cl
 208:	03 00                	add    eax,DWORD PTR [rax]
			209: R_X86_64_64	ada__exceptionsB
 20a:	00 00                	add    BYTE PTR [rax],al
 20c:	00 00                	add    BYTE PTR [rax],al
 20e:	00 00                	add    BYTE PTR [rax],al
 210:	00 0a                	add    BYTE PTR [rdx],cl
 212:	00 00                	add    BYTE PTR [rax],al
			212: R_X86_64_32	.debug_str+0x4dd
 214:	00 00                	add    BYTE PTR [rax],al
 216:	02 3a                	add    bh,BYTE PTR [rdx]
 218:	00 00                	add    BYTE PTR [rax],al
			218: R_X86_64_32	.debug_str+0x9eb
 21a:	00 00                	add    BYTE PTR [rax],al
 21c:	74 00                	je     21e <.debug_info+0x21e>
 21e:	00 00                	add    BYTE PTR [rax],al
 220:	09 03                	or     DWORD PTR [rbx],eax
	...
			222: R_X86_64_64	ada__exceptionsS
 22a:	0a 00                	or     al,BYTE PTR [rax]
			22b: R_X86_64_32	.debug_str+0x4ee
 22c:	00 00                	add    BYTE PTR [rax],al
 22e:	00 02                	add    BYTE PTR [rdx],al
 230:	3c 00                	cmp    al,0x0
			231: R_X86_64_32	.debug_str+0x56f
 232:	00 00                	add    BYTE PTR [rax],al
 234:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 238:	00 09                	add    BYTE PTR [rcx],cl
 23a:	03 00                	add    eax,DWORD PTR [rax]
			23b: R_X86_64_64	adaS
 23c:	00 00                	add    BYTE PTR [rax],al
 23e:	00 00                	add    BYTE PTR [rax],al
 240:	00 00                	add    BYTE PTR [rax],al
 242:	00 0a                	add    BYTE PTR [rdx],cl
 244:	00 00                	add    BYTE PTR [rax],al
			244: R_X86_64_32	.debug_str+0x4ff
 246:	00 00                	add    BYTE PTR [rax],al
 248:	02 3e                	add    bh,BYTE PTR [rsi]
 24a:	00 00                	add    BYTE PTR [rax],al
			24a: R_X86_64_32	.debug_str+0x690
 24c:	00 00                	add    BYTE PTR [rax],al
 24e:	74 00                	je     250 <.debug_info+0x250>
 250:	00 00                	add    BYTE PTR [rax],al
 252:	09 03                	or     DWORD PTR [rbx],eax
	...
			254: R_X86_64_64	ada__exceptions__last_chance_handlerB
 25c:	0a 00                	or     al,BYTE PTR [rax]
			25d: R_X86_64_32	.debug_str+0x641
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	00 02                	add    BYTE PTR [rdx],al
 262:	40 00 00             	add    BYTE PTR [rax],al
			263: R_X86_64_32	.debug_str+0x76d
 265:	00 00                	add    BYTE PTR [rax],al
 267:	74 00                	je     269 <.debug_info+0x269>
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	09 03                	or     DWORD PTR [rbx],eax
	...
			26d: R_X86_64_64	ada__exceptions__last_chance_handlerS
 275:	0a 00                	or     al,BYTE PTR [rax]
			276: R_X86_64_32	.debug_str+0x51a
 277:	00 00                	add    BYTE PTR [rax],al
 279:	00 02                	add    BYTE PTR [rdx],al
 27b:	42 00 00             	rex.X add BYTE PTR [rax],al
			27c: R_X86_64_32	.debug_str+0x734
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	74 00                	je     282 <.debug_info+0x282>
 282:	00 00                	add    BYTE PTR [rax],al
 284:	09 03                	or     DWORD PTR [rbx],eax
	...
			286: R_X86_64_64	system__soft_linksB
 28e:	0a 00                	or     al,BYTE PTR [rax]
			28f: R_X86_64_32	.debug_str+0x52b
 290:	00 00                	add    BYTE PTR [rax],al
 292:	00 02                	add    BYTE PTR [rdx],al
 294:	44 00 00             	add    BYTE PTR [rax],r8b
			295: R_X86_64_32	.debug_str+0x85d
 297:	00 00                	add    BYTE PTR [rax],al
 299:	74 00                	je     29b <.debug_info+0x29b>
 29b:	00 00                	add    BYTE PTR [rax],al
 29d:	09 03                	or     DWORD PTR [rbx],eax
	...
			29f: R_X86_64_64	system__soft_linksS
 2a7:	0a 00                	or     al,BYTE PTR [rax]
			2a8: R_X86_64_32	.debug_str+0x53c
 2a9:	00 00                	add    BYTE PTR [rax],al
 2ab:	00 02                	add    BYTE PTR [rdx],al
 2ad:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
			2ae: R_X86_64_32	.debug_str+0x748
 2b0:	00 00                	add    BYTE PTR [rax],al
 2b2:	74 00                	je     2b4 <.debug_info+0x2b4>
 2b4:	00 00                	add    BYTE PTR [rax],al
 2b6:	09 03                	or     DWORD PTR [rbx],eax
	...
			2b8: R_X86_64_64	system__parametersB
 2c0:	0a 00                	or     al,BYTE PTR [rax]
			2c1: R_X86_64_32	.debug_str+0x54d
 2c2:	00 00                	add    BYTE PTR [rax],al
 2c4:	00 02                	add    BYTE PTR [rdx],al
 2c6:	48 00 00             	rex.W add BYTE PTR [rax],al
			2c7: R_X86_64_32	.debug_str+0x1f6
 2c9:	00 00                	add    BYTE PTR [rax],al
 2cb:	74 00                	je     2cd <.debug_info+0x2cd>
 2cd:	00 00                	add    BYTE PTR [rax],al
 2cf:	09 03                	or     DWORD PTR [rbx],eax
	...
			2d1: R_X86_64_64	system__parametersS
 2d9:	0a 00                	or     al,BYTE PTR [rax]
			2da: R_X86_64_32	.debug_str+0x55e
 2db:	00 00                	add    BYTE PTR [rax],al
 2dd:	00 02                	add    BYTE PTR [rdx],al
 2df:	4a 00 00             	rex.WX add BYTE PTR [rax],al
			2e0: R_X86_64_32	.debug_str+0xb63
 2e2:	00 00                	add    BYTE PTR [rax],al
 2e4:	74 00                	je     2e6 <.debug_info+0x2e6>
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	09 03                	or     DWORD PTR [rbx],eax
	...
			2ea: R_X86_64_64	system__secondary_stackB
 2f2:	0a 00                	or     al,BYTE PTR [rax]
			2f3: R_X86_64_32	.debug_str+0x793
 2f4:	00 00                	add    BYTE PTR [rax],al
 2f6:	00 02                	add    BYTE PTR [rdx],al
 2f8:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
			2f9: R_X86_64_32	.debug_str+0x96
 2fb:	00 00                	add    BYTE PTR [rax],al
 2fd:	74 00                	je     2ff <.debug_info+0x2ff>
 2ff:	00 00                	add    BYTE PTR [rax],al
 301:	09 03                	or     DWORD PTR [rbx],eax
	...
			303: R_X86_64_64	system__secondary_stackS
 30b:	0a 00                	or     al,BYTE PTR [rax]
			30c: R_X86_64_32	.debug_str+0x85
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 02                	add    BYTE PTR [rdx],al
 311:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
			312: R_X86_64_32	.debug_str+0xaf2
 314:	00 00                	add    BYTE PTR [rax],al
 316:	74 00                	je     318 <.debug_info+0x318>
 318:	00 00                	add    BYTE PTR [rax],al
 31a:	09 03                	or     DWORD PTR [rbx],eax
	...
			31c: R_X86_64_64	system__storage_elementsB
 324:	0a 00                	or     al,BYTE PTR [rax]
			325: R_X86_64_32	.debug_str+0x7b9
 326:	00 00                	add    BYTE PTR [rax],al
 328:	00 02                	add    BYTE PTR [rdx],al
 32a:	50                   	push   rax
 32b:	00 00                	add    BYTE PTR [rax],al
			32b: R_X86_64_32	.debug_str+0x6b
 32d:	00 00                	add    BYTE PTR [rax],al
 32f:	74 00                	je     331 <.debug_info+0x331>
 331:	00 00                	add    BYTE PTR [rax],al
 333:	09 03                	or     DWORD PTR [rbx],eax
	...
			335: R_X86_64_64	system__storage_elementsS
 33d:	0a 00                	or     al,BYTE PTR [rax]
			33e: R_X86_64_32	.debug_str+0x630
 33f:	00 00                	add    BYTE PTR [rax],al
 341:	00 02                	add    BYTE PTR [rdx],al
 343:	52                   	push   rdx
 344:	00 00                	add    BYTE PTR [rax],al
			344: R_X86_64_32	.debug_str+0x2a3
 346:	00 00                	add    BYTE PTR [rax],al
 348:	74 00                	je     34a <.debug_info+0x34a>
 34a:	00 00                	add    BYTE PTR [rax],al
 34c:	09 03                	or     DWORD PTR [rbx],eax
	...
			34e: R_X86_64_64	system__stack_checkingB
 356:	0a 00                	or     al,BYTE PTR [rax]
			357: R_X86_64_32	.debug_str+0x14d
 358:	00 00                	add    BYTE PTR [rax],al
 35a:	00 02                	add    BYTE PTR [rdx],al
 35c:	54                   	push   rsp
 35d:	00 00                	add    BYTE PTR [rax],al
			35d: R_X86_64_32	.debug_str+0x3ad
 35f:	00 00                	add    BYTE PTR [rax],al
 361:	74 00                	je     363 <.debug_info+0x363>
 363:	00 00                	add    BYTE PTR [rax],al
 365:	09 03                	or     DWORD PTR [rbx],eax
	...
			367: R_X86_64_64	system__stack_checkingS
 36f:	0a 00                	or     al,BYTE PTR [rax]
			370: R_X86_64_32	.debug_str+0x808
 371:	00 00                	add    BYTE PTR [rax],al
 373:	00 02                	add    BYTE PTR [rdx],al
 375:	56                   	push   rsi
 376:	00 00                	add    BYTE PTR [rax],al
			376: R_X86_64_32	.debug_str+0x2bb
 378:	00 00                	add    BYTE PTR [rax],al
 37a:	74 00                	je     37c <.debug_info+0x37c>
 37c:	00 00                	add    BYTE PTR [rax],al
 37e:	09 03                	or     DWORD PTR [rbx],eax
	...
			380: R_X86_64_64	system__exception_tableB
 388:	0a 00                	or     al,BYTE PTR [rax]
			389: R_X86_64_32	.debug_str+0x819
 38a:	00 00                	add    BYTE PTR [rax],al
 38c:	00 02                	add    BYTE PTR [rdx],al
 38e:	58                   	pop    rax
 38f:	00 00                	add    BYTE PTR [rax],al
			38f: R_X86_64_32	.debug_str+0x3d1
 391:	00 00                	add    BYTE PTR [rax],al
 393:	74 00                	je     395 <.debug_info+0x395>
 395:	00 00                	add    BYTE PTR [rax],al
 397:	09 03                	or     DWORD PTR [rbx],eax
	...
			399: R_X86_64_64	system__exception_tableS
 3a1:	0a 00                	or     al,BYTE PTR [rax]
			3a2: R_X86_64_32	.debug_str+0x82a
 3a3:	00 00                	add    BYTE PTR [rax],al
 3a5:	00 02                	add    BYTE PTR [rdx],al
 3a7:	5a                   	pop    rdx
 3a8:	00 00                	add    BYTE PTR [rax],al
			3a8: R_X86_64_32	.debug_str+0x5bb
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	74 00                	je     3ae <.debug_info+0x3ae>
 3ae:	00 00                	add    BYTE PTR [rax],al
 3b0:	09 03                	or     DWORD PTR [rbx],eax
	...
			3b2: R_X86_64_64	system__exceptionsB
 3ba:	0a 00                	or     al,BYTE PTR [rax]
			3bb: R_X86_64_32	.debug_str+0x83b
 3bc:	00 00                	add    BYTE PTR [rax],al
 3be:	00 02                	add    BYTE PTR [rdx],al
 3c0:	5c                   	pop    rsp
 3c1:	00 00                	add    BYTE PTR [rax],al
			3c1: R_X86_64_32	.debug_str+0x5a7
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	74 00                	je     3c7 <.debug_info+0x3c7>
 3c7:	00 00                	add    BYTE PTR [rax],al
 3c9:	09 03                	or     DWORD PTR [rbx],eax
	...
			3cb: R_X86_64_64	system__exceptionsS
 3d3:	0a 00                	or     al,BYTE PTR [rax]
			3d4: R_X86_64_32	.debug_str+0x84c
 3d5:	00 00                	add    BYTE PTR [rax],al
 3d7:	00 02                	add    BYTE PTR [rdx],al
 3d9:	5e                   	pop    rsi
 3da:	00 00                	add    BYTE PTR [rax],al
			3da: R_X86_64_32	.debug_str+0x1a4
 3dc:	00 00                	add    BYTE PTR [rax],al
 3de:	74 00                	je     3e0 <.debug_info+0x3e0>
 3e0:	00 00                	add    BYTE PTR [rax],al
 3e2:	09 03                	or     DWORD PTR [rbx],eax
	...
			3e4: R_X86_64_64	system__exceptions__machineS
 3ec:	0a 00                	or     al,BYTE PTR [rax]
			3ed: R_X86_64_32	.debug_str+0xa94
 3ee:	00 00                	add    BYTE PTR [rax],al
 3f0:	00 02                	add    BYTE PTR [rdx],al
 3f2:	60                   	(bad)  
 3f3:	00 00                	add    BYTE PTR [rax],al
			3f3: R_X86_64_32	.debug_str+0x1d2
 3f5:	00 00                	add    BYTE PTR [rax],al
 3f7:	74 00                	je     3f9 <.debug_info+0x3f9>
 3f9:	00 00                	add    BYTE PTR [rax],al
 3fb:	09 03                	or     DWORD PTR [rbx],eax
	...
			3fd: R_X86_64_64	system__exceptions_debugB
 405:	0a 00                	or     al,BYTE PTR [rax]
			406: R_X86_64_32	.debug_str+0x668
 407:	00 00                	add    BYTE PTR [rax],al
 409:	00 02                	add    BYTE PTR [rdx],al
 40b:	62                   	(bad)  
 40c:	00 00                	add    BYTE PTR [rax],al
			40c: R_X86_64_32	.debug_str+0x6f6
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	74 00                	je     412 <.debug_info+0x412>
 412:	00 00                	add    BYTE PTR [rax],al
 414:	09 03                	or     DWORD PTR [rbx],eax
	...
			416: R_X86_64_64	system__exceptions_debugS
 41e:	0a 00                	or     al,BYTE PTR [rax]
			41f: R_X86_64_32	.debug_str+0xabf
 420:	00 00                	add    BYTE PTR [rax],al
 422:	00 02                	add    BYTE PTR [rdx],al
 424:	64 00 00             	add    BYTE PTR fs:[rax],al
			425: R_X86_64_32	.debug_str+0x98c
 427:	00 00                	add    BYTE PTR [rax],al
 429:	74 00                	je     42b <.debug_info+0x42b>
 42b:	00 00                	add    BYTE PTR [rax],al
 42d:	09 03                	or     DWORD PTR [rbx],eax
	...
			42f: R_X86_64_64	system__img_intB
 437:	0a 00                	or     al,BYTE PTR [rax]
			438: R_X86_64_32	.debug_str+0xad0
 439:	00 00                	add    BYTE PTR [rax],al
 43b:	00 02                	add    BYTE PTR [rdx],al
 43d:	66 00 00             	data16 add BYTE PTR [rax],al
			43e: R_X86_64_32	.debug_str+0x1c1
 440:	00 00                	add    BYTE PTR [rax],al
 442:	74 00                	je     444 <.debug_info+0x444>
 444:	00 00                	add    BYTE PTR [rax],al
 446:	09 03                	or     DWORD PTR [rbx],eax
	...
			448: R_X86_64_64	system__img_intS
 450:	0a 00                	or     al,BYTE PTR [rax]
			451: R_X86_64_32	.debug_str+0xae1
 452:	00 00                	add    BYTE PTR [rax],al
 454:	00 02                	add    BYTE PTR [rdx],al
 456:	68 00 00 00 00       	push   0x0
			457: R_X86_64_32	.debug_str+0x721
 45b:	74 00                	je     45d <.debug_info+0x45d>
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	09 03                	or     DWORD PTR [rbx],eax
	...
			461: R_X86_64_64	system__tracebackB
 469:	0a 00                	or     al,BYTE PTR [rax]
			46a: R_X86_64_32	.debug_str+0x39c
 46b:	00 00                	add    BYTE PTR [rax],al
 46d:	00 02                	add    BYTE PTR [rdx],al
 46f:	6a 00                	push   0x0
			470: R_X86_64_32	.debug_str+0xb2e
 471:	00 00                	add    BYTE PTR [rax],al
 473:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 477:	00 09                	add    BYTE PTR [rcx],cl
 479:	03 00                	add    eax,DWORD PTR [rax]
			47a: R_X86_64_64	system__tracebackS
 47b:	00 00                	add    BYTE PTR [rax],al
 47d:	00 00                	add    BYTE PTR [rax],al
 47f:	00 00                	add    BYTE PTR [rax],al
 481:	00 0a                	add    BYTE PTR [rdx],cl
 483:	00 00                	add    BYTE PTR [rax],al
			483: R_X86_64_32	.debug_str+0x6b6
 485:	00 00                	add    BYTE PTR [rax],al
 487:	02 6c 00 00          	add    ch,BYTE PTR [rax+rax*1+0x0]
			489: R_X86_64_32	.debug_str+0x915
 48b:	00 00                	add    BYTE PTR [rax],al
 48d:	74 00                	je     48f <.debug_info+0x48f>
 48f:	00 00                	add    BYTE PTR [rax],al
 491:	09 03                	or     DWORD PTR [rbx],eax
	...
			493: R_X86_64_64	system__traceback_entriesB
 49b:	0a 00                	or     al,BYTE PTR [rax]
			49c: R_X86_64_32	.debug_str+0x6cc
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 02                	add    BYTE PTR [rdx],al
 4a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4a2:	00 00                	add    BYTE PTR [rax],al
			4a2: R_X86_64_32	.debug_str+0x9d0
 4a4:	00 00                	add    BYTE PTR [rax],al
 4a6:	74 00                	je     4a8 <.debug_info+0x4a8>
 4a8:	00 00                	add    BYTE PTR [rax],al
 4aa:	09 03                	or     DWORD PTR [rbx],eax
	...
			4ac: R_X86_64_64	system__traceback_entriesS
 4b4:	0a 00                	or     al,BYTE PTR [rax]
			4b5: R_X86_64_32	.debug_str+0xb41
 4b6:	00 00                	add    BYTE PTR [rax],al
 4b8:	00 02                	add    BYTE PTR [rdx],al
 4ba:	70 00                	jo     4bc <.debug_info+0x4bc>
			4bb: R_X86_64_32	.debug_str+0x187
 4bc:	00 00                	add    BYTE PTR [rax],al
 4be:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 4c2:	00 09                	add    BYTE PTR [rcx],cl
 4c4:	03 00                	add    eax,DWORD PTR [rax]
			4c5: R_X86_64_64	system__traceback__symbolicB
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	00 00                	add    BYTE PTR [rax],al
 4ca:	00 00                	add    BYTE PTR [rax],al
 4cc:	00 0a                	add    BYTE PTR [rdx],cl
 4ce:	00 00                	add    BYTE PTR [rax],al
			4ce: R_X86_64_32	.debug_str+0xb52
 4d0:	00 00                	add    BYTE PTR [rax],al
 4d2:	02 72 00             	add    dh,BYTE PTR [rdx+0x0]
			4d4: R_X86_64_32	.debug_str+0x96f
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 4db:	00 09                	add    BYTE PTR [rcx],cl
 4dd:	03 00                	add    eax,DWORD PTR [rax]
			4de: R_X86_64_64	system__traceback__symbolicS
 4df:	00 00                	add    BYTE PTR [rax],al
 4e1:	00 00                	add    BYTE PTR [rax],al
 4e3:	00 00                	add    BYTE PTR [rax],al
 4e5:	00 0a                	add    BYTE PTR [rdx],cl
 4e7:	00 00                	add    BYTE PTR [rax],al
			4e7: R_X86_64_32	.debug_str+0x304
 4e9:	00 00                	add    BYTE PTR [rax],al
 4eb:	02 74 00 00          	add    dh,BYTE PTR [rax+rax*1+0x0]
			4ed: R_X86_64_32	.debug_str+0x43e
 4ef:	00 00                	add    BYTE PTR [rax],al
 4f1:	74 00                	je     4f3 <.debug_info+0x4f3>
 4f3:	00 00                	add    BYTE PTR [rax],al
 4f5:	09 03                	or     DWORD PTR [rbx],eax
	...
			4f7: R_X86_64_64	ada__exceptions__tracebackB
 4ff:	0a 00                	or     al,BYTE PTR [rax]
			500: R_X86_64_32	.debug_str+0x315
 501:	00 00                	add    BYTE PTR [rax],al
 503:	00 02                	add    BYTE PTR [rdx],al
 505:	76 00                	jbe    507 <.debug_info+0x507>
			506: R_X86_64_32	.debug_str+0x4b0
 507:	00 00                	add    BYTE PTR [rax],al
 509:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 50d:	00 09                	add    BYTE PTR [rcx],cl
 50f:	03 00                	add    eax,DWORD PTR [rax]
			510: R_X86_64_64	ada__exceptions__tracebackS
 511:	00 00                	add    BYTE PTR [rax],al
 513:	00 00                	add    BYTE PTR [rax],al
 515:	00 00                	add    BYTE PTR [rax],al
 517:	00 0a                	add    BYTE PTR [rdx],cl
 519:	00 00                	add    BYTE PTR [rax],al
			519: R_X86_64_32	.debug_str+0x326
 51b:	00 00                	add    BYTE PTR [rax],al
 51d:	02 78 00             	add    bh,BYTE PTR [rax+0x0]
			51f: R_X86_64_32	.debug_str+0xa56
 520:	00 00                	add    BYTE PTR [rax],al
 522:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 526:	00 09                	add    BYTE PTR [rcx],cl
 528:	03 00                	add    eax,DWORD PTR [rax]
			529: R_X86_64_64	system__address_imageB
 52a:	00 00                	add    BYTE PTR [rax],al
 52c:	00 00                	add    BYTE PTR [rax],al
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	00 0a                	add    BYTE PTR [rdx],cl
 532:	00 00                	add    BYTE PTR [rax],al
			532: R_X86_64_32	.debug_str+0x5a
 534:	00 00                	add    BYTE PTR [rax],al
 536:	02 7a 00             	add    bh,BYTE PTR [rdx+0x0]
			538: R_X86_64_32	.debug_str+0x679
 539:	00 00                	add    BYTE PTR [rax],al
 53b:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 53f:	00 09                	add    BYTE PTR [rcx],cl
 541:	03 00                	add    eax,DWORD PTR [rax]
			542: R_X86_64_64	system__address_imageS
 543:	00 00                	add    BYTE PTR [rax],al
 545:	00 00                	add    BYTE PTR [rax],al
 547:	00 00                	add    BYTE PTR [rax],al
 549:	00 0a                	add    BYTE PTR [rdx],cl
 54b:	00 00                	add    BYTE PTR [rax],al
			54b: R_X86_64_32	.debug_str+0x347
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
			551: R_X86_64_32	.debug_str+0x5cf
 553:	00 00                	add    BYTE PTR [rax],al
 555:	74 00                	je     557 <.debug_info+0x557>
 557:	00 00                	add    BYTE PTR [rax],al
 559:	09 03                	or     DWORD PTR [rbx],eax
	...
			55b: R_X86_64_64	system__wch_conB
 563:	0a 00                	or     al,BYTE PTR [rax]
			564: R_X86_64_32	.debug_str+0x358
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 02                	add    BYTE PTR [rdx],al
 569:	7e 00                	jle    56b <.debug_info+0x56b>
			56a: R_X86_64_32	.debug_str+0x166
 56b:	00 00                	add    BYTE PTR [rax],al
 56d:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 571:	00 09                	add    BYTE PTR [rcx],cl
 573:	03 00                	add    eax,DWORD PTR [rax]
			574: R_X86_64_64	system__wch_conS
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 00                	add    BYTE PTR [rax],al
 579:	00 00                	add    BYTE PTR [rax],al
 57b:	00 0a                	add    BYTE PTR [rdx],cl
 57d:	00 00                	add    BYTE PTR [rax],al
			57d: R_X86_64_32	.debug_str+0x369
 57f:	00 00                	add    BYTE PTR [rax],al
 581:	02 80 00 00 00 00    	add    al,BYTE PTR [rax+0x0]
			583: R_X86_64_32	.debug_str+0x37a
 587:	74 00                	je     589 <.debug_info+0x589>
 589:	00 00                	add    BYTE PTR [rax],al
 58b:	09 03                	or     DWORD PTR [rbx],eax
	...
			58d: R_X86_64_64	system__wch_stwB
 595:	0a 00                	or     al,BYTE PTR [rax]
			596: R_X86_64_32	.debug_str+0xb7c
 597:	00 00                	add    BYTE PTR [rax],al
 599:	00 02                	add    BYTE PTR [rdx],al
 59b:	82                   	(bad)  
 59c:	00 00                	add    BYTE PTR [rax],al
			59c: R_X86_64_32	.debug_str+0x42d
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	74 00                	je     5a2 <.debug_info+0x5a2>
 5a2:	00 00                	add    BYTE PTR [rax],al
 5a4:	09 03                	or     DWORD PTR [rbx],eax
	...
			5a6: R_X86_64_64	system__wch_stwS
 5ae:	0a 00                	or     al,BYTE PTR [rax]
			5af: R_X86_64_32	.debug_str+0x38b
 5b0:	00 00                	add    BYTE PTR [rax],al
 5b2:	00 02                	add    BYTE PTR [rdx],al
 5b4:	84 00                	test   BYTE PTR [rax],al
			5b5: R_X86_64_32	.debug_str+0xa45
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 5bc:	00 09                	add    BYTE PTR [rcx],cl
 5be:	03 00                	add    eax,DWORD PTR [rax]
			5bf: R_X86_64_64	system__wch_cnvB
 5c0:	00 00                	add    BYTE PTR [rax],al
 5c2:	00 00                	add    BYTE PTR [rax],al
 5c4:	00 00                	add    BYTE PTR [rax],al
 5c6:	00 0a                	add    BYTE PTR [rdx],cl
 5c8:	00 00                	add    BYTE PTR [rax],al
			5c8: R_X86_64_32	.debug_str+0x49
 5ca:	00 00                	add    BYTE PTR [rax],al
 5cc:	02 86 00 00 00 00    	add    al,BYTE PTR [rsi+0x0]
			5ce: R_X86_64_32	.debug_str+0x574
 5d2:	74 00                	je     5d4 <.debug_info+0x5d4>
 5d4:	00 00                	add    BYTE PTR [rax],al
 5d6:	09 03                	or     DWORD PTR [rbx],eax
	...
			5d8: R_X86_64_64	system__wch_cnvS
 5e0:	0a 00                	or     al,BYTE PTR [rax]
			5e1: R_X86_64_32	.debug_str+0x710
 5e2:	00 00                	add    BYTE PTR [rax],al
 5e4:	00 02                	add    BYTE PTR [rdx],al
 5e6:	88 00                	mov    BYTE PTR [rax],al
			5e7: R_X86_64_32	.debug_str+0x3c5
 5e8:	00 00                	add    BYTE PTR [rax],al
 5ea:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 5ee:	00 09                	add    BYTE PTR [rcx],cl
 5f0:	03 00                	add    eax,DWORD PTR [rax]
			5f1: R_X86_64_64	interfacesS
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	00 00                	add    BYTE PTR [rax],al
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	00 0a                	add    BYTE PTR [rdx],cl
 5fa:	00 00                	add    BYTE PTR [rax],al
			5fa: R_X86_64_32	.debug_str+0x585
 5fc:	00 00                	add    BYTE PTR [rax],al
 5fe:	02 8a 00 00 00 00    	add    cl,BYTE PTR [rdx+0x0]
			600: R_X86_64_32	.debug_str
 604:	74 00                	je     606 <.debug_info+0x606>
 606:	00 00                	add    BYTE PTR [rax],al
 608:	09 03                	or     DWORD PTR [rbx],eax
	...
			60a: R_X86_64_64	system__wch_jisB
 612:	0a 00                	or     al,BYTE PTR [rax]
			613: R_X86_64_32	.debug_str+0x596
 614:	00 00                	add    BYTE PTR [rax],al
 616:	00 02                	add    BYTE PTR [rdx],al
 618:	8c 00                	mov    WORD PTR [rax],es
			619: R_X86_64_32	.debug_str+0x6dd
 61a:	00 00                	add    BYTE PTR [rax],al
 61c:	00 74 00 00          	add    BYTE PTR [rax+rax*1+0x0],dh
 620:	00 09                	add    BYTE PTR [rcx],cl
 622:	03 00                	add    eax,DWORD PTR [rax]
			623: R_X86_64_64	system__wch_jisS
 624:	00 00                	add    BYTE PTR [rax],al
 626:	00 00                	add    BYTE PTR [rax],al
 628:	00 00                	add    BYTE PTR [rax],al
 62a:	00 0a                	add    BYTE PTR [rdx],cl
 62c:	00 00                	add    BYTE PTR [rax],al
			62c: R_X86_64_32	.debug_str+0x75c
 62e:	00 00                	add    BYTE PTR [rax],al
 630:	02 8e 00 00 00 00    	add    cl,BYTE PTR [rsi+0x0]
			632: R_X86_64_32	.debug_str+0xa6d
 636:	74 00                	je     638 <.debug_info+0x638>
 638:	00 00                	add    BYTE PTR [rax],al
 63a:	09 03                	or     DWORD PTR [rbx],eax
	...
			63c: R_X86_64_64	system__crtlS
 644:	0b 00                	or     eax,DWORD PTR [rax]
			645: R_X86_64_32	.debug_str+0x11f
 646:	00 00                	add    BYTE PTR [rax],al
 648:	00 01                	add    BYTE PTR [rcx],al
 64a:	0e                   	(bad)  
 64b:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 64c:	00 00                	add    BYTE PTR [rax],al
 64e:	00 09                	add    BYTE PTR [rcx],cl
 650:	03 00                	add    eax,DWORD PTR [rax]
			651: R_X86_64_64	.rodata+0x108
 652:	00 00                	add    BYTE PTR [rax],al
 654:	00 00                	add    BYTE PTR [rax],al
 656:	00 00                	add    BYTE PTR [rax],al
 658:	00 0b                	add    BYTE PTR [rbx],cl
 65a:	00 00                	add    BYTE PTR [rax],al
			65a: R_X86_64_32	.debug_str+0x474
 65c:	00 00                	add    BYTE PTR [rax],al
 65e:	01 0f                	add    DWORD PTR [rdi],ecx
 660:	d4                   	(bad)  
 661:	00 00                	add    BYTE PTR [rax],al
 663:	00 09                	add    BYTE PTR [rcx],cl
 665:	03 00                	add    eax,DWORD PTR [rax]
			666: R_X86_64_64	.rodata+0x109
 667:	00 00                	add    BYTE PTR [rax],al
 669:	00 00                	add    BYTE PTR [rax],al
 66b:	00 00                	add    BYTE PTR [rax],al
 66d:	00 0b                	add    BYTE PTR [rbx],cl
 66f:	00 00                	add    BYTE PTR [rax],al
			66f: R_X86_64_32	.debug_str+0x9fc
 671:	00 00                	add    BYTE PTR [rax],al
 673:	01 11                	add    DWORD PTR [rcx],edx
 675:	83 06 00             	add    DWORD PTR [rsi],0x0
 678:	00 09                	add    BYTE PTR [rcx],cl
 67a:	03 00                	add    eax,DWORD PTR [rax]
			67b: R_X86_64_64	.data+0x2
 67c:	00 00                	add    BYTE PTR [rax],al
 67e:	00 00                	add    BYTE PTR [rax],al
 680:	00 00                	add    BYTE PTR [rax],al
 682:	00 05 01 02 00 00    	add    BYTE PTR [rip+0x201],al        # 889 <main+0x73b>
			686: R_X86_64_32	.debug_str+0x49a
 688:	00 00                	add    BYTE PTR [rax],al
 68a:	0c 00                	or     al,0x0
			68b: R_X86_64_32	.debug_str+0x6c7
 68c:	00 00                	add    BYTE PTR [rax],al
 68e:	00 01                	add    BYTE PTR [rcx],al
 690:	74 1d                	je     6af <.debug_info+0x6af>
 692:	07                   	(bad)  
	...
			695: R_X86_64_64	.text+0x14e
 69b:	00 00                	add    BYTE PTR [rax],al
 69d:	65 00 00             	add    BYTE PTR gs:[rax],al
 6a0:	00 00                	add    BYTE PTR [rax],al
 6a2:	00 00                	add    BYTE PTR [rax],al
 6a4:	00 01                	add    BYTE PTR [rcx],al
 6a6:	9c                   	pushf  
 6a7:	1d 07 00 00 0d       	sbb    eax,0xd000007
 6ac:	00 00                	add    BYTE PTR [rax],al
			6ac: R_X86_64_32	.debug_str+0x3ea
 6ae:	00 00                	add    BYTE PTR [rax],al
 6b0:	02 1f                	add    bl,BYTE PTR [rdi]
 6b2:	24 07                	and    al,0x7
 6b4:	00 00                	add    BYTE PTR [rax],al
 6b6:	02 91 5c 0d 00 00    	add    dl,BYTE PTR [rcx+0xd5c]
			6ba: R_X86_64_32	.debug_str+0x44
 6bc:	00 00                	add    BYTE PTR [rax],al
 6be:	02 20                	add    ah,BYTE PTR [rax]
 6c0:	2b 07                	sub    eax,DWORD PTR [rdi]
 6c2:	00 00                	add    BYTE PTR [rax],al
 6c4:	02 91 50 0d 00 00    	add    dl,BYTE PTR [rcx+0xd50]
			6c8: R_X86_64_32	.debug_str+0x495
 6ca:	00 00                	add    BYTE PTR [rax],al
 6cc:	02 21                	add    ah,BYTE PTR [rcx]
 6ce:	2b 07                	sub    eax,DWORD PTR [rdi]
 6d0:	00 00                	add    BYTE PTR [rax],al
 6d2:	02 91 48 02 00 00    	add    dl,BYTE PTR [rcx+0x248]
			6d6: R_X86_64_32	.debug_str+0x652
 6d8:	00 00                	add    BYTE PTR [rax],al
 6da:	1d 07 00 00 e9       	sbb    eax,0xe9000007
 6df:	06                   	(bad)  
 6e0:	00 00                	add    BYTE PTR [rax],al
 6e2:	03 46 00             	add    eax,DWORD PTR [rsi+0x0]
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	02 00                	add    al,BYTE PTR [rax]
 6e9:	07                   	(bad)  
 6ea:	00 00                	add    BYTE PTR [rax],al
			6ea: R_X86_64_32	.debug_str+0x45a
 6ec:	00 00                	add    BYTE PTR [rax],al
 6ee:	08 01                	or     BYTE PTR [rcx],al
 6f0:	7f 00                	jg     6f2 <.debug_info+0x6f2>
 6f2:	07                   	(bad)  
 6f3:	00 00                	add    BYTE PTR [rax],al
 6f5:	08 46 00             	or     BYTE PTR [rsi+0x0],al
 6f8:	01 7f d5             	add    DWORD PTR [rdi-0x2b],edi
 6fb:	06                   	(bad)  
 6fc:	00 00                	add    BYTE PTR [rax],al
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	0e                   	(bad)  
 701:	73 65                	jae    768 <.debug_info+0x768>
 703:	68 00 01 7f e9       	push   0xffffffffe97f0100
 708:	06                   	(bad)  
 709:	00 00                	add    BYTE PTR [rax],al
 70b:	02 91 68 0b 00 00    	add    dl,BYTE PTR [rcx+0xb68]
			70f: R_X86_64_32	.debug_str+0x95e
 711:	00 00                	add    BYTE PTR [rax],al
 713:	01 81 e0 00 00 00    	add    DWORD PTR [rcx+0xe0],eax
 719:	02 91 60 00 0f 04    	add    dl,BYTE PTR [rcx+0x40f0060]
 71f:	05 00 00 00 00       	add    eax,0x0
			720: R_X86_64_32	.debug_str+0x15e
 724:	04 1d                	add    al,0x1d
 726:	07                   	(bad)  
 727:	00 00                	add    BYTE PTR [rax],al
 729:	10 08                	adc    BYTE PTR [rax],cl
 72b:	06                   	(bad)  
 72c:	29 07                	sub    DWORD PTR [rdi],eax
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	11 00                	adc    DWORD PTR [rax],eax
			731: R_X86_64_32	.debug_str+0x880
 732:	00 00                	add    BYTE PTR [rax],al
 734:	00 01                	add    BYTE PTR [rcx],al
 736:	25 00 00 00 00       	and    eax,0x0
			737: R_X86_64_32	.debug_str+0x425
	...
			73b: R_X86_64_64	.text+0x2a
 743:	24 01                	and    al,0x1
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 00                	add    BYTE PTR [rax],al
 749:	00 00                	add    BYTE PTR [rax],al
 74b:	01 9c 11 00 00 00 00 	add    DWORD PTR [rcx+rdx*1+0x0],ebx
			74e: R_X86_64_32	.debug_str+0x9bd
 752:	01 13                	add    DWORD PTR [rbx],edx
	...
			754: R_X86_64_32	.debug_str+0x877
			758: R_X86_64_64	.text
 760:	29 00                	sub    DWORD PTR [rax],eax
 762:	00 00                	add    BYTE PTR [rax],al
 764:	00 00                	add    BYTE PTR [rax],al
 766:	00 00                	add    BYTE PTR [rax],al
 768:	01                   	.byte 0x1
 769:	9c                   	pushf  
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   procedure adafinal is
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <main+0x30b11c8>
      if not Is_Elaborated then
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	00 00                	add    BYTE PTR [rax],al
      Is_Elaborated := False;
  13:	02 01                	add    al,BYTE PTR [rcx]
  15:	01 03                	add    DWORD PTR [rbx],eax
  17:	0e                   	(bad)  
  18:	49 13 01             	adc    rax,QWORD PTR [r9]
      Runtime_Finalize;
  1b:	13 00                	adc    eax,DWORD PTR [rax]
  1d:	00 03                	add    BYTE PTR [rbx],al
      s_stalib_adafinal;
  1f:	21 00                	and    DWORD PTR [rax],eax
  21:	49 13 2f             	adc    rbp,QWORD PTR [r15]
   end adafinal;
  24:	0d 00 00 04 26       	or     eax,0x26040000
  29:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
   procedure adainit is
  2c:	34 19                	xor    al,0x19
      if Is_Elaborated then
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	05 24 00 0b 0b       	add    eax,0xb0b0024
  35:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  38:	0e                   	(bad)  
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	06                   	(bad)  
  3c:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
      Is_Elaborated := True;
  40:	00 00                	add    BYTE PTR [rax],al
  42:	07                   	(bad)  
  43:	13 01                	adc    eax,DWORD PTR [rcx]
      Main_Priority := -1;
  45:	03 0e                	add    ecx,DWORD PTR [rsi]
  47:	0b 0b                	or     ecx,DWORD PTR [rbx]
  49:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  4b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  4d:	34 19                	xor    al,0x19
      Time_Slice_Value := -1;
  4f:	01 13                	add    DWORD PTR [rbx],edx
  51:	00 00                	add    BYTE PTR [rax],al
  53:	08 0d 00 03 08 3a    	or     BYTE PTR [rip+0x3a080300],cl        # 3a080359 <main+0x3a08020b>
      WC_Encoding := 'b';
  59:	0b 3b                	or     edi,DWORD PTR [rbx]
  5b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5e:	38 0b                	cmp    BYTE PTR [rbx],cl
      Locking_Policy := ' ';
  60:	00 00                	add    BYTE PTR [rax],al
  62:	09 35 00 49 13 00    	or     DWORD PTR [rip+0x134900],esi        # 134968 <main+0x13481a>
      Queuing_Policy := ' ';
  68:	00 0a                	add    BYTE PTR [rdx],cl
  6a:	34 00                	xor    al,0x0
  6c:	03 0e                	add    ecx,DWORD PTR [rsi]
      Task_Dispatching_Policy := ' ';
  6e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  70:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  72:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  73:	0e                   	(bad)  
      Priority_Specific_Dispatching :=
  74:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  77:	19 02                	sbb    DWORD PTR [rdx],eax
  79:	18 00                	sbb    BYTE PTR [rax],al
  7b:	00 0b                	add    BYTE PTR [rbx],cl
  7d:	34 00                	xor    al,0x0
  7f:	03 0e                	add    ecx,DWORD PTR [rsi]
  81:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      Num_Specific_Dispatching := 0;
  83:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  85:	49 13 02             	adc    rax,QWORD PTR [r10]
  88:	18 00                	sbb    BYTE PTR [rax],al
  8a:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
      Main_CPU := -1;
  8d:	01 3f                	add    DWORD PTR [rdi],edi
  8f:	19 03                	sbb    DWORD PTR [rbx],eax
  91:	0e                   	(bad)  
  92:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  94:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      Interrupt_States := Local_Interrupt_States'Address;
  96:	49 13 11             	adc    rdx,QWORD PTR [r9]
  99:	01 12                	add    DWORD PTR [rdx],edx
  9b:	07                   	(bad)  
  9c:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
  a3:	00 00                	add    BYTE PTR [rax],al
      Num_Interrupt_States := 0;
  a5:	0d 05 00 03 0e       	or     eax,0xe030005
  aa:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      Unreserve_All_Interrupts := 0;
  ae:	49 13 02             	adc    rax,QWORD PTR [r10]
  b1:	18 00                	sbb    BYTE PTR [rax],al
  b3:	00 0e                	add    BYTE PTR [rsi],cl
  b5:	34 00                	xor    al,0x0
  b7:	03 08                	add    ecx,DWORD PTR [rax]
      Detect_Blocking := 0;
  b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  bd:	49 13 02             	adc    rax,QWORD PTR [r10]
  c0:	18 00                	sbb    BYTE PTR [rax],al
      Default_Stack_Size := -1;
  c2:	00 0f                	add    BYTE PTR [rdi],cl
  c4:	24 00                	and    al,0x0
  c6:	0b 0b                	or     ecx,DWORD PTR [rbx]
  c8:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  cb:	0e                   	(bad)  
      Leap_Seconds_Support := 0;
  cc:	34 19                	xor    al,0x19
  ce:	00 00                	add    BYTE PTR [rax],al
  d0:	10 0f                	adc    BYTE PTR [rdi],cl
  d2:	00 0b                	add    BYTE PTR [rbx],cl
  d4:	0b 00                	or     eax,DWORD PTR [rax]
      Runtime_Initialize (1);
  d6:	00 11                	add    BYTE PTR [rcx],dl
  d8:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
  db:	19 03                	sbb    DWORD PTR [rbx],eax
  dd:	0e                   	(bad)  
  de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      Finalize_Library_Objects := null;
  e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  e3:	0e                   	(bad)  
  e4:	11 01                	adc    DWORD PTR [rcx],eax
  e6:	12 07                	adc    al,BYTE PTR [rdi]
  e8:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   procedure adafinal is
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
      if not Is_Elaborated then
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_info
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
			10: R_X86_64_64	.text
      Is_Elaborated := False;
  18:	b3 01                	mov    bl,0x1
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   procedure adafinal is
   0:	08 01                	or     BYTE PTR [rcx],al
   2:	00 00                	add    BYTE PTR [rax],al
      if not Is_Elaborated then
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	af                   	scas   eax,DWORD PTR es:[rdi]
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
      Is_Elaborated := False;
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
      Runtime_Finalize;
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	68 6f 6d 65 2f       	push   0x2f656d6f
      s_stalib_adafinal;
  21:	75 62                	jne    85 <.debug_line+0x85>
   end adafinal;
  23:	75 6e                	jne    93 <.debug_line+0x93>
  25:	74 75                	je     9c <.debug_line+0x9c>
  27:	2f                   	(bad)  
  28:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
   procedure adainit is
  2a:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  31:	6e 
      if Is_Elaborated then
  32:	67 2f                	addr32 (bad) 
  34:	50                   	push   rax
  35:	72 6f                	jb     a6 <.debug_line+0xa6>
  37:	67 72 61             	addr32 jb 9b <.debug_line+0x9b>
  3a:	6d                   	ins    DWORD PTR es:[rdi],dx
  3b:	6d                   	ins    DWORD PTR es:[rdi],dx
  3c:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
      Is_Elaborated := True;
  43:	61                   	(bad)  
      Main_Priority := -1;
  44:	73 73                	jae    b9 <.debug_line+0xb9>
  46:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  48:	62                   	(bad)  
  49:	6c                   	ins    BYTE PTR es:[rdi],dx
  4a:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
      Time_Slice_Value := -1;
  51:	61                   	(bad)  
  52:	72 69                	jb     bd <.debug_line+0xbd>
  54:	65 73 2f             	gs jae 86 <.debug_line+0x86>
  57:	41                   	rex.B
      WC_Encoding := 'b';
  58:	64 61                	fs (bad) 
  5a:	2f                   	(bad)  
  5b:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  5d:	74 65                	je     c4 <.debug_line+0xc4>
      Locking_Policy := ' ';
  5f:	6c                   	ins    BYTE PTR es:[rdi],dx
  60:	5f                   	pop    rdi
  61:	41 72 63             	rex.B jb c7 <.debug_line+0xc7>
  64:	68 69 74 65 63       	push   0x63657469
      Queuing_Policy := ' ';
  69:	74 75                	je     e0 <.debug_line+0xe0>
  6b:	72 65                	jb     d2 <.debug_line+0xd2>
      Task_Dispatching_Policy := ' ';
  6d:	2f                   	(bad)  
  6e:	41                   	rex.B
  6f:	64 64 5f             	fs fs pop rdi
  72:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
      Priority_Specific_Dispatching :=
  74:	74 5f                	je     d5 <.debug_line+0xd5>
  76:	77 5f                	ja     d7 <.debug_line+0xd7>
  78:	49                   	rex.WB
  79:	4f 2f                	rex.WRXB (bad) 
  7b:	57                   	push   rdi
  7c:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
  83:	75 
      Num_Specific_Dispatching := 0;
  84:	67 5f                	addr32 pop rdi
  86:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  88:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  8a:	00 00                	add    BYTE PTR [rax],al
      Main_CPU := -1;
  8c:	62                   	(bad)  
  8d:	7e 61                	jle    f0 <.debug_line+0xf0>
  8f:	64 64 5f             	fs fs pop rdi
  92:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
      Interrupt_States := Local_Interrupt_States'Address;
  99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  9a:	2e 61                	cs (bad) 
  9c:	64 62                	fs (bad) 
  9e:	00 01                	add    BYTE PTR [rcx],al
  a0:	00 00                	add    BYTE PTR [rax],al
  a2:	62                   	(bad)  
  a3:	7e 61                	jle    106 <.debug_line+0x106>
      Num_Interrupt_States := 0;
  a5:	64 64 5f             	fs fs pop rdi
  a8:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
      Unreserve_All_Interrupts := 0;
  af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b0:	2e 61                	cs (bad) 
  b2:	64 73 00             	fs jae b5 <.debug_line+0xb5>
  b5:	01 00                	add    DWORD PTR [rax],eax
  b7:	00 00                	add    BYTE PTR [rax],al
      Detect_Blocking := 0;
  b9:	00 09                	add    BYTE PTR [rcx],cl
  bb:	02 00                	add    al,BYTE PTR [rax]
			bc: R_X86_64_64	.text
  bd:	00 00                	add    BYTE PTR [rax],al
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	00 00                	add    BYTE PTR [rax],al
      Default_Stack_Size := -1;
  c3:	00 03                	add    BYTE PTR [rbx],al
  c5:	12 01                	adc    al,BYTE PTR [rcx]
  c7:	52                   	push   rdx
  c8:	d9 75 59             	fnstenv [rbp+0x59]
  cb:	59                   	pop    rcx
      Leap_Seconds_Support := 0;
  cc:	37                   	(bad)  
  cd:	25 40 03 28 4a       	and    eax,0x4a280340
  d2:	e7 75                	out    0x75,eax
  d4:	9f                   	lahf   
  d5:	9f                   	lahf   
      Runtime_Initialize (1);
  d6:	75 75                	jne    14d <ada_main__local_interrupt_states+0x44>
  d8:	75 75                	jne    14f <main+0x1>
  da:	d8 9f 9f d7 9f 9f    	fcomp  DWORD PTR [rdi-0x60602861]
      Finalize_Library_Objects := null;
  e0:	9f                   	lahf   
  e1:	9f                   	lahf   
  e2:	a0 a0 ae 59 59 08 13 	movabs al,ds:0x85913085959aea0
  e9:	59 08 
      System.Soft_Links'Elab_Spec;
  eb:	13 59 08             	adc    ebx,DWORD PTR [rcx+0x8]
  ee:	13 59 08             	adc    ebx,DWORD PTR [rcx+0x8]
      System.Exception_Table'Elab_Body;
  f1:	13 03                	adc    eax,DWORD PTR [rbx]
  f3:	5f                   	pop    rdi
  f4:	3c 03                	cmp    al,0x3
      E26 := E26 + 1;
  f6:	21 20                	and    DWORD PTR [rax],esp
  f8:	33 03                	xor    eax,DWORD PTR [rbx]
  fa:	0d 08 2e b0 91       	or     eax,0x91b02e08
  ff:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 100:	ae                   	scas   al,BYTE PTR es:[rdi]
 101:	bb 59 59 59 59       	mov    ebx,0x59595959
      System.Exceptions'Elab_Spec;
 106:	67 02 02             	add    al,BYTE PTR [edx]
 109:	00 01                	add    BYTE PTR [rcx],al
      E28 := E28 + 1;
 10b:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   procedure adafinal is
   0:	73 79                	jae    7b <.debug_str+0x7b>
   2:	73 74                	jae    78 <.debug_str+0x78>
      if not Is_Elaborated then
   4:	65 6d                	gs ins DWORD PTR es:[rdi],dx
   6:	5f                   	pop    rdi
   7:	5f                   	pop    rdi
   8:	77 63                	ja     6d <.debug_str+0x6d>
   a:	68 5f 6a 69 73       	push   0x73696a5f
   f:	42 00 61 64          	rex.X add BYTE PTR [rcx+0x64],spl
      Is_Elaborated := False;
  13:	61                   	(bad)  
  14:	5f                   	pop    rdi
  15:	6d                   	ins    DWORD PTR es:[rdi],dx
  16:	61                   	(bad)  
  17:	69 6e 5f 5f 54 6c 6f 	imul   ebp,DWORD PTR [rsi+0x5f],0x6f6c545f
      s_stalib_adafinal;
  1e:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
  21:	5f                   	pop    rdi
  22:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
   end adafinal;
  29:	70 74                	jo     9f <.debug_str+0x9f>
   procedure adainit is
  2b:	5f                   	pop    rdi
  2c:	73 74                	jae    a2 <.debug_str+0xa2>
      if Is_Elaborated then
  2e:	61                   	(bad)  
  2f:	74 65                	je     96 <.debug_str+0x96>
  31:	73 53                	jae    86 <.debug_str+0x86>
  33:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
  36:	73 74                	jae    ac <.debug_str+0xac>
  38:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  3a:	5f                   	pop    rdi
  3b:	5f                   	pop    rdi
  3c:	6d                   	ins    DWORD PTR es:[rdi],dx
      Is_Elaborated := True;
  3d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40:	72 79                	jb     bb <.debug_str+0xbb>
  42:	42 00 61 72          	rex.X add BYTE PTR [rcx+0x72],spl
      Main_Priority := -1;
  46:	67 76 00             	addr32 jbe 49 <.debug_str+0x49>
  49:	61                   	(bad)  
  4a:	64 61                	fs (bad) 
  4c:	5f                   	pop    rdi
  4d:	6d                   	ins    DWORD PTR es:[rdi],dx
      Time_Slice_Value := -1;
  4e:	61                   	(bad)  
  4f:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
  56:	30 34 39             	xor    BYTE PTR [rcx+rdi*1],dh
      WC_Encoding := 'b';
  59:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
  5c:	61                   	(bad)  
  5d:	5f                   	pop    rdi
  5e:	6d                   	ins    DWORD PTR es:[rdi],dx
      Locking_Policy := ' ';
  5f:	61                   	(bad)  
  60:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
      Queuing_Policy := ' ';
  67:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
  6a:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
      Task_Dispatching_Policy := ' ';
  6d:	73 74                	jae    e3 <.debug_str+0xe3>
  6f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  71:	5f                   	pop    rdi
  72:	5f                   	pop    rdi
  73:	73 74                	jae    e9 <.debug_str+0xe9>
      Priority_Specific_Dispatching :=
  75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  76:	72 61                	jb     d9 <.debug_str+0xd9>
  78:	67 65 5f             	addr32 gs pop rdi
  7b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  7d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  7f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  81:	74 73                	je     f6 <.debug_str+0xf6>
      Num_Specific_Dispatching := 0;
  83:	53                   	push   rbx
  84:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
  87:	61                   	(bad)  
  88:	5f                   	pop    rdi
  89:	6d                   	ins    DWORD PTR es:[rdi],dx
  8a:	61                   	(bad)  
  8b:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
      Main_CPU := -1;
  92:	30 32                	xor    BYTE PTR [rdx],dh
  94:	31 00                	xor    DWORD PTR [rax],eax
      Interrupt_States := Local_Interrupt_States'Address;
  96:	73 79                	jae    111 <.debug_str+0x111>
  98:	73 74                	jae    10e <.debug_str+0x10e>
  9a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  9c:	5f                   	pop    rdi
  9d:	5f                   	pop    rdi
  9e:	73 65                	jae    105 <.debug_str+0x105>
  a0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  a3:	64 61                	fs (bad) 
      Num_Interrupt_States := 0;
  a5:	72 79                	jb     120 <.debug_str+0x120>
  a7:	5f                   	pop    rdi
  a8:	73 74                	jae    11e <.debug_str+0x11e>
  aa:	61                   	(bad)  
  ab:	63 6b 53             	movsxd ebp,DWORD PTR [rbx+0x53]
      Unreserve_All_Interrupts := 0;
  ae:	00 2f                	add    BYTE PTR [rdi],ch
  b0:	68 6f 6d 65 2f       	push   0x2f656d6f
  b5:	75 62                	jne    119 <.debug_str+0x119>
  b7:	75 6e                	jne    127 <.debug_str+0x127>
      Detect_Blocking := 0;
  b9:	74 75                	je     130 <.debug_str+0x130>
  bb:	2f                   	(bad)  
  bc:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  be:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  c5:	6e 
      Default_Stack_Size := -1;
  c6:	67 2f                	addr32 (bad) 
  c8:	50                   	push   rax
  c9:	72 6f                	jb     13a <.debug_str+0x13a>
  cb:	67 72 61             	addr32 jb 12f <.debug_str+0x12f>
      Leap_Seconds_Support := 0;
  ce:	6d                   	ins    DWORD PTR es:[rdi],dx
  cf:	6d                   	ins    DWORD PTR es:[rdi],dx
  d0:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
      Runtime_Initialize (1);
  d7:	61                   	(bad)  
  d8:	73 73                	jae    14d <.debug_str+0x14d>
  da:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  dc:	62                   	(bad)  
  dd:	6c                   	ins    BYTE PTR es:[rdi],dx
  de:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
      Finalize_Library_Objects := null;
  e5:	61                   	(bad)  
  e6:	72 69                	jb     151 <.debug_str+0x151>
  e8:	65 73 2f             	gs jae 11a <.debug_str+0x11a>
      System.Soft_Links'Elab_Spec;
  eb:	41                   	rex.B
  ec:	64 61                	fs (bad) 
  ee:	2f                   	(bad)  
  ef:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
      System.Exception_Table'Elab_Body;
  f1:	74 65                	je     158 <.debug_str+0x158>
  f3:	6c                   	ins    BYTE PTR es:[rdi],dx
  f4:	5f                   	pop    rdi
      E26 := E26 + 1;
  f5:	41 72 63             	rex.B jb 15b <.debug_str+0x15b>
  f8:	68 69 74 65 63       	push   0x63657469
  fd:	74 75                	je     174 <.debug_str+0x174>
  ff:	72 65                	jb     166 <.debug_str+0x166>
 101:	2f                   	(bad)  
 102:	41                   	rex.B
 103:	64 64 5f             	fs fs pop rdi
      System.Exceptions'Elab_Spec;
 106:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 108:	74 5f                	je     169 <.debug_str+0x169>
 10a:	77 5f                	ja     16b <.debug_str+0x16b>
      E28 := E28 + 1;
 10c:	49                   	rex.WB
 10d:	4f 2f                	rex.WRXB (bad) 
 10f:	57                   	push   rdi
 110:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
 117:	75 
 118:	67 5f                	addr32 pop rdi
 11a:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
      System.Soft_Links'Elab_Body;
 11c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 11e:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
      E16 := E16 + 1;
 121:	61                   	(bad)  
 122:	5f                   	pop    rdi
 123:	6d                   	ins    DWORD PTR es:[rdi],dx
 124:	61                   	(bad)  
 125:	69 6e 5f 5f 6c 6f 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x636f6c5f
 12c:	61                   	(bad)  
 12d:	6c                   	ins    BYTE PTR es:[rdi],dx
 12e:	5f                   	pop    rdi
 12f:	70 72                	jo     1a3 <.debug_str+0x1a3>
 131:	69 6f 72 69 74 79 5f 	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
      E20 := E20 + 1;
 138:	73 70                	jae    1aa <.debug_str+0x1aa>
 13a:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
 13e:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
 145:	61                   	(bad)  
 146:	74 63                	je     1ab <.debug_str+0x1ab>
   end adainit;
 148:	68 69 6e 67 00       	push   0x676e69
 14d:	61                   	(bad)  
   function main
 14e:	64 61                	fs (bad) 
 150:	5f                   	pop    rdi
 151:	6d                   	ins    DWORD PTR es:[rdi],dx
 152:	61                   	(bad)  
 153:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 15a:	30 32                	xor    BYTE PTR [rdx],dh
 15c:	34 00                	xor    al,0x0
 15e:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
      Ensure_Reference : aliased System.Address := Ada_Main_Program_Name'Address;
 165:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 168:	73 74                	jae    1de <.debug_str+0x1de>
 16a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
      gnat_argc := argc;
 16c:	5f                   	pop    rdi
 16d:	5f                   	pop    rdi
 16e:	77 63                	ja     1d3 <.debug_str+0x1d3>
 170:	68 5f 63 6f 6e       	push   0x6e6f635f
      gnat_argv := argv;
 175:	53                   	push   rbx
 176:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 179:	73 74                	jae    1ef <.debug_str+0x1ef>
 17b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 17d:	5f                   	pop    rdi
 17e:	5f                   	pop    rdi
 17f:	6d                   	ins    DWORD PTR es:[rdi],dx
      gnat_envp := envp;
 180:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 182:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 183:	72 79                	jb     1fe <.debug_str+0x1fe>
 185:	53                   	push   rbx
 186:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 189:	73 74                	jae    1ff <.debug_str+0x1ff>
      Initialize (SEH'Address);
 18b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 18d:	5f                   	pop    rdi
 18e:	5f                   	pop    rdi
 18f:	74 72                	je     203 <.debug_str+0x203>
 191:	61                   	(bad)  
 192:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 195:	61                   	(bad)  
 196:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
      adainit;
 199:	5f                   	pop    rdi
 19a:	73 79                	jae    215 <.debug_str+0x215>
      Ada_Main_Program;
 19c:	6d                   	ins    DWORD PTR es:[rdi],dx
 19d:	62                   	(bad)  
 19e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 19f:	6c                   	ins    BYTE PTR es:[rdi],dx
 1a0:	69 63 42 00 73 79 73 	imul   esp,DWORD PTR [rbx+0x42],0x73797300
      Finalize;
 1a7:	74 65                	je     20e <.debug_str+0x20e>
 1a9:	6d                   	ins    DWORD PTR es:[rdi],dx
 1aa:	5f                   	pop    rdi
      return (gnat_exit_status);
 1ab:	5f                   	pop    rdi
 1ac:	65 78 63             	gs js  212 <.debug_str+0x212>
 1af:	65 70 74             	gs jo  226 <.debug_str+0x226>
   end;
 1b2:	69 6f 6e 73 5f 5f 6d 	imul   ebp,DWORD PTR [rdi+0x6e],0x6d5f5f73
 1b9:	61                   	(bad)  
 1ba:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
 1bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1be:	65 53                	gs push rbx
 1c0:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 1c3:	73 74                	jae    239 <.debug_str+0x239>
 1c5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 1c7:	5f                   	pop    rdi
 1c8:	5f                   	pop    rdi
 1c9:	69 6d 67 5f 69 6e 74 	imul   ebp,DWORD PTR [rbp+0x67],0x746e695f
 1d0:	53                   	push   rbx
 1d1:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 1d4:	73 74                	jae    24a <.debug_str+0x24a>
 1d6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 1d8:	5f                   	pop    rdi
 1d9:	5f                   	pop    rdi
 1da:	65 78 63             	gs js  240 <.debug_str+0x240>
 1dd:	65 70 74             	gs jo  254 <.debug_str+0x254>
 1e0:	69 6f 6e 73 5f 64 65 	imul   ebp,DWORD PTR [rdi+0x6e],0x65645f73
 1e7:	62                   	(bad)  
 1e8:	75 67                	jne    251 <.debug_str+0x251>
 1ea:	42 00 67 6e          	rex.X add BYTE PTR [rdi+0x6e],spl
 1ee:	61                   	(bad)  
 1ef:	74 5f                	je     250 <.debug_str+0x250>
 1f1:	5f                   	pop    rdi
 1f2:	69 6f 42 00 73 79 73 	imul   ebp,DWORD PTR [rdi+0x42],0x73797300
 1f9:	74 65                	je     260 <.debug_str+0x260>
 1fb:	6d                   	ins    DWORD PTR es:[rdi],dx
 1fc:	5f                   	pop    rdi
 1fd:	5f                   	pop    rdi
 1fe:	70 61                	jo     261 <.debug_str+0x261>
 200:	72 61                	jb     263 <.debug_str+0x263>
 202:	6d                   	ins    DWORD PTR es:[rdi],dx
 203:	65 74 65             	gs je  26b <.debug_str+0x26b>
 206:	72 73                	jb     27b <.debug_str+0x27b>
 208:	53                   	push   rbx
 209:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 20c:	61                   	(bad)  
 20d:	5f                   	pop    rdi
 20e:	6d                   	ins    DWORD PTR es:[rdi],dx
 20f:	61                   	(bad)  
 210:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 217:	30 30                	xor    BYTE PTR [rax],dh
 219:	31 00                	xor    DWORD PTR [rax],eax
 21b:	61                   	(bad)  
 21c:	64 61                	fs (bad) 
 21e:	5f                   	pop    rdi
 21f:	6d                   	ins    DWORD PTR es:[rdi],dx
 220:	61                   	(bad)  
 221:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 228:	30 30                	xor    BYTE PTR [rax],dh
 22a:	32 00                	xor    al,BYTE PTR [rax]
 22c:	61                   	(bad)  
 22d:	64 61                	fs (bad) 
 22f:	5f                   	pop    rdi
 230:	6d                   	ins    DWORD PTR es:[rdi],dx
 231:	61                   	(bad)  
 232:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 239:	30 30                	xor    BYTE PTR [rax],dh
 23b:	33 00                	xor    eax,DWORD PTR [rax]
 23d:	61                   	(bad)  
 23e:	64 61                	fs (bad) 
 240:	5f                   	pop    rdi
 241:	6d                   	ins    DWORD PTR es:[rdi],dx
 242:	61                   	(bad)  
 243:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 24a:	30 30                	xor    BYTE PTR [rax],dh
 24c:	34 00                	xor    al,0x0
 24e:	61                   	(bad)  
 24f:	64 61                	fs (bad) 
 251:	5f                   	pop    rdi
 252:	6d                   	ins    DWORD PTR es:[rdi],dx
 253:	61                   	(bad)  
 254:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 25b:	30 30                	xor    BYTE PTR [rax],dh
 25d:	35 00 61 64 61       	xor    eax,0x61646100
 262:	5f                   	pop    rdi
 263:	6d                   	ins    DWORD PTR es:[rdi],dx
 264:	61                   	(bad)  
 265:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 26c:	30 30                	xor    BYTE PTR [rax],dh
 26e:	36 00 61 64          	add    BYTE PTR ss:[rcx+0x64],ah
 272:	61                   	(bad)  
 273:	5f                   	pop    rdi
 274:	6d                   	ins    DWORD PTR es:[rdi],dx
 275:	61                   	(bad)  
 276:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 27d:	30 30                	xor    BYTE PTR [rax],dh
 27f:	37                   	(bad)  
 280:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 283:	61                   	(bad)  
 284:	5f                   	pop    rdi
 285:	6d                   	ins    DWORD PTR es:[rdi],dx
 286:	61                   	(bad)  
 287:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 28e:	30 30                	xor    BYTE PTR [rax],dh
 290:	38 00                	cmp    BYTE PTR [rax],al
 292:	61                   	(bad)  
 293:	64 61                	fs (bad) 
 295:	5f                   	pop    rdi
 296:	6d                   	ins    DWORD PTR es:[rdi],dx
 297:	61                   	(bad)  
 298:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 29f:	30 30                	xor    BYTE PTR [rax],dh
 2a1:	39 00                	cmp    DWORD PTR [rax],eax
 2a3:	73 79                	jae    31e <.debug_str+0x31e>
 2a5:	73 74                	jae    31b <.debug_str+0x31b>
 2a7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 2a9:	5f                   	pop    rdi
 2aa:	5f                   	pop    rdi
 2ab:	73 74                	jae    321 <.debug_str+0x321>
 2ad:	61                   	(bad)  
 2ae:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 2b1:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
 2b4:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
 2b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2b8:	67 42 00 73 79       	rex.X add BYTE PTR [ebx+0x79],sil
 2bd:	73 74                	jae    333 <.debug_str+0x333>
 2bf:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 2c1:	5f                   	pop    rdi
 2c2:	5f                   	pop    rdi
 2c3:	65 78 63             	gs js  329 <.debug_str+0x329>
 2c6:	65 70 74             	gs jo  33d <.debug_str+0x33d>
 2c9:	69 6f 6e 5f 74 61 62 	imul   ebp,DWORD PTR [rdi+0x6e],0x6261745f
 2d0:	6c                   	ins    BYTE PTR es:[rdi],dx
 2d1:	65 42 00 61 64       	rex.X add BYTE PTR gs:[rcx+0x64],spl
 2d6:	61                   	(bad)  
 2d7:	5f                   	pop    rdi
 2d8:	6d                   	ins    DWORD PTR es:[rdi],dx
 2d9:	61                   	(bad)  
 2da:	69 6e 5f 5f 54 6c 6f 	imul   ebp,DWORD PTR [rsi+0x5f],0x6f6c545f
 2e1:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 2e4:	5f                   	pop    rdi
 2e5:	70 72                	jo     359 <.debug_str+0x359>
 2e7:	69 6f 72 69 74 79 5f 	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
 2ee:	73 70                	jae    360 <.debug_str+0x360>
 2f0:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
 2f4:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
 2fb:	61                   	(bad)  
 2fc:	74 63                	je     361 <.debug_str+0x361>
 2fe:	68 69 6e 67 53       	push   0x53676e69
 303:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 306:	61                   	(bad)  
 307:	5f                   	pop    rdi
 308:	6d                   	ins    DWORD PTR es:[rdi],dx
 309:	61                   	(bad)  
 30a:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 311:	30 34 30             	xor    BYTE PTR [rax+rsi*1],dh
 314:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 317:	61                   	(bad)  
 318:	5f                   	pop    rdi
 319:	6d                   	ins    DWORD PTR es:[rdi],dx
 31a:	61                   	(bad)  
 31b:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 322:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
 325:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 328:	61                   	(bad)  
 329:	5f                   	pop    rdi
 32a:	6d                   	ins    DWORD PTR es:[rdi],dx
 32b:	61                   	(bad)  
 32c:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 333:	30 34 32             	xor    BYTE PTR [rdx+rsi*1],dh
 336:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 339:	73 74                	jae    3af <.debug_str+0x3af>
 33b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 33d:	5f                   	pop    rdi
 33e:	5f                   	pop    rdi
 33f:	61                   	(bad)  
 340:	64 64 72 65          	fs fs jb 3a9 <.debug_str+0x3a9>
 344:	73 73                	jae    3b9 <.debug_str+0x3b9>
 346:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 349:	61                   	(bad)  
 34a:	5f                   	pop    rdi
 34b:	6d                   	ins    DWORD PTR es:[rdi],dx
 34c:	61                   	(bad)  
 34d:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 354:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
 357:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 35a:	61                   	(bad)  
 35b:	5f                   	pop    rdi
 35c:	6d                   	ins    DWORD PTR es:[rdi],dx
 35d:	61                   	(bad)  
 35e:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 365:	30 34 35 00 61 64 61 	xor    BYTE PTR [rsi*1+0x61646100],dh
 36c:	5f                   	pop    rdi
 36d:	6d                   	ins    DWORD PTR es:[rdi],dx
 36e:	61                   	(bad)  
 36f:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 376:	30 34 36             	xor    BYTE PTR [rsi+rsi*1],dh
 379:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 37c:	73 74                	jae    3f2 <.debug_str+0x3f2>
 37e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 380:	5f                   	pop    rdi
 381:	5f                   	pop    rdi
 382:	77 63                	ja     3e7 <.debug_str+0x3e7>
 384:	68 5f 73 74 77       	push   0x7774735f
 389:	42 00 61 64          	rex.X add BYTE PTR [rcx+0x64],spl
 38d:	61                   	(bad)  
 38e:	5f                   	pop    rdi
 38f:	6d                   	ins    DWORD PTR es:[rdi],dx
 390:	61                   	(bad)  
 391:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 398:	30 34 38             	xor    BYTE PTR [rax+rdi*1],dh
 39b:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 39e:	61                   	(bad)  
 39f:	5f                   	pop    rdi
 3a0:	6d                   	ins    DWORD PTR es:[rdi],dx
 3a1:	61                   	(bad)  
 3a2:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 3a9:	30 33                	xor    BYTE PTR [rbx],dh
 3ab:	35 00 73 79 73       	xor    eax,0x73797300
 3b0:	74 65                	je     417 <.debug_str+0x417>
 3b2:	6d                   	ins    DWORD PTR es:[rdi],dx
 3b3:	5f                   	pop    rdi
 3b4:	5f                   	pop    rdi
 3b5:	73 74                	jae    42b <.debug_str+0x42b>
 3b7:	61                   	(bad)  
 3b8:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3bb:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
 3be:	63 6b 69             	movsxd ebp,DWORD PTR [rbx+0x69]
 3c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c2:	67 53                	addr32 push rbx
 3c4:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
 3c7:	74 65                	je     42e <.debug_str+0x42e>
 3c9:	72 66                	jb     431 <.debug_str+0x431>
 3cb:	61                   	(bad)  
 3cc:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
 3cf:	53                   	push   rbx
 3d0:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 3d3:	73 74                	jae    449 <.debug_str+0x449>
 3d5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 3d7:	5f                   	pop    rdi
 3d8:	5f                   	pop    rdi
 3d9:	65 78 63             	gs js  43f <.debug_str+0x43f>
 3dc:	65 70 74             	gs jo  453 <.debug_str+0x453>
 3df:	69 6f 6e 5f 74 61 62 	imul   ebp,DWORD PTR [rdi+0x6e],0x6261745f
 3e6:	6c                   	ins    BYTE PTR es:[rdi],dx
 3e7:	65 53                	gs push rbx
 3e9:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
 3ec:	67 63 00             	movsxd eax,DWORD PTR [eax]
 3ef:	61                   	(bad)  
 3f0:	64 61                	fs (bad) 
 3f2:	5f                   	pop    rdi
 3f3:	6d                   	ins    DWORD PTR es:[rdi],dx
 3f4:	61                   	(bad)  
 3f5:	69 6e 5f 5f 6c 6f 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x636f6c5f
 3fc:	61                   	(bad)  
 3fd:	6c                   	ins    BYTE PTR es:[rdi],dx
 3fe:	5f                   	pop    rdi
 3ff:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
 406:	70 74                	jo     47c <.debug_str+0x47c>
 408:	5f                   	pop    rdi
 409:	73 74                	jae    47f <.debug_str+0x47f>
 40b:	61                   	(bad)  
 40c:	74 65                	je     473 <.debug_str+0x473>
 40e:	73 5f                	jae    46f <.debug_str+0x46f>
 410:	5f                   	pop    rdi
 411:	5f                   	pop    rdi
 412:	50                   	push   rax
 413:	41                   	rex.B
 414:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
 418:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 41a:	61                   	(bad)  
 41b:	74 5f                	je     47c <.debug_str+0x47c>
 41d:	76 65                	jbe    484 <.debug_str+0x484>
 41f:	72 73                	jb     494 <.debug_str+0x494>
 421:	69 6f 6e 00 61 64 61 	imul   ebp,DWORD PTR [rdi+0x6e],0x61646100
 428:	69 6e 69 74 00 73 79 	imul   ebp,DWORD PTR [rsi+0x69],0x79730074
 42f:	73 74                	jae    4a5 <.debug_str+0x4a5>
 431:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 433:	5f                   	pop    rdi
 434:	5f                   	pop    rdi
 435:	77 63                	ja     49a <.debug_str+0x49a>
 437:	68 5f 73 74 77       	push   0x7774735f
 43c:	53                   	push   rbx
 43d:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 440:	61                   	(bad)  
 441:	5f                   	pop    rdi
 442:	5f                   	pop    rdi
 443:	65 78 63             	gs js  4a9 <.debug_str+0x4a9>
 446:	65 70 74             	gs jo  4bd <.debug_str+0x4bd>
 449:	69 6f 6e 73 5f 5f 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x745f5f73
 450:	72 61                	jb     4b3 <.debug_str+0x4b3>
 452:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 455:	61                   	(bad)  
 456:	63 6b 42             	movsxd ebp,DWORD PTR [rbx+0x42]
 459:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 45c:	61                   	(bad)  
 45d:	5f                   	pop    rdi
 45e:	6d                   	ins    DWORD PTR es:[rdi],dx
 45f:	61                   	(bad)  
 460:	69 6e 5f 5f 6d 61 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69616d5f
 467:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 468:	5f                   	pop    rdi
 469:	5f                   	pop    rdi
 46a:	73 65                	jae    4d1 <.debug_str+0x4d1>
 46c:	68 5f 5f 5f 50       	push   0x505f5f5f
 471:	41                   	rex.B
 472:	44 00 61 64          	add    BYTE PTR [rcx+0x64],r12b
 476:	61                   	(bad)  
 477:	5f                   	pop    rdi
 478:	6d                   	ins    DWORD PTR es:[rdi],dx
 479:	61                   	(bad)  
 47a:	69 6e 5f 5f 6c 6f 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x636f6c5f
 481:	61                   	(bad)  
 482:	6c                   	ins    BYTE PTR es:[rdi],dx
 483:	5f                   	pop    rdi
 484:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
 48b:	70 74                	jo     501 <.debug_str+0x501>
 48d:	5f                   	pop    rdi
 48e:	73 74                	jae    504 <.debug_str+0x504>
 490:	61                   	(bad)  
 491:	74 65                	je     4f8 <.debug_str+0x4f8>
 493:	73 00                	jae    495 <.debug_str+0x495>
 495:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 497:	76 70                	jbe    509 <.debug_str+0x509>
 499:	00 62 6f             	add    BYTE PTR [rdx+0x6f],ah
 49c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 49d:	6c                   	ins    BYTE PTR es:[rdi],dx
 49e:	65 61                	gs (bad) 
 4a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4a1:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 4a4:	64 5f                	fs pop rdi
 4a6:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
 4ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 4ae:	42 00 61 64          	rex.X add BYTE PTR [rcx+0x64],spl
 4b2:	61                   	(bad)  
 4b3:	5f                   	pop    rdi
 4b4:	5f                   	pop    rdi
 4b5:	65 78 63             	gs js  51b <.debug_str+0x51b>
 4b8:	65 70 74             	gs jo  52f <.debug_str+0x52f>
 4bb:	69 6f 6e 73 5f 5f 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x745f5f73
 4c2:	72 61                	jb     525 <.debug_str+0x525>
 4c4:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 4c7:	61                   	(bad)  
 4c8:	63 6b 53             	movsxd ebp,DWORD PTR [rbx+0x53]
 4cb:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 4ce:	61                   	(bad)  
 4cf:	5f                   	pop    rdi
 4d0:	6d                   	ins    DWORD PTR es:[rdi],dx
 4d1:	61                   	(bad)  
 4d2:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 4d9:	30 31                	xor    BYTE PTR [rcx],dh
 4db:	30 00                	xor    BYTE PTR [rax],al
 4dd:	61                   	(bad)  
 4de:	64 61                	fs (bad) 
 4e0:	5f                   	pop    rdi
 4e1:	6d                   	ins    DWORD PTR es:[rdi],dx
 4e2:	61                   	(bad)  
 4e3:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 4ea:	30 31                	xor    BYTE PTR [rcx],dh
 4ec:	31 00                	xor    DWORD PTR [rax],eax
 4ee:	61                   	(bad)  
 4ef:	64 61                	fs (bad) 
 4f1:	5f                   	pop    rdi
 4f2:	6d                   	ins    DWORD PTR es:[rdi],dx
 4f3:	61                   	(bad)  
 4f4:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 4fb:	30 31                	xor    BYTE PTR [rcx],dh
 4fd:	32 00                	xor    al,BYTE PTR [rax]
 4ff:	61                   	(bad)  
 500:	64 61                	fs (bad) 
 502:	5f                   	pop    rdi
 503:	6d                   	ins    DWORD PTR es:[rdi],dx
 504:	61                   	(bad)  
 505:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 50c:	30 31                	xor    BYTE PTR [rcx],dh
 50e:	33 00                	xor    eax,DWORD PTR [rax]
 510:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
 513:	72 61                	jb     576 <.debug_str+0x576>
 515:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
 519:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 51c:	61                   	(bad)  
 51d:	5f                   	pop    rdi
 51e:	6d                   	ins    DWORD PTR es:[rdi],dx
 51f:	61                   	(bad)  
 520:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 527:	30 31                	xor    BYTE PTR [rcx],dh
 529:	35 00 61 64 61       	xor    eax,0x61646100
 52e:	5f                   	pop    rdi
 52f:	6d                   	ins    DWORD PTR es:[rdi],dx
 530:	61                   	(bad)  
 531:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 538:	30 31                	xor    BYTE PTR [rcx],dh
 53a:	36 00 61 64          	add    BYTE PTR ss:[rcx+0x64],ah
 53e:	61                   	(bad)  
 53f:	5f                   	pop    rdi
 540:	6d                   	ins    DWORD PTR es:[rdi],dx
 541:	61                   	(bad)  
 542:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 549:	30 31                	xor    BYTE PTR [rcx],dh
 54b:	37                   	(bad)  
 54c:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 54f:	61                   	(bad)  
 550:	5f                   	pop    rdi
 551:	6d                   	ins    DWORD PTR es:[rdi],dx
 552:	61                   	(bad)  
 553:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 55a:	30 31                	xor    BYTE PTR [rcx],dh
 55c:	38 00                	cmp    BYTE PTR [rax],al
 55e:	61                   	(bad)  
 55f:	64 61                	fs (bad) 
 561:	5f                   	pop    rdi
 562:	6d                   	ins    DWORD PTR es:[rdi],dx
 563:	61                   	(bad)  
 564:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 56b:	30 31                	xor    BYTE PTR [rcx],dh
 56d:	39 00                	cmp    DWORD PTR [rax],eax
 56f:	61                   	(bad)  
 570:	64 61                	fs (bad) 
 572:	53                   	push   rbx
 573:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 576:	73 74                	jae    5ec <.debug_str+0x5ec>
 578:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 57a:	5f                   	pop    rdi
 57b:	5f                   	pop    rdi
 57c:	77 63                	ja     5e1 <.debug_str+0x5e1>
 57e:	68 5f 63 6e 76       	push   0x766e635f
 583:	53                   	push   rbx
 584:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 587:	61                   	(bad)  
 588:	5f                   	pop    rdi
 589:	6d                   	ins    DWORD PTR es:[rdi],dx
 58a:	61                   	(bad)  
 58b:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 592:	30 35 31 00 61 64    	xor    BYTE PTR [rip+0x64610031],dh        # 646105c9 <main+0x6461047b>
 598:	61                   	(bad)  
 599:	5f                   	pop    rdi
 59a:	6d                   	ins    DWORD PTR es:[rdi],dx
 59b:	61                   	(bad)  
 59c:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 5a3:	30 35 32 00 73 79    	xor    BYTE PTR [rip+0x79730032],dh        # 797305db <main+0x7973048d>
 5a9:	73 74                	jae    61f <.debug_str+0x61f>
 5ab:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 5ad:	5f                   	pop    rdi
 5ae:	5f                   	pop    rdi
 5af:	65 78 63             	gs js  615 <.debug_str+0x615>
 5b2:	65 70 74             	gs jo  629 <.debug_str+0x629>
 5b5:	69 6f 6e 73 53 00 73 	imul   ebp,DWORD PTR [rdi+0x6e],0x73005373
 5bc:	79 73                	jns    631 <.debug_str+0x631>
 5be:	74 65                	je     625 <.debug_str+0x625>
 5c0:	6d                   	ins    DWORD PTR es:[rdi],dx
 5c1:	5f                   	pop    rdi
 5c2:	5f                   	pop    rdi
 5c3:	65 78 63             	gs js  629 <.debug_str+0x629>
 5c6:	65 70 74             	gs jo  63d <.debug_str+0x63d>
 5c9:	69 6f 6e 73 42 00 73 	imul   ebp,DWORD PTR [rdi+0x6e],0x73004273
 5d0:	79 73                	jns    645 <.debug_str+0x645>
 5d2:	74 65                	je     639 <.debug_str+0x639>
 5d4:	6d                   	ins    DWORD PTR es:[rdi],dx
 5d5:	5f                   	pop    rdi
 5d6:	5f                   	pop    rdi
 5d7:	77 63                	ja     63c <.debug_str+0x63c>
 5d9:	68 5f 63 6f 6e       	push   0x6e6f635f
 5de:	42 00 47 4e          	rex.X add BYTE PTR [rdi+0x4e],al
 5e2:	55                   	push   rbp
 5e3:	20 41 64             	and    BYTE PTR [rcx+0x64],al
 5e6:	61                   	(bad)  
 5e7:	20 37                	and    BYTE PTR [rdi],dh
 5e9:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
 5ec:	30 20                	xor    BYTE PTR [rax],ah
 5ee:	2d 67 20 2d 67       	sub    eax,0x672d2067
 5f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5f4:	61                   	(bad)  
 5f5:	74 41                	je     638 <.debug_str+0x638>
 5f7:	20 2d 67 6e 61 74    	and    BYTE PTR [rip+0x74616e67],ch        # 74617464 <main+0x74617316>
 5fd:	57                   	push   rdi
 5fe:	62                   	(bad)  
 5ff:	20 2d 67 6e 61 74    	and    BYTE PTR [rip+0x74616e67],ch        # 7461746c <main+0x7461731e>
 605:	69 77 20 2d 67 20 2d 	imul   esi,DWORD PTR [rdi+0x20],0x2d20672d
 60c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 60e:	61                   	(bad)  
 60f:	74 77                	je     688 <.debug_str+0x688>
 611:	73 20                	jae    633 <.debug_str+0x633>
 613:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
 618:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
 61e:	72 69                	jb     689 <.debug_str+0x689>
 620:	63 20                	movsxd esp,DWORD PTR [rax]
 622:	2d 6d 61 72 63       	sub    eax,0x6372616d
 627:	68 3d 78 38 36       	push   0x3638783d
 62c:	2d 36 34 00 61       	sub    eax,0x61003436
 631:	64 61                	fs (bad) 
 633:	5f                   	pop    rdi
 634:	6d                   	ins    DWORD PTR es:[rdi],dx
 635:	61                   	(bad)  
 636:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 63d:	30 32                	xor    BYTE PTR [rdx],dh
 63f:	33 00                	xor    eax,DWORD PTR [rax]
 641:	61                   	(bad)  
 642:	64 61                	fs (bad) 
 644:	5f                   	pop    rdi
 645:	6d                   	ins    DWORD PTR es:[rdi],dx
 646:	61                   	(bad)  
 647:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 64e:	30 31                	xor    BYTE PTR [rcx],dh
 650:	34 00                	xor    al,0x0
 652:	61                   	(bad)  
 653:	64 61                	fs (bad) 
 655:	5f                   	pop    rdi
 656:	6d                   	ins    DWORD PTR es:[rdi],dx
 657:	61                   	(bad)  
 658:	69 6e 5f 5f 6d 61 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69616d5f
 65f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 660:	5f                   	pop    rdi
 661:	5f                   	pop    rdi
 662:	54                   	push   rsp
 663:	73 65                	jae    6ca <.debug_str+0x6ca>
 665:	68 54 00 61 64       	push   0x64610054
 66a:	61                   	(bad)  
 66b:	5f                   	pop    rdi
 66c:	6d                   	ins    DWORD PTR es:[rdi],dx
 66d:	61                   	(bad)  
 66e:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 675:	30 33                	xor    BYTE PTR [rbx],dh
 677:	31 00                	xor    DWORD PTR [rax],eax
 679:	73 79                	jae    6f4 <.debug_str+0x6f4>
 67b:	73 74                	jae    6f1 <.debug_str+0x6f1>
 67d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 67f:	5f                   	pop    rdi
 680:	5f                   	pop    rdi
 681:	61                   	(bad)  
 682:	64 64 72 65          	fs fs jb 6eb <.debug_str+0x6eb>
 686:	73 73                	jae    6fb <.debug_str+0x6fb>
 688:	5f                   	pop    rdi
 689:	69 6d 61 67 65 53 00 	imul   ebp,DWORD PTR [rbp+0x61],0x536567
 690:	61                   	(bad)  
 691:	64 61                	fs (bad) 
 693:	5f                   	pop    rdi
 694:	5f                   	pop    rdi
 695:	65 78 63             	gs js  6fb <.debug_str+0x6fb>
 698:	65 70 74             	gs jo  70f <.debug_str+0x70f>
 69b:	69 6f 6e 73 5f 5f 6c 	imul   ebp,DWORD PTR [rdi+0x6e],0x6c5f5f73
 6a2:	61                   	(bad)  
 6a3:	73 74                	jae    719 <.debug_str+0x719>
 6a5:	5f                   	pop    rdi
 6a6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
 6a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6aa:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 6ad:	68 61 6e 64 6c       	push   0x6c646e61
 6b2:	65 72 42             	gs jb  6f7 <.debug_str+0x6f7>
 6b5:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 6b8:	61                   	(bad)  
 6b9:	5f                   	pop    rdi
 6ba:	6d                   	ins    DWORD PTR es:[rdi],dx
 6bb:	61                   	(bad)  
 6bc:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 6c3:	30 33                	xor    BYTE PTR [rbx],dh
 6c5:	36 00 6d 61          	add    BYTE PTR ss:[rbp+0x61],ch
 6c9:	69 6e 00 61 64 61 5f 	imul   ebp,DWORD PTR [rsi+0x0],0x5f616461
 6d0:	6d                   	ins    DWORD PTR es:[rdi],dx
 6d1:	61                   	(bad)  
 6d2:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 6d9:	30 33                	xor    BYTE PTR [rbx],dh
 6db:	37                   	(bad)  
 6dc:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 6df:	73 74                	jae    755 <.debug_str+0x755>
 6e1:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 6e3:	5f                   	pop    rdi
 6e4:	5f                   	pop    rdi
 6e5:	77 63                	ja     74a <.debug_str+0x74a>
 6e7:	68 5f 6a 69 73       	push   0x73696a5f
 6ec:	53                   	push   rbx
 6ed:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 6f0:	73 74                	jae    766 <.debug_str+0x766>
 6f2:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 6f4:	53                   	push   rbx
 6f5:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 6f8:	73 74                	jae    76e <.debug_str+0x76e>
 6fa:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 6fc:	5f                   	pop    rdi
 6fd:	5f                   	pop    rdi
 6fe:	65 78 63             	gs js  764 <.debug_str+0x764>
 701:	65 70 74             	gs jo  778 <.debug_str+0x778>
 704:	69 6f 6e 73 5f 64 65 	imul   ebp,DWORD PTR [rdi+0x6e],0x65645f73
 70b:	62                   	(bad)  
 70c:	75 67                	jne    775 <.debug_str+0x775>
 70e:	53                   	push   rbx
 70f:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 712:	61                   	(bad)  
 713:	5f                   	pop    rdi
 714:	6d                   	ins    DWORD PTR es:[rdi],dx
 715:	61                   	(bad)  
 716:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 71d:	30 35 30 00 73 79    	xor    BYTE PTR [rip+0x79730030],dh        # 79730753 <main+0x79730605>
 723:	73 74                	jae    799 <.debug_str+0x799>
 725:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 727:	5f                   	pop    rdi
 728:	5f                   	pop    rdi
 729:	74 72                	je     79d <.debug_str+0x79d>
 72b:	61                   	(bad)  
 72c:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 72f:	61                   	(bad)  
 730:	63 6b 42             	movsxd ebp,DWORD PTR [rbx+0x42]
 733:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 736:	73 74                	jae    7ac <.debug_str+0x7ac>
 738:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 73a:	5f                   	pop    rdi
 73b:	5f                   	pop    rdi
 73c:	73 6f                	jae    7ad <.debug_str+0x7ad>
 73e:	66 74 5f             	data16 je 7a0 <.debug_str+0x7a0>
 741:	6c                   	ins    BYTE PTR es:[rdi],dx
 742:	69 6e 6b 73 42 00 73 	imul   ebp,DWORD PTR [rsi+0x6b],0x73004273
 749:	79 73                	jns    7be <.debug_str+0x7be>
 74b:	74 65                	je     7b2 <.debug_str+0x7b2>
 74d:	6d                   	ins    DWORD PTR es:[rdi],dx
 74e:	5f                   	pop    rdi
 74f:	5f                   	pop    rdi
 750:	70 61                	jo     7b3 <.debug_str+0x7b3>
 752:	72 61                	jb     7b5 <.debug_str+0x7b5>
 754:	6d                   	ins    DWORD PTR es:[rdi],dx
 755:	65 74 65             	gs je  7bd <.debug_str+0x7bd>
 758:	72 73                	jb     7cd <.debug_str+0x7cd>
 75a:	42 00 61 64          	rex.X add BYTE PTR [rcx+0x64],spl
 75e:	61                   	(bad)  
 75f:	5f                   	pop    rdi
 760:	6d                   	ins    DWORD PTR es:[rdi],dx
 761:	61                   	(bad)  
 762:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 769:	30 35 33 00 61 64    	xor    BYTE PTR [rip+0x64610033],dh        # 646107a2 <main+0x64610654>
 76f:	61                   	(bad)  
 770:	5f                   	pop    rdi
 771:	5f                   	pop    rdi
 772:	65 78 63             	gs js  7d8 <.debug_str+0x7d8>
 775:	65 70 74             	gs jo  7ec <.debug_str+0x7ec>
 778:	69 6f 6e 73 5f 5f 6c 	imul   ebp,DWORD PTR [rdi+0x6e],0x6c5f5f73
 77f:	61                   	(bad)  
 780:	73 74                	jae    7f6 <.debug_str+0x7f6>
 782:	5f                   	pop    rdi
 783:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
 786:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 787:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
 78a:	68 61 6e 64 6c       	push   0x6c646e61
 78f:	65 72 53             	gs jb  7e5 <.debug_str+0x7e5>
 792:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 795:	61                   	(bad)  
 796:	5f                   	pop    rdi
 797:	6d                   	ins    DWORD PTR es:[rdi],dx
 798:	61                   	(bad)  
 799:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 7a0:	30 32                	xor    BYTE PTR [rdx],dh
 7a2:	30 00                	xor    BYTE PTR [rax],al
 7a4:	61                   	(bad)  
 7a5:	64 61                	fs (bad) 
 7a7:	5f                   	pop    rdi
 7a8:	6d                   	ins    DWORD PTR es:[rdi],dx
 7a9:	61                   	(bad)  
 7aa:	69 6e 5f 5f 76 65 72 	imul   ebp,DWORD PTR [rsi+0x5f],0x7265765f
 7b1:	73 69                	jae    81c <.debug_str+0x81c>
 7b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7b5:	5f                   	pop    rdi
 7b6:	33 32                	xor    esi,DWORD PTR [rdx]
 7b8:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 7bb:	61                   	(bad)  
 7bc:	5f                   	pop    rdi
 7bd:	6d                   	ins    DWORD PTR es:[rdi],dx
 7be:	61                   	(bad)  
 7bf:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 7c6:	30 32                	xor    BYTE PTR [rdx],dh
 7c8:	32 00                	xor    al,BYTE PTR [rax]
 7ca:	61                   	(bad)  
 7cb:	64 61                	fs (bad) 
 7cd:	5f                   	pop    rdi
 7ce:	6d                   	ins    DWORD PTR es:[rdi],dx
 7cf:	61                   	(bad)  
 7d0:	69 6e 5f 5f 6c 6f 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x636f6c5f
 7d7:	61                   	(bad)  
 7d8:	6c                   	ins    BYTE PTR es:[rdi],dx
 7d9:	5f                   	pop    rdi
 7da:	70 72                	jo     84e <.debug_str+0x84e>
 7dc:	69 6f 72 69 74 79 5f 	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
 7e3:	73 70                	jae    855 <.debug_str+0x855>
 7e5:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
 7e9:	69 63 5f 64 69 73 70 	imul   esp,DWORD PTR [rbx+0x5f],0x70736964
 7f0:	61                   	(bad)  
 7f1:	74 63                	je     856 <.debug_str+0x856>
 7f3:	68 69 6e 67 5f       	push   0x5f676e69
 7f8:	5f                   	pop    rdi
 7f9:	5f                   	pop    rdi
 7fa:	50                   	push   rax
 7fb:	41                   	rex.B
 7fc:	44 00 67 6e          	add    BYTE PTR [rdi+0x6e],r12b
 800:	61                   	(bad)  
 801:	74 5f                	je     862 <.debug_str+0x862>
 803:	5f                   	pop    rdi
 804:	69 6f 53 00 61 64 61 	imul   ebp,DWORD PTR [rdi+0x53],0x61646100
 80b:	5f                   	pop    rdi
 80c:	6d                   	ins    DWORD PTR es:[rdi],dx
 80d:	61                   	(bad)  
 80e:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 815:	30 32                	xor    BYTE PTR [rdx],dh
 817:	35 00 61 64 61       	xor    eax,0x61646100
 81c:	5f                   	pop    rdi
 81d:	6d                   	ins    DWORD PTR es:[rdi],dx
 81e:	61                   	(bad)  
 81f:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 826:	30 32                	xor    BYTE PTR [rdx],dh
 828:	36 00 61 64          	add    BYTE PTR ss:[rcx+0x64],ah
 82c:	61                   	(bad)  
 82d:	5f                   	pop    rdi
 82e:	6d                   	ins    DWORD PTR es:[rdi],dx
 82f:	61                   	(bad)  
 830:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 837:	30 32                	xor    BYTE PTR [rdx],dh
 839:	37                   	(bad)  
 83a:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 83d:	61                   	(bad)  
 83e:	5f                   	pop    rdi
 83f:	6d                   	ins    DWORD PTR es:[rdi],dx
 840:	61                   	(bad)  
 841:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 848:	30 32                	xor    BYTE PTR [rdx],dh
 84a:	38 00                	cmp    BYTE PTR [rax],al
 84c:	61                   	(bad)  
 84d:	64 61                	fs (bad) 
 84f:	5f                   	pop    rdi
 850:	6d                   	ins    DWORD PTR es:[rdi],dx
 851:	61                   	(bad)  
 852:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 859:	30 32                	xor    BYTE PTR [rdx],dh
 85b:	39 00                	cmp    DWORD PTR [rax],eax
 85d:	73 79                	jae    8d8 <.debug_str+0x8d8>
 85f:	73 74                	jae    8d5 <.debug_str+0x8d5>
 861:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 863:	5f                   	pop    rdi
 864:	5f                   	pop    rdi
 865:	73 6f                	jae    8d6 <.debug_str+0x8d6>
 867:	66 74 5f             	data16 je 8c9 <.debug_str+0x8c9>
 86a:	6c                   	ins    BYTE PTR es:[rdi],dx
 86b:	69 6e 6b 73 53 00 67 	imul   ebp,DWORD PTR [rsi+0x6b],0x67005373
 872:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 873:	61                   	(bad)  
 874:	74 53                	je     8c9 <.debug_str+0x8c9>
 876:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 879:	61                   	(bad)  
 87a:	66 69 6e 61 6c 00    	imul   bp,WORD PTR [rsi+0x61],0x6c
 880:	61                   	(bad)  
 881:	64 61                	fs (bad) 
 883:	5f                   	pop    rdi
 884:	6d                   	ins    DWORD PTR es:[rdi],dx
 885:	61                   	(bad)  
 886:	69 6e 5f 5f 61 64 61 	imul   ebp,DWORD PTR [rsi+0x5f],0x6164615f
 88d:	69 6e 69 74 00 2f 68 	imul   ebp,DWORD PTR [rsi+0x69],0x682f0074
 894:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 895:	6d                   	ins    DWORD PTR es:[rdi],dx
 896:	65 2f                	gs (bad) 
 898:	75 62                	jne    8fc <.debug_str+0x8fc>
 89a:	75 6e                	jne    90a <.debug_str+0x90a>
 89c:	74 75                	je     913 <.debug_str+0x913>
 89e:	2f                   	(bad)  
 89f:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
 8a1:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
 8a8:	6e 
 8a9:	67 2f                	addr32 (bad) 
 8ab:	50                   	push   rax
 8ac:	72 6f                	jb     91d <.debug_str+0x91d>
 8ae:	67 72 61             	addr32 jb 912 <.debug_str+0x912>
 8b1:	6d                   	ins    DWORD PTR es:[rdi],dx
 8b2:	6d                   	ins    DWORD PTR es:[rdi],dx
 8b3:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
 8ba:	61                   	(bad)  
 8bb:	73 73                	jae    930 <.debug_str+0x930>
 8bd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 8bf:	62                   	(bad)  
 8c0:	6c                   	ins    BYTE PTR es:[rdi],dx
 8c1:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
 8c8:	61                   	(bad)  
 8c9:	72 69                	jb     934 <.debug_str+0x934>
 8cb:	65 73 2f             	gs jae 8fd <.debug_str+0x8fd>
 8ce:	41                   	rex.B
 8cf:	64 61                	fs (bad) 
 8d1:	2f                   	(bad)  
 8d2:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 8d4:	74 65                	je     93b <.debug_str+0x93b>
 8d6:	6c                   	ins    BYTE PTR es:[rdi],dx
 8d7:	5f                   	pop    rdi
 8d8:	41 72 63             	rex.B jb 93e <.debug_str+0x93e>
 8db:	68 69 74 65 63       	push   0x63657469
 8e0:	74 75                	je     957 <.debug_str+0x957>
 8e2:	72 65                	jb     949 <.debug_str+0x949>
 8e4:	2f                   	(bad)  
 8e5:	41                   	rex.B
 8e6:	64 64 5f             	fs fs pop rdi
 8e9:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 8eb:	74 5f                	je     94c <.debug_str+0x94c>
 8ed:	77 5f                	ja     94e <.debug_str+0x94e>
 8ef:	49                   	rex.WB
 8f0:	4f 2f                	rex.WRXB (bad) 
 8f2:	57                   	push   rdi
 8f3:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
 8fa:	75 
 8fb:	67 5f                	addr32 pop rdi
 8fd:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 8ff:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 901:	2f                   	(bad)  
 902:	62                   	(bad)  
 903:	7e 61                	jle    966 <.debug_str+0x966>
 905:	64 64 5f             	fs fs pop rdi
 908:	69 6e 74 5f 77 5f 69 	imul   ebp,DWORD PTR [rsi+0x74],0x695f775f
 90f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 910:	2e 61                	cs (bad) 
 912:	64 62                	fs (bad) 
 914:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 917:	73 74                	jae    98d <.debug_str+0x98d>
 919:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 91b:	5f                   	pop    rdi
 91c:	5f                   	pop    rdi
 91d:	74 72                	je     991 <.debug_str+0x991>
 91f:	61                   	(bad)  
 920:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 923:	61                   	(bad)  
 924:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 927:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 929:	74 72                	je     99d <.debug_str+0x99d>
 92b:	69 65 73 42 00 5f 5f 	imul   esp,DWORD PTR [rbp+0x73],0x5f5f0042
 932:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 934:	61                   	(bad)  
 935:	74 5f                	je     996 <.debug_str+0x996>
 937:	61                   	(bad)  
 938:	64 61                	fs (bad) 
 93a:	5f                   	pop    rdi
 93b:	6d                   	ins    DWORD PTR es:[rdi],dx
 93c:	61                   	(bad)  
 93d:	69 6e 5f 70 72 6f 67 	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
 944:	72 61                	jb     9a7 <.debug_str+0x9a7>
 946:	6d                   	ins    DWORD PTR es:[rdi],dx
 947:	5f                   	pop    rdi
 948:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 949:	61                   	(bad)  
 94a:	6d                   	ins    DWORD PTR es:[rdi],dx
 94b:	65 00 61 64          	add    BYTE PTR gs:[rcx+0x64],ah
 94f:	61                   	(bad)  
 950:	5f                   	pop    rdi
 951:	5f                   	pop    rdi
 952:	65 78 63             	gs js  9b8 <.debug_str+0x9b8>
 955:	65 70 74             	gs jo  9cc <.debug_str+0x9cc>
 958:	69 6f 6e 73 42 00 65 	imul   ebp,DWORD PTR [rdi+0x6e],0x65004273
 95f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 960:	73 75                	jae    9d7 <.debug_str+0x9d7>
 962:	72 65                	jb     9c9 <.debug_str+0x9c9>
 964:	5f                   	pop    rdi
 965:	72 65                	jb     9cc <.debug_str+0x9cc>
 967:	66 65 72 65          	data16 gs jb 9d0 <.debug_str+0x9d0>
 96b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 96c:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
 96f:	73 79                	jae    9ea <.debug_str+0x9ea>
 971:	73 74                	jae    9e7 <.debug_str+0x9e7>
 973:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 975:	5f                   	pop    rdi
 976:	5f                   	pop    rdi
 977:	74 72                	je     9eb <.debug_str+0x9eb>
 979:	61                   	(bad)  
 97a:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 97d:	61                   	(bad)  
 97e:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 981:	5f                   	pop    rdi
 982:	73 79                	jae    9fd <.debug_str+0x9fd>
 984:	6d                   	ins    DWORD PTR es:[rdi],dx
 985:	62                   	(bad)  
 986:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 987:	6c                   	ins    BYTE PTR es:[rdi],dx
 988:	69 63 53 00 73 79 73 	imul   esp,DWORD PTR [rbx+0x53],0x73797300
 98f:	74 65                	je     9f6 <.debug_str+0x9f6>
 991:	6d                   	ins    DWORD PTR es:[rdi],dx
 992:	5f                   	pop    rdi
 993:	5f                   	pop    rdi
 994:	69 6d 67 5f 69 6e 74 	imul   ebp,DWORD PTR [rbp+0x67],0x746e695f
 99b:	42 00 61 64          	rex.X add BYTE PTR [rcx+0x64],spl
 99f:	61                   	(bad)  
 9a0:	5f                   	pop    rdi
 9a1:	6d                   	ins    DWORD PTR es:[rdi],dx
 9a2:	61                   	(bad)  
 9a3:	69 6e 5f 5f 61 64 61 	imul   ebp,DWORD PTR [rsi+0x5f],0x6164615f
 9aa:	5f                   	pop    rdi
 9ab:	6d                   	ins    DWORD PTR es:[rdi],dx
 9ac:	61                   	(bad)  
 9ad:	69 6e 5f 70 72 6f 67 	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
 9b4:	72 61                	jb     a17 <.debug_str+0xa17>
 9b6:	6d                   	ins    DWORD PTR es:[rdi],dx
 9b7:	5f                   	pop    rdi
 9b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 9b9:	61                   	(bad)  
 9ba:	6d                   	ins    DWORD PTR es:[rdi],dx
 9bb:	65 00 61 64          	add    BYTE PTR gs:[rcx+0x64],ah
 9bf:	61                   	(bad)  
 9c0:	5f                   	pop    rdi
 9c1:	6d                   	ins    DWORD PTR es:[rdi],dx
 9c2:	61                   	(bad)  
 9c3:	69 6e 5f 5f 61 64 61 	imul   ebp,DWORD PTR [rsi+0x5f],0x6164615f
 9ca:	66 69 6e 61 6c 00    	imul   bp,WORD PTR [rsi+0x61],0x6c
 9d0:	73 79                	jae    a4b <.debug_str+0xa4b>
 9d2:	73 74                	jae    a48 <.debug_str+0xa48>
 9d4:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 9d6:	5f                   	pop    rdi
 9d7:	5f                   	pop    rdi
 9d8:	74 72                	je     a4c <.debug_str+0xa4c>
 9da:	61                   	(bad)  
 9db:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 9de:	61                   	(bad)  
 9df:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 9e2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 9e4:	74 72                	je     a58 <.debug_str+0xa58>
 9e6:	69 65 73 53 00 61 64 	imul   esp,DWORD PTR [rbp+0x73],0x64610053
 9ed:	61                   	(bad)  
 9ee:	5f                   	pop    rdi
 9ef:	5f                   	pop    rdi
 9f0:	65 78 63             	gs js  a56 <.debug_str+0xa56>
 9f3:	65 70 74             	gs jo  a6a <.debug_str+0xa6a>
 9f6:	69 6f 6e 73 53 00 61 	imul   ebp,DWORD PTR [rdi+0x6e],0x61005373
 9fd:	64 61                	fs (bad) 
 9ff:	5f                   	pop    rdi
 a00:	6d                   	ins    DWORD PTR es:[rdi],dx
 a01:	61                   	(bad)  
 a02:	69 6e 5f 5f 69 73 5f 	imul   ebp,DWORD PTR [rsi+0x5f],0x5f73695f
 a09:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 a0b:	61                   	(bad)  
 a0c:	62                   	(bad)  
 a0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 a0e:	72 61                	jb     a71 <.debug_str+0xa71>
 a10:	74 65                	je     a77 <.debug_str+0xa77>
 a12:	64 00 73 79          	add    BYTE PTR fs:[rbx+0x79],dh
 a16:	73 74                	jae    a8c <.debug_str+0xa8c>
 a18:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 a1a:	5f                   	pop    rdi
 a1b:	5f                   	pop    rdi
 a1c:	73 74                	jae    a92 <.debug_str+0xa92>
 a1e:	61                   	(bad)  
 a1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 a20:	64 61                	fs (bad) 
 a22:	72 64                	jb     a88 <.debug_str+0xa88>
 a24:	5f                   	pop    rdi
 a25:	6c                   	ins    BYTE PTR es:[rdi],dx
 a26:	69 62 72 61 72 79 42 	imul   esp,DWORD PTR [rdx+0x72],0x42797261
 a2d:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 a30:	61                   	(bad)  
 a31:	5f                   	pop    rdi
 a32:	6d                   	ins    DWORD PTR es:[rdi],dx
 a33:	61                   	(bad)  
 a34:	69 6e 5f 5f 67 6e 61 	imul   ebp,DWORD PTR [rsi+0x5f],0x616e675f
 a3b:	74 5f                	je     a9c <.debug_str+0xa9c>
 a3d:	76 65                	jbe    aa4 <.debug_str+0xaa4>
 a3f:	72 73                	jb     ab4 <.debug_str+0xab4>
 a41:	69 6f 6e 00 73 79 73 	imul   ebp,DWORD PTR [rdi+0x6e],0x73797300
 a48:	74 65                	je     aaf <.debug_str+0xaaf>
 a4a:	6d                   	ins    DWORD PTR es:[rdi],dx
 a4b:	5f                   	pop    rdi
 a4c:	5f                   	pop    rdi
 a4d:	77 63                	ja     ab2 <.debug_str+0xab2>
 a4f:	68 5f 63 6e 76       	push   0x766e635f
 a54:	42 00 73 79          	rex.X add BYTE PTR [rbx+0x79],sil
 a58:	73 74                	jae    ace <.debug_str+0xace>
 a5a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 a5c:	5f                   	pop    rdi
 a5d:	5f                   	pop    rdi
 a5e:	61                   	(bad)  
 a5f:	64 64 72 65          	fs fs jb ac8 <.debug_str+0xac8>
 a63:	73 73                	jae    ad8 <.debug_str+0xad8>
 a65:	5f                   	pop    rdi
 a66:	69 6d 61 67 65 42 00 	imul   ebp,DWORD PTR [rbp+0x61],0x426567
 a6d:	73 79                	jae    ae8 <.debug_str+0xae8>
 a6f:	73 74                	jae    ae5 <.debug_str+0xae5>
 a71:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 a73:	5f                   	pop    rdi
 a74:	5f                   	pop    rdi
 a75:	63 72 74             	movsxd esi,DWORD PTR [rdx+0x74]
 a78:	6c                   	ins    BYTE PTR es:[rdi],dx
 a79:	53                   	push   rbx
 a7a:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 a7d:	61                   	(bad)  
 a7e:	5f                   	pop    rdi
 a7f:	6d                   	ins    DWORD PTR es:[rdi],dx
 a80:	61                   	(bad)  
 a81:	69 6e 5f 5f 54 67 6e 	imul   ebp,DWORD PTR [rsi+0x5f],0x6e67545f
 a88:	61                   	(bad)  
 a89:	74 5f                	je     aea <.debug_str+0xaea>
 a8b:	76 65                	jbe    af2 <.debug_str+0xaf2>
 a8d:	72 73                	jb     b02 <.debug_str+0xb02>
 a8f:	69 6f 6e 53 00 61 64 	imul   ebp,DWORD PTR [rdi+0x6e],0x64610053
 a96:	61                   	(bad)  
 a97:	5f                   	pop    rdi
 a98:	6d                   	ins    DWORD PTR es:[rdi],dx
 a99:	61                   	(bad)  
 a9a:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 aa1:	30 33                	xor    BYTE PTR [rbx],dh
 aa3:	30 00                	xor    BYTE PTR [rax],al
 aa5:	73 79                	jae    b20 <.debug_str+0xb20>
 aa7:	73 74                	jae    b1d <.debug_str+0xb1d>
 aa9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 aab:	5f                   	pop    rdi
 aac:	5f                   	pop    rdi
 aad:	73 74                	jae    b23 <.debug_str+0xb23>
 aaf:	61                   	(bad)  
 ab0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 ab1:	64 61                	fs (bad) 
 ab3:	72 64                	jb     b19 <.debug_str+0xb19>
 ab5:	5f                   	pop    rdi
 ab6:	6c                   	ins    BYTE PTR es:[rdi],dx
 ab7:	69 62 72 61 72 79 53 	imul   esp,DWORD PTR [rdx+0x72],0x53797261
 abe:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 ac1:	61                   	(bad)  
 ac2:	5f                   	pop    rdi
 ac3:	6d                   	ins    DWORD PTR es:[rdi],dx
 ac4:	61                   	(bad)  
 ac5:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 acc:	30 33                	xor    BYTE PTR [rbx],dh
 ace:	32 00                	xor    al,BYTE PTR [rax]
 ad0:	61                   	(bad)  
 ad1:	64 61                	fs (bad) 
 ad3:	5f                   	pop    rdi
 ad4:	6d                   	ins    DWORD PTR es:[rdi],dx
 ad5:	61                   	(bad)  
 ad6:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 add:	30 33                	xor    BYTE PTR [rbx],dh
 adf:	33 00                	xor    eax,DWORD PTR [rax]
 ae1:	61                   	(bad)  
 ae2:	64 61                	fs (bad) 
 ae4:	5f                   	pop    rdi
 ae5:	6d                   	ins    DWORD PTR es:[rdi],dx
 ae6:	61                   	(bad)  
 ae7:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 aee:	30 33                	xor    BYTE PTR [rbx],dh
 af0:	34 00                	xor    al,0x0
 af2:	73 79                	jae    b6d <.debug_str+0xb6d>
 af4:	73 74                	jae    b6a <.debug_str+0xb6a>
 af6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 af8:	5f                   	pop    rdi
 af9:	5f                   	pop    rdi
 afa:	73 74                	jae    b70 <.debug_str+0xb70>
 afc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 afd:	72 61                	jb     b60 <.debug_str+0xb60>
 aff:	67 65 5f             	addr32 gs pop rdi
 b02:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 b04:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 b06:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 b08:	74 73                	je     b7d <.debug_str+0xb7d>
 b0a:	42 00 61 64          	rex.X add BYTE PTR [rcx+0x64],spl
 b0e:	61                   	(bad)  
 b0f:	5f                   	pop    rdi
 b10:	6d                   	ins    DWORD PTR es:[rdi],dx
 b11:	61                   	(bad)  
 b12:	69 6e 5f 5f 54 61 64 	imul   ebp,DWORD PTR [rsi+0x5f],0x6461545f
 b19:	61                   	(bad)  
 b1a:	5f                   	pop    rdi
 b1b:	6d                   	ins    DWORD PTR es:[rdi],dx
 b1c:	61                   	(bad)  
 b1d:	69 6e 5f 70 72 6f 67 	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
 b24:	72 61                	jb     b87 <.debug_str+0xb87>
 b26:	6d                   	ins    DWORD PTR es:[rdi],dx
 b27:	5f                   	pop    rdi
 b28:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 b29:	61                   	(bad)  
 b2a:	6d                   	ins    DWORD PTR es:[rdi],dx
 b2b:	65 53                	gs push rbx
 b2d:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 b30:	73 74                	jae    ba6 <main+0xa58>
 b32:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 b34:	5f                   	pop    rdi
 b35:	5f                   	pop    rdi
 b36:	74 72                	je     baa <main+0xa5c>
 b38:	61                   	(bad)  
 b39:	63 65 62             	movsxd esp,DWORD PTR [rbp+0x62]
 b3c:	61                   	(bad)  
 b3d:	63 6b 53             	movsxd ebp,DWORD PTR [rbx+0x53]
 b40:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 b43:	61                   	(bad)  
 b44:	5f                   	pop    rdi
 b45:	6d                   	ins    DWORD PTR es:[rdi],dx
 b46:	61                   	(bad)  
 b47:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 b4e:	30 33                	xor    BYTE PTR [rbx],dh
 b50:	38 00                	cmp    BYTE PTR [rax],al
 b52:	61                   	(bad)  
 b53:	64 61                	fs (bad) 
 b55:	5f                   	pop    rdi
 b56:	6d                   	ins    DWORD PTR es:[rdi],dx
 b57:	61                   	(bad)  
 b58:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 b5f:	30 33                	xor    BYTE PTR [rbx],dh
 b61:	39 00                	cmp    DWORD PTR [rax],eax
 b63:	73 79                	jae    bde <main+0xa90>
 b65:	73 74                	jae    bdb <main+0xa8d>
 b67:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 b69:	5f                   	pop    rdi
 b6a:	5f                   	pop    rdi
 b6b:	73 65                	jae    bd2 <main+0xa84>
 b6d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 b70:	64 61                	fs (bad) 
 b72:	72 79                	jb     bed <main+0xa9f>
 b74:	5f                   	pop    rdi
 b75:	73 74                	jae    beb <main+0xa9d>
 b77:	61                   	(bad)  
 b78:	63 6b 42             	movsxd ebp,DWORD PTR [rbx+0x42]
 b7b:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
 b7e:	61                   	(bad)  
 b7f:	5f                   	pop    rdi
 b80:	6d                   	ins    DWORD PTR es:[rdi],dx
 b81:	61                   	(bad)  
 b82:	69 6e 5f 5f 75 30 30 	imul   ebp,DWORD PTR [rsi+0x5f],0x3030755f
 b89:	30 34 37             	xor    BYTE PTR [rdi+rsi*1],dh
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   procedure adafinal is
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
      if not Is_Elaborated then
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <system__parametersS+0x1>
   b:	74 75                	je     82 <system__secondary_stackS+0x2>
   d:	20 37                	and    BYTE PTR [rdi],dh
   f:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
      Is_Elaborated := False;
  12:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 6275374a <main+0x627535fc>
  18:	75 6e                	jne    88 <system__storage_elementsS>
      Runtime_Finalize;
  1a:	74 75                	je     91 <system__stack_checkingS+0x1>
  1c:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
      s_stalib_adafinal;
  1f:	38 2e                	cmp    BYTE PTR [rsi],ch
  21:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
   end adafinal;
  24:	20 37                	and    BYTE PTR [rdi],dh
         return;
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
   end adafinal;
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
			20: R_X86_64_PC32	.text
  22:	00 00                	add    BYTE PTR [rax],al
  24:	29 00                	sub    DWORD PTR [rax],eax
  26:	00 00                	add    BYTE PTR [rax],al
  28:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	64 0c 07             	fs or  al,0x7
  34:	08 00                	or     BYTE PTR [rax],al
  36:	00 00                	add    BYTE PTR [rax],al
  38:	1c 00                	sbb    al,0x0
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	3c 00                	cmp    al,0x0
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
			40: R_X86_64_PC32	.text+0x2a
  42:	00 00                	add    BYTE PTR [rax],al
  44:	24 01                	and    al,0x1
  46:	00 00                	add    BYTE PTR [rax],al
  48:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  51:	03 1f                	add    ebx,DWORD PTR [rdi]
  53:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
  56:	08 00                	or     BYTE PTR [rax],al
  58:	1c 00                	sbb    al,0x0
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	5c                   	pop    rsp
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	00 00                	add    BYTE PTR [rax],al
			60: R_X86_64_PC32	.text+0x14e
  61:	00 00                	add    BYTE PTR [rax],al
  63:	00 65 00             	add    BYTE PTR [rbp+0x0],ah
  66:	00 00                	add    BYTE PTR [rax],al
  68:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  71:	02 60 0c             	add    ah,BYTE PTR [rax+0xc]
  74:	07                   	(bad)  
  75:	08 00                	or     BYTE PTR [rax],al
	...
Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0x767 (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0x5e0): GNU Ada 7.3.0 -g -gnatA -gnatWb -gnatiw -g -gnatws -mtune=generic -march=x86-64
    <10>   DW_AT_language    : 13	(ADA 95)
    <11>   DW_AT_name        : (indirect string, offset: 0x892): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/Ada/Intel_Architecture/Add_Int_w_IO/With_Debug_Info/b~add_int_w_io.adb
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0xaf): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/Ada/Intel_Architecture/Add_Int_w_IO/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x0
    <21>   DW_AT_high_pc     : 0x1b3
    <29>   DW_AT_stmt_list   : 0x0
 <1><2d>: Abbrev Number: 2 (DW_TAG_array_type)
    <2e>   DW_AT_name        : (indirect string, offset: 0xa7b): ada_main__Tgnat_versionS
    <32>   DW_AT_type        : <0x4d>
    <36>   DW_AT_sibling     : <0x41>
 <2><3a>: Abbrev Number: 3 (DW_TAG_subrange_type)
    <3b>   DW_AT_type        : <0x46>
    <3f>   DW_AT_upper_bound : 20
 <2><40>: Abbrev Number: 0
 <1><41>: Abbrev Number: 4 (DW_TAG_const_type)
    <42>   DW_AT_type        : <0x2d>
    <46>   DW_AT_artificial  : 1
 <1><46>: Abbrev Number: 5 (DW_TAG_base_type)
    <47>   DW_AT_byte_size   : 4
    <48>   DW_AT_encoding    : 5	(signed)
    <49>   DW_AT_name        : (indirect string, offset: 0x15e): integer
 <1><4d>: Abbrev Number: 5 (DW_TAG_base_type)
    <4e>   DW_AT_byte_size   : 1
    <4f>   DW_AT_encoding    : 8	(unsigned char)
    <50>   DW_AT_name        : (indirect string, offset: 0x510): character
 <1><54>: Abbrev Number: 2 (DW_TAG_array_type)
    <55>   DW_AT_name        : (indirect string, offset: 0xb0c): ada_main__Tada_main_program_nameS
    <59>   DW_AT_type        : <0x4d>
    <5d>   DW_AT_sibling     : <0x68>
 <2><61>: Abbrev Number: 3 (DW_TAG_subrange_type)
    <62>   DW_AT_type        : <0x46>
    <66>   DW_AT_upper_bound : 18
 <2><67>: Abbrev Number: 0
 <1><68>: Abbrev Number: 4 (DW_TAG_const_type)
    <69>   DW_AT_type        : <0x54>
    <6d>   DW_AT_artificial  : 1
 <1><6d>: Abbrev Number: 5 (DW_TAG_base_type)
    <6e>   DW_AT_byte_size   : 4
    <6f>   DW_AT_encoding    : 7	(unsigned)
    <70>   DW_AT_name        : (indirect string, offset: 0x7a4): ada_main__version_32
 <1><74>: Abbrev Number: 6 (DW_TAG_const_type)
    <75>   DW_AT_type        : <0x6d>
 <1><79>: Abbrev Number: 2 (DW_TAG_array_type)
    <7a>   DW_AT_name        : (indirect string, offset: 0x2d4): ada_main__Tlocal_priority_specific_dispatchingS
    <7e>   DW_AT_type        : <0x4d>
    <82>   DW_AT_sibling     : <0x8d>
 <2><86>: Abbrev Number: 3 (DW_TAG_subrange_type)
    <87>   DW_AT_type        : <0x46>
    <8b>   DW_AT_upper_bound : 0
 <2><8c>: Abbrev Number: 0
 <1><8d>: Abbrev Number: 7 (DW_TAG_structure_type)
    <8e>   DW_AT_name        : (indirect string, offset: 0x7ca): ada_main__local_priority_specific_dispatching___PAD
    <92>   DW_AT_byte_size   : 1
    <93>   DW_AT_decl_file   : 1
    <94>   DW_AT_decl_line   : 14
    <95>   DW_AT_artificial  : 1
    <95>   DW_AT_sibling     : <0xa4>
 <2><99>: Abbrev Number: 8 (DW_TAG_member)
    <9a>   DW_AT_name        : F
    <9c>   DW_AT_decl_file   : 1
    <9d>   DW_AT_decl_line   : 14
    <9e>   DW_AT_type        : <0x79>
    <a2>   DW_AT_data_member_location: 0
 <2><a3>: Abbrev Number: 0
 <1><a4>: Abbrev Number: 4 (DW_TAG_const_type)
    <a5>   DW_AT_type        : <0x8d>
    <a9>   DW_AT_artificial  : 1
 <1><a9>: Abbrev Number: 2 (DW_TAG_array_type)
    <aa>   DW_AT_name        : (indirect string, offset: 0x11): ada_main__Tlocal_interrupt_statesS
    <ae>   DW_AT_type        : <0x4d>
    <b2>   DW_AT_sibling     : <0xbd>
 <2><b6>: Abbrev Number: 3 (DW_TAG_subrange_type)
    <b7>   DW_AT_type        : <0x46>
    <bb>   DW_AT_upper_bound : 0
 <2><bc>: Abbrev Number: 0
 <1><bd>: Abbrev Number: 7 (DW_TAG_structure_type)
    <be>   DW_AT_name        : (indirect string, offset: 0x3ef): ada_main__local_interrupt_states___PAD
    <c2>   DW_AT_byte_size   : 1
    <c3>   DW_AT_decl_file   : 1
    <c4>   DW_AT_decl_line   : 15
    <c5>   DW_AT_artificial  : 1
    <c5>   DW_AT_sibling     : <0xd4>
 <2><c9>: Abbrev Number: 8 (DW_TAG_member)
    <ca>   DW_AT_name        : F
    <cc>   DW_AT_decl_file   : 1
    <cd>   DW_AT_decl_line   : 15
    <ce>   DW_AT_type        : <0xa9>
    <d2>   DW_AT_data_member_location: 0
 <2><d3>: Abbrev Number: 0
 <1><d4>: Abbrev Number: 4 (DW_TAG_const_type)
    <d5>   DW_AT_type        : <0xbd>
    <d9>   DW_AT_artificial  : 1
 <1><d9>: Abbrev Number: 5 (DW_TAG_base_type)
    <da>   DW_AT_byte_size   : 8
    <db>   DW_AT_encoding    : 7	(unsigned)
    <dc>   DW_AT_name        : (indirect string, offset: 0x337): system__address
 <1><e0>: Abbrev Number: 9 (DW_TAG_volatile_type)
    <e1>   DW_AT_type        : <0xd9>
 <1><e5>: Abbrev Number: 10 (DW_TAG_variable)
    <e6>   DW_AT_name        : (indirect string, offset: 0xa2e): ada_main__gnat_version
    <ea>   DW_AT_decl_file   : 2
    <eb>   DW_AT_decl_line   : 17
    <ec>   DW_AT_linkage_name: (indirect string, offset: 0x416): __gnat_version
    <f0>   DW_AT_type        : <0x41>
    <f4>   DW_AT_external    : 1
    <f4>   DW_AT_location    : 9 byte block: 3 0 0 0 0 0 0 0 0 	(DW_OP_addr: 0)
 <1><fe>: Abbrev Number: 10 (DW_TAG_variable)
    <ff>   DW_AT_name        : (indirect string, offset: 0x99d): ada_main__ada_main_program_name
    <103>   DW_AT_decl_file   : 2
    <104>   DW_AT_decl_line   : 21
    <105>   DW_AT_linkage_name: (indirect string, offset: 0x930): __gnat_ada_main_program_name
    <109>   DW_AT_type        : <0x68>
    <10d>   DW_AT_external    : 1
    <10d>   DW_AT_location    : 9 byte block: 3 20 0 0 0 0 0 0 0 	(DW_OP_addr: 20)
 <1><117>: Abbrev Number: 10 (DW_TAG_variable)
    <118>   DW_AT_name        : (indirect string, offset: 0x20a): ada_main__u00001
    <11c>   DW_AT_decl_file   : 2
    <11d>   DW_AT_decl_line   : 38
    <11e>   DW_AT_linkage_name: (indirect string, offset: 0x4a2): add_int_w_ioB
    <122>   DW_AT_type        : <0x74>
    <126>   DW_AT_external    : 1
    <126>   DW_AT_location    : 9 byte block: 3 34 0 0 0 0 0 0 0 	(DW_OP_addr: 34)
 <1><130>: Abbrev Number: 10 (DW_TAG_variable)
    <131>   DW_AT_name        : (indirect string, offset: 0x21b): ada_main__u00002
    <135>   DW_AT_decl_file   : 2
    <136>   DW_AT_decl_line   : 40
    <137>   DW_AT_linkage_name: (indirect string, offset: 0xa14): system__standard_libraryB
    <13b>   DW_AT_type        : <0x74>
    <13f>   DW_AT_external    : 1
    <13f>   DW_AT_location    : 9 byte block: 3 38 0 0 0 0 0 0 0 	(DW_OP_addr: 38)
 <1><149>: Abbrev Number: 10 (DW_TAG_variable)
    <14a>   DW_AT_name        : (indirect string, offset: 0x22c): ada_main__u00003
    <14e>   DW_AT_decl_file   : 2
    <14f>   DW_AT_decl_line   : 42
    <150>   DW_AT_linkage_name: (indirect string, offset: 0xaa5): system__standard_libraryS
    <154>   DW_AT_type        : <0x74>
    <158>   DW_AT_external    : 1
    <158>   DW_AT_location    : 9 byte block: 3 3c 0 0 0 0 0 0 0 	(DW_OP_addr: 3c)
 <1><162>: Abbrev Number: 10 (DW_TAG_variable)
    <163>   DW_AT_name        : (indirect string, offset: 0x23d): ada_main__u00004
    <167>   DW_AT_decl_file   : 2
    <168>   DW_AT_decl_line   : 44
    <169>   DW_AT_linkage_name: (indirect string, offset: 0x871): gnatS
    <16d>   DW_AT_type        : <0x74>
    <171>   DW_AT_external    : 1
    <171>   DW_AT_location    : 9 byte block: 3 40 0 0 0 0 0 0 0 	(DW_OP_addr: 40)
 <1><17b>: Abbrev Number: 10 (DW_TAG_variable)
    <17c>   DW_AT_name        : (indirect string, offset: 0x24e): ada_main__u00005
    <180>   DW_AT_decl_file   : 2
    <181>   DW_AT_decl_line   : 46
    <182>   DW_AT_linkage_name: (indirect string, offset: 0x1ec): gnat__ioB
    <186>   DW_AT_type        : <0x74>
    <18a>   DW_AT_external    : 1
    <18a>   DW_AT_location    : 9 byte block: 3 44 0 0 0 0 0 0 0 	(DW_OP_addr: 44)
 <1><194>: Abbrev Number: 10 (DW_TAG_variable)
    <195>   DW_AT_name        : (indirect string, offset: 0x25f): ada_main__u00006
    <199>   DW_AT_decl_file   : 2
    <19a>   DW_AT_decl_line   : 48
    <19b>   DW_AT_linkage_name: (indirect string, offset: 0x7fe): gnat__ioS
    <19f>   DW_AT_type        : <0x74>
    <1a3>   DW_AT_external    : 1
    <1a3>   DW_AT_location    : 9 byte block: 3 48 0 0 0 0 0 0 0 	(DW_OP_addr: 48)
 <1><1ad>: Abbrev Number: 10 (DW_TAG_variable)
    <1ae>   DW_AT_name        : (indirect string, offset: 0x270): ada_main__u00007
    <1b2>   DW_AT_decl_file   : 2
    <1b3>   DW_AT_decl_line   : 50
    <1b4>   DW_AT_linkage_name: (indirect string, offset: 0x6ee): systemS
    <1b8>   DW_AT_type        : <0x74>
    <1bc>   DW_AT_external    : 1
    <1bc>   DW_AT_location    : 9 byte block: 3 4c 0 0 0 0 0 0 0 	(DW_OP_addr: 4c)
 <1><1c6>: Abbrev Number: 10 (DW_TAG_variable)
    <1c7>   DW_AT_name        : (indirect string, offset: 0x281): ada_main__u00008
    <1cb>   DW_AT_decl_file   : 2
    <1cc>   DW_AT_decl_line   : 52
    <1cd>   DW_AT_linkage_name: (indirect string, offset: 0x34): system__memoryB
    <1d1>   DW_AT_type        : <0x74>
    <1d5>   DW_AT_external    : 1
    <1d5>   DW_AT_location    : 9 byte block: 3 50 0 0 0 0 0 0 0 	(DW_OP_addr: 50)
 <1><1df>: Abbrev Number: 10 (DW_TAG_variable)
    <1e0>   DW_AT_name        : (indirect string, offset: 0x292): ada_main__u00009
    <1e4>   DW_AT_decl_file   : 2
    <1e5>   DW_AT_decl_line   : 54
    <1e6>   DW_AT_linkage_name: (indirect string, offset: 0x177): system__memoryS
    <1ea>   DW_AT_type        : <0x74>
    <1ee>   DW_AT_external    : 1
    <1ee>   DW_AT_location    : 9 byte block: 3 54 0 0 0 0 0 0 0 	(DW_OP_addr: 54)
 <1><1f8>: Abbrev Number: 10 (DW_TAG_variable)
    <1f9>   DW_AT_name        : (indirect string, offset: 0x4cc): ada_main__u00010
    <1fd>   DW_AT_decl_file   : 2
    <1fe>   DW_AT_decl_line   : 56
    <1ff>   DW_AT_linkage_name: (indirect string, offset: 0x94d): ada__exceptionsB
    <203>   DW_AT_type        : <0x74>
    <207>   DW_AT_external    : 1
    <207>   DW_AT_location    : 9 byte block: 3 58 0 0 0 0 0 0 0 	(DW_OP_addr: 58)
 <1><211>: Abbrev Number: 10 (DW_TAG_variable)
    <212>   DW_AT_name        : (indirect string, offset: 0x4dd): ada_main__u00011
    <216>   DW_AT_decl_file   : 2
    <217>   DW_AT_decl_line   : 58
    <218>   DW_AT_linkage_name: (indirect string, offset: 0x9eb): ada__exceptionsS
    <21c>   DW_AT_type        : <0x74>
    <220>   DW_AT_external    : 1
    <220>   DW_AT_location    : 9 byte block: 3 5c 0 0 0 0 0 0 0 	(DW_OP_addr: 5c)
 <1><22a>: Abbrev Number: 10 (DW_TAG_variable)
    <22b>   DW_AT_name        : (indirect string, offset: 0x4ee): ada_main__u00012
    <22f>   DW_AT_decl_file   : 2
    <230>   DW_AT_decl_line   : 60
    <231>   DW_AT_linkage_name: (indirect string, offset: 0x56f): adaS
    <235>   DW_AT_type        : <0x74>
    <239>   DW_AT_external    : 1
    <239>   DW_AT_location    : 9 byte block: 3 60 0 0 0 0 0 0 0 	(DW_OP_addr: 60)
 <1><243>: Abbrev Number: 10 (DW_TAG_variable)
    <244>   DW_AT_name        : (indirect string, offset: 0x4ff): ada_main__u00013
    <248>   DW_AT_decl_file   : 2
    <249>   DW_AT_decl_line   : 62
    <24a>   DW_AT_linkage_name: (indirect string, offset: 0x690): ada__exceptions__last_chance_handlerB
    <24e>   DW_AT_type        : <0x74>
    <252>   DW_AT_external    : 1
    <252>   DW_AT_location    : 9 byte block: 3 64 0 0 0 0 0 0 0 	(DW_OP_addr: 64)
 <1><25c>: Abbrev Number: 10 (DW_TAG_variable)
    <25d>   DW_AT_name        : (indirect string, offset: 0x641): ada_main__u00014
    <261>   DW_AT_decl_file   : 2
    <262>   DW_AT_decl_line   : 64
    <263>   DW_AT_linkage_name: (indirect string, offset: 0x76d): ada__exceptions__last_chance_handlerS
    <267>   DW_AT_type        : <0x74>
    <26b>   DW_AT_external    : 1
    <26b>   DW_AT_location    : 9 byte block: 3 68 0 0 0 0 0 0 0 	(DW_OP_addr: 68)
 <1><275>: Abbrev Number: 10 (DW_TAG_variable)
    <276>   DW_AT_name        : (indirect string, offset: 0x51a): ada_main__u00015
    <27a>   DW_AT_decl_file   : 2
    <27b>   DW_AT_decl_line   : 66
    <27c>   DW_AT_linkage_name: (indirect string, offset: 0x734): system__soft_linksB
    <280>   DW_AT_type        : <0x74>
    <284>   DW_AT_external    : 1
    <284>   DW_AT_location    : 9 byte block: 3 6c 0 0 0 0 0 0 0 	(DW_OP_addr: 6c)
 <1><28e>: Abbrev Number: 10 (DW_TAG_variable)
    <28f>   DW_AT_name        : (indirect string, offset: 0x52b): ada_main__u00016
    <293>   DW_AT_decl_file   : 2
    <294>   DW_AT_decl_line   : 68
    <295>   DW_AT_linkage_name: (indirect string, offset: 0x85d): system__soft_linksS
    <299>   DW_AT_type        : <0x74>
    <29d>   DW_AT_external    : 1
    <29d>   DW_AT_location    : 9 byte block: 3 70 0 0 0 0 0 0 0 	(DW_OP_addr: 70)
 <1><2a7>: Abbrev Number: 10 (DW_TAG_variable)
    <2a8>   DW_AT_name        : (indirect string, offset: 0x53c): ada_main__u00017
    <2ac>   DW_AT_decl_file   : 2
    <2ad>   DW_AT_decl_line   : 70
    <2ae>   DW_AT_linkage_name: (indirect string, offset: 0x748): system__parametersB
    <2b2>   DW_AT_type        : <0x74>
    <2b6>   DW_AT_external    : 1
    <2b6>   DW_AT_location    : 9 byte block: 3 74 0 0 0 0 0 0 0 	(DW_OP_addr: 74)
 <1><2c0>: Abbrev Number: 10 (DW_TAG_variable)
    <2c1>   DW_AT_name        : (indirect string, offset: 0x54d): ada_main__u00018
    <2c5>   DW_AT_decl_file   : 2
    <2c6>   DW_AT_decl_line   : 72
    <2c7>   DW_AT_linkage_name: (indirect string, offset: 0x1f6): system__parametersS
    <2cb>   DW_AT_type        : <0x74>
    <2cf>   DW_AT_external    : 1
    <2cf>   DW_AT_location    : 9 byte block: 3 78 0 0 0 0 0 0 0 	(DW_OP_addr: 78)
 <1><2d9>: Abbrev Number: 10 (DW_TAG_variable)
    <2da>   DW_AT_name        : (indirect string, offset: 0x55e): ada_main__u00019
    <2de>   DW_AT_decl_file   : 2
    <2df>   DW_AT_decl_line   : 74
    <2e0>   DW_AT_linkage_name: (indirect string, offset: 0xb63): system__secondary_stackB
    <2e4>   DW_AT_type        : <0x74>
    <2e8>   DW_AT_external    : 1
    <2e8>   DW_AT_location    : 9 byte block: 3 7c 0 0 0 0 0 0 0 	(DW_OP_addr: 7c)
 <1><2f2>: Abbrev Number: 10 (DW_TAG_variable)
    <2f3>   DW_AT_name        : (indirect string, offset: 0x793): ada_main__u00020
    <2f7>   DW_AT_decl_file   : 2
    <2f8>   DW_AT_decl_line   : 76
    <2f9>   DW_AT_linkage_name: (indirect string, offset: 0x96): system__secondary_stackS
    <2fd>   DW_AT_type        : <0x74>
    <301>   DW_AT_external    : 1
    <301>   DW_AT_location    : 9 byte block: 3 80 0 0 0 0 0 0 0 	(DW_OP_addr: 80)
 <1><30b>: Abbrev Number: 10 (DW_TAG_variable)
    <30c>   DW_AT_name        : (indirect string, offset: 0x85): ada_main__u00021
    <310>   DW_AT_decl_file   : 2
    <311>   DW_AT_decl_line   : 78
    <312>   DW_AT_linkage_name: (indirect string, offset: 0xaf2): system__storage_elementsB
    <316>   DW_AT_type        : <0x74>
    <31a>   DW_AT_external    : 1
    <31a>   DW_AT_location    : 9 byte block: 3 84 0 0 0 0 0 0 0 	(DW_OP_addr: 84)
 <1><324>: Abbrev Number: 10 (DW_TAG_variable)
    <325>   DW_AT_name        : (indirect string, offset: 0x7b9): ada_main__u00022
    <329>   DW_AT_decl_file   : 2
    <32a>   DW_AT_decl_line   : 80
    <32b>   DW_AT_linkage_name: (indirect string, offset: 0x6b): system__storage_elementsS
    <32f>   DW_AT_type        : <0x74>
    <333>   DW_AT_external    : 1
    <333>   DW_AT_location    : 9 byte block: 3 88 0 0 0 0 0 0 0 	(DW_OP_addr: 88)
 <1><33d>: Abbrev Number: 10 (DW_TAG_variable)
    <33e>   DW_AT_name        : (indirect string, offset: 0x630): ada_main__u00023
    <342>   DW_AT_decl_file   : 2
    <343>   DW_AT_decl_line   : 82
    <344>   DW_AT_linkage_name: (indirect string, offset: 0x2a3): system__stack_checkingB
    <348>   DW_AT_type        : <0x74>
    <34c>   DW_AT_external    : 1
    <34c>   DW_AT_location    : 9 byte block: 3 8c 0 0 0 0 0 0 0 	(DW_OP_addr: 8c)
 <1><356>: Abbrev Number: 10 (DW_TAG_variable)
    <357>   DW_AT_name        : (indirect string, offset: 0x14d): ada_main__u00024
    <35b>   DW_AT_decl_file   : 2
    <35c>   DW_AT_decl_line   : 84
    <35d>   DW_AT_linkage_name: (indirect string, offset: 0x3ad): system__stack_checkingS
    <361>   DW_AT_type        : <0x74>
    <365>   DW_AT_external    : 1
    <365>   DW_AT_location    : 9 byte block: 3 90 0 0 0 0 0 0 0 	(DW_OP_addr: 90)
 <1><36f>: Abbrev Number: 10 (DW_TAG_variable)
    <370>   DW_AT_name        : (indirect string, offset: 0x808): ada_main__u00025
    <374>   DW_AT_decl_file   : 2
    <375>   DW_AT_decl_line   : 86
    <376>   DW_AT_linkage_name: (indirect string, offset: 0x2bb): system__exception_tableB
    <37a>   DW_AT_type        : <0x74>
    <37e>   DW_AT_external    : 1
    <37e>   DW_AT_location    : 9 byte block: 3 94 0 0 0 0 0 0 0 	(DW_OP_addr: 94)
 <1><388>: Abbrev Number: 10 (DW_TAG_variable)
    <389>   DW_AT_name        : (indirect string, offset: 0x819): ada_main__u00026
    <38d>   DW_AT_decl_file   : 2
    <38e>   DW_AT_decl_line   : 88
    <38f>   DW_AT_linkage_name: (indirect string, offset: 0x3d1): system__exception_tableS
    <393>   DW_AT_type        : <0x74>
    <397>   DW_AT_external    : 1
    <397>   DW_AT_location    : 9 byte block: 3 98 0 0 0 0 0 0 0 	(DW_OP_addr: 98)
 <1><3a1>: Abbrev Number: 10 (DW_TAG_variable)
    <3a2>   DW_AT_name        : (indirect string, offset: 0x82a): ada_main__u00027
    <3a6>   DW_AT_decl_file   : 2
    <3a7>   DW_AT_decl_line   : 90
    <3a8>   DW_AT_linkage_name: (indirect string, offset: 0x5bb): system__exceptionsB
    <3ac>   DW_AT_type        : <0x74>
    <3b0>   DW_AT_external    : 1
    <3b0>   DW_AT_location    : 9 byte block: 3 9c 0 0 0 0 0 0 0 	(DW_OP_addr: 9c)
 <1><3ba>: Abbrev Number: 10 (DW_TAG_variable)
    <3bb>   DW_AT_name        : (indirect string, offset: 0x83b): ada_main__u00028
    <3bf>   DW_AT_decl_file   : 2
    <3c0>   DW_AT_decl_line   : 92
    <3c1>   DW_AT_linkage_name: (indirect string, offset: 0x5a7): system__exceptionsS
    <3c5>   DW_AT_type        : <0x74>
    <3c9>   DW_AT_external    : 1
    <3c9>   DW_AT_location    : 9 byte block: 3 a0 0 0 0 0 0 0 0 	(DW_OP_addr: a0)
 <1><3d3>: Abbrev Number: 10 (DW_TAG_variable)
    <3d4>   DW_AT_name        : (indirect string, offset: 0x84c): ada_main__u00029
    <3d8>   DW_AT_decl_file   : 2
    <3d9>   DW_AT_decl_line   : 94
    <3da>   DW_AT_linkage_name: (indirect string, offset: 0x1a4): system__exceptions__machineS
    <3de>   DW_AT_type        : <0x74>
    <3e2>   DW_AT_external    : 1
    <3e2>   DW_AT_location    : 9 byte block: 3 a4 0 0 0 0 0 0 0 	(DW_OP_addr: a4)
 <1><3ec>: Abbrev Number: 10 (DW_TAG_variable)
    <3ed>   DW_AT_name        : (indirect string, offset: 0xa94): ada_main__u00030
    <3f1>   DW_AT_decl_file   : 2
    <3f2>   DW_AT_decl_line   : 96
    <3f3>   DW_AT_linkage_name: (indirect string, offset: 0x1d2): system__exceptions_debugB
    <3f7>   DW_AT_type        : <0x74>
    <3fb>   DW_AT_external    : 1
    <3fb>   DW_AT_location    : 9 byte block: 3 a8 0 0 0 0 0 0 0 	(DW_OP_addr: a8)
 <1><405>: Abbrev Number: 10 (DW_TAG_variable)
    <406>   DW_AT_name        : (indirect string, offset: 0x668): ada_main__u00031
    <40a>   DW_AT_decl_file   : 2
    <40b>   DW_AT_decl_line   : 98
    <40c>   DW_AT_linkage_name: (indirect string, offset: 0x6f6): system__exceptions_debugS
    <410>   DW_AT_type        : <0x74>
    <414>   DW_AT_external    : 1
    <414>   DW_AT_location    : 9 byte block: 3 ac 0 0 0 0 0 0 0 	(DW_OP_addr: ac)
 <1><41e>: Abbrev Number: 10 (DW_TAG_variable)
    <41f>   DW_AT_name        : (indirect string, offset: 0xabf): ada_main__u00032
    <423>   DW_AT_decl_file   : 2
    <424>   DW_AT_decl_line   : 100
    <425>   DW_AT_linkage_name: (indirect string, offset: 0x98c): system__img_intB
    <429>   DW_AT_type        : <0x74>
    <42d>   DW_AT_external    : 1
    <42d>   DW_AT_location    : 9 byte block: 3 b0 0 0 0 0 0 0 0 	(DW_OP_addr: b0)
 <1><437>: Abbrev Number: 10 (DW_TAG_variable)
    <438>   DW_AT_name        : (indirect string, offset: 0xad0): ada_main__u00033
    <43c>   DW_AT_decl_file   : 2
    <43d>   DW_AT_decl_line   : 102
    <43e>   DW_AT_linkage_name: (indirect string, offset: 0x1c1): system__img_intS
    <442>   DW_AT_type        : <0x74>
    <446>   DW_AT_external    : 1
    <446>   DW_AT_location    : 9 byte block: 3 b4 0 0 0 0 0 0 0 	(DW_OP_addr: b4)
 <1><450>: Abbrev Number: 10 (DW_TAG_variable)
    <451>   DW_AT_name        : (indirect string, offset: 0xae1): ada_main__u00034
    <455>   DW_AT_decl_file   : 2
    <456>   DW_AT_decl_line   : 104
    <457>   DW_AT_linkage_name: (indirect string, offset: 0x721): system__tracebackB
    <45b>   DW_AT_type        : <0x74>
    <45f>   DW_AT_external    : 1
    <45f>   DW_AT_location    : 9 byte block: 3 b8 0 0 0 0 0 0 0 	(DW_OP_addr: b8)
 <1><469>: Abbrev Number: 10 (DW_TAG_variable)
    <46a>   DW_AT_name        : (indirect string, offset: 0x39c): ada_main__u00035
    <46e>   DW_AT_decl_file   : 2
    <46f>   DW_AT_decl_line   : 106
    <470>   DW_AT_linkage_name: (indirect string, offset: 0xb2e): system__tracebackS
    <474>   DW_AT_type        : <0x74>
    <478>   DW_AT_external    : 1
    <478>   DW_AT_location    : 9 byte block: 3 bc 0 0 0 0 0 0 0 	(DW_OP_addr: bc)
 <1><482>: Abbrev Number: 10 (DW_TAG_variable)
    <483>   DW_AT_name        : (indirect string, offset: 0x6b6): ada_main__u00036
    <487>   DW_AT_decl_file   : 2
    <488>   DW_AT_decl_line   : 108
    <489>   DW_AT_linkage_name: (indirect string, offset: 0x915): system__traceback_entriesB
    <48d>   DW_AT_type        : <0x74>
    <491>   DW_AT_external    : 1
    <491>   DW_AT_location    : 9 byte block: 3 c0 0 0 0 0 0 0 0 	(DW_OP_addr: c0)
 <1><49b>: Abbrev Number: 10 (DW_TAG_variable)
    <49c>   DW_AT_name        : (indirect string, offset: 0x6cc): ada_main__u00037
    <4a0>   DW_AT_decl_file   : 2
    <4a1>   DW_AT_decl_line   : 110
    <4a2>   DW_AT_linkage_name: (indirect string, offset: 0x9d0): system__traceback_entriesS
    <4a6>   DW_AT_type        : <0x74>
    <4aa>   DW_AT_external    : 1
    <4aa>   DW_AT_location    : 9 byte block: 3 c4 0 0 0 0 0 0 0 	(DW_OP_addr: c4)
 <1><4b4>: Abbrev Number: 10 (DW_TAG_variable)
    <4b5>   DW_AT_name        : (indirect string, offset: 0xb41): ada_main__u00038
    <4b9>   DW_AT_decl_file   : 2
    <4ba>   DW_AT_decl_line   : 112
    <4bb>   DW_AT_linkage_name: (indirect string, offset: 0x187): system__traceback__symbolicB
    <4bf>   DW_AT_type        : <0x74>
    <4c3>   DW_AT_external    : 1
    <4c3>   DW_AT_location    : 9 byte block: 3 c8 0 0 0 0 0 0 0 	(DW_OP_addr: c8)
 <1><4cd>: Abbrev Number: 10 (DW_TAG_variable)
    <4ce>   DW_AT_name        : (indirect string, offset: 0xb52): ada_main__u00039
    <4d2>   DW_AT_decl_file   : 2
    <4d3>   DW_AT_decl_line   : 114
    <4d4>   DW_AT_linkage_name: (indirect string, offset: 0x96f): system__traceback__symbolicS
    <4d8>   DW_AT_type        : <0x74>
    <4dc>   DW_AT_external    : 1
    <4dc>   DW_AT_location    : 9 byte block: 3 cc 0 0 0 0 0 0 0 	(DW_OP_addr: cc)
 <1><4e6>: Abbrev Number: 10 (DW_TAG_variable)
    <4e7>   DW_AT_name        : (indirect string, offset: 0x304): ada_main__u00040
    <4eb>   DW_AT_decl_file   : 2
    <4ec>   DW_AT_decl_line   : 116
    <4ed>   DW_AT_linkage_name: (indirect string, offset: 0x43e): ada__exceptions__tracebackB
    <4f1>   DW_AT_type        : <0x74>
    <4f5>   DW_AT_external    : 1
    <4f5>   DW_AT_location    : 9 byte block: 3 d0 0 0 0 0 0 0 0 	(DW_OP_addr: d0)
 <1><4ff>: Abbrev Number: 10 (DW_TAG_variable)
    <500>   DW_AT_name        : (indirect string, offset: 0x315): ada_main__u00041
    <504>   DW_AT_decl_file   : 2
    <505>   DW_AT_decl_line   : 118
    <506>   DW_AT_linkage_name: (indirect string, offset: 0x4b0): ada__exceptions__tracebackS
    <50a>   DW_AT_type        : <0x74>
    <50e>   DW_AT_external    : 1
    <50e>   DW_AT_location    : 9 byte block: 3 d4 0 0 0 0 0 0 0 	(DW_OP_addr: d4)
 <1><518>: Abbrev Number: 10 (DW_TAG_variable)
    <519>   DW_AT_name        : (indirect string, offset: 0x326): ada_main__u00042
    <51d>   DW_AT_decl_file   : 2
    <51e>   DW_AT_decl_line   : 120
    <51f>   DW_AT_linkage_name: (indirect string, offset: 0xa56): system__address_imageB
    <523>   DW_AT_type        : <0x74>
    <527>   DW_AT_external    : 1
    <527>   DW_AT_location    : 9 byte block: 3 d8 0 0 0 0 0 0 0 	(DW_OP_addr: d8)
 <1><531>: Abbrev Number: 10 (DW_TAG_variable)
    <532>   DW_AT_name        : (indirect string, offset: 0x5a): ada_main__u00043
    <536>   DW_AT_decl_file   : 2
    <537>   DW_AT_decl_line   : 122
    <538>   DW_AT_linkage_name: (indirect string, offset: 0x679): system__address_imageS
    <53c>   DW_AT_type        : <0x74>
    <540>   DW_AT_external    : 1
    <540>   DW_AT_location    : 9 byte block: 3 dc 0 0 0 0 0 0 0 	(DW_OP_addr: dc)
 <1><54a>: Abbrev Number: 10 (DW_TAG_variable)
    <54b>   DW_AT_name        : (indirect string, offset: 0x347): ada_main__u00044
    <54f>   DW_AT_decl_file   : 2
    <550>   DW_AT_decl_line   : 124
    <551>   DW_AT_linkage_name: (indirect string, offset: 0x5cf): system__wch_conB
    <555>   DW_AT_type        : <0x74>
    <559>   DW_AT_external    : 1
    <559>   DW_AT_location    : 9 byte block: 3 e0 0 0 0 0 0 0 0 	(DW_OP_addr: e0)
 <1><563>: Abbrev Number: 10 (DW_TAG_variable)
    <564>   DW_AT_name        : (indirect string, offset: 0x358): ada_main__u00045
    <568>   DW_AT_decl_file   : 2
    <569>   DW_AT_decl_line   : 126
    <56a>   DW_AT_linkage_name: (indirect string, offset: 0x166): system__wch_conS
    <56e>   DW_AT_type        : <0x74>
    <572>   DW_AT_external    : 1
    <572>   DW_AT_location    : 9 byte block: 3 e4 0 0 0 0 0 0 0 	(DW_OP_addr: e4)
 <1><57c>: Abbrev Number: 10 (DW_TAG_variable)
    <57d>   DW_AT_name        : (indirect string, offset: 0x369): ada_main__u00046
    <581>   DW_AT_decl_file   : 2
    <582>   DW_AT_decl_line   : 128
    <583>   DW_AT_linkage_name: (indirect string, offset: 0x37a): system__wch_stwB
    <587>   DW_AT_type        : <0x74>
    <58b>   DW_AT_external    : 1
    <58b>   DW_AT_location    : 9 byte block: 3 e8 0 0 0 0 0 0 0 	(DW_OP_addr: e8)
 <1><595>: Abbrev Number: 10 (DW_TAG_variable)
    <596>   DW_AT_name        : (indirect string, offset: 0xb7c): ada_main__u00047
    <59a>   DW_AT_decl_file   : 2
    <59b>   DW_AT_decl_line   : 130
    <59c>   DW_AT_linkage_name: (indirect string, offset: 0x42d): system__wch_stwS
    <5a0>   DW_AT_type        : <0x74>
    <5a4>   DW_AT_external    : 1
    <5a4>   DW_AT_location    : 9 byte block: 3 ec 0 0 0 0 0 0 0 	(DW_OP_addr: ec)
 <1><5ae>: Abbrev Number: 10 (DW_TAG_variable)
    <5af>   DW_AT_name        : (indirect string, offset: 0x38b): ada_main__u00048
    <5b3>   DW_AT_decl_file   : 2
    <5b4>   DW_AT_decl_line   : 132
    <5b5>   DW_AT_linkage_name: (indirect string, offset: 0xa45): system__wch_cnvB
    <5b9>   DW_AT_type        : <0x74>
    <5bd>   DW_AT_external    : 1
    <5bd>   DW_AT_location    : 9 byte block: 3 f0 0 0 0 0 0 0 0 	(DW_OP_addr: f0)
 <1><5c7>: Abbrev Number: 10 (DW_TAG_variable)
    <5c8>   DW_AT_name        : (indirect string, offset: 0x49): ada_main__u00049
    <5cc>   DW_AT_decl_file   : 2
    <5cd>   DW_AT_decl_line   : 134
    <5ce>   DW_AT_linkage_name: (indirect string, offset: 0x574): system__wch_cnvS
    <5d2>   DW_AT_type        : <0x74>
    <5d6>   DW_AT_external    : 1
    <5d6>   DW_AT_location    : 9 byte block: 3 f4 0 0 0 0 0 0 0 	(DW_OP_addr: f4)
 <1><5e0>: Abbrev Number: 10 (DW_TAG_variable)
    <5e1>   DW_AT_name        : (indirect string, offset: 0x710): ada_main__u00050
    <5e5>   DW_AT_decl_file   : 2
    <5e6>   DW_AT_decl_line   : 136
    <5e7>   DW_AT_linkage_name: (indirect string, offset: 0x3c5): interfacesS
    <5eb>   DW_AT_type        : <0x74>
    <5ef>   DW_AT_external    : 1
    <5ef>   DW_AT_location    : 9 byte block: 3 f8 0 0 0 0 0 0 0 	(DW_OP_addr: f8)
 <1><5f9>: Abbrev Number: 10 (DW_TAG_variable)
    <5fa>   DW_AT_name        : (indirect string, offset: 0x585): ada_main__u00051
    <5fe>   DW_AT_decl_file   : 2
    <5ff>   DW_AT_decl_line   : 138
    <600>   DW_AT_linkage_name: (indirect string, offset: 0x0): system__wch_jisB
    <604>   DW_AT_type        : <0x74>
    <608>   DW_AT_external    : 1
    <608>   DW_AT_location    : 9 byte block: 3 fc 0 0 0 0 0 0 0 	(DW_OP_addr: fc)
 <1><612>: Abbrev Number: 10 (DW_TAG_variable)
    <613>   DW_AT_name        : (indirect string, offset: 0x596): ada_main__u00052
    <617>   DW_AT_decl_file   : 2
    <618>   DW_AT_decl_line   : 140
    <619>   DW_AT_linkage_name: (indirect string, offset: 0x6dd): system__wch_jisS
    <61d>   DW_AT_type        : <0x74>
    <621>   DW_AT_external    : 1
    <621>   DW_AT_location    : 9 byte block: 3 0 1 0 0 0 0 0 0 	(DW_OP_addr: 100)
 <1><62b>: Abbrev Number: 10 (DW_TAG_variable)
    <62c>   DW_AT_name        : (indirect string, offset: 0x75c): ada_main__u00053
    <630>   DW_AT_decl_file   : 2
    <631>   DW_AT_decl_line   : 142
    <632>   DW_AT_linkage_name: (indirect string, offset: 0xa6d): system__crtlS
    <636>   DW_AT_type        : <0x74>
    <63a>   DW_AT_external    : 1
    <63a>   DW_AT_location    : 9 byte block: 3 4 1 0 0 0 0 0 0 	(DW_OP_addr: 104)
 <1><644>: Abbrev Number: 11 (DW_TAG_variable)
    <645>   DW_AT_name        : (indirect string, offset: 0x11f): ada_main__local_priority_specific_dispatching
    <649>   DW_AT_decl_file   : 1
    <64a>   DW_AT_decl_line   : 14
    <64b>   DW_AT_type        : <0xa4>
    <64f>   DW_AT_location    : 9 byte block: 3 8 1 0 0 0 0 0 0 	(DW_OP_addr: 108)
 <1><659>: Abbrev Number: 11 (DW_TAG_variable)
    <65a>   DW_AT_name        : (indirect string, offset: 0x474): ada_main__local_interrupt_states
    <65e>   DW_AT_decl_file   : 1
    <65f>   DW_AT_decl_line   : 15
    <660>   DW_AT_type        : <0xd4>
    <664>   DW_AT_location    : 9 byte block: 3 9 1 0 0 0 0 0 0 	(DW_OP_addr: 109)
 <1><66e>: Abbrev Number: 11 (DW_TAG_variable)
    <66f>   DW_AT_name        : (indirect string, offset: 0x9fc): ada_main__is_elaborated
    <673>   DW_AT_decl_file   : 1
    <674>   DW_AT_decl_line   : 17
    <675>   DW_AT_type        : <0x683>
    <679>   DW_AT_location    : 9 byte block: 3 2 0 0 0 0 0 0 0 	(DW_OP_addr: 2)
 <1><683>: Abbrev Number: 5 (DW_TAG_base_type)
    <684>   DW_AT_byte_size   : 1
    <685>   DW_AT_encoding    : 2	(boolean)
    <686>   DW_AT_name        : (indirect string, offset: 0x49a): boolean
 <1><68a>: Abbrev Number: 12 (DW_TAG_subprogram)
    <68b>   DW_AT_external    : 1
    <68b>   DW_AT_name        : (indirect string, offset: 0x6c7): main
    <68f>   DW_AT_decl_file   : 1
    <690>   DW_AT_decl_line   : 116
    <691>   DW_AT_type        : <0x71d>
    <695>   DW_AT_low_pc      : 0x14e
    <69d>   DW_AT_high_pc     : 0x65
    <6a5>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <6a7>   DW_AT_GNU_all_tail_call_sites: 1
    <6a7>   DW_AT_sibling     : <0x71d>
 <2><6ab>: Abbrev Number: 13 (DW_TAG_formal_parameter)
    <6ac>   DW_AT_name        : (indirect string, offset: 0x3ea): argc
    <6b0>   DW_AT_decl_file   : 2
    <6b1>   DW_AT_decl_line   : 31
    <6b2>   DW_AT_type        : <0x724>
    <6b6>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><6b9>: Abbrev Number: 13 (DW_TAG_formal_parameter)
    <6ba>   DW_AT_name        : (indirect string, offset: 0x44): argv
    <6be>   DW_AT_decl_file   : 2
    <6bf>   DW_AT_decl_line   : 32
    <6c0>   DW_AT_type        : <0x72b>
    <6c4>   DW_AT_location    : 2 byte block: 91 50 	(DW_OP_fbreg: -48)
 <2><6c7>: Abbrev Number: 13 (DW_TAG_formal_parameter)
    <6c8>   DW_AT_name        : (indirect string, offset: 0x495): envp
    <6cc>   DW_AT_decl_file   : 2
    <6cd>   DW_AT_decl_line   : 33
    <6ce>   DW_AT_type        : <0x72b>
    <6d2>   DW_AT_location    : 2 byte block: 91 48 	(DW_OP_fbreg: -56)
 <2><6d5>: Abbrev Number: 2 (DW_TAG_array_type)
    <6d6>   DW_AT_name        : (indirect string, offset: 0x652): ada_main__main__TsehT
    <6da>   DW_AT_type        : <0x71d>
    <6de>   DW_AT_sibling     : <0x6e9>
 <3><6e2>: Abbrev Number: 3 (DW_TAG_subrange_type)
    <6e3>   DW_AT_type        : <0x46>
    <6e7>   DW_AT_upper_bound : 2
 <3><6e8>: Abbrev Number: 0
 <2><6e9>: Abbrev Number: 7 (DW_TAG_structure_type)
    <6ea>   DW_AT_name        : (indirect string, offset: 0x45a): ada_main__main__seh___PAD
    <6ee>   DW_AT_byte_size   : 8
    <6ef>   DW_AT_decl_file   : 1
    <6f0>   DW_AT_decl_line   : 127
    <6f1>   DW_AT_artificial  : 1
    <6f1>   DW_AT_sibling     : <0x700>
 <3><6f5>: Abbrev Number: 8 (DW_TAG_member)
    <6f6>   DW_AT_name        : F
    <6f8>   DW_AT_decl_file   : 1
    <6f9>   DW_AT_decl_line   : 127
    <6fa>   DW_AT_type        : <0x6d5>
    <6fe>   DW_AT_data_member_location: 0
 <3><6ff>: Abbrev Number: 0
 <2><700>: Abbrev Number: 14 (DW_TAG_variable)
    <701>   DW_AT_name        : seh
    <705>   DW_AT_decl_file   : 1
    <706>   DW_AT_decl_line   : 127
    <707>   DW_AT_type        : <0x6e9>
    <70b>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><70e>: Abbrev Number: 11 (DW_TAG_variable)
    <70f>   DW_AT_name        : (indirect string, offset: 0x95e): ensure_reference
    <713>   DW_AT_decl_file   : 1
    <714>   DW_AT_decl_line   : 129
    <715>   DW_AT_type        : <0xe0>
    <719>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><71c>: Abbrev Number: 0
 <1><71d>: Abbrev Number: 15 (DW_TAG_base_type)
    <71e>   DW_AT_byte_size   : 4
    <71f>   DW_AT_encoding    : 5	(signed)
    <720>   DW_AT_name        : (indirect string, offset: 0x15e): integer
    <724>   DW_AT_artificial  : 1
 <1><724>: Abbrev Number: 4 (DW_TAG_const_type)
    <725>   DW_AT_type        : <0x71d>
    <729>   DW_AT_artificial  : 1
 <1><729>: Abbrev Number: 16 (DW_TAG_pointer_type)
    <72a>   DW_AT_byte_size   : 8
 <1><72b>: Abbrev Number: 6 (DW_TAG_const_type)
    <72c>   DW_AT_type        : <0x729>
 <1><730>: Abbrev Number: 17 (DW_TAG_subprogram)
    <731>   DW_AT_external    : 1
    <731>   DW_AT_name        : (indirect string, offset: 0x880): ada_main__adainit
    <735>   DW_AT_decl_file   : 1
    <736>   DW_AT_decl_line   : 37
    <737>   DW_AT_linkage_name: (indirect string, offset: 0x425): adainit
    <73b>   DW_AT_low_pc      : 0x2a
    <743>   DW_AT_high_pc     : 0x124
    <74b>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <74d>   DW_AT_GNU_all_tail_call_sites: 1
 <1><74d>: Abbrev Number: 17 (DW_TAG_subprogram)
    <74e>   DW_AT_external    : 1
    <74e>   DW_AT_name        : (indirect string, offset: 0x9bd): ada_main__adafinal
    <752>   DW_AT_decl_file   : 1
    <753>   DW_AT_decl_line   : 19
    <754>   DW_AT_linkage_name: (indirect string, offset: 0x877): adafinal
    <758>   DW_AT_low_pc      : 0x0
    <760>   DW_AT_high_pc     : 0x29
    <768>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <76a>   DW_AT_GNU_all_tail_call_sites: 1
 <1><76a>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_array_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_sdata
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_volatile_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_linkage_name DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [no children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_linkage_name DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    0000000000000000 00000000000001b3 
    0000000000000000 0000000000000000 

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      264
  DWARF Version:               2
  Prologue Length:             175
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/home/ubuntu/Engineering/Programming/Disassembling-Binaries/Ada/Intel_Architecture/Add_Int_w_IO/With_Debug_Info

 The File Name Table (offset 0x8c):
  Entry	Dir	Time	Size	Name
  1	1	0	0	b~add_int_w_io.adb
  2	1	0	0	b~add_int_w_io.ads

 Line Number Statements:
  [0x000000b9]  Extended opcode 2: set Address to 0x0
  [0x000000c4]  Advance Line by 18 to 19
  [0x000000c6]  Copy
  [0x000000c7]  Special opcode 69: advance Address by 4 to 0x4 and Line by 8 to 27
  [0x000000c8]  Special opcode 204: advance Address by 14 to 0x12 and Line by 3 to 30
  [0x000000c9]  Special opcode 104: advance Address by 7 to 0x19 and Line by 1 to 31
  [0x000000ca]  Special opcode 76: advance Address by 5 to 0x1e and Line by 1 to 32
  [0x000000cb]  Special opcode 76: advance Address by 5 to 0x23 and Line by 1 to 33
  [0x000000cc]  Special opcode 42: advance Address by 3 to 0x26 and Line by -5 to 28
  [0x000000cd]  Special opcode 24: advance Address by 1 to 0x27 and Line by 5 to 33
  [0x000000ce]  Special opcode 51: advance Address by 3 to 0x2a and Line by 4 to 37
  [0x000000cf]  Advance Line by 40 to 77
  [0x000000d1]  Special opcode 61: advance Address by 4 to 0x2e and Line by 0 to 77
  [0x000000d2]  Special opcode 218: advance Address by 15 to 0x3d and Line by 3 to 80
  [0x000000d3]  Special opcode 104: advance Address by 7 to 0x44 and Line by 1 to 81
  [0x000000d4]  Special opcode 146: advance Address by 10 to 0x4e and Line by 1 to 82
  [0x000000d5]  Special opcode 146: advance Address by 10 to 0x58 and Line by 1 to 83
  [0x000000d6]  Special opcode 104: advance Address by 7 to 0x5f and Line by 1 to 84
  [0x000000d7]  Special opcode 104: advance Address by 7 to 0x66 and Line by 1 to 85
  [0x000000d8]  Special opcode 104: advance Address by 7 to 0x6d and Line by 1 to 86
  [0x000000d9]  Special opcode 104: advance Address by 7 to 0x74 and Line by 1 to 87
  [0x000000da]  Special opcode 203: advance Address by 14 to 0x82 and Line by 2 to 89
  [0x000000db]  Special opcode 146: advance Address by 10 to 0x8c and Line by 1 to 90
  [0x000000dc]  Special opcode 146: advance Address by 10 to 0x96 and Line by 1 to 91
  [0x000000dd]  Special opcode 202: advance Address by 14 to 0xa4 and Line by 1 to 92
  [0x000000de]  Special opcode 146: advance Address by 10 to 0xae and Line by 1 to 93
  [0x000000df]  Special opcode 146: advance Address by 10 to 0xb8 and Line by 1 to 94
  [0x000000e0]  Special opcode 146: advance Address by 10 to 0xc2 and Line by 1 to 95
  [0x000000e1]  Special opcode 146: advance Address by 10 to 0xcc and Line by 1 to 96
  [0x000000e2]  Special opcode 147: advance Address by 10 to 0xd6 and Line by 2 to 98
  [0x000000e3]  Special opcode 147: advance Address by 10 to 0xe0 and Line by 2 to 100
  [0x000000e4]  Special opcode 161: advance Address by 11 to 0xeb and Line by 2 to 102
  [0x000000e5]  Special opcode 76: advance Address by 5 to 0xf0 and Line by 1 to 103
  [0x000000e6]  Special opcode 76: advance Address by 5 to 0xf5 and Line by 1 to 104
  [0x000000e7]  Advance PC by constant 17 to 0x106
  [0x000000e8]  Special opcode 6: advance Address by 0 to 0x106 and Line by 1 to 105
  [0x000000e9]  Special opcode 76: advance Address by 5 to 0x10b and Line by 1 to 106
  [0x000000ea]  Advance PC by constant 17 to 0x11c
  [0x000000eb]  Special opcode 6: advance Address by 0 to 0x11c and Line by 1 to 107
  [0x000000ec]  Special opcode 76: advance Address by 5 to 0x121 and Line by 1 to 108
  [0x000000ed]  Advance PC by constant 17 to 0x132
  [0x000000ee]  Special opcode 6: advance Address by 0 to 0x132 and Line by 1 to 109
  [0x000000ef]  Special opcode 76: advance Address by 5 to 0x137 and Line by 1 to 110
  [0x000000f0]  Advance PC by constant 17 to 0x148
  [0x000000f1]  Special opcode 6: advance Address by 0 to 0x148 and Line by 1 to 111
  [0x000000f2]  Advance Line by -33 to 78
  [0x000000f4]  Special opcode 47: advance Address by 3 to 0x14b and Line by 0 to 78
  [0x000000f5]  Advance Line by 33 to 111
  [0x000000f7]  Special opcode 19: advance Address by 1 to 0x14c and Line by 0 to 111
  [0x000000f8]  Special opcode 38: advance Address by 2 to 0x14e and Line by 5 to 116
  [0x000000f9]  Advance Line by 13 to 129
  [0x000000fb]  Advance PC by constant 17 to 0x15f
  [0x000000fc]  Special opcode 33: advance Address by 2 to 0x161 and Line by 0 to 129
  [0x000000fd]  Special opcode 163: advance Address by 11 to 0x16c and Line by 4 to 133
  [0x000000fe]  Special opcode 132: advance Address by 9 to 0x175 and Line by 1 to 134
  [0x000000ff]  Special opcode 160: advance Address by 11 to 0x180 and Line by 1 to 135
  [0x00000100]  Special opcode 161: advance Address by 11 to 0x18b and Line by 2 to 137
  [0x00000101]  Special opcode 174: advance Address by 12 to 0x197 and Line by 1 to 138
  [0x00000102]  Special opcode 76: advance Address by 5 to 0x19c and Line by 1 to 139
  [0x00000103]  Special opcode 76: advance Address by 5 to 0x1a1 and Line by 1 to 140
  [0x00000104]  Special opcode 76: advance Address by 5 to 0x1a6 and Line by 1 to 141
  [0x00000105]  Special opcode 76: advance Address by 5 to 0x1ab and Line by 1 to 142
  [0x00000106]  Special opcode 90: advance Address by 6 to 0x1b1 and Line by 1 to 143
  [0x00000107]  Advance PC by 2 to 0x1b3
  [0x00000109]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 73797374 656d5f5f 7763685f 6a697342 system__wch_jisB
  0x00000010 00616461 5f6d6169 6e5f5f54 6c6f6361 .ada_main__Tloca
  0x00000020 6c5f696e 74657272 7570745f 73746174 l_interrupt_stat
  0x00000030 65735300 73797374 656d5f5f 6d656d6f esS.system__memo
  0x00000040 72794200 61726776 00616461 5f6d6169 ryB.argv.ada_mai
  0x00000050 6e5f5f75 30303034 39006164 615f6d61 n__u00049.ada_ma
  0x00000060 696e5f5f 75303030 34330073 79737465 in__u00043.syste
  0x00000070 6d5f5f73 746f7261 67655f65 6c656d65 m__storage_eleme
  0x00000080 6e747353 00616461 5f6d6169 6e5f5f75 ntsS.ada_main__u
  0x00000090 30303032 31007379 7374656d 5f5f7365 00021.system__se
  0x000000a0 636f6e64 6172795f 73746163 6b53002f condary_stackS./
  0x000000b0 686f6d65 2f756275 6e74752f 456e6769 home/ubuntu/Engi
  0x000000c0 6e656572 696e672f 50726f67 72616d6d neering/Programm
  0x000000d0 696e672f 44697361 7373656d 626c696e ing/Disassemblin
  0x000000e0 672d4269 6e617269 65732f41 64612f49 g-Binaries/Ada/I
  0x000000f0 6e74656c 5f417263 68697465 63747572 ntel_Architectur
  0x00000100 652f4164 645f496e 745f775f 494f2f57 e/Add_Int_w_IO/W
  0x00000110 6974685f 44656275 675f496e 666f0061 ith_Debug_Info.a
  0x00000120 64615f6d 61696e5f 5f6c6f63 616c5f70 da_main__local_p
  0x00000130 72696f72 6974795f 73706563 69666963 riority_specific
  0x00000140 5f646973 70617463 68696e67 00616461 _dispatching.ada
  0x00000150 5f6d6169 6e5f5f75 30303032 3400696e _main__u00024.in
  0x00000160 74656765 72007379 7374656d 5f5f7763 teger.system__wc
  0x00000170 685f636f 6e530073 79737465 6d5f5f6d h_conS.system__m
  0x00000180 656d6f72 79530073 79737465 6d5f5f74 emoryS.system__t
  0x00000190 72616365 6261636b 5f5f7379 6d626f6c raceback__symbol
  0x000001a0 69634200 73797374 656d5f5f 65786365 icB.system__exce
  0x000001b0 7074696f 6e735f5f 6d616368 696e6553 ptions__machineS
  0x000001c0 00737973 74656d5f 5f696d67 5f696e74 .system__img_int
  0x000001d0 53007379 7374656d 5f5f6578 63657074 S.system__except
  0x000001e0 696f6e73 5f646562 75674200 676e6174 ions_debugB.gnat
  0x000001f0 5f5f696f 42007379 7374656d 5f5f7061 __ioB.system__pa
  0x00000200 72616d65 74657273 53006164 615f6d61 rametersS.ada_ma
  0x00000210 696e5f5f 75303030 30310061 64615f6d in__u00001.ada_m
  0x00000220 61696e5f 5f753030 30303200 6164615f ain__u00002.ada_
  0x00000230 6d61696e 5f5f7530 30303033 00616461 main__u00003.ada
  0x00000240 5f6d6169 6e5f5f75 30303030 34006164 _main__u00004.ad
  0x00000250 615f6d61 696e5f5f 75303030 30350061 a_main__u00005.a
  0x00000260 64615f6d 61696e5f 5f753030 30303600 da_main__u00006.
  0x00000270 6164615f 6d61696e 5f5f7530 30303037 ada_main__u00007
  0x00000280 00616461 5f6d6169 6e5f5f75 30303030 .ada_main__u0000
  0x00000290 38006164 615f6d61 696e5f5f 75303030 8.ada_main__u000
  0x000002a0 30390073 79737465 6d5f5f73 7461636b 09.system__stack
  0x000002b0 5f636865 636b696e 67420073 79737465 _checkingB.syste
  0x000002c0 6d5f5f65 78636570 74696f6e 5f746162 m__exception_tab
  0x000002d0 6c654200 6164615f 6d61696e 5f5f546c leB.ada_main__Tl
  0x000002e0 6f63616c 5f707269 6f726974 795f7370 ocal_priority_sp
  0x000002f0 65636966 69635f64 69737061 74636869 ecific_dispatchi
  0x00000300 6e675300 6164615f 6d61696e 5f5f7530 ngS.ada_main__u0
  0x00000310 30303430 00616461 5f6d6169 6e5f5f75 0040.ada_main__u
  0x00000320 30303034 31006164 615f6d61 696e5f5f 00041.ada_main__
  0x00000330 75303030 34320073 79737465 6d5f5f61 u00042.system__a
  0x00000340 64647265 73730061 64615f6d 61696e5f ddress.ada_main_
  0x00000350 5f753030 30343400 6164615f 6d61696e _u00044.ada_main
  0x00000360 5f5f7530 30303435 00616461 5f6d6169 __u00045.ada_mai
  0x00000370 6e5f5f75 30303034 36007379 7374656d n__u00046.system
  0x00000380 5f5f7763 685f7374 77420061 64615f6d __wch_stwB.ada_m
  0x00000390 61696e5f 5f753030 30343800 6164615f ain__u00048.ada_
  0x000003a0 6d61696e 5f5f7530 30303335 00737973 main__u00035.sys
  0x000003b0 74656d5f 5f737461 636b5f63 6865636b tem__stack_check
  0x000003c0 696e6753 00696e74 65726661 63657353 ingS.interfacesS
  0x000003d0 00737973 74656d5f 5f657863 65707469 .system__excepti
  0x000003e0 6f6e5f74 61626c65 53006172 67630061 on_tableS.argc.a
  0x000003f0 64615f6d 61696e5f 5f6c6f63 616c5f69 da_main__local_i
  0x00000400 6e746572 72757074 5f737461 7465735f nterrupt_states_
  0x00000410 5f5f5041 44005f5f 676e6174 5f766572 __PAD.__gnat_ver
  0x00000420 73696f6e 00616461 696e6974 00737973 sion.adainit.sys
  0x00000430 74656d5f 5f776368 5f737477 53006164 tem__wch_stwS.ad
  0x00000440 615f5f65 78636570 74696f6e 735f5f74 a__exceptions__t
  0x00000450 72616365 6261636b 42006164 615f6d61 racebackB.ada_ma
  0x00000460 696e5f5f 6d61696e 5f5f7365 685f5f5f in__main__seh___
  0x00000470 50414400 6164615f 6d61696e 5f5f6c6f PAD.ada_main__lo
  0x00000480 63616c5f 696e7465 72727570 745f7374 cal_interrupt_st
  0x00000490 61746573 00656e76 7000626f 6f6c6561 ates.envp.boolea
  0x000004a0 6e006164 645f696e 745f775f 696f4200 n.add_int_w_ioB.
  0x000004b0 6164615f 5f657863 65707469 6f6e735f ada__exceptions_
  0x000004c0 5f747261 63656261 636b5300 6164615f _tracebackS.ada_
  0x000004d0 6d61696e 5f5f7530 30303130 00616461 main__u00010.ada
  0x000004e0 5f6d6169 6e5f5f75 30303031 31006164 _main__u00011.ad
  0x000004f0 615f6d61 696e5f5f 75303030 31320061 a_main__u00012.a
  0x00000500 64615f6d 61696e5f 5f753030 30313300 da_main__u00013.
  0x00000510 63686172 61637465 72006164 615f6d61 character.ada_ma
  0x00000520 696e5f5f 75303030 31350061 64615f6d in__u00015.ada_m
  0x00000530 61696e5f 5f753030 30313600 6164615f ain__u00016.ada_
  0x00000540 6d61696e 5f5f7530 30303137 00616461 main__u00017.ada
  0x00000550 5f6d6169 6e5f5f75 30303031 38006164 _main__u00018.ad
  0x00000560 615f6d61 696e5f5f 75303030 31390061 a_main__u00019.a
  0x00000570 64615300 73797374 656d5f5f 7763685f daS.system__wch_
  0x00000580 636e7653 00616461 5f6d6169 6e5f5f75 cnvS.ada_main__u
  0x00000590 30303035 31006164 615f6d61 696e5f5f 00051.ada_main__
  0x000005a0 75303030 35320073 79737465 6d5f5f65 u00052.system__e
  0x000005b0 78636570 74696f6e 73530073 79737465 xceptionsS.syste
  0x000005c0 6d5f5f65 78636570 74696f6e 73420073 m__exceptionsB.s
  0x000005d0 79737465 6d5f5f77 63685f63 6f6e4200 ystem__wch_conB.
  0x000005e0 474e5520 41646120 372e332e 30202d67 GNU Ada 7.3.0 -g
  0x000005f0 202d676e 61744120 2d676e61 74576220  -gnatA -gnatWb 
  0x00000600 2d676e61 74697720 2d67202d 676e6174 -gnatiw -g -gnat
  0x00000610 7773202d 6d74756e 653d6765 6e657269 ws -mtune=generi
  0x00000620 63202d6d 61726368 3d783836 2d363400 c -march=x86-64.
  0x00000630 6164615f 6d61696e 5f5f7530 30303233 ada_main__u00023
  0x00000640 00616461 5f6d6169 6e5f5f75 30303031 .ada_main__u0001
  0x00000650 34006164 615f6d61 696e5f5f 6d61696e 4.ada_main__main
  0x00000660 5f5f5473 65685400 6164615f 6d61696e __TsehT.ada_main
  0x00000670 5f5f7530 30303331 00737973 74656d5f __u00031.system_
  0x00000680 5f616464 72657373 5f696d61 67655300 _address_imageS.
  0x00000690 6164615f 5f657863 65707469 6f6e735f ada__exceptions_
  0x000006a0 5f6c6173 745f6368 616e6365 5f68616e _last_chance_han
  0x000006b0 646c6572 42006164 615f6d61 696e5f5f dlerB.ada_main__
  0x000006c0 75303030 3336006d 61696e00 6164615f u00036.main.ada_
  0x000006d0 6d61696e 5f5f7530 30303337 00737973 main__u00037.sys
  0x000006e0 74656d5f 5f776368 5f6a6973 53007379 tem__wch_jisS.sy
  0x000006f0 7374656d 53007379 7374656d 5f5f6578 stemS.system__ex
  0x00000700 63657074 696f6e73 5f646562 75675300 ceptions_debugS.
  0x00000710 6164615f 6d61696e 5f5f7530 30303530 ada_main__u00050
  0x00000720 00737973 74656d5f 5f747261 63656261 .system__traceba
  0x00000730 636b4200 73797374 656d5f5f 736f6674 ckB.system__soft
  0x00000740 5f6c696e 6b734200 73797374 656d5f5f _linksB.system__
  0x00000750 70617261 6d657465 72734200 6164615f parametersB.ada_
  0x00000760 6d61696e 5f5f7530 30303533 00616461 main__u00053.ada
  0x00000770 5f5f6578 63657074 696f6e73 5f5f6c61 __exceptions__la
  0x00000780 73745f63 68616e63 655f6861 6e646c65 st_chance_handle
  0x00000790 72530061 64615f6d 61696e5f 5f753030 rS.ada_main__u00
  0x000007a0 30323000 6164615f 6d61696e 5f5f7665 020.ada_main__ve
  0x000007b0 7273696f 6e5f3332 00616461 5f6d6169 rsion_32.ada_mai
  0x000007c0 6e5f5f75 30303032 32006164 615f6d61 n__u00022.ada_ma
  0x000007d0 696e5f5f 6c6f6361 6c5f7072 696f7269 in__local_priori
  0x000007e0 74795f73 70656369 6669635f 64697370 ty_specific_disp
  0x000007f0 61746368 696e675f 5f5f5041 4400676e atching___PAD.gn
  0x00000800 61745f5f 696f5300 6164615f 6d61696e at__ioS.ada_main
  0x00000810 5f5f7530 30303235 00616461 5f6d6169 __u00025.ada_mai
  0x00000820 6e5f5f75 30303032 36006164 615f6d61 n__u00026.ada_ma
  0x00000830 696e5f5f 75303030 32370061 64615f6d in__u00027.ada_m
  0x00000840 61696e5f 5f753030 30323800 6164615f ain__u00028.ada_
  0x00000850 6d61696e 5f5f7530 30303239 00737973 main__u00029.sys
  0x00000860 74656d5f 5f736f66 745f6c69 6e6b7353 tem__soft_linksS
  0x00000870 00676e61 74530061 64616669 6e616c00 .gnatS.adafinal.
  0x00000880 6164615f 6d61696e 5f5f6164 61696e69 ada_main__adaini
  0x00000890 74002f68 6f6d652f 7562756e 74752f45 t./home/ubuntu/E
  0x000008a0 6e67696e 65657269 6e672f50 726f6772 ngineering/Progr
  0x000008b0 616d6d69 6e672f44 69736173 73656d62 amming/Disassemb
  0x000008c0 6c696e67 2d42696e 61726965 732f4164 ling-Binaries/Ad
  0x000008d0 612f496e 74656c5f 41726368 69746563 a/Intel_Architec
  0x000008e0 74757265 2f416464 5f496e74 5f775f49 ture/Add_Int_w_I
  0x000008f0 4f2f5769 74685f44 65627567 5f496e66 O/With_Debug_Inf
  0x00000900 6f2f627e 6164645f 696e745f 775f696f o/b~add_int_w_io
  0x00000910 2e616462 00737973 74656d5f 5f747261 .adb.system__tra
  0x00000920 63656261 636b5f65 6e747269 65734200 ceback_entriesB.
  0x00000930 5f5f676e 61745f61 64615f6d 61696e5f __gnat_ada_main_
  0x00000940 70726f67 72616d5f 6e616d65 00616461 program_name.ada
  0x00000950 5f5f6578 63657074 696f6e73 4200656e __exceptionsB.en
  0x00000960 73757265 5f726566 6572656e 63650073 sure_reference.s
  0x00000970 79737465 6d5f5f74 72616365 6261636b ystem__traceback
  0x00000980 5f5f7379 6d626f6c 69635300 73797374 __symbolicS.syst
  0x00000990 656d5f5f 696d675f 696e7442 00616461 em__img_intB.ada
  0x000009a0 5f6d6169 6e5f5f61 64615f6d 61696e5f _main__ada_main_
  0x000009b0 70726f67 72616d5f 6e616d65 00616461 program_name.ada
  0x000009c0 5f6d6169 6e5f5f61 64616669 6e616c00 _main__adafinal.
  0x000009d0 73797374 656d5f5f 74726163 65626163 system__tracebac
  0x000009e0 6b5f656e 74726965 73530061 64615f5f k_entriesS.ada__
  0x000009f0 65786365 7074696f 6e735300 6164615f exceptionsS.ada_
  0x00000a00 6d61696e 5f5f6973 5f656c61 626f7261 main__is_elabora
  0x00000a10 74656400 73797374 656d5f5f 7374616e ted.system__stan
  0x00000a20 64617264 5f6c6962 72617279 42006164 dard_libraryB.ad
  0x00000a30 615f6d61 696e5f5f 676e6174 5f766572 a_main__gnat_ver
  0x00000a40 73696f6e 00737973 74656d5f 5f776368 sion.system__wch
  0x00000a50 5f636e76 42007379 7374656d 5f5f6164 _cnvB.system__ad
  0x00000a60 64726573 735f696d 61676542 00737973 dress_imageB.sys
  0x00000a70 74656d5f 5f637274 6c530061 64615f6d tem__crtlS.ada_m
  0x00000a80 61696e5f 5f54676e 61745f76 65727369 ain__Tgnat_versi
  0x00000a90 6f6e5300 6164615f 6d61696e 5f5f7530 onS.ada_main__u0
  0x00000aa0 30303330 00737973 74656d5f 5f737461 0030.system__sta
  0x00000ab0 6e646172 645f6c69 62726172 79530061 ndard_libraryS.a
  0x00000ac0 64615f6d 61696e5f 5f753030 30333200 da_main__u00032.
  0x00000ad0 6164615f 6d61696e 5f5f7530 30303333 ada_main__u00033
  0x00000ae0 00616461 5f6d6169 6e5f5f75 30303033 .ada_main__u0003
  0x00000af0 34007379 7374656d 5f5f7374 6f726167 4.system__storag
  0x00000b00 655f656c 656d656e 74734200 6164615f e_elementsB.ada_
  0x00000b10 6d61696e 5f5f5461 64615f6d 61696e5f main__Tada_main_
  0x00000b20 70726f67 72616d5f 6e616d65 53007379 program_nameS.sy
  0x00000b30 7374656d 5f5f7472 61636562 61636b53 stem__tracebackS
  0x00000b40 00616461 5f6d6169 6e5f5f75 30303033 .ada_main__u0003
  0x00000b50 38006164 615f6d61 696e5f5f 75303030 8.ada_main__u000
  0x00000b60 33390073 79737465 6d5f5f73 65636f6e 39.system__secon
  0x00000b70 64617279 5f737461 636b4200 6164615f dary_stackB.ada_
  0x00000b80 6d61696e 5f5f7530 30303437 00       main__u00047.

Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000018 000000000000001c 0000001c FDE cie=00000000 pc=0000000000000000..0000000000000029
  DW_CFA_advance_loc: 1 to 0000000000000001
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000000004
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 36 to 0000000000000028
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000038 000000000000001c 0000003c FDE cie=00000000 pc=000000000000002a..000000000000014e
  DW_CFA_advance_loc: 1 to 000000000000002b
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 000000000000002e
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc2: 287 to 000000000000014d
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop

00000058 000000000000001c 0000005c FDE cie=00000000 pc=000000000000014e..00000000000001b3
  DW_CFA_advance_loc: 1 to 000000000000014f
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000000152
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 96 to 00000000000001b2
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop



add.o:     file format elf64-x86-64


Disassembly of section .debug_line:

0000000000000000 <.Ldebug_line0>:
   0:	51                   	push   rcx
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 1d 00 00 00 01    	add    BYTE PTR [rip+0x1000000],bl        # 100000b <.Ledebug_info0+0xfffee6>
   b:	01 01                	add    DWORD PTR [rcx],eax
   d:	ff 0d 00 01 01 01    	dec    DWORD PTR [rip+0x1010100]        # 1010113 <.Ledebug_info0+0x100ffee>
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
  1e:	64 2e 70 70          	fs cs jo 92 <.Ledebug_line0+0x3d>
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 00                	add    BYTE PTR [rax],al
	...

0000000000000027 <.Lehdebug_line0>:
  27:	00 09                	add    BYTE PTR [rcx],cl
  29:	02 00                	add    al,BYTE PTR [rax]
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 00                	add    BYTE PTR [rax],al
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	00 05 01 11 02 09    	add    BYTE PTR [rip+0x9021101],al        # 9021138 <.Ledebug_info0+0x9021013>
  37:	05 02 0e 02 0a       	add    eax,0xa020e02
  3c:	0d 02 0a 05 07       	or     eax,0x7050a02
  41:	0d 02 1e 05 01       	or     eax,0x1051e02
  46:	0d 00 09 02 00       	or     eax,0x20900
	...
  53:	01 01                	add    DWORD PTR [rcx],eax

Disassembly of section .debug_abbrev:

0000000000000000 <.Ldebug_abbrev0>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 03                	add    DWORD PTR [rbx],eax
   4:	08 25 08 1b 08 13    	or     BYTE PTR [rip+0x13081b08],ah        # 13081b12 <.Ledebug_info0+0x130819ed>
   a:	0b 42 0b             	or     eax,DWORD PTR [rdx+0xb]
   d:	10 06                	adc    BYTE PTR [rsi],al
   f:	11 01                	adc    DWORD PTR [rcx],eax
  11:	12 01                	adc    al,BYTE PTR [rcx]
  13:	00 00                	add    BYTE PTR [rax],al
  15:	02 34 00             	add    dh,BYTE PTR [rax+rax*1]
  18:	03 08                	add    ecx,DWORD PTR [rax]
  1a:	02 0a                	add    cl,BYTE PTR [rdx]
  1c:	49 10 00             	rex.WB adc BYTE PTR [r8],al
  1f:	00 03                	add    BYTE PTR [rbx],al
  21:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
  24:	08 27                	or     BYTE PTR [rdi],ah
  26:	0c 36                	or     al,0x36
  28:	0b 3f                	or     edi,DWORD PTR [rdi]
  2a:	0c 11                	or     al,0x11
  2c:	01 12                	add    DWORD PTR [rdx],edx
  2e:	01 00                	add    DWORD PTR [rax],eax
  30:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
  33:	00 03                	add    BYTE PTR [rbx],al
  35:	08 49 10             	or     BYTE PTR [rcx+0x10],cl
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	05 24 00 03 08       	add    eax,0x8030024
  3f:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
  42:	0b 00                	or     eax,DWORD PTR [rax]
  44:	00 06                	add    BYTE PTR [rsi],al
  46:	10 00                	adc    BYTE PTR [rax],al
  48:	49 10 00             	rex.WB adc BYTE PTR [r8],al
	...

Disassembly of section .text.n_main:

0000000000000000 <PASCALMAIN>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	e8 00 00 00 00       	call   9 <PASCALMAIN+0x9>
   9:	66 c7 04 25 00 00 00 	mov    WORD PTR ds:0x0,0x3
  10:	00 03 00 
  13:	66 c7 04 25 00 00 00 	mov    WORD PTR ds:0x0,0x5
  1a:	00 05 00 
  1d:	0f bf 14 25 00 00 00 	movsx  edx,WORD PTR ds:0x0
  24:	00 
  25:	0f bf 04 25 00 00 00 	movsx  eax,WORD PTR ds:0x0
  2c:	00 
  2d:	67 8d 04 02          	lea    eax,[edx+eax*1]
  31:	66 a3 00 00 00 00 00 	movabs ds:0x0,ax
  38:	00 00 00 
  3b:	e8 00 00 00 00       	call   40 <PASCALMAIN+0x40>
  40:	c9                   	leave  
  41:	c3                   	ret    
	...

Disassembly of section .fpc.n_links:

0000000000000000 <.fpc.n_links>:
	...

Disassembly of section .bss.n_u_$p$add_$$_a:

0000000000000000 <U_$P$ADD_$$_A>:
	...

Disassembly of section .bss.n_u_$p$add_$$_b:

0000000000000000 <U_$P$ADD_$$_B>:
	...

Disassembly of section .bss.n_u_$p$add_$$_c:

0000000000000000 <U_$P$ADD_$$_C>:
	...

Disassembly of section .data.n_INITFINAL:

0000000000000000 <INITFINAL>:
   0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .data.n_FPC_THREADVARTABLES:

0000000000000000 <FPC_THREADVARTABLES>:
   0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .data.n_FPC_RESOURCESTRINGTABLES:

0000000000000000 <FPC_RESOURCESTRINGTABLES>:
	...

Disassembly of section .data.n_FPC_WIDEINITTABLES:

0000000000000000 <FPC_WIDEINITTABLES>:
	...

Disassembly of section .data.n_FPC_RESSTRINITTABLES:

0000000000000000 <FPC_RESSTRINITTABLES>:
	...

Disassembly of section .fpc.n_version:

0000000000000000 <.fpc.n_version>:
   0:	46 50                	rex.RX push rax
   2:	43 20 33             	rex.XB and BYTE PTR [r11],sil
   5:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
   8:	30 2b                	xor    BYTE PTR [rbx],ch
   a:	64 66 73 67          	fs data16 jae 75 <.Ledebug_line0+0x20>
   e:	2d 32 20 5b 32       	sub    eax,0x325b2032
  13:	30 31                	xor    BYTE PTR [rcx],dh
  15:	36 2f                	ss (bad) 
  17:	30 31                	xor    BYTE PTR [rcx],dh
  19:	2f                   	(bad)  
  1a:	32 38                	xor    bh,BYTE PTR [rax]
  1c:	5d                   	pop    rbp
  1d:	20 66 6f             	and    BYTE PTR [rsi+0x6f],ah
  20:	72 20                	jb     42 <.Lehdebug_line0+0x1b>
  22:	78 38                	js     5c <.Ledebug_line0+0x7>
  24:	36 5f                	ss pop rdi
  26:	36 34 20             	ss xor al,0x20
  29:	2d 20 4c 69 6e       	sub    eax,0x6e694c20
  2e:	75 78                	jne    a8 <.Ledebug_line0+0x53>

Disassembly of section .data.n___stklen:

0000000000000000 <__stklen>:
   0:	00 00                	add    BYTE PTR [rax],al
   2:	80 00 00             	add    BYTE PTR [rax],0x0
	...

Disassembly of section .data.n___heapsize:

0000000000000000 <__heapsize>:
	...

Disassembly of section .data.n___fpc_valgrind:

0000000000000000 <__fpc_valgrind>:
	...

Disassembly of section .data.n_FPC_RESLOCATION:

0000000000000000 <FPC_RESLOCATION>:
	...

Disassembly of section .debug_frame:

0000000000000000 <.debug_frame>:
   0:	10 00                	adc    BYTE PTR [rax],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	inc    DWORD PTR [rcx]
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	7c 10                	jl     1d <.debug_frame+0x1d>
   d:	0c 07                	or     al,0x7
   f:	08 05 10 02 00 30    	or     BYTE PTR [rip+0x30000210],al        # 30000225 <.Ledebug_info0+0x30000100>
	...
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 42 00             	add    BYTE PTR [rdx+0x0],al
  2a:	00 00                	add    BYTE PTR [rax],al
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	04 01                	add    al,0x1
  32:	00 00                	add    BYTE PTR [rax],al
  34:	00 0e                	add    BYTE PTR [rsi],cl
  36:	10 04 00             	adc    BYTE PTR [rax+rax*1],al
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	00 05 06 04 04 03    	add    BYTE PTR [rip+0x3040406],al        # 3040447 <.Ledebug_info0+0x3040322>
  41:	00 00                	add    BYTE PTR [rax],al
  43:	00                   	.byte 0x0
  44:	0d                   	.byte 0xd
  45:	06                   	(bad)  
	...

Disassembly of section .debug_info:

0000000000000000 <.Ldebug_info0>:
   0:	21 01                	and    DWORD PTR [rcx],eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	61                   	(bad)  
   d:	64 64 2e 70 70       	fs fs cs jo 82 <.Ldebug_info0+0x82>
  12:	00 46 72             	add    BYTE PTR [rsi+0x72],al
  15:	65 65 20 50 61       	gs and BYTE PTR gs:[rax+0x61],dl
  1a:	73 63                	jae    7f <.Ldebug_info0+0x7f>
  1c:	61                   	(bad)  
  1d:	6c                   	ins    BYTE PTR es:[rdi],dx
  1e:	20 33                	and    BYTE PTR [rbx],dh
  20:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
  23:	30 2b                	xor    BYTE PTR [rbx],ch
  25:	64 66 73 67          	fs data16 jae 90 <.Ldebug_info0+0x90>
  29:	2d 32 20 32 30       	sub    eax,0x30322032
  2e:	31 36                	xor    DWORD PTR [rsi],esi
  30:	2f                   	(bad)  
  31:	30 31                	xor    BYTE PTR [rcx],dh
  33:	2f                   	(bad)  
  34:	32 38                	xor    bh,BYTE PTR [rax]
  36:	00 2f                	add    BYTE PTR [rdi],ch
  38:	68 6f 6d 65 2f       	push   0x2f656d6f
  3d:	75 62                	jne    a1 <.Ldebug_info0+0xa1>
  3f:	75 6e                	jne    af <.Ldebug_info0+0xaf>
  41:	74 75                	je     b8 <.Ldebug_info0+0xb8>
  43:	2f                   	(bad)  
  44:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  46:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  4d:	6e 
  4e:	67 2f                	addr32 (bad) 
  50:	50                   	push   rax
  51:	72 6f                	jb     c2 <.Ldebug_info0+0xc2>
  53:	67 72 61             	addr32 jb b7 <.Ldebug_info0+0xb7>
  56:	6d                   	ins    DWORD PTR es:[rdi],dx
  57:	6d                   	ins    DWORD PTR es:[rdi],dx
  58:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
  5f:	61                   	(bad)  
  60:	73 73                	jae    d5 <.Ldebug_info0+0xd5>
  62:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  64:	62                   	(bad)  
  65:	6c                   	ins    BYTE PTR es:[rdi],dx
  66:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
  6d:	61                   	(bad)  
  6e:	72 69                	jb     d9 <.Ldebug_info0+0xd9>
  70:	65 73 2f             	gs jae a2 <.Ldebug_info0+0xa2>
  73:	50                   	push   rax
  74:	61                   	(bad)  
  75:	73 63                	jae    da <.Ldebug_info0+0xda>
  77:	61                   	(bad)  
  78:	6c                   	ins    BYTE PTR es:[rdi],dx
  79:	2f                   	(bad)  
  7a:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  7c:	74 65                	je     e3 <.Ldebug_info0+0xe3>
  7e:	6c                   	ins    BYTE PTR es:[rdi],dx
  7f:	5f                   	pop    rdi
  80:	41 72 63             	rex.B jb e6 <.Ldebug_info0+0xe6>
  83:	68 69 74 65 63       	push   0x63657469
  88:	74 75                	je     ff <_$ADD$_Ld1+0x2>
  8a:	72 65                	jb     f1 <.Ldebug_info0+0xf1>
  8c:	2f                   	(bad)  
  8d:	00 09                	add    BYTE PTR [rcx],cl
  8f:	03 00                	add    eax,DWORD PTR [rax]
	...
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	00 02                	add    BYTE PTR [rdx],al
  a5:	41 00 09             	add    BYTE PTR [r9],cl
  a8:	03 00                	add    eax,DWORD PTR [rax]
	...
  b6:	00 00                	add    BYTE PTR [rax],al
  b8:	00 02                	add    BYTE PTR [rdx],al
  ba:	42 00 09             	rex.X add BYTE PTR [rcx],cl
  bd:	03 00                	add    eax,DWORD PTR [rax]
	...
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 02                	add    BYTE PTR [rdx],al
  cf:	43 00 09             	rex.XB add BYTE PTR [r9],cl
  d2:	03 00                	add    eax,DWORD PTR [rax]
	...
  e0:	00 00                	add    BYTE PTR [rax],al
  e2:	00 03                	add    BYTE PTR [rbx],al
  e4:	6d                   	ins    DWORD PTR es:[rdi],dx
  e5:	61                   	(bad)  
  e6:	69 6e 00 01 41 01 00 	imul   ebp,DWORD PTR [rsi+0x0],0x14101
	...

00000000000000fd <_$ADD$_Ld1>:
  fd:	04 53                	add    al,0x53
  ff:	4d                   	rex.WRB
 100:	41                   	rex.B
 101:	4c                   	rex.WR
 102:	4c                   	rex.WR
 103:	49                   	rex.WB
 104:	4e 54                	rex.WRX push rsp
	...

000000000000010f <.La1>:
 10f:	05 53 4d 41 4c       	add    eax,0x4c414d53
 114:	4c                   	rex.WR
 115:	49                   	rex.WB
 116:	4e 54                	rex.WRX push rsp
 118:	00 05 02 06 00 00    	add    BYTE PTR [rip+0x602],al        # 720 <.Ledebug_info0+0x5fb>

000000000000011b <_$ADD$_Ld2>:
 11b:	06                   	(bad)  
	...


add.o:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000000  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0000000000000000  0000000000000000  00000040  2**1
                  ALLOC
  3 .debug_line   00000055  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .debug_abbrev 0000004d  0000000000000000  0000000000000000  00000095  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text.b_DEBUGSTART_$P$ADD 00000000  0000000000000000  0000000000000000  000000e2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.n_main  00000040  0000000000000000  0000000000000000  000000f0  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .fpc.n_links  00000010  0000000000000000  0000000000000000  00000130  2**0
                  CONTENTS, RELOC, READONLY
  8 .data.n_INITFINAL 00000020  0000000000000000  0000000000000000  00000140  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  9 .data.n_FPC_THREADVARTABLES 0000000c  0000000000000000  0000000000000000  00000160  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 10 .data.n_FPC_RESOURCESTRINGTABLES 00000008  0000000000000000  0000000000000000  00000170  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data.n_FPC_WIDEINITTABLES 00000008  0000000000000000  0000000000000000  00000178  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data.n_FPC_RESSTRINITTABLES 00000008  0000000000000000  0000000000000000  00000180  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 13 .fpc.n_version 00000030  0000000000000000  0000000000000000  00000188  2**3
                  CONTENTS, READONLY
 14 .data.n___stklen 00000008  0000000000000000  0000000000000000  000001b8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 15 .data.n___heapsize 00000008  0000000000000000  0000000000000000  000001c0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 16 .data.n___fpc_valgrind 00000001  0000000000000000  0000000000000000  000001c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 17 .data.n_FPC_RESLOCATION 00000008  0000000000000000  0000000000000000  000001d0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .debug_frame  0000003c  0000000000000000  0000000000000000  000001d8  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
 19 .debug_info   00000133  0000000000000000  0000000000000000  00000214  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 20 .text.z_DEBUGEND_$P$ADD 00000000  0000000000000000  0000000000000000  00000347  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00000347  2**0
                  CONTENTS, READONLY

Disassembly of section .bss:

0000000000000000 <U_$P$ADD_$$_A>:
	...

0000000000000002 <U_$P$ADD_$$_B>:
	...

0000000000000004 <U_$P$ADD_$$_C>:
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	51                   	push   %rcx
   1:	00 00                	add    %al,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 1d 00 00 00 01    	add    %bl,0x1000000(%rip)        # 100000b <_$ADD$_Ld2+0xfffee2>
VAR
	a, b, c : INTEGER;

BEGIN

	a := 3;
   b:	01 01                	add    %eax,(%rcx)
   d:	ff 0d 00 01 01 01    	decl   0x1010100(%rip)        # 1010113 <_$ADD$_Ld2+0x100ffea>
	b := 5;
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 61 64             	add    %ah,0x64(%rcx)
	c := a + b;
  1e:	64 2e 70 70          	fs jo,pn 92 <U_$P$ADD_$$_C+0x8e>
  22:	00 00                	add    %al,(%rax)
  24:	00 00                	add    %al,(%rax)
  26:	00 00                	add    %al,(%rax)
  28:	09 02                	or     %eax,(%rdx)
	...
  32:	05 01 11 02 09       	add    $0x9021101,%eax
  37:	05 02 0e 02 0a       	add    $0xa020e02,%eax
END.
  3c:	0d 02 0a 05 07       	or     $0x7050a02,%eax
  41:	0d 02 1c 05 01       	or     $0x1051c02,%eax
  46:	0d 00 09 02 00       	or     $0x20900,%eax
	...
  53:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
PROGRAM add;

VAR
	a, b, c : INTEGER;

BEGIN
   0:	01 11                	add    %edx,(%rcx)
   2:	01 03                	add    %eax,(%rbx)
   4:	08 25 08 1b 08 13    	or     %ah,0x13081b08(%rip)        # 13081b12 <_$ADD$_Ld2+0x130819e9>

	a := 3;
   a:	0b 42 0b             	or     0xb(%rdx),%eax
   d:	10 06                	adc    %al,(%rsi)
   f:	11 01                	adc    %eax,(%rcx)
  11:	12 01                	adc    (%rcx),%al
	b := 5;
  13:	00 00                	add    %al,(%rax)
  15:	02 34 00             	add    (%rax,%rax,1),%dh
  18:	03 08                	add    (%rax),%ecx
  1a:	02 0a                	add    (%rdx),%cl
  1c:	49 10 00             	rex.WB adc %al,(%r8)
	c := a + b;
  1f:	00 03                	add    %al,(%rbx)
  21:	2e 01 03             	add    %eax,%cs:(%rbx)
  24:	08 27                	or     %ah,(%rdi)
  26:	0c 36                	or     $0x36,%al
  28:	0b 3f                	or     (%rdi),%edi
  2a:	0c 11                	or     $0x11,%al
  2c:	01 12                	add    %edx,(%rdx)
  2e:	01 00                	add    %eax,(%rax)
  30:	00 04 16             	add    %al,(%rsi,%rdx,1)
  33:	00 03                	add    %al,(%rbx)
  35:	08 49 10             	or     %cl,0x10(%rcx)
  38:	00 00                	add    %al,(%rax)
END.
  3a:	05 24 00 03 08       	add    $0x8030024,%eax
  3f:	3e 0b 0b             	or     %ds:(%rbx),%ecx
  42:	0b 00                	or     (%rax),%eax
  44:	00 06                	add    %al,(%rsi)
  46:	10 00                	adc    %al,(%rax)
  48:	49 10 00             	rex.WB adc %al,(%r8)
	...

Disassembly of section .text.n_main:

0000000000000000 <PASCALMAIN>:
PROGRAM add;

VAR
	a, b, c : INTEGER;

BEGIN
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	e8 00 00 00 00       	callq  9 <PASCALMAIN+0x9>

	a := 3;
   9:	66 c7 04 25 00 00 00 	movw   $0x3,0x0
  10:	00 03 00 
	b := 5;
  13:	66 c7 04 25 00 00 00 	movw   $0x5,0x0
  1a:	00 05 00 
	c := a + b;
  1d:	0f bf 14 25 00 00 00 	movswl 0x0,%edx
  24:	00 
  25:	0f bf 04 25 00 00 00 	movswl 0x0,%eax
  2c:	00 
  2d:	67 8d 04 02          	lea    (%edx,%eax,1),%eax
  31:	66 89 04 25 00 00 00 	mov    %ax,0x0
  38:	00 
END.
  39:	e8 00 00 00 00       	callq  3e <PASCALMAIN+0x3e>
  3e:	c9                   	leaveq 
  3f:	c3                   	retq   

Disassembly of section .fpc.n_links:

0000000000000000 <.fpc.n_links>:
	...

Disassembly of section .data.n_INITFINAL:

0000000000000000 <INITFINAL>:
PROGRAM add;

VAR
	a, b, c : INTEGER;

BEGIN
   0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data.n_FPC_THREADVARTABLES:

0000000000000000 <FPC_THREADVARTABLES>:
   0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .data.n_FPC_RESOURCESTRINGTABLES:

0000000000000000 <FPC_RESOURCESTRINGTABLES>:
	...

Disassembly of section .data.n_FPC_WIDEINITTABLES:

0000000000000000 <FPC_WIDEINITTABLES>:
	...

Disassembly of section .data.n_FPC_RESSTRINITTABLES:

0000000000000000 <FPC_RESSTRINITTABLES>:
	...

Disassembly of section .fpc.n_version:

0000000000000000 <.fpc.n_version>:
   0:	46 50                	rex.RX push %rax
   2:	43 20 33             	rex.XB and %sil,(%r11)
   5:	2e 30 2e             	xor    %ch,%cs:(%rsi)
   8:	30 2b                	xor    %ch,(%rbx)

	a := 3;
   a:	64 66 73 67          	fs data16 jae 75 <U_$P$ADD_$$_C+0x71>
   e:	2d 32 20 5b 32       	sub    $0x325b2032,%eax
	b := 5;
  13:	30 31                	xor    %dh,(%rcx)
  15:	36 2f                	ss (bad) 
  17:	30 31                	xor    %dh,(%rcx)
  19:	2f                   	(bad)  
  1a:	32 38                	xor    (%rax),%bh
  1c:	5d                   	pop    %rbp
	c := a + b;
  1d:	20 66 6f             	and    %ah,0x6f(%rsi)
  20:	72 20                	jb     42 <U_$P$ADD_$$_C+0x3e>
  22:	78 38                	js     5c <U_$P$ADD_$$_C+0x58>
  24:	36 5f                	ss pop %rdi
  26:	36 34 20             	ss xor $0x20,%al
  29:	2d 20 4c 69 6e       	sub    $0x6e694c20,%eax
  2e:	75 78                	jne    a8 <U_$P$ADD_$$_C+0xa4>

Disassembly of section .data.n___stklen:

0000000000000000 <__stklen>:
PROGRAM add;

VAR
	a, b, c : INTEGER;

BEGIN
   0:	00 00                	add    %al,(%rax)
   2:	80 00 00             	addb   $0x0,(%rax)
   5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data.n___heapsize:

0000000000000000 <__heapsize>:
	...

Disassembly of section .data.n___fpc_valgrind:

0000000000000000 <__fpc_valgrind>:
	...

Disassembly of section .data.n_FPC_RESLOCATION:

0000000000000000 <FPC_RESLOCATION>:
	...

Disassembly of section .debug_frame:

0000000000000000 <.debug_frame>:
   0:	10 00                	adc    %al,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	incl   (%rcx)

	a := 3;
   9:	00 01                	add    %al,(%rcx)
   b:	7c 10                	jl     1d <.debug_frame+0x1d>
   d:	0c 07                	or     $0x7,%al
   f:	08 05 10 02 00 24    	or     %al,0x24000210(%rip)        # 24000225 <_$ADD$_Ld2+0x240000fc>
	...
	b := 5;
	c := a + b;
  25:	00 00                	add    %al,(%rax)
  27:	00 40 00             	add    %al,0x0(%rax)
  2a:	00 00                	add    %al,(%rax)
  2c:	00 00                	add    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	41 0e                	rex.B (bad) 
  32:	10 40 05             	adc    %al,0x5(%rax)
  35:	06                   	(bad)  
  36:	04 43                	add    $0x43,%al
  38:	0d                   	.byte 0xd
END.
  39:	06                   	(bad)  
	...

Disassembly of section .debug_info:

0000000000000000 <_$ADD$_Ld1-0x10b>:
PROGRAM add;

VAR
	a, b, c : INTEGER;

BEGIN
   0:	2f                   	(bad)  
   1:	01 00                	add    %eax,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 00                	add    %al,(%rax)
   7:	00 00                	add    %al,(%rax)

	a := 3;
   9:	00 08                	add    %cl,(%rax)
   b:	01 61 64             	add    %esp,0x64(%rcx)
   e:	64 2e 70 70          	fs jo,pn 82 <_$ADD$_Ld1-0x89>
  12:	00 46 72             	add    %al,0x72(%rsi)
	b := 5;
  15:	65 65 20 50 61       	gs and %dl,%gs:0x61(%rax)
  1a:	73 63                	jae    7f <_$ADD$_Ld1-0x8c>
  1c:	61                   	(bad)  
	c := a + b;
  1d:	6c                   	insb   (%dx),%es:(%rdi)
  1e:	20 33                	and    %dh,(%rbx)
  20:	2e 30 2e             	xor    %ch,%cs:(%rsi)
  23:	30 2b                	xor    %ch,(%rbx)
  25:	64 66 73 67          	fs data16 jae 90 <_$ADD$_Ld1-0x7b>
  29:	2d 32 20 32 30       	sub    $0x30322032,%eax
  2e:	31 36                	xor    %esi,(%rsi)
  30:	2f                   	(bad)  
  31:	30 31                	xor    %dh,(%rcx)
  33:	2f                   	(bad)  
  34:	32 38                	xor    (%rax),%bh
  36:	00 2f                	add    %ch,(%rdi)
  38:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
END.
  3d:	75 62                	jne    a1 <_$ADD$_Ld1-0x6a>
  3f:	75 6e                	jne    af <_$ADD$_Ld1-0x5c>
  41:	74 75                	je     b8 <_$ADD$_Ld1-0x53>
  43:	2f                   	(bad)  
  44:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  46:	67 69 6e 65 65 72 69 	imul   $0x6e697265,0x65(%esi),%ebp
  4d:	6e 
  4e:	67 2f                	addr32 (bad) 
  50:	50                   	push   %rax
  51:	72 6f                	jb     c2 <_$ADD$_Ld1-0x49>
  53:	67 72 61             	addr32 jb b7 <_$ADD$_Ld1-0x54>
  56:	6d                   	insl   (%dx),%es:(%rdi)
  57:	6d                   	insl   (%dx),%es:(%rdi)
  58:	69 6e 67 2f 44 69 73 	imul   $0x7369442f,0x67(%rsi),%ebp
  5f:	61                   	(bad)  
  60:	73 73                	jae    d5 <_$ADD$_Ld1-0x36>
  62:	65 6d                	gs insl (%dx),%es:(%rdi)
  64:	62                   	(bad)  
  65:	6c                   	insb   (%dx),%es:(%rdi)
  66:	69 6e 67 2d 42 69 6e 	imul   $0x6e69422d,0x67(%rsi),%ebp
  6d:	61                   	(bad)  
  6e:	72 69                	jb     d9 <_$ADD$_Ld1-0x32>
  70:	65 73 2f             	gs jae a2 <_$ADD$_Ld1-0x69>
  73:	50                   	push   %rax
  74:	61                   	(bad)  
  75:	73 63                	jae    da <_$ADD$_Ld1-0x31>
  77:	61                   	(bad)  
  78:	6c                   	insb   (%dx),%es:(%rdi)
  79:	2f                   	(bad)  
  7a:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
  7c:	74 65                	je     e3 <_$ADD$_Ld1-0x28>
  7e:	6c                   	insb   (%dx),%es:(%rdi)
  7f:	5f                   	pop    %rdi
  80:	41 72 63             	rex.B jb e6 <_$ADD$_Ld1-0x25>
  83:	68 69 74 65 63       	pushq  $0x63657469
  88:	74 75                	je     ff <_$ADD$_Ld1-0xc>
  8a:	72 65                	jb     f1 <_$ADD$_Ld1-0x1a>
  8c:	2f                   	(bad)  
  8d:	41                   	rex.B
  8e:	4d                   	rex.WRB
  8f:	44                   	rex.R
  90:	36 34 2f             	ss xor $0x2f,%al
  93:	41                   	rex.B
  94:	64 64 5f             	fs fs pop %rdi
  97:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
  99:	74 2f                	je     ca <_$ADD$_Ld1-0x41>
  9b:	00 09                	add    %cl,(%rcx)
  9d:	03 00                	add    (%rax),%eax
	...
  af:	00 00                	add    %al,(%rax)
  b1:	00 02                	add    %al,(%rdx)
  b3:	41 00 09             	add    %cl,(%r9)
  b6:	03 00                	add    (%rax),%eax
	...
  c4:	00 00                	add    %al,(%rax)
  c6:	00 02                	add    %al,(%rdx)
  c8:	42 00 09             	rex.X add %cl,(%rcx)
  cb:	03 00                	add    (%rax),%eax
	...
  d9:	00 00                	add    %al,(%rax)
  db:	00 02                	add    %al,(%rdx)
  dd:	43 00 09             	rex.XB add %cl,(%r9)
  e0:	03 00                	add    (%rax),%eax
	...
  ee:	00 00                	add    %al,(%rax)
  f0:	00 03                	add    %al,(%rbx)
  f2:	6d                   	insl   (%dx),%es:(%rdi)
  f3:	61                   	(bad)  
  f4:	69 6e 00 01 41 01 00 	imul   $0x14101,0x0(%rsi),%ebp
	...

000000000000010b <_$ADD$_Ld1>:
 10b:	04 53                	add    $0x53,%al
 10d:	4d                   	rex.WRB
 10e:	41                   	rex.B
 10f:	4c                   	rex.WR
 110:	4c                   	rex.WR
 111:	49                   	rex.WB
 112:	4e 54                	rex.WRX push %rsp
	...
 11c:	00 05 53 4d 41 4c    	add    %al,0x4c414d53(%rip)        # 4c414e75 <_$ADD$_Ld2+0x4c414d4c>
 122:	4c                   	rex.WR
 123:	49                   	rex.WB
 124:	4e 54                	rex.WRX push %rsp
 126:	00 05 02 06 00 00    	add    %al,0x602(%rip)        # 72e <_$ADD$_Ld2+0x605>

0000000000000129 <_$ADD$_Ld2>:
 129:	06                   	(bad)  
	...

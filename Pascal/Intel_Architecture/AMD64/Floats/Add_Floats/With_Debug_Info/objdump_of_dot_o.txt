
add_floats.o:     file format elf64-x86-64
add_floats.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000000  0000000000000000  0000000000000000  00000040  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_line   0000005c  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  2 .debug_abbrev 0000004d  0000000000000000  0000000000000000  0000009c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .text.b_DEBUGSTART_$P$ADD_FLOATS 00000000  0000000000000000  0000000000000000  000000f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.n_main  00000060  0000000000000000  0000000000000000  000000f0  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .fpc.n_links  00000010  0000000000000000  0000000000000000  00000150  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  6 .bss.n_u_$p$add_floats_$$_a 00000008  0000000000000000  0000000000000000  00000160  2**4
                  ALLOC
  7 .bss.n_u_$p$add_floats_$$_b 00000008  0000000000000000  0000000000000000  00000160  2**4
                  ALLOC
  8 .bss.n_u_$p$add_floats_$$_c 00000008  0000000000000000  0000000000000000  00000160  2**4
                  ALLOC
  9 .data.n_INITFINAL 00000020  0000000000000000  0000000000000000  00000160  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 10 .data.n_FPC_THREADVARTABLES 00000010  0000000000000000  0000000000000000  00000180  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 11 .data.n_FPC_RESOURCESTRINGTABLES 00000010  0000000000000000  0000000000000000  00000190  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data.n_FPC_WIDEINITTABLES 00000010  0000000000000000  0000000000000000  000001a0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 13 .data.n_FPC_RESSTRINITTABLES 00000010  0000000000000000  0000000000000000  000001b0  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 14 .fpc.n_version 00000038  0000000000000000  0000000000000000  000001c0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 15 .data.n___stklen 00000010  0000000000000000  0000000000000000  00000200  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 16 .data.n___heapsize 00000010  0000000000000000  0000000000000000  00000210  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 17 .data.n___fpc_valgrind 00000010  0000000000000000  0000000000000000  00000220  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 18 .data.n_FPC_RESLOCATION 00000010  0000000000000000  0000000000000000  00000230  2**4
                  CONTENTS, ALLOC, LOAD, DATA
 19 .rodata.n__$ADD_FLOATS$_Ld1 00000008  0000000000000000  0000000000000000  00000240  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 .rodata.n__$ADD_FLOATS$_Ld2 00000008  0000000000000000  0000000000000000  00000248  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 .debug_frame  00000048  0000000000000000  0000000000000000  00000250  2**3
                  CONTENTS, RELOC, READONLY, DEBUGGING
 22 .debug_info   00000154  0000000000000000  0000000000000000  00000298  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 23 .text.z_DEBUGEND_$P$ADD_FLOATS 00000000  0000000000000000  0000000000000000  000003f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00000e1d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 add_floats.pp
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .text.b_DEBUGSTART_$P$ADD_FLOATS	0000000000000000 .text.b_DEBUGSTART_$P$ADD_FLOATS
0000000000000000 l    d  .text.n_main	0000000000000000 .text.n_main
0000000000000000 l    d  .fpc.n_links	0000000000000000 .fpc.n_links
0000000000000000 l    d  .bss.n_u_$p$add_floats_$$_a	0000000000000000 .bss.n_u_$p$add_floats_$$_a
0000000000000000 l    d  .bss.n_u_$p$add_floats_$$_b	0000000000000000 .bss.n_u_$p$add_floats_$$_b
0000000000000000 l    d  .bss.n_u_$p$add_floats_$$_c	0000000000000000 .bss.n_u_$p$add_floats_$$_c
0000000000000000 l    d  .data.n_INITFINAL	0000000000000000 .data.n_INITFINAL
0000000000000000 l    d  .data.n_FPC_THREADVARTABLES	0000000000000000 .data.n_FPC_THREADVARTABLES
0000000000000000 l    d  .data.n_FPC_RESOURCESTRINGTABLES	0000000000000000 .data.n_FPC_RESOURCESTRINGTABLES
0000000000000000 l    d  .data.n_FPC_WIDEINITTABLES	0000000000000000 .data.n_FPC_WIDEINITTABLES
0000000000000000 l    d  .data.n_FPC_RESSTRINITTABLES	0000000000000000 .data.n_FPC_RESSTRINITTABLES
0000000000000000 l    d  .fpc.n_version	0000000000000000 .fpc.n_version
0000000000000000 l    d  .data.n___stklen	0000000000000000 .data.n___stklen
0000000000000000 l    d  .data.n___heapsize	0000000000000000 .data.n___heapsize
0000000000000000 l    d  .data.n___fpc_valgrind	0000000000000000 .data.n___fpc_valgrind
0000000000000000 l    d  .data.n_FPC_RESLOCATION	0000000000000000 .data.n_FPC_RESLOCATION
0000000000000000 l    d  .rodata.n__$ADD_FLOATS$_Ld1	0000000000000000 .rodata.n__$ADD_FLOATS$_Ld1
0000000000000000 l    d  .rodata.n__$ADD_FLOATS$_Ld2	0000000000000000 .rodata.n__$ADD_FLOATS$_Ld2
0000000000000000 l    d  .debug_frame	0000000000000000 .debug_frame
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .text.z_DEBUGEND_$P$ADD_FLOATS	0000000000000000 .text.z_DEBUGEND_$P$ADD_FLOATS
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l     O .debug_line	0000000000000000 .Ldebug_linesection0
0000000000000000 l     O .debug_line	0000000000000000 .Ldebug_line0
0000000000000000 l     O .debug_abbrev	0000000000000000 .Ldebug_abbrevsection0
0000000000000000 l     O .debug_abbrev	0000000000000000 .Ldebug_abbrev0
0000000000000000 l     O .bss.n_u_$p$add_floats_$$_a	0000000000000008 U_$P$ADD_FLOATS_$$_A
0000000000000000 l     O .bss.n_u_$p$add_floats_$$_b	0000000000000008 U_$P$ADD_FLOATS_$$_B
0000000000000000 l     O .bss.n_u_$p$add_floats_$$_c	0000000000000008 U_$P$ADD_FLOATS_$$_C
0000000000000000 l     O .debug_info	0000000000000000 .Ldebug_info0
0000000000000142 l       .debug_info	0000000000000000 .La1
0000000000000154 l     O .debug_info	0000000000000000 .Ledebug_info0
000000000000002e l     O .debug_line	0000000000000000 .Lehdebug_line0
000000000000005c l     O .debug_line	0000000000000000 .Ledebug_line0
0000000000000000 g     O .text.b_DEBUGSTART_$P$ADD_FLOATS	0000000000000000 DEBUGSTART_$P$ADD_FLOATS
0000000000000000 g     F .text.n_main	0000000000000000 PASCALMAIN
0000000000000000 g     F .text.n_main	0000000000000058 main
0000000000000000 g     O .text.z_DEBUGEND_$P$ADD_FLOATS	0000000000000000 DEBUGEND_$P$ADD_FLOATS
0000000000000000 g     O .data.n_INITFINAL	0000000000000020 INITFINAL
0000000000000000         *UND*	0000000000000000 INIT$_$SYSTEM
0000000000000000 g     O .data.n_FPC_THREADVARTABLES	000000000000000c FPC_THREADVARTABLES
0000000000000000         *UND*	0000000000000000 THREADVARLIST_$SYSTEM
0000000000000000 g     O .data.n_FPC_RESOURCESTRINGTABLES	0000000000000008 FPC_RESOURCESTRINGTABLES
0000000000000000 g     O .data.n_FPC_WIDEINITTABLES	0000000000000008 FPC_WIDEINITTABLES
0000000000000000 g     O .data.n_FPC_RESSTRINITTABLES	0000000000000008 FPC_RESSTRINITTABLES
0000000000000000 g     O .data.n___stklen	0000000000000000 __stklen
0000000000000000 g     O .data.n___heapsize	0000000000000000 __heapsize
0000000000000000 g     O .data.n___fpc_valgrind	0000000000000000 __fpc_valgrind
0000000000000000 g     O .data.n_FPC_RESLOCATION	0000000000000000 FPC_RESLOCATION
0000000000000000 g     O .rodata.n__$ADD_FLOATS$_Ld1	0000000000000000 _$ADD_FLOATS$_Ld1
0000000000000000 g     O .rodata.n__$ADD_FLOATS$_Ld2	0000000000000000 _$ADD_FLOATS$_Ld2
0000000000000134 g     O .debug_info	0000000000000000 _$ADD_FLOATS$_Ld3
000000000000014a g     O .debug_info	0000000000000000 _$ADD_FLOATS$_Ld4
0000000000000000         *UND*	0000000000000000 FPC_INITIALIZEUNITS
0000000000000000         *UND*	0000000000000000 FPC_DO_EXIT


Contents of section .debug_line:
 0000 58000000 02002400 00000101 01ff0d00  X.....$.........
 0010 01010101 00000001 00000100 6164645f  ............add_
 0020 666c6f61 74732e70 70000000 00000009  floats.pp.......
 0030 02000000 00000000 00050111 020e0502  ................
 0040 0e02140d 02140509 0d021b05 010d0009  ................
 0050 02000000 00000000 00000101           ............    
Contents of section .debug_abbrev:
 0000 01110103 0825081b 08130b42 0b100611  .....%.....B....
 0010 01120100 00023400 0308020a 49100000  ......4.....I...
 0020 032e0103 08270c36 0b3f0c11 01120100  .....'.6.?......
 0030 00041600 03084910 00000524 0003083e  ......I....$...>
 0040 0b0b0b00 00061000 49100000 00        ........I....   
Contents of section .text.n_main:
 0000 554889e5 488d6424 f0e80000 000048a1  UH..H.d$......H.
 0010 00000000 00000000 48a30000 00000000  ........H.......
 0020 000048a1 00000000 00000000 48a30000  ..H.........H...
 0030 00000000 0000f20f 10042500 000000f2  ..........%.....
 0040 0f580425 00000000 f20f1104 25000000  .X.%........%...
 0050 00e80000 0000c9c3 00000000 00000000  ................
Contents of section .fpc.n_links:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .data.n_INITFINAL:
 0000 01000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................
Contents of section .data.n_FPC_THREADVARTABLES:
 0000 01000000 00000000 00000000 00000000  ................
Contents of section .data.n_FPC_RESOURCESTRINGTABLES:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .data.n_FPC_WIDEINITTABLES:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .data.n_FPC_RESSTRINITTABLES:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .fpc.n_version:
 0000 46504320 332e302e 342b6466 73672d31  FPC 3.0.4+dfsg-1
 0010 38756275 6e747532 205b3230 31382f30  8ubuntu2 [2018/0
 0020 382f3239 5d20666f 72207838 365f3634  8/29] for x86_64
 0030 202d204c 696e7578                     - Linux        
Contents of section .data.n___stklen:
 0000 00008000 00000000 00000000 00000000  ................
Contents of section .data.n___heapsize:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .data.n___fpc_valgrind:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .data.n_FPC_RESLOCATION:
 0000 00000000 00000000 00000000 00000000  ................
Contents of section .rodata.n__$ADD_FLOATS$_Ld1:
 0000 66666666 66660a40                    ffffff.@        
Contents of section .rodata.n__$ADD_FLOATS$_Ld2:
 0000 66666666 66661640                    ffffff.@        
Contents of section .debug_frame:
 0000 10000000 ffffffff 0100017c 100c0708  ...........|....
 0010 05100200 30000000 00000000 00000000  ....0...........
 0020 00000000 00000000 58000000 00000000  ........X.......
 0030 04010000 000e1004 00000000 05060404  ................
 0040 03000000 0d060000                    ........        
Contents of section .debug_info:
 0000 50010000 02000000 00000801 6164645f  P...........add_
 0010 666c6f61 74732e70 70004672 65652050  floats.pp.Free P
 0020 61736361 6c20332e 302e342b 64667367  ascal 3.0.4+dfsg
 0030 2d313875 62756e74 75322032 3031382f  -18ubuntu2 2018/
 0040 30382f32 39002f68 6f6d652f 7562756e  08/29./home/ubun
 0050 74752f45 6e67696e 65657269 6e672f50  tu/Engineering/P
 0060 726f6772 616d6d69 6e672f44 69736173  rogramming/Disas
 0070 73656d62 6c696e67 2d42696e 61726965  sembling-Binarie
 0080 732f5061 7363616c 2f496e74 656c5f41  s/Pascal/Intel_A
 0090 72636869 74656374 7572652f 414d4436  rchitecture/AMD6
 00a0 342f466c 6f617473 2f416464 5f466c6f  4/Floats/Add_Flo
 00b0 6174732f 57697468 5f446562 75675f49  ats/With_Debug_I
 00c0 6e666f2f 00090300 00000000 00000000  nfo/............
 00d0 00000000 00000000 00000002 41000903  ............A...
 00e0 00000000 00000000 00000000 00000000  ................
 00f0 02420009 03000000 00000000 00000000  .B..............
 0100 00000000 00024300 09030000 00000000  ......C.........
 0110 00000000 00000000 0000036d 61696e00  ...........main.
 0120 01410100 00000000 00000000 00000000  .A..............
 0130 00000000 04524541 4c000000 00000000  .....REAL.......
 0140 00000552 45414c00 04080600 00000000  ...REAL.........
 0150 00000000                             ....            

Disassembly of section .debug_line:

0000000000000000 <.Ldebug_line0>:
   0:	58                   	pop    rax
PROGRAM add_floats;

VAR
	a, b, c : REAL;

BEGIN
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
   8:	00 00                	add    BYTE PTR [rax],al
   a:	01 01                	add    DWORD PTR [rcx],eax
   c:	01 ff                	add    edi,edi

	a := 3.3;
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
  1e:	64 5f                	fs pop rdi
  20:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
	b := 5.6;
  22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  23:	61                   	(bad)  
  24:	74 73                	je     99 <.Ledebug_line0+0x3d>
  26:	2e 70 70             	cs jo  99 <.Ledebug_line0+0x3d>
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 00                	add    BYTE PTR [rax],al
	...

000000000000002e <.Lehdebug_line0>:
  2e:	00 09                	add    BYTE PTR [rcx],cl
  30:	02 00                	add    al,BYTE PTR [rax]
			31: R_X86_64_64	.text.n_main
  32:	00 00                	add    BYTE PTR [rax],al
  34:	00 00                	add    BYTE PTR [rax],al
	c := a + b;
  36:	00 00                	add    BYTE PTR [rax],al
  38:	00 05 01 11 02 0e    	add    BYTE PTR [rip+0xe021101],al        # e02113f <.Ledebug_info0+0xe020feb>
  3e:	05 02 0e 02 14       	add    eax,0x14020e02
  43:	0d 02 14 05 09       	or     eax,0x9051402
  48:	0d 02 1b 05 01       	or     eax,0x1051b02
  4d:	0d 00 09 02 00       	or     eax,0x20900
			51: R_X86_64_64	.text.n_main+0x58
	...
  5a:	01 01                	add    DWORD PTR [rcx],eax

Disassembly of section .debug_abbrev:

0000000000000000 <.Ldebug_abbrev0>:
   0:	01 11                	add    DWORD PTR [rcx],edx
BEGIN
   2:	01 03                	add    DWORD PTR [rbx],eax
   4:	08 25 08 1b 08 13    	or     BYTE PTR [rip+0x13081b08],ah        # 13081b12 <.Ledebug_info0+0x130819be>
   a:	0b 42 0b             	or     eax,DWORD PTR [rdx+0xb]
   d:	10 06                	adc    BYTE PTR [rsi],al
	a := 3.3;
   f:	11 01                	adc    DWORD PTR [rcx],eax
  11:	12 01                	adc    al,BYTE PTR [rcx]
  13:	00 00                	add    BYTE PTR [rax],al
  15:	02 34 00             	add    dh,BYTE PTR [rax+rax*1]
  18:	03 08                	add    ecx,DWORD PTR [rax]
  1a:	02 0a                	add    cl,BYTE PTR [rdx]
  1c:	49 10 00             	rex.WB adc BYTE PTR [r8],al
  1f:	00 03                	add    BYTE PTR [rbx],al
  21:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
	b := 5.6;
  24:	08 27                	or     BYTE PTR [rdi],ah
  26:	0c 36                	or     al,0x36
  28:	0b 3f                	or     edi,DWORD PTR [rdi]
  2a:	0c 11                	or     al,0x11
  2c:	01 12                	add    DWORD PTR [rdx],edx
  2e:	01 00                	add    DWORD PTR [rax],eax
  30:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
  33:	00 03                	add    BYTE PTR [rbx],al
  35:	08 49 10             	or     BYTE PTR [rcx+0x10],cl
	c := a + b;
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	05 24 00 03 08       	add    eax,0x8030024
  3f:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
  42:	0b 00                	or     eax,DWORD PTR [rax]
  44:	00 06                	add    BYTE PTR [rsi],al
  46:	10 00                	adc    BYTE PTR [rax],al
  48:	49 10 00             	rex.WB adc BYTE PTR [r8],al
	...

Disassembly of section .text.n_main:

0000000000000000 <main>:
BEGIN
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 8d 64 24 f0       	lea    rsp,[rsp-0x10]
   9:	e8 00 00 00 00       	call   e <main+0xe>
			a: R_X86_64_PC32	FPC_INITIALIZEUNITS-0x4
	a := 3.3;
   e:	48 a1 00 00 00 00 00 	movabs rax,ds:0x0
  15:	00 00 00 
			10: R_X86_64_64	_$ADD_FLOATS$_Ld1
  18:	48 a3 00 00 00 00 00 	movabs ds:0x0,rax
  1f:	00 00 00 
			1a: R_X86_64_64	.bss.n_u_$p$add_floats_$$_a
	b := 5.6;
  22:	48 a1 00 00 00 00 00 	movabs rax,ds:0x0
  29:	00 00 00 
			24: R_X86_64_64	_$ADD_FLOATS$_Ld2
  2c:	48 a3 00 00 00 00 00 	movabs ds:0x0,rax
  33:	00 00 00 
			2e: R_X86_64_64	.bss.n_u_$p$add_floats_$$_b
	c := a + b;
  36:	f2 0f 10 04 25 00 00 	movsd  xmm0,QWORD PTR ds:0x0
  3d:	00 00 
			3b: R_X86_64_32S	.bss.n_u_$p$add_floats_$$_a
  3f:	f2 0f 58 04 25 00 00 	addsd  xmm0,QWORD PTR ds:0x0
  46:	00 00 
			44: R_X86_64_32S	.bss.n_u_$p$add_floats_$$_b
  48:	f2 0f 11 04 25 00 00 	movsd  QWORD PTR ds:0x0,xmm0
  4f:	00 00 
			4d: R_X86_64_32S	.bss.n_u_$p$add_floats_$$_c
END.
  51:	e8 00 00 00 00       	call   56 <main+0x56>
			52: R_X86_64_PC32	FPC_DO_EXIT-0x4
  56:	c9                   	leave  
  57:	c3                   	ret    
	...

Disassembly of section .fpc.n_links:

0000000000000000 <.fpc.n_links>:
	...
			0: R_X86_64_64	DEBUGSTART_$P$ADD_FLOATS
			8: R_X86_64_64	DEBUGEND_$P$ADD_FLOATS

Disassembly of section .bss.n_u_$p$add_floats_$$_a:

0000000000000000 <U_$P$ADD_FLOATS_$$_A>:
	...

Disassembly of section .bss.n_u_$p$add_floats_$$_b:

0000000000000000 <U_$P$ADD_FLOATS_$$_B>:
	...

Disassembly of section .bss.n_u_$p$add_floats_$$_c:

0000000000000000 <U_$P$ADD_FLOATS_$$_C>:
	...

Disassembly of section .data.n_INITFINAL:

0000000000000000 <INITFINAL>:
   0:	01 00                	add    DWORD PTR [rax],eax
	...
			10: R_X86_64_64	INIT$_$SYSTEM

Disassembly of section .data.n_FPC_THREADVARTABLES:

0000000000000000 <FPC_THREADVARTABLES>:
   0:	01 00                	add    DWORD PTR [rax],eax
	...
			4: R_X86_64_64	THREADVARLIST_$SYSTEM

Disassembly of section .data.n_FPC_RESOURCESTRINGTABLES:

0000000000000000 <FPC_RESOURCESTRINGTABLES>:
	...

Disassembly of section .data.n_FPC_WIDEINITTABLES:

0000000000000000 <FPC_WIDEINITTABLES>:
	...

Disassembly of section .data.n_FPC_RESSTRINITTABLES:

0000000000000000 <FPC_RESSTRINITTABLES>:
	...

Disassembly of section .fpc.n_version:

0000000000000000 <.fpc.n_version>:
   0:	46 50                	rex.RX push rax
   2:	43 20 33             	rex.XB and BYTE PTR [r11],sil
   5:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
   8:	34 2b                	xor    al,0x2b
   a:	64 66 73 67          	fs data16 jae 75 <.Ledebug_line0+0x19>
   e:	2d 31 38 75 62       	sub    eax,0x62753831
  13:	75 6e                	jne    83 <.Ledebug_line0+0x27>
  15:	74 75                	je     8c <.Ledebug_line0+0x30>
  17:	32 20                	xor    ah,BYTE PTR [rax]
  19:	5b                   	pop    rbx
  1a:	32 30                	xor    dh,BYTE PTR [rax]
  1c:	31 38                	xor    DWORD PTR [rax],edi
  1e:	2f                   	(bad)  
  1f:	30 38                	xor    BYTE PTR [rax],bh
  21:	2f                   	(bad)  
  22:	32 39                	xor    bh,BYTE PTR [rcx]
  24:	5d                   	pop    rbp
  25:	20 66 6f             	and    BYTE PTR [rsi+0x6f],ah
  28:	72 20                	jb     4a <.Lehdebug_line0+0x1c>
  2a:	78 38                	js     64 <.Ledebug_line0+0x8>
  2c:	36 5f                	ss pop rdi
  2e:	36 34 20             	ss xor al,0x20
  31:	2d 20 4c 69 6e       	sub    eax,0x6e694c20
  36:	75 78                	jne    b0 <.Ledebug_line0+0x54>

Disassembly of section .data.n___stklen:

0000000000000000 <__stklen>:
   0:	00 00                	add    BYTE PTR [rax],al
   2:	80 00 00             	add    BYTE PTR [rax],0x0
	...

Disassembly of section .data.n___heapsize:

0000000000000000 <__heapsize>:
	...

Disassembly of section .data.n___fpc_valgrind:

0000000000000000 <__fpc_valgrind>:
	...

Disassembly of section .data.n_FPC_RESLOCATION:

0000000000000000 <FPC_RESLOCATION>:
	...

Disassembly of section .rodata.n__$ADD_FLOATS$_Ld1:

0000000000000000 <_$ADD_FLOATS$_Ld1>:
   0:	66                   	data16
   1:	66                   	data16
   2:	66                   	data16
   3:	66                   	data16
   4:	66                   	data16
   5:	66                   	data16
   6:	0a                   	.byte 0xa
   7:	40                   	rex

Disassembly of section .rodata.n__$ADD_FLOATS$_Ld2:

0000000000000000 <_$ADD_FLOATS$_Ld2>:
   0:	66 66 66 66 66 66 16 	data16 data16 data16 data16 data16 data16 (bad) 
   7:	40                   	rex

Disassembly of section .debug_frame:

0000000000000000 <.debug_frame>:
BEGIN
   0:	10 00                	adc    BYTE PTR [rax],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	inc    DWORD PTR [rcx]
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	7c 10                	jl     1d <.debug_frame+0x1d>
   d:	0c 07                	or     al,0x7
	a := 3.3;
   f:	08 05 10 02 00 30    	or     BYTE PTR [rip+0x30000210],al        # 30000225 <.Ledebug_info0+0x300000d1>
	...
			18: R_X86_64_64	.debug_frame
			20: R_X86_64_64	.text.n_main
	b := 5.6;
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 58 00             	add    BYTE PTR [rax+0x0],bl
  2a:	00 00                	add    BYTE PTR [rax],al
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	04 01                	add    al,0x1
  32:	00 00                	add    BYTE PTR [rax],al
  34:	00 0e                	add    BYTE PTR [rsi],cl
	c := a + b;
  36:	10 04 00             	adc    BYTE PTR [rax+rax*1],al
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	00 05 06 04 04 03    	add    BYTE PTR [rip+0x3040406],al        # 3040447 <.Ledebug_info0+0x30402f3>
  41:	00 00                	add    BYTE PTR [rax],al
  43:	00                   	.byte 0x0
  44:	0d                   	.byte 0xd
  45:	06                   	(bad)  
	...

Disassembly of section .debug_info:

0000000000000000 <.Ldebug_info0>:
   0:	50                   	push   rax
BEGIN
   1:	01 00                	add    DWORD PTR [rax],eax
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_abbrev
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 08                	add    BYTE PTR [rax],cl
   b:	01 61 64             	add    DWORD PTR [rcx+0x64],esp
	a := 3.3;
   e:	64 5f                	fs pop rdi
  10:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  13:	61                   	(bad)  
  14:	74 73                	je     89 <.Ldebug_info0+0x89>
  16:	2e 70 70             	cs jo  89 <.Ldebug_info0+0x89>
  19:	00 46 72             	add    BYTE PTR [rsi+0x72],al
  1c:	65 65 20 50 61       	gs and BYTE PTR gs:[rax+0x61],dl
  21:	73 63                	jae    86 <.Ldebug_info0+0x86>
	b := 5.6;
  23:	61                   	(bad)  
  24:	6c                   	ins    BYTE PTR es:[rdi],dx
  25:	20 33                	and    BYTE PTR [rbx],dh
  27:	2e 30 2e             	xor    BYTE PTR cs:[rsi],ch
  2a:	34 2b                	xor    al,0x2b
  2c:	64 66 73 67          	fs data16 jae 97 <.Ldebug_info0+0x97>
  30:	2d 31 38 75 62       	sub    eax,0x62753831
  35:	75 6e                	jne    a5 <.Ldebug_info0+0xa5>
	c := a + b;
  37:	74 75                	je     ae <.Ldebug_info0+0xae>
  39:	32 20                	xor    ah,BYTE PTR [rax]
  3b:	32 30                	xor    dh,BYTE PTR [rax]
  3d:	31 38                	xor    DWORD PTR [rax],edi
  3f:	2f                   	(bad)  
  40:	30 38                	xor    BYTE PTR [rax],bh
  42:	2f                   	(bad)  
  43:	32 39                	xor    bh,BYTE PTR [rcx]
  45:	00 2f                	add    BYTE PTR [rdi],ch
  47:	68 6f 6d 65 2f       	push   0x2f656d6f
  4c:	75 62                	jne    b0 <.Ldebug_info0+0xb0>
  4e:	75 6e                	jne    be <.Ldebug_info0+0xbe>
  50:	74 75                	je     c7 <.Ldebug_info0+0xc7>
END.
  52:	2f                   	(bad)  
  53:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  55:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  5c:	6e 
  5d:	67 2f                	addr32 (bad) 
  5f:	50                   	push   rax
  60:	72 6f                	jb     d1 <.Ldebug_info0+0xd1>
  62:	67 72 61             	addr32 jb c6 <.Ldebug_info0+0xc6>
  65:	6d                   	ins    DWORD PTR es:[rdi],dx
  66:	6d                   	ins    DWORD PTR es:[rdi],dx
  67:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
  6e:	61                   	(bad)  
  6f:	73 73                	jae    e4 <.Ldebug_info0+0xe4>
  71:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  73:	62                   	(bad)  
  74:	6c                   	ins    BYTE PTR es:[rdi],dx
  75:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
  7c:	61                   	(bad)  
  7d:	72 69                	jb     e8 <.Ldebug_info0+0xe8>
  7f:	65 73 2f             	gs jae b1 <.Ldebug_info0+0xb1>
  82:	50                   	push   rax
  83:	61                   	(bad)  
  84:	73 63                	jae    e9 <.Ldebug_info0+0xe9>
  86:	61                   	(bad)  
  87:	6c                   	ins    BYTE PTR es:[rdi],dx
  88:	2f                   	(bad)  
  89:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  8b:	74 65                	je     f2 <.Ldebug_info0+0xf2>
  8d:	6c                   	ins    BYTE PTR es:[rdi],dx
  8e:	5f                   	pop    rdi
  8f:	41 72 63             	rex.B jb f5 <.Ldebug_info0+0xf5>
  92:	68 69 74 65 63       	push   0x63657469
  97:	74 75                	je     10e <.Ldebug_info0+0x10e>
  99:	72 65                	jb     100 <.Ldebug_info0+0x100>
  9b:	2f                   	(bad)  
  9c:	41                   	rex.B
  9d:	4d                   	rex.WRB
  9e:	44                   	rex.R
  9f:	36 34 2f             	ss xor al,0x2f
  a2:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
  a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  a5:	61                   	(bad)  
  a6:	74 73                	je     11b <.Ldebug_info0+0x11b>
  a8:	2f                   	(bad)  
  a9:	41                   	rex.B
  aa:	64 64 5f             	fs fs pop rdi
  ad:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
  af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  b0:	61                   	(bad)  
  b1:	74 73                	je     126 <.Ldebug_info0+0x126>
  b3:	2f                   	(bad)  
  b4:	57                   	push   rdi
  b5:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
  bc:	75 
  bd:	67 5f                	addr32 pop rdi
  bf:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  c1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  c3:	2f                   	(bad)  
  c4:	00 09                	add    BYTE PTR [rcx],cl
  c6:	03 00                	add    eax,DWORD PTR [rax]
			c7: R_X86_64_32	.debug_line
	...
			cb: R_X86_64_64	DEBUGSTART_$P$ADD_FLOATS
			d3: R_X86_64_64	DEBUGEND_$P$ADD_FLOATS
  d8:	00 00                	add    BYTE PTR [rax],al
  da:	00 02                	add    BYTE PTR [rdx],al
  dc:	41 00 09             	add    BYTE PTR [r9],cl
  df:	03 00                	add    eax,DWORD PTR [rax]
			e0: R_X86_64_64	.bss.n_u_$p$add_floats_$$_a
	...
			e8: R_X86_64_64	_$ADD_FLOATS$_Ld3
  ed:	00 00                	add    BYTE PTR [rax],al
  ef:	00 02                	add    BYTE PTR [rdx],al
  f1:	42 00 09             	rex.X add BYTE PTR [rcx],cl
  f4:	03 00                	add    eax,DWORD PTR [rax]
			f5: R_X86_64_64	.bss.n_u_$p$add_floats_$$_b
	...
			fd: R_X86_64_64	_$ADD_FLOATS$_Ld3
 102:	00 00                	add    BYTE PTR [rax],al
 104:	00 02                	add    BYTE PTR [rdx],al
 106:	43 00 09             	rex.XB add BYTE PTR [r9],cl
 109:	03 00                	add    eax,DWORD PTR [rax]
			10a: R_X86_64_64	.bss.n_u_$p$add_floats_$$_c
	...
			112: R_X86_64_64	_$ADD_FLOATS$_Ld3
 117:	00 00                	add    BYTE PTR [rax],al
 119:	00 03                	add    BYTE PTR [rbx],al
 11b:	6d                   	ins    DWORD PTR es:[rdi],dx
 11c:	61                   	(bad)  
 11d:	69 6e 00 01 41 01 00 	imul   ebp,DWORD PTR [rsi+0x0],0x14101
			123: R_X86_64_64	main
	...
			12b: R_X86_64_64	.text.n_main+0x58

0000000000000134 <_$ADD_FLOATS$_Ld3>:
 134:	04 52                	add    al,0x52
 136:	45                   	rex.RB
 137:	41                   	rex.B
 138:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
			13a: R_X86_64_64	.debug_info+0x142
 13b:	00 00                	add    BYTE PTR [rax],al
 13d:	00 00                	add    BYTE PTR [rax],al
 13f:	00 00                	add    BYTE PTR [rax],al
	...

0000000000000142 <.La1>:
 142:	05 52 45 41 4c       	add    eax,0x4c414552
 147:	00 04 08             	add    BYTE PTR [rax+rcx*1],al

000000000000014a <_$ADD_FLOATS$_Ld4>:
 14a:	06                   	(bad)  
	...
			14b: R_X86_64_64	_$ADD_FLOATS$_Ld3
Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      88
  DWARF Version:               2
  Prologue Length:             36
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   1
  Line Range:                  255
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table is empty.

 The File Name Table (offset 0x1c):
  Entry	Dir	Time	Size	Name
  1	0	0	0	add_floats.pp

 Line Number Statements:
  [0x0000002e]  Extended opcode 2: set Address to 0x0
  [0x00000039]  Set column to 1
  [0x0000003b]  Special opcode 4: advance Address by 0 to 0x0 and Line by 5 to 6
  [0x0000003c]  Advance PC by 14 to 0xe
  [0x0000003e]  Set column to 2
  [0x00000040]  Special opcode 1: advance Address by 0 to 0xe and Line by 2 to 8
  [0x00000041]  Advance PC by 20 to 0x22
  [0x00000043]  Special opcode 0: advance Address by 0 to 0x22 and Line by 1 to 9
  [0x00000044]  Advance PC by 20 to 0x36
  [0x00000046]  Set column to 9
  [0x00000048]  Special opcode 0: advance Address by 0 to 0x36 and Line by 1 to 10
  [0x00000049]  Advance PC by 27 to 0x51
  [0x0000004b]  Set column to 1
  [0x0000004d]  Special opcode 0: advance Address by 0 to 0x51 and Line by 1 to 11
  [0x0000004e]  Extended opcode 2: set Address to 0x58
  [0x00000059]  Extended opcode 1: End of Sequence


Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_name         DW_FORM_string
    DW_AT_producer     DW_FORM_string
    DW_AT_comp_dir     DW_FORM_string
    DW_AT_language     DW_FORM_data1
    DW_AT_identifier_case DW_FORM_data1
    DW_AT_stmt_list    DW_FORM_data4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_location     DW_FORM_block1
    DW_AT_type         DW_FORM_ref_addr
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_subprogram    [has children]
    DW_AT_name         DW_FORM_string
    DW_AT_prototyped   DW_FORM_flag
    DW_AT_calling_convention DW_FORM_data1
    DW_AT_external     DW_FORM_flag
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_addr
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_type         DW_FORM_ref_addr
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_encoding     DW_FORM_data1
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_reference_type    [no children]
    DW_AT_type         DW_FORM_ref_addr
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_frame section:


00000000 0000000000000010 ffffffff CIE
  Version:               1
  Augmentation:          ""
  Code alignment factor: 1
  Data alignment factor: -4
  Return address column: 16

  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset_extended: r16 (rip) at cfa-8
  DW_CFA_nop

00000014 0000000000000030 00000000 FDE cie=00000000 pc=0000000000000000..0000005800000000
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_advance_loc4: 1 to 0000000000000001
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc4: 0 to 0000000000000001
  DW_CFA_offset_extended: r6 (rbp) at cfa-16
  DW_CFA_advance_loc4: 3 to 0000000000000004
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_nop
  DW_CFA_nop

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0x150 (32-bit)
   Version:       2
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_name        : add_floats.pp
    <1a>   DW_AT_producer    : Free Pascal 3.0.4+dfsg-18ubuntu2 2018/08/29
    <46>   DW_AT_comp_dir    : /home/ubuntu/Engineering/Programming/Disassembling-Binaries/Pascal/Intel_Architecture/AMD64/Floats/Add_Floats/With_Debug_Info/
    <c5>   DW_AT_language    : 9	(ANSI Pascal)
    <c6>   DW_AT_identifier_case: 3	(case_insensitive)
    <c7>   DW_AT_stmt_list   : 0x0
    <cb>   DW_AT_low_pc      : 0x0
    <d3>   DW_AT_high_pc     : 0x0
 <1><db>: Abbrev Number: 2 (DW_TAG_variable)
    <dc>   DW_AT_name        : A
    <de>   DW_AT_location    : 9 byte block: 3 0 0 0 0 0 0 0 0 	(DW_OP_addr: 0)
    <e8>   DW_AT_type        : <0x134>
 <1><f0>: Abbrev Number: 2 (DW_TAG_variable)
    <f1>   DW_AT_name        : B
    <f3>   DW_AT_location    : 9 byte block: 3 0 0 0 0 0 0 0 0 	(DW_OP_addr: 0)
    <fd>   DW_AT_type        : <0x134>
 <1><105>: Abbrev Number: 2 (DW_TAG_variable)
    <106>   DW_AT_name        : C
    <108>   DW_AT_location    : 9 byte block: 3 0 0 0 0 0 0 0 0 	(DW_OP_addr: 0)
    <112>   DW_AT_type        : <0x134>
 <1><11a>: Abbrev Number: 3 (DW_TAG_subprogram)
    <11b>   DW_AT_name        : main
    <120>   DW_AT_prototyped  : 1
    <121>   DW_AT_calling_convention: 65	(Borland fastcall i386)
    <122>   DW_AT_external    : 1
    <123>   DW_AT_low_pc      : 0x0
    <12b>   DW_AT_high_pc     : 0x58
 <2><133>: Abbrev Number: 0
 <1><134>: Abbrev Number: 4 (DW_TAG_typedef)
    <135>   DW_AT_name        : REAL
    <13a>   DW_AT_type        : <0x142>
 <1><142>: Abbrev Number: 5 (DW_TAG_base_type)
    <143>   DW_AT_name        : REAL
    <148>   DW_AT_encoding    : 4	(float)
    <149>   DW_AT_byte_size   : 8
 <1><14a>: Abbrev Number: 6 (DW_TAG_reference_type)
    <14b>   DW_AT_type        : <0x134>
 <1><153>: Abbrev Number: 0


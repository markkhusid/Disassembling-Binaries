
functions_C_i386:     file format elf32-i386
functions_C_i386
architecture: i386, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x000003b0

Program Header:
    PHDR off    0x00000034 vaddr 0x00000034 paddr 0x00000034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r--
  INTERP off    0x00000154 vaddr 0x00000154 paddr 0x00000154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000738 memsz 0x00000738 flags r-x
    LOAD off    0x00000edc vaddr 0x00001edc paddr 0x00001edc align 2**12
         filesz 0x0000012c memsz 0x00000130 flags rw-
 DYNAMIC off    0x00000ee4 vaddr 0x00001ee4 paddr 0x00001ee4 align 2**2
         filesz 0x000000f8 memsz 0x000000f8 flags rw-
    NOTE off    0x00000168 vaddr 0x00000168 paddr 0x00000168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x000005e0 vaddr 0x000005e0 paddr 0x000005e0 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00000edc vaddr 0x00001edc paddr 0x00001edc align 2**0
         filesz 0x00000124 memsz 0x00000124 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000358
  FINI                 0x000005c4
  INIT_ARRAY           0x00001edc
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00001ee0
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x000001ac
  STRTAB               0x0000023c
  SYMTAB               0x000001cc
  STRSZ                0x00000096
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00001fdc
  PLTRELSZ             0x00000008
  PLTREL               0x00000011
  JMPREL               0x00000350
  REL                  0x00000310
  RELSZ                0x00000040
  RELENT               0x00000008
  FLAGS                0x00000008
  FLAGS_1              0x08000001
  VERNEED              0x000002e0
  VERNEEDNUM           0x00000001
  VERSYM               0x000002d2
  RELCOUNT             0x00000004

Version References:
  required from libc.so.6:
    0x0d696910 0x00 03 GLIBC_2.0
    0x09691f73 0x00 02 GLIBC_2.1.3

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  00000154  00000154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00000168  00000168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  00000188  00000188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  000001ac  000001ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000070  000001cc  000001cc  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000096  0000023c  0000023c  0000023c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000e  000002d2  000002d2  000002d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  000002e0  000002e0  000002e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000040  00000310  00000310  00000310  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000008  00000350  00000350  00000350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  00000358  00000358  00000358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  00000380  00000380  00000380  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000010  000003a0  000003a0  000003a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000212  000003b0  000003b0  000003b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  000005c4  000005c4  000005c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000008  000005d8  000005d8  000005d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000044  000005e0  000005e0  000005e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000114  00000624  00000624  00000624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  00001edc  00001edc  00000edc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  00001ee0  00001ee0  00000ee0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000000f8  00001ee4  00001ee4  00000ee4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000024  00001fdc  00001fdc  00000fdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000008  00002000  00002000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000004  00002008  00002008  00001008  2**0
                  ALLOC
 24 .comment      0000002a  00000000  00000000  00001008  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000154 l    d  .interp	00000000              .interp
00000168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
00000188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
000001ac l    d  .gnu.hash	00000000              .gnu.hash
000001cc l    d  .dynsym	00000000              .dynsym
0000023c l    d  .dynstr	00000000              .dynstr
000002d2 l    d  .gnu.version	00000000              .gnu.version
000002e0 l    d  .gnu.version_r	00000000              .gnu.version_r
00000310 l    d  .rel.dyn	00000000              .rel.dyn
00000350 l    d  .rel.plt	00000000              .rel.plt
00000358 l    d  .init	00000000              .init
00000380 l    d  .plt	00000000              .plt
000003a0 l    d  .plt.got	00000000              .plt.got
000003b0 l    d  .text	00000000              .text
000005c4 l    d  .fini	00000000              .fini
000005d8 l    d  .rodata	00000000              .rodata
000005e0 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
00000624 l    d  .eh_frame	00000000              .eh_frame
00001edc l    d  .init_array	00000000              .init_array
00001ee0 l    d  .fini_array	00000000              .fini_array
00001ee4 l    d  .dynamic	00000000              .dynamic
00001fdc l    d  .got	00000000              .got
00002000 l    d  .data	00000000              .data
00002008 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              crtstuff.c
00000400 l     F .text	00000000              deregister_tm_clones
00000440 l     F .text	00000000              register_tm_clones
00000490 l     F .text	00000000              __do_global_dtors_aux
00002008 l     O .bss	00000001              completed.7281
00001ee0 l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
000004e0 l     F .text	00000000              frame_dummy
00001edc l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              functions.c
00000000 l    df *ABS*	00000000              crtstuff.c
00000734 l     O .eh_frame	00000000              __FRAME_END__
00000000 l    df *ABS*	00000000              
00001ee0 l       .init_array	00000000              __init_array_end
00001ee4 l     O .dynamic	00000000              _DYNAMIC
00001edc l       .init_array	00000000              __init_array_start
000005e0 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
00001fdc l     O .got	00000000              _GLOBAL_OFFSET_TABLE_
000005c0 g     F .text	00000002              __libc_csu_fini
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
000003f0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
00002000  w      .data	00000000              data_start
00002008 g       .data	00000000              _edata
000005c4 g     F .fini	00000000              _fini
000004e9 g     F .text	00000000              .hidden __x86.get_pc_thunk.dx
00000000  w    F *UND*	00000000              __cxa_finalize@@GLIBC_2.1.3
00002000 g       .data	00000000              __data_start
00000000  w      *UND*	00000000              __gmon_start__
00002004 g     O .data	00000000              .hidden __dso_handle
00000537 g     F .text	00000017              sum
000005dc g     O .rodata	00000004              _IO_stdin_used
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000560 g     F .text	0000005d              __libc_csu_init
0000200c g       .bss	00000000              _end
000003b0 g     F .text	00000000              _start
000005d8 g     O .rodata	00000004              _fp_hw
00002008 g       .bss	00000000              __bss_start
000004ed g     F .text	0000004a              main
0000054e g     F .text	00000000              .hidden __x86.get_pc_thunk.ax
00002008 g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00000358 g     F .init	00000000              _init


Contents of section .interp:
 0154 2f6c6962 2f6c642d 6c696e75 782e736f  /lib/ld-linux.so
 0164 2e3200                               .2.             
Contents of section .note.ABI-tag:
 0168 04000000 10000000 01000000 474e5500  ............GNU.
 0178 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0188 04000000 14000000 03000000 474e5500  ............GNU.
 0198 10161a6a e89f10be 540e0e92 26ae92c4  ...j....T...&...
 01a8 ccf30433                             ...3            
Contents of section .gnu.hash:
 01ac 02000000 06000000 01000000 05000000  ................
 01bc 00200020 00000000 06000000 ad4be3c0  . . .........K..
Contents of section .dynsym:
 01cc 00000000 00000000 00000000 00000000  ................
 01dc 51000000 00000000 00000000 20000000  Q........... ...
 01ec 1a000000 00000000 00000000 22000000  ............"...
 01fc 6d000000 00000000 00000000 20000000  m........... ...
 020c 29000000 00000000 00000000 12000000  )...............
 021c 7c000000 00000000 00000000 20000000  |........... ...
 022c 0b000000 dc050000 04000000 11001000  ................
Contents of section .dynstr:
 023c 006c6962 632e736f 2e36005f 494f5f73  .libc.so.6._IO_s
 024c 7464696e 5f757365 64005f5f 6378615f  tdin_used.__cxa_
 025c 66696e61 6c697a65 005f5f6c 6962635f  finalize.__libc_
 026c 73746172 745f6d61 696e0047 4c494243  start_main.GLIBC
 027c 5f322e30 00474c49 42435f32 2e312e33  _2.0.GLIBC_2.1.3
 028c 005f4954 4d5f6465 72656769 73746572  ._ITM_deregister
 029c 544d436c 6f6e6554 61626c65 005f5f67  TMCloneTable.__g
 02ac 6d6f6e5f 73746172 745f5f00 5f49544d  mon_start__._ITM
 02bc 5f726567 69737465 72544d43 6c6f6e65  _registerTMClone
 02cc 5461626c 6500                        Table.          
Contents of section .gnu.version:
 02d2 00000000 02000000 03000000 0100      ..............  
Contents of section .gnu.version_r:
 02e0 01000200 01000000 10000000 00000000  ................
 02f0 1069690d 00000300 3b000000 10000000  .ii.....;.......
 0300 731f6909 00000200 45000000 00000000  s.i.....E.......
Contents of section .rel.dyn:
 0310 dc1e0000 08000000 e01e0000 08000000  ................
 0320 f81f0000 08000000 04200000 08000000  ......... ......
 0330 ec1f0000 06010000 f01f0000 06020000  ................
 0340 f41f0000 06030000 fc1f0000 06050000  ................
Contents of section .rel.plt:
 0350 e81f0000 07040000                    ........        
Contents of section .init:
 0358 5383ec08 e88f0000 0081c37b 1c00008b  S..........{....
 0368 83180000 0085c074 05e83200 000083c4  .......t..2.....
 0378 085bc3                               .[.             
Contents of section .plt:
 0380 ffb30400 0000ffa3 08000000 00000000  ................
 0390 ffa30c00 00006800 000000e9 e0ffffff  ......h.........
Contents of section .plt.got:
 03a0 ffa31400 00006690 ffa31800 00006690  ......f.......f.
Contents of section .text:
 03b0 31ed5e89 e183e4f0 505452e8 22000000  1.^.....PTR."...
 03c0 81c31c1c 00008d83 e4e5ffff 508d8384  ............P...
 03d0 e5ffff50 5156ffb3 1c000000 e8afffff  ...PQV..........
 03e0 fff48b1c 24c36690 66906690 66906690  ....$.f.f.f.f.f.
 03f0 8b1c24c3 66906690 66906690 66906690  ..$.f.f.f.f.f.f.
 0400 e8e40000 0081c2d7 1b00008d 8a2c0000  .............,..
 0410 008d822c 00000039 c8741d8b 82100000  ...,...9.t......
 0420 0085c074 135589e5 83ec1451 ffd083c4  ...t.U.....Q....
 0430 10c9c390 8d742600 f3c38db6 00000000  .....t&.........
 0440 e8a40000 0081c297 1b000055 8d8a2c00  ...........U..,.
 0450 00008d82 2c000000 29c889e5 53c1f802  ....,...)...S...
 0460 89c383ec 04c1eb1f 01d8d1f8 74148b92  ............t...
 0470 20000000 85d2740a 83ec0850 51ffd283   .....t....PQ...
 0480 c4108b5d fcc9c389 f68dbc27 00000000  ...].......'....
 0490 5589e553 e857ffff ff81c343 1b000083  U..S.W.....C....
 04a0 ec0480bb 2c000000 0075278b 83140000  ....,....u'.....
 04b0 0085c074 1183ec0c ffb32800 0000e8dd  ...t......(.....
 04c0 feffff83 c410e835 ffffffc6 832c0000  .......5.....,..
 04d0 00018b5d fcc9c389 f68dbc27 00000000  ...].......'....
 04e0 5589e55d e957ffff ff8b1424 c38d4c24  U..].W.....$..L$
 04f0 0483e4f0 ff71fc55 89e55183 ec14e84b  .....q.U..Q....K
 0500 00000005 d91a0000 c745ec03 000000c7  .........E......
 0510 45f00400 000083ec 08ff75f0 ff75ece8  E.........u..u..
 0520 13000000 83c41089 45f4b800 0000008b  ........E.......
 0530 4dfcc98d 61fcc355 89e5e80f 00000005  M...a..U........
 0540 9d1a0000 8b55088b 450c01d0 5dc38b04  .....U..E...]...
 0550 24c36690 66906690 66906690 66906690  $.f.f.f.f.f.f.f.
 0560 55575653 e887feff ff81c373 1a000083  UWVS.......s....
 0570 ec0c8b6c 24288db3 04ffffff e8d7fdff  ...l$(..........
 0580 ff8d8300 ffffff29 c6c1fe02 85f67425  .......)......t%
 0590 31ff8db6 00000000 83ec0455 ff74242c  1..........U.t$,
 05a0 ff74242c ff94bb00 ffffff83 c70183c4  .t$,............
 05b0 1039fe75 e383c40c 5b5e5f5d c38d7600  .9.u....[^_]..v.
 05c0 f3c3                                 ..              
Contents of section .fini:
 05c4 5383ec08 e823feff ff81c30f 1a000083  S....#..........
 05d4 c4085bc3                             ..[.            
Contents of section .rodata:
 05d8 03000000 01000200                    ........        
Contents of section .eh_frame_hdr:
 05e0 011b033b 40000000 07000000 a0fdffff  ...;@...........
 05f0 5c000000 c0fdffff 80000000 0dffffff  \...............
 0600 94000000 57ffffff c0000000 6effffff  ....W.......n...
 0610 e0000000 80ffffff f4000000 e0ffffff  ................
 0620 40010000                             @...            
Contents of section .eh_frame:
 0624 14000000 00000000 017a5200 017c0801  .........zR..|..
 0634 1b0c0404 88010000 20000000 1c000000  ........ .......
 0644 3cfdffff 20000000 000e0846 0e0c4a0f  <... ......F..J.
 0654 0b740478 003f1a3b 2a322422 10000000  .t.x.?.;*2$"....
 0664 40000000 38fdffff 10000000 00000000  @...8...........
 0674 28000000 54000000 71feffff 4a000000  (...T...q...J...
 0684 00440c01 00471005 02750043 0f03757c  .D...G...u.C..u|
 0694 06770c01 0041c543 0c040400 1c000000  .w...A.C........
 06a4 80000000 8ffeffff 17000000 00410e08  .............A..
 06b4 8502420d 0553c50c 04040000 10000000  ..B..S..........
 06c4 a0000000 86feffff 04000000 00000000  ................
 06d4 48000000 b4000000 84feffff 5d000000  H...........]...
 06e4 00410e08 8502410e 0c870341 0e108604  .A....A....A....
 06f4 410e1483 054e0e20 690e2441 0e28440e  A....N. i.$A.(D.
 0704 2c440e30 4d0e2047 0e1441c3 0e1041c6  ,D.0M. G..A...A.
 0714 0e0c41c7 0e0841c5 0e040000 10000000  ..A...A.........
 0724 00010000 98feffff 02000000 00000000  ................
 0734 00000000                             ....            
Contents of section .init_array:
 1edc e0040000                             ....            
Contents of section .fini_array:
 1ee0 90040000                             ....            
Contents of section .dynamic:
 1ee4 01000000 01000000 0c000000 58030000  ............X...
 1ef4 0d000000 c4050000 19000000 dc1e0000  ................
 1f04 1b000000 04000000 1a000000 e01e0000  ................
 1f14 1c000000 04000000 f5feff6f ac010000  ...........o....
 1f24 05000000 3c020000 06000000 cc010000  ....<...........
 1f34 0a000000 96000000 0b000000 10000000  ................
 1f44 15000000 00000000 03000000 dc1f0000  ................
 1f54 02000000 08000000 14000000 11000000  ................
 1f64 17000000 50030000 11000000 10030000  ....P...........
 1f74 12000000 40000000 13000000 08000000  ....@...........
 1f84 1e000000 08000000 fbffff6f 01000008  ...........o....
 1f94 feffff6f e0020000 ffffff6f 01000000  ...o.......o....
 1fa4 f0ffff6f d2020000 faffff6f 04000000  ...o.......o....
 1fb4 00000000 00000000 00000000 00000000  ................
 1fc4 00000000 00000000 00000000 00000000  ................
 1fd4 00000000 00000000                    ........        
Contents of section .got:
 1fdc e41e0000 00000000 00000000 96030000  ................
 1fec 00000000 00000000 00000000 ed040000  ................
 1ffc 00000000                             ....            
Contents of section .data:
 2000 00000000 04200000                    ..... ..        
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      

Disassembly of section .interp:

00000154 <.interp>:
 154:	2f                   	das    
 155:	6c                   	ins    BYTE PTR es:[edi],dx
 156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 15d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

00000168 <.note.ABI-tag>:
 168:	04 00                	add    al,0x0
 16a:	00 00                	add    BYTE PTR [eax],al
 16c:	10 00                	adc    BYTE PTR [eax],al
 16e:	00 00                	add    BYTE PTR [eax],al
 170:	01 00                	add    DWORD PTR [eax],eax
 172:	00 00                	add    BYTE PTR [eax],al
 174:	47                   	inc    edi
 175:	4e                   	dec    esi
 176:	55                   	push   ebp
 177:	00 00                	add    BYTE PTR [eax],al
 179:	00 00                	add    BYTE PTR [eax],al
 17b:	00 03                	add    BYTE PTR [ebx],al
 17d:	00 00                	add    BYTE PTR [eax],al
 17f:	00 02                	add    BYTE PTR [edx],al
 181:	00 00                	add    BYTE PTR [eax],al
 183:	00 00                	add    BYTE PTR [eax],al
 185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

00000188 <.note.gnu.build-id>:
 188:	04 00                	add    al,0x0
 18a:	00 00                	add    BYTE PTR [eax],al
 18c:	14 00                	adc    al,0x0
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	03 00                	add    eax,DWORD PTR [eax]
 192:	00 00                	add    BYTE PTR [eax],al
 194:	47                   	inc    edi
 195:	4e                   	dec    esi
 196:	55                   	push   ebp
 197:	00 10                	add    BYTE PTR [eax],dl
 199:	16                   	push   ss
 19a:	1a 6a e8             	sbb    ch,BYTE PTR [edx-0x18]
 19d:	9f                   	lahf   
 19e:	10 be 54 0e 0e 92    	adc    BYTE PTR [esi-0x6df1f1ac],bh
 1a4:	26 ae                	es scas al,BYTE PTR es:[edi]
 1a6:	92                   	xchg   edx,eax
 1a7:	c4                   	(bad)  
 1a8:	cc                   	int3   
 1a9:	f3 04 33             	repz add al,0x33

Disassembly of section .gnu.hash:

000001ac <.gnu.hash>:
 1ac:	02 00                	add    al,BYTE PTR [eax]
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	06                   	push   es
 1b1:	00 00                	add    BYTE PTR [eax],al
 1b3:	00 01                	add    BYTE PTR [ecx],al
 1b5:	00 00                	add    BYTE PTR [eax],al
 1b7:	00 05 00 00 00 00    	add    BYTE PTR ds:0x0,al
 1bd:	20 00                	and    BYTE PTR [eax],al
 1bf:	20 00                	and    BYTE PTR [eax],al
 1c1:	00 00                	add    BYTE PTR [eax],al
 1c3:	00 06                	add    BYTE PTR [esi],al
 1c5:	00 00                	add    BYTE PTR [eax],al
 1c7:	00                   	.byte 0x0
 1c8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 1c9:	4b                   	dec    ebx
 1ca:	e3 c0                	jecxz  18c <_init-0x1cc>

Disassembly of section .dynsym:

000001cc <.dynsym>:
	...
 1dc:	51                   	push   ecx
	...
 1e5:	00 00                	add    BYTE PTR [eax],al
 1e7:	00 20                	add    BYTE PTR [eax],ah
 1e9:	00 00                	add    BYTE PTR [eax],al
 1eb:	00 1a                	add    BYTE PTR [edx],bl
	...
 1f5:	00 00                	add    BYTE PTR [eax],al
 1f7:	00 22                	add    BYTE PTR [edx],ah
 1f9:	00 00                	add    BYTE PTR [eax],al
 1fb:	00 6d 00             	add    BYTE PTR [ebp+0x0],ch
	...
 206:	00 00                	add    BYTE PTR [eax],al
 208:	20 00                	and    BYTE PTR [eax],al
 20a:	00 00                	add    BYTE PTR [eax],al
 20c:	29 00                	sub    DWORD PTR [eax],eax
	...
 216:	00 00                	add    BYTE PTR [eax],al
 218:	12 00                	adc    al,BYTE PTR [eax]
 21a:	00 00                	add    BYTE PTR [eax],al
 21c:	7c 00                	jl     21e <_init-0x13a>
	...
 226:	00 00                	add    BYTE PTR [eax],al
 228:	20 00                	and    BYTE PTR [eax],al
 22a:	00 00                	add    BYTE PTR [eax],al
 22c:	0b 00                	or     eax,DWORD PTR [eax]
 22e:	00 00                	add    BYTE PTR [eax],al
 230:	dc 05 00 00 04 00    	fadd   QWORD PTR ds:0x40000
 236:	00 00                	add    BYTE PTR [eax],al
 238:	11 00                	adc    DWORD PTR [eax],eax
 23a:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

0000023c <.dynstr>:
 23c:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 240:	63 2e                	arpl   WORD PTR [esi],bp
 242:	73 6f                	jae    2b3 <_init-0xa5>
 244:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 249:	4f                   	dec    edi
 24a:	5f                   	pop    edi
 24b:	73 74                	jae    2c1 <_init-0x97>
 24d:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 254:	64 
 255:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 258:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 25b:	5f                   	pop    edi
 25c:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 262:	7a 65                	jp     2c9 <_init-0x8f>
 264:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 267:	6c                   	ins    BYTE PTR es:[edi],dx
 268:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 26f:	72 74                	jb     2e5 <_init-0x73>
 271:	5f                   	pop    edi
 272:	6d                   	ins    DWORD PTR es:[edi],dx
 273:	61                   	popa   
 274:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [esi+0x0],0x42494c47
 27b:	43                   	inc    ebx
 27c:	5f                   	pop    edi
 27d:	32 2e                	xor    ch,BYTE PTR [esi]
 27f:	30 00                	xor    BYTE PTR [eax],al
 281:	47                   	inc    edi
 282:	4c                   	dec    esp
 283:	49                   	dec    ecx
 284:	42                   	inc    edx
 285:	43                   	inc    ebx
 286:	5f                   	pop    edi
 287:	32 2e                	xor    ch,BYTE PTR [esi]
 289:	31 2e                	xor    DWORD PTR [esi],ebp
 28b:	33 00                	xor    eax,DWORD PTR [eax]
 28d:	5f                   	pop    edi
 28e:	49                   	dec    ecx
 28f:	54                   	push   esp
 290:	4d                   	dec    ebp
 291:	5f                   	pop    edi
 292:	64 65 72 65          	fs gs jb 2fb <_init-0x5d>
 296:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 29d:	4d 
 29e:	43                   	inc    ebx
 29f:	6c                   	ins    BYTE PTR es:[edi],dx
 2a0:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2a1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2a2:	65 54                	gs push esp
 2a4:	61                   	popa   
 2a5:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 2a9:	5f                   	pop    edi
 2aa:	5f                   	pop    edi
 2ab:	67 6d                	ins    DWORD PTR es:[di],dx
 2ad:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2ae:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2af:	5f                   	pop    edi
 2b0:	73 74                	jae    326 <_init-0x32>
 2b2:	61                   	popa   
 2b3:	72 74                	jb     329 <_init-0x2f>
 2b5:	5f                   	pop    edi
 2b6:	5f                   	pop    edi
 2b7:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 2ba:	54                   	push   esp
 2bb:	4d                   	dec    ebp
 2bc:	5f                   	pop    edi
 2bd:	72 65                	jb     324 <_init-0x34>
 2bf:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 2c6:	4d 
 2c7:	43                   	inc    ebx
 2c8:	6c                   	ins    BYTE PTR es:[edi],dx
 2c9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2ca:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2cb:	65 54                	gs push esp
 2cd:	61                   	popa   
 2ce:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]

Disassembly of section .gnu.version:

000002d2 <.gnu.version>:
 2d2:	00 00                	add    BYTE PTR [eax],al
 2d4:	00 00                	add    BYTE PTR [eax],al
 2d6:	02 00                	add    al,BYTE PTR [eax]
 2d8:	00 00                	add    BYTE PTR [eax],al
 2da:	03 00                	add    eax,DWORD PTR [eax]
 2dc:	00 00                	add    BYTE PTR [eax],al
 2de:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

000002e0 <.gnu.version_r>:
 2e0:	01 00                	add    DWORD PTR [eax],eax
 2e2:	02 00                	add    al,BYTE PTR [eax]
 2e4:	01 00                	add    DWORD PTR [eax],eax
 2e6:	00 00                	add    BYTE PTR [eax],al
 2e8:	10 00                	adc    BYTE PTR [eax],al
 2ea:	00 00                	add    BYTE PTR [eax],al
 2ec:	00 00                	add    BYTE PTR [eax],al
 2ee:	00 00                	add    BYTE PTR [eax],al
 2f0:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 2f3:	0d 00 00 03 00       	or     eax,0x30000
 2f8:	3b 00                	cmp    eax,DWORD PTR [eax]
 2fa:	00 00                	add    BYTE PTR [eax],al
 2fc:	10 00                	adc    BYTE PTR [eax],al
 2fe:	00 00                	add    BYTE PTR [eax],al
 300:	73 1f                	jae    321 <_init-0x37>
 302:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [ecx],0x20000
 308:	45                   	inc    ebp
 309:	00 00                	add    BYTE PTR [eax],al
 30b:	00 00                	add    BYTE PTR [eax],al
 30d:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000310 <.rel.dyn>:
 310:	dc 1e                	fcomp  QWORD PTR [esi]
 312:	00 00                	add    BYTE PTR [eax],al
 314:	08 00                	or     BYTE PTR [eax],al
 316:	00 00                	add    BYTE PTR [eax],al
 318:	e0 1e                	loopne 338 <_init-0x20>
 31a:	00 00                	add    BYTE PTR [eax],al
 31c:	08 00                	or     BYTE PTR [eax],al
 31e:	00 00                	add    BYTE PTR [eax],al
 320:	f8                   	clc    
 321:	1f                   	pop    ds
 322:	00 00                	add    BYTE PTR [eax],al
 324:	08 00                	or     BYTE PTR [eax],al
 326:	00 00                	add    BYTE PTR [eax],al
 328:	04 20                	add    al,0x20
 32a:	00 00                	add    BYTE PTR [eax],al
 32c:	08 00                	or     BYTE PTR [eax],al
 32e:	00 00                	add    BYTE PTR [eax],al
 330:	ec                   	in     al,dx
 331:	1f                   	pop    ds
 332:	00 00                	add    BYTE PTR [eax],al
 334:	06                   	push   es
 335:	01 00                	add    DWORD PTR [eax],eax
 337:	00 f0                	add    al,dh
 339:	1f                   	pop    ds
 33a:	00 00                	add    BYTE PTR [eax],al
 33c:	06                   	push   es
 33d:	02 00                	add    al,BYTE PTR [eax]
 33f:	00 f4                	add    ah,dh
 341:	1f                   	pop    ds
 342:	00 00                	add    BYTE PTR [eax],al
 344:	06                   	push   es
 345:	03 00                	add    eax,DWORD PTR [eax]
 347:	00 fc                	add    ah,bh
 349:	1f                   	pop    ds
 34a:	00 00                	add    BYTE PTR [eax],al
 34c:	06                   	push   es
 34d:	05                   	.byte 0x5
	...

Disassembly of section .rel.plt:

00000350 <.rel.plt>:
 350:	e8 1f 00 00 07       	call   7000374 <_end+0x6ffe368>
 355:	04 00                	add    al,0x0
	...

Disassembly of section .init:

00000358 <_init>:
 358:	53                   	push   ebx
 359:	83 ec 08             	sub    esp,0x8
 35c:	e8 8f 00 00 00       	call   3f0 <__x86.get_pc_thunk.bx>
 361:	81 c3 7b 1c 00 00    	add    ebx,0x1c7b
 367:	8b 83 18 00 00 00    	mov    eax,DWORD PTR [ebx+0x18]
 36d:	85 c0                	test   eax,eax
 36f:	74 05                	je     376 <_init+0x1e>
 371:	e8 32 00 00 00       	call   3a8 <__gmon_start__@plt>
 376:	83 c4 08             	add    esp,0x8
 379:	5b                   	pop    ebx
 37a:	c3                   	ret    

Disassembly of section .plt:

00000380 <.plt>:
 380:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 386:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 38c:	00 00                	add    BYTE PTR [eax],al
	...

00000390 <__libc_start_main@plt>:
 390:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 396:	68 00 00 00 00       	push   0x0
 39b:	e9 e0 ff ff ff       	jmp    380 <.plt>

Disassembly of section .plt.got:

000003a0 <__cxa_finalize@plt>:
 3a0:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 3a6:	66 90                	xchg   ax,ax

000003a8 <__gmon_start__@plt>:
 3a8:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
 3ae:	66 90                	xchg   ax,ax

Disassembly of section .text:

000003b0 <_start>:
 3b0:	31 ed                	xor    ebp,ebp
 3b2:	5e                   	pop    esi
 3b3:	89 e1                	mov    ecx,esp
 3b5:	83 e4 f0             	and    esp,0xfffffff0
 3b8:	50                   	push   eax
 3b9:	54                   	push   esp
 3ba:	52                   	push   edx
 3bb:	e8 22 00 00 00       	call   3e2 <_start+0x32>
 3c0:	81 c3 1c 1c 00 00    	add    ebx,0x1c1c
 3c6:	8d 83 e4 e5 ff ff    	lea    eax,[ebx-0x1a1c]
 3cc:	50                   	push   eax
 3cd:	8d 83 84 e5 ff ff    	lea    eax,[ebx-0x1a7c]
 3d3:	50                   	push   eax
 3d4:	51                   	push   ecx
 3d5:	56                   	push   esi
 3d6:	ff b3 1c 00 00 00    	push   DWORD PTR [ebx+0x1c]
 3dc:	e8 af ff ff ff       	call   390 <__libc_start_main@plt>
 3e1:	f4                   	hlt    
 3e2:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3e5:	c3                   	ret    
 3e6:	66 90                	xchg   ax,ax
 3e8:	66 90                	xchg   ax,ax
 3ea:	66 90                	xchg   ax,ax
 3ec:	66 90                	xchg   ax,ax
 3ee:	66 90                	xchg   ax,ax

000003f0 <__x86.get_pc_thunk.bx>:
 3f0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 3f3:	c3                   	ret    
 3f4:	66 90                	xchg   ax,ax
 3f6:	66 90                	xchg   ax,ax
 3f8:	66 90                	xchg   ax,ax
 3fa:	66 90                	xchg   ax,ax
 3fc:	66 90                	xchg   ax,ax
 3fe:	66 90                	xchg   ax,ax

00000400 <deregister_tm_clones>:
 400:	e8 e4 00 00 00       	call   4e9 <__x86.get_pc_thunk.dx>
 405:	81 c2 d7 1b 00 00    	add    edx,0x1bd7
 40b:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
 411:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
 417:	39 c8                	cmp    eax,ecx
 419:	74 1d                	je     438 <deregister_tm_clones+0x38>
 41b:	8b 82 10 00 00 00    	mov    eax,DWORD PTR [edx+0x10]
 421:	85 c0                	test   eax,eax
 423:	74 13                	je     438 <deregister_tm_clones+0x38>
 425:	55                   	push   ebp
 426:	89 e5                	mov    ebp,esp
 428:	83 ec 14             	sub    esp,0x14
 42b:	51                   	push   ecx
 42c:	ff d0                	call   eax
 42e:	83 c4 10             	add    esp,0x10
 431:	c9                   	leave  
 432:	c3                   	ret    
 433:	90                   	nop
 434:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 438:	f3 c3                	repz ret 
 43a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00000440 <register_tm_clones>:
 440:	e8 a4 00 00 00       	call   4e9 <__x86.get_pc_thunk.dx>
 445:	81 c2 97 1b 00 00    	add    edx,0x1b97
 44b:	55                   	push   ebp
 44c:	8d 8a 2c 00 00 00    	lea    ecx,[edx+0x2c]
 452:	8d 82 2c 00 00 00    	lea    eax,[edx+0x2c]
 458:	29 c8                	sub    eax,ecx
 45a:	89 e5                	mov    ebp,esp
 45c:	53                   	push   ebx
 45d:	c1 f8 02             	sar    eax,0x2
 460:	89 c3                	mov    ebx,eax
 462:	83 ec 04             	sub    esp,0x4
 465:	c1 eb 1f             	shr    ebx,0x1f
 468:	01 d8                	add    eax,ebx
 46a:	d1 f8                	sar    eax,1
 46c:	74 14                	je     482 <register_tm_clones+0x42>
 46e:	8b 92 20 00 00 00    	mov    edx,DWORD PTR [edx+0x20]
 474:	85 d2                	test   edx,edx
 476:	74 0a                	je     482 <register_tm_clones+0x42>
 478:	83 ec 08             	sub    esp,0x8
 47b:	50                   	push   eax
 47c:	51                   	push   ecx
 47d:	ff d2                	call   edx
 47f:	83 c4 10             	add    esp,0x10
 482:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 485:	c9                   	leave  
 486:	c3                   	ret    
 487:	89 f6                	mov    esi,esi
 489:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000490 <__do_global_dtors_aux>:
 490:	55                   	push   ebp
 491:	89 e5                	mov    ebp,esp
 493:	53                   	push   ebx
 494:	e8 57 ff ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 499:	81 c3 43 1b 00 00    	add    ebx,0x1b43
 49f:	83 ec 04             	sub    esp,0x4
 4a2:	80 bb 2c 00 00 00 00 	cmp    BYTE PTR [ebx+0x2c],0x0
 4a9:	75 27                	jne    4d2 <__do_global_dtors_aux+0x42>
 4ab:	8b 83 14 00 00 00    	mov    eax,DWORD PTR [ebx+0x14]
 4b1:	85 c0                	test   eax,eax
 4b3:	74 11                	je     4c6 <__do_global_dtors_aux+0x36>
 4b5:	83 ec 0c             	sub    esp,0xc
 4b8:	ff b3 28 00 00 00    	push   DWORD PTR [ebx+0x28]
 4be:	e8 dd fe ff ff       	call   3a0 <__cxa_finalize@plt>
 4c3:	83 c4 10             	add    esp,0x10
 4c6:	e8 35 ff ff ff       	call   400 <deregister_tm_clones>
 4cb:	c6 83 2c 00 00 00 01 	mov    BYTE PTR [ebx+0x2c],0x1
 4d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 4d5:	c9                   	leave  
 4d6:	c3                   	ret    
 4d7:	89 f6                	mov    esi,esi
 4d9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000004e0 <frame_dummy>:
 4e0:	55                   	push   ebp
 4e1:	89 e5                	mov    ebp,esp
 4e3:	5d                   	pop    ebp
 4e4:	e9 57 ff ff ff       	jmp    440 <register_tm_clones>

000004e9 <__x86.get_pc_thunk.dx>:
 4e9:	8b 14 24             	mov    edx,DWORD PTR [esp]
 4ec:	c3                   	ret    

000004ed <main>:
 4ed:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 4f1:	83 e4 f0             	and    esp,0xfffffff0
 4f4:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 4f7:	55                   	push   ebp
 4f8:	89 e5                	mov    ebp,esp
 4fa:	51                   	push   ecx
 4fb:	83 ec 14             	sub    esp,0x14
 4fe:	e8 4b 00 00 00       	call   54e <__x86.get_pc_thunk.ax>
 503:	05 d9 1a 00 00       	add    eax,0x1ad9
 508:	c7 45 ec 03 00 00 00 	mov    DWORD PTR [ebp-0x14],0x3
 50f:	c7 45 f0 04 00 00 00 	mov    DWORD PTR [ebp-0x10],0x4
 516:	83 ec 08             	sub    esp,0x8
 519:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
 51c:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
 51f:	e8 13 00 00 00       	call   537 <sum>
 524:	83 c4 10             	add    esp,0x10
 527:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 52a:	b8 00 00 00 00       	mov    eax,0x0
 52f:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 532:	c9                   	leave  
 533:	8d 61 fc             	lea    esp,[ecx-0x4]
 536:	c3                   	ret    

00000537 <sum>:
 537:	55                   	push   ebp
 538:	89 e5                	mov    ebp,esp
 53a:	e8 0f 00 00 00       	call   54e <__x86.get_pc_thunk.ax>
 53f:	05 9d 1a 00 00       	add    eax,0x1a9d
 544:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
 547:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 54a:	01 d0                	add    eax,edx
 54c:	5d                   	pop    ebp
 54d:	c3                   	ret    

0000054e <__x86.get_pc_thunk.ax>:
 54e:	8b 04 24             	mov    eax,DWORD PTR [esp]
 551:	c3                   	ret    
 552:	66 90                	xchg   ax,ax
 554:	66 90                	xchg   ax,ax
 556:	66 90                	xchg   ax,ax
 558:	66 90                	xchg   ax,ax
 55a:	66 90                	xchg   ax,ax
 55c:	66 90                	xchg   ax,ax
 55e:	66 90                	xchg   ax,ax

00000560 <__libc_csu_init>:
 560:	55                   	push   ebp
 561:	57                   	push   edi
 562:	56                   	push   esi
 563:	53                   	push   ebx
 564:	e8 87 fe ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 569:	81 c3 73 1a 00 00    	add    ebx,0x1a73
 56f:	83 ec 0c             	sub    esp,0xc
 572:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 576:	8d b3 04 ff ff ff    	lea    esi,[ebx-0xfc]
 57c:	e8 d7 fd ff ff       	call   358 <_init>
 581:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 587:	29 c6                	sub    esi,eax
 589:	c1 fe 02             	sar    esi,0x2
 58c:	85 f6                	test   esi,esi
 58e:	74 25                	je     5b5 <__libc_csu_init+0x55>
 590:	31 ff                	xor    edi,edi
 592:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 598:	83 ec 04             	sub    esp,0x4
 59b:	55                   	push   ebp
 59c:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 5a0:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 5a4:	ff 94 bb 00 ff ff ff 	call   DWORD PTR [ebx+edi*4-0x100]
 5ab:	83 c7 01             	add    edi,0x1
 5ae:	83 c4 10             	add    esp,0x10
 5b1:	39 fe                	cmp    esi,edi
 5b3:	75 e3                	jne    598 <__libc_csu_init+0x38>
 5b5:	83 c4 0c             	add    esp,0xc
 5b8:	5b                   	pop    ebx
 5b9:	5e                   	pop    esi
 5ba:	5f                   	pop    edi
 5bb:	5d                   	pop    ebp
 5bc:	c3                   	ret    
 5bd:	8d 76 00             	lea    esi,[esi+0x0]

000005c0 <__libc_csu_fini>:
 5c0:	f3 c3                	repz ret 

Disassembly of section .fini:

000005c4 <_fini>:
 5c4:	53                   	push   ebx
 5c5:	83 ec 08             	sub    esp,0x8
 5c8:	e8 23 fe ff ff       	call   3f0 <__x86.get_pc_thunk.bx>
 5cd:	81 c3 0f 1a 00 00    	add    ebx,0x1a0f
 5d3:	83 c4 08             	add    esp,0x8
 5d6:	5b                   	pop    ebx
 5d7:	c3                   	ret    

Disassembly of section .rodata:

000005d8 <_fp_hw>:
 5d8:	03 00                	add    eax,DWORD PTR [eax]
	...

000005dc <_IO_stdin_used>:
 5dc:	01 00                	add    DWORD PTR [eax],eax
 5de:	02 00                	add    al,BYTE PTR [eax]

Disassembly of section .eh_frame_hdr:

000005e0 <__GNU_EH_FRAME_HDR>:
 5e0:	01 1b                	add    DWORD PTR [ebx],ebx
 5e2:	03 3b                	add    edi,DWORD PTR [ebx]
 5e4:	40                   	inc    eax
 5e5:	00 00                	add    BYTE PTR [eax],al
 5e7:	00 07                	add    BYTE PTR [edi],al
 5e9:	00 00                	add    BYTE PTR [eax],al
 5eb:	00 a0 fd ff ff 5c    	add    BYTE PTR [eax+0x5cfffffd],ah
 5f1:	00 00                	add    BYTE PTR [eax],al
 5f3:	00 c0                	add    al,al
 5f5:	fd                   	std    
 5f6:	ff                   	(bad)  
 5f7:	ff 80 00 00 00 0d    	inc    DWORD PTR [eax+0xd000000]
 5fd:	ff                   	(bad)  
 5fe:	ff                   	(bad)  
 5ff:	ff 94 00 00 00 57 ff 	call   DWORD PTR [eax+eax*1-0xa90000]
 606:	ff                   	(bad)  
 607:	ff c0                	inc    eax
 609:	00 00                	add    BYTE PTR [eax],al
 60b:	00 6e ff             	add    BYTE PTR [esi-0x1],ch
 60e:	ff                   	(bad)  
 60f:	ff e0                	jmp    eax
 611:	00 00                	add    BYTE PTR [eax],al
 613:	00 80 ff ff ff f4    	add    BYTE PTR [eax-0xb000001],al
 619:	00 00                	add    BYTE PTR [eax],al
 61b:	00 e0                	add    al,ah
 61d:	ff                   	(bad)  
 61e:	ff                   	(bad)  
 61f:	ff 40 01             	inc    DWORD PTR [eax+0x1]
	...

Disassembly of section .eh_frame:

00000624 <__FRAME_END__-0x110>:
 624:	14 00                	adc    al,0x0
 626:	00 00                	add    BYTE PTR [eax],al
 628:	00 00                	add    BYTE PTR [eax],al
 62a:	00 00                	add    BYTE PTR [eax],al
 62c:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 62f:	00 01                	add    BYTE PTR [ecx],al
 631:	7c 08                	jl     63b <__GNU_EH_FRAME_HDR+0x5b>
 633:	01 1b                	add    DWORD PTR [ebx],ebx
 635:	0c 04                	or     al,0x4
 637:	04 88                	add    al,0x88
 639:	01 00                	add    DWORD PTR [eax],eax
 63b:	00 20                	add    BYTE PTR [eax],ah
 63d:	00 00                	add    BYTE PTR [eax],al
 63f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 642:	00 00                	add    BYTE PTR [eax],al
 644:	3c fd                	cmp    al,0xfd
 646:	ff                   	(bad)  
 647:	ff 20                	jmp    DWORD PTR [eax]
 649:	00 00                	add    BYTE PTR [eax],al
 64b:	00 00                	add    BYTE PTR [eax],al
 64d:	0e                   	push   cs
 64e:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 651:	0c 4a                	or     al,0x4a
 653:	0f 0b                	ud2    
 655:	74 04                	je     65b <__GNU_EH_FRAME_HDR+0x7b>
 657:	78 00                	js     659 <__GNU_EH_FRAME_HDR+0x79>
 659:	3f                   	aas    
 65a:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 65c:	2a 32                	sub    dh,BYTE PTR [edx]
 65e:	24 22                	and    al,0x22
 660:	10 00                	adc    BYTE PTR [eax],al
 662:	00 00                	add    BYTE PTR [eax],al
 664:	40                   	inc    eax
 665:	00 00                	add    BYTE PTR [eax],al
 667:	00 38                	add    BYTE PTR [eax],bh
 669:	fd                   	std    
 66a:	ff                   	(bad)  
 66b:	ff 10                	call   DWORD PTR [eax]
 66d:	00 00                	add    BYTE PTR [eax],al
 66f:	00 00                	add    BYTE PTR [eax],al
 671:	00 00                	add    BYTE PTR [eax],al
 673:	00 28                	add    BYTE PTR [eax],ch
 675:	00 00                	add    BYTE PTR [eax],al
 677:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
 67b:	00 71 fe             	add    BYTE PTR [ecx-0x2],dh
 67e:	ff                   	(bad)  
 67f:	ff 4a 00             	dec    DWORD PTR [edx+0x0]
 682:	00 00                	add    BYTE PTR [eax],al
 684:	00 44 0c 01          	add    BYTE PTR [esp+ecx*1+0x1],al
 688:	00 47 10             	add    BYTE PTR [edi+0x10],al
 68b:	05 02 75 00 43       	add    eax,0x43007502
 690:	0f 03 75 7c          	lsl    esi,WORD PTR [ebp+0x7c]
 694:	06                   	push   es
 695:	77 0c                	ja     6a3 <__GNU_EH_FRAME_HDR+0xc3>
 697:	01 00                	add    DWORD PTR [eax],eax
 699:	41                   	inc    ecx
 69a:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
 69d:	04 04                	add    al,0x4
 69f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 6a2:	00 00                	add    BYTE PTR [eax],al
 6a4:	80 00 00             	add    BYTE PTR [eax],0x0
 6a7:	00 8f fe ff ff 17    	add    BYTE PTR [edi+0x17fffffe],cl
 6ad:	00 00                	add    BYTE PTR [eax],al
 6af:	00 00                	add    BYTE PTR [eax],al
 6b1:	41                   	inc    ecx
 6b2:	0e                   	push   cs
 6b3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 6b9:	53                   	push   ebx
 6ba:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 6bd:	04 00                	add    al,0x0
 6bf:	00 10                	add    BYTE PTR [eax],dl
 6c1:	00 00                	add    BYTE PTR [eax],al
 6c3:	00 a0 00 00 00 86    	add    BYTE PTR [eax-0x7a000000],ah
 6c9:	fe                   	(bad)  
 6ca:	ff                   	(bad)  
 6cb:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
 6ce:	00 00                	add    BYTE PTR [eax],al
 6d0:	00 00                	add    BYTE PTR [eax],al
 6d2:	00 00                	add    BYTE PTR [eax],al
 6d4:	48                   	dec    eax
 6d5:	00 00                	add    BYTE PTR [eax],al
 6d7:	00 b4 00 00 00 84 fe 	add    BYTE PTR [eax+eax*1-0x17c0000],dh
 6de:	ff                   	(bad)  
 6df:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 6e2:	00 00                	add    BYTE PTR [eax],al
 6e4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 6e7:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 6ed:	87 03                	xchg   DWORD PTR [ebx],eax
 6ef:	41                   	inc    ecx
 6f0:	0e                   	push   cs
 6f1:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 6f7:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 6fe:	24 41                	and    al,0x41
 700:	0e                   	push   cs
 701:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 705:	44                   	inc    esp
 706:	0e                   	push   cs
 707:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 70a:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 70d:	14 41                	adc    al,0x41
 70f:	c3                   	ret    
 710:	0e                   	push   cs
 711:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 714:	0e                   	push   cs
 715:	0c 41                	or     al,0x41
 717:	c7                   	(bad)  
 718:	0e                   	push   cs
 719:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 71c:	0e                   	push   cs
 71d:	04 00                	add    al,0x0
 71f:	00 10                	add    BYTE PTR [eax],dl
 721:	00 00                	add    BYTE PTR [eax],al
 723:	00 00                	add    BYTE PTR [eax],al
 725:	01 00                	add    DWORD PTR [eax],eax
 727:	00 98 fe ff ff 02    	add    BYTE PTR [eax+0x2fffffe],bl
 72d:	00 00                	add    BYTE PTR [eax],al
 72f:	00 00                	add    BYTE PTR [eax],al
 731:	00 00                	add    BYTE PTR [eax],al
	...

00000734 <__FRAME_END__>:
 734:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00001edc <__frame_dummy_init_array_entry>:
    1edc:	e0 04                	loopne 1ee2 <__init_array_end+0x2>
	...

Disassembly of section .fini_array:

00001ee0 <__do_global_dtors_aux_fini_array_entry>:
    1ee0:	90                   	nop
    1ee1:	04 00                	add    al,0x0
	...

Disassembly of section .dynamic:

00001ee4 <_DYNAMIC>:
    1ee4:	01 00                	add    DWORD PTR [eax],eax
    1ee6:	00 00                	add    BYTE PTR [eax],al
    1ee8:	01 00                	add    DWORD PTR [eax],eax
    1eea:	00 00                	add    BYTE PTR [eax],al
    1eec:	0c 00                	or     al,0x0
    1eee:	00 00                	add    BYTE PTR [eax],al
    1ef0:	58                   	pop    eax
    1ef1:	03 00                	add    eax,DWORD PTR [eax]
    1ef3:	00 0d 00 00 00 c4    	add    BYTE PTR ds:0xc4000000,cl
    1ef9:	05 00 00 19 00       	add    eax,0x190000
    1efe:	00 00                	add    BYTE PTR [eax],al
    1f00:	dc 1e                	fcomp  QWORD PTR [esi]
    1f02:	00 00                	add    BYTE PTR [eax],al
    1f04:	1b 00                	sbb    eax,DWORD PTR [eax]
    1f06:	00 00                	add    BYTE PTR [eax],al
    1f08:	04 00                	add    al,0x0
    1f0a:	00 00                	add    BYTE PTR [eax],al
    1f0c:	1a 00                	sbb    al,BYTE PTR [eax]
    1f0e:	00 00                	add    BYTE PTR [eax],al
    1f10:	e0 1e                	loopne 1f30 <_DYNAMIC+0x4c>
    1f12:	00 00                	add    BYTE PTR [eax],al
    1f14:	1c 00                	sbb    al,0x0
    1f16:	00 00                	add    BYTE PTR [eax],al
    1f18:	04 00                	add    al,0x0
    1f1a:	00 00                	add    BYTE PTR [eax],al
    1f1c:	f5                   	cmc    
    1f1d:	fe                   	(bad)  
    1f1e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
    1f21:	01 00                	add    DWORD PTR [eax],eax
    1f23:	00 05 00 00 00 3c    	add    BYTE PTR ds:0x3c000000,al
    1f29:	02 00                	add    al,BYTE PTR [eax]
    1f2b:	00 06                	add    BYTE PTR [esi],al
    1f2d:	00 00                	add    BYTE PTR [eax],al
    1f2f:	00 cc                	add    ah,cl
    1f31:	01 00                	add    DWORD PTR [eax],eax
    1f33:	00 0a                	add    BYTE PTR [edx],cl
    1f35:	00 00                	add    BYTE PTR [eax],al
    1f37:	00 96 00 00 00 0b    	add    BYTE PTR [esi+0xb000000],dl
    1f3d:	00 00                	add    BYTE PTR [eax],al
    1f3f:	00 10                	add    BYTE PTR [eax],dl
    1f41:	00 00                	add    BYTE PTR [eax],al
    1f43:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
    1f49:	00 00                	add    BYTE PTR [eax],al
    1f4b:	00 03                	add    BYTE PTR [ebx],al
    1f4d:	00 00                	add    BYTE PTR [eax],al
    1f4f:	00 dc                	add    ah,bl
    1f51:	1f                   	pop    ds
    1f52:	00 00                	add    BYTE PTR [eax],al
    1f54:	02 00                	add    al,BYTE PTR [eax]
    1f56:	00 00                	add    BYTE PTR [eax],al
    1f58:	08 00                	or     BYTE PTR [eax],al
    1f5a:	00 00                	add    BYTE PTR [eax],al
    1f5c:	14 00                	adc    al,0x0
    1f5e:	00 00                	add    BYTE PTR [eax],al
    1f60:	11 00                	adc    DWORD PTR [eax],eax
    1f62:	00 00                	add    BYTE PTR [eax],al
    1f64:	17                   	pop    ss
    1f65:	00 00                	add    BYTE PTR [eax],al
    1f67:	00 50 03             	add    BYTE PTR [eax+0x3],dl
    1f6a:	00 00                	add    BYTE PTR [eax],al
    1f6c:	11 00                	adc    DWORD PTR [eax],eax
    1f6e:	00 00                	add    BYTE PTR [eax],al
    1f70:	10 03                	adc    BYTE PTR [ebx],al
    1f72:	00 00                	add    BYTE PTR [eax],al
    1f74:	12 00                	adc    al,BYTE PTR [eax]
    1f76:	00 00                	add    BYTE PTR [eax],al
    1f78:	40                   	inc    eax
    1f79:	00 00                	add    BYTE PTR [eax],al
    1f7b:	00 13                	add    BYTE PTR [ebx],dl
    1f7d:	00 00                	add    BYTE PTR [eax],al
    1f7f:	00 08                	add    BYTE PTR [eax],cl
    1f81:	00 00                	add    BYTE PTR [eax],al
    1f83:	00 1e                	add    BYTE PTR [esi],bl
    1f85:	00 00                	add    BYTE PTR [eax],al
    1f87:	00 08                	add    BYTE PTR [eax],cl
    1f89:	00 00                	add    BYTE PTR [eax],al
    1f8b:	00 fb                	add    bl,bh
    1f8d:	ff                   	(bad)  
    1f8e:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    1f91:	00 00                	add    BYTE PTR [eax],al
    1f93:	08 fe                	or     dh,bh
    1f95:	ff                   	(bad)  
    1f96:	ff 6f e0             	jmp    FWORD PTR [edi-0x20]
    1f99:	02 00                	add    al,BYTE PTR [eax]
    1f9b:	00 ff                	add    bh,bh
    1f9d:	ff                   	(bad)  
    1f9e:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    1fa1:	00 00                	add    BYTE PTR [eax],al
    1fa3:	00 f0                	add    al,dh
    1fa5:	ff                   	(bad)  
    1fa6:	ff 6f d2             	jmp    FWORD PTR [edi-0x2e]
    1fa9:	02 00                	add    al,BYTE PTR [eax]
    1fab:	00 fa                	add    dl,bh
    1fad:	ff                   	(bad)  
    1fae:	ff 6f 04             	jmp    FWORD PTR [edi+0x4]
	...

Disassembly of section .got:

00001fdc <_GLOBAL_OFFSET_TABLE_>:
    1fdc:	e4 1e                	in     al,0x1e
	...
    1fe6:	00 00                	add    BYTE PTR [eax],al
    1fe8:	96                   	xchg   esi,eax
    1fe9:	03 00                	add    eax,DWORD PTR [eax]
	...
    1ff7:	00 ed                	add    ch,ch
    1ff9:	04 00                	add    al,0x0
    1ffb:	00 00                	add    BYTE PTR [eax],al
    1ffd:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .data:

00002000 <__data_start>:
    2000:	00 00                	add    BYTE PTR [eax],al
	...

00002004 <__dso_handle>:
    2004:	04 20                	add    al,0x20
	...

Disassembly of section .bss:

00002008 <__bss_start>:
    2008:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x2e0>
   a:	74 75                	je     81 <_init-0x2d7>
   c:	20 37                	and    BYTE PTR [edi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR ds:0x62753732,ch
  17:	75 6e                	jne    87 <_init-0x2d1>
  19:	74 75                	je     90 <_init-0x2c8>
  1b:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [esi],ch
  20:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  23:	20 37                	and    BYTE PTR [edi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  28:	30 00                	xor    BYTE PTR [eax],al

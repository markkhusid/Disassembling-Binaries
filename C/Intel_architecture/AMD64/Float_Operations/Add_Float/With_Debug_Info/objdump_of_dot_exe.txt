
add_float_C_AMD64_ggdb3:     file format elf64-x86-64
add_float_C_AMD64_ggdb3
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000004f0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000000810 memsz 0x0000000000000810 flags r-x
    LOAD off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**21
         filesz 0x0000000000000220 memsz 0x0000000000000228 flags rw-
 DYNAMIC off    0x0000000000000e00 vaddr 0x0000000000200e00 paddr 0x0000000000200e00 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000006cc vaddr 0x00000000000006cc paddr 0x00000000000006cc align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**0
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000000004b8
  FINI                 0x00000000000006b4
  INIT_ARRAY           0x0000000000200df0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200df8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000348
  SYMTAB               0x00000000000002b8
  STRSZ                0x000000000000007d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fc0
  RELA                 0x00000000000003f8
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000003d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003c6
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000007d  0000000000000348  0000000000000348  00000348  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000c  00000000000003c6  00000000000003c6  000003c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  00000000000003f8  00000000000003f8  000003f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         00000017  00000000000004b8  00000000000004b8  000004b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          00000010  00000000000004d0  00000000000004d0  000004d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt.got      00000008  00000000000004e0  00000000000004e0  000004e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001c2  00000000000004f0  00000000000004f0  000004f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000000006b4  00000000000006b4  000006b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       0000000c  00000000000006c0  00000000000006c0  000006c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  00000000000006cc  00000000000006cc  000006cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000108  0000000000000708  0000000000000708  00000708  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000200df0  0000000000200df0  00000df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000200df8  0000000000200df8  00000df8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      000001c0  0000000000200e00  0000000000200e00  00000e00  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000040  0000000000200fc0  0000000000200fc0  00000fc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 23 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 24 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103a  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_info   00000373  0000000000000000  0000000000000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_abbrev 00000105  0000000000000000  0000000000000000  000013dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_line   0000022f  0000000000000000  0000000000000000  000014e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_str    00004def  0000000000000000  0000000000000000  00001711  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_macro  0000125b  0000000000000000  0000000000000000  00006500  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000348 l    d  .dynstr	0000000000000000              .dynstr
00000000000003c6 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000003d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000003f8 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000004b8 l    d  .init	0000000000000000              .init
00000000000004d0 l    d  .plt	0000000000000000              .plt
00000000000004e0 l    d  .plt.got	0000000000000000              .plt.got
00000000000004f0 l    d  .text	0000000000000000              .text
00000000000006b4 l    d  .fini	0000000000000000              .fini
00000000000006c0 l    d  .rodata	0000000000000000              .rodata
00000000000006cc l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000000708 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200df0 l    d  .init_array	0000000000000000              .init_array
0000000000200df8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200e00 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fc0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_macro	0000000000000000              .debug_macro
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000520 l     F .text	0000000000000000              deregister_tm_clones
0000000000000560 l     F .text	0000000000000000              register_tm_clones
00000000000005b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200df8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000005f0 l     F .text	0000000000000000              frame_dummy
0000000000200df0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              add_float.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
000000000000080c l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200df8 l       .init_array	0000000000000000              __init_array_end
0000000000200e00 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200df0 l       .init_array	0000000000000000              __init_array_start
00000000000006cc l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fc0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000000006b0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201010 g       .data	0000000000000000              _edata
00000000000006b4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
00000000000006c0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000640 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
00000000000004f0 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
00000000000005fa g     F .text	000000000000003b              main
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000004b8 g     F .init	0000000000000000              _init


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 e8bf7edd fa5b3234 33bdfb75 ed5c9948  ..~..[243..u.\.H
 0294 76242876                             v$(v            
Contents of section .gnu.hash:
 0298 01000000 01000000 01000000 00000000  ................
 02a8 00000000 00000000 00000000           ............    
Contents of section .dynsym:
 02b8 00000000 00000000 00000000 00000000  ................
 02c8 00000000 00000000 38000000 20000000  ........8... ...
 02d8 00000000 00000000 00000000 00000000  ................
 02e8 1a000000 12000000 00000000 00000000  ................
 02f8 00000000 00000000 54000000 20000000  ........T... ...
 0308 00000000 00000000 00000000 00000000  ................
 0318 63000000 20000000 00000000 00000000  c... ...........
 0328 00000000 00000000 0b000000 22000000  ............"...
 0338 00000000 00000000 00000000 00000000  ................
Contents of section .dynstr:
 0348 006c6962 632e736f 2e36005f 5f637861  .libc.so.6.__cxa
 0358 5f66696e 616c697a 65005f5f 6c696263  _finalize.__libc
 0368 5f737461 72745f6d 61696e00 474c4942  _start_main.GLIB
 0378 435f322e 322e3500 5f49544d 5f646572  C_2.2.5._ITM_der
 0388 65676973 74657254 4d436c6f 6e655461  egisterTMCloneTa
 0398 626c6500 5f5f676d 6f6e5f73 74617274  ble.__gmon_start
 03a8 5f5f005f 49544d5f 72656769 73746572  __._ITM_register
 03b8 544d436c 6f6e6554 61626c65 00        TMCloneTable.   
Contents of section .gnu.version:
 03c6 00000000 02000000 00000200           ............    
Contents of section .gnu.version_r:
 03d8 01000100 01000000 10000000 00000000  ................
 03e8 751a6909 00000200 2c000000 00000000  u.i.....,.......
Contents of section .rela.dyn:
 03f8 f00d2000 00000000 08000000 00000000  .. .............
 0408 f0050000 00000000 f80d2000 00000000  .......... .....
 0418 08000000 00000000 b0050000 00000000  ................
 0428 08102000 00000000 08000000 00000000  .. .............
 0438 08102000 00000000 d80f2000 00000000  .. ....... .....
 0448 06000000 01000000 00000000 00000000  ................
 0458 e00f2000 00000000 06000000 02000000  .. .............
 0468 00000000 00000000 e80f2000 00000000  .......... .....
 0478 06000000 03000000 00000000 00000000  ................
 0488 f00f2000 00000000 06000000 04000000  .. .............
 0498 00000000 00000000 f80f2000 00000000  .......... .....
 04a8 06000000 05000000 00000000 00000000  ................
Contents of section .init:
 04b8 4883ec08 488b0525 0b200048 85c07402  H...H..%. .H..t.
 04c8 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 04d0 ff35f20a 2000ff25 f40a2000 0f1f4000  .5.. ..%.. ...@.
Contents of section .plt.got:
 04e0 ff25120b 20006690                    .%.. .f.        
Contents of section .text:
 04f0 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 0500 8d05aa01 0000488d 0d330100 00488d3d  ......H..3...H.=
 0510 e6000000 ff15c60a 2000f40f 1f440000  ........ ....D..
 0520 488d3de9 0a200055 488d05e1 0a200048  H.=.. .UH.... .H
 0530 39f84889 e5741948 8b059a0a 20004885  9.H..t.H.... .H.
 0540 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 0550 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 0560 488d3da9 0a200048 8d35a20a 20005548  H.=.. .H.5.. .UH
 0570 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 0580 4801c648 d1fe7418 488b0561 0a200048  H..H..t.H..a. .H
 0590 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 05a0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 05b0 803d590a 20000075 2f48833d 370a2000  .=Y. ..u/H.=7. .
 05c0 00554889 e5740c48 8b3d3a0a 2000e80d  .UH..t.H.=:. ...
 05d0 ffffffe8 48ffffff c605310a 2000015d  ....H.....1. ..]
 05e0 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 05f0 554889e5 5de966ff ffff5548 89e5897d  UH..].f...UH...}
 0600 ec488975 e0f30f10 05b70000 00f30f11  .H.u............
 0610 45f4f30f 1005ae00 0000f30f 1145f8f3  E............E..
 0620 0f1045f4 f30f5845 f8f30f11 45fcb800  ..E...XE....E...
 0630 0000005d c3662e0f 1f840000 00000090  ...].f..........
 0640 41574156 4989d741 5541544c 8d259e07  AWAVI..AUATL.%..
 0650 20005548 8d2d9e07 20005341 89fd4989   .UH.-.. .SA..I.
 0660 f64c29e5 4883ec08 48c1fd03 e847feff  .L).H...H....G..
 0670 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 0680 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 0690 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 06a0 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 06b0 f3c3                                 ..              
Contents of section .fini:
 06b4 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 06c0 01000200 cdcc0c40 33335340           .......@33S@    
Contents of section .eh_frame_hdr:
 06cc 011b033b 38000000 06000000 04feffff  ...;8...........
 06dc 84000000 14feffff ac000000 24feffff  ............$...
 06ec 54000000 2effffff c4000000 74ffffff  T...........t...
 06fc e4000000 e4ffffff 2c010000           ........,...    
Contents of section .eh_frame:
 0708 14000000 00000000 017a5200 01781001  .........zR..x..
 0718 1b0c0708 90010710 14000000 1c000000  ................
 0728 c8fdffff 2b000000 00000000 00000000  ....+...........
 0738 14000000 00000000 017a5200 01781001  .........zR..x..
 0748 1b0c0708 90010000 24000000 1c000000  ........$.......
 0758 78fdffff 10000000 000e1046 0e184a0f  x..........F..J.
 0768 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 0778 14000000 44000000 60fdffff 08000000  ....D...`.......
 0788 00000000 00000000 1c000000 5c000000  ............\...
 0798 62feffff 3b000000 00410e10 8602430d  b...;....A....C.
 07a8 06760c07 08000000 44000000 7c000000  .v......D...|...
 07b8 88feffff 65000000 00420e10 8f02420e  ....e....B....B.
 07c8 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 07d8 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 07e8 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 07f8 10000000 c4000000 b0feffff 02000000  ................
 0808 00000000 00000000                    ........        
Contents of section .init_array:
 200df0 f0050000 00000000                    ........        
Contents of section .fini_array:
 200df8 b0050000 00000000                    ........        
Contents of section .dynamic:
 200e00 01000000 00000000 01000000 00000000  ................
 200e10 0c000000 00000000 b8040000 00000000  ................
 200e20 0d000000 00000000 b4060000 00000000  ................
 200e30 19000000 00000000 f00d2000 00000000  .......... .....
 200e40 1b000000 00000000 08000000 00000000  ................
 200e50 1a000000 00000000 f80d2000 00000000  .......... .....
 200e60 1c000000 00000000 08000000 00000000  ................
 200e70 f5feff6f 00000000 98020000 00000000  ...o............
 200e80 05000000 00000000 48030000 00000000  ........H.......
 200e90 06000000 00000000 b8020000 00000000  ................
 200ea0 0a000000 00000000 7d000000 00000000  ........}.......
 200eb0 0b000000 00000000 18000000 00000000  ................
 200ec0 15000000 00000000 00000000 00000000  ................
 200ed0 03000000 00000000 c00f2000 00000000  .......... .....
 200ee0 07000000 00000000 f8030000 00000000  ................
 200ef0 08000000 00000000 c0000000 00000000  ................
 200f00 09000000 00000000 18000000 00000000  ................
 200f10 1e000000 00000000 08000000 00000000  ................
 200f20 fbffff6f 00000000 01000008 00000000  ...o............
 200f30 feffff6f 00000000 d8030000 00000000  ...o............
 200f40 ffffff6f 00000000 01000000 00000000  ...o............
 200f50 f0ffff6f 00000000 c6030000 00000000  ...o............
 200f60 f9ffff6f 00000000 03000000 00000000  ...o............
 200f70 00000000 00000000 00000000 00000000  ................
 200f80 00000000 00000000 00000000 00000000  ................
 200f90 00000000 00000000 00000000 00000000  ................
 200fa0 00000000 00000000 00000000 00000000  ................
 200fb0 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 200fc0 000e2000 00000000 00000000 00000000  .. .............
 200fd0 00000000 00000000 00000000 00000000  ................
 200fe0 00000000 00000000 00000000 00000000  ................
 200ff0 00000000 00000000 00000000 00000000  ................
Contents of section .data:
 201000 00000000 00000000 08102000 00000000  .......... .....
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 fa050000 00000000 3b000000 00000000  ........;.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 6f030000 04000000 00000801 dd0b0000  o...............
 0010 0c212f00 00161100 00fa0500 00000000  .!/.............
 0020 003b0000 00000000 00000000 00000000  .;..............
 0030 00020829 000002d8 3c000000 03080798  ...)....<.......
 0040 39000003 0108c626 00000302 07240700  9......&.....$..
 0050 00030407 661c0000 03010645 42000003  ....f......EB...
 0060 02058d24 00000404 05696e74 00030805  ...$.....int....
 0070 f3390000 02841000 00038c6d 00000002  .9.........m....
 0080 d00c0000 038d6d00 00000508 06089200  ......m.........
 0090 00000301 064c4200 00079200 0000088e  .....LB.........
 00a0 3d0000d8 04f51e02 000009e3 26000004  =...........&...
 00b0 f6660000 0000091b 21000004 fb8c0000  .f......!.......
 00c0 00080960 33000004 fc8c0000 0010096d  ...`3..........m
 00d0 19000004 fd8c0000 001809ff 24000004  ............$...
 00e0 fe8c0000 002009f7 41000004 ff8c0000  ..... ..A.......
 00f0 00280a03 06000004 00018c00 0000300a  .(............0.
 0100 7f4d0000 0401018c 00000038 0afe0200  .M.........8....
 0110 00040201 8c000000 400a3a26 00000404  ........@.:&....
 0120 018c0000 00480ad5 42000004 05018c00  .....H..B.......
 0130 0000500a f90f0000 0406018c 00000058  ..P............X
 0140 0a380900 00040801 56020000 600a6b4a  .8......V...`.kJ
 0150 0000040a 015c0200 00680a00 17000004  .....\...h......
 0160 0c016600 0000700a 52080000 04100166  ..f...p.R......f
 0170 00000074 0a823d00 00041201 74000000  ...t..=.....t...
 0180 780a834c 00000416 014a0000 00800a86  x..L.....J......
 0190 18000004 17015800 0000820a 64010000  ......X.....d...
 01a0 04180162 02000083 0a633c00 00041c01  ...b.....c<.....
 01b0 72020000 880a863d 00000425 017f0000  r......=...%....
 01c0 00900a7c 2b000004 2d018a00 0000980a  ...|+...-.......
 01d0 832b0000 042e018a 000000a0 0a8a2b00  .+............+.
 01e0 00042f01 8a000000 a80a912b 00000430  ../........+...0
 01f0 018a0000 00b00a98 2b000004 32013100  ........+...2.1.
 0200 0000b80a 931f0000 04330166 000000c0  .........3.f....
 0210 0a764d00 00043501 78020000 c4000b0f  .vM...5.x.......
 0220 02000004 9a080c1c 00001804 a0560200  .............V..
 0230 00099d1a 000004a1 56020000 0009b741  ........V......A
 0240 000004a2 5c020000 08090d0f 000004a6  ....\...........
 0250 66000000 10000608 25020000 06089e00  f.......%.......
 0260 00000c92 00000072 0200000d 3c000000  .......r....<...
 0270 00000608 1e020000 0c920000 00880200  ................
 0280 000d3c00 00001300 0e0f3900 000f7325  ..<.......9...s%
 0290 0000043f 01880200 000fea25 00000440  ...?.......%...@
 02a0 01880200 000f421f 00000441 01880200  ......B....A....
 02b0 00060899 00000007 b1020000 10cf2200  ..............".
 02c0 0005875c 02000010 d0410000 05885c02  ...\.....A....\.
 02d0 0000107f 18000005 895c0200 00107d16  .........\....}.
 02e0 0000061a 66000000 0cb70200 00f30200  ....f...........
 02f0 00110007 e8020000 10681500 00061bf3  .........h......
 0300 02000012 af470000 01036600 0000fa05  .....G....f.....
 0310 00000000 00003b00 00000000 0000019c  ......;.........
 0320 65030000 134b0700 00010366 00000002  e....K.....f....
 0330 915c1312 1d000001 03650300 00029150  .\.......e.....P
 0340 14610001 046b0300 00029164 14620001  .a...k.....d.b..
 0350 046b0300 00029168 14630001 046b0300  .k.....h.c...k..
 0360 0002916c 0006088c 00000003 04043010  ...l..........0.
 0370 000000                               ...             
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17994217 00000216 00030e3a 0b3b0b49  ..B........:.;.I
 0020 13000003 24000b0b 3e0b030e 00000424  ....$...>......$
 0030 000b0b3e 0b030800 00050f00 0b0b0000  ...>............
 0040 060f000b 0b491300 00072600 49130000  .....I....&.I...
 0050 08130103 0e0b0b3a 0b3b0b01 13000009  .......:.;......
 0060 0d00030e 3a0b3b0b 4913380b 00000a0d  ....:.;.I.8.....
 0070 00030e3a 0b3b0549 13380b00 000b1600  ...:.;.I.8......
 0080 030e3a0b 3b0b0000 0c010149 13011300  ..:.;......I....
 0090 000d2100 49132f0b 00000e13 00030e3c  ..!.I./........<
 00a0 1900000f 3400030e 3a0b3b05 49133f19  ....4...:.;.I.?.
 00b0 3c190000 10340003 0e3a0b3b 0b49133f  <....4...:.;.I.?
 00c0 193c1900 00112100 0000122e 013f1903  .<....!......?..
 00d0 0e3a0b3b 0b271949 13110112 07401897  .:.;.'.I.....@..
 00e0 42190113 00001305 00030e3a 0b3b0b49  B..........:.;.I
 00f0 13021800 00143400 03083a0b 3b0b4913  ......4...:.;.I.
 0100 02180000 00                          .....           
Contents of section .debug_line:
 0000 2b020000 02000f02 00000101 fb0e0d00  +...............
 0010 01010101 00000001 0000012f 7573722f  .........../usr/
 0020 6c69622f 6763632f 7838365f 36342d6c  lib/gcc/x86_64-l
 0030 696e7578 2d676e75 2f372f69 6e636c75  inux-gnu/7/inclu
 0040 6465002f 7573722f 7838365f 36342d6c  de./usr/x86_64-l
 0050 696e7578 2d676e75 2f696e63 6c756465  inux-gnu/include
 0060 2f626974 73002f75 73722f78 38365f36  /bits./usr/x86_6
 0070 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 0080 75646500 2f757372 2f783836 5f36342d  ude./usr/x86_64-
 0090 6c696e75 782d676e 752f696e 636c7564  linux-gnu/includ
 00a0 652f7379 73002f75 73722f78 38365f36  e/sys./usr/x86_6
 00b0 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 00c0 7564652f 676e7500 2f757372 2f783836  ude/gnu./usr/x86
 00d0 5f36342d 6c696e75 782d676e 752f696e  _64-linux-gnu/in
 00e0 636c7564 652f6269 74732f74 79706573  clude/bits/types
 00f0 00006164 645f666c 6f61742e 63000000  ..add_float.c...
 0100 00737464 6465662e 68000100 00747970  .stddef.h....typ
 0110 65732e68 00020000 6c696269 6f2e6800  es.h....libio.h.
 0120 02000073 7464696f 2e680003 00007379  ...stdio.h....sy
 0130 735f6572 726c6973 742e6800 02000073  s_errlist.h....s
 0140 7464632d 70726564 65662e68 00030000  tdc-predef.h....
 0150 6c696263 2d686561 6465722d 73746172  libc-header-star
 0160 742e6800 02000066 65617475 7265732e  t.h....features.
 0170 68000300 00636465 66732e68 00040000  h....cdefs.h....
 0180 776f7264 73697a65 2e680002 00006c6f  wordsize.h....lo
 0190 6e672d64 6f75626c 652e6800 02000073  ng-double.h....s
 01a0 74756273 2e680005 00007374 7562732d  tubs.h....stubs-
 01b0 36342e68 00050000 74797065 73697a65  64.h....typesize
 01c0 732e6800 0200005f 5f46494c 452e6800  s.h....__FILE.h.
 01d0 06000046 494c452e 68000600 005f475f  ...FILE.h...._G_
 01e0 636f6e66 69672e68 00020000 5f5f6d62  config.h....__mb
 01f0 73746174 655f742e 68000600 00737464  state_t.h....std
 0200 6172672e 68000100 00737464 696f5f6c  arg.h....stdio_l
 0210 696d2e68 00020000 00000902 fa050000  im.h............
 0220 00000000 14afcaca 083e0202 000101    .........>..... 
Contents of section .debug_str:
 0000 5f494f5f 44454320 30323000 5f5f5349  _IO_DEC 020.__SI
 0010 475f4154 4f4d4943 5f4d4158 5f5f2030  G_ATOMIC_MAX__ 0
 0020 78376666 66666666 66005f5f 464c5436  x7fffffff.__FLT6
 0030 345f4841 535f5155 4945545f 4e414e5f  4_HAS_QUIET_NAN_
 0040 5f203100 5f53495a 455f545f 44454649  _ 1._SIZE_T_DEFI
 0050 4e454420 005f494f 5f49535f 46494c45  NED ._IO_IS_FILE
 0060 42554620 30783230 3030005f 5f444543  BUF 0x2000.__DEC
 0070 36345f53 55424e4f 524d414c 5f4d494e  64_SUBNORMAL_MIN
 0080 5f5f2030 2e303030 30303030 30303030  __ 0.00000000000
 0090 30303031 452d3338 33444400 5f5f464c  0001E-383DD.__FL
 00a0 5433325f 4841535f 494e4649 4e495459  T32_HAS_INFINITY
 00b0 5f5f2031 005f5f46 4c543634 5f4d4158  __ 1.__FLT64_MAX
 00c0 5f455850 5f5f2031 30323400 5f5f464c  _EXP__ 1024.__FL
 00d0 545f4d49 4e5f3130 5f455850 5f5f2028  T_MIN_10_EXP__ (
 00e0 2d333729 005f5f53 59534341 4c4c5f55  -37).__SYSCALL_U
 00f0 4c4f4e47 5f545950 45205f5f 554c4f4e  LONG_TYPE __ULON
 0100 47574f52 445f5459 5045005f 5f464c54  GWORD_TYPE.__FLT
 0110 3634585f 45505349 4c4f4e5f 5f20312e  64X_EPSILON__ 1.
 0120 30383432 30323137 32343835 35303434  0842021724855044
 0130 33343030 37343532 38303038 36393934  3400745280086994
 0140 31373165 2d313946 36347800 5f5f464c  171e-19F64x.__FL
 0150 54333258 5f4d4158 5f455850 5f5f2031  T32X_MAX_EXP__ 1
 0160 30323400 5f73686f 72746275 66005f5f  024._shortbuf.__
 0170 4743435f 41544f4d 49435f54 4553545f  GCC_ATOMIC_TEST_
 0180 414e445f 5345545f 54525545 56414c20  AND_SET_TRUEVAL 
 0190 31005f5f 4f46465f 545f4d41 54434845  1.__OFF_T_MATCHE
 01a0 535f4f46 4636345f 54203100 5f5f4445  S_OFF64_T 1.__DE
 01b0 4336345f 45505349 4c4f4e5f 5f203145  C64_EPSILON__ 1E
 01c0 2d313544 44005f5f 44424c5f 44454e4f  -15DD.__DBL_DENO
 01d0 524d5f4d 494e5f5f 20282864 6f75626c  RM_MIN__ ((doubl
 01e0 6529342e 39343036 35363435 38343132  e)4.940656458412
 01f0 34363534 34313736 35363837 39323836  4654417656879286
 0200 38323231 33373265 2d333234 4c29005f  8221372e-324L)._
 0210 494f5f6c 6f636b5f 74005f5f 494e5450  IO_lock_t.__INTP
 0220 54525f4d 41585f5f 20307837 66666666  TR_MAX__ 0x7ffff
 0230 66666666 66666666 6666664c 005f475f  fffffffffffL._G_
 0240 48415645 5f53545f 424c4b53 495a4520  HAVE_ST_BLKSIZE 
 0250 64656669 6e656420 285f5354 41544255  defined (_STATBU
 0260 465f5354 5f424c4b 53495a45 29005f5f  F_ST_BLKSIZE).__
 0270 666c6578 61727220 5b5d005f 5f464c54  flexarr [].__FLT
 0280 33325f4d 414e545f 4449475f 5f203234  32_MANT_DIG__ 24
 0290 005f5f47 43435f48 4156455f 53594e43  .__GCC_HAVE_SYNC
 02a0 5f434f4d 50415245 5f414e44 5f535741  _COMPARE_AND_SWA
 02b0 505f3820 31005f49 4f535f42 494e2031  P_8 1._IOS_BIN 1
 02c0 32380046 494c454e 414d455f 4d415820  28.FILENAME_MAX 
 02d0 34303936 005f5354 44435f50 52454445  4096._STDC_PREDE
 02e0 465f4820 31005f5f 5553455f 49534f43  F_H 1.__USE_ISOC
 02f0 31312031 005f494f 46424620 30005f49  11 1._IOFBF 0._I
 0300 4f5f6275 665f656e 64005f5f 494e545f  O_buf_end.__INT_
 0310 46415354 36345f57 49445448 5f5f2036  FAST64_WIDTH__ 6
 0320 34005f49 4f5f454f 465f5345 454e2030  4._IO_EOF_SEEN 0
 0330 78313000 5345454b 5f435552 2031005f  x10.SEEK_CUR 1._
 0340 5f464c54 3332585f 44454349 4d414c5f  _FLT32X_DECIMAL_
 0350 4449475f 5f203137 005f5f6b 385f5f20  DIG__ 17.__k8__ 
 0360 31005f5f 44424c5f 4d494e5f 4558505f  1.__DBL_MIN_EXP_
 0370 5f20282d 31303231 29005f5f 494e545f  _ (-1021).__INT_
 0380 46415354 36345f4d 41585f5f 20307837  FAST64_MAX__ 0x7
 0390 66666666 66666666 66666666 6666664c  fffffffffffffffL
 03a0 005f5f68 61735f69 6e636c75 64655f6e  .__has_include_n
 03b0 65787428 53545229 205f5f68 61735f69  ext(STR) __has_i
 03c0 6e636c75 64655f6e 6578745f 5f285354  nclude_next__(ST
 03d0 5229005f 494f5f52 49474854 20303400  R)._IO_RIGHT 04.
 03e0 5f494f5f 55534552 5f425546 2031005f  _IO_USER_BUF 1._
 03f0 5359535f 43444546 535f4820 31005f5f  SYS_CDEFS_H 1.__
 0400 464c5433 32585f4d 41585f5f 20312e37  FLT32X_MAX__ 1.7
 0410 39373639 33313334 38363233 31353730  9769313486231570
 0420 38313435 32373432 33373331 37303433  8145274237317043
 0430 3537652b 33303846 33327800 5f5f676c  57e+308F32x.__gl
 0440 6962635f 756e6c69 6b656c79 28636f6e  ibc_unlikely(con
 0450 6429205f 5f627569 6c74696e 5f657870  d) __builtin_exp
 0460 65637420 2828636f 6e64292c 20302900  ect ((cond), 0).
 0470 5f5f5349 5a454f46 5f57494e 545f545f  __SIZEOF_WINT_T_
 0480 5f203400 5f5f474e 55435f50 52455245  _ 4.__GNUC_PRERE
 0490 51286d61 6a2c6d69 6e292028 285f5f47  Q(maj,min) ((__G
 04a0 4e55435f 5f203c3c 20313629 202b205f  NUC__ << 16) + _
 04b0 5f474e55 435f4d49 4e4f525f 5f203e3d  _GNUC_MINOR__ >=
 04c0 2028286d 616a2920 3c3c2031 3629202b   ((maj) << 16) +
 04d0 20286d69 6e292900 5f5f5549 4e545054   (min)).__UINTPT
 04e0 525f4d41 585f5f20 30786666 66666666  R_MAX__ 0xffffff
 04f0 66666666 66666666 6666554c 005f5f76  ffffffffffUL.__v
 0500 615f6172 675f7061 636b5f6c 656e2829  a_arg_pack_len()
 0510 205f5f62 75696c74 696e5f76 615f6172   __builtin_va_ar
 0520 675f7061 636b5f6c 656e2028 29005f47  g_pack_len ()._G
 0530 5f484156 455f4d4d 41502031 005f5f61  _HAVE_MMAP 1.__a
 0540 74747269 62757465 5f636f6e 73745f5f  ttribute_const__
 0550 205f5f61 74747269 62757465 5f5f2028   __attribute__ (
 0560 285f5f63 6f6e7374 5f5f2929 005f5f47  (__const__)).__G
 0570 4c494243 5f555345 5f444550 52454341  LIBC_USE_DEPRECA
 0580 5445445f 47455453 005f494f 5f4e4f5f  TED_GETS._IO_NO_
 0590 57524954 45532038 005f5f47 4e55435f  WRITES 8.__GNUC_
 05a0 4d494e4f 525f5f20 33005f5f 5553455f  MINOR__ 3.__USE_
 05b0 4c415247 4546494c 45363400 5f5f524c  LARGEFILE64.__RL
 05c0 494d5f54 5f545950 45205f5f 53595343  IM_T_TYPE __SYSC
 05d0 414c4c5f 554c4f4e 475f5459 5045005f  ALL_ULONG_TYPE._
 05e0 5f4c4442 4c5f5245 44495228 6e616d65  _LDBL_REDIR(name
 05f0 2c70726f 746f2920 6e616d65 2070726f  ,proto) name pro
 0600 746f005f 494f5f77 72697465 5f656e64  to._IO_write_end
 0610 005f5f47 4c494243 5f505245 52455128  .__GLIBC_PREREQ(
 0620 6d616a2c 6d696e29 2028285f 5f474c49  maj,min) ((__GLI
 0630 42435f5f 203c3c20 31362920 2b205f5f  BC__ << 16) + __
 0640 474c4942 435f4d49 4e4f525f 5f203e3d  GLIBC_MINOR__ >=
 0650 2028286d 616a2920 3c3c2031 3629202b   ((maj) << 16) +
 0660 20286d69 6e292900 5f5f6e65 65645f4e   (min)).__need_N
 0670 554c4c20 005f5f46 4c543634 5f4d494e  ULL .__FLT64_MIN
 0680 5f5f2032 2e323235 30373338 35383530  __ 2.22507385850
 0690 37323031 33383330 39303233 32373137  7201383090232717
 06a0 33333234 30343036 652d3330 38463634  33240406e-308F64
 06b0 005f5f4c 4f4e475f 4c4f4e47 5f574944  .__LONG_LONG_WID
 06c0 54485f5f 20363400 5f504f53 49585f53  TH__ 64._POSIX_S
 06d0 4f555243 45005f5f 464c545f 44454e4f  OURCE.__FLT_DENO
 06e0 524d5f4d 494e5f5f 20312e34 30313239  RM_MIN__ 1.40129
 06f0 38343634 33323438 31373037 30393233  8464324817070923
 0700 37323935 38333238 39393136 3133652d  72958328991613e-
 0710 34354600 5f5f4348 41523136 5f545950  45F.__CHAR16_TYP
 0720 455f5f20 73686f72 7420756e 7369676e  E__ short unsign
 0730 65642069 6e74005f 5f53495a 454f465f  ed int.__SIZEOF_
 0740 53495a45 5f545f5f 20380061 72676300  SIZE_T__ 8.argc.
 0750 5f5f4f52 4445525f 4249475f 454e4449  __ORDER_BIG_ENDI
 0760 414e5f5f 20343332 31005f5f 474e5543  AN__ 4321.__GNUC
 0770 5f5f2037 005f494f 5f4c494e 455f4255  __ 7._IO_LINE_BU
 0780 46203078 32303000 5f5f5553 455f4953  F 0x200.__USE_IS
 0790 4f435858 3131005f 5f555345 5f415446  OCXX11.__USE_ATF
 07a0 494c4520 31005f5f 6e6f6e6e 756c6c28  ILE 1.__nonnull(
 07b0 70617261 6d732920 5f5f6174 74726962  params) __attrib
 07c0 7574655f 5f202828 5f5f6e6f 6e6e756c  ute__ ((__nonnul
 07d0 6c5f5f20 70617261 6d732929 005f5f55  l__ params)).__U
 07e0 494e5436 345f4328 63292063 20232320  INT64_C(c) c ## 
 07f0 554c005f 5f474e55 5f4c4942 52415259  UL.__GNU_LIBRARY
 0800 5f5f005f 5f44424c 5f4d414e 545f4449  __.__DBL_MANT_DI
 0810 475f5f20 3533005f 5f555345 5f504f53  G__ 53.__USE_POS
 0820 49583139 39353036 2031005f 5f737475  IX199506 1.__stu
 0830 625f6368 666c6167 7320005f 5f494e54  b_chflags .__INT
 0840 5f4d4158 5f5f2030 78376666 66666666  _MAX__ 0x7ffffff
 0850 66005f66 6c616773 32005f5f 4e54484e  f._flags2.__NTHN
 0860 4c286663 7429205f 5f617474 72696275  L(fct) __attribu
 0870 74655f5f 2028285f 5f6e6f74 68726f77  te__ ((__nothrow
 0880 5f5f2929 20666374 005f494f 5f424f4f  __)) fct._IO_BOO
 0890 4c414c50 48412030 32303030 3030005f  LALPHA 0200000._
 08a0 5f464c54 33325f48 41535f51 55494554  _FLT32_HAS_QUIET
 08b0 5f4e414e 5f5f2031 005f5f49 4e543136  _NAN__ 1.__INT16
 08c0 5f545950 455f5f20 73686f72 7420696e  _TYPE__ short in
 08d0 74005f5f 44454349 4d414c5f 4249445f  t.__DECIMAL_BID_
 08e0 464f524d 41545f5f 2031005f 5f444543  FORMAT__ 1.__DEC
 08f0 33325f45 5053494c 4f4e5f5f 2031452d  32_EPSILON__ 1E-
 0900 36444600 5f53495a 455f545f 4445434c  6DF._SIZE_T_DECL
 0910 41524544 20005f5f 46445f53 45545349  ARED .__FD_SETSI
 0920 5a452031 30323400 5f5f4c44 424c5f44  ZE 1024.__LDBL_D
 0930 49475f5f 20313800 5f6d6172 6b657273  IG__ 18._markers
 0940 005f5f41 544f4d49 435f5345 515f4353  .__ATOMIC_SEQ_CS
 0950 54203500 5f5f5553 455f504f 53495832  T 5.__USE_POSIX2
 0960 2031005f 5f555345 5f49534f 43393520   1.__USE_ISOC95 
 0970 31005f5f 53495a45 4f465f53 484f5254  1.__SIZEOF_SHORT
 0980 5f5f2032 005f475f 76615f6c 69737420  __ 2._G_va_list 
 0990 5f5f676e 75635f76 615f6c69 7374005f  __gnuc_va_list._
 09a0 5f55494e 5436345f 54595045 5f5f206c  _UINT64_TYPE__ l
 09b0 6f6e6720 756e7369 676e6564 20696e74  ong unsigned int
 09c0 005f5f49 4e545f46 41535433 325f4d41  .__INT_FAST32_MA
 09d0 585f5f20 30783766 66666666 66666666  X__ 0x7fffffffff
 09e0 66666666 66664c00 5f5f494e 545f4c45  ffffffL.__INT_LE
 09f0 41535438 5f545950 455f5f20 7369676e  AST8_TYPE__ sign
 0a00 65642063 68617200 5f5f7369 7a655f74  ed char.__size_t
 0a10 20005f5f 55494e54 5f4c4541 53543332   .__UINT_LEAST32
 0a20 5f545950 455f5f20 756e7369 676e6564  _TYPE__ unsigned
 0a30 20696e74 005f5f73 7475625f 73696772   int.__stub_sigr
 0a40 65747572 6e20005f 5f707472 5f742076  eturn .__ptr_t v
 0a50 6f696420 2a005f5f 5333325f 54595045  oid *.__S32_TYPE
 0a60 20696e74 005f5f53 5444435f 4e4f5f54   int.__STDC_NO_T
 0a70 48524541 44535f5f 2031005f 5f425954  HREADS__ 1.__BYT
 0a80 455f4f52 4445525f 5f205f5f 4f524445  E_ORDER__ __ORDE
 0a90 525f4c49 54544c45 5f454e44 49414e5f  R_LITTLE_ENDIAN_
 0aa0 5f005f5f 4c44424c 5f4d494e 5f5f2033  _.__LDBL_MIN__ 3
 0ab0 2e333632 31303331 34333131 32303933  .362103143112093
 0ac0 35303632 36323637 37383137 33323137  5062626778173217
 0ad0 35323630 652d3439 33324c00 5f5f464c  5260e-4932L.__FL
 0ae0 5433325f 4d494e5f 31305f45 58505f5f  T32_MIN_10_EXP__
 0af0 20282d33 3729005f 5f44424c 5f484153   (-37).__DBL_HAS
 0b00 5f44454e 4f524d5f 5f203100 5f5f494e  _DENORM__ 1.__IN
 0b10 545f4c45 41535436 345f5459 50455f5f  T_LEAST64_TYPE__
 0b20 206c6f6e 6720696e 74005f5f 57434841   long int.__WCHA
 0b30 525f4d49 4e5f5f20 282d5f5f 57434841  R_MIN__ (-__WCHA
 0b40 525f4d41 585f5f20 2d203129 005f494f  R_MAX__ - 1)._IO
 0b50 5f53484f 57504f49 4e542030 34303000  _SHOWPOINT 0400.
 0b60 5f5f6f66 665f745f 64656669 6e656420  __off_t_defined 
 0b70 005f5f53 5444435f 5554465f 33325f5f  .__STDC_UTF_32__
 0b80 2031005f 5f424c4b 53495a45 5f545f54   1.__BLKSIZE_T_T
 0b90 59504520 5f5f5359 5343414c 4c5f534c  YPE __SYSCALL_SL
 0ba0 4f4e475f 54595045 005f5f49 4e545f4c  ONG_TYPE.__INT_L
 0bb0 45415354 31365f4d 41585f5f 20307837  EAST16_MAX__ 0x7
 0bc0 66666600 5f5f4c44 424c5f52 45444952  fff.__LDBL_REDIR
 0bd0 5f444543 4c286e61 6d652920 00474e55  _DECL(name) .GNU
 0be0 20433131 20372e33 2e30202d 6d74756e   C11 7.3.0 -mtun
 0bf0 653d6765 6e657269 63202d6d 61726368  e=generic -march
 0c00 3d783836 2d363420 2d676764 6233202d  =x86-64 -ggdb3 -
 0c10 66737461 636b2d70 726f7465 63746f72  fstack-protector
 0c20 2d737472 6f6e6700 5f5f5343 4841525f  -strong.__SCHAR_
 0c30 4d41585f 5f203078 3766005f 5f657874  MAX__ 0x7f.__ext
 0c40 65726e5f 616c7761 79735f69 6e6c696e  ern_always_inlin
 0c50 65206578 7465726e 205f5f61 6c776179  e extern __alway
 0c60 735f696e 6c696e65 205f5f61 74747269  s_inline __attri
 0c70 62757465 5f5f2028 285f5f67 6e755f69  bute__ ((__gnu_i
 0c80 6e6c696e 655f5f29 29005f5f 464c5436  nline__)).__FLT6
 0c90 345f4449 475f5f20 3135005f 5f494e54  4_DIG__ 15.__INT
 0ca0 5f464153 54385f54 5950455f 5f207369  _FAST8_TYPE__ si
 0cb0 676e6564 20636861 72005f5f 5049455f  gned char.__PIE_
 0cc0 5f203200 5f494f5f 6f666636 345f7420  _ 2._IO_off64_t 
 0cd0 5f5f6f66 6636345f 74005f5f 474c4942  __off64_t.__GLIB
 0ce0 435f5553 455f4945 435f3630 3535395f  C_USE_IEC_60559_
 0cf0 54595045 535f4558 54005f5f 464c5433  TYPES_EXT.__FLT3
 0d00 32585f48 41535f49 4e46494e 4954595f  2X_HAS_INFINITY_
 0d10 5f203100 5f5f5553 455f554e 49583938  _ 1.__USE_UNIX98
 0d20 005f5f55 53455f46 4f525449 46595f4c  .__USE_FORTIFY_L
 0d30 4556454c 2030005f 41544649 4c455f53  EVEL 0._ATFILE_S
 0d40 4f555243 45005f5f 5553455f 41544649  OURCE.__USE_ATFI
 0d50 4c45005f 5f55494e 545f4c45 41535438  LE.__UINT_LEAST8
 0d60 5f545950 455f5f20 756e7369 676e6564  _TYPE__ unsigned
 0d70 20636861 72005f5f 53495a45 4f465f49   char.__SIZEOF_I
 0d80 4e543132 385f5f20 3136005f 5f4e5448  NT128__ 16.__NTH
 0d90 28666374 29205f5f 61747472 69627574  (fct) __attribut
 0da0 655f5f20 28285f5f 6e6f7468 726f775f  e__ ((__nothrow_
 0db0 5f205f5f 4c454146 29292066 6374005f  _ __LEAF)) fct._
 0dc0 494f535f 4154454e 44203400 5f5f676c  IOS_ATEND 4.__gl
 0dd0 6962635f 6d616372 6f5f7761 726e696e  ibc_macro_warnin
 0de0 67286d65 73736167 6529205f 5f676c69  g(message) __gli
 0df0 62635f6d 6163726f 5f776172 6e696e67  bc_macro_warning
 0e00 31202847 43432077 61726e69 6e67206d  1 (GCC warning m
 0e10 65737361 67652900 5f5f464c 54313238  essage).__FLT128
 0e20 5f484153 5f515549 45545f4e 414e5f5f  _HAS_QUIET_NAN__
 0e30 2031005f 545f5349 5a452000 5f5f464c   1._T_SIZE .__FL
 0e40 54313238 5f4d4158 5f5f2031 2e313839  T128_MAX__ 1.189
 0e50 37333134 39353335 37323331 37363530  7314953572317650
 0e60 38353735 39333236 36323830 30373032  8575932662800702
 0e70 652b3439 33324631 32380042 55465349  e+4932F128.BUFSI
 0e80 5a205f49 4f5f4255 4653495a 005f4154  Z _IO_BUFSIZ._AT
 0e90 46494c45 5f534f55 52434520 31005f5f  FILE_SOURCE 1.__
 0ea0 464c5436 34585f44 49475f5f 20313800  FLT64X_DIG__ 18.
 0eb0 5f5f494e 545f4c45 41535431 365f5749  __INT_LEAST16_WI
 0ec0 4454485f 5f203136 005f5f46 5349445f  DTH__ 16.__FSID_
 0ed0 545f5459 50452073 74727563 74207b20  T_TYPE struct { 
 0ee0 696e7420 5f5f7661 6c5b325d 3b207d00  int __val[2]; }.
 0ef0 5f5f7373 697a655f 745f6465 66696e65  __ssize_t_define
 0f00 6420005f 545f5349 5a455f20 005f706f  d ._T_SIZE_ ._po
 0f10 73005f49 4f5f6665 72726f72 5f756e6c  s._IO_ferror_unl
 0f20 6f636b65 64285f5f 66702920 2828285f  ocked(__fp) (((_
 0f30 5f667029 2d3e5f66 6c616773 2026205f  _fp)->_flags & _
 0f40 494f5f45 52525f53 45454e29 20213d20  IO_ERR_SEEN) != 
 0f50 3029005f 5f657874 65726e5f 696e6c69  0).__extern_inli
 0f60 6e652065 78746572 6e205f5f 696e6c69  ne extern __inli
 0f70 6e65205f 5f617474 72696275 74655f5f  ne __attribute__
 0f80 2028285f 5f676e75 5f696e6c 696e655f   ((__gnu_inline_
 0f90 5f292900 5f474343 5f53495a 455f5420  _))._GCC_SIZE_T 
 0fa0 005f5f73 7475625f 7365746c 6f67696e  .__stub_setlogin
 0fb0 20005f5f 464c5433 325f4841 535f4445   .__FLT32_HAS_DE
 0fc0 4e4f524d 5f5f2031 005f5f75 6e69785f  NORM__ 1.__unix_
 0fd0 5f203100 5f5f4743 435f4841 56455f53  _ 1.__GCC_HAVE_S
 0fe0 594e435f 434f4d50 4152455f 414e445f  YNC_COMPARE_AND_
 0ff0 53574150 5f312031 005f494f 5f736176  SWAP_1 1._IO_sav
 1000 655f656e 64005f5f 464c5436 34585f4d  e_end.__FLT64X_M
 1010 494e5f45 58505f5f 20282d31 36333831  IN_EXP__ (-16381
 1020 29005f42 53445f53 495a455f 545f2000  )._BSD_SIZE_T_ .
 1030 666c6f61 74005f5f 464c545f 4449475f  float.__FLT_DIG_
 1040 5f203600 5f5f494e 545f4641 53543136  _ 6.__INT_FAST16
 1050 5f574944 54485f5f 20363400 5f5f4743  _WIDTH__ 64.__GC
 1060 435f4154 4f4d4943 5f424f4f 4c5f4c4f  C_ATOMIC_BOOL_LO
 1070 434b5f46 52454520 32005f49 4f5f6f66  CK_FREE 2._IO_of
 1080 665f7420 5f5f6f66 665f7400 5f5f7069  f_t __off_t.__pi
 1090 655f5f20 32005f53 5444494f 5f482031  e__ 2._STDIO_H 1
 10a0 005f5f44 45433332 5f4d494e 5f5f2031  .__DEC32_MIN__ 1
 10b0 452d3935 4446005f 5f494e54 4d41585f  E-95DF.__INTMAX_
 10c0 4d41585f 5f203078 37666666 66666666  MAX__ 0x7fffffff
 10d0 66666666 66666666 4c005f42 4954535f  ffffffffL._BITS_
 10e0 4c494249 4f5f4820 31005f5f 4743435f  LIBIO_H 1.__GCC_
 10f0 4945435f 35353920 32005f5f 464c5431  IEC_559 2.__FLT1
 1100 32385f4d 494e5f45 58505f5f 20282d31  28_MIN_EXP__ (-1
 1110 36333831 29002f68 6f6d652f 7562756e  6381)./home/ubun
 1120 74752f45 6e67696e 65657269 6e672f50  tu/Engineering/P
 1130 726f6772 616d6d69 6e672f44 69736173  rogramming/Disas
 1140 73656d62 6c696e67 2d42696e 61726965  sembling-Binarie
 1150 732f432f 496e7465 6c5f6172 63686974  s/C/Intel_archit
 1160 65637475 72652f41 4d443634 2f466c6f  ecture/AMD64/Flo
 1170 61745f4f 70657261 74696f6e 732f4164  at_Operations/Ad
 1180 645f466c 6f61742f 57697468 5f446562  d_Float/With_Deb
 1190 75675f49 6e666f00 5f425344 5f53495a  ug_Info._BSD_SIZ
 11a0 455f545f 44454649 4e45445f 20005f5f  E_T_DEFINED_ .__
 11b0 55494e54 5f4c4541 53543136 5f4d4158  UINT_LEAST16_MAX
 11c0 5f5f2030 78666666 66005f5f 55494e54  __ 0xffff.__UINT
 11d0 5f464153 5436345f 4d41585f 5f203078  _FAST64_MAX__ 0x
 11e0 66666666 66666666 66666666 66666666  ffffffffffffffff
 11f0 554c005f 494f5f45 52525f53 45454e20  UL._IO_ERR_SEEN 
 1200 30783230 005f5f61 74747269 62757465  0x20.__attribute
 1210 5f757365 645f5f20 5f5f6174 74726962  _used__ __attrib
 1220 7574655f 5f202828 5f5f7573 65645f5f  ute__ ((__used__
 1230 2929005f 5f617474 72696275 74655f61  )).__attribute_a
 1240 72746966 69636961 6c5f5f20 5f5f6174  rtificial__ __at
 1250 74726962 7574655f 5f202828 5f5f6172  tribute__ ((__ar
 1260 74696669 6369616c 5f5f2929 005f494f  tificial__))._IO
 1270 5f667472 796c6f63 6b66696c 65285f66  _ftrylockfile(_f
 1280 70292000 5f5f5549 4e545f4c 45415354  p) .__UINT_LEAST
 1290 385f4d41 585f5f20 30786666 005f5f47  8_MAX__ 0xff.__G
 12a0 4c494243 5f555345 5f4c4942 5f455854  LIBC_USE_LIB_EXT
 12b0 32203000 5f5f4445 43313238 5f4d494e  2 0.__DEC128_MIN
 12c0 5f455850 5f5f2028 2d363134 3229005f  _EXP__ (-6142)._
 12d0 5f4b4552 4e454c5f 53545249 43545f4e  _KERNEL_STRICT_N
 12e0 414d4553 20005f5f 57434841 525f5459  AMES .__WCHAR_TY
 12f0 50455f5f 20696e74 005f5f49 4e54385f  PE__ int.__INT8_
 1300 4d41585f 5f203078 37660067 65746328  MAX__ 0x7f.getc(
 1310 5f667029 205f494f 5f676574 6320285f  _fp) _IO_getc (_
 1320 66702900 5f5f4445 43313238 5f455053  fp).__DEC128_EPS
 1330 494c4f4e 5f5f2031 452d3333 444c005f  ILON__ 1E-33DL._
 1340 5f555345 5f504f53 49583139 39353036  _USE_POSIX199506
 1350 005f5f6e 6565645f 4e554c4c 005f5f52  .__need_NULL.__R
 1360 45444952 4543545f 4e54485f 4c44424c  EDIRECT_NTH_LDBL
 1370 286e616d 652c7072 6f746f2c 616c6961  (name,proto,alia
 1380 7329205f 5f524544 49524543 545f4e54  s) __REDIRECT_NT
 1390 4820286e 616d652c 2070726f 746f2c20  H (name, proto, 
 13a0 616c6961 7329005f 5f524544 49524543  alias).__REDIREC
 13b0 545f4e54 484e4c28 6e616d65 2c70726f  T_NTHNL(name,pro
 13c0 746f2c61 6c696173 29206e61 6d652070  to,alias) name p
 13d0 726f746f 205f5f61 736d5f5f 20285f5f  roto __asm__ (__
 13e0 41534d4e 414d4520 2823616c 69617329  ASMNAME (#alias)
 13f0 29205f5f 5448524f 574e4c00 5f5f464c  ) __THROWNL.__FL
 1400 54313238 5f4d4158 5f455850 5f5f2031  T128_MAX_EXP__ 1
 1410 36333834 005f5f46 4c545f52 41444958  6384.__FLT_RADIX
 1420 5f5f2032 005f5f46 4c543332 585f4445  __ 2.__FLT32X_DE
 1430 4e4f524d 5f4d494e 5f5f2034 2e393430  NORM_MIN__ 4.940
 1440 36353634 35383431 32343635 34343137  6564584124654417
 1450 36353638 37393238 36383232 31333732  6568792868221372
 1460 652d3332 34463332 78005f5f 676c6962  e-324F32x.__glib
 1470 635f636c 616e675f 6861735f 65787465  c_clang_has_exte
 1480 6e73696f 6e286578 74292030 005f5f50  nsion(ext) 0.__P
 1490 4d542861 72677329 20617267 73005f5f  MT(args) args.__
 14a0 4749445f 545f5459 5045205f 5f553332  GID_T_TYPE __U32
 14b0 5f545950 45005f5f 53495a45 4f465f4c  _TYPE.__SIZEOF_L
 14c0 4f4e475f 444f5542 4c455f5f 20313600  ONG_DOUBLE__ 16.
 14d0 5f5f4442 4c5f4841 535f5155 4945545f  __DBL_HAS_QUIET_
 14e0 4e414e5f 5f203100 5f5f7775 7220005f  NAN__ 1.__wur ._
 14f0 42495453 5f545950 45535f48 2031005f  BITS_TYPES_H 1._
 1500 5f4c4442 4c5f4445 4e4f524d 5f4d494e  _LDBL_DENORM_MIN
 1510 5f5f2033 2e363435 31393935 33313838  __ 3.64519953188
 1520 32343734 36303235 32383430 35393333  2474602528405933
 1530 36313934 31393832 652d3439 35314c00  61941982e-4951L.
 1540 5f5f5049 445f545f 54595045 205f5f53  __PID_T_TYPE __S
 1550 33325f54 59504500 5f5f7374 75625f66  32_TYPE.__stub_f
 1560 61747461 63682000 7379735f 6572726c  attach .sys_errl
 1570 69737400 5f5f464c 5436345f 4841535f  ist.__FLT64_HAS_
 1580 494e4649 4e495459 5f5f2031 005f5f55  INFINITY__ 1.__U
 1590 494e545f 46415354 385f4d41 585f5f20  INT_FAST8_MAX__ 
 15a0 30786666 005f5f41 544f4d49 435f484c  0xff.__ATOMIC_HL
 15b0 455f5245 4c454153 45203133 31303732  E_RELEASE 131072
 15c0 005f5f4c 44424c5f 4d41585f 4558505f  .__LDBL_MAX_EXP_
 15d0 5f203136 33383400 5f5f7374 75625f67  _ 16384.__stub_g
 15e0 74747920 005f4249 54535f54 59504553  tty ._BITS_TYPES
 15f0 495a4553 5f482031 005f5f55 5345434f  IZES_H 1.__USECO
 1600 4e44535f 545f5459 5045205f 5f553332  NDS_T_TYPE __U32
 1610 5f545950 45005f49 4f5f7065 656b6328  _TYPE._IO_peekc(
 1620 5f667029 205f494f 5f706565 6b635f75  _fp) _IO_peekc_u
 1630 6e6c6f63 6b656420 285f6670 29005f5f  nlocked (_fp).__
 1640 494e5450 54525f54 5950455f 5f206c6f  INTPTR_TYPE__ lo
 1650 6e672069 6e74005f 5f444543 36345f4d  ng int.__DEC64_M
 1660 41585f5f 20392e39 39393939 39393939  AX__ 9.999999999
 1670 39393939 39394533 38344444 00737973  999999E384DD.sys
 1680 5f6e6572 72005f5f 4743435f 41544f4d  _nerr.__GCC_ATOM
 1690 49435f49 4e545f4c 4f434b5f 46524545  IC_INT_LOCK_FREE
 16a0 2032005f 5359535f 53495a45 5f545f48   2._SYS_SIZE_T_H
 16b0 20005f5f 4d4d585f 5f203100 5f5f424c   .__MMX__ 1.__BL
 16c0 4b434e54 5f545f54 59504520 5f5f5359  KCNT_T_TYPE __SY
 16d0 5343414c 4c5f534c 4f4e475f 54595045  SCALL_SLONG_TYPE
 16e0 005f494f 5f53484f 57424153 45203032  ._IO_SHOWBASE 02
 16f0 3030005f 5f737475 625f7374 74792000  00.__stub_stty .
 1700 5f66696c 656e6f00 5f5f4841 56455f47  _fileno.__HAVE_G
 1710 454e4552 49435f53 454c4543 54494f4e  ENERIC_SELECTION
 1720 2031005f 5f524c49 4d36345f 545f5459   1.__RLIM64_T_TY
 1730 5045205f 5f555155 41445f54 59504500  PE __UQUAD_TYPE.
 1740 5f5f464c 54313238 5f4d414e 545f4449  __FLT128_MANT_DI
 1750 475f5f20 31313300 5f5f4f52 4445525f  G__ 113.__ORDER_
 1760 4c495454 4c455f45 4e444941 4e5f5f20  LITTLE_ENDIAN__ 
 1770 31323334 005f5f55 53455f58 4f50454e  1234.__USE_XOPEN
 1780 324b2031 005f5f53 495a454f 465f5054  2K 1.__SIZEOF_PT
 1790 52444946 465f545f 5f203800 5f494f53  RDIFF_T__ 8._IOS
 17a0 5f545255 4e432031 36005f5f 44454331  _TRUNC 16.__DEC1
 17b0 32385f4d 414e545f 4449475f 5f203334  28_MANT_DIG__ 34
 17c0 005f5f55 53455f49 534f4339 39203100  .__USE_ISOC99 1.
 17d0 5f5f494e 5433325f 54595045 5f5f2069  __INT32_TYPE__ i
 17e0 6e74005f 5f4b4552 4e454c5f 53545249  nt.__KERNEL_STRI
 17f0 43545f4e 414d4553 005f5f55 33325f54  CT_NAMES.__U32_T
 1800 59504520 756e7369 676e6564 20696e74  YPE unsigned int
 1810 005f5f63 6f64655f 6d6f6465 6c5f736d  .__code_model_sm
 1820 616c6c5f 5f203100 5f5f5553 455f4953  all__ 1.__USE_IS
 1830 4f433935 005f5f46 4c543634 585f4841  OC95.__FLT64X_HA
 1840 535f4445 4e4f524d 5f5f2031 005f5f44  S_DENORM__ 1.__D
 1850 45433332 5f4d4158 5f455850 5f5f2039  EC32_MAX_EXP__ 9
 1860 37005f49 4f4e4246 2032005f 5f555345  7._IONBF 2.__USE
 1870 5f49534f 43393900 73746465 72722073  _ISOC99.stderr s
 1880 74646572 72005f76 7461626c 655f6f66  tderr._vtable_of
 1890 66736574 005f475f 494f5f49 4f5f4649  fset._G_IO_IO_FI
 18a0 4c455f56 45525349 4f4e2030 78323030  LE_VERSION 0x200
 18b0 3031005f 494f5f54 4945445f 5055545f  01._IO_TIED_PUT_
 18c0 47455420 30783430 30004c5f 746d706e  GET 0x400.L_tmpn
 18d0 616d2032 30005f49 4f5f636c 65616e75  am 20._IO_cleanu
 18e0 705f7265 67696f6e 5f737461 7274285f  p_region_start(_
 18f0 6663742c 5f667029 20005f5f 53544443  fct,_fp) .__STDC
 1900 5f494543 5f353539 5f434f4d 504c4558  _IEC_559_COMPLEX
 1910 5f5f2031 005f5f47 4c494243 5f555345  __ 1.__GLIBC_USE
 1920 5f444550 52454341 5445445f 47455453  _DEPRECATED_GETS
 1930 2030005f 494f5f48 45582030 31303000   0._IO_HEX 0100.
 1940 5f5f464c 54363458 5f4d494e 5f31305f  __FLT64X_MIN_10_
 1950 4558505f 5f20282d 34393331 29005f5f  EXP__ (-4931).__
 1960 73747562 5f707574 6d736720 005f494f  stub_putmsg ._IO
 1970 5f726561 645f6261 7365005f 5f535444  _read_base.__STD
 1980 435f4953 4f5f3130 3634365f 5f203230  C_ISO_10646__ 20
 1990 31373036 4c005f5f 42454749 4e5f4445  1706L.__BEGIN_DE
 19a0 434c5320 005f494f 5f737464 696e2028  CLS ._IO_stdin (
 19b0 285f494f 5f46494c 452a2928 265f494f  (_IO_FILE*)(&_IO
 19c0 5f325f31 5f737464 696e5f29 29005f5f  _2_1_stdin_)).__
 19d0 464c5431 32385f4d 41585f31 305f4558  FLT128_MAX_10_EX
 19e0 505f5f20 34393332 005f5f46 4c543132  P__ 4932.__FLT12
 19f0 385f4d49 4e5f5f20 332e3336 32313033  8_MIN__ 3.362103
 1a00 31343331 31323039 33353036 32363236  1431120935062626
 1a10 37373831 37333231 37353236 30652d34  7781732175260e-4
 1a20 39333246 31323800 5f5f5355 5345434f  932F128.__SUSECO
 1a30 4e44535f 545f5459 5045205f 5f535953  NDS_T_TYPE __SYS
 1a40 43414c4c 5f534c4f 4e475f54 59504500  CALL_SLONG_TYPE.
 1a50 5345454b 5f454e44 2032005f 5f494e54  SEEK_END 2.__INT
 1a60 5f464153 54385f57 49445448 5f5f2038  _FAST8_WIDTH__ 8
 1a70 005f5f46 4c543634 5f4d494e 5f31305f  .__FLT64_MIN_10_
 1a80 4558505f 5f20282d 33303729 005f5f73  EXP__ (-307).__s
 1a90 7475625f 66646574 61636820 005f6e65  tub_fdetach ._ne
 1aa0 7874005f 5f44424c 5f4d4158 5f5f2028  xt.__DBL_MAX__ (
 1ab0 28646f75 626c6529 312e3739 37363933  (double)1.797693
 1ac0 31333438 36323331 35373038 31343532  1348623157081452
 1ad0 37343233 37333137 30343335 37652b33  7423731704357e+3
 1ae0 30384c29 005f4445 4641554c 545f534f  08L)._DEFAULT_SO
 1af0 55524345 2031005f 5f524c49 4d5f545f  URCE 1.__RLIM_T_
 1b00 4d415443 4845535f 524c494d 36345f54  MATCHES_RLIM64_T
 1b10 2031005f 5f616d64 36345f5f 2031005f   1.__amd64__ 1._
 1b20 5f5f5f6d 62737461 74655f74 5f646566  ___mbstate_t_def
 1b30 696e6564 2031005f 494f5f44 454c4554  ined 1._IO_DELET
 1b40 455f444f 4e545f43 4c4f5345 20307834  E_DONT_CLOSE 0x4
 1b50 30005f5f 464c5433 325f4445 43494d41  0.__FLT32_DECIMA
 1b60 4c5f4449 475f5f20 39005f5f 464c5431  L_DIG__ 9.__FLT1
 1b70 32385f44 49475f5f 20333300 5f5f5549  28_DIG__ 33.__UI
 1b80 4e543136 5f545950 455f5f20 73686f72  NT16_TYPE__ shor
 1b90 7420756e 7369676e 65642069 6e74005f  t unsigned int._
 1ba0 5f484156 455f434f 4c554d4e 20005f4f  _HAVE_COLUMN ._O
 1bb0 4c445f53 5444494f 5f4d4147 49432030  LD_STDIO_MAGIC 0
 1bc0 78464142 43303030 30005f49 4f535f4e  xFABC0000._IOS_N
 1bd0 4f435245 41544520 3332005f 5f574348  OCREATE 32.__WCH
 1be0 41525f57 49445448 5f5f2033 32005f5f  AR_WIDTH__ 32.__
 1bf0 4743435f 41544f4d 49435f43 4841525f  GCC_ATOMIC_CHAR_
 1c00 4c4f434b 5f465245 45203200 5f494f5f  LOCK_FREE 2._IO_
 1c10 6d61726b 6572005f 5f424947 47455354  marker.__BIGGEST
 1c20 5f414c49 474e4d45 4e545f5f 20313600  _ALIGNMENT__ 16.
 1c30 5f5f4c4f 4e475f4c 4f4e475f 4d41585f  __LONG_LONG_MAX_
 1c40 5f203078 37666666 66666666 66666666  _ 0x7fffffffffff
 1c50 66666666 4c4c005f 5f554c4f 4e473332  ffffLL.__ULONG32
 1c60 5f545950 4520756e 7369676e 65642069  _TYPE unsigned i
 1c70 6e74005f 5f55494e 545f4c45 41535431  nt.__UINT_LEAST1
 1c80 365f5459 50455f5f 2073686f 72742075  6_TYPE__ short u
 1c90 6e736967 6e656420 696e7400 5f5f464c  nsigned int.__FL
 1ca0 545f4d41 585f3130 5f455850 5f5f2033  T_MAX_10_EXP__ 3
 1cb0 38005f49 4f5f534b 49505753 20303100  8._IO_SKIPWS 01.
 1cc0 5f5f464c 54333258 5f455053 494c4f4e  __FLT32X_EPSILON
 1cd0 5f5f2032 2e323230 34343630 34393235  __ 2.22044604925
 1ce0 30333133 30383038 34373236 33333336  0313080847263336
 1cf0 31383136 34303632 652d3136 46333278  18164062e-16F32x
 1d00 004e554c 4c202828 766f6964 202a2930  .NULL ((void *)0
 1d10 29006172 6776005f 5f555345 5f504f53  ).argv.__USE_POS
 1d20 49585f49 4d504c49 4349544c 59203100  IX_IMPLICITLY 1.
 1d30 5f494f5f 66656f66 5f756e6c 6f636b65  _IO_feof_unlocke
 1d40 64285f5f 66702920 2828285f 5f667029  d(__fp) (((__fp)
 1d50 2d3e5f66 6c616773 2026205f 494f5f45  ->_flags & _IO_E
 1d60 4f465f53 45454e29 20213d20 3029005f  OF_SEEN) != 0)._
 1d70 5f4e4f5f 494e4c49 4e455f5f 2031005f  _NO_INLINE__ 1._
 1d80 494f5f73 74646572 72202828 5f494f5f  IO_stderr ((_IO_
 1d90 46494c45 2a292826 5f494f5f 325f315f  FILE*)(&_IO_2_1_
 1da0 73746465 72725f29 29005f5f 76615f61  stderr_)).__va_a
 1db0 72675f70 61636b28 29205f5f 6275696c  rg_pack() __buil
 1dc0 74696e5f 76615f61 72675f70 61636b20  tin_va_arg_pack 
 1dd0 2829005f 5f464c54 5f4d414e 545f4449  ().__FLT_MANT_DI
 1de0 475f5f20 3234005f 5f444144 44525f54  G__ 24.__DADDR_T
 1df0 5f545950 45205f5f 5333325f 54595045  _TYPE __S32_TYPE
 1e00 005f5f46 4c543634 5f444543 494d414c  .__FLT64_DECIMAL
 1e10 5f444947 5f5f2031 37005f5f 4743435f  _DIG__ 17.__GCC_
 1e20 48415645 5f53594e 435f434f 4d504152  HAVE_SYNC_COMPAR
 1e30 455f414e 445f5357 41505f34 2031005f  E_AND_SWAP_4 1._
 1e40 5f464c54 33325f4d 494e5f45 58505f5f  _FLT32_MIN_EXP__
 1e50 20282d31 32352900 5f5f5349 5a455f54   (-125).__SIZE_T
 1e60 5950455f 5f206c6f 6e672075 6e736967  YPE__ long unsig
 1e70 6e656420 696e7400 5f494f5f 464c4147  ned int._IO_FLAG
 1e80 53325f55 5345525f 57425546 2038005f  S2_USER_WBUF 8._
 1e90 5f4c4442 4c5f4d41 585f5f20 312e3138  _LDBL_MAX__ 1.18
 1ea0 39373331 34393533 35373233 31373635  9731495357231765
 1eb0 30323132 36333835 33303330 39373032  0212638530309702
 1ec0 31652b34 3933324c 005f5f44 45435f45  1e+4932L.__DEC_E
 1ed0 56414c5f 4d455448 4f445f5f 2032005f  VAL_METHOD__ 2._
 1ee0 5f464c54 5f4d4158 5f5f2033 2e343032  _FLT_MAX__ 3.402
 1ef0 38323334 36363338 35323838 35393831  8234663852885981
 1f00 31373034 31383334 38343531 36393235  1704183484516925
 1f10 652b3338 46005f49 4f5f7569 645f7420  e+38F._IO_uid_t 
 1f20 5f5f7569 645f7400 5f5f4442 4c5f4d49  __uid_t.__DBL_MI
 1f30 4e5f3130 5f455850 5f5f2028 2d333037  N_10_EXP__ (-307
 1f40 29005f49 4f5f325f 315f7374 64657272  )._IO_2_1_stderr
 1f50 5f005f5f 55494e54 33325f4d 41585f5f  _.__UINT32_MAX__
 1f60 20307866 66666666 66666655 005f494f   0xffffffffU._IO
 1f70 5f4f4354 20303430 005f5f46 4c543132  _OCT 040.__FLT12
 1f80 385f4841 535f494e 46494e49 54595f5f  8_HAS_INFINITY__
 1f90 2031005f 6d6f6465 005f494f 5f484156   1._mode._IO_HAV
 1fa0 455f5354 5f424c4b 53495a45 205f475f  E_ST_BLKSIZE _G_
 1fb0 48415645 5f53545f 424c4b53 495a4500  HAVE_ST_BLKSIZE.
 1fc0 5f5f464c 5436345f 4841535f 44454e4f  __FLT64_HAS_DENO
 1fd0 524d5f5f 2031005f 5f464c54 5f455641  RM__ 1.__FLT_EVA
 1fe0 4c5f4d45 54484f44 5f5f2030 005f5f46  L_METHOD__ 0.__F
 1ff0 53424c4b 434e545f 545f5459 5045205f  SBLKCNT_T_TYPE _
 2000 5f535953 43414c4c 5f554c4f 4e475f54  _SYSCALL_ULONG_T
 2010 59504500 5f5f464c 54333258 5f484153  YPE.__FLT32X_HAS
 2020 5f44454e 4f524d5f 5f203100 5f5f7838  _DENORM__ 1.__x8
 2030 365f3634 5f5f2031 005f5f46 4c543634  6_64__ 1.__FLT64
 2040 585f4d41 585f4558 505f5f20 31363338  X_MAX_EXP__ 1638
 2050 34005f5f 56455253 494f4e5f 5f202237  4.__VERSION__ "7
 2060 2e332e30 22005f49 4f5f4c49 4e4b4544  .3.0"._IO_LINKED
 2070 20307838 30005f5f 52454449 52454354   0x80.__REDIRECT
 2080 286e616d 652c7072 6f746f2c 616c6961  (name,proto,alia
 2090 7329206e 616d6520 70726f74 6f205f5f  s) name proto __
 20a0 61736d5f 5f20285f 5f41534d 4e414d45  asm__ (__ASMNAME
 20b0 20282361 6c696173 2929005f 5f465342   (#alias)).__FSB
 20c0 4c4b434e 5436345f 545f5459 5045205f  LKCNT64_T_TYPE _
 20d0 5f555155 41445f54 59504500 5f5f464c  _UQUAD_TYPE.__FL
 20e0 54363458 5f4d4158 5f5f2031 2e313839  T64X_MAX__ 1.189
 20f0 37333134 39353335 37323331 37363530  7314953572317650
 2100 32313236 33383533 30333039 37303231  2126385303097021
 2110 652b3439 33324636 3478005f 494f5f72  e+4932F64x._IO_r
 2120 6561645f 70747200 5f5f5349 5a455f54  ead_ptr.__SIZE_T
 2130 20005f5f 49445f54 5f545950 45205f5f   .__ID_T_TYPE __
 2140 5533325f 54595045 005f5f53 495a455f  U32_TYPE.__SIZE_
 2150 545f5f20 005f494f 5f66756e 6c6f636b  T__ ._IO_funlock
 2160 66696c65 285f6670 2920005f 5f4b4559  file(_fp) .__KEY
 2170 5f545f54 59504520 5f5f5333 325f5459  _T_TYPE __S32_TY
 2180 5045005f 5f494e54 5f4c4541 53543634  PE.__INT_LEAST64
 2190 5f4d4158 5f5f2030 78376666 66666666  _MAX__ 0x7ffffff
 21a0 66666666 66666666 664c005f 5f494e54  fffffffffL.__INT
 21b0 5f4c4541 5354385f 57494454 485f5f20  _LEAST8_WIDTH__ 
 21c0 38005f5f 4c44424c 5f524544 4952315f  8.__LDBL_REDIR1_
 21d0 4e544828 6e616d65 2c70726f 746f2c61  NTH(name,proto,a
 21e0 6c696173 29206e61 6d652070 726f746f  lias) name proto
 21f0 205f5f54 48524f57 005f5f55 494e5438   __THROW.__UINT8
 2200 5f4d4158 5f5f2030 78666600 5f494f5f  _MAX__ 0xff._IO_
 2210 464c4147 53325f4e 4f544341 4e43454c  FLAGS2_NOTCANCEL
 2220 2032005f 5f616c77 6179735f 696e6c69   2.__always_inli
 2230 6e65205f 5f696e6c 696e6520 5f5f6174  ne __inline __at
 2240 74726962 7574655f 5f202828 5f5f616c  tribute__ ((__al
 2250 77617973 5f696e6c 696e655f 5f292900  ways_inline__)).
 2260 5f5f5549 4e543136 5f4d4158 5f5f2030  __UINT16_MAX__ 0
 2270 78666666 66005f49 4f5f4d41 47494320  xffff._IO_MAGIC 
 2280 30784642 41443030 3030005f 5f474c49  0xFBAD0000.__GLI
 2290 42435f55 53452846 29205f5f 474c4942  BC_USE(F) __GLIB
 22a0 435f5553 455f2023 23204600 5f5f494e  C_USE_ ## F.__IN
 22b0 545f4641 53543634 5f545950 455f5f20  T_FAST64_TYPE__ 
 22c0 6c6f6e67 20696e74 00737464 696e2073  long int.stdin s
 22d0 7464696e 005f5f61 74747269 62757465  tdin.__attribute
 22e0 5f6e6f69 6e6c696e 655f5f20 5f5f6174  _noinline__ __at
 22f0 74726962 7574655f 5f202828 5f5f6e6f  tribute__ ((__no
 2300 696e6c69 6e655f5f 2929005f 5f535444  inline__)).__STD
 2310 435f5645 5253494f 4e5f5f20 32303131  C_VERSION__ 2011
 2320 31324c00 5f5f494e 544d4158 5f574944  12L.__INTMAX_WID
 2330 54485f5f 20363400 5f5f4445 4333325f  TH__ 64.__DEC32_
 2340 4d41585f 5f20392e 39393939 39394539  MAX__ 9.999999E9
 2350 36444600 5f5f474e 55435f56 415f4c49  6DF.__GNUC_VA_LI
 2360 53542000 5f5f5054 52444946 465f4d41  ST .__PTRDIFF_MA
 2370 585f5f20 30783766 66666666 66666666  X__ 0x7fffffffff
 2380 66666666 66664c00 5f5f5553 455f504f  ffffffL.__USE_PO
 2390 53495831 39393330 39005f5f 494e545f  SIX199309.__INT_
 23a0 4c454153 5431365f 54595045 5f5f2073  LEAST16_TYPE__ s
 23b0 686f7274 20696e74 005f5f46 4c543332  hort int.__FLT32
 23c0 5f4d4158 5f455850 5f5f2031 3238005f  _MAX_EXP__ 128._
 23d0 5f676e75 5f6c696e 75785f5f 2031005f  _gnu_linux__ 1._
 23e0 5f535444 5f545950 45207479 70656465  _STD_TYPE typede
 23f0 66005f5f 4d4f4445 5f545f54 59504520  f.__MODE_T_TYPE 
 2400 5f5f5533 325f5459 5045005f 5f53495a  __U32_TYPE.__SIZ
 2410 454f465f 464c4f41 54313238 5f5f2031  EOF_FLOAT128__ 1
 2420 36005f5f 474e5543 5f535444 435f494e  6.__GNUC_STDC_IN
 2430 4c494e45 5f5f2031 005f5f44 424c5f44  LINE__ 1.__DBL_D
 2440 49475f5f 20313500 5f5f4743 435f4154  IG__ 15.__GCC_AT
 2450 4f4d4943 5f434841 5231365f 545f4c4f  OMIC_CHAR16_T_LO
 2460 434b5f46 52454520 32005f5f 494e545f  CK_FREE 2.__INT_
 2470 4c454153 54385f4d 41585f5f 20307837  LEAST8_MAX__ 0x7
 2480 66005f5f 5331365f 54595045 2073686f  f.__S16_TYPE sho
 2490 72742069 6e74005f 5f4c5036 345f5f20  rt int.__LP64__ 
 24a0 31005f5f 53595343 414c4c5f 574f5244  1.__SYSCALL_WORD
 24b0 53495a45 20363400 5f5f4743 435f4154  SIZE 64.__GCC_AT
 24c0 4f4d4943 5f4c4f4e 475f4c4f 434b5f46  OMIC_LONG_LOCK_F
 24d0 52454520 32005f5f 464c5433 32585f44  REE 2.__FLT32X_D
 24e0 49475f5f 20313500 5f5f464c 54333258  IG__ 15.__FLT32X
 24f0 5f4d414e 545f4449 475f5f20 3533005f  _MANT_DIG__ 53._
 2500 494f5f77 72697465 5f626173 65005f4c  IO_write_base._L
 2510 50363420 31005f46 45415455 5245535f  P64 1._FEATURES_
 2520 48203100 5f5f464c 5433325f 4449475f  H 1.__FLT32_DIG_
 2530 5f203600 5f5f4653 574f5244 5f545f54  _ 6.__FSWORD_T_T
 2540 59504520 5f5f5359 5343414c 4c5f534c  YPE __SYSCALL_SL
 2550 4f4e475f 54595045 005f5f53 4c4f4e47  ONG_TYPE.__SLONG
 2560 574f5244 5f545950 45206c6f 6e672069  WORD_TYPE long i
 2570 6e74005f 494f5f32 5f315f73 7464696e  nt._IO_2_1_stdin
 2580 5f005f5f 7838365f 36342031 005f5f46  _.__x86_64 1.__F
 2590 4c543634 585f4d41 585f3130 5f455850  LT64X_MAX_10_EXP
 25a0 5f5f2034 39333200 5f5f4442 4c5f4d49  __ 4932.__DBL_MI
 25b0 4e5f5f20 2828646f 75626c65 29322e32  N__ ((double)2.2
 25c0 32353037 33383538 35303732 30313338  2507385850720138
 25d0 33303930 32333237 31373333 32343034  3090232717332404
 25e0 3036652d 3330384c 29005f49 4f5f325f  06e-308L)._IO_2_
 25f0 315f7374 646f7574 5f005f5f 55494e54  1_stdout_.__UINT
 2600 5f464153 5433325f 4d41585f 5f203078  _FAST32_MAX__ 0x
 2610 66666666 66666666 66666666 66666666  ffffffffffffffff
 2620 554c005f 5f46494e 4954455f 4d415448  UL.__FINITE_MATH
 2630 5f4f4e4c 595f5f20 30005f49 4f5f7361  _ONLY__ 0._IO_sa
 2640 76655f62 61736500 5f5f5531 365f5459  ve_base.__U16_TY
 2650 50452075 6e736967 6e656420 73686f72  PE unsigned shor
 2660 7420696e 7400454f 4620282d 3129005f  t int.EOF (-1)._
 2670 5f464c54 36345f4d 41585f5f 20312e37  _FLT64_MAX__ 1.7
 2680 39373639 33313334 38363233 31353730  9769313486231570
 2690 38313435 32373432 33373331 37303433  8145274237317043
 26a0 3537652b 33303846 3634005f 5f73697a  57e+308F64.__siz
 26b0 655f745f 5f20005f 5f55494e 54385f54  e_t__ .__UINT8_T
 26c0 5950455f 5f20756e 7369676e 65642063  YPE__ unsigned c
 26d0 68617200 5f494f5f 66696c65 5f666c61  har._IO_file_fla
 26e0 6773205f 666c6167 73005f5f 5553455f  gs _flags.__USE_
 26f0 584f5045 4e324b38 58534900 5f5f494e  XOPEN2K8XSI.__IN
 2700 545f4641 53543332 5f545950 455f5f20  T_FAST32_TYPE__ 
 2710 6c6f6e67 20696e74 005f494f 535f494e  long int._IOS_IN
 2720 50555420 31005f5f 4743435f 41534d5f  PUT 1.__GCC_ASM_
 2730 464c4147 5f4f5554 50555453 5f5f2031  FLAG_OUTPUTS__ 1
 2740 00707574 63285f63 682c5f66 7029205f  .putc(_ch,_fp) _
 2750 494f5f70 75746320 285f6368 2c205f66  IO_putc (_ch, _f
 2760 7029005f 5f55494e 545f4c45 41535436  p).__UINT_LEAST6
 2770 345f4d41 585f5f20 30786666 66666666  4_MAX__ 0xffffff
 2780 66666666 66666666 6666554c 005f5f50  ffffffffffUL.__P
 2790 4d54005f 5f555155 41445f54 59504520  MT.__UQUAD_TYPE 
 27a0 756e7369 676e6564 206c6f6e 6720696e  unsigned long in
 27b0 74005f5f 454c465f 5f203100 5f5f464c  t.__ELF__ 1.__FL
 27c0 54333258 5f4d494e 5f5f2032 2e323235  T32X_MIN__ 2.225
 27d0 30373338 35383530 37323031 33383330  0738585072013830
 27e0 39303233 32373137 33333234 30343036  9023271733240406
 27f0 652d3330 38463332 78005f5f 55494e54  e-308F32x.__UINT
 2800 5054525f 54595045 5f5f206c 6f6e6720  PTR_TYPE__ long 
 2810 756e7369 676e6564 20696e74 005f5f49  unsigned int.__I
 2820 4e543136 5f432863 29206300 5f5f4743  NT16_C(c) c.__GC
 2830 435f4841 56455f44 57415246 325f4346  C_HAVE_DWARF2_CF
 2840 495f4153 4d203100 5f5f5349 5a454f46  I_ASM 1.__SIZEOF
 2850 5f464c4f 41545f5f 2034005f 5f444543  _FLOAT__ 4.__DEC
 2860 33325f53 55424e4f 524d414c 5f4d494e  32_SUBNORMAL_MIN
 2870 5f5f2030 2e303030 30303145 2d393544  __ 0.000001E-95D
 2880 46005f49 4f5f4953 5f415050 454e4449  F._IO_IS_APPENDI
 2890 4e472030 78313030 30005f5f 464c5436  NG 0x1000.__FLT6
 28a0 34585f48 41535f51 55494554 5f4e414e  4X_HAS_QUIET_NAN
 28b0 5f5f2031 005f5f46 4c545f48 41535f49  __ 1.__FLT_HAS_I
 28c0 4e46494e 4954595f 5f203100 5f494f53  NFINITY__ 1._IOS
 28d0 5f4e4f52 45504c41 43452036 34005f5f  _NOREPLACE 64.__
 28e0 5354445f 54595045 005f5f55 53455f50  STD_TYPE.__USE_P
 28f0 4f534958 31393933 30392031 005f494f  OSIX199309 1._IO
 2900 5f73697a 655f7420 73697a65 5f74005f  _size_t size_t._
 2910 5f494e4f 36345f54 5f545950 45205f5f  _INO64_T_TYPE __
 2920 55515541 445f5459 5045005f 5f474e55  UQUAD_TYPE.__GNU
 2930 5f4c4942 52415259 5f5f2036 005f5f53  _LIBRARY__ 6.__S
 2940 5444435f 5f203100 5f5f676c 6962635f  TDC__ 1.__glibc_
 2950 6339395f 666c6578 6172725f 61766169  c99_flexarr_avai
 2960 6c61626c 65203100 5f5f5353 45325f5f  lable 1.__SSE2__
 2970 2031005f 5f534c4f 4e473332 5f545950   1.__SLONG32_TYP
 2980 4520696e 74005f5f 44424c5f 4d41585f  E int.__DBL_MAX_
 2990 4558505f 5f203130 3234005f 5f53495a  EXP__ 1024.__SIZ
 29a0 454f465f 4c4f4e47 5f5f2038 005f5f41  EOF_LONG__ 8.__A
 29b0 544f4d49 435f434f 4e53554d 45203100  TOMIC_CONSUME 1.
 29c0 5f5f5553 455f4649 4c455f4f 46465345  __USE_FILE_OFFSE
 29d0 54363400 5f494f5f 464c4147 53325f4d  T64._IO_FLAGS2_M
 29e0 4d415020 31005f5f 464c5433 325f4d49  MAP 1.__FLT32_MI
 29f0 4e5f5f20 312e3137 35343934 33353038  N__ 1.1754943508
 2a00 32323238 37353037 39363837 33363533  2228750796873653
 2a10 37323232 32343536 38652d33 38463332  722224568e-38F32
 2a20 005f5f57 494e545f 54595045 5f5f2075  .__WINT_TYPE__ u
 2a30 6e736967 6e656420 696e7400 5f5f5553  nsigned int.__US
 2a40 455f4d49 5343005f 494f5f63 6c65616e  E_MISC._IO_clean
 2a50 75705f72 6567696f 6e5f656e 64285f44  up_region_end(_D
 2a60 6f697429 20005f5f 494e5431 365f4d41  oit) .__INT16_MA
 2a70 585f5f20 30783766 6666005f 504f5349  X__ 0x7fff._POSI
 2a80 585f435f 534f5552 43452032 30303830  X_C_SOURCE 20080
 2a90 394c005f 5f534348 41525f57 49445448  9L.__SCHAR_WIDTH
 2aa0 5f5f2038 005f5f55 494e5433 325f4328  __ 8.__UINT32_C(
 2ab0 63292063 20232320 55005f5f 4c44424c  c) c ## U.__LDBL
 2ac0 5f4d494e 5f31305f 4558505f 5f20282d  _MIN_10_EXP__ (-
 2ad0 34393331 29005f53 5444494f 5f555345  4931)._STDIO_USE
 2ae0 535f494f 53545245 414d2000 5f5f5349  S_IOSTREAM .__SI
 2af0 5a454f46 5f444f55 424c455f 5f203800  ZEOF_DOUBLE__ 8.
 2b00 5f5f5549 4e54385f 43286329 2063005f  __UINT8_C(c) c._
 2b10 5f424c4b 434e5436 345f545f 54595045  _BLKCNT64_T_TYPE
 2b20 205f5f53 51554144 5f545950 45005f5f   __SQUAD_TYPE.__
 2b30 5553455f 464f5254 4946595f 4c455645  USE_FORTIFY_LEVE
 2b40 4c005f5f 474c4942 435f5553 455f4c49  L.__GLIBC_USE_LI
 2b50 425f4558 5432005f 5f57494e 545f4d49  B_EXT2.__WINT_MI
 2b60 4e5f5f20 3055005f 5f4c4442 4c5f4d41  N__ 0U.__LDBL_MA
 2b70 4e545f44 49475f5f 20363400 5f5f7061  NT_DIG__ 64.__pa
 2b80 6431005f 5f706164 32005f5f 70616433  d1.__pad2.__pad3
 2b90 005f5f70 61643400 5f5f7061 6435005f  .__pad4.__pad5._
 2ba0 5f535444 435f5554 465f3136 5f5f2031  _STDC_UTF_16__ 1
 2bb0 005f5f4c 44424c5f 45505349 4c4f4e5f  .__LDBL_EPSILON_
 2bc0 5f20312e 30383432 30323137 32343835  _ 1.084202172485
 2bd0 35303434 33343030 37343532 38303038  5044340074528008
 2be0 36393934 31373165 2d31394c 005f5f62  6994171e-19L.__b
 2bf0 6f733028 70747229 205f5f62 75696c74  os0(ptr) __built
 2c00 696e5f6f 626a6563 745f7369 7a652028  in_object_size (
 2c10 7074722c 20302900 5f494f4c 42462031  ptr, 0)._IOLBF 1
 2c20 005f5f61 74747269 62757465 5f666f72  .__attribute_for
 2c30 6d61745f 6172675f 5f287829 205f5f61  mat_arg__(x) __a
 2c40 74747269 62757465 5f5f2028 285f5f66  ttribute__ ((__f
 2c50 6f726d61 745f6172 675f5f20 28782929  ormat_arg__ (x))
 2c60 29005f5f 5f5f4649 4c455f64 6566696e  ).____FILE_defin
 2c70 65642031 005f5f4c 44424c5f 4841535f  ed 1.__LDBL_HAS_
 2c80 494e4649 4e495459 5f5f2031 005f5f55  INFINITY__ 1.__U
 2c90 53455f50 4f534958 2031005f 5f494e4f  SE_POSIX 1.__INO
 2ca0 5f545f4d 41544348 45535f49 4e4f3634  _T_MATCHES_INO64
 2cb0 5f542031 005f5f47 43435f49 45435f35  _T 1.__GCC_IEC_5
 2cc0 35395f43 4f4d504c 45582032 005f5f53  59_COMPLEX 2.__S
 2cd0 49475f41 544f4d49 435f4d49 4e5f5f20  IG_ATOMIC_MIN__ 
 2ce0 282d5f5f 5349475f 41544f4d 49435f4d  (-__SIG_ATOMIC_M
 2cf0 41585f5f 202d2031 29005f49 4f5f494e  AX__ - 1)._IO_IN
 2d00 5f424143 4b555020 30783130 30005f49  _BACKUP 0x100._I
 2d10 4f5f666c 6f636b66 696c6528 5f667029  O_flockfile(_fp)
 2d20 20005f5f 53495a45 4f465f57 43484152   .__SIZEOF_WCHAR
 2d30 5f545f5f 2034005f 5f617474 72696275  _T__ 4.__attribu
 2d40 74655f64 65707265 63617465 645f5f20  te_deprecated__ 
 2d50 5f5f6174 74726962 7574655f 5f202828  __attribute__ ((
 2d60 5f5f6465 70726563 61746564 5f5f2929  __deprecated__))
 2d70 005f5f46 4c543132 385f4d49 4e5f3130  .__FLT128_MIN_10
 2d80 5f455850 5f5f2028 2d343933 3129005f  _EXP__ (-4931)._
 2d90 5f464c4f 41545f57 4f52445f 4f524445  _FLOAT_WORD_ORDE
 2da0 525f5f20 5f5f4f52 4445525f 4c495454  R__ __ORDER_LITT
 2db0 4c455f45 4e444941 4e5f5f00 5f5f4743  LE_ENDIAN__.__GC
 2dc0 435f4841 56455f53 594e435f 434f4d50  C_HAVE_SYNC_COMP
 2dd0 4152455f 414e445f 53574150 5f322031  ARE_AND_SWAP_2 1
 2de0 005f475f 48415645 5f4d5245 4d415020  ._G_HAVE_MREMAP 
 2df0 31005f5f 44454333 325f4d41 4e545f44  1.__DEC32_MANT_D
 2e00 49475f5f 2037005f 5f464c54 33325f44  IG__ 7.__FLT32_D
 2e10 454e4f52 4d5f4d49 4e5f5f20 312e3430  ENORM_MIN__ 1.40
 2e20 31323938 34363433 32343831 37303730  1298464324817070
 2e30 39323337 32393538 33323839 39313631  9237295832899161
 2e40 33652d34 35463332 005f5f6e 6565645f  3e-45F32.__need_
 2e50 73697a65 5f74005f 5f55494e 545f4641  size_t.__UINT_FA
 2e60 53543136 5f4d4158 5f5f2030 78666666  ST16_MAX__ 0xfff
 2e70 66666666 66666666 66666666 66554c00  fffffffffffffUL.
 2e80 5f5f6e65 65645f5f 5f76615f 6c697374  __need___va_list
 2e90 005f5f49 4e543332 5f4d4158 5f5f2030  .__INT32_MAX__ 0
 2ea0 78376666 66666666 66005f49 4f5f494e  x7fffffff._IO_IN
 2eb0 5445524e 414c2030 3130005f 5f5f696e  TERNAL 010.___in
 2ec0 745f7369 7a655f74 5f682000 5f5f676c  t_size_t_h .__gl
 2ed0 6962635f 6c696b65 6c792863 6f6e6429  ibc_likely(cond)
 2ee0 205f5f62 75696c74 696e5f65 78706563   __builtin_expec
 2ef0 74202828 636f6e64 292c2031 29005f5f  t ((cond), 1).__
 2f00 41544f4d 49435f41 43515549 52452032  ATOMIC_ACQUIRE 2
 2f10 005f5f55 494e5431 365f4328 63292063  .__UINT16_C(c) c
 2f20 00616464 5f666c6f 61742e63 005f5f49  .add_float.c.__I
 2f30 4e543634 5f4d4158 5f5f2030 78376666  NT64_MAX__ 0x7ff
 2f40 66666666 66666666 66666666 664c005f  fffffffffffffL._
 2f50 5f6e6565 645f7369 7a655f74 20005f5f  _need_size_t .__
 2f60 626f7328 70747229 205f5f62 75696c74  bos(ptr) __built
 2f70 696e5f6f 626a6563 745f7369 7a652028  in_object_size (
 2f80 7074722c 205f5f55 53455f46 4f525449  ptr, __USE_FORTI
 2f90 46595f4c 4556454c 203e2031 29005f5f  FY_LEVEL > 1).__
 2fa0 55574f52 445f5459 50452075 6e736967  UWORD_TYPE unsig
 2fb0 6e656420 6c6f6e67 20696e74 005f5f47  ned long int.__G
 2fc0 4c494243 5f4d494e 4f525f5f 20323700  LIBC_MINOR__ 27.
 2fd0 5f5f5345 475f4753 2031005f 5f535345  __SEG_GS 1.__SSE
 2fe0 5f4d4154 485f5f20 31005f5f 4e4c494e  _MATH__ 1.__NLIN
 2ff0 4b5f545f 54595045 205f5f53 59534341  K_T_TYPE __SYSCA
 3000 4c4c5f55 4c4f4e47 5f545950 45005f5f  LL_ULONG_TYPE.__
 3010 55494e54 4d41585f 54595045 5f5f206c  UINTMAX_TYPE__ l
 3020 6f6e6720 756e7369 676e6564 20696e74  ong unsigned int
 3030 005f5f55 53455f58 4f50454e 324b005f  .__USE_XOPEN2K._
 3040 5f737475 625f6663 68666c61 67732000  _stub_fchflags .
 3050 5f5f4c45 4146202c 205f5f6c 6561665f  __LEAF , __leaf_
 3060 5f005f5f 44454331 32385f4d 41585f45  _.__DEC128_MAX_E
 3070 58505f5f 20363134 35005f49 4f5f4c45  XP__ 6145._IO_LE
 3080 46542030 32005f5f 666f7274 6966795f  FT 02.__fortify_
 3090 66756e63 74696f6e 205f5f65 78746572  function __exter
 30a0 6e5f616c 77617973 5f696e6c 696e6520  n_always_inline 
 30b0 5f5f6174 74726962 7574655f 61727469  __attribute_arti
 30c0 66696369 616c5f5f 005f5f46 4c545f45  ficial__.__FLT_E
 30d0 5053494c 4f4e5f5f 20312e31 39323039  PSILON__ 1.19209
 30e0 32383935 35303738 31323530 30303030  2895507812500000
 30f0 30303030 30303030 30303030 3030652d  00000000000000e-
 3100 3746005f 5f534947 5f41544f 4d49435f  7F.__SIG_ATOMIC_
 3110 57494454 485f5f20 3332005f 5f434f4e  WIDTH__ 32.__CON
 3120 43415428 782c7929 20782023 23207900  CAT(x,y) x ## y.
 3130 5f5f6174 74726962 7574655f 64657072  __attribute_depr
 3140 65636174 65645f6d 73675f5f 286d7367  ecated_msg__(msg
 3150 29205f5f 61747472 69627574 655f5f20  ) __attribute__ 
 3160 28285f5f 64657072 65636174 65645f5f  ((__deprecated__
 3170 20286d73 67292929 005f5f53 4852545f   (msg))).__SHRT_
 3180 4d41585f 5f203078 37666666 005f5f47  MAX__ 0x7fff.__G
 3190 43435f41 544f4d49 435f5743 4841525f  CC_ATOMIC_WCHAR_
 31a0 545f4c4f 434b5f46 52454520 32005f49  T_LOCK_FREE 2._I
 31b0 4f5f5045 4e44494e 475f4f55 54505554  O_PENDING_OUTPUT
 31c0 5f434f55 4e54285f 66702920 28285f66  _COUNT(_fp) ((_f
 31d0 70292d3e 5f494f5f 77726974 655f7074  p)->_IO_write_pt
 31e0 72202d20 285f6670 292d3e5f 494f5f77  r - (_fp)->_IO_w
 31f0 72697465 5f626173 6529005f 494f5f55  rite_base)._IO_U
 3200 5345525f 4c4f434b 20307838 30303000  SER_LOCK 0x8000.
 3210 5f5f4f52 4445525f 5044505f 454e4449  __ORDER_PDP_ENDI
 3220 414e5f5f 20333431 32005f49 4f5f554e  AN__ 3412._IO_UN
 3230 49464945 445f4a55 4d505441 424c4553  IFIED_JUMPTABLES
 3240 20310054 4d505f4d 41582032 33383332   1.TMP_MAX 23832
 3250 38005f49 4f5f6e65 65645f6c 6f636b28  8._IO_need_lock(
 3260 5f667029 20282828 5f667029 2d3e5f66  _fp) (((_fp)->_f
 3270 6c616773 32202620 5f494f5f 464c4147  lags2 & _IO_FLAG
 3280 53325f4e 4545445f 4c4f434b 2920213d  S2_NEED_LOCK) !=
 3290 20302900 5f5f464c 545f4445 43494d41   0).__FLT_DECIMA
 32a0 4c5f4449 475f5f20 39005f5f 7761726e  L_DIG__ 9.__warn
 32b0 6465636c 286e616d 652c6d73 67292065  decl(name,msg) e
 32c0 78746572 6e20766f 6964206e 616d6520  xtern void name 
 32d0 28766f69 6429205f 5f617474 72696275  (void) __attribu
 32e0 74655f5f 28285f5f 7761726e 696e675f  te__((__warning_
 32f0 5f20286d 73672929 29005f5f 464c5436  _ (msg))).__FLT6
 3300 345f4d41 585f3130 5f455850 5f5f2033  4_MAX_10_EXP__ 3
 3310 3038005f 5f535452 494e4728 78292023  08.__STRING(x) #
 3320 78005f5f 4c44424c 5f4d494e 5f455850  x.__LDBL_MIN_EXP
 3330 5f5f2028 2d313633 38312900 5f5f5749  __ (-16381).__WI
 3340 4e545f57 49445448 5f5f2033 32005f49  NT_WIDTH__ 32._I
 3350 4f5f5348 4f57504f 53203032 30303000  O_SHOWPOS 02000.
 3360 5f494f5f 72656164 5f656e64 005f5f46  _IO_read_end.__F
 3370 4c543634 585f4d49 4e5f5f20 332e3336  LT64X_MIN__ 3.36
 3380 32313033 31343331 31323039 33353036  2103143112093506
 3390 32363236 37373831 37333231 37353236  2626778173217526
 33a0 30652d34 39333246 36347800 5f494f53  0e-4932F64x._IOS
 33b0 5f4f5554 50555420 32005f5f 494e545f  _OUTPUT 2.__INT_
 33c0 46415354 385f4d41 585f5f20 30783766  FAST8_MAX__ 0x7f
 33d0 005f5f52 45474953 5445525f 50524546  .__REGISTER_PREF
 33e0 49585f5f 20005f5f 464c5433 325f4550  IX__ .__FLT32_EP
 33f0 53494c4f 4e5f5f20 312e3139 32303932  SILON__ 1.192092
 3400 38393535 30373831 32353030 30303030  8955078125000000
 3410 30303030 30303030 30303030 30652d37  0000000000000e-7
 3420 46333200 5f5f474c 4942435f 494e5445  F32.__GLIBC_INTE
 3430 524e414c 5f535441 5254494e 475f4845  RNAL_STARTING_HE
 3440 41444552 5f494d50 4c454d45 4e544154  ADER_IMPLEMENTAT
 3450 494f4e20 005f5f53 574f5244 5f545950  ION .__SWORD_TYP
 3460 45206c6f 6e672069 6e74005f 5f4c4f4e  E long int.__LON
 3470 475f4d41 585f5f20 30783766 66666666  G_MAX__ 0x7fffff
 3480 66666666 66666666 66664c00 5f5f7374  ffffffffffL.__st
 3490 75625f67 65746d73 6720005f 5f444543  ub_getmsg .__DEC
 34a0 36345f4d 41585f45 58505f5f 20333835  64_MAX_EXP__ 385
 34b0 005f5f46 4c543332 585f4d49 4e5f3130  .__FLT32X_MIN_10
 34c0 5f455850 5f5f2028 2d333037 29005f5f  _EXP__ (-307).__
 34d0 5553455f 504f5349 5832005f 494f5f55  USE_POSIX2._IO_U
 34e0 4e495442 55462030 32303030 30005f5f  NITBUF 020000.__
 34f0 4f46465f 545f5459 5045205f 5f535953  OFF_T_TYPE __SYS
 3500 43414c4c 5f534c4f 4e475f54 59504500  CALL_SLONG_TYPE.
 3510 5f5f5549 4e544d41 585f4328 63292063  __UINTMAX_C(c) c
 3520 20232320 554c005f 5f434841 5233325f   ## UL.__CHAR32_
 3530 54595045 5f5f2075 6e736967 6e656420  TYPE__ unsigned 
 3540 696e7400 5f5f464c 54363458 5f484153  int.__FLT64X_HAS
 3550 5f494e46 494e4954 595f5f20 31005f42  _INFINITY__ 1._B
 3560 4954535f 475f434f 4e464947 5f482031  ITS_G_CONFIG_H 1
 3570 005f5f44 45433132 385f4d49 4e5f5f20  .__DEC128_MIN__ 
 3580 31452d36 31343344 4c005f5f 464c5433  1E-6143DL.__FLT3
 3590 32585f4d 494e5f45 58505f5f 20282d31  2X_MIN_EXP__ (-1
 35a0 30323129 005f494f 5f676574 635f756e  021)._IO_getc_un
 35b0 6c6f636b 6564285f 66702920 285f494f  locked(_fp) (_IO
 35c0 5f424520 28285f66 70292d3e 5f494f5f  _BE ((_fp)->_IO_
 35d0 72656164 5f707472 203e3d20 285f6670  read_ptr >= (_fp
 35e0 292d3e5f 494f5f72 6561645f 656e642c  )->_IO_read_end,
 35f0 20302920 3f205f5f 75666c6f 7720285f   0) ? __uflow (_
 3600 66702920 3a202a28 756e7369 676e6564  fp) : *(unsigned
 3610 20636861 72202a29 20285f66 70292d3e   char *) (_fp)->
 3620 5f494f5f 72656164 5f707472 2b2b2900  _IO_read_ptr++).
 3630 5f5f494e 54505452 5f574944 54485f5f  __INTPTR_WIDTH__
 3640 20363400 5f5f494e 4f5f545f 54595045   64.__INO_T_TYPE
 3650 205f5f53 59534341 4c4c5f55 4c4f4e47   __SYSCALL_ULONG
 3660 5f545950 45005f5f 55494e54 5f464153  _TYPE.__UINT_FAS
 3670 54385f54 5950455f 5f20756e 7369676e  T8_TYPE__ unsign
 3680 65642063 68617200 5f5f494e 5433325f  ed char.__INT32_
 3690 43286329 2063005f 5f465346 494c434e  C(c) c.__FSFILCN
 36a0 5436345f 545f5459 5045205f 5f555155  T64_T_TYPE __UQU
 36b0 41445f54 59504500 5f5f4c44 424c5f48  AD_TYPE.__LDBL_H
 36c0 41535f51 55494554 5f4e414e 5f5f2031  AS_QUIET_NAN__ 1
 36d0 005f5f47 4e55435f 50415443 484c4556  .__GNUC_PATCHLEV
 36e0 454c5f5f 2030005f 5f57494e 545f4d41  EL__ 0.__WINT_MA
 36f0 585f5f20 30786666 66666666 66665500  X__ 0xffffffffU.
 3700 5f5f6174 74726962 7574655f 6e6f6e73  __attribute_nons
 3710 7472696e 675f5f20 005f494f 5f4d4147  tring__ ._IO_MAG
 3720 49435f4d 41534b20 30784646 46463030  IC_MASK 0xFFFF00
 3730 3030005f 5f6c696e 75782031 005f5f47  00.__linux 1.__G
 3740 4c494243 5f555345 5f494543 5f363035  LIBC_USE_IEC_605
 3750 35395f46 554e4353 5f455854 005f494f  59_FUNCS_EXT._IO
 3760 5f76615f 6c697374 205f5f67 6e75635f  _va_list __gnuc_
 3770 76615f6c 69737400 5f475f42 55465349  va_list._G_BUFSI
 3780 5a203831 3932005f 5f4c4442 4c5f5245  Z 8192.__LDBL_RE
 3790 44495231 286e616d 652c7072 6f746f2c  DIR1(name,proto,
 37a0 616c6961 7329206e 616d6520 70726f74  alias) name prot
 37b0 6f005f5f 61747472 69627574 655f6d61  o.__attribute_ma
 37c0 6c6c6f63 5f5f205f 5f617474 72696275  lloc__ __attribu
 37d0 74655f5f 2028285f 5f6d616c 6c6f635f  te__ ((__malloc_
 37e0 5f292900 5f5f5549 4e543332 5f545950  _)).__UINT32_TYP
 37f0 455f5f20 756e7369 676e6564 20696e74  E__ unsigned int
 3800 005f5f4c 44424c5f 52454449 525f4e54  .__LDBL_REDIR_NT
 3810 48286e61 6d652c70 726f746f 29206e61  H(name,proto) na
 3820 6d652070 726f746f 205f5f54 48524f57  me proto __THROW
 3830 005f5f55 53455f58 4f50454e 324b3800  .__USE_XOPEN2K8.
 3840 5f494f5f 55505045 52434153 45203031  _IO_UPPERCASE 01
 3850 30303000 505f746d 70646972 20222f74  000.P_tmpdir "/t
 3860 6d702200 5f5f5245 44495245 43545f4e  mp".__REDIRECT_N
 3870 5448286e 616d652c 70726f74 6f2c616c  TH(name,proto,al
 3880 69617329 206e616d 65207072 6f746f20  ias) name proto 
 3890 5f5f6173 6d5f5f20 285f5f41 534d4e41  __asm__ (__ASMNA
 38a0 4d452028 23616c69 61732929 205f5f54  ME (#alias)) __T
 38b0 48524f57 005f5f55 53455f58 4f50454e  HROW.__USE_XOPEN
 38c0 005f5f46 4c543132 385f4550 53494c4f  .__FLT128_EPSILO
 38d0 4e5f5f20 312e3932 35393239 39343433  N__ 1.9259299443
 38e0 38373233 35383533 30353539 37373934  8723585305597794
 38f0 32353834 39323733 32652d33 34463132  258492732e-34F12
 3900 3800464f 50454e5f 4d415820 3136005f  8.FOPEN_MAX 16._
 3910 494f5f46 494c455f 706c7573 005f504f  IO_FILE_plus._PO
 3920 5349585f 435f534f 55524345 005f5f54  SIX_C_SOURCE.__T
 3930 48524f57 205f5f61 74747269 62757465  HROW __attribute
 3940 5f5f2028 285f5f6e 6f746872 6f775f5f  __ ((__nothrow__
 3950 205f5f4c 45414629 29005f5f 53495a45   __LEAF)).__SIZE
 3960 4f465f4c 4f4e475f 4c4f4e47 5f5f2038  OF_LONG_LONG__ 8
 3970 005f5641 5f4c4953 545f4445 46494e45  ._VA_LIST_DEFINE
 3980 4420005f 5f55494e 545f4641 53543332  D .__UINT_FAST32
 3990 5f545950 455f5f20 6c6f6e67 20756e73  _TYPE__ long uns
 39a0 69676e65 6420696e 74005f5f 53485254  igned int.__SHRT
 39b0 5f574944 54485f5f 20313600 5f5f5353  _WIDTH__ 16.__SS
 39c0 45325f4d 4154485f 5f203100 5f5f5353  E2_MATH__ 1.__SS
 39d0 495a455f 545f5459 5045205f 5f53574f  IZE_T_TYPE __SWO
 39e0 52445f54 59504500 5f5f5336 345f5459  RD_TYPE.__S64_TY
 39f0 5045206c 6f6e6720 696e7400 5f5f6174  PE long int.__at
 3a00 74726962 7574655f 70757265 5f5f205f  tribute_pure__ _
 3a10 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 3a20 5f707572 655f5f29 29005f5f 494e544d  _pure__)).__INTM
 3a30 41585f43 28632920 63202323 204c005f  AX_C(c) c ## L._
 3a40 494f5f69 636f6e76 5f74205f 475f6963  IO_iconv_t _G_ic
 3a50 6f6e765f 74005f5f 494e545f 46415354  onv_t.__INT_FAST
 3a60 33325f57 49445448 5f5f2036 34005f5f  32_WIDTH__ 64.__
 3a70 5553455f 584f5045 4e324b38 2031005f  USE_XOPEN2K8 1._
 3a80 5f494e54 5f4c4541 53543634 5f574944  _INT_LEAST64_WID
 3a90 54485f5f 20363400 5f5f474c 4942435f  TH__ 64.__GLIBC_
 3aa0 5553455f 4945435f 36303535 395f5459  USE_IEC_60559_TY
 3ab0 5045535f 45585420 30005f5f 494e5438  PES_EXT 0.__INT8
 3ac0 5f432863 29206300 5f5f5349 5a454f46  _C(c) c.__SIZEOF
 3ad0 5f504f49 4e544552 5f5f2038 005f5f46  _POINTER__ 8.__F
 3ae0 4c543634 5f455053 494c4f4e 5f5f2032  LT64_EPSILON__ 2
 3af0 2e323230 34343630 34393235 30333133  .220446049250313
 3b00 30383038 34373236 33333336 31383136  0808472633361816
 3b10 34303632 652d3136 46363400 5f494f5f  4062e-16F64._IO_
 3b20 76615f6c 69737420 5f475f76 615f6c69  va_list _G_va_li
 3b30 7374005f 5f464c54 3634585f 4d414e54  st.__FLT64X_MANT
 3b40 5f444947 5f5f2036 34005f44 45464155  _DIG__ 64._DEFAU
 3b50 4c545f53 4f555243 45005f5f 57434841  LT_SOURCE.__WCHA
 3b60 525f4d41 585f5f20 30783766 66666666  R_MAX__ 0x7fffff
 3b70 6666005f 494f5f42 55465349 5a205f47  ff._IO_BUFSIZ _G
 3b80 5f425546 53495a00 5f5f4653 46494c43  _BUFSIZ.__FSFILC
 3b90 4e545f54 5f545950 45205f5f 53595343  NT_T_TYPE __SYSC
 3ba0 414c4c5f 554c4f4e 475f5459 5045005f  ALL_ULONG_TYPE._
 3bb0 494f5f42 41445f53 45454e20 30783430  IO_BAD_SEEN 0x40
 3bc0 3030005f 5f776172 6e617474 72286d73  00.__warnattr(ms
 3bd0 6729205f 5f617474 72696275 74655f5f  g) __attribute__
 3be0 28285f5f 7761726e 696e675f 5f20286d  ((__warning__ (m
 3bf0 73672929 29005f5f 494e545f 57494454  sg))).__INT_WIDT
 3c00 485f5f20 3332005f 5f4c4442 4c5f4445  H__ 32.__LDBL_DE
 3c10 43494d41 4c5f4449 475f5f20 3231005f  CIMAL_DIG__ 21._
 3c20 5f474343 5f41544f 4d49435f 504f494e  _GCC_ATOMIC_POIN
 3c30 5445525f 4c4f434b 5f465245 45203200  TER_LOCK_FREE 2.
 3c40 5f5f7374 75625f5f 5f636f6d 7061745f  __stub___compat_
 3c50 6264666c 75736820 00464f50 454e5f4d  bdflush .FOPEN_M
 3c60 4158005f 6c6f636b 005f5f53 45475f46  AX._lock.__SEG_F
 3c70 53203100 5f5f5028 61726773 29206172  S 1.__P(args) ar
 3c80 6773005f 5f54494d 455f545f 54595045  gs.__TIME_T_TYPE
 3c90 205f5f53 59534341 4c4c5f53 4c4f4e47   __SYSCALL_SLONG
 3ca0 5f545950 45005f5f 55494e54 5f464153  _TYPE.__UINT_FAS
 3cb0 5431365f 54595045 5f5f206c 6f6e6720  T16_TYPE__ long 
 3cc0 756e7369 676e6564 20696e74 005f5f47  unsigned int.__G
 3cd0 4c494243 5f5f2032 005f494f 5f737464  LIBC__ 2._IO_std
 3ce0 6f757420 28285f49 4f5f4649 4c452a29  out ((_IO_FILE*)
 3cf0 28265f49 4f5f325f 315f7374 646f7574  (&_IO_2_1_stdout
 3d00 5f292900 5f5f5553 45525f4c 4142454c  _)).__USER_LABEL
 3d10 5f505245 4649585f 5f20005f 494f5f70  _PREFIX__ ._IO_p
 3d20 69645f74 205f5f70 69645f74 005f5f67  id_t __pid_t.__g
 3d30 6c696263 5f6d6163 726f5f77 61726e69  libc_macro_warni
 3d40 6e673128 6d657373 61676529 205f5072  ng1(message) _Pr
 3d50 61676d61 2028236d 65737361 67652900  agma (#message).
 3d60 5f5f4743 435f4154 4f4d4943 5f434841  __GCC_ATOMIC_CHA
 3d70 5233325f 545f4c4f 434b5f46 52454520  R32_T_LOCK_FREE 
 3d80 32005f6f 6c645f6f 66667365 74005f49  2._old_offset._I
 3d90 4f5f4649 4c45005f 494f5f55 4e425546  O_FILE._IO_UNBUF
 3da0 46455245 44203200 5f5f4348 41525f42  FERED 2.__CHAR_B
 3db0 49545f5f 2038005f 5f434c4f 434b5f54  IT__ 8.__CLOCK_T
 3dc0 5f545950 45205f5f 53595343 414c4c5f  _TYPE __SYSCALL_
 3dd0 534c4f4e 475f5459 5045005f 5f41544f  SLONG_TYPE.__ATO
 3de0 4d49435f 52454c41 58454420 30005f49  MIC_RELAXED 0._I
 3df0 4f5f7373 697a655f 74205f5f 7373697a  O_ssize_t __ssiz
 3e00 655f7400 5f5f5354 44435f48 4f535445  e_t.__STDC_HOSTE
 3e10 445f5f20 31005f5f 53495a45 5f574944  D__ 1.__SIZE_WID
 3e20 54485f5f 20363400 5f5f5245 44495245  TH__ 64.__REDIRE
 3e30 43545f4c 44424c28 6e616d65 2c70726f  CT_LDBL(name,pro
 3e40 746f2c61 6c696173 29205f5f 52454449  to,alias) __REDI
 3e50 52454354 20286e61 6d652c20 70726f74  RECT (name, prot
 3e60 6f2c2061 6c696173 29005f5f 616c7761  o, alias).__alwa
 3e70 79735f69 6e6c696e 65005f5f 6861735f  ys_inline.__has_
 3e80 696e636c 75646528 53545229 205f5f68  include(STR) __h
 3e90 61735f69 6e636c75 64655f5f 28535452  as_include__(STR
 3ea0 29005f5f 6e656564 5f5f5f76 615f6c69  ).__need___va_li
 3eb0 73742000 5f5f4153 4d4e414d 45322870  st .__ASMNAME2(p
 3ec0 72656669 782c636e 616d6529 205f5f53  refix,cname) __S
 3ed0 5452494e 47202870 72656669 78292063  TRING (prefix) c
 3ee0 6e616d65 005f494f 5f534349 454e5449  name._IO_SCIENTI
 3ef0 46494320 30343030 30005f49 4f5f7065  FIC 04000._IO_pe
 3f00 656b635f 756e6c6f 636b6564 285f6670  ekc_unlocked(_fp
 3f10 2920285f 494f5f42 45202828 5f667029  ) (_IO_BE ((_fp)
 3f20 2d3e5f49 4f5f7265 61645f70 7472203e  ->_IO_read_ptr >
 3f30 3d20285f 6670292d 3e5f494f 5f726561  = (_fp)->_IO_rea
 3f40 645f656e 642c2030 29202626 205f5f75  d_end, 0) && __u
 3f50 6e646572 666c6f77 20285f66 7029203d  nderflow (_fp) =
 3f60 3d20454f 46203f20 454f4620 3a202a28  = EOF ? EOF : *(
 3f70 756e7369 676e6564 20636861 72202a29  unsigned char *)
 3f80 20285f66 70292d3e 5f494f5f 72656164   (_fp)->_IO_read
 3f90 5f707472 29005f5f 4c4f4e47 5f574944  _ptr).__LONG_WID
 3fa0 54485f5f 20363400 5f5f5549 4e543634  TH__ 64.__UINT64
 3fb0 5f4d4158 5f5f2030 78666666 66666666  _MAX__ 0xfffffff
 3fc0 66666666 66666666 66554c00 5f5f5351  fffffffffUL.__SQ
 3fd0 5541445f 54595045 206c6f6e 6720696e  UAD_TYPE long in
 3fe0 74005f5f 5553455f 584f5045 4e324b58  t.__USE_XOPEN2KX
 3ff0 5349005f 5f617474 72696275 74655f61  SI.__attribute_a
 4000 6c6c6f63 5f73697a 655f5f28 70617261  lloc_size__(para
 4010 6d732920 5f5f6174 74726962 7574655f  ms) __attribute_
 4020 5f202828 5f5f616c 6c6f635f 73697a65  _ ((__alloc_size
 4030 5f5f2070 6172616d 73292900 5f494f5f  __ params))._IO_
 4040 77696e74 5f742077 696e745f 74005f5f  wint_t wint_t.__
 4050 6b382031 005f5f47 43435f41 544f4d49  k8 1.__GCC_ATOMI
 4060 435f4c4c 4f4e475f 4c4f434b 5f465245  C_LLONG_LOCK_FRE
 4070 45203200 5f5f4445 4336345f 4d494e5f  E 2.__DEC64_MIN_
 4080 4558505f 5f20282d 33383229 005f5f72  EXP__ (-382).__r
 4090 65737472 6963745f 61727220 5f5f7265  estrict_arr __re
 40a0 73747269 6374005f 5f41544f 4d49435f  strict.__ATOMIC_
 40b0 4143515f 52454c20 34005f49 4f5f6670  ACQ_REL 4._IO_fp
 40c0 6f735f74 205f475f 66706f73 5f74005f  os_t _G_fpos_t._
 40d0 5f617474 72696275 74655f66 6f726d61  _attribute_forma
 40e0 745f7374 72666d6f 6e5f5f28 612c6229  t_strfmon__(a,b)
 40f0 205f5f61 74747269 62757465 5f5f2028   __attribute__ (
 4100 285f5f66 6f726d61 745f5f20 285f5f73  (__format__ (__s
 4110 7472666d 6f6e5f5f 2c20612c 20622929  trfmon__, a, b))
 4120 29005f5f 44454333 325f4d49 4e5f4558  ).__DEC32_MIN_EX
 4130 505f5f20 282d3934 29005f49 4f5f4649  P__ (-94)._IO_FI
 4140 58454420 30313030 3030005f 5f494e54  XED 010000.__INT
 4150 36345f54 5950455f 5f206c6f 6e672069  64_TYPE__ long i
 4160 6e74005f 5f464c54 5f4d494e 5f5f2031  nt.__FLT_MIN__ 1
 4170 2e313735 34393433 35303832 32323837  .175494350822287
 4180 35303739 36383733 36353337 32323232  5079687365372222
 4190 34353638 652d3338 46005f5f 5536345f  4568e-38F.__U64_
 41a0 54595045 20756e73 69676e65 64206c6f  TYPE unsigned lo
 41b0 6e672069 6e74005f 73627566 005f494f  ng int._sbuf._IO
 41c0 5f76615f 6c697374 00737464 6f757420  _va_list.stdout 
 41d0 7374646f 7574005f 5f555345 5f474e55  stdout.__USE_GNU
 41e0 005f5f54 494d4552 5f545f54 59504520  .__TIMER_T_TYPE 
 41f0 766f6964 202a005f 494f5f77 72697465  void *._IO_write
 4200 5f707472 005f5f46 5853525f 5f203100  _ptr.__FXSR__ 1.
 4210 5f5f4c45 41465f41 54545220 5f5f6174  __LEAF_ATTR __at
 4220 74726962 7574655f 5f202828 5f5f6c65  tribute__ ((__le
 4230 61665f5f 2929005f 5f494e54 385f5459  af__)).__INT8_TY
 4240 50455f5f 20736967 6e656420 63686172  PE__ signed char
 4250 005f5f49 4e545f4c 45415354 33325f57  .__INT_LEAST32_W
 4260 49445448 5f5f2033 32005f5f 53595343  IDTH__ 32.__SYSC
 4270 414c4c5f 534c4f4e 475f5459 5045205f  ALL_SLONG_TYPE _
 4280 5f534c4f 4e47574f 52445f54 59504500  _SLONGWORD_TYPE.
 4290 5f5f5549 4e544d41 585f4d41 585f5f20  __UINTMAX_MAX__ 
 42a0 30786666 66666666 66666666 66666666  0xffffffffffffff
 42b0 6666554c 005f5f67 6c696263 5f636c61  ffUL.__glibc_cla
 42c0 6e675f70 72657265 71286d61 6a2c6d69  ng_prereq(maj,mi
 42d0 6e292030 005f494f 5f626163 6b75705f  n) 0._IO_backup_
 42e0 62617365 005f5f6c 696e7578 5f5f2031  base.__linux__ 1
 42f0 005f5f50 49435f5f 2032005f 5f494e54  .__PIC__ 2.__INT
 4300 5f4c4541 53543332 5f545950 455f5f20  _LEAST32_TYPE__ 
 4310 696e7400 5f5f5549 4e545f4c 45415354  int.__UINT_LEAST
 4320 36345f54 5950455f 5f206c6f 6e672075  64_TYPE__ long u
 4330 6e736967 6e656420 696e7400 5f494f5f  nsigned int._IO_
 4340 70757463 5f756e6c 6f636b65 64285f63  putc_unlocked(_c
 4350 682c5f66 70292028 5f494f5f 42452028  h,_fp) (_IO_BE (
 4360 285f6670 292d3e5f 494f5f77 72697465  (_fp)->_IO_write
 4370 5f707472 203e3d20 285f6670 292d3e5f  _ptr >= (_fp)->_
 4380 494f5f77 72697465 5f656e64 2c203029  IO_write_end, 0)
 4390 203f205f 5f6f7665 72666c6f 7720285f   ? __overflow (_
 43a0 66702c20 28756e73 69676e65 64206368  fp, (unsigned ch
 43b0 61722920 285f6368 2929203a 2028756e  ar) (_ch)) : (un
 43c0 7369676e 65642063 68617229 20282a28  signed char) (*(
 43d0 5f667029 2d3e5f49 4f5f7772 6974655f  _fp)->_IO_write_
 43e0 7074722b 2b203d20 285f6368 29292900  ptr++ = (_ch))).
 43f0 5f504f53 49585f53 4f555243 45203100  _POSIX_SOURCE 1.
 4400 5f494f5f 444f4e54 5f434c4f 53452030  _IO_DONT_CLOSE 0
 4410 31303030 3030005f 5f474c49 42435f55  100000.__GLIBC_U
 4420 53455f49 45435f36 30353539 5f424650  SE_IEC_60559_BFP
 4430 5f455854 005f5f53 495a455f 4d41585f  _EXT.__SIZE_MAX_
 4440 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 4450 66666666 554c005f 5f554944 5f545f54  ffffUL.__UID_T_T
 4460 59504520 5f5f5533 325f5459 5045005f  YPE __U32_TYPE._
 4470 5f554c4f 4e47574f 52445f54 59504520  _ULONGWORD_TYPE 
 4480 756e7369 676e6564 206c6f6e 6720696e  unsigned long in
 4490 74005f5f 4743435f 41544f4d 49435f53  t.__GCC_ATOMIC_S
 44a0 484f5254 5f4c4f43 4b5f4652 45452032  HORT_LOCK_FREE 2
 44b0 005f5f46 4c543634 585f4445 43494d41  .__FLT64X_DECIMA
 44c0 4c5f4449 475f5f20 32310053 45454b5f  L_DIG__ 21.SEEK_
 44d0 53455420 30005f5f 5553455f 584f5045  SET 0.__USE_XOPE
 44e0 4e5f4558 54454e44 4544005f 5f494e54  N_EXTENDED.__INT
 44f0 5f464153 5431365f 4d41585f 5f203078  _FAST16_MAX__ 0x
 4500 37666666 66666666 66666666 66666666  7fffffffffffffff
 4510 4c005f5f 464c545f 4d41585f 4558505f  L.__FLT_MAX_EXP_
 4520 5f203132 38005f5f 464c5436 345f4d49  _ 128.__FLT64_MI
 4530 4e5f4558 505f5f20 282d3130 32312900  N_EXP__ (-1021).
 4540 5f494f53 5f415050 454e4420 38005f5f  _IOS_APPEND 8.__
 4550 474c4942 435f494e 5445524e 414c5f53  GLIBC_INTERNAL_S
 4560 54415254 494e475f 48454144 45525f49  TARTING_HEADER_I
 4570 4d504c45 4d454e54 4154494f 4e005f5f  MPLEMENTATION.__
 4580 464c545f 4556414c 5f4d4554 484f445f  FLT_EVAL_METHOD_
 4590 54535f31 38363631 5f335f5f 2030005f  TS_18661_3__ 0._
 45a0 5f44424c 5f484153 5f494e46 494e4954  _DBL_HAS_INFINIT
 45b0 595f5f20 31005f5f 61747472 69627574  Y__ 1.__attribut
 45c0 655f7761 726e5f75 6e757365 645f7265  e_warn_unused_re
 45d0 73756c74 5f5f205f 5f617474 72696275  sult__ __attribu
 45e0 74655f5f 2028285f 5f776172 6e5f756e  te__ ((__warn_un
 45f0 75736564 5f726573 756c745f 5f292900  used_result__)).
 4600 5f5f494e 5436345f 43286329 20632023  __INT64_C(c) c #
 4610 23204c00 5f5f454e 445f4445 434c5320  # L.__END_DECLS 
 4620 005f5f46 4c545f48 41535f51 55494554  .__FLT_HAS_QUIET
 4630 5f4e414e 5f5f2031 005f5f53 495a454f  _NAN__ 1.__SIZEO
 4640 465f494e 545f5f20 34005f5f 434c4f43  F_INT__ 4.__CLOC
 4650 4b49445f 545f5459 5045205f 5f533332  KID_T_TYPE __S32
 4660 5f545950 45005f5f 494e545f 46415354  _TYPE.__INT_FAST
 4670 31365f54 5950455f 5f206c6f 6e672069  16_TYPE__ long i
 4680 6e74005f 5f535444 435f4945 435f3535  nt.__STDC_IEC_55
 4690 395f5f20 31005f5f 44454331 32385f53  9__ 1.__DEC128_S
 46a0 55424e4f 524d414c 5f4d494e 5f5f2030  UBNORMAL_MIN__ 0
 46b0 2e303030 30303030 30303030 30303030  .000000000000000
 46c0 30303030 30303030 30303030 30303030  0000000000000000
 46d0 3031452d 36313433 444c005f 5f555345  01E-6143DL.__USE
 46e0 5f4c4152 47454649 4c45005f 5f53495a  _LARGEFILE.__SIZ
 46f0 454f465f 464c4f41 5438305f 5f203136  EOF_FLOAT80__ 16
 4700 005f5f46 4c543332 585f4841 535f5155  .__FLT32X_HAS_QU
 4710 4945545f 4e414e5f 5f203100 5f5f4442  IET_NAN__ 1.__DB
 4720 4c5f4d41 585f3130 5f455850 5f5f2033  L_MAX_10_EXP__ 3
 4730 3038005f 5f555345 5f4d4953 43203100  08.__USE_MISC 1.
 4740 5f5f4758 585f4142 495f5645 5253494f  __GXX_ABI_VERSIO
 4750 4e203130 3131005f 5f706963 5f5f2032  N 1011.__pic__ 2
 4760 005f5f41 544f4d49 435f5245 4c454153  .__ATOMIC_RELEAS
 4770 45203300 5f5f5353 455f5f20 31005f49  E 3.__SSE__ 1._I
 4780 4f5f4e4f 5f524541 44532034 005f5f47  O_NO_READS 4.__G
 4790 4c494243 5f555345 5f494543 5f363035  LIBC_USE_IEC_605
 47a0 35395f46 554e4353 5f455854 2030006d  59_FUNCS_EXT 0.m
 47b0 61696e00 5f53495a 45545f20 005f5f46  ain._SIZET_ .__F
 47c0 4c543132 385f4445 4e4f524d 5f4d494e  LT128_DENORM_MIN
 47d0 5f5f2036 2e343735 31373531 31393433  __ 6.47517511943
 47e0 38303235 31313039 32343433 38393538  8025110924438958
 47f0 32323736 34363535 652d3439 36364631  22764655e-4966F1
 4800 3238005f 5f474c49 42435f55 53455f49  28.__GLIBC_USE_I
 4810 45435f36 30353539 5f424650 5f455854  EC_60559_BFP_EXT
 4820 2030005f 5f737475 625f7265 766f6b65   0.__stub_revoke
 4830 20005f5f 494e544d 41585f54 5950455f   .__INTMAX_TYPE_
 4840 5f206c6f 6e672069 6e74005f 5f464c54  _ long int.__FLT
 4850 5f4d494e 5f455850 5f5f2028 2d313235  _MIN_EXP__ (-125
 4860 29005f5f 5353505f 5354524f 4e475f5f  ).__SSP_STRONG__
 4870 2033005f 5f657272 6f726465 636c286e   3.__errordecl(n
 4880 616d652c 6d736729 20657874 65726e20  ame,msg) extern 
 4890 766f6964 206e616d 65202876 6f696429  void name (void)
 48a0 205f5f61 74747269 62757465 5f5f2828   __attribute__((
 48b0 5f5f6572 726f725f 5f20286d 73672929  __error__ (msg))
 48c0 29005f5f 44454331 32385f4d 41585f5f  ).__DEC128_MAX__
 48d0 20392e39 39393939 39393939 39393939   9.9999999999999
 48e0 39393939 39393939 39393939 39393939  9999999999999999
 48f0 39393939 45363134 34444c00 5f424954  9999E6144DL._BIT
 4900 535f5354 44494f5f 4c494d5f 48203100  S_STDIO_LIM_H 1.
 4910 5f5f4154 4f4d4943 5f484c45 5f414351  __ATOMIC_HLE_ACQ
 4920 55495245 20363535 3336005f 5f4f4646  UIRE 65536.__OFF
 4930 36345f54 5f545950 45205f5f 53515541  64_T_TYPE __SQUA
 4940 445f5459 5045005f 5f555345 5f49534f  D_TYPE.__USE_ISO
 4950 43313100 5f494f5f 53544449 4f203034  C11._IO_STDIO 04
 4960 30303030 005f5f44 45565f54 5f545950  0000.__DEV_T_TYP
 4970 45205f5f 55515541 445f5459 5045005f  E __UQUAD_TYPE._
 4980 5f435055 5f4d4153 4b5f5459 5045205f  _CPU_MASK_TYPE _
 4990 5f535953 43414c4c 5f554c4f 4e475f54  _SYSCALL_ULONG_T
 49a0 59504500 5f5f5549 4e545f4c 45415354  YPE.__UINT_LEAST
 49b0 33325f4d 41585f5f 20307866 66666666  32_MAX__ 0xfffff
 49c0 66666655 005f494f 5f424528 65787072  fffU._IO_BE(expr
 49d0 2c726573 29205f5f 6275696c 74696e5f  ,res) __builtin_
 49e0 65787065 63742028 28657870 72292c20  expect ((expr), 
 49f0 72657329 005f5f41 534d4e41 4d452863  res).__ASMNAME(c
 4a00 6e616d65 29205f5f 41534d4e 414d4532  name) __ASMNAME2
 4a10 20285f5f 55534552 5f4c4142 454c5f50   (__USER_LABEL_P
 4a20 52454649 585f5f2c 20636e61 6d652900  REFIX__, cname).
 4a30 5f5f464c 54333258 5f4d4158 5f31305f  __FLT32X_MAX_10_
 4a40 4558505f 5f203330 38005f5f 616d6436  EXP__ 308.__amd6
 4a50 34203100 5f5f574f 52445349 5a452036  4 1.__WORDSIZE 6
 4a60 34005f5f 756e6978 2031005f 63686169  4.__unix 1._chai
 4a70 6e005f5f 464c5436 345f4445 4e4f524d  n.__FLT64_DENORM
 4a80 5f4d494e 5f5f2034 2e393430 36353634  _MIN__ 4.9406564
 4a90 35383431 32343635 34343137 36353638  5841246544176568
 4aa0 37393238 36383232 31333732 652d3332  792868221372e-32
 4ab0 34463634 004c5f63 7465726d 69642039  4F64.L_ctermid 9
 4ac0 005f5f50 54524449 46465f54 5950455f  .__PTRDIFF_TYPE_
 4ad0 5f206c6f 6e672069 6e74005f 5f464c54  _ long int.__FLT
 4ae0 33325f4d 41585f31 305f4558 505f5f20  32_MAX_10_EXP__ 
 4af0 3338005f 5f574f52 4453495a 455f5449  38.__WORDSIZE_TI
 4b00 4d453634 5f434f4d 50415433 32203100  ME64_COMPAT32 1.
 4b10 5f5f464c 54313238 5f444543 494d414c  __FLT128_DECIMAL
 4b20 5f444947 5f5f2033 36005f5f 50545244  _DIG__ 36.__PTRD
 4b30 4946465f 57494454 485f5f20 3634005f  IFF_WIDTH__ 64._
 4b40 5f494e54 5f4c4541 53543332 5f4d4158  _INT_LEAST32_MAX
 4b50 5f5f2030 78376666 66666666 66005f5f  __ 0x7fffffff.__
 4b60 55494e54 5f464153 5436345f 54595045  UINT_FAST64_TYPE
 4b70 5f5f206c 6f6e6720 756e7369 676e6564  __ long unsigned
 4b80 20696e74 005f5f73 7475625f 7373746b   int.__stub_sstk
 4b90 20005f49 4f5f6670 6f733634 5f74205f   ._IO_fpos64_t _
 4ba0 475f6670 6f733634 5f74005f 5f544852  G_fpos64_t.__THR
 4bb0 4f574e4c 205f5f61 74747269 62757465  OWNL __attribute
 4bc0 5f5f2028 285f5f6e 6f746872 6f775f5f  __ ((__nothrow__
 4bd0 2929005f 5f4c4442 4c5f4d41 585f3130  )).__LDBL_MAX_10
 4be0 5f455850 5f5f2034 39333200 5f5f4445  _EXP__ 4932.__DE
 4bf0 4336345f 4d494e5f 5f203145 2d333833  C64_MIN__ 1E-383
 4c00 4444005f 5f464c54 33325f4d 41585f5f  DD.__FLT32_MAX__
 4c10 20332e34 30323832 33343636 33383532   3.4028234663852
 4c20 38383539 38313137 30343138 33343834  8859811704183484
 4c30 35313639 3235652b 33384633 32005f5f  516925e+38F32.__
 4c40 44424c5f 45505349 4c4f4e5f 5f202828  DBL_EPSILON__ ((
 4c50 646f7562 6c652932 2e323230 34343630  double)2.2204460
 4c60 34393235 30333133 30383038 34373236  4925031308084726
 4c70 33333336 31383136 34303632 652d3136  333618164062e-16
 4c80 4c29005f 6375725f 636f6c75 6d6e005f  L)._cur_column._
 4c90 5f505241 474d415f 52454445 46494e45  _PRAGMA_REDEFINE
 4ca0 5f455854 4e414d45 2031005f 5f534947  _EXTNAME 1.__SIG
 4cb0 5f41544f 4d49435f 54595045 5f5f2069  _ATOMIC_TYPE__ i
 4cc0 6e74005f 5f464c54 3634585f 44454e4f  nt.__FLT64X_DENO
 4cd0 524d5f4d 494e5f5f 20332e36 34353139  RM_MIN__ 3.64519
 4ce0 39353331 38383234 37343630 32353238  9531882474602528
 4cf0 34303539 33333631 39343139 3832652d  40593361941982e-
 4d00 34393531 46363478 005f5f55 53455f50  4951F64x.__USE_P
 4d10 4f534958 005f5f46 4c543132 385f4841  OSIX.__FLT128_HA
 4d20 535f4445 4e4f524d 5f5f2031 005f494f  S_DENORM__ 1._IO
 4d30 5f435552 52454e54 4c595f50 55545449  _CURRENTLY_PUTTI
 4d40 4e472030 78383030 005f5f44 424c5f44  NG 0x800.__DBL_D
 4d50 4543494d 414c5f44 49475f5f 20313700  ECIMAL_DIG__ 17.
 4d60 5f5f4c44 424c5f48 41535f44 454e4f52  __LDBL_HAS_DENOR
 4d70 4d5f5f20 31005f75 6e757365 6432005f  M__ 1._unused2._
 4d80 494f5f62 75665f62 61736500 5f5f7374  IO_buf_base.__st
 4d90 75625f6c 63686d6f 6420005f 5f464c54  ub_lchmod .__FLT
 4da0 36345f4d 414e545f 4449475f 5f203533  64_MANT_DIG__ 53
 4db0 005f5f44 45433634 5f4d414e 545f4449  .__DEC64_MANT_DI
 4dc0 475f5f20 3136005f 5f464c54 5f484153  G__ 16.__FLT_HAS
 4dd0 5f44454e 4f524d5f 5f203100 5f5f4445  _DENORM__ 1.__DE
 4de0 43494d41 4c5f4449 475f5f20 323100    CIMAL_DIG__ 21. 
Contents of section .debug_macro:
 0000 04000200 00000007 0f010000 03000103  ................
 0010 1f070717 09000004 03010507 39090000  ............9...
 0020 031b0806 1f4e4500 00032109 07490900  .....NE...!..I..
 0030 0003a803 0a07e70a 000003ab 030b074f  ...............O
 0040 0c000004 03ac030c 0407650c 00000403  ..........e.....
 0050 c0030d03 0a0e07af 0c000004 04040707  ................
 0060 0d000004 073b0d00 00032102 074b0d00  .....;....!..K..
 0070 00040323 030518ef 14000003 1b0b074f  ...#...........O
 0080 0c000004 07e20d00 00038201 0f07400e  ..............@.
 0090 00000406 cc01de28 00000403 24100502  .......(....$...
 00a0 622c0000 04032511 0502642c 00000405  b,....%...d,....
 00b0 27d62a00 00032904 051dda10 00000323  '.*...)........#
 00c0 12072e0f 00000313 0207440f 00000403  ..........D.....
 00d0 15130502 1f1b0000 0407640f 00000407  ..........d.....
 00e0 8c0f0000 03351407 e40f0000 0407f40f  .....5..........
 00f0 00000407 c0110000 03830115 07061200  ................
 0100 00040734 12000003 8d060604 04040004  ...4............
 0110 00000500 3d290000 05000b23 00000500  ....=).....#....
 0120 9f2b0000 0500710b 00000500 043e0000  .+....q......>..
 0130 05006a07 00000500 99050000 0500d136  ..j............6
 0140 00000500 52200000 0500db3d 00000500  ....R .....=....
 0150 41090000 0500fe2e 00000500 61470000  A...........aG..
 0160 0500a740 00000500 ad290000 05005747  ...@.....)....WG
 0170 00000500 f1420000 05008c10 00000500  .....B..........
 0180 ba0c0000 05002326 00000500 0e250000  ......#&.....%..
 0190 05009724 00000500 39460000 05009b29  ...$....9F.....)
 01a0 00000500 5a390000 05007209 00000500  ....Z9....r.....
 01b0 48280000 0500ec2a 00000500 b6140000  H(.....*........
 01c0 05003707 00000500 a83d0000 0500171c  ..7......=......
 01d0 00000500 58170000 05005007 00000500  ....X.....P.....
 01e0 10320000 05007b0a 00000500 8f2d0000  .2....{......-..
 01f0 0500c83a 00000500 581e0000 0500c14a  ...:....X......J
 0200 00000500 e6120000 0500212a 00000500  ..........!*....
 0210 32480000 05000e30 00000500 14070000  2H.....0........
 0220 05002735 00000500 ab4c0000 05003742  ..'5.....L....7B
 0230 00000500 b9080000 0500d017 00000500  ................
 0240 4b410000 0500b726 00000500 7c1b0000  KA.....&....|...
 0250 0500e437 00000500 9f090000 0500e809  ...7............
 0260 00000500 9a230000 0500fb42 00000500  .....#.....B....
 0270 0c0b0000 0500530d 00000500 731c0000  ......S.....s...
 0280 0500120a 00000500 14430000 05009b0c  .........C......
 0290 00000500 66460000 0500fc26 00000500  ....fF.....&....
 02a0 ac220000 05006636 00000500 a63c0000  ."....f6.....<..
 02b0 05008339 00000500 5e4b0000 05003e16  ...9....^K....>.
 02c0 00000500 fa270000 05007a3e 00000500  .....'....z>....
 02d0 a1030000 05004047 00000500 280c0000  ......@G....(...
 02e0 05007931 00000500 3b080000 05006b34  ..y1....;.....k4
 02f0 00000500 301c0000 05005a3b 00000500  ....0.....Z;....
 0300 2a0b0000 0500e736 00000500 572b0000  *......6....W+..
 0310 05006423 00000500 35440000 0500932a  ..d#....5D.....*
 0320 00000500 aa390000 0500f63b 00000500  .....9.....;....
 0330 963f0000 0500b106 00000500 db1b0000  .?..............
 0340 05003c33 00000500 2a4b0000 0500163e  ..<3....*K.....>
 0350 00000500 b7100000 05002a3a 00000500  ..........*:....
 0360 90420000 05001035 00000500 24230000  .B.....5....$#..
 0370 05000c00 00000500 cd2c0000 05000331  .........,.....1
 0380 00000500 f9120000 0500662a 00000500  ..........f*....
 0390 912e0000 05002d2f 00000500 f9210000  ......-/.....!..
 03a0 05006022 00000500 521f0000 0500a83f  ..`"....R......?
 03b0 00000500 6a240000 0500ba3a 00000500  ....j$.....:....
 03c0 ab210000 0500a90b 00000500 1d280000  .!...........(..
 03d0 0500b00e 00000500 3f4b0000 05008836  ........?K.....6
 03e0 00000500 51420000 05008321 00000500  ....QB.....!....
 03f0 00460000 05007f3a 00000500 84120000  .F.....:........
 0400 0500002b 00000500 ae110000 0500112f  ...+.........../
 0410 00000500 a4490000 0500a52a 00000500  .....I.....*....
 0420 63270000 0500dd07 00000500 ba330000  c'...........3..
 0430 05005b1a 00000500 eb440000 05004410  ..[......D....D.
 0440 00000500 c1090000 0500563a 00000500  ..........V:....
 0450 7a030000 05000a03 00000500 8d150000  z...............
 0460 0500572e 00000500 fa250000 0500ca11  ..W......%......
 0470 00000500 1a020000 05003036 00000500  ..........06....
 0480 d8040000 0500ea10 00000500 b52c0000  .............,..
 0490 0500d71f 00000500 7e450000 0500c91e  ........~E......
 04a0 00000500 15140000 0500d31d 00000500  ................
 04b0 36100000 05004b48 00000500 cc000000  6.....KH........
 04c0 05001245 00000500 9c1c0000 05009432  ...E...........2
 04d0 00000500 df1e0000 05006341 00000500  ..........cA....
 04e0 c9300000 0500d606 00000500 c74d0000  .0...........M..
 04f0 0500b528 00000500 21460000 05000308  ...(....!F......
 0500 00000500 39240000 05006203 00000500  ....9$....b.....
 0510 281f0000 05008629 00000500 1c470000  (......).....G..
 0520 0500494d 00000500 a31a0000 0500a825  ..IM...........%
 0530 00000500 3e4c0000 0500c601 00000500  ....>L..........
 0540 f70a0000 05009f45 00000500 d0140000  .......E........
 0550 0500672b 00000500 28090000 05002233  ..g+....(....."3
 0560 00000500 ba2a0000 0500c115 00000500  .....*..........
 0570 d34b0000 0500dc4d 00000500 073c0000  .K.....M.....<..
 0580 05008f1e 00000500 a20a0000 0500b12b  ...............+
 0590 00000500 ff140000 0500604d 00000500  ..........`M....
 05a0 752c0000 0500b836 00000500 7b020000  u,.....6....{...
 05b0 05002425 00000500 3f1e0000 0500dc0a  ..$%....?.......
 05c0 00000500 b9230000 0500db4a 00000500  .....#.....J....
 05d0 521b0000 0500034c 00000500 e6290000  R......L.....)..
 05e0 0500e633 00000500 072e0000 0500b20f  ...3............
 05f0 00000500 9c000000 05009f08 00000500  ................
 0600 9b4d0000 05008a0c 00000500 26450000  .M..........&E..
 0610 0500711a 00000500 b5000000 0500fa32  ..q............2
 0620 00000500 011e0000 05006f26 00000500  ..........o&....
 0630 75060000 0500dd3a 00000500 724a0000  u......:....rJ..
 0640 0500c01f 00000500 74150000 05002a00  ........t.....*.
 0650 00000500 40170000 05006a1b 00000500  ....@.....j.....
 0660 fa100000 0500712d 00000500 fc130000  ......q-........
 0670 0500ce19 00000500 104b0000 05003c0e  .........K....<.
 0680 00000500 e9190000 0500c138 00000500  ...........8....
 0690 bd470000 0500154d 00000500 791f0000  .G.....M....y...
 06a0 0500180e 00000500 e8240000 0500d624  .........$.....$
 06b0 00000500 8a350000 0500b134 00000500  .....5.....4....
 06c0 4c010000 0500304a 00000500 3f030000  L.....0J....?...
 06d0 0500fe03 00000500 bc270000 0500c01c  .........'......
 06e0 00000500 25140000 05001420 00000500  ....%...... ....
 06f0 fa0c0000 05000147 00000500 333b0000  .......G....3;..
 0700 05009e0e 00000500 06100000 05004019  ..............@.
 0710 00000500 39200000 05008d25 00000500  ....9 .....%....
 0720 b1440000 0500dc20 00000500 6d330000  .D..... ....m3..
 0730 05000b01 00000500 c34c0000 05003518  .........L....5.
 0740 00000500 44350000 05009a28 00000500  ....D5.....(....
 0750 f22d0000 05002241 00000500 4d180000  .-...."A....M...
 0760 0500a110 00000500 38230000 0500eb08  ........8#......
 0770 00000500 5b280000 0500b14d 00000500  ....[(.....M....
 0780 74400000 05009b34 00000500 ec4b0000  t@.....4.....K..
 0790 05005716 00000500 ac010000 05006b00  ..W...........k.
 07a0 00000500 aa170000 0500b412 00000500  ................
 07b0 62300000 05007135 00000500 c2480000  b0....q5.....H..
 07c0 05002413 00000500 96460000 0500d133  ..$......F.....3
 07d0 00000500 043d0000 05002224 00000500  .....=...."$....
 07e0 6f1d0000 0500d40f 00000500 bc2d0000  o............-..
 07f0 05001a1e 00000500 91020000 05005c10  ..............\.
 0800 00000500 ee1b0000 05004824 00000500  ..........H$....
 0810 603d0000 05008d31 00000500 92440000  `=.....1.....D..
 0820 05008616 00000500 b8240000 05005540  .........$....U@
 0830 00000500 6e010000 05001f3c 00000500  ....n......<....
 0840 2c280000 05008f4c 00000500 62480000  ,(.....L....bH..
 0850 0500760d 00000500 222d0000 05007004  ..v....."-....p.
 0860 00000500 85170000 05004a4a 00000500  ..........JJ....
 0870 131b0000 05008225 00000500 2c200000  .......%...., ..
 0880 0500eb46 00000500 0b240000 05001049  ...F.....$.....I
 0890 00000500 a5150000 05002627 00000500  ..........&'....
 08a0 4e400000 05005903 00000500 11180000  N@....Y.........
 08b0 0500b216 00000500 74470000 05006829  ........tG....h)
 08c0 00000500 05420000 0500db2f 00000500  .....B...../....
 08d0 bc390000 0500693c 00000500 d02f0000  .9....i<...../..
 08e0 0500cf23 00000500 33370000 0500e542  ...#....37.....B
 08f0 00000500 35370000 0500624a 00000500  ....57....bJ....
 0900 c90f0000 0500644a 00000500 b2270000  ......dJ.....'..
 0910 0500d208 00000004 00000513 d5020000  ................
 0920 05268346 0000052e fa180000 053a7b19  .&.F.........:{.
 0930 0000053d 650a0000 00040000 05189610  ...=e...........
 0940 0000051a 24340000 00040000 05131625  ....$4.........%
 0950 00000677 47490000 06786b18 00000679  ...wGI...xk....y
 0960 28180000 067a8807 0000067b 094d0000  (....z.....{.M..
 0970 067cce34 0000067d 88230000 067e3f13  .|.4...}.#...~?.
 0980 0000067f b5380000 068001d6 44000006  .....8......D...
 0990 8101140d 00000682 01313000 00068301  .........10.....
 09a0 e23f0000 06840131 38000006 8501ea26  .?.....18......&
 09b0 00000686 01db4600 00068701 aa050000  ......F.........
 09c0 068801c0 29000006 89013c2a 0000068a  ....).....<*....
 09d0 01460d00 00068b01 d7410000 068c012e  .F.......A......
 09e0 2b000006 8d01e317 0000068e 016d0500  +............m..
 09f0 00059301 cf120000 059e0184 04000005  ................
 0a00 ac01b542 000005b0 018b2200 0006dc01  ...B......".....
 0a10 4a3b0000 05dd01e5 1a000005 e301e602  J;..............
 0a20 000005e9 01c11700 0005ef01 63090000  ............c...
 0a30 05840217 1d000006 8602c806 00000587  ................
 0a40 02f04300 00068802 1d390000 0589027b  ..C......9.....{
 0a50 2a000005 ac028d2c 000005b0 02540900  *......,.....T..
 0a60 0005b402 e9280000 05b80217 08000005  .....(..........
 0a70 bc027517 000006bd 02281800 0005be02  ..u......(......
 0a80 63090000 06bf026b 18000005 c002c117  c......k........
 0a90 000005c4 026e3a00 0006c502 370d0000  .....n:.....7...
 0aa0 05c6028d 0e000005 f0023347 000005f4  ..........3G....
 0ab0 02970700 00058303 210d0000 058b0315  ........!.......
 0ac0 19000006 9a03f307 0000059b 032b2900  .............+).
 0ad0 00059f03 cd3c0000 05a003bd 2f000005  .....<....../...
 0ae0 a2031106 00000004 00000513 ef030000  ................
 0af0 02225f5f 50000623 8d270000 052a5030  ."__P..#.'...*P0
 0b00 0000052b 10420000 05372d39 00000538  ...+.B...7-9...8
 0b10 ab4b0000 05398b0d 0000053a 5a080000  .K...9.....:Z...
 0b20 05596a14 0000055e 743c0000 055f8d14  .Yj....^t<..._..
 0b30 00000564 1b310000 05651333 00000568  ...d.1...e.3...h
 0b40 470a0000 05709619 00000571 14460000  G....p.....q.F..
 0b50 05765e2f 00000577 ed2b0000 057aaa32  .v^/...w.+...z.2
 0b60 0000057c c33b0000 057d7348 0000058a  ...|.;...}sH....
 0b70 016e0200 00058b01 48290000 05a90176  .n......H).....v
 0b80 20000005 b0016438 000005b2 01a71300   .....d8........
 0b90 0005b501 f5490000 05b601b4 3e000005  .....I......>...
 0ba0 cb01b237 000005d3 01f33f00 0005dd01  ...7......?.....
 0bb0 fc390000 05e4013d 05000005 ed010512  .9.....=........
 0bc0 000005ee 01d52200 0005f601 372d0000  ......".....7-..
 0bd0 05800230 31000005 8d02212c 00000597  ...01.....!,....
 0be0 02cf4000 0005a002 a6070000 05a802b6  ..@.............
 0bf0 45000005 b102e814 000006b9 026a3e00  E............j>.
 0c00 0005ba02 23220000 05c30233 12000005  ....#".....3....
 0c10 d502530f 000005d6 023b0c00 0005df02  ..S......;......
 0c20 86300000 05e502aa 1d000005 e602fd04  .0..............
 0c30 000005fa 028d4000 00058903 3c040000  ......@.....<...
 0c40 058a03cc 2e000005 a0030037 00000004  ...........7....
 0c50 00000504 544a0000 050cf34a 0000050e  ....TJ.....J....
 0c60 a2240000 00040000 05c20387 37000005  .$..........7...
 0c70 c303df05 000005c4 03c22100 0005c503  ..........!.....
 0c80 01380000 05c603c4 0b000005 c803283e  .8............(>
 0c90 000005c9 035d1300 0005d403 2d3d0000  .....]......-=..
 0ca0 05d503cc 0d000005 e7030817 00000004  ................
 0cb0 0000050a 403c0000 050b2b08 0000050c  ....@<....+.....
 0cc0 58150000 050d3f30 0000050e 8d1a0000  X.....?0........
 0cd0 050f8c34 00000510 d8150000 05118c4d  ...4...........M
 0ce0 00000512 5e190000 05132348 00000514  ....^.....#H....
 0cf0 a10f0000 0515350a 00000516 854b0000  ......5......K..
 0d00 0517f316 00000004 00000625 422b0000  ...........%B+..
 0d10 052a9d12 0000062f 17440000 05330348  .*...../.D...3.H
 0d20 00000638 3d370000 053c8d47 00000641  ...8=7...<.G...A
 0d30 da0c0000 0545983a 00000004 0000051f  .....E.:........
 0d40 4f2f0000 05206806 00000004 000005bb  O/... h.........
 0d50 01ab2600 0005bc01 49210000 05bd0198  ..&.....I!......
 0d60 0f000005 be01a316 000005bf 01030f00  ................
 0d70 0005c001 330e0000 05c10128 21000005  ....3......(!...
 0d80 c2012610 000005c3 01221000 0005c401  ..&......"......
 0d90 9c110000 05c50144 00000005 c6019811  .......D........
 0da0 000005c7 01040900 0005c801 bb2e0000  ................
 0db0 05c90194 0f000005 ca01b447 000005d2  ...........G....
 0dc0 01080a00 0006ee01 492e0000 06910358  ........I......X
 0dd0 13000005 9603011d 0000069c 03511300  .............Q..
 0de0 00000400 00056282 24000005 63482600  ......b.$...cH&.
 0df0 00056456 0a000005 65f91700 00056659  ..dV....e.....fY
 0e00 25000005 676f4400 000575cc 3f000005  %...goD...u.?...
 0e10 76932700 00057755 34000005 789e2f00  v.'...wU4...x./.
 0e20 00057973 29000005 7a571c00 00057be8  ..ys)...zW....{.
 0e30 39000005 7c9a4100 00057edf 23000000  9...|.A...~.#...
 0e40 04000005 18e51500 0005226a 42000005  .........."jB...
 0e50 23e50000 00052665 49000005 27574400  #.....&eI...'WD.
 0e60 0005289e 14000005 29443600 00052a0f  ..(.....)D6...*.
 0e70 29000005 2bf22300 00052dea 2f000005  )...+.#...-./...
 0e80 2e342500 000533ee 34000005 342b4900  .4%...3.4...4+I.
 0e90 00053540 15000005 36bc0500 00053723  ..5@....6.....7#
 0ea0 17000005 38bc1600 0005390f 2b000005  ....8.....9.+...
 0eb0 3aed1f00 00053bbb 20000005 3c883b00  :.....;. ...<.;.
 0ec0 00053d97 36000005 3e322100 00053fb7  ..=.6...>2!...?.
 0ed0 3d000005 40833c00 000541f9 15000005  =...@.<...A.....
 0ee0 42281a00 000543e7 1d000005 446b2100  B(....C.....Dk!.
 0ef0 0005454a 46000005 46e14100 00054783  ..EJF...F.A...G.
 0f00 0b000005 48c90e00 000549cc 39000005  ....H.....I.9...
 0f10 4a7f4900 00055092 01000005 539b2c00  J.I...P.....S.,.
 0f20 000556f7 1a000005 5c160900 00000400  ..V.....\.......
 0f30 0005055e 35000005 0e4f2f00 00051268  ...^5....O/....h
 0f40 06000000 04000006 ee01492e 00000691  ..........I.....
 0f50 03581300 00059603 011d0000 069c0351  .X.............Q
 0f60 13000000 04000005 33850900 0005352e  ........3.....5.
 0f70 05000005 36e12d00 00053895 18000005  ....6.-...8.....
 0f80 3b3d0200 00053d78 37000000 04000005  ;=....=x7.......
 0f90 25ba4000 00052692 4b000005 27fd2800  %.@...&.K...'.(.
 0fa0 000528ee 3d000005 297a1000 00052ac4  ..(.=...)z....*.
 0fb0 0c000005 2b1b3d00 00052c16 1f000005  ....+.=...,.....
 0fc0 2d3f3a00 00052e99 1f000005 2f733b00  -?:........./s;.
 0fd0 0005301c 3b000005 313c4000 000534a2  ..0.;...1<@...4.
 0fe0 3e000000 04000006 22802e00 00052754  >.......".....'T
 0ff0 23000000 04000006 37bd4100 0005385d  #.......7.A...8]
 1000 37000005 3f2a3200 00054266 26000005  7...?*2...Bf&...
 1010 51192700 000552ac 33000005 53bf0d00  Q.'...R.3...S...
 1020 00055440 45000005 559c1700 000556ca  ..T@E...U.....V.
 1030 1b000005 57cc2800 000558b6 02000005  ....W.(...X.....
 1040 60762200 000561ae 1b000005 62193700  `v"...a.....b.7.
 1050 000563e0 03000005 64973d00 0005657e  ..c.....d.=...e~
 1060 47000005 66890500 00056722 03000005  G...f.....g"....
 1070 68f31100 00056937 1b000005 6a662000  h.....i7....jf .
 1080 00056bfa 2c000005 6c750700 00056db3  ..k.,...lu....m.
 1090 18000005 6e2d4d00 00056f82 28000005  ....n-M...o.(...
 10a0 70550000 000571af 3b000005 72fb3100  pU....q.;...r.1.
 10b0 000574d4 29000005 750c2200 00057978  ..t.)...u."...yx
 10c0 1e000005 8201b21c 00000583 017a3000  .............z0.
 10d0 00058401 d3030000 058501aa 2e000005  ................
 10e0 86010000 00000587 016d1f00 00058801  .........m......
 10f0 33190000 058901e1 16000005 8a014d0b  3.............M.
 1100 0000058b 01403800 00058c01 4e330000  .....@8.....N3..
 1110 058d01e5 3e000005 8e013a41 0000058f  ....>.....:A....
 1120 01db3400 00059001 54490000 05910100  ..4.....TI......
 1130 44000005 92018908 000005f7 01d42600  D.............&.
 1140 00059402 9f1b0000 05c302a5 19000005  ................
 1150 c402d93c 000005c5 027f1d00 00058f03  ...<............
 1160 c5490000 059403a5 35000005 9703fa3e  .I......5......>
 1170 0000059b 033c4300 0005ae03 301d0000  .....<C.....0...
 1180 05af0312 0f000005 b903ae31 000005c0  ...........1....
 1190 03161600 0005c103 0e2d0000 05c20355  .........-.....U
 11a0 21000005 c3036d12 000005c5 03d61800  !.....m.........
 11b0 0005c803 472a0000 05cb0352 32000000  ....G*.....R2...
 11c0 04000005 2f713900 00053d60 0b000005  ..../q9...=`....
 11d0 48f00e00 000557f5 02000005 58182c00  H.....W.....X.,.
 11e0 00055962 18000005 5e7b0e00 00056bcb  ..Yb....^{....k.
 11f0 44000005 6c340300 00056d50 1a000005  D...l4....mP....
 1200 76543800 00000400 000513fc 48000005  vT8.........H...
 1210 19ca1800 00051a43 32000005 1bc30200  .......C2.......
 1220 00051eb5 4a000006 24593c00 00052502  ....J...$Y<...%.
 1230 39000000 04000005 8b01c922 0000058c  9.........."....
 1240 01c94100 00058d01 78180000 05e8030b  ..A.....x.......
 1250 13000005 90044127 000000             ......A'...     

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x243>
 248:	78 38                	js     282 <_init-0x236>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 e8                	add    al,ch
 285:	bf 7e dd fa 5b       	mov    edi,0x5bfadd7e
 28a:	32 34 33             	xor    dh,BYTE PTR [rbx+rsi*1]
 28d:	bd fb 75 ed 5c       	mov    ebp,0x5ced75fb
 292:	99                   	cdq    
 293:	48 76 24             	rex.W jbe 2ba <_init-0x1fe>
 296:	28                   	.byte 0x28
 297:	76                   	.byte 0x76

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	38 00                	cmp    BYTE PTR [rax],al
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	20 00                	and    BYTE PTR [rax],al
	...
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	1a 00                	sbb    al,BYTE PTR [rax]
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 2fe:	00 00                	add    BYTE PTR [rax],al
 300:	54                   	push   rsp
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 20                	add    BYTE PTR [rax],ah
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	0b 00                	or     eax,DWORD PTR [rax]
 332:	00 00                	add    BYTE PTR [rax],al
 334:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000348 <.dynstr>:
 348:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 34c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 34e:	73 6f                	jae    3bf <_init-0xf9>
 350:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 355:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 358:	5f                   	pop    rdi
 359:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 35f:	7a 65                	jp     3c6 <_init-0xf2>
 361:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 364:	6c                   	ins    BYTE PTR es:[rdi],dx
 365:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 36c:	72 74                	jb     3e2 <_init-0xd6>
 36e:	5f                   	pop    rdi
 36f:	6d                   	ins    DWORD PTR es:[rdi],dx
 370:	61                   	(bad)  
 371:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 378:	43 5f                	rex.XB pop r15
 37a:	32 2e                	xor    ch,BYTE PTR [rsi]
 37c:	32 2e                	xor    ch,BYTE PTR [rsi]
 37e:	35 00 5f 49 54       	xor    eax,0x54495f00
 383:	4d 5f                	rex.WRB pop r15
 385:	64 65 72 65          	fs gs jb 3ee <_init-0xca>
 389:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 390:	4d 
 391:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 393:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 394:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 395:	65 54                	gs push rsp
 397:	61                   	(bad)  
 398:	62                   	(bad)  
 399:	6c                   	ins    BYTE PTR es:[rdi],dx
 39a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 39e:	67 6d                	ins    DWORD PTR es:[edi],dx
 3a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3a2:	5f                   	pop    rdi
 3a3:	73 74                	jae    419 <_init-0x9f>
 3a5:	61                   	(bad)  
 3a6:	72 74                	jb     41c <_init-0x9c>
 3a8:	5f                   	pop    rdi
 3a9:	5f                   	pop    rdi
 3aa:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3ad:	54                   	push   rsp
 3ae:	4d 5f                	rex.WRB pop r15
 3b0:	72 65                	jb     417 <_init-0xa1>
 3b2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3b9:	4d 
 3ba:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3be:	65 54                	gs push rsp
 3c0:	61                   	(bad)  
 3c1:	62                   	.byte 0x62
 3c2:	6c                   	ins    BYTE PTR es:[rdi],dx
 3c3:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003c6 <.gnu.version>:
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	00 00                	add    BYTE PTR [rax],al
 3ca:	02 00                	add    al,BYTE PTR [rax]
 3cc:	00 00                	add    BYTE PTR [rax],al
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000000003d8 <.gnu.version_r>:
 3d8:	01 00                	add    DWORD PTR [rax],eax
 3da:	01 00                	add    DWORD PTR [rax],eax
 3dc:	01 00                	add    DWORD PTR [rax],eax
 3de:	00 00                	add    BYTE PTR [rax],al
 3e0:	10 00                	adc    BYTE PTR [rax],al
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	00 00                	add    BYTE PTR [rax],al
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	75 1a                	jne    404 <_init-0xb4>
 3ea:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 3f0:	2c 00                	sub    al,0x0
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000003f8 <.rela.dyn>:
 3f8:	f0 0d 20 00 00 00    	lock or eax,0x20
 3fe:	00 00                	add    BYTE PTR [rax],al
 400:	08 00                	or     BYTE PTR [rax],al
 402:	00 00                	add    BYTE PTR [rax],al
 404:	00 00                	add    BYTE PTR [rax],al
 406:	00 00                	add    BYTE PTR [rax],al
 408:	f0 05 00 00 00 00    	lock add eax,0x0
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	f8                   	clc    
 411:	0d 20 00 00 00       	or     eax,0x20
 416:	00 00                	add    BYTE PTR [rax],al
 418:	08 00                	or     BYTE PTR [rax],al
 41a:	00 00                	add    BYTE PTR [rax],al
 41c:	00 00                	add    BYTE PTR [rax],al
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	b0 05                	mov    al,0x5
 422:	00 00                	add    BYTE PTR [rax],al
 424:	00 00                	add    BYTE PTR [rax],al
 426:	00 00                	add    BYTE PTR [rax],al
 428:	08 10                	or     BYTE PTR [rax],dl
 42a:	20 00                	and    BYTE PTR [rax],al
 42c:	00 00                	add    BYTE PTR [rax],al
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	08 00                	or     BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	00 00                	add    BYTE PTR [rax],al
 436:	00 00                	add    BYTE PTR [rax],al
 438:	08 10                	or     BYTE PTR [rax],dl
 43a:	20 00                	and    BYTE PTR [rax],al
 43c:	00 00                	add    BYTE PTR [rax],al
 43e:	00 00                	add    BYTE PTR [rax],al
 440:	d8 0f                	fmul   DWORD PTR [rdi]
 442:	20 00                	and    BYTE PTR [rax],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	00 00                	add    BYTE PTR [rax],al
 448:	06                   	(bad)  
 449:	00 00                	add    BYTE PTR [rax],al
 44b:	00 01                	add    BYTE PTR [rcx],al
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 e0                	add    al,ah
 459:	0f 20 00             	mov    rax,cr0
 45c:	00 00                	add    BYTE PTR [rax],al
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	06                   	(bad)  
 461:	00 00                	add    BYTE PTR [rax],al
 463:	00 02                	add    BYTE PTR [rdx],al
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 e8                	add    al,ch
 471:	0f 20 00             	mov    rax,cr0
 474:	00 00                	add    BYTE PTR [rax],al
 476:	00 00                	add    BYTE PTR [rax],al
 478:	06                   	(bad)  
 479:	00 00                	add    BYTE PTR [rax],al
 47b:	00 03                	add    BYTE PTR [rbx],al
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 f0                	add    al,dh
 489:	0f 20 00             	mov    rax,cr0
 48c:	00 00                	add    BYTE PTR [rax],al
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	06                   	(bad)  
 491:	00 00                	add    BYTE PTR [rax],al
 493:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	f8                   	clc    
 4a1:	0f 20 00             	mov    rax,cr0
 4a4:	00 00                	add    BYTE PTR [rax],al
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    BYTE PTR [rax],al
 4ab:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4b1 <_init-0x7>
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 00                	add    BYTE PTR [rax],al
 4b5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

00000000000004b8 <_init>:
 4b8:	48 83 ec 08          	sub    rsp,0x8
 4bc:	48 8b 05 25 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b25]        # 200fe8 <__gmon_start__>
 4c3:	48 85 c0             	test   rax,rax
 4c6:	74 02                	je     4ca <_init+0x12>
 4c8:	ff d0                	call   rax
 4ca:	48 83 c4 08          	add    rsp,0x8
 4ce:	c3                   	ret    

Disassembly of section .plt:

00000000000004d0 <.plt>:
 4d0:	ff 35 f2 0a 20 00    	push   QWORD PTR [rip+0x200af2]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
 4d6:	ff 25 f4 0a 20 00    	jmp    QWORD PTR [rip+0x200af4]        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
 4dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

00000000000004e0 <__cxa_finalize@plt>:
 4e0:	ff 25 12 0b 20 00    	jmp    QWORD PTR [rip+0x200b12]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 4e6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000004f0 <_start>:
 4f0:	31 ed                	xor    ebp,ebp
 4f2:	49 89 d1             	mov    r9,rdx
 4f5:	5e                   	pop    rsi
 4f6:	48 89 e2             	mov    rdx,rsp
 4f9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 4fd:	50                   	push   rax
 4fe:	54                   	push   rsp
 4ff:	4c 8d 05 aa 01 00 00 	lea    r8,[rip+0x1aa]        # 6b0 <__libc_csu_fini>
 506:	48 8d 0d 33 01 00 00 	lea    rcx,[rip+0x133]        # 640 <__libc_csu_init>
 50d:	48 8d 3d e6 00 00 00 	lea    rdi,[rip+0xe6]        # 5fa <main>
 514:	ff 15 c6 0a 20 00    	call   QWORD PTR [rip+0x200ac6]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 51a:	f4                   	hlt    
 51b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000520 <deregister_tm_clones>:
 520:	48 8d 3d e9 0a 20 00 	lea    rdi,[rip+0x200ae9]        # 201010 <__TMC_END__>
 527:	55                   	push   rbp
 528:	48 8d 05 e1 0a 20 00 	lea    rax,[rip+0x200ae1]        # 201010 <__TMC_END__>
 52f:	48 39 f8             	cmp    rax,rdi
 532:	48 89 e5             	mov    rbp,rsp
 535:	74 19                	je     550 <deregister_tm_clones+0x30>
 537:	48 8b 05 9a 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a9a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 53e:	48 85 c0             	test   rax,rax
 541:	74 0d                	je     550 <deregister_tm_clones+0x30>
 543:	5d                   	pop    rbp
 544:	ff e0                	jmp    rax
 546:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 54d:	00 00 00 
 550:	5d                   	pop    rbp
 551:	c3                   	ret    
 552:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 55d:	00 00 00 

0000000000000560 <register_tm_clones>:
 560:	48 8d 3d a9 0a 20 00 	lea    rdi,[rip+0x200aa9]        # 201010 <__TMC_END__>
 567:	48 8d 35 a2 0a 20 00 	lea    rsi,[rip+0x200aa2]        # 201010 <__TMC_END__>
 56e:	55                   	push   rbp
 56f:	48 29 fe             	sub    rsi,rdi
 572:	48 89 e5             	mov    rbp,rsp
 575:	48 c1 fe 03          	sar    rsi,0x3
 579:	48 89 f0             	mov    rax,rsi
 57c:	48 c1 e8 3f          	shr    rax,0x3f
 580:	48 01 c6             	add    rsi,rax
 583:	48 d1 fe             	sar    rsi,1
 586:	74 18                	je     5a0 <register_tm_clones+0x40>
 588:	48 8b 05 61 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a61]        # 200ff0 <_ITM_registerTMCloneTable>
 58f:	48 85 c0             	test   rax,rax
 592:	74 0c                	je     5a0 <register_tm_clones+0x40>
 594:	5d                   	pop    rbp
 595:	ff e0                	jmp    rax
 597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 59e:	00 00 
 5a0:	5d                   	pop    rbp
 5a1:	c3                   	ret    
 5a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5ad:	00 00 00 

00000000000005b0 <__do_global_dtors_aux>:
 5b0:	80 3d 59 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a59],0x0        # 201010 <__TMC_END__>
 5b7:	75 2f                	jne    5e8 <__do_global_dtors_aux+0x38>
 5b9:	48 83 3d 37 0a 20 00 	cmp    QWORD PTR [rip+0x200a37],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c0:	00 
 5c1:	55                   	push   rbp
 5c2:	48 89 e5             	mov    rbp,rsp
 5c5:	74 0c                	je     5d3 <__do_global_dtors_aux+0x23>
 5c7:	48 8b 3d 3a 0a 20 00 	mov    rdi,QWORD PTR [rip+0x200a3a]        # 201008 <__dso_handle>
 5ce:	e8 0d ff ff ff       	call   4e0 <__cxa_finalize@plt>
 5d3:	e8 48 ff ff ff       	call   520 <deregister_tm_clones>
 5d8:	c6 05 31 0a 20 00 01 	mov    BYTE PTR [rip+0x200a31],0x1        # 201010 <__TMC_END__>
 5df:	5d                   	pop    rbp
 5e0:	c3                   	ret    
 5e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 5e8:	f3 c3                	repz ret 
 5ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000005f0 <frame_dummy>:
 5f0:	55                   	push   rbp
 5f1:	48 89 e5             	mov    rbp,rsp
 5f4:	5d                   	pop    rbp
 5f5:	e9 66 ff ff ff       	jmp    560 <register_tm_clones>

00000000000005fa <main>:
#include <stdio.h>

int main(int argc, char * argv[]) {
 5fa:	55                   	push   rbp
 5fb:	48 89 e5             	mov    rbp,rsp
 5fe:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 601:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
	float a, b, c;

	a = 2.2;
 605:	f3 0f 10 05 b7 00 00 	movss  xmm0,DWORD PTR [rip+0xb7]        # 6c4 <_IO_stdin_used+0x4>
 60c:	00 
 60d:	f3 0f 11 45 f4       	movss  DWORD PTR [rbp-0xc],xmm0

	b = 3.3;
 612:	f3 0f 10 05 ae 00 00 	movss  xmm0,DWORD PTR [rip+0xae]        # 6c8 <_IO_stdin_used+0x8>
 619:	00 
 61a:	f3 0f 11 45 f8       	movss  DWORD PTR [rbp-0x8],xmm0

	c = a + b;
 61f:	f3 0f 10 45 f4       	movss  xmm0,DWORD PTR [rbp-0xc]
 624:	f3 0f 58 45 f8       	addss  xmm0,DWORD PTR [rbp-0x8]
 629:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0
 62e:	b8 00 00 00 00       	mov    eax,0x0

}
 633:	5d                   	pop    rbp
 634:	c3                   	ret    
 635:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 63c:	00 00 00 
 63f:	90                   	nop

0000000000000640 <__libc_csu_init>:
 640:	41 57                	push   r15
 642:	41 56                	push   r14
 644:	49 89 d7             	mov    r15,rdx
 647:	41 55                	push   r13
 649:	41 54                	push   r12
 64b:	4c 8d 25 9e 07 20 00 	lea    r12,[rip+0x20079e]        # 200df0 <__frame_dummy_init_array_entry>
 652:	55                   	push   rbp
 653:	48 8d 2d 9e 07 20 00 	lea    rbp,[rip+0x20079e]        # 200df8 <__init_array_end>
 65a:	53                   	push   rbx
 65b:	41 89 fd             	mov    r13d,edi
 65e:	49 89 f6             	mov    r14,rsi
 661:	4c 29 e5             	sub    rbp,r12
 664:	48 83 ec 08          	sub    rsp,0x8
 668:	48 c1 fd 03          	sar    rbp,0x3
 66c:	e8 47 fe ff ff       	call   4b8 <_init>
 671:	48 85 ed             	test   rbp,rbp
 674:	74 20                	je     696 <__libc_csu_init+0x56>
 676:	31 db                	xor    ebx,ebx
 678:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 67f:	00 
 680:	4c 89 fa             	mov    rdx,r15
 683:	4c 89 f6             	mov    rsi,r14
 686:	44 89 ef             	mov    edi,r13d
 689:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 68d:	48 83 c3 01          	add    rbx,0x1
 691:	48 39 dd             	cmp    rbp,rbx
 694:	75 ea                	jne    680 <__libc_csu_init+0x40>
 696:	48 83 c4 08          	add    rsp,0x8
 69a:	5b                   	pop    rbx
 69b:	5d                   	pop    rbp
 69c:	41 5c                	pop    r12
 69e:	41 5d                	pop    r13
 6a0:	41 5e                	pop    r14
 6a2:	41 5f                	pop    r15
 6a4:	c3                   	ret    
 6a5:	90                   	nop
 6a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6ad:	00 00 00 

00000000000006b0 <__libc_csu_fini>:
 6b0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000006b4 <_fini>:
 6b4:	48 83 ec 08          	sub    rsp,0x8
 6b8:	48 83 c4 08          	add    rsp,0x8
 6bc:	c3                   	ret    

Disassembly of section .rodata:

00000000000006c0 <_IO_stdin_used>:
 6c0:	01 00                	add    DWORD PTR [rax],eax
 6c2:	02 00                	add    al,BYTE PTR [rax]
 6c4:	cd cc                	int    0xcc
 6c6:	0c 40                	or     al,0x40
 6c8:	33 33                	xor    esi,DWORD PTR [rbx]
 6ca:	53                   	push   rbx
 6cb:	40                   	rex

Disassembly of section .eh_frame_hdr:

00000000000006cc <__GNU_EH_FRAME_HDR>:
 6cc:	01 1b                	add    DWORD PTR [rbx],ebx
 6ce:	03 3b                	add    edi,DWORD PTR [rbx]
 6d0:	38 00                	cmp    BYTE PTR [rax],al
 6d2:	00 00                	add    BYTE PTR [rax],al
 6d4:	06                   	(bad)  
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
 6da:	ff                   	(bad)  
 6db:	ff 84 00 00 00 14 fe 	inc    DWORD PTR [rax+rax*1-0x1ec0000]
 6e2:	ff                   	(bad)  
 6e3:	ff ac 00 00 00 24 fe 	jmp    FWORD PTR [rax+rax*1-0x1dc0000]
 6ea:	ff                   	(bad)  
 6eb:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
 6ef:	00 2e                	add    BYTE PTR [rsi],ch
 6f1:	ff                   	(bad)  
 6f2:	ff                   	(bad)  
 6f3:	ff c4                	inc    esp
 6f5:	00 00                	add    BYTE PTR [rax],al
 6f7:	00 74 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],dh
 6fb:	ff e4                	jmp    rsp
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 e4                	add    ah,ah
 701:	ff                   	(bad)  
 702:	ff                   	(bad)  
 703:	ff 2c 01             	jmp    FWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

0000000000000708 <__FRAME_END__-0x104>:
 708:	14 00                	adc    al,0x0
 70a:	00 00                	add    BYTE PTR [rax],al
 70c:	00 00                	add    BYTE PTR [rax],al
 70e:	00 00                	add    BYTE PTR [rax],al
 710:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 713:	00 01                	add    BYTE PTR [rcx],al
 715:	78 10                	js     727 <__GNU_EH_FRAME_HDR+0x5b>
 717:	01 1b                	add    DWORD PTR [rbx],ebx
 719:	0c 07                	or     al,0x7
 71b:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 721:	00 00                	add    BYTE PTR [rax],al
 723:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 726:	00 00                	add    BYTE PTR [rax],al
 728:	c8 fd ff ff          	enter  0xfffd,0xff
 72c:	2b 00                	sub    eax,DWORD PTR [rax]
	...
 736:	00 00                	add    BYTE PTR [rax],al
 738:	14 00                	adc    al,0x0
 73a:	00 00                	add    BYTE PTR [rax],al
 73c:	00 00                	add    BYTE PTR [rax],al
 73e:	00 00                	add    BYTE PTR [rax],al
 740:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 743:	00 01                	add    BYTE PTR [rcx],al
 745:	78 10                	js     757 <__GNU_EH_FRAME_HDR+0x8b>
 747:	01 1b                	add    DWORD PTR [rbx],ebx
 749:	0c 07                	or     al,0x7
 74b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 751:	00 00                	add    BYTE PTR [rax],al
 753:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 756:	00 00                	add    BYTE PTR [rax],al
 758:	78 fd                	js     757 <__GNU_EH_FRAME_HDR+0x8b>
 75a:	ff                   	(bad)  
 75b:	ff 10                	call   QWORD PTR [rax]
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	00 00                	add    BYTE PTR [rax],al
 761:	0e                   	(bad)  
 762:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 765:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 768:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 76b:	80 00 3f             	add    BYTE PTR [rax],0x3f
 76e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 770:	2a 33                	sub    dh,BYTE PTR [rbx]
 772:	24 22                	and    al,0x22
 774:	00 00                	add    BYTE PTR [rax],al
 776:	00 00                	add    BYTE PTR [rax],al
 778:	14 00                	adc    al,0x0
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	44 00 00             	add    BYTE PTR [rax],r8b
 77f:	00 60 fd             	add    BYTE PTR [rax-0x3],ah
 782:	ff                   	(bad)  
 783:	ff 08                	dec    DWORD PTR [rax]
	...
 78d:	00 00                	add    BYTE PTR [rax],al
 78f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 792:	00 00                	add    BYTE PTR [rax],al
 794:	5c                   	pop    rsp
 795:	00 00                	add    BYTE PTR [rax],al
 797:	00 62 fe             	add    BYTE PTR [rdx-0x2],ah
 79a:	ff                   	(bad)  
 79b:	ff                   	(bad)  
 79c:	3b 00                	cmp    eax,DWORD PTR [rax]
 79e:	00 00                	add    BYTE PTR [rax],al
 7a0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 7a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 7a9:	76 0c                	jbe    7b7 <__GNU_EH_FRAME_HDR+0xeb>
 7ab:	07                   	(bad)  
 7ac:	08 00                	or     BYTE PTR [rax],al
 7ae:	00 00                	add    BYTE PTR [rax],al
 7b0:	44 00 00             	add    BYTE PTR [rax],r8b
 7b3:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
 7b7:	00 88 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],cl
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	00 00                	add    BYTE PTR [rax],al
 7c1:	42 0e                	rex.X (bad) 
 7c3:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 7c9:	8e 03                	mov    es,WORD PTR [rbx]
 7cb:	45 0e                	rex.RB (bad) 
 7cd:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 7d3:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301621 <_end+0xffffffff86100609>
 7d9:	06                   	(bad)  
 7da:	48 0e                	rex.W (bad) 
 7dc:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 7e2:	72 0e                	jb     7f2 <__GNU_EH_FRAME_HDR+0x126>
 7e4:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 7e7:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 7ea:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 7ed:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 7f0:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 7f3:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 7f6:	08 00                	or     BYTE PTR [rax],al
 7f8:	10 00                	adc    BYTE PTR [rax],al
 7fa:	00 00                	add    BYTE PTR [rax],al
 7fc:	c4                   	(bad)  
 7fd:	00 00                	add    BYTE PTR [rax],al
 7ff:	00 b0 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],dh
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 00                	add    BYTE PTR [rax],al
 809:	00 00                	add    BYTE PTR [rax],al
	...

000000000000080c <__FRAME_END__>:
 80c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200df0 <__frame_dummy_init_array_entry>:
  200df0:	f0 05 00 00 00 00    	lock add eax,0x0
	...

Disassembly of section .fini_array:

0000000000200df8 <__do_global_dtors_aux_fini_array_entry>:
  200df8:	b0 05                	mov    al,0x5
  200dfa:	00 00                	add    BYTE PTR [rax],al
  200dfc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200e00 <_DYNAMIC>:
  200e00:	01 00                	add    DWORD PTR [rax],eax
  200e02:	00 00                	add    BYTE PTR [rax],al
  200e04:	00 00                	add    BYTE PTR [rax],al
  200e06:	00 00                	add    BYTE PTR [rax],al
  200e08:	01 00                	add    DWORD PTR [rax],eax
  200e0a:	00 00                	add    BYTE PTR [rax],al
  200e0c:	00 00                	add    BYTE PTR [rax],al
  200e0e:	00 00                	add    BYTE PTR [rax],al
  200e10:	0c 00                	or     al,0x0
  200e12:	00 00                	add    BYTE PTR [rax],al
  200e14:	00 00                	add    BYTE PTR [rax],al
  200e16:	00 00                	add    BYTE PTR [rax],al
  200e18:	b8 04 00 00 00       	mov    eax,0x4
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 200e25 <_DYNAMIC+0x25>
  200e25:	00 00                	add    BYTE PTR [rax],al
  200e27:	00 b4 06 00 00 00 00 	add    BYTE PTR [rsi+rax*1+0x0],dh
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	19 00                	sbb    DWORD PTR [rax],eax
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f0 0d 20 00 00 00    	lock or eax,0x20
  200e3e:	00 00                	add    BYTE PTR [rax],al
  200e40:	1b 00                	sbb    eax,DWORD PTR [rax]
  200e42:	00 00                	add    BYTE PTR [rax],al
  200e44:	00 00                	add    BYTE PTR [rax],al
  200e46:	00 00                	add    BYTE PTR [rax],al
  200e48:	08 00                	or     BYTE PTR [rax],al
  200e4a:	00 00                	add    BYTE PTR [rax],al
  200e4c:	00 00                	add    BYTE PTR [rax],al
  200e4e:	00 00                	add    BYTE PTR [rax],al
  200e50:	1a 00                	sbb    al,BYTE PTR [rax]
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	f8                   	clc    
  200e59:	0d 20 00 00 00       	or     eax,0x20
  200e5e:	00 00                	add    BYTE PTR [rax],al
  200e60:	1c 00                	sbb    al,0x0
  200e62:	00 00                	add    BYTE PTR [rax],al
  200e64:	00 00                	add    BYTE PTR [rax],al
  200e66:	00 00                	add    BYTE PTR [rax],al
  200e68:	08 00                	or     BYTE PTR [rax],al
  200e6a:	00 00                	add    BYTE PTR [rax],al
  200e6c:	00 00                	add    BYTE PTR [rax],al
  200e6e:	00 00                	add    BYTE PTR [rax],al
  200e70:	f5                   	cmc    
  200e71:	fe                   	(bad)  
  200e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e85 <_DYNAMIC+0x85>
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 48 03             	add    BYTE PTR [rax+0x3],cl
  200e8a:	00 00                	add    BYTE PTR [rax],al
  200e8c:	00 00                	add    BYTE PTR [rax],al
  200e8e:	00 00                	add    BYTE PTR [rax],al
  200e90:	06                   	(bad)  
  200e91:	00 00                	add    BYTE PTR [rax],al
  200e93:	00 00                	add    BYTE PTR [rax],al
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 0a                	add    BYTE PTR [rdx],cl
  200ea1:	00 00                	add    BYTE PTR [rax],al
  200ea3:	00 00                	add    BYTE PTR [rax],al
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
  200eaa:	00 00                	add    BYTE PTR [rax],al
  200eac:	00 00                	add    BYTE PTR [rax],al
  200eae:	00 00                	add    BYTE PTR [rax],al
  200eb0:	0b 00                	or     eax,DWORD PTR [rax]
  200eb2:	00 00                	add    BYTE PTR [rax],al
  200eb4:	00 00                	add    BYTE PTR [rax],al
  200eb6:	00 00                	add    BYTE PTR [rax],al
  200eb8:	18 00                	sbb    BYTE PTR [rax],al
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	15 00 00 00 00       	adc    eax,0x0
	...
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 03                	add    BYTE PTR [rbx],al
  200ed1:	00 00                	add    BYTE PTR [rax],al
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 c0                	add    al,al
  200ed9:	0f 20 00             	mov    rax,cr0
  200edc:	00 00                	add    BYTE PTR [rax],al
  200ede:	00 00                	add    BYTE PTR [rax],al
  200ee0:	07                   	(bad)  
  200ee1:	00 00                	add    BYTE PTR [rax],al
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 f8                	add    al,bh
  200ee9:	03 00                	add    eax,DWORD PTR [rax]
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 08                	add    BYTE PTR [rax],cl
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 c0                	add    al,al
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 09                	add    BYTE PTR [rcx],cl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 18                	add    BYTE PTR [rax],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 1e                	add    BYTE PTR [rsi],bl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 08                	add    BYTE PTR [rax],cl
  200f19:	00 00                	add    BYTE PTR [rax],al
  200f1b:	00 00                	add    BYTE PTR [rax],al
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 fb                	add    bl,bh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 01                	add    BYTE PTR [rcx],al
  200f29:	00 00                	add    BYTE PTR [rax],al
  200f2b:	08 00                	or     BYTE PTR [rax],al
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 fe                	add    dh,bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 d8                	add    al,bl
  200f39:	03 00                	add    eax,DWORD PTR [rax]
  200f3b:	00 00                	add    BYTE PTR [rax],al
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 ff                	add    bh,bh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 01                	add    BYTE PTR [rcx],al
  200f49:	00 00                	add    BYTE PTR [rax],al
  200f4b:	00 00                	add    BYTE PTR [rax],al
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 f0                	add    al,dh
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 c6                	add    dh,al
  200f59:	03 00                	add    eax,DWORD PTR [rax]
  200f5b:	00 00                	add    BYTE PTR [rax],al
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 f9                	add    cl,bh
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f65:	00 00                	add    BYTE PTR [rax],al
  200f67:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fc0 <_GLOBAL_OFFSET_TABLE_>:
  200fc0:	00 0e                	add    BYTE PTR [rsi],cl
  200fc2:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x440>
   a:	74 75                	je     81 <_init-0x437>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x431>
  19:	74 75                	je     90 <_init-0x428>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	fa                   	cli    
  11:	05 00 00 00 00       	add    eax,0x0
  16:	00 00                	add    BYTE PTR [rax],al
  18:	3b 00                	cmp    eax,DWORD PTR [rax]
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1:	03 00                	add    eax,DWORD PTR [rax]
   3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	dd 0b                	fisttp QWORD PTR [rbx]
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0c 21                	or     al,0x21
  12:	2f                   	(bad)  
  13:	00 00                	add    BYTE PTR [rax],al
  15:	16                   	(bad)  
  16:	11 00                	adc    DWORD PTR [rax],eax
  18:	00 fa                	add    dl,bh
  1a:	05 00 00 00 00       	add    eax,0x0
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	3b 00                	cmp    eax,DWORD PTR [rax]
	...
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	02 08                	add    cl,BYTE PTR [rax]
  33:	29 00                	sub    DWORD PTR [rax],eax
  35:	00 02                	add    BYTE PTR [rdx],al
  37:	d8 3c 00             	fdivr  DWORD PTR [rax+rax*1]
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	03 08                	add    ecx,DWORD PTR [rax]
  3e:	07                   	(bad)  
  3f:	98                   	cwde   
  40:	39 00                	cmp    DWORD PTR [rax],eax
  42:	00 03                	add    BYTE PTR [rbx],al
  44:	01 08                	add    DWORD PTR [rax],ecx
  46:	c6                   	(bad)  
  47:	26 00 00             	add    BYTE PTR es:[rax],al
  4a:	03 02                	add    eax,DWORD PTR [rdx]
  4c:	07                   	(bad)  
  4d:	24 07                	and    al,0x7
  4f:	00 00                	add    BYTE PTR [rax],al
  51:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
  54:	66 1c 00             	data16 sbb al,0x0
  57:	00 03                	add    BYTE PTR [rbx],al
  59:	01 06                	add    DWORD PTR [rsi],eax
  5b:	45                   	rex.RB
  5c:	42 00 00             	rex.X add BYTE PTR [rax],al
  5f:	03 02                	add    eax,DWORD PTR [rdx]
  61:	05 8d 24 00 00       	add    eax,0x248d
  66:	04 04                	add    al,0x4
  68:	05 69 6e 74 00       	add    eax,0x746e69
  6d:	03 08                	add    ecx,DWORD PTR [rax]
  6f:	05 f3 39 00 00       	add    eax,0x39f3
  74:	02 84 10 00 00 03 8c 	add    al,BYTE PTR [rax+rdx*1-0x73fd0000]
  7b:	6d                   	ins    DWORD PTR es:[rdi],dx
  7c:	00 00                	add    BYTE PTR [rax],al
  7e:	00 02                	add    BYTE PTR [rdx],al
  80:	d0 0c 00             	ror    BYTE PTR [rax+rax*1],1
  83:	00 03                	add    BYTE PTR [rbx],al
  85:	8d 6d 00             	lea    ebp,[rbp+0x0]
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	05 08 06 08 92       	add    eax,0x92080608
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	00 03                	add    BYTE PTR [rbx],al
  93:	01 06                	add    DWORD PTR [rsi],eax
  95:	4c                   	rex.WR
  96:	42 00 00             	rex.X add BYTE PTR [rax],al
  99:	07                   	(bad)  
  9a:	92                   	xchg   edx,eax
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 08                	add    BYTE PTR [rax],cl
  9f:	8e 3d 00 00 d8 04    	mov    ?,WORD PTR [rip+0x4d80000]        # 4d800a5 <_end+0x4b7f08d>
  a5:	f5                   	cmc    
  a6:	1e                   	(bad)  
  a7:	02 00                	add    al,BYTE PTR [rax]
  a9:	00 09                	add    BYTE PTR [rcx],cl
  ab:	e3 26                	jrcxz  d3 <_init-0x3e5>
  ad:	00 00                	add    BYTE PTR [rax],al
  af:	04 f6                	add    al,0xf6
  b1:	66 00 00             	data16 add BYTE PTR [rax],al
  b4:	00 00                	add    BYTE PTR [rax],al
  b6:	09 1b                	or     DWORD PTR [rbx],ebx
  b8:	21 00                	and    DWORD PTR [rax],eax
  ba:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
  bd:	8c 00                	mov    WORD PTR [rax],es
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	08 09                	or     BYTE PTR [rcx],cl
  c3:	60                   	(bad)  
  c4:	33 00                	xor    eax,DWORD PTR [rax]
  c6:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
  c9:	8c 00                	mov    WORD PTR [rax],es
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	10 09                	adc    BYTE PTR [rcx],cl
  cf:	6d                   	ins    DWORD PTR es:[rdi],dx
  d0:	19 00                	sbb    DWORD PTR [rax],eax
  d2:	00 04 fd 8c 00 00 00 	add    BYTE PTR [rdi*8+0x8c],al
  d9:	18 09                	sbb    BYTE PTR [rcx],cl
  db:	ff 24 00             	jmp    QWORD PTR [rax+rax*1]
  de:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
  e1:	8c 00                	mov    WORD PTR [rax],es
  e3:	00 00                	add    BYTE PTR [rax],al
  e5:	20 09                	and    BYTE PTR [rcx],cl
  e7:	f7 41 00 00 04 ff 8c 	test   DWORD PTR [rcx+0x0],0x8cff0400
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	00 28                	add    BYTE PTR [rax],ch
  f2:	0a 03                	or     al,BYTE PTR [rbx]
  f4:	06                   	(bad)  
  f5:	00 00                	add    BYTE PTR [rax],al
  f7:	04 00                	add    al,0x0
  f9:	01 8c 00 00 00 30 0a 	add    DWORD PTR [rax+rax*1+0xa300000],ecx
 100:	7f 4d                	jg     14f <_init-0x369>
 102:	00 00                	add    BYTE PTR [rax],al
 104:	04 01                	add    al,0x1
 106:	01 8c 00 00 00 38 0a 	add    DWORD PTR [rax+rax*1+0xa380000],ecx
 10d:	fe 02                	inc    BYTE PTR [rdx]
 10f:	00 00                	add    BYTE PTR [rax],al
 111:	04 02                	add    al,0x2
 113:	01 8c 00 00 00 40 0a 	add    DWORD PTR [rax+rax*1+0xa400000],ecx
 11a:	3a 26                	cmp    ah,BYTE PTR [rsi]
 11c:	00 00                	add    BYTE PTR [rax],al
 11e:	04 04                	add    al,0x4
 120:	01 8c 00 00 00 48 0a 	add    DWORD PTR [rax+rax*1+0xa480000],ecx
 127:	d5                   	(bad)  
 128:	42 00 00             	rex.X add BYTE PTR [rax],al
 12b:	04 05                	add    al,0x5
 12d:	01 8c 00 00 00 50 0a 	add    DWORD PTR [rax+rax*1+0xa500000],ecx
 134:	f9                   	stc    
 135:	0f 00 00             	sldt   WORD PTR [rax]
 138:	04 06                	add    al,0x6
 13a:	01 8c 00 00 00 58 0a 	add    DWORD PTR [rax+rax*1+0xa580000],ecx
 141:	38 09                	cmp    BYTE PTR [rcx],cl
 143:	00 00                	add    BYTE PTR [rax],al
 145:	04 08                	add    al,0x8
 147:	01 56 02             	add    DWORD PTR [rsi+0x2],edx
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	60                   	(bad)  
 14d:	0a 6b 4a             	or     ch,BYTE PTR [rbx+0x4a]
 150:	00 00                	add    BYTE PTR [rax],al
 152:	04 0a                	add    al,0xa
 154:	01 5c 02 00          	add    DWORD PTR [rdx+rax*1+0x0],ebx
 158:	00 68 0a             	add    BYTE PTR [rax+0xa],ch
 15b:	00 17                	add    BYTE PTR [rdi],dl
 15d:	00 00                	add    BYTE PTR [rax],al
 15f:	04 0c                	add    al,0xc
 161:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 164:	00 00                	add    BYTE PTR [rax],al
 166:	70 0a                	jo     172 <_init-0x346>
 168:	52                   	push   rdx
 169:	08 00                	or     BYTE PTR [rax],al
 16b:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
 16e:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 171:	00 00                	add    BYTE PTR [rax],al
 173:	74 0a                	je     17f <_init-0x339>
 175:	82                   	(bad)  
 176:	3d 00 00 04 12       	cmp    eax,0x12040000
 17b:	01 74 00 00          	add    DWORD PTR [rax+rax*1+0x0],esi
 17f:	00 78 0a             	add    BYTE PTR [rax+0xa],bh
 182:	83 4c 00 00 04       	or     DWORD PTR [rax+rax*1+0x0],0x4
 187:	16                   	(bad)  
 188:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
 18b:	00 00                	add    BYTE PTR [rax],al
 18d:	80 0a 86             	or     BYTE PTR [rdx],0x86
 190:	18 00                	sbb    BYTE PTR [rax],al
 192:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
 195:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
 198:	00 00                	add    BYTE PTR [rax],al
 19a:	82                   	(bad)  
 19b:	0a 64 01 00          	or     ah,BYTE PTR [rcx+rax*1+0x0]
 19f:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
 1a2:	01 62 02             	add    DWORD PTR [rdx+0x2],esp
 1a5:	00 00                	add    BYTE PTR [rax],al
 1a7:	83 0a 63             	or     DWORD PTR [rdx],0x63
 1aa:	3c 00                	cmp    al,0x0
 1ac:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
 1af:	01 72 02             	add    DWORD PTR [rdx+0x2],esi
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	88 0a                	mov    BYTE PTR [rdx],cl
 1b6:	86 3d 00 00 04 25    	xchg   BYTE PTR [rip+0x25040000],bh        # 250401bc <_end+0x24e3f1a4>
 1bc:	01 7f 00             	add    DWORD PTR [rdi+0x0],edi
 1bf:	00 00                	add    BYTE PTR [rax],al
 1c1:	90                   	nop
 1c2:	0a 7c 2b 00          	or     bh,BYTE PTR [rbx+rbp*1+0x0]
 1c6:	00 04 2d 01 8a 00 00 	add    BYTE PTR [rbp*1+0x8a01],al
 1cd:	00 98 0a 83 2b 00    	add    BYTE PTR [rax+0x2b830a],bl
 1d3:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
 1d6:	01 8a 00 00 00 a0    	add    DWORD PTR [rdx-0x60000000],ecx
 1dc:	0a 8a 2b 00 00 04    	or     cl,BYTE PTR [rdx+0x400002b]
 1e2:	2f                   	(bad)  
 1e3:	01 8a 00 00 00 a8    	add    DWORD PTR [rdx-0x58000000],ecx
 1e9:	0a 91 2b 00 00 04    	or     dl,BYTE PTR [rcx+0x400002b]
 1ef:	30 01                	xor    BYTE PTR [rcx],al
 1f1:	8a 00                	mov    al,BYTE PTR [rax]
 1f3:	00 00                	add    BYTE PTR [rax],al
 1f5:	b0 0a                	mov    al,0xa
 1f7:	98                   	cwde   
 1f8:	2b 00                	sub    eax,DWORD PTR [rax]
 1fa:	00 04 32             	add    BYTE PTR [rdx+rsi*1],al
 1fd:	01 31                	add    DWORD PTR [rcx],esi
 1ff:	00 00                	add    BYTE PTR [rax],al
 201:	00 b8 0a 93 1f 00    	add    BYTE PTR [rax+0x1f930a],bh
 207:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
 20a:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	c0 0a 76             	ror    BYTE PTR [rdx],0x76
 212:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 215:	04 35                	add    al,0x35
 217:	01 78 02             	add    DWORD PTR [rax+0x2],edi
 21a:	00 00                	add    BYTE PTR [rax],al
 21c:	c4                   	(bad)  
 21d:	00 0b                	add    BYTE PTR [rbx],cl
 21f:	0f 02 00             	lar    eax,WORD PTR [rax]
 222:	00 04 9a             	add    BYTE PTR [rdx+rbx*4],al
 225:	08 0c 1c             	or     BYTE PTR [rsp+rbx*1],cl
 228:	00 00                	add    BYTE PTR [rax],al
 22a:	18 04 a0             	sbb    BYTE PTR [rax+riz*4],al
 22d:	56                   	push   rsi
 22e:	02 00                	add    al,BYTE PTR [rax]
 230:	00 09                	add    BYTE PTR [rcx],cl
 232:	9d                   	popf   
 233:	1a 00                	sbb    al,BYTE PTR [rax]
 235:	00 04 a1             	add    BYTE PTR [rcx+riz*4],al
 238:	56                   	push   rsi
 239:	02 00                	add    al,BYTE PTR [rax]
 23b:	00 00                	add    BYTE PTR [rax],al
 23d:	09 b7 41 00 00 04    	or     DWORD PTR [rdi+0x4000041],esi
 243:	a2 5c 02 00 00 08 09 	movabs ds:0xf0d09080000025c,al
 24a:	0d 0f 
 24c:	00 00                	add    BYTE PTR [rax],al
 24e:	04 a6                	add    al,0xa6
 250:	66 00 00             	data16 add BYTE PTR [rax],al
 253:	00 10                	add    BYTE PTR [rax],dl
 255:	00 06                	add    BYTE PTR [rsi],al
 257:	08 25 02 00 00 06    	or     BYTE PTR [rip+0x6000002],ah        # 600025f <_end+0x5dff247>
 25d:	08 9e 00 00 00 0c    	or     BYTE PTR [rsi+0xc000000],bl
 263:	92                   	xchg   edx,eax
 264:	00 00                	add    BYTE PTR [rax],al
 266:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	0d 3c 00 00 00       	or     eax,0x3c
 270:	00 00                	add    BYTE PTR [rax],al
 272:	06                   	(bad)  
 273:	08 1e                	or     BYTE PTR [rsi],bl
 275:	02 00                	add    al,BYTE PTR [rax]
 277:	00 0c 92             	add    BYTE PTR [rdx+rdx*4],cl
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	00 88 02 00 00 0d    	add    BYTE PTR [rax+0xd000002],cl
 282:	3c 00                	cmp    al,0x0
 284:	00 00                	add    BYTE PTR [rax],al
 286:	13 00                	adc    eax,DWORD PTR [rax]
 288:	0e                   	(bad)  
 289:	0f 39                	(bad)  
 28b:	00 00                	add    BYTE PTR [rax],al
 28d:	0f 73                	(bad)  
 28f:	25 00 00 04 3f       	and    eax,0x3f040000
 294:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 29a:	ea                   	(bad)  
 29b:	25 00 00 04 40       	and    eax,0x40040000
 2a0:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 2a6:	42 1f                	rex.X (bad) 
 2a8:	00 00                	add    BYTE PTR [rax],al
 2aa:	04 41                	add    al,0x41
 2ac:	01 88 02 00 00 06    	add    DWORD PTR [rax+0x6000002],ecx
 2b2:	08 99 00 00 00 07    	or     BYTE PTR [rcx+0x7000000],bl
 2b8:	b1 02                	mov    cl,0x2
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	10 cf                	adc    bh,cl
 2be:	22 00                	and    al,BYTE PTR [rax]
 2c0:	00 05 87 5c 02 00    	add    BYTE PTR [rip+0x25c87],al        # 25f4d <__FRAME_END__+0x25741>
 2c6:	00 10                	add    BYTE PTR [rax],dl
 2c8:	d0 41 00             	rol    BYTE PTR [rcx+0x0],1
 2cb:	00 05 88 5c 02 00    	add    BYTE PTR [rip+0x25c88],al        # 25f59 <__FRAME_END__+0x2574d>
 2d1:	00 10                	add    BYTE PTR [rax],dl
 2d3:	7f 18                	jg     2ed <_init-0x1cb>
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	05 89 5c 02 00       	add    eax,0x25c89
 2dc:	00 10                	add    BYTE PTR [rax],dl
 2de:	7d 16                	jge    2f6 <_init-0x1c2>
 2e0:	00 00                	add    BYTE PTR [rax],al
 2e2:	06                   	(bad)  
 2e3:	1a 66 00             	sbb    ah,BYTE PTR [rsi+0x0]
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	0c b7                	or     al,0xb7
 2ea:	02 00                	add    al,BYTE PTR [rax]
 2ec:	00 f3                	add    bl,dh
 2ee:	02 00                	add    al,BYTE PTR [rax]
 2f0:	00 11                	add    BYTE PTR [rcx],dl
 2f2:	00 07                	add    BYTE PTR [rdi],al
 2f4:	e8 02 00 00 10       	call   100002fb <_end+0xfdff2e3>
 2f9:	68 15 00 00 06       	push   0x6000015
 2fe:	1b f3                	sbb    esi,ebx
 300:	02 00                	add    al,BYTE PTR [rax]
 302:	00 12                	add    BYTE PTR [rdx],dl
 304:	af                   	scas   eax,DWORD PTR es:[rdi]
 305:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 308:	01 03                	add    DWORD PTR [rbx],eax
 30a:	66 00 00             	data16 add BYTE PTR [rax],al
 30d:	00 fa                	add    dl,bh
 30f:	05 00 00 00 00       	add    eax,0x0
 314:	00 00                	add    BYTE PTR [rax],al
 316:	3b 00                	cmp    eax,DWORD PTR [rax]
 318:	00 00                	add    BYTE PTR [rax],al
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	00 00                	add    BYTE PTR [rax],al
 31e:	01 9c 65 03 00 00 13 	add    DWORD PTR [rbp+riz*2+0x13000003],ebx
 325:	4b 07                	rex.WXB (bad) 
 327:	00 00                	add    BYTE PTR [rax],al
 329:	01 03                	add    DWORD PTR [rbx],eax
 32b:	66 00 00             	data16 add BYTE PTR [rax],al
 32e:	00 02                	add    BYTE PTR [rdx],al
 330:	91                   	xchg   ecx,eax
 331:	5c                   	pop    rsp
 332:	13 12                	adc    edx,DWORD PTR [rdx]
 334:	1d 00 00 01 03       	sbb    eax,0x3010000
 339:	65 03 00             	add    eax,DWORD PTR gs:[rax]
 33c:	00 02                	add    BYTE PTR [rdx],al
 33e:	91                   	xchg   ecx,eax
 33f:	50                   	push   rax
 340:	14 61                	adc    al,0x61
 342:	00 01                	add    BYTE PTR [rcx],al
 344:	04 6b                	add    al,0x6b
 346:	03 00                	add    eax,DWORD PTR [rax]
 348:	00 02                	add    BYTE PTR [rdx],al
 34a:	91                   	xchg   ecx,eax
 34b:	64 14 62             	fs adc al,0x62
 34e:	00 01                	add    BYTE PTR [rcx],al
 350:	04 6b                	add    al,0x6b
 352:	03 00                	add    eax,DWORD PTR [rax]
 354:	00 02                	add    BYTE PTR [rdx],al
 356:	91                   	xchg   ecx,eax
 357:	68 14 63 00 01       	push   0x1006314
 35c:	04 6b                	add    al,0x6b
 35e:	03 00                	add    eax,DWORD PTR [rax]
 360:	00 02                	add    BYTE PTR [rdx],al
 362:	91                   	xchg   ecx,eax
 363:	6c                   	ins    BYTE PTR es:[rdi],dx
 364:	00 06                	add    BYTE PTR [rsi],al
 366:	08 8c 00 00 00 03 04 	or     BYTE PTR [rax+rax*1+0x4030000],cl
 36d:	04 30                	add    al,0x30
 36f:	10 00                	adc    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2eb02fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	99                   	cdq    
  12:	42 17                	rex.X (bad) 
  14:	00 00                	add    BYTE PTR [rax],al
  16:	02 16                	add    dl,BYTE PTR [rsi]
  18:	00 03                	add    BYTE PTR [rbx],al
  1a:	0e                   	(bad)  
  1b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  1f:	49 13 00             	adc    rax,QWORD PTR [r8]
  22:	00 03                	add    BYTE PTR [rbx],al
  24:	24 00                	and    al,0x0
  26:	0b 0b                	or     ecx,DWORD PTR [rbx]
  28:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  2b:	0e                   	(bad)  
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	04 24                	add    al,0x24
  30:	00 0b                	add    BYTE PTR [rbx],cl
  32:	0b 3e                	or     edi,DWORD PTR [rsi]
  34:	0b 03                	or     eax,DWORD PTR [rbx]
  36:	08 00                	or     BYTE PTR [rax],al
  38:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b004d <_end+0xaeaf035>
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	06                   	(bad)  
  41:	0f 00 0b             	str    WORD PTR [rbx]
  44:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  47:	00 00                	add    BYTE PTR [rax],al
  49:	07                   	(bad)  
  4a:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	08 13                	or     BYTE PTR [rbx],dl
  52:	01 03                	add    DWORD PTR [rbx],eax
  54:	0e                   	(bad)  
  55:	0b 0b                	or     ecx,DWORD PTR [rbx]
  57:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  59:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5b:	01 13                	add    DWORD PTR [rbx],edx
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0365 <_end+0x39edf34d>
  65:	0b 3b                	or     edi,DWORD PTR [rbx]
  67:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  6a:	38 0b                	cmp    BYTE PTR [rbx],cl
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0374 <_end+0x39edf35c>
  74:	0b 3b                	or     edi,DWORD PTR [rbx]
  76:	05 49 13 38 0b       	add    eax,0xb381349
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	0b 16                	or     edx,DWORD PTR [rsi]
  7f:	00 03                	add    BYTE PTR [rbx],al
  81:	0e                   	(bad)  
  82:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  84:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  86:	00 00                	add    BYTE PTR [rax],al
  88:	0c 01                	or     al,0x1
  8a:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
  8d:	01 13                	add    DWORD PTR [rbx],edx
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	0d 21 00 49 13       	or     eax,0x13490021
  96:	2f                   	(bad)  
  97:	0b 00                	or     eax,DWORD PTR [rax]
  99:	00 0e                	add    BYTE PTR [rsi],cl
  9b:	13 00                	adc    eax,DWORD PTR [rax]
  9d:	03 0e                	add    ecx,DWORD PTR [rsi]
  9f:	3c 19                	cmp    al,0x19
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	0f 34                	sysenter 
  a5:	00 03                	add    BYTE PTR [rbx],al
  a7:	0e                   	(bad)  
  a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  aa:	3b 05 49 13 3f 19    	cmp    eax,DWORD PTR [rip+0x193f1349]        # 193f13f9 <_end+0x191f03e1>
  b0:	3c 19                	cmp    al,0x19
  b2:	00 00                	add    BYTE PTR [rax],al
  b4:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
  b7:	03 0e                	add    ecx,DWORD PTR [rsi]
  b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  bd:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  c0:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	11 21                	adc    DWORD PTR [rcx],esp
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 12                	add    BYTE PTR [rdx],dl
  cb:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  ce:	19 03                	sbb    DWORD PTR [rbx],eax
  d0:	0e                   	(bad)  
  d1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  d3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  d5:	27                   	(bad)  
  d6:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  d9:	11 01                	adc    DWORD PTR [rcx],eax
  db:	12 07                	adc    al,BYTE PTR [rdi]
  dd:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e03ec <_end+0x39edf3d4>
  ec:	0b 3b                	or     edi,DWORD PTR [rbx]
  ee:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  f1:	02 18                	add    bl,BYTE PTR [rax]
  f3:	00 00                	add    BYTE PTR [rax],al
  f5:	14 34                	adc    al,0x34
  f7:	00 03                	add    BYTE PTR [rbx],al
  f9:	08 3a                	or     BYTE PTR [rdx],bh
  fb:	0b 3b                	or     edi,DWORD PTR [rbx]
  fd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 100:	02 18                	add    bl,BYTE PTR [rax]
 102:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	2b 02                	sub    eax,DWORD PTR [rdx]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	0f 02 00             	lar    eax,WORD PTR [rax]
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0x427>
  1e:	72 2f                	jb     4f <_init-0x469>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0x456>
  2a:	36 5f                	ss pop rdi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[rdi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0x450>
  39:	37                   	(bad)  
  3a:	2f                   	(bad)  
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [rdi],ch
  44:	75 73                	jne    b9 <_init-0x3ff>
  46:	72 2f                	jb     77 <_init-0x441>
  48:	78 38                	js     82 <_init-0x436>
  4a:	36 5f                	ss pop rdi
  4c:	36 34 2d             	ss xor al,0x2d
  4f:	6c                   	ins    BYTE PTR es:[rdi],dx
  50:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  57:	75 2f                	jne    88 <_init-0x430>
  59:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  60:	2f                   	(bad)  
  61:	62                   	(bad)  
  62:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
  69:	72 
  6a:	2f                   	(bad)  
  6b:	78 38                	js     a5 <_init-0x413>
  6d:	36 5f                	ss pop rdi
  6f:	36 34 2d             	ss xor al,0x2d
  72:	6c                   	ins    BYTE PTR es:[rdi],dx
  73:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  7a:	75 2f                	jne    ab <_init-0x40d>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	00 2f                	add    BYTE PTR [rdi],ch
  85:	75 73                	jne    fa <_init-0x3be>
  87:	72 2f                	jb     b8 <_init-0x400>
  89:	78 38                	js     c3 <_init-0x3f5>
  8b:	36 5f                	ss pop rdi
  8d:	36 34 2d             	ss xor al,0x2d
  90:	6c                   	ins    BYTE PTR es:[rdi],dx
  91:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  98:	75 2f                	jne    c9 <_init-0x3ef>
  9a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a1:	2f                   	(bad)  
  a2:	73 79                	jae    11d <_init-0x39b>
  a4:	73 00                	jae    a6 <_init-0x412>
  a6:	2f                   	(bad)  
  a7:	75 73                	jne    11c <_init-0x39c>
  a9:	72 2f                	jb     da <_init-0x3de>
  ab:	78 38                	js     e5 <_init-0x3d3>
  ad:	36 5f                	ss pop rdi
  af:	36 34 2d             	ss xor al,0x2d
  b2:	6c                   	ins    BYTE PTR es:[rdi],dx
  b3:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  ba:	75 2f                	jne    eb <_init-0x3cd>
  bc:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  c3:	2f                   	(bad)  
  c4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  c6:	75 00                	jne    c8 <_init-0x3f0>
  c8:	2f                   	(bad)  
  c9:	75 73                	jne    13e <_init-0x37a>
  cb:	72 2f                	jb     fc <_init-0x3bc>
  cd:	78 38                	js     107 <_init-0x3b1>
  cf:	36 5f                	ss pop rdi
  d1:	36 34 2d             	ss xor al,0x2d
  d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  d5:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  dc:	75 2f                	jne    10d <_init-0x3ab>
  de:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e5:	2f                   	(bad)  
  e6:	62                   	(bad)  
  e7:	69 74 73 2f 74 79 70 	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65707974
  ee:	65 
  ef:	73 00                	jae    f1 <_init-0x3c7>
  f1:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
  f4:	64 5f                	fs pop rdi
  f6:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  f9:	61                   	(bad)  
  fa:	74 2e                	je     12a <_init-0x38e>
  fc:	63 00                	movsxd eax,DWORD PTR [rax]
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 103:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
 10a:	01 
 10b:	00 00                	add    BYTE PTR [rax],al
 10d:	74 79                	je     188 <_init-0x330>
 10f:	70 65                	jo     176 <_init-0x342>
 111:	73 2e                	jae    141 <_init-0x377>
 113:	68 00 02 00 00       	push   0x200
 118:	6c                   	ins    BYTE PTR es:[rdi],dx
 119:	69 62 69 6f 2e 68 00 	imul   esp,DWORD PTR [rdx+0x69],0x682e6f
 120:	02 00                	add    al,BYTE PTR [rax]
 122:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 125:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x30068
 12c:	00 
 12d:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 130:	73 5f                	jae    191 <_init-0x327>
 132:	65 72 72             	gs jb  1a7 <_init-0x311>
 135:	6c                   	ins    BYTE PTR es:[rdi],dx
 136:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
 13d:	00 00                	add    BYTE PTR [rax],al
 13f:	73 74                	jae    1b5 <_init-0x303>
 141:	64 63 2d 70 72 65 64 	movsxd ebp,DWORD PTR fs:[rip+0x64657270]        # 646573b8 <_end+0x644563a0>
 148:	65 66 2e 68 00 03    	gs cs pushw 0x300
 14e:	00 00                	add    BYTE PTR [rax],al
 150:	6c                   	ins    BYTE PTR es:[rdi],dx
 151:	69 62 63 2d 68 65 61 	imul   esp,DWORD PTR [rdx+0x63],0x6165682d
 158:	64 65 72 2d          	fs gs jb 189 <_init-0x32f>
 15c:	73 74                	jae    1d2 <_init-0x2e6>
 15e:	61                   	(bad)  
 15f:	72 74                	jb     1d5 <_init-0x2e3>
 161:	2e 68 00 02 00 00    	cs push 0x200
 167:	66 65 61             	data16 gs (bad) 
 16a:	74 75                	je     1e1 <_init-0x2d7>
 16c:	72 65                	jb     1d3 <_init-0x2e5>
 16e:	73 2e                	jae    19e <_init-0x31a>
 170:	68 00 03 00 00       	push   0x300
 175:	63 64 65 66          	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
 179:	73 2e                	jae    1a9 <_init-0x30f>
 17b:	68 00 04 00 00       	push   0x400
 180:	77 6f                	ja     1f1 <_init-0x2c7>
 182:	72 64                	jb     1e8 <_init-0x2d0>
 184:	73 69                	jae    1ef <_init-0x2c9>
 186:	7a 65                	jp     1ed <_init-0x2cb>
 188:	2e 68 00 02 00 00    	cs push 0x200
 18e:	6c                   	ins    BYTE PTR es:[rdi],dx
 18f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 190:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 191:	67 2d 64 6f 75 62    	addr32 sub eax,0x62756f64
 197:	6c                   	ins    BYTE PTR es:[rdi],dx
 198:	65 2e 68 00 02 00 00 	gs cs push 0x200
 19f:	73 74                	jae    215 <_init-0x2a3>
 1a1:	75 62                	jne    205 <_init-0x2b3>
 1a3:	73 2e                	jae    1d3 <_init-0x2e5>
 1a5:	68 00 05 00 00       	push   0x500
 1aa:	73 74                	jae    220 <_init-0x298>
 1ac:	75 62                	jne    210 <_init-0x2a8>
 1ae:	73 2d                	jae    1dd <_init-0x2db>
 1b0:	36 34 2e             	ss xor al,0x2e
 1b3:	68 00 05 00 00       	push   0x500
 1b8:	74 79                	je     233 <_init-0x285>
 1ba:	70 65                	jo     221 <_init-0x297>
 1bc:	73 69                	jae    227 <_init-0x291>
 1be:	7a 65                	jp     225 <_init-0x293>
 1c0:	73 2e                	jae    1f0 <_init-0x2c8>
 1c2:	68 00 02 00 00       	push   0x200
 1c7:	5f                   	pop    rdi
 1c8:	5f                   	pop    rdi
 1c9:	46                   	rex.RX
 1ca:	49                   	rex.WB
 1cb:	4c                   	rex.WR
 1cc:	45                   	rex.RB
 1cd:	2e 68 00 06 00 00    	cs push 0x600
 1d3:	46                   	rex.RX
 1d4:	49                   	rex.WB
 1d5:	4c                   	rex.WR
 1d6:	45                   	rex.RB
 1d7:	2e 68 00 06 00 00    	cs push 0x600
 1dd:	5f                   	pop    rdi
 1de:	47 5f                	rex.RXB pop r15
 1e0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 1e3:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 1e9:	02 00                	add    al,BYTE PTR [rax]
 1eb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 1ee:	6d                   	ins    DWORD PTR es:[rdi],dx
 1ef:	62 73 74 61 74       	(bad)  {k1}
 1f4:	65 5f                	gs pop rdi
 1f6:	74 2e                	je     226 <_init-0x292>
 1f8:	68 00 06 00 00       	push   0x600
 1fd:	73 74                	jae    273 <_init-0x245>
 1ff:	64 61                	fs (bad) 
 201:	72 67                	jb     26a <_init-0x24e>
 203:	2e 68 00 01 00 00    	cs push 0x100
 209:	73 74                	jae    27f <_init-0x239>
 20b:	64 69 6f 5f 6c 69 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x2e6d696c
 212:	2e 
 213:	68 00 02 00 00       	push   0x200
 218:	00 00                	add    BYTE PTR [rax],al
 21a:	09 02                	or     DWORD PTR [rdx],eax
 21c:	fa                   	cli    
 21d:	05 00 00 00 00       	add    eax,0x0
 222:	00 00                	add    BYTE PTR [rax],al
 224:	14 af                	adc    al,0xaf
 226:	ca ca 08             	retf   0x8ca
 229:	3e 02 02             	add    al,BYTE PTR ds:[rdx]
 22c:	00 01                	add    BYTE PTR [rcx],al
 22e:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	49                   	rex.WB
       2:	4f 5f                	rex.WRXB pop r15
       4:	44                   	rex.R
       5:	45                   	rex.RB
       6:	43 20 30             	rex.XB and BYTE PTR [r8],sil
       9:	32 30                	xor    dh,BYTE PTR [rax]
       b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
       e:	53                   	push   rbx
       f:	49                   	rex.WB
      10:	47 5f                	rex.RXB pop r15
      12:	41 54                	push   r12
      14:	4f                   	rex.WRXB
      15:	4d                   	rex.WRB
      16:	49                   	rex.WB
      17:	43 5f                	rex.XB pop r15
      19:	4d                   	rex.WRB
      1a:	41 58                	pop    r8
      1c:	5f                   	pop    rdi
      1d:	5f                   	pop    rdi
      1e:	20 30                	and    BYTE PTR [rax],dh
      20:	78 37                	js     59 <_init-0x45f>
      22:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
      29:	00 5f 5f 
      2c:	46                   	rex.RX
      2d:	4c 54                	rex.WR push rsp
      2f:	36 34 5f             	ss xor al,0x5f
      32:	48                   	rex.W
      33:	41 53                	push   r11
      35:	5f                   	pop    rdi
      36:	51                   	push   rcx
      37:	55                   	push   rbp
      38:	49                   	rex.WB
      39:	45 54                	rex.RB push r12
      3b:	5f                   	pop    rdi
      3c:	4e                   	rex.WRX
      3d:	41                   	rex.B
      3e:	4e 5f                	rex.WRX pop rdi
      40:	5f                   	pop    rdi
      41:	20 31                	and    BYTE PTR [rcx],dh
      43:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
      46:	49 5a                	rex.WB pop r10
      48:	45 5f                	rex.RB pop r15
      4a:	54                   	push   rsp
      4b:	5f                   	pop    rdi
      4c:	44                   	rex.R
      4d:	45                   	rex.RB
      4e:	46                   	rex.RX
      4f:	49                   	rex.WB
      50:	4e                   	rex.WRX
      51:	45                   	rex.RB
      52:	44 20 00             	and    BYTE PTR [rax],r8b
      55:	5f                   	pop    rdi
      56:	49                   	rex.WB
      57:	4f 5f                	rex.WRXB pop r15
      59:	49 53                	rex.WB push r11
      5b:	5f                   	pop    rdi
      5c:	46                   	rex.RX
      5d:	49                   	rex.WB
      5e:	4c                   	rex.WR
      5f:	45                   	rex.RB
      60:	42 55                	rex.X push rbp
      62:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
      65:	78 32                	js     99 <_init-0x41f>
      67:	30 30                	xor    BYTE PTR [rax],dh
      69:	30 00                	xor    BYTE PTR [rax],al
      6b:	5f                   	pop    rdi
      6c:	5f                   	pop    rdi
      6d:	44                   	rex.R
      6e:	45                   	rex.RB
      6f:	43                   	rex.XB
      70:	36 34 5f             	ss xor al,0x5f
      73:	53                   	push   rbx
      74:	55                   	push   rbp
      75:	42                   	rex.X
      76:	4e                   	rex.WRX
      77:	4f 52                	rex.WRXB push r10
      79:	4d                   	rex.WRB
      7a:	41                   	rex.B
      7b:	4c 5f                	rex.WR pop rdi
      7d:	4d                   	rex.WRB
      7e:	49                   	rex.WB
      7f:	4e 5f                	rex.WRX pop rdi
      81:	5f                   	pop    rdi
      82:	20 30                	and    BYTE PTR [rax],dh
      84:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
      87:	30 30                	xor    BYTE PTR [rax],dh
      89:	30 30                	xor    BYTE PTR [rax],dh
      8b:	30 30                	xor    BYTE PTR [rax],dh
      8d:	30 30                	xor    BYTE PTR [rax],dh
      8f:	30 30                	xor    BYTE PTR [rax],dh
      91:	30 30                	xor    BYTE PTR [rax],dh
      93:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
      96:	33 38                	xor    edi,DWORD PTR [rax]
      98:	33 44 44 00          	xor    eax,DWORD PTR [rsp+rax*2+0x0]
      9c:	5f                   	pop    rdi
      9d:	5f                   	pop    rdi
      9e:	46                   	rex.RX
      9f:	4c 54                	rex.WR push rsp
      a1:	33 32                	xor    esi,DWORD PTR [rdx]
      a3:	5f                   	pop    rdi
      a4:	48                   	rex.W
      a5:	41 53                	push   r11
      a7:	5f                   	pop    rdi
      a8:	49                   	rex.WB
      a9:	4e                   	rex.WRX
      aa:	46                   	rex.RX
      ab:	49                   	rex.WB
      ac:	4e                   	rex.WRX
      ad:	49 54                	rex.WB push r12
      af:	59                   	pop    rcx
      b0:	5f                   	pop    rdi
      b1:	5f                   	pop    rdi
      b2:	20 31                	and    BYTE PTR [rcx],dh
      b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      b7:	46                   	rex.RX
      b8:	4c 54                	rex.WR push rsp
      ba:	36 34 5f             	ss xor al,0x5f
      bd:	4d                   	rex.WRB
      be:	41 58                	pop    r8
      c0:	5f                   	pop    rdi
      c1:	45 58                	rex.RB pop r8
      c3:	50                   	push   rax
      c4:	5f                   	pop    rdi
      c5:	5f                   	pop    rdi
      c6:	20 31                	and    BYTE PTR [rcx],dh
      c8:	30 32                	xor    BYTE PTR [rdx],dh
      ca:	34 00                	xor    al,0x0
      cc:	5f                   	pop    rdi
      cd:	5f                   	pop    rdi
      ce:	46                   	rex.RX
      cf:	4c 54                	rex.WR push rsp
      d1:	5f                   	pop    rdi
      d2:	4d                   	rex.WRB
      d3:	49                   	rex.WB
      d4:	4e 5f                	rex.WRX pop rdi
      d6:	31 30                	xor    DWORD PTR [rax],esi
      d8:	5f                   	pop    rdi
      d9:	45 58                	rex.RB pop r8
      db:	50                   	push   rax
      dc:	5f                   	pop    rdi
      dd:	5f                   	pop    rdi
      de:	20 28                	and    BYTE PTR [rax],ch
      e0:	2d 33 37 29 00       	sub    eax,0x293733
      e5:	5f                   	pop    rdi
      e6:	5f                   	pop    rdi
      e7:	53                   	push   rbx
      e8:	59                   	pop    rcx
      e9:	53                   	push   rbx
      ea:	43                   	rex.XB
      eb:	41                   	rex.B
      ec:	4c                   	rex.WR
      ed:	4c 5f                	rex.WR pop rdi
      ef:	55                   	push   rbp
      f0:	4c                   	rex.WR
      f1:	4f                   	rex.WRXB
      f2:	4e                   	rex.WRX
      f3:	47 5f                	rex.RXB pop r15
      f5:	54                   	push   rsp
      f6:	59                   	pop    rcx
      f7:	50                   	push   rax
      f8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
      fc:	55                   	push   rbp
      fd:	4c                   	rex.WR
      fe:	4f                   	rex.WRXB
      ff:	4e                   	rex.WRX
     100:	47 57                	rex.RXB push r15
     102:	4f 52                	rex.WRXB push r10
     104:	44 5f                	rex.R pop rdi
     106:	54                   	push   rsp
     107:	59                   	pop    rcx
     108:	50                   	push   rax
     109:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     10d:	46                   	rex.RX
     10e:	4c 54                	rex.WR push rsp
     110:	36 34 58             	ss xor al,0x58
     113:	5f                   	pop    rdi
     114:	45 50                	rex.RB push r8
     116:	53                   	push   rbx
     117:	49                   	rex.WB
     118:	4c                   	rex.WR
     119:	4f                   	rex.WRXB
     11a:	4e 5f                	rex.WRX pop rdi
     11c:	5f                   	pop    rdi
     11d:	20 31                	and    BYTE PTR [rcx],dh
     11f:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
     122:	34 32                	xor    al,0x32
     124:	30 32                	xor    BYTE PTR [rdx],dh
     126:	31 37                	xor    DWORD PTR [rdi],esi
     128:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     12b:	35 35 30 34 34       	xor    eax,0x34343035
     130:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
     133:	30 37                	xor    BYTE PTR [rdi],dh
     135:	34 35                	xor    al,0x35
     137:	32 38                	xor    bh,BYTE PTR [rax]
     139:	30 30                	xor    BYTE PTR [rax],dh
     13b:	38 36                	cmp    BYTE PTR [rsi],dh
     13d:	39 39                	cmp    DWORD PTR [rcx],edi
     13f:	34 31                	xor    al,0x31
     141:	37                   	(bad)  
     142:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
     145:	31 39                	xor    DWORD PTR [rcx],edi
     147:	46                   	rex.RX
     148:	36 34 78             	ss xor al,0x78
     14b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     14e:	46                   	rex.RX
     14f:	4c 54                	rex.WR push rsp
     151:	33 32                	xor    esi,DWORD PTR [rdx]
     153:	58                   	pop    rax
     154:	5f                   	pop    rdi
     155:	4d                   	rex.WRB
     156:	41 58                	pop    r8
     158:	5f                   	pop    rdi
     159:	45 58                	rex.RB pop r8
     15b:	50                   	push   rax
     15c:	5f                   	pop    rdi
     15d:	5f                   	pop    rdi
     15e:	20 31                	and    BYTE PTR [rcx],dh
     160:	30 32                	xor    BYTE PTR [rdx],dh
     162:	34 00                	xor    al,0x0
     164:	5f                   	pop    rdi
     165:	73 68                	jae    1cf <_init-0x2e9>
     167:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     168:	72 74                	jb     1de <_init-0x2da>
     16a:	62                   	(bad)  
     16b:	75 66                	jne    1d3 <_init-0x2e5>
     16d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     170:	47                   	rex.RXB
     171:	43                   	rex.XB
     172:	43 5f                	rex.XB pop r15
     174:	41 54                	push   r12
     176:	4f                   	rex.WRXB
     177:	4d                   	rex.WRB
     178:	49                   	rex.WB
     179:	43 5f                	rex.XB pop r15
     17b:	54                   	push   rsp
     17c:	45 53                	rex.RB push r11
     17e:	54                   	push   rsp
     17f:	5f                   	pop    rdi
     180:	41                   	rex.B
     181:	4e                   	rex.WRX
     182:	44 5f                	rex.R pop rdi
     184:	53                   	push   rbx
     185:	45 54                	rex.RB push r12
     187:	5f                   	pop    rdi
     188:	54                   	push   rsp
     189:	52                   	push   rdx
     18a:	55                   	push   rbp
     18b:	45 56                	rex.RB push r14
     18d:	41                   	rex.B
     18e:	4c 20 31             	rex.WR and BYTE PTR [rcx],r14b
     191:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     194:	4f                   	rex.WRXB
     195:	46                   	rex.RX
     196:	46 5f                	rex.RX pop rdi
     198:	54                   	push   rsp
     199:	5f                   	pop    rdi
     19a:	4d                   	rex.WRB
     19b:	41 54                	push   r12
     19d:	43                   	rex.XB
     19e:	48                   	rex.W
     19f:	45 53                	rex.RB push r11
     1a1:	5f                   	pop    rdi
     1a2:	4f                   	rex.WRXB
     1a3:	46                   	rex.RX
     1a4:	46                   	rex.RX
     1a5:	36 34 5f             	ss xor al,0x5f
     1a8:	54                   	push   rsp
     1a9:	20 31                	and    BYTE PTR [rcx],dh
     1ab:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1ae:	44                   	rex.R
     1af:	45                   	rex.RB
     1b0:	43                   	rex.XB
     1b1:	36 34 5f             	ss xor al,0x5f
     1b4:	45 50                	rex.RB push r8
     1b6:	53                   	push   rbx
     1b7:	49                   	rex.WB
     1b8:	4c                   	rex.WR
     1b9:	4f                   	rex.WRXB
     1ba:	4e 5f                	rex.WRX pop rdi
     1bc:	5f                   	pop    rdi
     1bd:	20 31                	and    BYTE PTR [rcx],dh
     1bf:	45 2d 31 35 44 44    	rex.RB sub eax,0x44443531
     1c5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1c8:	44                   	rex.R
     1c9:	42                   	rex.X
     1ca:	4c 5f                	rex.WR pop rdi
     1cc:	44                   	rex.R
     1cd:	45                   	rex.RB
     1ce:	4e                   	rex.WRX
     1cf:	4f 52                	rex.WRXB push r10
     1d1:	4d 5f                	rex.WRB pop r15
     1d3:	4d                   	rex.WRB
     1d4:	49                   	rex.WB
     1d5:	4e 5f                	rex.WRX pop rdi
     1d7:	5f                   	pop    rdi
     1d8:	20 28                	and    BYTE PTR [rax],ch
     1da:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     1de:	62                   	(bad)  
     1df:	6c                   	ins    BYTE PTR es:[rdi],dx
     1e0:	65 29 34 2e          	sub    DWORD PTR gs:[rsi+rbp*1],esi
     1e4:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
     1e7:	36 35 36 34 35 38    	ss xor eax,0x38353436
     1ed:	34 31                	xor    al,0x31
     1ef:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
     1f2:	35 34 34 31 37       	xor    eax,0x37313434
     1f7:	36 35 36 38 37 39    	ss xor eax,0x39373836
     1fd:	32 38                	xor    bh,BYTE PTR [rax]
     1ff:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
     202:	32 31                	xor    dh,BYTE PTR [rcx]
     204:	33 37                	xor    esi,DWORD PTR [rdi]
     206:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     209:	33 32                	xor    esi,DWORD PTR [rdx]
     20b:	34 4c                	xor    al,0x4c
     20d:	29 00                	sub    DWORD PTR [rax],eax
     20f:	5f                   	pop    rdi
     210:	49                   	rex.WB
     211:	4f 5f                	rex.WRXB pop r15
     213:	6c                   	ins    BYTE PTR es:[rdi],dx
     214:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     215:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     218:	74 00                	je     21a <_init-0x29e>
     21a:	5f                   	pop    rdi
     21b:	5f                   	pop    rdi
     21c:	49                   	rex.WB
     21d:	4e 54                	rex.WRX push rsp
     21f:	50                   	push   rax
     220:	54                   	push   rsp
     221:	52                   	push   rdx
     222:	5f                   	pop    rdi
     223:	4d                   	rex.WRB
     224:	41 58                	pop    r8
     226:	5f                   	pop    rdi
     227:	5f                   	pop    rdi
     228:	20 30                	and    BYTE PTR [rax],dh
     22a:	78 37                	js     263 <_init-0x255>
     22c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     233:	66 66 66 66 66 66 66 
     23a:	66 4c 00 5f 47       	data16 rex.WR add BYTE PTR [rdi+0x47],r11b
     23f:	5f                   	pop    rdi
     240:	48                   	rex.W
     241:	41 56                	push   r14
     243:	45 5f                	rex.RB pop r15
     245:	53                   	push   rbx
     246:	54                   	push   rsp
     247:	5f                   	pop    rdi
     248:	42                   	rex.X
     249:	4c                   	rex.WR
     24a:	4b 53                	rex.WXB push r11
     24c:	49 5a                	rex.WB pop r10
     24e:	45 20 64 65 66       	and    BYTE PTR [r13+riz*2+0x66],r12b
     253:	69 6e 65 64 20 28 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f282064
     25a:	53                   	push   rbx
     25b:	54                   	push   rsp
     25c:	41 54                	push   r12
     25e:	42 55                	rex.X push rbp
     260:	46 5f                	rex.RX pop rdi
     262:	53                   	push   rbx
     263:	54                   	push   rsp
     264:	5f                   	pop    rdi
     265:	42                   	rex.X
     266:	4c                   	rex.WR
     267:	4b 53                	rex.WXB push r11
     269:	49 5a                	rex.WB pop r10
     26b:	45 29 00             	sub    DWORD PTR [r8],r8d
     26e:	5f                   	pop    rdi
     26f:	5f                   	pop    rdi
     270:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     272:	65 78 61             	gs js  2d6 <_init-0x1e2>
     275:	72 72                	jb     2e9 <_init-0x1cf>
     277:	20 5b 5d             	and    BYTE PTR [rbx+0x5d],bl
     27a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     27d:	46                   	rex.RX
     27e:	4c 54                	rex.WR push rsp
     280:	33 32                	xor    esi,DWORD PTR [rdx]
     282:	5f                   	pop    rdi
     283:	4d                   	rex.WRB
     284:	41                   	rex.B
     285:	4e 54                	rex.WRX push rsp
     287:	5f                   	pop    rdi
     288:	44                   	rex.R
     289:	49                   	rex.WB
     28a:	47 5f                	rex.RXB pop r15
     28c:	5f                   	pop    rdi
     28d:	20 32                	and    BYTE PTR [rdx],dh
     28f:	34 00                	xor    al,0x0
     291:	5f                   	pop    rdi
     292:	5f                   	pop    rdi
     293:	47                   	rex.RXB
     294:	43                   	rex.XB
     295:	43 5f                	rex.XB pop r15
     297:	48                   	rex.W
     298:	41 56                	push   r14
     29a:	45 5f                	rex.RB pop r15
     29c:	53                   	push   rbx
     29d:	59                   	pop    rcx
     29e:	4e                   	rex.WRX
     29f:	43 5f                	rex.XB pop r15
     2a1:	43                   	rex.XB
     2a2:	4f                   	rex.WRXB
     2a3:	4d 50                	rex.WRB push r8
     2a5:	41 52                	push   r10
     2a7:	45 5f                	rex.RB pop r15
     2a9:	41                   	rex.B
     2aa:	4e                   	rex.WRX
     2ab:	44 5f                	rex.R pop rdi
     2ad:	53                   	push   rbx
     2ae:	57                   	push   rdi
     2af:	41 50                	push   r8
     2b1:	5f                   	pop    rdi
     2b2:	38 20                	cmp    BYTE PTR [rax],ah
     2b4:	31 00                	xor    DWORD PTR [rax],eax
     2b6:	5f                   	pop    rdi
     2b7:	49                   	rex.WB
     2b8:	4f 53                	rex.WRXB push r11
     2ba:	5f                   	pop    rdi
     2bb:	42                   	rex.X
     2bc:	49                   	rex.WB
     2bd:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
     2c0:	32 38                	xor    bh,BYTE PTR [rax]
     2c2:	00 46 49             	add    BYTE PTR [rsi+0x49],al
     2c5:	4c                   	rex.WR
     2c6:	45                   	rex.RB
     2c7:	4e                   	rex.WRX
     2c8:	41                   	rex.B
     2c9:	4d                   	rex.WRB
     2ca:	45 5f                	rex.RB pop r15
     2cc:	4d                   	rex.WRB
     2cd:	41 58                	pop    r8
     2cf:	20 34 30             	and    BYTE PTR [rax+rsi*1],dh
     2d2:	39 36                	cmp    DWORD PTR [rsi],esi
     2d4:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     2d7:	54                   	push   rsp
     2d8:	44                   	rex.R
     2d9:	43 5f                	rex.XB pop r15
     2db:	50                   	push   rax
     2dc:	52                   	push   rdx
     2dd:	45                   	rex.RB
     2de:	44                   	rex.R
     2df:	45                   	rex.RB
     2e0:	46 5f                	rex.RX pop rdi
     2e2:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     2e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2e8:	55                   	push   rbp
     2e9:	53                   	push   rbx
     2ea:	45 5f                	rex.RB pop r15
     2ec:	49 53                	rex.WB push r11
     2ee:	4f                   	rex.WRXB
     2ef:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
     2f2:	20 31                	and    BYTE PTR [rcx],dh
     2f4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     2f7:	4f                   	rex.WRXB
     2f8:	46                   	rex.RX
     2f9:	42                   	rex.X
     2fa:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     2fd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     300:	4f 5f                	rex.WRXB pop r15
     302:	62                   	(bad)  
     303:	75 66                	jne    36b <_init-0x14d>
     305:	5f                   	pop    rdi
     306:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     308:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     30c:	49                   	rex.WB
     30d:	4e 54                	rex.WRX push rsp
     30f:	5f                   	pop    rdi
     310:	46                   	rex.RX
     311:	41 53                	push   r11
     313:	54                   	push   rsp
     314:	36 34 5f             	ss xor al,0x5f
     317:	57                   	push   rdi
     318:	49                   	rex.WB
     319:	44 54                	rex.R push rsp
     31b:	48 5f                	rex.W pop rdi
     31d:	5f                   	pop    rdi
     31e:	20 36                	and    BYTE PTR [rsi],dh
     320:	34 00                	xor    al,0x0
     322:	5f                   	pop    rdi
     323:	49                   	rex.WB
     324:	4f 5f                	rex.WRXB pop r15
     326:	45                   	rex.RB
     327:	4f                   	rex.WRXB
     328:	46 5f                	rex.RX pop rdi
     32a:	53                   	push   rbx
     32b:	45                   	rex.RB
     32c:	45                   	rex.RB
     32d:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
     330:	78 31                	js     363 <_init-0x155>
     332:	30 00                	xor    BYTE PTR [rax],al
     334:	53                   	push   rbx
     335:	45                   	rex.RB
     336:	45                   	rex.RB
     337:	4b 5f                	rex.WXB pop r15
     339:	43 55                	rex.XB push r13
     33b:	52                   	push   rdx
     33c:	20 31                	and    BYTE PTR [rcx],dh
     33e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     341:	46                   	rex.RX
     342:	4c 54                	rex.WR push rsp
     344:	33 32                	xor    esi,DWORD PTR [rdx]
     346:	58                   	pop    rax
     347:	5f                   	pop    rdi
     348:	44                   	rex.R
     349:	45                   	rex.RB
     34a:	43                   	rex.XB
     34b:	49                   	rex.WB
     34c:	4d                   	rex.WRB
     34d:	41                   	rex.B
     34e:	4c 5f                	rex.WR pop rdi
     350:	44                   	rex.R
     351:	49                   	rex.WB
     352:	47 5f                	rex.RXB pop r15
     354:	5f                   	pop    rdi
     355:	20 31                	and    BYTE PTR [rcx],dh
     357:	37                   	(bad)  
     358:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     35b:	6b 38 5f             	imul   edi,DWORD PTR [rax],0x5f
     35e:	5f                   	pop    rdi
     35f:	20 31                	and    BYTE PTR [rcx],dh
     361:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     364:	44                   	rex.R
     365:	42                   	rex.X
     366:	4c 5f                	rex.WR pop rdi
     368:	4d                   	rex.WRB
     369:	49                   	rex.WB
     36a:	4e 5f                	rex.WRX pop rdi
     36c:	45 58                	rex.RB pop r8
     36e:	50                   	push   rax
     36f:	5f                   	pop    rdi
     370:	5f                   	pop    rdi
     371:	20 28                	and    BYTE PTR [rax],ch
     373:	2d 31 30 32 31       	sub    eax,0x31323031
     378:	29 00                	sub    DWORD PTR [rax],eax
     37a:	5f                   	pop    rdi
     37b:	5f                   	pop    rdi
     37c:	49                   	rex.WB
     37d:	4e 54                	rex.WRX push rsp
     37f:	5f                   	pop    rdi
     380:	46                   	rex.RX
     381:	41 53                	push   r11
     383:	54                   	push   rsp
     384:	36 34 5f             	ss xor al,0x5f
     387:	4d                   	rex.WRB
     388:	41 58                	pop    r8
     38a:	5f                   	pop    rdi
     38b:	5f                   	pop    rdi
     38c:	20 30                	and    BYTE PTR [rax],dh
     38e:	78 37                	js     3c7 <_init-0xf1>
     390:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     397:	66 66 66 66 66 66 66 
     39e:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     3a3:	68 61 73 5f 69       	push   0x695f7361
     3a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3a9:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     3ad:	65 5f                	gs pop rdi
     3af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3b0:	65 78 74             	gs js  427 <_init-0x91>
     3b3:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     3b6:	52                   	push   rdx
     3b7:	29 20                	sub    DWORD PTR [rax],esp
     3b9:	5f                   	pop    rdi
     3ba:	5f                   	pop    rdi
     3bb:	68 61 73 5f 69       	push   0x695f7361
     3c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3c1:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     3c5:	65 5f                	gs pop rdi
     3c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3c8:	65 78 74             	gs js  43f <_init-0x79>
     3cb:	5f                   	pop    rdi
     3cc:	5f                   	pop    rdi
     3cd:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     3d0:	52                   	push   rdx
     3d1:	29 00                	sub    DWORD PTR [rax],eax
     3d3:	5f                   	pop    rdi
     3d4:	49                   	rex.WB
     3d5:	4f 5f                	rex.WRXB pop r15
     3d7:	52                   	push   rdx
     3d8:	49                   	rex.WB
     3d9:	47                   	rex.RXB
     3da:	48 54                	rex.W push rsp
     3dc:	20 30                	and    BYTE PTR [rax],dh
     3de:	34 00                	xor    al,0x0
     3e0:	5f                   	pop    rdi
     3e1:	49                   	rex.WB
     3e2:	4f 5f                	rex.WRXB pop r15
     3e4:	55                   	push   rbp
     3e5:	53                   	push   rbx
     3e6:	45 52                	rex.RB push r10
     3e8:	5f                   	pop    rdi
     3e9:	42 55                	rex.X push rbp
     3eb:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
     3ee:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     3f1:	59                   	pop    rcx
     3f2:	53                   	push   rbx
     3f3:	5f                   	pop    rdi
     3f4:	43                   	rex.XB
     3f5:	44                   	rex.R
     3f6:	45                   	rex.RB
     3f7:	46 53                	rex.RX push rbx
     3f9:	5f                   	pop    rdi
     3fa:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     3fd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     400:	46                   	rex.RX
     401:	4c 54                	rex.WR push rsp
     403:	33 32                	xor    esi,DWORD PTR [rdx]
     405:	58                   	pop    rax
     406:	5f                   	pop    rdi
     407:	4d                   	rex.WRB
     408:	41 58                	pop    r8
     40a:	5f                   	pop    rdi
     40b:	5f                   	pop    rdi
     40c:	20 31                	and    BYTE PTR [rcx],dh
     40e:	2e 37                	cs (bad) 
     410:	39 37                	cmp    DWORD PTR [rdi],esi
     412:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     415:	31 33                	xor    DWORD PTR [rbx],esi
     417:	34 38                	xor    al,0x38
     419:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     41c:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31383459 <_end+0x31182441>
     422:	34 35                	xor    al,0x35
     424:	32 37                	xor    dh,BYTE PTR [rdi]
     426:	34 32                	xor    al,0x32
     428:	33 37                	xor    esi,DWORD PTR [rdi]
     42a:	33 31                	xor    esi,DWORD PTR [rcx]
     42c:	37                   	(bad)  
     42d:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     430:	35 37 65 2b 33       	xor    eax,0x332b6537
     435:	30 38                	xor    BYTE PTR [rax],bh
     437:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     43a:	78 00                	js     43c <_init-0x7c>
     43c:	5f                   	pop    rdi
     43d:	5f                   	pop    rdi
     43e:	67 6c                	ins    BYTE PTR es:[edi],dx
     440:	69 62 63 5f 75 6e 6c 	imul   esp,DWORD PTR [rdx+0x63],0x6c6e755f
     447:	69 6b 65 6c 79 28 63 	imul   ebp,DWORD PTR [rbx+0x65],0x6328796c
     44e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     44f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     450:	64 29 20             	sub    DWORD PTR fs:[rax],esp
     453:	5f                   	pop    rdi
     454:	5f                   	pop    rdi
     455:	62                   	(bad)  
     456:	75 69                	jne    4c1 <_init+0x9>
     458:	6c                   	ins    BYTE PTR es:[rdi],dx
     459:	74 69                	je     4c4 <_init+0xc>
     45b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     45c:	5f                   	pop    rdi
     45d:	65 78 70             	gs js  4d0 <.plt>
     460:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
     465:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
     468:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     469:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
     46d:	30 29                	xor    BYTE PTR [rcx],ch
     46f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     472:	53                   	push   rbx
     473:	49 5a                	rex.WB pop r10
     475:	45                   	rex.RB
     476:	4f                   	rex.WRXB
     477:	46 5f                	rex.RX pop rdi
     479:	57                   	push   rdi
     47a:	49                   	rex.WB
     47b:	4e 54                	rex.WRX push rsp
     47d:	5f                   	pop    rdi
     47e:	54                   	push   rsp
     47f:	5f                   	pop    rdi
     480:	5f                   	pop    rdi
     481:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     484:	5f                   	pop    rdi
     485:	5f                   	pop    rdi
     486:	47                   	rex.RXB
     487:	4e 55                	rex.WRX push rbp
     489:	43 5f                	rex.XB pop r15
     48b:	50                   	push   rax
     48c:	52                   	push   rdx
     48d:	45 52                	rex.RB push r10
     48f:	45 51                	rex.RB push r9
     491:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     494:	6a 2c                	push   0x2c
     496:	6d                   	ins    DWORD PTR es:[rdi],dx
     497:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
     49e:	5f                   	pop    rdi
     49f:	47                   	rex.RXB
     4a0:	4e 55                	rex.WRX push rbp
     4a2:	43 5f                	rex.XB pop r15
     4a4:	5f                   	pop    rdi
     4a5:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     4a8:	20 31                	and    BYTE PTR [rcx],dh
     4aa:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     4ad:	2b 20                	sub    esp,DWORD PTR [rax]
     4af:	5f                   	pop    rdi
     4b0:	5f                   	pop    rdi
     4b1:	47                   	rex.RXB
     4b2:	4e 55                	rex.WRX push rbp
     4b4:	43 5f                	rex.XB pop r15
     4b6:	4d                   	rex.WRB
     4b7:	49                   	rex.WB
     4b8:	4e                   	rex.WRX
     4b9:	4f 52                	rex.WRXB push r10
     4bb:	5f                   	pop    rdi
     4bc:	5f                   	pop    rdi
     4bd:	20 3e                	and    BYTE PTR [rsi],bh
     4bf:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     4c4:	61                   	(bad)  
     4c5:	6a 29                	push   0x29
     4c7:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     4ca:	20 31                	and    BYTE PTR [rcx],dh
     4cc:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     4cf:	2b 20                	sub    esp,DWORD PTR [rax]
     4d1:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     4d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4d5:	29 29                	sub    DWORD PTR [rcx],ebp
     4d7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4da:	55                   	push   rbp
     4db:	49                   	rex.WB
     4dc:	4e 54                	rex.WRX push rsp
     4de:	50                   	push   rax
     4df:	54                   	push   rsp
     4e0:	52                   	push   rdx
     4e1:	5f                   	pop    rdi
     4e2:	4d                   	rex.WRB
     4e3:	41 58                	pop    r8
     4e5:	5f                   	pop    rdi
     4e6:	5f                   	pop    rdi
     4e7:	20 30                	and    BYTE PTR [rax],dh
     4e9:	78 66                	js     551 <deregister_tm_clones+0x31>
     4eb:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     4f2:	66 66 66 66 66 66 66 
     4f9:	66 55                	push   bp
     4fb:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     4ff:	76 61                	jbe    562 <register_tm_clones+0x2>
     501:	5f                   	pop    rdi
     502:	61                   	(bad)  
     503:	72 67                	jb     56c <register_tm_clones+0xc>
     505:	5f                   	pop    rdi
     506:	70 61                	jo     569 <register_tm_clones+0x9>
     508:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     50b:	6c                   	ins    BYTE PTR es:[rdi],dx
     50c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     50e:	28 29                	sub    BYTE PTR [rcx],ch
     510:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     513:	62                   	(bad)  
     514:	75 69                	jne    57f <register_tm_clones+0x1f>
     516:	6c                   	ins    BYTE PTR es:[rdi],dx
     517:	74 69                	je     582 <register_tm_clones+0x22>
     519:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     51a:	5f                   	pop    rdi
     51b:	76 61                	jbe    57e <register_tm_clones+0x1e>
     51d:	5f                   	pop    rdi
     51e:	61                   	(bad)  
     51f:	72 67                	jb     588 <register_tm_clones+0x28>
     521:	5f                   	pop    rdi
     522:	70 61                	jo     585 <register_tm_clones+0x25>
     524:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     527:	6c                   	ins    BYTE PTR es:[rdi],dx
     528:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     52a:	20 28                	and    BYTE PTR [rax],ch
     52c:	29 00                	sub    DWORD PTR [rax],eax
     52e:	5f                   	pop    rdi
     52f:	47 5f                	rex.RXB pop r15
     531:	48                   	rex.W
     532:	41 56                	push   r14
     534:	45 5f                	rex.RB pop r15
     536:	4d                   	rex.WRB
     537:	4d                   	rex.WRB
     538:	41 50                	push   r8
     53a:	20 31                	and    BYTE PTR [rcx],dh
     53c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     53f:	61                   	(bad)  
     540:	74 74                	je     5b6 <__do_global_dtors_aux+0x6>
     542:	72 69                	jb     5ad <register_tm_clones+0x4d>
     544:	62                   	(bad)  
     545:	75 74                	jne    5bb <__do_global_dtors_aux+0xb>
     547:	65 5f                	gs pop rdi
     549:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     54c:	73 74                	jae    5c2 <__do_global_dtors_aux+0x12>
     54e:	5f                   	pop    rdi
     54f:	5f                   	pop    rdi
     550:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     553:	61                   	(bad)  
     554:	74 74                	je     5ca <__do_global_dtors_aux+0x1a>
     556:	72 69                	jb     5c1 <__do_global_dtors_aux+0x11>
     558:	62                   	(bad)  
     559:	75 74                	jne    5cf <__do_global_dtors_aux+0x1f>
     55b:	65 5f                	gs pop rdi
     55d:	5f                   	pop    rdi
     55e:	20 28                	and    BYTE PTR [rax],ch
     560:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     563:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     566:	73 74                	jae    5dc <__do_global_dtors_aux+0x2c>
     568:	5f                   	pop    rdi
     569:	5f                   	pop    rdi
     56a:	29 29                	sub    DWORD PTR [rcx],ebp
     56c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     56f:	47                   	rex.RXB
     570:	4c                   	rex.WR
     571:	49                   	rex.WB
     572:	42                   	rex.X
     573:	43 5f                	rex.XB pop r15
     575:	55                   	push   rbp
     576:	53                   	push   rbx
     577:	45 5f                	rex.RB pop r15
     579:	44                   	rex.R
     57a:	45 50                	rex.RB push r8
     57c:	52                   	push   rdx
     57d:	45                   	rex.RB
     57e:	43                   	rex.XB
     57f:	41 54                	push   r12
     581:	45                   	rex.RB
     582:	44 5f                	rex.R pop rdi
     584:	47                   	rex.RXB
     585:	45 54                	rex.RB push r12
     587:	53                   	push   rbx
     588:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     58b:	4f 5f                	rex.WRXB pop r15
     58d:	4e                   	rex.WRX
     58e:	4f 5f                	rex.WRXB pop r15
     590:	57                   	push   rdi
     591:	52                   	push   rdx
     592:	49 54                	rex.WB push r12
     594:	45 53                	rex.RB push r11
     596:	20 38                	and    BYTE PTR [rax],bh
     598:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     59b:	47                   	rex.RXB
     59c:	4e 55                	rex.WRX push rbp
     59e:	43 5f                	rex.XB pop r15
     5a0:	4d                   	rex.WRB
     5a1:	49                   	rex.WB
     5a2:	4e                   	rex.WRX
     5a3:	4f 52                	rex.WRXB push r10
     5a5:	5f                   	pop    rdi
     5a6:	5f                   	pop    rdi
     5a7:	20 33                	and    BYTE PTR [rbx],dh
     5a9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5ac:	55                   	push   rbp
     5ad:	53                   	push   rbx
     5ae:	45 5f                	rex.RB pop r15
     5b0:	4c                   	rex.WR
     5b1:	41 52                	push   r10
     5b3:	47                   	rex.RXB
     5b4:	45                   	rex.RB
     5b5:	46                   	rex.RX
     5b6:	49                   	rex.WB
     5b7:	4c                   	rex.WR
     5b8:	45                   	rex.RB
     5b9:	36 34 00             	ss xor al,0x0
     5bc:	5f                   	pop    rdi
     5bd:	5f                   	pop    rdi
     5be:	52                   	push   rdx
     5bf:	4c                   	rex.WR
     5c0:	49                   	rex.WB
     5c1:	4d 5f                	rex.WRB pop r15
     5c3:	54                   	push   rsp
     5c4:	5f                   	pop    rdi
     5c5:	54                   	push   rsp
     5c6:	59                   	pop    rcx
     5c7:	50                   	push   rax
     5c8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     5cc:	53                   	push   rbx
     5cd:	59                   	pop    rcx
     5ce:	53                   	push   rbx
     5cf:	43                   	rex.XB
     5d0:	41                   	rex.B
     5d1:	4c                   	rex.WR
     5d2:	4c 5f                	rex.WR pop rdi
     5d4:	55                   	push   rbp
     5d5:	4c                   	rex.WR
     5d6:	4f                   	rex.WRXB
     5d7:	4e                   	rex.WRX
     5d8:	47 5f                	rex.RXB pop r15
     5da:	54                   	push   rsp
     5db:	59                   	pop    rcx
     5dc:	50                   	push   rax
     5dd:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     5e1:	4c                   	rex.WR
     5e2:	44                   	rex.R
     5e3:	42                   	rex.X
     5e4:	4c 5f                	rex.WR pop rdi
     5e6:	52                   	push   rdx
     5e7:	45                   	rex.RB
     5e8:	44                   	rex.R
     5e9:	49 52                	rex.WB push r10
     5eb:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
     5ee:	6d                   	ins    DWORD PTR es:[rdi],dx
     5ef:	65 2c 70             	gs sub al,0x70
     5f2:	72 6f                	jb     663 <__libc_csu_init+0x23>
     5f4:	74 6f                	je     665 <__libc_csu_init+0x25>
     5f6:	29 20                	sub    DWORD PTR [rax],esp
     5f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5f9:	61                   	(bad)  
int main(int argc, char * argv[]) {
     5fa:	6d                   	ins    DWORD PTR es:[rdi],dx
     5fb:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
     5ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     600:	74 6f                	je     671 <__libc_csu_init+0x31>
     602:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
	a = 2.2;
     605:	4f 5f                	rex.WRXB pop r15
     607:	77 72                	ja     67b <__libc_csu_init+0x3b>
     609:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
     610:	00 
     611:	5f                   	pop    rdi
	b = 3.3;
     612:	5f                   	pop    rdi
     613:	47                   	rex.RXB
     614:	4c                   	rex.WR
     615:	49                   	rex.WB
     616:	42                   	rex.X
     617:	43 5f                	rex.XB pop r15
     619:	50                   	push   rax
     61a:	52                   	push   rdx
     61b:	45 52                	rex.RB push r10
     61d:	45 51                	rex.RB push r9
	c = a + b;
     61f:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     622:	6a 2c                	push   0x2c
     624:	6d                   	ins    DWORD PTR es:[rdi],dx
     625:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
     62c:	5f                   	pop    rdi
     62d:	47                   	rex.RXB
     62e:	4c                   	rex.WR
     62f:	49                   	rex.WB
     630:	42                   	rex.X
     631:	43 5f                	rex.XB pop r15
}
     633:	5f                   	pop    rdi
     634:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     637:	20 31                	and    BYTE PTR [rcx],dh
     639:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     63c:	2b 20                	sub    esp,DWORD PTR [rax]
     63e:	5f                   	pop    rdi
     63f:	5f                   	pop    rdi
     640:	47                   	rex.RXB
     641:	4c                   	rex.WR
     642:	49                   	rex.WB
     643:	42                   	rex.X
     644:	43 5f                	rex.XB pop r15
     646:	4d                   	rex.WRB
     647:	49                   	rex.WB
     648:	4e                   	rex.WRX
     649:	4f 52                	rex.WRXB push r10
     64b:	5f                   	pop    rdi
     64c:	5f                   	pop    rdi
     64d:	20 3e                	and    BYTE PTR [rsi],bh
     64f:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     654:	61                   	(bad)  
     655:	6a 29                	push   0x29
     657:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     65a:	20 31                	and    BYTE PTR [rcx],dh
     65c:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     65f:	2b 20                	sub    esp,DWORD PTR [rax]
     661:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     664:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     665:	29 29                	sub    DWORD PTR [rcx],ebp
     667:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     66a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     66b:	65 65 64 5f          	gs gs fs pop rdi
     66f:	4e 55                	rex.WRX push rbp
     671:	4c                   	rex.WR
     672:	4c 20 00             	rex.WR and BYTE PTR [rax],r8b
     675:	5f                   	pop    rdi
     676:	5f                   	pop    rdi
     677:	46                   	rex.RX
     678:	4c 54                	rex.WR push rsp
     67a:	36 34 5f             	ss xor al,0x5f
     67d:	4d                   	rex.WRB
     67e:	49                   	rex.WB
     67f:	4e 5f                	rex.WRX pop rdi
     681:	5f                   	pop    rdi
     682:	20 32                	and    BYTE PTR [rdx],dh
     684:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     687:	35 30 37 33 38       	xor    eax,0x38333730
     68c:	35 38 35 30 37       	xor    eax,0x37303538
     691:	32 30                	xor    dh,BYTE PTR [rax]
     693:	31 33                	xor    DWORD PTR [rbx],esi
     695:	38 33                	cmp    BYTE PTR [rbx],dh
     697:	30 39                	xor    BYTE PTR [rcx],bh
     699:	30 32                	xor    BYTE PTR [rdx],dh
     69b:	33 32                	xor    esi,DWORD PTR [rdx]
     69d:	37                   	(bad)  
     69e:	31 37                	xor    DWORD PTR [rdi],esi
     6a0:	33 33                	xor    esi,DWORD PTR [rbx]
     6a2:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     6a5:	34 30                	xor    al,0x30
     6a7:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
     6ae:	36 34 00             	ss xor al,0x0
     6b1:	5f                   	pop    rdi
     6b2:	5f                   	pop    rdi
     6b3:	4c                   	rex.WR
     6b4:	4f                   	rex.WRXB
     6b5:	4e                   	rex.WRX
     6b6:	47 5f                	rex.RXB pop r15
     6b8:	4c                   	rex.WR
     6b9:	4f                   	rex.WRXB
     6ba:	4e                   	rex.WRX
     6bb:	47 5f                	rex.RXB pop r15
     6bd:	57                   	push   rdi
     6be:	49                   	rex.WB
     6bf:	44 54                	rex.R push rsp
     6c1:	48 5f                	rex.W pop rdi
     6c3:	5f                   	pop    rdi
     6c4:	20 36                	and    BYTE PTR [rsi],dh
     6c6:	34 00                	xor    al,0x0
     6c8:	5f                   	pop    rdi
     6c9:	50                   	push   rax
     6ca:	4f 53                	rex.WRXB push r11
     6cc:	49 58                	rex.WB pop r8
     6ce:	5f                   	pop    rdi
     6cf:	53                   	push   rbx
     6d0:	4f 55                	rex.WRXB push r13
     6d2:	52                   	push   rdx
     6d3:	43                   	rex.XB
     6d4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     6d8:	46                   	rex.RX
     6d9:	4c 54                	rex.WR push rsp
     6db:	5f                   	pop    rdi
     6dc:	44                   	rex.R
     6dd:	45                   	rex.RB
     6de:	4e                   	rex.WRX
     6df:	4f 52                	rex.WRXB push r10
     6e1:	4d 5f                	rex.WRB pop r15
     6e3:	4d                   	rex.WRB
     6e4:	49                   	rex.WB
     6e5:	4e 5f                	rex.WRX pop rdi
     6e7:	5f                   	pop    rdi
     6e8:	20 31                	and    BYTE PTR [rcx],dh
     6ea:	2e 34 30             	cs xor al,0x30
     6ed:	31 32                	xor    DWORD PTR [rdx],esi
     6ef:	39 38                	cmp    DWORD PTR [rax],edi
     6f1:	34 36                	xor    al,0x36
     6f3:	34 33                	xor    al,0x33
     6f5:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     6f8:	31 37                	xor    DWORD PTR [rdi],esi
     6fa:	30 37                	xor    BYTE PTR [rdi],dh
     6fc:	30 39                	xor    BYTE PTR [rcx],bh
     6fe:	32 33                	xor    dh,BYTE PTR [rbx]
     700:	37                   	(bad)  
     701:	32 39                	xor    bh,BYTE PTR [rcx]
     703:	35 38 33 32 38       	xor    eax,0x38323338
     708:	39 39                	cmp    DWORD PTR [rcx],edi
     70a:	31 36                	xor    DWORD PTR [rsi],esi
     70c:	31 33                	xor    DWORD PTR [rbx],esi
     70e:	65 2d 34 35 46 00    	gs sub eax,0x463534
     714:	5f                   	pop    rdi
     715:	5f                   	pop    rdi
     716:	43                   	rex.XB
     717:	48                   	rex.W
     718:	41 52                	push   r10
     71a:	31 36                	xor    DWORD PTR [rsi],esi
     71c:	5f                   	pop    rdi
     71d:	54                   	push   rsp
     71e:	59                   	pop    rcx
     71f:	50                   	push   rax
     720:	45 5f                	rex.RB pop r15
     722:	5f                   	pop    rdi
     723:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     726:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     727:	72 74                	jb     79d <__GNU_EH_FRAME_HDR+0xd1>
     729:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     72c:	73 69                	jae    797 <__GNU_EH_FRAME_HDR+0xcb>
     72e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     730:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     735:	74 00                	je     737 <__GNU_EH_FRAME_HDR+0x6b>
     737:	5f                   	pop    rdi
     738:	5f                   	pop    rdi
     739:	53                   	push   rbx
     73a:	49 5a                	rex.WB pop r10
     73c:	45                   	rex.RB
     73d:	4f                   	rex.WRXB
     73e:	46 5f                	rex.RX pop rdi
     740:	53                   	push   rbx
     741:	49 5a                	rex.WB pop r10
     743:	45 5f                	rex.RB pop r15
     745:	54                   	push   rsp
     746:	5f                   	pop    rdi
     747:	5f                   	pop    rdi
     748:	20 38                	and    BYTE PTR [rax],bh
     74a:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
     74d:	67 63 00             	movsxd eax,DWORD PTR [eax]
     750:	5f                   	pop    rdi
     751:	5f                   	pop    rdi
     752:	4f 52                	rex.WRXB push r10
     754:	44                   	rex.R
     755:	45 52                	rex.RB push r10
     757:	5f                   	pop    rdi
     758:	42                   	rex.X
     759:	49                   	rex.WB
     75a:	47 5f                	rex.RXB pop r15
     75c:	45                   	rex.RB
     75d:	4e                   	rex.WRX
     75e:	44                   	rex.R
     75f:	49                   	rex.WB
     760:	41                   	rex.B
     761:	4e 5f                	rex.WRX pop rdi
     763:	5f                   	pop    rdi
     764:	20 34 33             	and    BYTE PTR [rbx+rsi*1],dh
     767:	32 31                	xor    dh,BYTE PTR [rcx]
     769:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     76c:	47                   	rex.RXB
     76d:	4e 55                	rex.WRX push rbp
     76f:	43 5f                	rex.XB pop r15
     771:	5f                   	pop    rdi
     772:	20 37                	and    BYTE PTR [rdi],dh
     774:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     777:	4f 5f                	rex.WRXB pop r15
     779:	4c                   	rex.WR
     77a:	49                   	rex.WB
     77b:	4e                   	rex.WRX
     77c:	45 5f                	rex.RB pop r15
     77e:	42 55                	rex.X push rbp
     780:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     783:	78 32                	js     7b7 <__GNU_EH_FRAME_HDR+0xeb>
     785:	30 30                	xor    BYTE PTR [rax],dh
     787:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     78a:	55                   	push   rbp
     78b:	53                   	push   rbx
     78c:	45 5f                	rex.RB pop r15
     78e:	49 53                	rex.WB push r11
     790:	4f                   	rex.WRXB
     791:	43 58                	rex.XB pop r8
     793:	58                   	pop    rax
     794:	31 31                	xor    DWORD PTR [rcx],esi
     796:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     799:	55                   	push   rbp
     79a:	53                   	push   rbx
     79b:	45 5f                	rex.RB pop r15
     79d:	41 54                	push   r12
     79f:	46                   	rex.RX
     7a0:	49                   	rex.WB
     7a1:	4c                   	rex.WR
     7a2:	45 20 31             	and    BYTE PTR [r9],r14b
     7a5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7ac:	75 6c                	jne    81a <__FRAME_END__+0xe>
     7ae:	6c                   	ins    BYTE PTR es:[rdi],dx
     7af:	28 70 61             	sub    BYTE PTR [rax+0x61],dh
     7b2:	72 61                	jb     815 <__FRAME_END__+0x9>
     7b4:	6d                   	ins    DWORD PTR es:[rdi],dx
     7b5:	73 29                	jae    7e0 <__GNU_EH_FRAME_HDR+0x114>
     7b7:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     7ba:	61                   	(bad)  
     7bb:	74 74                	je     831 <__FRAME_END__+0x25>
     7bd:	72 69                	jb     828 <__FRAME_END__+0x1c>
     7bf:	62                   	(bad)  
     7c0:	75 74                	jne    836 <__FRAME_END__+0x2a>
     7c2:	65 5f                	gs pop rdi
     7c4:	5f                   	pop    rdi
     7c5:	20 28                	and    BYTE PTR [rax],ch
     7c7:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     7ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7ce:	75 6c                	jne    83c <__FRAME_END__+0x30>
     7d0:	6c                   	ins    BYTE PTR es:[rdi],dx
     7d1:	5f                   	pop    rdi
     7d2:	5f                   	pop    rdi
     7d3:	20 70 61             	and    BYTE PTR [rax+0x61],dh
     7d6:	72 61                	jb     839 <__FRAME_END__+0x2d>
     7d8:	6d                   	ins    DWORD PTR es:[rdi],dx
     7d9:	73 29                	jae    804 <__GNU_EH_FRAME_HDR+0x138>
     7db:	29 00                	sub    DWORD PTR [rax],eax
     7dd:	5f                   	pop    rdi
     7de:	5f                   	pop    rdi
     7df:	55                   	push   rbp
     7e0:	49                   	rex.WB
     7e1:	4e 54                	rex.WRX push rsp
     7e3:	36 34 5f             	ss xor al,0x5f
     7e6:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     7ea:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     7ed:	23 23                	and    esp,DWORD PTR [rbx]
     7ef:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
     7f2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7f5:	47                   	rex.RXB
     7f6:	4e 55                	rex.WRX push rbp
     7f8:	5f                   	pop    rdi
     7f9:	4c                   	rex.WR
     7fa:	49                   	rex.WB
     7fb:	42 52                	rex.X push rdx
     7fd:	41 52                	push   r10
     7ff:	59                   	pop    rcx
     800:	5f                   	pop    rdi
     801:	5f                   	pop    rdi
     802:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     805:	44                   	rex.R
     806:	42                   	rex.X
     807:	4c 5f                	rex.WR pop rdi
     809:	4d                   	rex.WRB
     80a:	41                   	rex.B
     80b:	4e 54                	rex.WRX push rsp
     80d:	5f                   	pop    rdi
     80e:	44                   	rex.R
     80f:	49                   	rex.WB
     810:	47 5f                	rex.RXB pop r15
     812:	5f                   	pop    rdi
     813:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f084c <_end+0x5f3ef834>
     819:	55                   	push   rbp
     81a:	53                   	push   rbx
     81b:	45 5f                	rex.RB pop r15
     81d:	50                   	push   rax
     81e:	4f 53                	rex.WRXB push r11
     820:	49 58                	rex.WB pop r8
     822:	31 39                	xor    DWORD PTR [rcx],edi
     824:	39 35 30 36 20 31    	cmp    DWORD PTR [rip+0x31203630],esi        # 31203e5a <_end+0x31002e42>
     82a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     82d:	73 74                	jae    8a3 <__FRAME_END__+0x97>
     82f:	75 62                	jne    893 <__FRAME_END__+0x87>
     831:	5f                   	pop    rdi
     832:	63 68 66             	movsxd ebp,DWORD PTR [rax+0x66]
     835:	6c                   	ins    BYTE PTR es:[rdi],dx
     836:	61                   	(bad)  
     837:	67 73 20             	addr32 jae 85a <__FRAME_END__+0x4e>
     83a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     83d:	49                   	rex.WB
     83e:	4e 54                	rex.WRX push rsp
     840:	5f                   	pop    rdi
     841:	4d                   	rex.WRB
     842:	41 58                	pop    r8
     844:	5f                   	pop    rdi
     845:	5f                   	pop    rdi
     846:	20 30                	and    BYTE PTR [rax],dh
     848:	78 37                	js     881 <__FRAME_END__+0x75>
     84a:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x66],bl
     851:	00 5f 66 
     854:	6c                   	ins    BYTE PTR es:[rdi],dx
     855:	61                   	(bad)  
     856:	67 73 32             	addr32 jae 88b <__FRAME_END__+0x7f>
     859:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     85c:	4e 54                	rex.WRX push rsp
     85e:	48                   	rex.W
     85f:	4e                   	rex.WRX
     860:	4c 28 66 63          	rex.WR sub BYTE PTR [rsi+0x63],r12b
     864:	74 29                	je     88f <__FRAME_END__+0x83>
     866:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     869:	61                   	(bad)  
     86a:	74 74                	je     8e0 <__FRAME_END__+0xd4>
     86c:	72 69                	jb     8d7 <__FRAME_END__+0xcb>
     86e:	62                   	(bad)  
     86f:	75 74                	jne    8e5 <__FRAME_END__+0xd9>
     871:	65 5f                	gs pop rdi
     873:	5f                   	pop    rdi
     874:	20 28                	and    BYTE PTR [rax],ch
     876:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     879:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     87a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     87b:	74 68                	je     8e5 <__FRAME_END__+0xd9>
     87d:	72 6f                	jb     8ee <__FRAME_END__+0xe2>
     87f:	77 5f                	ja     8e0 <__FRAME_END__+0xd4>
     881:	5f                   	pop    rdi
     882:	29 29                	sub    DWORD PTR [rcx],ebp
     884:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     887:	74 00                	je     889 <__FRAME_END__+0x7d>
     889:	5f                   	pop    rdi
     88a:	49                   	rex.WB
     88b:	4f 5f                	rex.WRXB pop r15
     88d:	42                   	rex.X
     88e:	4f                   	rex.WRXB
     88f:	4f                   	rex.WRXB
     890:	4c                   	rex.WR
     891:	41                   	rex.B
     892:	4c 50                	rex.WR push rax
     894:	48                   	rex.W
     895:	41 20 30             	and    BYTE PTR [r8],sil
     898:	32 30                	xor    dh,BYTE PTR [rax]
     89a:	30 30                	xor    BYTE PTR [rax],dh
     89c:	30 30                	xor    BYTE PTR [rax],dh
     89e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8a1:	46                   	rex.RX
     8a2:	4c 54                	rex.WR push rsp
     8a4:	33 32                	xor    esi,DWORD PTR [rdx]
     8a6:	5f                   	pop    rdi
     8a7:	48                   	rex.W
     8a8:	41 53                	push   r11
     8aa:	5f                   	pop    rdi
     8ab:	51                   	push   rcx
     8ac:	55                   	push   rbp
     8ad:	49                   	rex.WB
     8ae:	45 54                	rex.RB push r12
     8b0:	5f                   	pop    rdi
     8b1:	4e                   	rex.WRX
     8b2:	41                   	rex.B
     8b3:	4e 5f                	rex.WRX pop rdi
     8b5:	5f                   	pop    rdi
     8b6:	20 31                	and    BYTE PTR [rcx],dh
     8b8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8bb:	49                   	rex.WB
     8bc:	4e 54                	rex.WRX push rsp
     8be:	31 36                	xor    DWORD PTR [rsi],esi
     8c0:	5f                   	pop    rdi
     8c1:	54                   	push   rsp
     8c2:	59                   	pop    rcx
     8c3:	50                   	push   rax
     8c4:	45 5f                	rex.RB pop r15
     8c6:	5f                   	pop    rdi
     8c7:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     8ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8cb:	72 74                	jb     941 <__FRAME_END__+0x135>
     8cd:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     8d0:	74 00                	je     8d2 <__FRAME_END__+0xc6>
     8d2:	5f                   	pop    rdi
     8d3:	5f                   	pop    rdi
     8d4:	44                   	rex.R
     8d5:	45                   	rex.RB
     8d6:	43                   	rex.XB
     8d7:	49                   	rex.WB
     8d8:	4d                   	rex.WRB
     8d9:	41                   	rex.B
     8da:	4c 5f                	rex.WR pop rdi
     8dc:	42                   	rex.X
     8dd:	49                   	rex.WB
     8de:	44 5f                	rex.R pop rdi
     8e0:	46                   	rex.RX
     8e1:	4f 52                	rex.WRXB push r10
     8e3:	4d                   	rex.WRB
     8e4:	41 54                	push   r12
     8e6:	5f                   	pop    rdi
     8e7:	5f                   	pop    rdi
     8e8:	20 31                	and    BYTE PTR [rcx],dh
     8ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8ed:	44                   	rex.R
     8ee:	45                   	rex.RB
     8ef:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     8f2:	5f                   	pop    rdi
     8f3:	45 50                	rex.RB push r8
     8f5:	53                   	push   rbx
     8f6:	49                   	rex.WB
     8f7:	4c                   	rex.WR
     8f8:	4f                   	rex.WRXB
     8f9:	4e 5f                	rex.WRX pop rdi
     8fb:	5f                   	pop    rdi
     8fc:	20 31                	and    BYTE PTR [rcx],dh
     8fe:	45 2d 36 44 46 00    	rex.RB sub eax,0x464436
     904:	5f                   	pop    rdi
     905:	53                   	push   rbx
     906:	49 5a                	rex.WB pop r10
     908:	45 5f                	rex.RB pop r15
     90a:	54                   	push   rsp
     90b:	5f                   	pop    rdi
     90c:	44                   	rex.R
     90d:	45                   	rex.RB
     90e:	43                   	rex.XB
     90f:	4c                   	rex.WR
     910:	41 52                	push   r10
     912:	45                   	rex.RB
     913:	44 20 00             	and    BYTE PTR [rax],r8b
     916:	5f                   	pop    rdi
     917:	5f                   	pop    rdi
     918:	46                   	rex.RX
     919:	44 5f                	rex.R pop rdi
     91b:	53                   	push   rbx
     91c:	45 54                	rex.RB push r12
     91e:	53                   	push   rbx
     91f:	49 5a                	rex.WB pop r10
     921:	45 20 31             	and    BYTE PTR [r9],r14b
     924:	30 32                	xor    BYTE PTR [rdx],dh
     926:	34 00                	xor    al,0x0
     928:	5f                   	pop    rdi
     929:	5f                   	pop    rdi
     92a:	4c                   	rex.WR
     92b:	44                   	rex.R
     92c:	42                   	rex.X
     92d:	4c 5f                	rex.WR pop rdi
     92f:	44                   	rex.R
     930:	49                   	rex.WB
     931:	47 5f                	rex.RXB pop r15
     933:	5f                   	pop    rdi
     934:	20 31                	and    BYTE PTR [rcx],dh
     936:	38 00                	cmp    BYTE PTR [rax],al
     938:	5f                   	pop    rdi
     939:	6d                   	ins    DWORD PTR es:[rdi],dx
     93a:	61                   	(bad)  
     93b:	72 6b                	jb     9a8 <__FRAME_END__+0x19c>
     93d:	65 72 73             	gs jb  9b3 <__FRAME_END__+0x1a7>
     940:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     943:	41 54                	push   r12
     945:	4f                   	rex.WRXB
     946:	4d                   	rex.WRB
     947:	49                   	rex.WB
     948:	43 5f                	rex.XB pop r15
     94a:	53                   	push   rbx
     94b:	45 51                	rex.RB push r9
     94d:	5f                   	pop    rdi
     94e:	43 53                	rex.XB push r11
     950:	54                   	push   rsp
     951:	20 35 00 5f 5f 55    	and    BYTE PTR [rip+0x555f5f00],dh        # 555f6857 <_end+0x553f583f>
     957:	53                   	push   rbx
     958:	45 5f                	rex.RB pop r15
     95a:	50                   	push   rax
     95b:	4f 53                	rex.WRXB push r11
     95d:	49 58                	rex.WB pop r8
     95f:	32 20                	xor    ah,BYTE PTR [rax]
     961:	31 00                	xor    DWORD PTR [rax],eax
     963:	5f                   	pop    rdi
     964:	5f                   	pop    rdi
     965:	55                   	push   rbp
     966:	53                   	push   rbx
     967:	45 5f                	rex.RB pop r15
     969:	49 53                	rex.WB push r11
     96b:	4f                   	rex.WRXB
     96c:	43 39 35 20 31 00 5f 	rex.XB cmp DWORD PTR [rip+0x5f003120],esi        # 5f003a93 <_end+0x5ee02a7b>
     973:	5f                   	pop    rdi
     974:	53                   	push   rbx
     975:	49 5a                	rex.WB pop r10
     977:	45                   	rex.RB
     978:	4f                   	rex.WRXB
     979:	46 5f                	rex.RX pop rdi
     97b:	53                   	push   rbx
     97c:	48                   	rex.W
     97d:	4f 52                	rex.WRXB push r10
     97f:	54                   	push   rsp
     980:	5f                   	pop    rdi
     981:	5f                   	pop    rdi
     982:	20 32                	and    BYTE PTR [rdx],dh
     984:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     987:	5f                   	pop    rdi
     988:	76 61                	jbe    9eb <__FRAME_END__+0x1df>
     98a:	5f                   	pop    rdi
     98b:	6c                   	ins    BYTE PTR es:[rdi],dx
     98c:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
     993:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     994:	75 63                	jne    9f9 <__FRAME_END__+0x1ed>
     996:	5f                   	pop    rdi
     997:	76 61                	jbe    9fa <__FRAME_END__+0x1ee>
     999:	5f                   	pop    rdi
     99a:	6c                   	ins    BYTE PTR es:[rdi],dx
     99b:	69 73 74 00 5f 5f 55 	imul   esi,DWORD PTR [rbx+0x74],0x555f5f00
     9a2:	49                   	rex.WB
     9a3:	4e 54                	rex.WRX push rsp
     9a5:	36 34 5f             	ss xor al,0x5f
     9a8:	54                   	push   rsp
     9a9:	59                   	pop    rcx
     9aa:	50                   	push   rax
     9ab:	45 5f                	rex.RB pop r15
     9ad:	5f                   	pop    rdi
     9ae:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     9b2:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     9b6:	73 69                	jae    a21 <__FRAME_END__+0x215>
     9b8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9ba:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     9bf:	74 00                	je     9c1 <__FRAME_END__+0x1b5>
     9c1:	5f                   	pop    rdi
     9c2:	5f                   	pop    rdi
     9c3:	49                   	rex.WB
     9c4:	4e 54                	rex.WRX push rsp
     9c6:	5f                   	pop    rdi
     9c7:	46                   	rex.RX
     9c8:	41 53                	push   r11
     9ca:	54                   	push   rsp
     9cb:	33 32                	xor    esi,DWORD PTR [rdx]
     9cd:	5f                   	pop    rdi
     9ce:	4d                   	rex.WRB
     9cf:	41 58                	pop    r8
     9d1:	5f                   	pop    rdi
     9d2:	5f                   	pop    rdi
     9d3:	20 30                	and    BYTE PTR [rax],dh
     9d5:	78 37                	js     a0e <__FRAME_END__+0x202>
     9d7:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     9de:	66 66 66 66 66 66 66 
     9e5:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     9ea:	49                   	rex.WB
     9eb:	4e 54                	rex.WRX push rsp
     9ed:	5f                   	pop    rdi
     9ee:	4c                   	rex.WR
     9ef:	45                   	rex.RB
     9f0:	41 53                	push   r11
     9f2:	54                   	push   rsp
     9f3:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     9f6:	59                   	pop    rcx
     9f7:	50                   	push   rax
     9f8:	45 5f                	rex.RB pop r15
     9fa:	5f                   	pop    rdi
     9fb:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     9fe:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     a00:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     a05:	61                   	(bad)  
     a06:	72 00                	jb     a08 <__FRAME_END__+0x1fc>
     a08:	5f                   	pop    rdi
     a09:	5f                   	pop    rdi
     a0a:	73 69                	jae    a75 <__FRAME_END__+0x269>
     a0c:	7a 65                	jp     a73 <__FRAME_END__+0x267>
     a0e:	5f                   	pop    rdi
     a0f:	74 20                	je     a31 <__FRAME_END__+0x225>
     a11:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a14:	55                   	push   rbp
     a15:	49                   	rex.WB
     a16:	4e 54                	rex.WRX push rsp
     a18:	5f                   	pop    rdi
     a19:	4c                   	rex.WR
     a1a:	45                   	rex.RB
     a1b:	41 53                	push   r11
     a1d:	54                   	push   rsp
     a1e:	33 32                	xor    esi,DWORD PTR [rdx]
     a20:	5f                   	pop    rdi
     a21:	54                   	push   rsp
     a22:	59                   	pop    rcx
     a23:	50                   	push   rax
     a24:	45 5f                	rex.RB pop r15
     a26:	5f                   	pop    rdi
     a27:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     a2a:	73 69                	jae    a95 <__FRAME_END__+0x289>
     a2c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     a2e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     a33:	74 00                	je     a35 <__FRAME_END__+0x229>
     a35:	5f                   	pop    rdi
     a36:	5f                   	pop    rdi
     a37:	73 74                	jae    aad <__FRAME_END__+0x2a1>
     a39:	75 62                	jne    a9d <__FRAME_END__+0x291>
     a3b:	5f                   	pop    rdi
     a3c:	73 69                	jae    aa7 <__FRAME_END__+0x29b>
     a3e:	67 72 65             	addr32 jb aa6 <__FRAME_END__+0x29a>
     a41:	74 75                	je     ab8 <__FRAME_END__+0x2ac>
     a43:	72 6e                	jb     ab3 <__FRAME_END__+0x2a7>
     a45:	20 00                	and    BYTE PTR [rax],al
     a47:	5f                   	pop    rdi
     a48:	5f                   	pop    rdi
     a49:	70 74                	jo     abf <__FRAME_END__+0x2b3>
     a4b:	72 5f                	jb     aac <__FRAME_END__+0x2a0>
     a4d:	74 20                	je     a6f <__FRAME_END__+0x263>
     a4f:	76 6f                	jbe    ac0 <__FRAME_END__+0x2b4>
     a51:	69 64 20 2a 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x535f5f00
     a58:	53 
     a59:	33 32                	xor    esi,DWORD PTR [rdx]
     a5b:	5f                   	pop    rdi
     a5c:	54                   	push   rsp
     a5d:	59                   	pop    rcx
     a5e:	50                   	push   rax
     a5f:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
     a63:	74 00                	je     a65 <__FRAME_END__+0x259>
     a65:	5f                   	pop    rdi
     a66:	5f                   	pop    rdi
     a67:	53                   	push   rbx
     a68:	54                   	push   rsp
     a69:	44                   	rex.R
     a6a:	43 5f                	rex.XB pop r15
     a6c:	4e                   	rex.WRX
     a6d:	4f 5f                	rex.WRXB pop r15
     a6f:	54                   	push   rsp
     a70:	48 52                	rex.W push rdx
     a72:	45                   	rex.RB
     a73:	41                   	rex.B
     a74:	44 53                	rex.R push rbx
     a76:	5f                   	pop    rdi
     a77:	5f                   	pop    rdi
     a78:	20 31                	and    BYTE PTR [rcx],dh
     a7a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a7d:	42 59                	rex.X pop rcx
     a7f:	54                   	push   rsp
     a80:	45 5f                	rex.RB pop r15
     a82:	4f 52                	rex.WRXB push r10
     a84:	44                   	rex.R
     a85:	45 52                	rex.RB push r10
     a87:	5f                   	pop    rdi
     a88:	5f                   	pop    rdi
     a89:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a8c:	4f 52                	rex.WRXB push r10
     a8e:	44                   	rex.R
     a8f:	45 52                	rex.RB push r10
     a91:	5f                   	pop    rdi
     a92:	4c                   	rex.WR
     a93:	49 54                	rex.WB push r12
     a95:	54                   	push   rsp
     a96:	4c                   	rex.WR
     a97:	45 5f                	rex.RB pop r15
     a99:	45                   	rex.RB
     a9a:	4e                   	rex.WRX
     a9b:	44                   	rex.R
     a9c:	49                   	rex.WB
     a9d:	41                   	rex.B
     a9e:	4e 5f                	rex.WRX pop rdi
     aa0:	5f                   	pop    rdi
     aa1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     aa4:	4c                   	rex.WR
     aa5:	44                   	rex.R
     aa6:	42                   	rex.X
     aa7:	4c 5f                	rex.WR pop rdi
     aa9:	4d                   	rex.WRB
     aaa:	49                   	rex.WB
     aab:	4e 5f                	rex.WRX pop rdi
     aad:	5f                   	pop    rdi
     aae:	20 33                	and    BYTE PTR [rbx],dh
     ab0:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     ab3:	32 31                	xor    dh,BYTE PTR [rcx]
     ab5:	30 33                	xor    BYTE PTR [rbx],dh
     ab7:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     aba:	31 31                	xor    DWORD PTR [rcx],esi
     abc:	32 30                	xor    dh,BYTE PTR [rax]
     abe:	39 33                	cmp    DWORD PTR [rbx],esi
     ac0:	35 30 36 32 36       	xor    eax,0x36323630
     ac5:	32 36                	xor    dh,BYTE PTR [rsi]
     ac7:	37                   	(bad)  
     ac8:	37                   	(bad)  
     ac9:	38 31                	cmp    BYTE PTR [rcx],dh
     acb:	37                   	(bad)  
     acc:	33 32                	xor    esi,DWORD PTR [rdx]
     ace:	31 37                	xor    DWORD PTR [rdi],esi
     ad0:	35 32 36 30 65       	xor    eax,0x65303632
     ad5:	2d 34 39 33 32       	sub    eax,0x32333934
     ada:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     ade:	46                   	rex.RX
     adf:	4c 54                	rex.WR push rsp
     ae1:	33 32                	xor    esi,DWORD PTR [rdx]
     ae3:	5f                   	pop    rdi
     ae4:	4d                   	rex.WRB
     ae5:	49                   	rex.WB
     ae6:	4e 5f                	rex.WRX pop rdi
     ae8:	31 30                	xor    DWORD PTR [rax],esi
     aea:	5f                   	pop    rdi
     aeb:	45 58                	rex.RB pop r8
     aed:	50                   	push   rax
     aee:	5f                   	pop    rdi
     aef:	5f                   	pop    rdi
     af0:	20 28                	and    BYTE PTR [rax],ch
     af2:	2d 33 37 29 00       	sub    eax,0x293733
     af7:	5f                   	pop    rdi
     af8:	5f                   	pop    rdi
     af9:	44                   	rex.R
     afa:	42                   	rex.X
     afb:	4c 5f                	rex.WR pop rdi
     afd:	48                   	rex.W
     afe:	41 53                	push   r11
     b00:	5f                   	pop    rdi
     b01:	44                   	rex.R
     b02:	45                   	rex.RB
     b03:	4e                   	rex.WRX
     b04:	4f 52                	rex.WRXB push r10
     b06:	4d 5f                	rex.WRB pop r15
     b08:	5f                   	pop    rdi
     b09:	20 31                	and    BYTE PTR [rcx],dh
     b0b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b0e:	49                   	rex.WB
     b0f:	4e 54                	rex.WRX push rsp
     b11:	5f                   	pop    rdi
     b12:	4c                   	rex.WR
     b13:	45                   	rex.RB
     b14:	41 53                	push   r11
     b16:	54                   	push   rsp
     b17:	36 34 5f             	ss xor al,0x5f
     b1a:	54                   	push   rsp
     b1b:	59                   	pop    rcx
     b1c:	50                   	push   rax
     b1d:	45 5f                	rex.RB pop r15
     b1f:	5f                   	pop    rdi
     b20:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     b24:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     b28:	74 00                	je     b2a <__FRAME_END__+0x31e>
     b2a:	5f                   	pop    rdi
     b2b:	5f                   	pop    rdi
     b2c:	57                   	push   rdi
     b2d:	43                   	rex.XB
     b2e:	48                   	rex.W
     b2f:	41 52                	push   r10
     b31:	5f                   	pop    rdi
     b32:	4d                   	rex.WRB
     b33:	49                   	rex.WB
     b34:	4e 5f                	rex.WRX pop rdi
     b36:	5f                   	pop    rdi
     b37:	20 28                	and    BYTE PTR [rax],ch
     b39:	2d 5f 5f 57 43       	sub    eax,0x43575f5f
     b3e:	48                   	rex.W
     b3f:	41 52                	push   r10
     b41:	5f                   	pop    rdi
     b42:	4d                   	rex.WRB
     b43:	41 58                	pop    r8
     b45:	5f                   	pop    rdi
     b46:	5f                   	pop    rdi
     b47:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 293c6d <_end+0x92c55>
     b4d:	5f                   	pop    rdi
     b4e:	49                   	rex.WB
     b4f:	4f 5f                	rex.WRXB pop r15
     b51:	53                   	push   rbx
     b52:	48                   	rex.W
     b53:	4f 57                	rex.WRXB push r15
     b55:	50                   	push   rax
     b56:	4f                   	rex.WRXB
     b57:	49                   	rex.WB
     b58:	4e 54                	rex.WRX push rsp
     b5a:	20 30                	and    BYTE PTR [rax],dh
     b5c:	34 30                	xor    al,0x30
     b5e:	30 00                	xor    BYTE PTR [rax],al
     b60:	5f                   	pop    rdi
     b61:	5f                   	pop    rdi
     b62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b63:	66 66 5f             	data16 pop di
     b66:	74 5f                	je     bc7 <__FRAME_END__+0x3bb>
     b68:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
     b6f:	20 
     b70:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b73:	53                   	push   rbx
     b74:	54                   	push   rsp
     b75:	44                   	rex.R
     b76:	43 5f                	rex.XB pop r15
     b78:	55                   	push   rbp
     b79:	54                   	push   rsp
     b7a:	46 5f                	rex.RX pop rdi
     b7c:	33 32                	xor    esi,DWORD PTR [rdx]
     b7e:	5f                   	pop    rdi
     b7f:	5f                   	pop    rdi
     b80:	20 31                	and    BYTE PTR [rcx],dh
     b82:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b85:	42                   	rex.X
     b86:	4c                   	rex.WR
     b87:	4b 53                	rex.WXB push r11
     b89:	49 5a                	rex.WB pop r10
     b8b:	45 5f                	rex.RB pop r15
     b8d:	54                   	push   rsp
     b8e:	5f                   	pop    rdi
     b8f:	54                   	push   rsp
     b90:	59                   	pop    rcx
     b91:	50                   	push   rax
     b92:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     b96:	53                   	push   rbx
     b97:	59                   	pop    rcx
     b98:	53                   	push   rbx
     b99:	43                   	rex.XB
     b9a:	41                   	rex.B
     b9b:	4c                   	rex.WR
     b9c:	4c 5f                	rex.WR pop rdi
     b9e:	53                   	push   rbx
     b9f:	4c                   	rex.WR
     ba0:	4f                   	rex.WRXB
     ba1:	4e                   	rex.WRX
     ba2:	47 5f                	rex.RXB pop r15
     ba4:	54                   	push   rsp
     ba5:	59                   	pop    rcx
     ba6:	50                   	push   rax
     ba7:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     bab:	49                   	rex.WB
     bac:	4e 54                	rex.WRX push rsp
     bae:	5f                   	pop    rdi
     baf:	4c                   	rex.WR
     bb0:	45                   	rex.RB
     bb1:	41 53                	push   r11
     bb3:	54                   	push   rsp
     bb4:	31 36                	xor    DWORD PTR [rsi],esi
     bb6:	5f                   	pop    rdi
     bb7:	4d                   	rex.WRB
     bb8:	41 58                	pop    r8
     bba:	5f                   	pop    rdi
     bbb:	5f                   	pop    rdi
     bbc:	20 30                	and    BYTE PTR [rax],dh
     bbe:	78 37                	js     bf7 <__FRAME_END__+0x3eb>
     bc0:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     bc6:	4c                   	rex.WR
     bc7:	44                   	rex.R
     bc8:	42                   	rex.X
     bc9:	4c 5f                	rex.WR pop rdi
     bcb:	52                   	push   rdx
     bcc:	45                   	rex.RB
     bcd:	44                   	rex.R
     bce:	49 52                	rex.WB push r10
     bd0:	5f                   	pop    rdi
     bd1:	44                   	rex.R
     bd2:	45                   	rex.RB
     bd3:	43                   	rex.XB
     bd4:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
     bd8:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd9:	65 29 20             	sub    DWORD PTR gs:[rax],esp
     bdc:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     bdf:	55                   	push   rbp
     be0:	20 43 31             	and    BYTE PTR [rbx+0x31],al
     be3:	31 20                	xor    DWORD PTR [rax],esp
     be5:	37                   	(bad)  
     be6:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
     be9:	30 20                	xor    BYTE PTR [rax],ah
     beb:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     bf0:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     bf6:	72 69                	jb     c61 <__FRAME_END__+0x455>
     bf8:	63 20                	movsxd esp,DWORD PTR [rax]
     bfa:	2d 6d 61 72 63       	sub    eax,0x6372616d
     bff:	68 3d 78 38 36       	push   0x3638783d
     c04:	2d 36 34 20 2d       	sub    eax,0x2d203436
     c09:	67 67 64 62 33       	addr32 addr32 fs (bad) 
     c0e:	20 2d 66 73 74 61    	and    BYTE PTR [rip+0x61747366],ch        # 61747f7a <_end+0x61546f62>
     c14:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     c17:	70 72                	jo     c8b <__FRAME_END__+0x47f>
     c19:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c1a:	74 65                	je     c81 <__FRAME_END__+0x475>
     c1c:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     c20:	2d 73 74 72 6f       	sub    eax,0x6f727473
     c25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c26:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     c2a:	53                   	push   rbx
     c2b:	43                   	rex.XB
     c2c:	48                   	rex.W
     c2d:	41 52                	push   r10
     c2f:	5f                   	pop    rdi
     c30:	4d                   	rex.WRB
     c31:	41 58                	pop    r8
     c33:	5f                   	pop    rdi
     c34:	5f                   	pop    rdi
     c35:	20 30                	and    BYTE PTR [rax],dh
     c37:	78 37                	js     c70 <__FRAME_END__+0x464>
     c39:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     c3d:	65 78 74             	gs js  cb4 <__FRAME_END__+0x4a8>
     c40:	65 72 6e             	gs jb  cb1 <__FRAME_END__+0x4a5>
     c43:	5f                   	pop    rdi
     c44:	61                   	(bad)  
     c45:	6c                   	ins    BYTE PTR es:[rdi],dx
     c46:	77 61                	ja     ca9 <__FRAME_END__+0x49d>
     c48:	79 73                	jns    cbd <__FRAME_END__+0x4b1>
     c4a:	5f                   	pop    rdi
     c4b:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c52:	65 78 74             	gs js  cc9 <__FRAME_END__+0x4bd>
     c55:	65 72 6e             	gs jb  cc6 <__FRAME_END__+0x4ba>
     c58:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     c5b:	61                   	(bad)  
     c5c:	6c                   	ins    BYTE PTR es:[rdi],dx
     c5d:	77 61                	ja     cc0 <__FRAME_END__+0x4b4>
     c5f:	79 73                	jns    cd4 <__FRAME_END__+0x4c8>
     c61:	5f                   	pop    rdi
     c62:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c69:	5f                   	pop    rdi
     c6a:	5f                   	pop    rdi
     c6b:	61                   	(bad)  
     c6c:	74 74                	je     ce2 <__FRAME_END__+0x4d6>
     c6e:	72 69                	jb     cd9 <__FRAME_END__+0x4cd>
     c70:	62                   	(bad)  
     c71:	75 74                	jne    ce7 <__FRAME_END__+0x4db>
     c73:	65 5f                	gs pop rdi
     c75:	5f                   	pop    rdi
     c76:	20 28                	and    BYTE PTR [rax],ch
     c78:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     c7b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c7d:	75 5f                	jne    cde <__FRAME_END__+0x4d2>
     c7f:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     c86:	5f                   	pop    rdi
     c87:	29 29                	sub    DWORD PTR [rcx],ebp
     c89:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     c8c:	46                   	rex.RX
     c8d:	4c 54                	rex.WR push rsp
     c8f:	36 34 5f             	ss xor al,0x5f
     c92:	44                   	rex.R
     c93:	49                   	rex.WB
     c94:	47 5f                	rex.RXB pop r15
     c96:	5f                   	pop    rdi
     c97:	20 31                	and    BYTE PTR [rcx],dh
     c99:	35 00 5f 5f 49       	xor    eax,0x495f5f00
     c9e:	4e 54                	rex.WRX push rsp
     ca0:	5f                   	pop    rdi
     ca1:	46                   	rex.RX
     ca2:	41 53                	push   r11
     ca4:	54                   	push   rsp
     ca5:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     ca8:	59                   	pop    rcx
     ca9:	50                   	push   rax
     caa:	45 5f                	rex.RB pop r15
     cac:	5f                   	pop    rdi
     cad:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     cb0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     cb2:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     cb7:	61                   	(bad)  
     cb8:	72 00                	jb     cba <__FRAME_END__+0x4ae>
     cba:	5f                   	pop    rdi
     cbb:	5f                   	pop    rdi
     cbc:	50                   	push   rax
     cbd:	49                   	rex.WB
     cbe:	45 5f                	rex.RB pop r15
     cc0:	5f                   	pop    rdi
     cc1:	20 32                	and    BYTE PTR [rdx],dh
     cc3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     cc6:	4f 5f                	rex.WRXB pop r15
     cc8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cc9:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     cce:	74 20                	je     cf0 <__FRAME_END__+0x4e4>
     cd0:	5f                   	pop    rdi
     cd1:	5f                   	pop    rdi
     cd2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cd3:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     cd8:	74 00                	je     cda <__FRAME_END__+0x4ce>
     cda:	5f                   	pop    rdi
     cdb:	5f                   	pop    rdi
     cdc:	47                   	rex.RXB
     cdd:	4c                   	rex.WR
     cde:	49                   	rex.WB
     cdf:	42                   	rex.X
     ce0:	43 5f                	rex.XB pop r15
     ce2:	55                   	push   rbp
     ce3:	53                   	push   rbx
     ce4:	45 5f                	rex.RB pop r15
     ce6:	49                   	rex.WB
     ce7:	45                   	rex.RB
     ce8:	43 5f                	rex.XB pop r15
     cea:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f4626 <_end+0x543f360e>
     cf1:	59                   	pop    rcx
     cf2:	50                   	push   rax
     cf3:	45 53                	rex.RB push r11
     cf5:	5f                   	pop    rdi
     cf6:	45 58                	rex.RB pop r8
     cf8:	54                   	push   rsp
     cf9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cfc:	46                   	rex.RX
     cfd:	4c 54                	rex.WR push rsp
     cff:	33 32                	xor    esi,DWORD PTR [rdx]
     d01:	58                   	pop    rax
     d02:	5f                   	pop    rdi
     d03:	48                   	rex.W
     d04:	41 53                	push   r11
     d06:	5f                   	pop    rdi
     d07:	49                   	rex.WB
     d08:	4e                   	rex.WRX
     d09:	46                   	rex.RX
     d0a:	49                   	rex.WB
     d0b:	4e                   	rex.WRX
     d0c:	49 54                	rex.WB push r12
     d0e:	59                   	pop    rcx
     d0f:	5f                   	pop    rdi
     d10:	5f                   	pop    rdi
     d11:	20 31                	and    BYTE PTR [rcx],dh
     d13:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d16:	55                   	push   rbp
     d17:	53                   	push   rbx
     d18:	45 5f                	rex.RB pop r15
     d1a:	55                   	push   rbp
     d1b:	4e                   	rex.WRX
     d1c:	49 58                	rex.WB pop r8
     d1e:	39 38                	cmp    DWORD PTR [rax],edi
     d20:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d23:	55                   	push   rbp
     d24:	53                   	push   rbx
     d25:	45 5f                	rex.RB pop r15
     d27:	46                   	rex.RX
     d28:	4f 52                	rex.WRXB push r10
     d2a:	54                   	push   rsp
     d2b:	49                   	rex.WB
     d2c:	46 59                	rex.RX pop rcx
     d2e:	5f                   	pop    rdi
     d2f:	4c                   	rex.WR
     d30:	45 56                	rex.RB push r14
     d32:	45                   	rex.RB
     d33:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
     d36:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     d39:	54                   	push   rsp
     d3a:	46                   	rex.RX
     d3b:	49                   	rex.WB
     d3c:	4c                   	rex.WR
     d3d:	45 5f                	rex.RB pop r15
     d3f:	53                   	push   rbx
     d40:	4f 55                	rex.WRXB push r13
     d42:	52                   	push   rdx
     d43:	43                   	rex.XB
     d44:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d48:	55                   	push   rbp
     d49:	53                   	push   rbx
     d4a:	45 5f                	rex.RB pop r15
     d4c:	41 54                	push   r12
     d4e:	46                   	rex.RX
     d4f:	49                   	rex.WB
     d50:	4c                   	rex.WR
     d51:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d55:	55                   	push   rbp
     d56:	49                   	rex.WB
     d57:	4e 54                	rex.WRX push rsp
     d59:	5f                   	pop    rdi
     d5a:	4c                   	rex.WR
     d5b:	45                   	rex.RB
     d5c:	41 53                	push   r11
     d5e:	54                   	push   rsp
     d5f:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     d62:	59                   	pop    rcx
     d63:	50                   	push   rax
     d64:	45 5f                	rex.RB pop r15
     d66:	5f                   	pop    rdi
     d67:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     d6a:	73 69                	jae    dd5 <__FRAME_END__+0x5c9>
     d6c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     d6e:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     d73:	61                   	(bad)  
     d74:	72 00                	jb     d76 <__FRAME_END__+0x56a>
     d76:	5f                   	pop    rdi
     d77:	5f                   	pop    rdi
     d78:	53                   	push   rbx
     d79:	49 5a                	rex.WB pop r10
     d7b:	45                   	rex.RB
     d7c:	4f                   	rex.WRXB
     d7d:	46 5f                	rex.RX pop rdi
     d7f:	49                   	rex.WB
     d80:	4e 54                	rex.WRX push rsp
     d82:	31 32                	xor    DWORD PTR [rdx],esi
     d84:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
     d87:	20 31                	and    BYTE PTR [rcx],dh
     d89:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     d8d:	4e 54                	rex.WRX push rsp
     d8f:	48 28 66 63          	rex.W sub BYTE PTR [rsi+0x63],spl
     d93:	74 29                	je     dbe <__FRAME_END__+0x5b2>
     d95:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     d98:	61                   	(bad)  
     d99:	74 74                	je     e0f <__FRAME_END__+0x603>
     d9b:	72 69                	jb     e06 <__FRAME_END__+0x5fa>
     d9d:	62                   	(bad)  
     d9e:	75 74                	jne    e14 <__FRAME_END__+0x608>
     da0:	65 5f                	gs pop rdi
     da2:	5f                   	pop    rdi
     da3:	20 28                	and    BYTE PTR [rax],ch
     da5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     da8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     da9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     daa:	74 68                	je     e14 <__FRAME_END__+0x608>
     dac:	72 6f                	jb     e1d <__FRAME_END__+0x611>
     dae:	77 5f                	ja     e0f <__FRAME_END__+0x603>
     db0:	5f                   	pop    rdi
     db1:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     db4:	4c                   	rex.WR
     db5:	45                   	rex.RB
     db6:	41                   	rex.B
     db7:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
     dba:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     dbd:	74 00                	je     dbf <__FRAME_END__+0x5b3>
     dbf:	5f                   	pop    rdi
     dc0:	49                   	rex.WB
     dc1:	4f 53                	rex.WRXB push r11
     dc3:	5f                   	pop    rdi
     dc4:	41 54                	push   r12
     dc6:	45                   	rex.RB
     dc7:	4e                   	rex.WRX
     dc8:	44 20 34 00          	and    BYTE PTR [rax+rax*1],r14b
     dcc:	5f                   	pop    rdi
     dcd:	5f                   	pop    rdi
     dce:	67 6c                	ins    BYTE PTR es:[edi],dx
     dd0:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     dd7:	72 6f                	jb     e48 <__FRAME_END__+0x63c>
     dd9:	5f                   	pop    rdi
     dda:	77 61                	ja     e3d <__FRAME_END__+0x631>
     ddc:	72 6e                	jb     e4c <__FRAME_END__+0x640>
     dde:	69 6e 67 28 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d28
     de5:	73 61                	jae    e48 <__FRAME_END__+0x63c>
     de7:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
     deb:	5f                   	pop    rdi
     dec:	5f                   	pop    rdi
     ded:	67 6c                	ins    BYTE PTR es:[edi],dx
     def:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     df6:	72 6f                	jb     e67 <__FRAME_END__+0x65b>
     df8:	5f                   	pop    rdi
     df9:	77 61                	ja     e5c <__FRAME_END__+0x650>
     dfb:	72 6e                	jb     e6b <__FRAME_END__+0x65f>
     dfd:	69 6e 67 31 20 28 47 	imul   ebp,DWORD PTR [rsi+0x67],0x47282031
     e04:	43                   	rex.XB
     e05:	43 20 77 61          	rex.XB and BYTE PTR [r15+0x61],sil
     e09:	72 6e                	jb     e79 <__FRAME_END__+0x66d>
     e0b:	69 6e 67 20 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
     e12:	73 61                	jae    e75 <__FRAME_END__+0x669>
     e14:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
     e18:	5f                   	pop    rdi
     e19:	5f                   	pop    rdi
     e1a:	46                   	rex.RX
     e1b:	4c 54                	rex.WR push rsp
     e1d:	31 32                	xor    DWORD PTR [rdx],esi
     e1f:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     e22:	41 53                	push   r11
     e24:	5f                   	pop    rdi
     e25:	51                   	push   rcx
     e26:	55                   	push   rbp
     e27:	49                   	rex.WB
     e28:	45 54                	rex.RB push r12
     e2a:	5f                   	pop    rdi
     e2b:	4e                   	rex.WRX
     e2c:	41                   	rex.B
     e2d:	4e 5f                	rex.WRX pop rdi
     e2f:	5f                   	pop    rdi
     e30:	20 31                	and    BYTE PTR [rcx],dh
     e32:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     e35:	5f                   	pop    rdi
     e36:	53                   	push   rbx
     e37:	49 5a                	rex.WB pop r10
     e39:	45 20 00             	and    BYTE PTR [r8],r8b
     e3c:	5f                   	pop    rdi
     e3d:	5f                   	pop    rdi
     e3e:	46                   	rex.RX
     e3f:	4c 54                	rex.WR push rsp
     e41:	31 32                	xor    DWORD PTR [rdx],esi
     e43:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     e46:	41 58                	pop    r8
     e48:	5f                   	pop    rdi
     e49:	5f                   	pop    rdi
     e4a:	20 31                	and    BYTE PTR [rcx],dh
     e4c:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
     e4f:	39 37                	cmp    DWORD PTR [rdi],esi
     e51:	33 31                	xor    esi,DWORD PTR [rcx]
     e53:	34 39                	xor    al,0x39
     e55:	35 33 35 37 32       	xor    eax,0x32373533
     e5a:	33 31                	xor    esi,DWORD PTR [rcx]
     e5c:	37                   	(bad)  
     e5d:	36 35 30 38 35 37    	ss xor eax,0x37353830
     e63:	35 39 33 32 36       	xor    eax,0x36323339
     e68:	36 32 38             	xor    bh,BYTE PTR ss:[rax]
     e6b:	30 30                	xor    BYTE PTR [rax],dh
     e6d:	37                   	(bad)  
     e6e:	30 32                	xor    BYTE PTR [rdx],dh
     e70:	65 2b 34 39          	sub    esi,DWORD PTR gs:[rcx+rdi*1]
     e74:	33 32                	xor    esi,DWORD PTR [rdx]
     e76:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
     e79:	38 00                	cmp    BYTE PTR [rax],al
     e7b:	42 55                	rex.X push rbp
     e7d:	46 53                	rex.RX push rbx
     e7f:	49 5a                	rex.WB pop r10
     e81:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
     e84:	4f 5f                	rex.WRXB pop r15
     e86:	42 55                	rex.X push rbp
     e88:	46 53                	rex.RX push rbx
     e8a:	49 5a                	rex.WB pop r10
     e8c:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     e8f:	54                   	push   rsp
     e90:	46                   	rex.RX
     e91:	49                   	rex.WB
     e92:	4c                   	rex.WR
     e93:	45 5f                	rex.RB pop r15
     e95:	53                   	push   rbx
     e96:	4f 55                	rex.WRXB push r13
     e98:	52                   	push   rdx
     e99:	43                   	rex.XB
     e9a:	45 20 31             	and    BYTE PTR [r9],r14b
     e9d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ea0:	46                   	rex.RX
     ea1:	4c 54                	rex.WR push rsp
     ea3:	36 34 58             	ss xor al,0x58
     ea6:	5f                   	pop    rdi
     ea7:	44                   	rex.R
     ea8:	49                   	rex.WB
     ea9:	47 5f                	rex.RXB pop r15
     eab:	5f                   	pop    rdi
     eac:	20 31                	and    BYTE PTR [rcx],dh
     eae:	38 00                	cmp    BYTE PTR [rax],al
     eb0:	5f                   	pop    rdi
     eb1:	5f                   	pop    rdi
     eb2:	49                   	rex.WB
     eb3:	4e 54                	rex.WRX push rsp
     eb5:	5f                   	pop    rdi
     eb6:	4c                   	rex.WR
     eb7:	45                   	rex.RB
     eb8:	41 53                	push   r11
     eba:	54                   	push   rsp
     ebb:	31 36                	xor    DWORD PTR [rsi],esi
     ebd:	5f                   	pop    rdi
     ebe:	57                   	push   rdi
     ebf:	49                   	rex.WB
     ec0:	44 54                	rex.R push rsp
     ec2:	48 5f                	rex.W pop rdi
     ec4:	5f                   	pop    rdi
     ec5:	20 31                	and    BYTE PTR [rcx],dh
     ec7:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     ecb:	46 53                	rex.RX push rbx
     ecd:	49                   	rex.WB
     ece:	44 5f                	rex.R pop rdi
     ed0:	54                   	push   rsp
     ed1:	5f                   	pop    rdi
     ed2:	54                   	push   rsp
     ed3:	59                   	pop    rcx
     ed4:	50                   	push   rax
     ed5:	45 20 73 74          	and    BYTE PTR [r11+0x74],r14b
     ed9:	72 75                	jb     f50 <__FRAME_END__+0x744>
     edb:	63 74 20 7b          	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
     edf:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     ee2:	74 20                	je     f04 <__FRAME_END__+0x6f8>
     ee4:	5f                   	pop    rdi
     ee5:	5f                   	pop    rdi
     ee6:	76 61                	jbe    f49 <__FRAME_END__+0x73d>
     ee8:	6c                   	ins    BYTE PTR es:[rdi],dx
     ee9:	5b                   	pop    rbx
     eea:	32 5d 3b             	xor    bl,BYTE PTR [rbp+0x3b]
     eed:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     ef0:	5f                   	pop    rdi
     ef1:	5f                   	pop    rdi
     ef2:	73 73                	jae    f67 <__FRAME_END__+0x75b>
     ef4:	69 7a 65 5f 74 5f 64 	imul   edi,DWORD PTR [rdx+0x65],0x645f745f
     efb:	65 66 69 6e 65 64 20 	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
     f02:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     f05:	5f                   	pop    rdi
     f06:	53                   	push   rbx
     f07:	49 5a                	rex.WB pop r10
     f09:	45 5f                	rex.RB pop r15
     f0b:	20 00                	and    BYTE PTR [rax],al
     f0d:	5f                   	pop    rdi
     f0e:	70 6f                	jo     f7f <__FRAME_END__+0x773>
     f10:	73 00                	jae    f12 <__FRAME_END__+0x706>
     f12:	5f                   	pop    rdi
     f13:	49                   	rex.WB
     f14:	4f 5f                	rex.WRXB pop r15
     f16:	66 65 72 72          	data16 gs jb f8c <__FRAME_END__+0x780>
     f1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f1b:	72 5f                	jb     f7c <__FRAME_END__+0x770>
     f1d:	75 6e                	jne    f8d <__FRAME_END__+0x781>
     f1f:	6c                   	ins    BYTE PTR es:[rdi],dx
     f20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f21:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     f24:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
     f28:	66 70 29             	data16 jo f54 <__FRAME_END__+0x748>
     f2b:	20 28                	and    BYTE PTR [rax],ch
     f2d:	28 28                	sub    BYTE PTR [rax],ch
     f2f:	5f                   	pop    rdi
     f30:	5f                   	pop    rdi
     f31:	66 70 29             	data16 jo f5d <__FRAME_END__+0x751>
     f34:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
     f39:	61                   	(bad)  
     f3a:	67 73 20             	addr32 jae f5d <__FRAME_END__+0x751>
     f3d:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
     f41:	4f 5f                	rex.WRXB pop r15
     f43:	45 52                	rex.RB push r10
     f45:	52                   	push   rdx
     f46:	5f                   	pop    rdi
     f47:	53                   	push   rbx
     f48:	45                   	rex.RB
     f49:	45                   	rex.RB
     f4a:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
     f4d:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 293f73 <_end+0x92f5b>
     f53:	5f                   	pop    rdi
     f54:	5f                   	pop    rdi
     f55:	65 78 74             	gs js  fcc <__FRAME_END__+0x7c0>
     f58:	65 72 6e             	gs jb  fc9 <__FRAME_END__+0x7bd>
     f5b:	5f                   	pop    rdi
     f5c:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f63:	65 78 74             	gs js  fda <__FRAME_END__+0x7ce>
     f66:	65 72 6e             	gs jb  fd7 <__FRAME_END__+0x7cb>
     f69:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     f6c:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f73:	5f                   	pop    rdi
     f74:	5f                   	pop    rdi
     f75:	61                   	(bad)  
     f76:	74 74                	je     fec <__FRAME_END__+0x7e0>
     f78:	72 69                	jb     fe3 <__FRAME_END__+0x7d7>
     f7a:	62                   	(bad)  
     f7b:	75 74                	jne    ff1 <__FRAME_END__+0x7e5>
     f7d:	65 5f                	gs pop rdi
     f7f:	5f                   	pop    rdi
     f80:	20 28                	and    BYTE PTR [rax],ch
     f82:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     f85:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     f87:	75 5f                	jne    fe8 <__FRAME_END__+0x7dc>
     f89:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     f90:	5f                   	pop    rdi
     f91:	29 29                	sub    DWORD PTR [rcx],ebp
     f93:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     f96:	43                   	rex.XB
     f97:	43 5f                	rex.XB pop r15
     f99:	53                   	push   rbx
     f9a:	49 5a                	rex.WB pop r10
     f9c:	45 5f                	rex.RB pop r15
     f9e:	54                   	push   rsp
     f9f:	20 00                	and    BYTE PTR [rax],al
     fa1:	5f                   	pop    rdi
     fa2:	5f                   	pop    rdi
     fa3:	73 74                	jae    1019 <__FRAME_END__+0x80d>
     fa5:	75 62                	jne    1009 <__FRAME_END__+0x7fd>
     fa7:	5f                   	pop    rdi
     fa8:	73 65                	jae    100f <__FRAME_END__+0x803>
     faa:	74 6c                	je     1018 <__FRAME_END__+0x80c>
     fac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fad:	67 69 6e 20 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x20],0x465f5f00
     fb4:	46 
     fb5:	4c 54                	rex.WR push rsp
     fb7:	33 32                	xor    esi,DWORD PTR [rdx]
     fb9:	5f                   	pop    rdi
     fba:	48                   	rex.W
     fbb:	41 53                	push   r11
     fbd:	5f                   	pop    rdi
     fbe:	44                   	rex.R
     fbf:	45                   	rex.RB
     fc0:	4e                   	rex.WRX
     fc1:	4f 52                	rex.WRXB push r10
     fc3:	4d 5f                	rex.WRB pop r15
     fc5:	5f                   	pop    rdi
     fc6:	20 31                	and    BYTE PTR [rcx],dh
     fc8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     fcb:	75 6e                	jne    103b <__FRAME_END__+0x82f>
     fcd:	69 78 5f 5f 20 31 00 	imul   edi,DWORD PTR [rax+0x5f],0x31205f
     fd4:	5f                   	pop    rdi
     fd5:	5f                   	pop    rdi
     fd6:	47                   	rex.RXB
     fd7:	43                   	rex.XB
     fd8:	43 5f                	rex.XB pop r15
     fda:	48                   	rex.W
     fdb:	41 56                	push   r14
     fdd:	45 5f                	rex.RB pop r15
     fdf:	53                   	push   rbx
     fe0:	59                   	pop    rcx
     fe1:	4e                   	rex.WRX
     fe2:	43 5f                	rex.XB pop r15
     fe4:	43                   	rex.XB
     fe5:	4f                   	rex.WRXB
     fe6:	4d 50                	rex.WRB push r8
     fe8:	41 52                	push   r10
     fea:	45 5f                	rex.RB pop r15
     fec:	41                   	rex.B
     fed:	4e                   	rex.WRX
     fee:	44 5f                	rex.R pop rdi
     ff0:	53                   	push   rbx
     ff1:	57                   	push   rdi
     ff2:	41 50                	push   r8
     ff4:	5f                   	pop    rdi
     ff5:	31 20                	xor    DWORD PTR [rax],esp
     ff7:	31 00                	xor    DWORD PTR [rax],eax
     ff9:	5f                   	pop    rdi
     ffa:	49                   	rex.WB
     ffb:	4f 5f                	rex.WRXB pop r15
     ffd:	73 61                	jae    1060 <__FRAME_END__+0x854>
     fff:	76 65                	jbe    1066 <__FRAME_END__+0x85a>
    1001:	5f                   	pop    rdi
    1002:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1004:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1008:	46                   	rex.RX
    1009:	4c 54                	rex.WR push rsp
    100b:	36 34 58             	ss xor al,0x58
    100e:	5f                   	pop    rdi
    100f:	4d                   	rex.WRB
    1010:	49                   	rex.WB
    1011:	4e 5f                	rex.WRX pop rdi
    1013:	45 58                	rex.RB pop r8
    1015:	50                   	push   rax
    1016:	5f                   	pop    rdi
    1017:	5f                   	pop    rdi
    1018:	20 28                	and    BYTE PTR [rax],ch
    101a:	2d 31 36 33 38       	sub    eax,0x38333631
    101f:	31 29                	xor    DWORD PTR [rcx],ebp
    1021:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    1024:	53                   	push   rbx
    1025:	44 5f                	rex.R pop rdi
    1027:	53                   	push   rbx
    1028:	49 5a                	rex.WB pop r10
    102a:	45 5f                	rex.RB pop r15
    102c:	54                   	push   rsp
    102d:	5f                   	pop    rdi
    102e:	20 00                	and    BYTE PTR [rax],al
    1030:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1032:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1033:	61                   	(bad)  
    1034:	74 00                	je     1036 <__FRAME_END__+0x82a>
    1036:	5f                   	pop    rdi
    1037:	5f                   	pop    rdi
    1038:	46                   	rex.RX
    1039:	4c 54                	rex.WR push rsp
    103b:	5f                   	pop    rdi
    103c:	44                   	rex.R
    103d:	49                   	rex.WB
    103e:	47 5f                	rex.RXB pop r15
    1040:	5f                   	pop    rdi
    1041:	20 36                	and    BYTE PTR [rsi],dh
    1043:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1046:	49                   	rex.WB
    1047:	4e 54                	rex.WRX push rsp
    1049:	5f                   	pop    rdi
    104a:	46                   	rex.RX
    104b:	41 53                	push   r11
    104d:	54                   	push   rsp
    104e:	31 36                	xor    DWORD PTR [rsi],esi
    1050:	5f                   	pop    rdi
    1051:	57                   	push   rdi
    1052:	49                   	rex.WB
    1053:	44 54                	rex.R push rsp
    1055:	48 5f                	rex.W pop rdi
    1057:	5f                   	pop    rdi
    1058:	20 36                	and    BYTE PTR [rsi],dh
    105a:	34 00                	xor    al,0x0
    105c:	5f                   	pop    rdi
    105d:	5f                   	pop    rdi
    105e:	47                   	rex.RXB
    105f:	43                   	rex.XB
    1060:	43 5f                	rex.XB pop r15
    1062:	41 54                	push   r12
    1064:	4f                   	rex.WRXB
    1065:	4d                   	rex.WRB
    1066:	49                   	rex.WB
    1067:	43 5f                	rex.XB pop r15
    1069:	42                   	rex.X
    106a:	4f                   	rex.WRXB
    106b:	4f                   	rex.WRXB
    106c:	4c 5f                	rex.WR pop rdi
    106e:	4c                   	rex.WR
    106f:	4f                   	rex.WRXB
    1070:	43                   	rex.XB
    1071:	4b 5f                	rex.WXB pop r15
    1073:	46 52                	rex.RX push rdx
    1075:	45                   	rex.RB
    1076:	45 20 32             	and    BYTE PTR [r10],r14b
    1079:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    107c:	4f 5f                	rex.WRXB pop r15
    107e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    107f:	66 66 5f             	data16 pop di
    1082:	74 20                	je     10a4 <__FRAME_END__+0x898>
    1084:	5f                   	pop    rdi
    1085:	5f                   	pop    rdi
    1086:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1087:	66 66 5f             	data16 pop di
    108a:	74 00                	je     108c <__FRAME_END__+0x880>
    108c:	5f                   	pop    rdi
    108d:	5f                   	pop    rdi
    108e:	70 69                	jo     10f9 <__FRAME_END__+0x8ed>
    1090:	65 5f                	gs pop rdi
    1092:	5f                   	pop    rdi
    1093:	20 32                	and    BYTE PTR [rdx],dh
    1095:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    1098:	54                   	push   rsp
    1099:	44                   	rex.R
    109a:	49                   	rex.WB
    109b:	4f 5f                	rex.WRXB pop r15
    109d:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    10a0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10a3:	44                   	rex.R
    10a4:	45                   	rex.RB
    10a5:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    10a8:	5f                   	pop    rdi
    10a9:	4d                   	rex.WRB
    10aa:	49                   	rex.WB
    10ab:	4e 5f                	rex.WRX pop rdi
    10ad:	5f                   	pop    rdi
    10ae:	20 31                	and    BYTE PTR [rcx],dh
    10b0:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    10b6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10b9:	49                   	rex.WB
    10ba:	4e 54                	rex.WRX push rsp
    10bc:	4d                   	rex.WRB
    10bd:	41 58                	pop    r8
    10bf:	5f                   	pop    rdi
    10c0:	4d                   	rex.WRB
    10c1:	41 58                	pop    r8
    10c3:	5f                   	pop    rdi
    10c4:	5f                   	pop    rdi
    10c5:	20 30                	and    BYTE PTR [rax],dh
    10c7:	78 37                	js     1100 <__FRAME_END__+0x8f4>
    10c9:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    10d0:	66 66 66 66 66 66 66 
    10d7:	66 4c 00 5f 42       	data16 rex.WR add BYTE PTR [rdi+0x42],r11b
    10dc:	49 54                	rex.WB push r12
    10de:	53                   	push   rbx
    10df:	5f                   	pop    rdi
    10e0:	4c                   	rex.WR
    10e1:	49                   	rex.WB
    10e2:	42                   	rex.X
    10e3:	49                   	rex.WB
    10e4:	4f 5f                	rex.WRXB pop r15
    10e6:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    10e9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10ec:	47                   	rex.RXB
    10ed:	43                   	rex.XB
    10ee:	43 5f                	rex.XB pop r15
    10f0:	49                   	rex.WB
    10f1:	45                   	rex.RB
    10f2:	43 5f                	rex.XB pop r15
    10f4:	35 35 39 20 32       	xor    eax,0x32203935
    10f9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10fc:	46                   	rex.RX
    10fd:	4c 54                	rex.WR push rsp
    10ff:	31 32                	xor    DWORD PTR [rdx],esi
    1101:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1104:	49                   	rex.WB
    1105:	4e 5f                	rex.WRX pop rdi
    1107:	45 58                	rex.RB pop r8
    1109:	50                   	push   rax
    110a:	5f                   	pop    rdi
    110b:	5f                   	pop    rdi
    110c:	20 28                	and    BYTE PTR [rax],ch
    110e:	2d 31 36 33 38       	sub    eax,0x38333631
    1113:	31 29                	xor    DWORD PTR [rcx],ebp
    1115:	00 2f                	add    BYTE PTR [rdi],ch
    1117:	68 6f 6d 65 2f       	push   0x2f656d6f
    111c:	75 62                	jne    1180 <__FRAME_END__+0x974>
    111e:	75 6e                	jne    118e <__FRAME_END__+0x982>
    1120:	74 75                	je     1197 <__FRAME_END__+0x98b>
    1122:	2f                   	(bad)  
    1123:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1125:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
    112c:	6e 
    112d:	67 2f                	addr32 (bad) 
    112f:	50                   	push   rax
    1130:	72 6f                	jb     11a1 <__FRAME_END__+0x995>
    1132:	67 72 61             	addr32 jb 1196 <__FRAME_END__+0x98a>
    1135:	6d                   	ins    DWORD PTR es:[rdi],dx
    1136:	6d                   	ins    DWORD PTR es:[rdi],dx
    1137:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
    113e:	61                   	(bad)  
    113f:	73 73                	jae    11b4 <__FRAME_END__+0x9a8>
    1141:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1143:	62                   	(bad)  
    1144:	6c                   	ins    BYTE PTR es:[rdi],dx
    1145:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
    114c:	61                   	(bad)  
    114d:	72 69                	jb     11b8 <__FRAME_END__+0x9ac>
    114f:	65 73 2f             	gs jae 1181 <__FRAME_END__+0x975>
    1152:	43 2f                	rex.XB (bad) 
    1154:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1156:	74 65                	je     11bd <__FRAME_END__+0x9b1>
    1158:	6c                   	ins    BYTE PTR es:[rdi],dx
    1159:	5f                   	pop    rdi
    115a:	61                   	(bad)  
    115b:	72 63                	jb     11c0 <__FRAME_END__+0x9b4>
    115d:	68 69 74 65 63       	push   0x63657469
    1162:	74 75                	je     11d9 <__FRAME_END__+0x9cd>
    1164:	72 65                	jb     11cb <__FRAME_END__+0x9bf>
    1166:	2f                   	(bad)  
    1167:	41                   	rex.B
    1168:	4d                   	rex.WRB
    1169:	44                   	rex.R
    116a:	36 34 2f             	ss xor al,0x2f
    116d:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
    116f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1170:	61                   	(bad)  
    1171:	74 5f                	je     11d2 <__FRAME_END__+0x9c6>
    1173:	4f 70 65             	rex.WRXB jo 11db <__FRAME_END__+0x9cf>
    1176:	72 61                	jb     11d9 <__FRAME_END__+0x9cd>
    1178:	74 69                	je     11e3 <__FRAME_END__+0x9d7>
    117a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    117b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    117c:	73 2f                	jae    11ad <__FRAME_END__+0x9a1>
    117e:	41                   	rex.B
    117f:	64 64 5f             	fs fs pop rdi
    1182:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
    1184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1185:	61                   	(bad)  
    1186:	74 2f                	je     11b7 <__FRAME_END__+0x9ab>
    1188:	57                   	push   rdi
    1189:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
    1190:	75 
    1191:	67 5f                	addr32 pop rdi
    1193:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1195:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1197:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    119a:	53                   	push   rbx
    119b:	44 5f                	rex.R pop rdi
    119d:	53                   	push   rbx
    119e:	49 5a                	rex.WB pop r10
    11a0:	45 5f                	rex.RB pop r15
    11a2:	54                   	push   rsp
    11a3:	5f                   	pop    rdi
    11a4:	44                   	rex.R
    11a5:	45                   	rex.RB
    11a6:	46                   	rex.RX
    11a7:	49                   	rex.WB
    11a8:	4e                   	rex.WRX
    11a9:	45                   	rex.RB
    11aa:	44 5f                	rex.R pop rdi
    11ac:	20 00                	and    BYTE PTR [rax],al
    11ae:	5f                   	pop    rdi
    11af:	5f                   	pop    rdi
    11b0:	55                   	push   rbp
    11b1:	49                   	rex.WB
    11b2:	4e 54                	rex.WRX push rsp
    11b4:	5f                   	pop    rdi
    11b5:	4c                   	rex.WR
    11b6:	45                   	rex.RB
    11b7:	41 53                	push   r11
    11b9:	54                   	push   rsp
    11ba:	31 36                	xor    DWORD PTR [rsi],esi
    11bc:	5f                   	pop    rdi
    11bd:	4d                   	rex.WRB
    11be:	41 58                	pop    r8
    11c0:	5f                   	pop    rdi
    11c1:	5f                   	pop    rdi
    11c2:	20 30                	and    BYTE PTR [rax],dh
    11c4:	78 66                	js     122c <__FRAME_END__+0xa20>
    11c6:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    11cc:	55                   	push   rbp
    11cd:	49                   	rex.WB
    11ce:	4e 54                	rex.WRX push rsp
    11d0:	5f                   	pop    rdi
    11d1:	46                   	rex.RX
    11d2:	41 53                	push   r11
    11d4:	54                   	push   rsp
    11d5:	36 34 5f             	ss xor al,0x5f
    11d8:	4d                   	rex.WRB
    11d9:	41 58                	pop    r8
    11db:	5f                   	pop    rdi
    11dc:	5f                   	pop    rdi
    11dd:	20 30                	and    BYTE PTR [rax],dh
    11df:	78 66                	js     1247 <__FRAME_END__+0xa3b>
    11e1:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    11e8:	66 66 66 66 66 66 66 
    11ef:	66 55                	push   bp
    11f1:	4c 00 5f 49          	rex.WR add BYTE PTR [rdi+0x49],r11b
    11f5:	4f 5f                	rex.WRXB pop r15
    11f7:	45 52                	rex.RB push r10
    11f9:	52                   	push   rdx
    11fa:	5f                   	pop    rdi
    11fb:	53                   	push   rbx
    11fc:	45                   	rex.RB
    11fd:	45                   	rex.RB
    11fe:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    1201:	78 32                	js     1235 <__FRAME_END__+0xa29>
    1203:	30 00                	xor    BYTE PTR [rax],al
    1205:	5f                   	pop    rdi
    1206:	5f                   	pop    rdi
    1207:	61                   	(bad)  
    1208:	74 74                	je     127e <__FRAME_END__+0xa72>
    120a:	72 69                	jb     1275 <__FRAME_END__+0xa69>
    120c:	62                   	(bad)  
    120d:	75 74                	jne    1283 <__FRAME_END__+0xa77>
    120f:	65 5f                	gs pop rdi
    1211:	75 73                	jne    1286 <__FRAME_END__+0xa7a>
    1213:	65 64 5f             	gs fs pop rdi
    1216:	5f                   	pop    rdi
    1217:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    121a:	61                   	(bad)  
    121b:	74 74                	je     1291 <__FRAME_END__+0xa85>
    121d:	72 69                	jb     1288 <__FRAME_END__+0xa7c>
    121f:	62                   	(bad)  
    1220:	75 74                	jne    1296 <__FRAME_END__+0xa8a>
    1222:	65 5f                	gs pop rdi
    1224:	5f                   	pop    rdi
    1225:	20 28                	and    BYTE PTR [rax],ch
    1227:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    122a:	75 73                	jne    129f <__FRAME_END__+0xa93>
    122c:	65 64 5f             	gs fs pop rdi
    122f:	5f                   	pop    rdi
    1230:	29 29                	sub    DWORD PTR [rcx],ebp
    1232:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1235:	61                   	(bad)  
    1236:	74 74                	je     12ac <__FRAME_END__+0xaa0>
    1238:	72 69                	jb     12a3 <__FRAME_END__+0xa97>
    123a:	62                   	(bad)  
    123b:	75 74                	jne    12b1 <__FRAME_END__+0xaa5>
    123d:	65 5f                	gs pop rdi
    123f:	61                   	(bad)  
    1240:	72 74                	jb     12b6 <__FRAME_END__+0xaaa>
    1242:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    1249:	5f                   	pop    rdi
    124a:	5f                   	pop    rdi
    124b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    124e:	61                   	(bad)  
    124f:	74 74                	je     12c5 <__FRAME_END__+0xab9>
    1251:	72 69                	jb     12bc <__FRAME_END__+0xab0>
    1253:	62                   	(bad)  
    1254:	75 74                	jne    12ca <__FRAME_END__+0xabe>
    1256:	65 5f                	gs pop rdi
    1258:	5f                   	pop    rdi
    1259:	20 28                	and    BYTE PTR [rax],ch
    125b:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    125e:	61                   	(bad)  
    125f:	72 74                	jb     12d5 <__FRAME_END__+0xac9>
    1261:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    1268:	5f                   	pop    rdi
    1269:	5f                   	pop    rdi
    126a:	29 29                	sub    DWORD PTR [rcx],ebp
    126c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    126f:	4f 5f                	rex.WRXB pop r15
    1271:	66 74 72             	data16 je 12e6 <__FRAME_END__+0xada>
    1274:	79 6c                	jns    12e2 <__FRAME_END__+0xad6>
    1276:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1277:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    127a:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    1281:	29 
    1282:	20 00                	and    BYTE PTR [rax],al
    1284:	5f                   	pop    rdi
    1285:	5f                   	pop    rdi
    1286:	55                   	push   rbp
    1287:	49                   	rex.WB
    1288:	4e 54                	rex.WRX push rsp
    128a:	5f                   	pop    rdi
    128b:	4c                   	rex.WR
    128c:	45                   	rex.RB
    128d:	41 53                	push   r11
    128f:	54                   	push   rsp
    1290:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1293:	41 58                	pop    r8
    1295:	5f                   	pop    rdi
    1296:	5f                   	pop    rdi
    1297:	20 30                	and    BYTE PTR [rax],dh
    1299:	78 66                	js     1301 <__FRAME_END__+0xaf5>
    129b:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    129f:	47                   	rex.RXB
    12a0:	4c                   	rex.WR
    12a1:	49                   	rex.WB
    12a2:	42                   	rex.X
    12a3:	43 5f                	rex.XB pop r15
    12a5:	55                   	push   rbp
    12a6:	53                   	push   rbx
    12a7:	45 5f                	rex.RB pop r15
    12a9:	4c                   	rex.WR
    12aa:	49                   	rex.WB
    12ab:	42 5f                	rex.X pop rdi
    12ad:	45 58                	rex.RB pop r8
    12af:	54                   	push   rsp
    12b0:	32 20                	xor    ah,BYTE PTR [rax]
    12b2:	30 00                	xor    BYTE PTR [rax],al
    12b4:	5f                   	pop    rdi
    12b5:	5f                   	pop    rdi
    12b6:	44                   	rex.R
    12b7:	45                   	rex.RB
    12b8:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    12bb:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    12be:	49                   	rex.WB
    12bf:	4e 5f                	rex.WRX pop rdi
    12c1:	45 58                	rex.RB pop r8
    12c3:	50                   	push   rax
    12c4:	5f                   	pop    rdi
    12c5:	5f                   	pop    rdi
    12c6:	20 28                	and    BYTE PTR [rax],ch
    12c8:	2d 36 31 34 32       	sub    eax,0x32343136
    12cd:	29 00                	sub    DWORD PTR [rax],eax
    12cf:	5f                   	pop    rdi
    12d0:	5f                   	pop    rdi
    12d1:	4b                   	rex.WXB
    12d2:	45 52                	rex.RB push r10
    12d4:	4e                   	rex.WRX
    12d5:	45                   	rex.RB
    12d6:	4c 5f                	rex.WR pop rdi
    12d8:	53                   	push   rbx
    12d9:	54                   	push   rsp
    12da:	52                   	push   rdx
    12db:	49                   	rex.WB
    12dc:	43 54                	rex.XB push r12
    12de:	5f                   	pop    rdi
    12df:	4e                   	rex.WRX
    12e0:	41                   	rex.B
    12e1:	4d                   	rex.WRB
    12e2:	45 53                	rex.RB push r11
    12e4:	20 00                	and    BYTE PTR [rax],al
    12e6:	5f                   	pop    rdi
    12e7:	5f                   	pop    rdi
    12e8:	57                   	push   rdi
    12e9:	43                   	rex.XB
    12ea:	48                   	rex.W
    12eb:	41 52                	push   r10
    12ed:	5f                   	pop    rdi
    12ee:	54                   	push   rsp
    12ef:	59                   	pop    rcx
    12f0:	50                   	push   rax
    12f1:	45 5f                	rex.RB pop r15
    12f3:	5f                   	pop    rdi
    12f4:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    12f7:	74 00                	je     12f9 <__FRAME_END__+0xaed>
    12f9:	5f                   	pop    rdi
    12fa:	5f                   	pop    rdi
    12fb:	49                   	rex.WB
    12fc:	4e 54                	rex.WRX push rsp
    12fe:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1301:	41 58                	pop    r8
    1303:	5f                   	pop    rdi
    1304:	5f                   	pop    rdi
    1305:	20 30                	and    BYTE PTR [rax],dh
    1307:	78 37                	js     1340 <__FRAME_END__+0xb34>
    1309:	66 00 67 65          	data16 add BYTE PTR [rdi+0x65],ah
    130d:	74 63                	je     1372 <__FRAME_END__+0xb66>
    130f:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    1312:	70 29                	jo     133d <__FRAME_END__+0xb31>
    1314:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    1317:	4f 5f                	rex.WRXB pop r15
    1319:	67 65 74 63          	addr32 gs je 1380 <__FRAME_END__+0xb74>
    131d:	20 28                	and    BYTE PTR [rax],ch
    131f:	5f                   	pop    rdi
    1320:	66 70 29             	data16 jo 134c <__FRAME_END__+0xb40>
    1323:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1326:	44                   	rex.R
    1327:	45                   	rex.RB
    1328:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    132b:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    132e:	50                   	push   rax
    132f:	53                   	push   rbx
    1330:	49                   	rex.WB
    1331:	4c                   	rex.WR
    1332:	4f                   	rex.WRXB
    1333:	4e 5f                	rex.WRX pop rdi
    1335:	5f                   	pop    rdi
    1336:	20 31                	and    BYTE PTR [rcx],dh
    1338:	45 2d 33 33 44 4c    	rex.RB sub eax,0x4c443333
    133e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1341:	55                   	push   rbp
    1342:	53                   	push   rbx
    1343:	45 5f                	rex.RB pop r15
    1345:	50                   	push   rax
    1346:	4f 53                	rex.WRXB push r11
    1348:	49 58                	rex.WB pop r8
    134a:	31 39                	xor    DWORD PTR [rcx],edi
    134c:	39 35 30 36 00 5f    	cmp    DWORD PTR [rip+0x5f003630],esi        # 5f004982 <_end+0x5ee0396a>
    1352:	5f                   	pop    rdi
    1353:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1354:	65 65 64 5f          	gs gs fs pop rdi
    1358:	4e 55                	rex.WRX push rbp
    135a:	4c                   	rex.WR
    135b:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    135f:	52                   	push   rdx
    1360:	45                   	rex.RB
    1361:	44                   	rex.R
    1362:	49 52                	rex.WB push r10
    1364:	45                   	rex.RB
    1365:	43 54                	rex.XB push r12
    1367:	5f                   	pop    rdi
    1368:	4e 54                	rex.WRX push rsp
    136a:	48 5f                	rex.W pop rdi
    136c:	4c                   	rex.WR
    136d:	44                   	rex.R
    136e:	42                   	rex.X
    136f:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    1373:	6d                   	ins    DWORD PTR es:[rdi],dx
    1374:	65 2c 70             	gs sub al,0x70
    1377:	72 6f                	jb     13e8 <__FRAME_END__+0xbdc>
    1379:	74 6f                	je     13ea <__FRAME_END__+0xbde>
    137b:	2c 61                	sub    al,0x61
    137d:	6c                   	ins    BYTE PTR es:[rdi],dx
    137e:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    1385:	52                   	push   rdx
    1386:	45                   	rex.RB
    1387:	44                   	rex.R
    1388:	49 52                	rex.WB push r10
    138a:	45                   	rex.RB
    138b:	43 54                	rex.XB push r12
    138d:	5f                   	pop    rdi
    138e:	4e 54                	rex.WRX push rsp
    1390:	48 20 28             	rex.W and BYTE PTR [rax],bpl
    1393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1394:	61                   	(bad)  
    1395:	6d                   	ins    DWORD PTR es:[rdi],dx
    1396:	65 2c 20             	gs sub al,0x20
    1399:	70 72                	jo     140d <__FRAME_END__+0xc01>
    139b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    139c:	74 6f                	je     140d <__FRAME_END__+0xc01>
    139e:	2c 20                	sub    al,0x20
    13a0:	61                   	(bad)  
    13a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    13a2:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    13a9:	52                   	push   rdx
    13aa:	45                   	rex.RB
    13ab:	44                   	rex.R
    13ac:	49 52                	rex.WB push r10
    13ae:	45                   	rex.RB
    13af:	43 54                	rex.XB push r12
    13b1:	5f                   	pop    rdi
    13b2:	4e 54                	rex.WRX push rsp
    13b4:	48                   	rex.W
    13b5:	4e                   	rex.WRX
    13b6:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    13ba:	6d                   	ins    DWORD PTR es:[rdi],dx
    13bb:	65 2c 70             	gs sub al,0x70
    13be:	72 6f                	jb     142f <__FRAME_END__+0xc23>
    13c0:	74 6f                	je     1431 <__FRAME_END__+0xc25>
    13c2:	2c 61                	sub    al,0x61
    13c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    13c5:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    13cc:	6d                   	ins    DWORD PTR es:[rdi],dx
    13cd:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    13d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13d2:	74 6f                	je     1443 <__FRAME_END__+0xc37>
    13d4:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    13d7:	61                   	(bad)  
    13d8:	73 6d                	jae    1447 <__FRAME_END__+0xc3b>
    13da:	5f                   	pop    rdi
    13db:	5f                   	pop    rdi
    13dc:	20 28                	and    BYTE PTR [rax],ch
    13de:	5f                   	pop    rdi
    13df:	5f                   	pop    rdi
    13e0:	41 53                	push   r11
    13e2:	4d                   	rex.WRB
    13e3:	4e                   	rex.WRX
    13e4:	41                   	rex.B
    13e5:	4d                   	rex.WRB
    13e6:	45 20 28             	and    BYTE PTR [r8],r13b
    13e9:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    13ec:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    13f3:	5f                   	pop    rdi
    13f4:	54                   	push   rsp
    13f5:	48 52                	rex.W push rdx
    13f7:	4f 57                	rex.WRXB push r15
    13f9:	4e                   	rex.WRX
    13fa:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    13fe:	46                   	rex.RX
    13ff:	4c 54                	rex.WR push rsp
    1401:	31 32                	xor    DWORD PTR [rdx],esi
    1403:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1406:	41 58                	pop    r8
    1408:	5f                   	pop    rdi
    1409:	45 58                	rex.RB pop r8
    140b:	50                   	push   rax
    140c:	5f                   	pop    rdi
    140d:	5f                   	pop    rdi
    140e:	20 31                	and    BYTE PTR [rcx],dh
    1410:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1413:	34 00                	xor    al,0x0
    1415:	5f                   	pop    rdi
    1416:	5f                   	pop    rdi
    1417:	46                   	rex.RX
    1418:	4c 54                	rex.WR push rsp
    141a:	5f                   	pop    rdi
    141b:	52                   	push   rdx
    141c:	41                   	rex.B
    141d:	44                   	rex.R
    141e:	49 58                	rex.WB pop r8
    1420:	5f                   	pop    rdi
    1421:	5f                   	pop    rdi
    1422:	20 32                	and    BYTE PTR [rdx],dh
    1424:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1427:	46                   	rex.RX
    1428:	4c 54                	rex.WR push rsp
    142a:	33 32                	xor    esi,DWORD PTR [rdx]
    142c:	58                   	pop    rax
    142d:	5f                   	pop    rdi
    142e:	44                   	rex.R
    142f:	45                   	rex.RB
    1430:	4e                   	rex.WRX
    1431:	4f 52                	rex.WRXB push r10
    1433:	4d 5f                	rex.WRB pop r15
    1435:	4d                   	rex.WRB
    1436:	49                   	rex.WB
    1437:	4e 5f                	rex.WRX pop rdi
    1439:	5f                   	pop    rdi
    143a:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    143d:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    1440:	36 35 36 34 35 38    	ss xor eax,0x38353436
    1446:	34 31                	xor    al,0x31
    1448:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    144b:	35 34 34 31 37       	xor    eax,0x37313434
    1450:	36 35 36 38 37 39    	ss xor eax,0x39373836
    1456:	32 38                	xor    bh,BYTE PTR [rax]
    1458:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    145b:	32 31                	xor    dh,BYTE PTR [rcx]
    145d:	33 37                	xor    esi,DWORD PTR [rdi]
    145f:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1462:	33 32                	xor    esi,DWORD PTR [rdx]
    1464:	34 46                	xor    al,0x46
    1466:	33 32                	xor    esi,DWORD PTR [rdx]
    1468:	78 00                	js     146a <__FRAME_END__+0xc5e>
    146a:	5f                   	pop    rdi
    146b:	5f                   	pop    rdi
    146c:	67 6c                	ins    BYTE PTR es:[edi],dx
    146e:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    1475:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1476:	67 5f                	addr32 pop rdi
    1478:	68 61 73 5f 65       	push   0x655f7361
    147d:	78 74                	js     14f3 <__FRAME_END__+0xce7>
    147f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1481:	73 69                	jae    14ec <__FRAME_END__+0xce0>
    1483:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1485:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    1488:	74 29                	je     14b3 <__FRAME_END__+0xca7>
    148a:	20 30                	and    BYTE PTR [rax],dh
    148c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    148f:	50                   	push   rax
    1490:	4d 54                	rex.WRB push r12
    1492:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    1495:	67 73 29             	addr32 jae 14c1 <__FRAME_END__+0xcb5>
    1498:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    149b:	67 73 00             	addr32 jae 149e <__FRAME_END__+0xc92>
    149e:	5f                   	pop    rdi
    149f:	5f                   	pop    rdi
    14a0:	47                   	rex.RXB
    14a1:	49                   	rex.WB
    14a2:	44 5f                	rex.R pop rdi
    14a4:	54                   	push   rsp
    14a5:	5f                   	pop    rdi
    14a6:	54                   	push   rsp
    14a7:	59                   	pop    rcx
    14a8:	50                   	push   rax
    14a9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    14ad:	55                   	push   rbp
    14ae:	33 32                	xor    esi,DWORD PTR [rdx]
    14b0:	5f                   	pop    rdi
    14b1:	54                   	push   rsp
    14b2:	59                   	pop    rcx
    14b3:	50                   	push   rax
    14b4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    14b8:	53                   	push   rbx
    14b9:	49 5a                	rex.WB pop r10
    14bb:	45                   	rex.RB
    14bc:	4f                   	rex.WRXB
    14bd:	46 5f                	rex.RX pop rdi
    14bf:	4c                   	rex.WR
    14c0:	4f                   	rex.WRXB
    14c1:	4e                   	rex.WRX
    14c2:	47 5f                	rex.RXB pop r15
    14c4:	44                   	rex.R
    14c5:	4f 55                	rex.WRXB push r13
    14c7:	42                   	rex.X
    14c8:	4c                   	rex.WR
    14c9:	45 5f                	rex.RB pop r15
    14cb:	5f                   	pop    rdi
    14cc:	20 31                	and    BYTE PTR [rcx],dh
    14ce:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    14d2:	44                   	rex.R
    14d3:	42                   	rex.X
    14d4:	4c 5f                	rex.WR pop rdi
    14d6:	48                   	rex.W
    14d7:	41 53                	push   r11
    14d9:	5f                   	pop    rdi
    14da:	51                   	push   rcx
    14db:	55                   	push   rbp
    14dc:	49                   	rex.WB
    14dd:	45 54                	rex.RB push r12
    14df:	5f                   	pop    rdi
    14e0:	4e                   	rex.WRX
    14e1:	41                   	rex.B
    14e2:	4e 5f                	rex.WRX pop rdi
    14e4:	5f                   	pop    rdi
    14e5:	20 31                	and    BYTE PTR [rcx],dh
    14e7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14ea:	77 75                	ja     1561 <__FRAME_END__+0xd55>
    14ec:	72 20                	jb     150e <__FRAME_END__+0xd02>
    14ee:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    14f1:	49 54                	rex.WB push r12
    14f3:	53                   	push   rbx
    14f4:	5f                   	pop    rdi
    14f5:	54                   	push   rsp
    14f6:	59                   	pop    rcx
    14f7:	50                   	push   rax
    14f8:	45 53                	rex.RB push r11
    14fa:	5f                   	pop    rdi
    14fb:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    14fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1501:	4c                   	rex.WR
    1502:	44                   	rex.R
    1503:	42                   	rex.X
    1504:	4c 5f                	rex.WR pop rdi
    1506:	44                   	rex.R
    1507:	45                   	rex.RB
    1508:	4e                   	rex.WRX
    1509:	4f 52                	rex.WRXB push r10
    150b:	4d 5f                	rex.WRB pop r15
    150d:	4d                   	rex.WRB
    150e:	49                   	rex.WB
    150f:	4e 5f                	rex.WRX pop rdi
    1511:	5f                   	pop    rdi
    1512:	20 33                	and    BYTE PTR [rbx],dh
    1514:	2e 36 34 35          	cs ss xor al,0x35
    1518:	31 39                	xor    DWORD PTR [rcx],edi
    151a:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38384653 <_end+0x3818363b>
    1520:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    1523:	34 36                	xor    al,0x36
    1525:	30 32                	xor    BYTE PTR [rdx],dh
    1527:	35 32 38 34 30       	xor    eax,0x30343832
    152c:	35 39 33 33 36       	xor    eax,0x36333339
    1531:	31 39                	xor    DWORD PTR [rcx],edi
    1533:	34 31                	xor    al,0x31
    1535:	39 38                	cmp    DWORD PTR [rax],edi
    1537:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    153a:	34 39                	xor    al,0x39
    153c:	35 31 4c 00 5f       	xor    eax,0x5f004c31
    1541:	5f                   	pop    rdi
    1542:	50                   	push   rax
    1543:	49                   	rex.WB
    1544:	44 5f                	rex.R pop rdi
    1546:	54                   	push   rsp
    1547:	5f                   	pop    rdi
    1548:	54                   	push   rsp
    1549:	59                   	pop    rcx
    154a:	50                   	push   rax
    154b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    154f:	53                   	push   rbx
    1550:	33 32                	xor    esi,DWORD PTR [rdx]
    1552:	5f                   	pop    rdi
    1553:	54                   	push   rsp
    1554:	59                   	pop    rcx
    1555:	50                   	push   rax
    1556:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    155a:	73 74                	jae    15d0 <__FRAME_END__+0xdc4>
    155c:	75 62                	jne    15c0 <__FRAME_END__+0xdb4>
    155e:	5f                   	pop    rdi
    155f:	66 61                	data16 (bad) 
    1561:	74 74                	je     15d7 <__FRAME_END__+0xdcb>
    1563:	61                   	(bad)  
    1564:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1567:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
    156a:	73 5f                	jae    15cb <__FRAME_END__+0xdbf>
    156c:	65 72 72             	gs jb  15e1 <__FRAME_END__+0xdd5>
    156f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1570:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    1577:	4c 54                	rex.WR push rsp
    1579:	36 34 5f             	ss xor al,0x5f
    157c:	48                   	rex.W
    157d:	41 53                	push   r11
    157f:	5f                   	pop    rdi
    1580:	49                   	rex.WB
    1581:	4e                   	rex.WRX
    1582:	46                   	rex.RX
    1583:	49                   	rex.WB
    1584:	4e                   	rex.WRX
    1585:	49 54                	rex.WB push r12
    1587:	59                   	pop    rcx
    1588:	5f                   	pop    rdi
    1589:	5f                   	pop    rdi
    158a:	20 31                	and    BYTE PTR [rcx],dh
    158c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    158f:	55                   	push   rbp
    1590:	49                   	rex.WB
    1591:	4e 54                	rex.WRX push rsp
    1593:	5f                   	pop    rdi
    1594:	46                   	rex.RX
    1595:	41 53                	push   r11
    1597:	54                   	push   rsp
    1598:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    159b:	41 58                	pop    r8
    159d:	5f                   	pop    rdi
    159e:	5f                   	pop    rdi
    159f:	20 30                	and    BYTE PTR [rax],dh
    15a1:	78 66                	js     1609 <__FRAME_END__+0xdfd>
    15a3:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    15a7:	41 54                	push   r12
    15a9:	4f                   	rex.WRXB
    15aa:	4d                   	rex.WRB
    15ab:	49                   	rex.WB
    15ac:	43 5f                	rex.XB pop r15
    15ae:	48                   	rex.W
    15af:	4c                   	rex.WR
    15b0:	45 5f                	rex.RB pop r15
    15b2:	52                   	push   rdx
    15b3:	45                   	rex.RB
    15b4:	4c                   	rex.WR
    15b5:	45                   	rex.RB
    15b6:	41 53                	push   r11
    15b8:	45 20 31             	and    BYTE PTR [r9],r14b
    15bb:	33 31                	xor    esi,DWORD PTR [rcx]
    15bd:	30 37                	xor    BYTE PTR [rdi],dh
    15bf:	32 00                	xor    al,BYTE PTR [rax]
    15c1:	5f                   	pop    rdi
    15c2:	5f                   	pop    rdi
    15c3:	4c                   	rex.WR
    15c4:	44                   	rex.R
    15c5:	42                   	rex.X
    15c6:	4c 5f                	rex.WR pop rdi
    15c8:	4d                   	rex.WRB
    15c9:	41 58                	pop    r8
    15cb:	5f                   	pop    rdi
    15cc:	45 58                	rex.RB pop r8
    15ce:	50                   	push   rax
    15cf:	5f                   	pop    rdi
    15d0:	5f                   	pop    rdi
    15d1:	20 31                	and    BYTE PTR [rcx],dh
    15d3:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    15d6:	34 00                	xor    al,0x0
    15d8:	5f                   	pop    rdi
    15d9:	5f                   	pop    rdi
    15da:	73 74                	jae    1650 <__FRAME_END__+0xe44>
    15dc:	75 62                	jne    1640 <__FRAME_END__+0xe34>
    15de:	5f                   	pop    rdi
    15df:	67 74 74             	addr32 je 1656 <__FRAME_END__+0xe4a>
    15e2:	79 20                	jns    1604 <__FRAME_END__+0xdf8>
    15e4:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    15e7:	49 54                	rex.WB push r12
    15e9:	53                   	push   rbx
    15ea:	5f                   	pop    rdi
    15eb:	54                   	push   rsp
    15ec:	59                   	pop    rcx
    15ed:	50                   	push   rax
    15ee:	45 53                	rex.RB push r11
    15f0:	49 5a                	rex.WB pop r10
    15f2:	45 53                	rex.RB push r11
    15f4:	5f                   	pop    rdi
    15f5:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    15f8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    15fb:	55                   	push   rbp
    15fc:	53                   	push   rbx
    15fd:	45                   	rex.RB
    15fe:	43                   	rex.XB
    15ff:	4f                   	rex.WRXB
    1600:	4e                   	rex.WRX
    1601:	44 53                	rex.R push rbx
    1603:	5f                   	pop    rdi
    1604:	54                   	push   rsp
    1605:	5f                   	pop    rdi
    1606:	54                   	push   rsp
    1607:	59                   	pop    rcx
    1608:	50                   	push   rax
    1609:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    160d:	55                   	push   rbp
    160e:	33 32                	xor    esi,DWORD PTR [rdx]
    1610:	5f                   	pop    rdi
    1611:	54                   	push   rsp
    1612:	59                   	pop    rcx
    1613:	50                   	push   rax
    1614:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    1618:	4f 5f                	rex.WRXB pop r15
    161a:	70 65                	jo     1681 <__FRAME_END__+0xe75>
    161c:	65 6b 63 28 5f       	imul   esp,DWORD PTR gs:[rbx+0x28],0x5f
    1621:	66 70 29             	data16 jo 164d <__FRAME_END__+0xe41>
    1624:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    1627:	4f 5f                	rex.WRXB pop r15
    1629:	70 65                	jo     1690 <__FRAME_END__+0xe84>
    162b:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    1630:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1631:	6c                   	ins    BYTE PTR es:[rdi],dx
    1632:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1633:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1636:	64 20 28             	and    BYTE PTR fs:[rax],ch
    1639:	5f                   	pop    rdi
    163a:	66 70 29             	data16 jo 1666 <__FRAME_END__+0xe5a>
    163d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1640:	49                   	rex.WB
    1641:	4e 54                	rex.WRX push rsp
    1643:	50                   	push   rax
    1644:	54                   	push   rsp
    1645:	52                   	push   rdx
    1646:	5f                   	pop    rdi
    1647:	54                   	push   rsp
    1648:	59                   	pop    rcx
    1649:	50                   	push   rax
    164a:	45 5f                	rex.RB pop r15
    164c:	5f                   	pop    rdi
    164d:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1651:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1655:	74 00                	je     1657 <__FRAME_END__+0xe4b>
    1657:	5f                   	pop    rdi
    1658:	5f                   	pop    rdi
    1659:	44                   	rex.R
    165a:	45                   	rex.RB
    165b:	43                   	rex.XB
    165c:	36 34 5f             	ss xor al,0x5f
    165f:	4d                   	rex.WRB
    1660:	41 58                	pop    r8
    1662:	5f                   	pop    rdi
    1663:	5f                   	pop    rdi
    1664:	20 39                	and    BYTE PTR [rcx],bh
    1666:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    1669:	39 39                	cmp    DWORD PTR [rcx],edi
    166b:	39 39                	cmp    DWORD PTR [rcx],edi
    166d:	39 39                	cmp    DWORD PTR [rcx],edi
    166f:	39 39                	cmp    DWORD PTR [rcx],edi
    1671:	39 39                	cmp    DWORD PTR [rcx],edi
    1673:	39 39                	cmp    DWORD PTR [rcx],edi
    1675:	39 45 33             	cmp    DWORD PTR [rbp+0x33],eax
    1678:	38 34 44             	cmp    BYTE PTR [rsp+rax*2],dh
    167b:	44 00 73 79          	add    BYTE PTR [rbx+0x79],r14b
    167f:	73 5f                	jae    16e0 <__FRAME_END__+0xed4>
    1681:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1682:	65 72 72             	gs jb  16f7 <__FRAME_END__+0xeeb>
    1685:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1688:	47                   	rex.RXB
    1689:	43                   	rex.XB
    168a:	43 5f                	rex.XB pop r15
    168c:	41 54                	push   r12
    168e:	4f                   	rex.WRXB
    168f:	4d                   	rex.WRB
    1690:	49                   	rex.WB
    1691:	43 5f                	rex.XB pop r15
    1693:	49                   	rex.WB
    1694:	4e 54                	rex.WRX push rsp
    1696:	5f                   	pop    rdi
    1697:	4c                   	rex.WR
    1698:	4f                   	rex.WRXB
    1699:	43                   	rex.XB
    169a:	4b 5f                	rex.WXB pop r15
    169c:	46 52                	rex.RX push rdx
    169e:	45                   	rex.RB
    169f:	45 20 32             	and    BYTE PTR [r10],r14b
    16a2:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    16a5:	59                   	pop    rcx
    16a6:	53                   	push   rbx
    16a7:	5f                   	pop    rdi
    16a8:	53                   	push   rbx
    16a9:	49 5a                	rex.WB pop r10
    16ab:	45 5f                	rex.RB pop r15
    16ad:	54                   	push   rsp
    16ae:	5f                   	pop    rdi
    16af:	48 20 00             	rex.W and BYTE PTR [rax],al
    16b2:	5f                   	pop    rdi
    16b3:	5f                   	pop    rdi
    16b4:	4d                   	rex.WRB
    16b5:	4d 58                	rex.WRB pop r8
    16b7:	5f                   	pop    rdi
    16b8:	5f                   	pop    rdi
    16b9:	20 31                	and    BYTE PTR [rcx],dh
    16bb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16be:	42                   	rex.X
    16bf:	4c                   	rex.WR
    16c0:	4b                   	rex.WXB
    16c1:	43                   	rex.XB
    16c2:	4e 54                	rex.WRX push rsp
    16c4:	5f                   	pop    rdi
    16c5:	54                   	push   rsp
    16c6:	5f                   	pop    rdi
    16c7:	54                   	push   rsp
    16c8:	59                   	pop    rcx
    16c9:	50                   	push   rax
    16ca:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    16ce:	53                   	push   rbx
    16cf:	59                   	pop    rcx
    16d0:	53                   	push   rbx
    16d1:	43                   	rex.XB
    16d2:	41                   	rex.B
    16d3:	4c                   	rex.WR
    16d4:	4c 5f                	rex.WR pop rdi
    16d6:	53                   	push   rbx
    16d7:	4c                   	rex.WR
    16d8:	4f                   	rex.WRXB
    16d9:	4e                   	rex.WRX
    16da:	47 5f                	rex.RXB pop r15
    16dc:	54                   	push   rsp
    16dd:	59                   	pop    rcx
    16de:	50                   	push   rax
    16df:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    16e3:	4f 5f                	rex.WRXB pop r15
    16e5:	53                   	push   rbx
    16e6:	48                   	rex.W
    16e7:	4f 57                	rex.WRXB push r15
    16e9:	42                   	rex.X
    16ea:	41 53                	push   r11
    16ec:	45 20 30             	and    BYTE PTR [r8],r14b
    16ef:	32 30                	xor    dh,BYTE PTR [rax]
    16f1:	30 00                	xor    BYTE PTR [rax],al
    16f3:	5f                   	pop    rdi
    16f4:	5f                   	pop    rdi
    16f5:	73 74                	jae    176b <__FRAME_END__+0xf5f>
    16f7:	75 62                	jne    175b <__FRAME_END__+0xf4f>
    16f9:	5f                   	pop    rdi
    16fa:	73 74                	jae    1770 <__FRAME_END__+0xf64>
    16fc:	74 79                	je     1777 <__FRAME_END__+0xf6b>
    16fe:	20 00                	and    BYTE PTR [rax],al
    1700:	5f                   	pop    rdi
    1701:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
    1708:	5f                   	pop    rdi
    1709:	5f                   	pop    rdi
    170a:	48                   	rex.W
    170b:	41 56                	push   r14
    170d:	45 5f                	rex.RB pop r15
    170f:	47                   	rex.RXB
    1710:	45                   	rex.RB
    1711:	4e                   	rex.WRX
    1712:	45 52                	rex.RB push r10
    1714:	49                   	rex.WB
    1715:	43 5f                	rex.XB pop r15
    1717:	53                   	push   rbx
    1718:	45                   	rex.RB
    1719:	4c                   	rex.WR
    171a:	45                   	rex.RB
    171b:	43 54                	rex.XB push r12
    171d:	49                   	rex.WB
    171e:	4f                   	rex.WRXB
    171f:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    1722:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1725:	52                   	push   rdx
    1726:	4c                   	rex.WR
    1727:	49                   	rex.WB
    1728:	4d                   	rex.WRB
    1729:	36 34 5f             	ss xor al,0x5f
    172c:	54                   	push   rsp
    172d:	5f                   	pop    rdi
    172e:	54                   	push   rsp
    172f:	59                   	pop    rcx
    1730:	50                   	push   rax
    1731:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1735:	55                   	push   rbp
    1736:	51                   	push   rcx
    1737:	55                   	push   rbp
    1738:	41                   	rex.B
    1739:	44 5f                	rex.R pop rdi
    173b:	54                   	push   rsp
    173c:	59                   	pop    rcx
    173d:	50                   	push   rax
    173e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1742:	46                   	rex.RX
    1743:	4c 54                	rex.WR push rsp
    1745:	31 32                	xor    DWORD PTR [rdx],esi
    1747:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    174a:	41                   	rex.B
    174b:	4e 54                	rex.WRX push rsp
    174d:	5f                   	pop    rdi
    174e:	44                   	rex.R
    174f:	49                   	rex.WB
    1750:	47 5f                	rex.RXB pop r15
    1752:	5f                   	pop    rdi
    1753:	20 31                	and    BYTE PTR [rcx],dh
    1755:	31 33                	xor    DWORD PTR [rbx],esi
    1757:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    175a:	4f 52                	rex.WRXB push r10
    175c:	44                   	rex.R
    175d:	45 52                	rex.RB push r10
    175f:	5f                   	pop    rdi
    1760:	4c                   	rex.WR
    1761:	49 54                	rex.WB push r12
    1763:	54                   	push   rsp
    1764:	4c                   	rex.WR
    1765:	45 5f                	rex.RB pop r15
    1767:	45                   	rex.RB
    1768:	4e                   	rex.WRX
    1769:	44                   	rex.R
    176a:	49                   	rex.WB
    176b:	41                   	rex.B
    176c:	4e 5f                	rex.WRX pop rdi
    176e:	5f                   	pop    rdi
    176f:	20 31                	and    BYTE PTR [rcx],dh
    1771:	32 33                	xor    dh,BYTE PTR [rbx]
    1773:	34 00                	xor    al,0x0
    1775:	5f                   	pop    rdi
    1776:	5f                   	pop    rdi
    1777:	55                   	push   rbp
    1778:	53                   	push   rbx
    1779:	45 5f                	rex.RB pop r15
    177b:	58                   	pop    rax
    177c:	4f 50                	rex.WRXB push r8
    177e:	45                   	rex.RB
    177f:	4e 32 4b 20          	rex.WRX xor r9b,BYTE PTR [rbx+0x20]
    1783:	31 00                	xor    DWORD PTR [rax],eax
    1785:	5f                   	pop    rdi
    1786:	5f                   	pop    rdi
    1787:	53                   	push   rbx
    1788:	49 5a                	rex.WB pop r10
    178a:	45                   	rex.RB
    178b:	4f                   	rex.WRXB
    178c:	46 5f                	rex.RX pop rdi
    178e:	50                   	push   rax
    178f:	54                   	push   rsp
    1790:	52                   	push   rdx
    1791:	44                   	rex.R
    1792:	49                   	rex.WB
    1793:	46                   	rex.RX
    1794:	46 5f                	rex.RX pop rdi
    1796:	54                   	push   rsp
    1797:	5f                   	pop    rdi
    1798:	5f                   	pop    rdi
    1799:	20 38                	and    BYTE PTR [rax],bh
    179b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    179e:	4f 53                	rex.WRXB push r11
    17a0:	5f                   	pop    rdi
    17a1:	54                   	push   rsp
    17a2:	52                   	push   rdx
    17a3:	55                   	push   rbp
    17a4:	4e                   	rex.WRX
    17a5:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    17a8:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    17ac:	44                   	rex.R
    17ad:	45                   	rex.RB
    17ae:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    17b1:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    17b4:	41                   	rex.B
    17b5:	4e 54                	rex.WRX push rsp
    17b7:	5f                   	pop    rdi
    17b8:	44                   	rex.R
    17b9:	49                   	rex.WB
    17ba:	47 5f                	rex.RXB pop r15
    17bc:	5f                   	pop    rdi
    17bd:	20 33                	and    BYTE PTR [rbx],dh
    17bf:	34 00                	xor    al,0x0
    17c1:	5f                   	pop    rdi
    17c2:	5f                   	pop    rdi
    17c3:	55                   	push   rbp
    17c4:	53                   	push   rbx
    17c5:	45 5f                	rex.RB pop r15
    17c7:	49 53                	rex.WB push r11
    17c9:	4f                   	rex.WRXB
    17ca:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    17cd:	20 31                	and    BYTE PTR [rcx],dh
    17cf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17d2:	49                   	rex.WB
    17d3:	4e 54                	rex.WRX push rsp
    17d5:	33 32                	xor    esi,DWORD PTR [rdx]
    17d7:	5f                   	pop    rdi
    17d8:	54                   	push   rsp
    17d9:	59                   	pop    rcx
    17da:	50                   	push   rax
    17db:	45 5f                	rex.RB pop r15
    17dd:	5f                   	pop    rdi
    17de:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    17e1:	74 00                	je     17e3 <__FRAME_END__+0xfd7>
    17e3:	5f                   	pop    rdi
    17e4:	5f                   	pop    rdi
    17e5:	4b                   	rex.WXB
    17e6:	45 52                	rex.RB push r10
    17e8:	4e                   	rex.WRX
    17e9:	45                   	rex.RB
    17ea:	4c 5f                	rex.WR pop rdi
    17ec:	53                   	push   rbx
    17ed:	54                   	push   rsp
    17ee:	52                   	push   rdx
    17ef:	49                   	rex.WB
    17f0:	43 54                	rex.XB push r12
    17f2:	5f                   	pop    rdi
    17f3:	4e                   	rex.WRX
    17f4:	41                   	rex.B
    17f5:	4d                   	rex.WRB
    17f6:	45 53                	rex.RB push r11
    17f8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17fb:	55                   	push   rbp
    17fc:	33 32                	xor    esi,DWORD PTR [rdx]
    17fe:	5f                   	pop    rdi
    17ff:	54                   	push   rsp
    1800:	59                   	pop    rcx
    1801:	50                   	push   rax
    1802:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    1806:	73 69                	jae    1871 <__FRAME_END__+0x1065>
    1808:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    180a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    180f:	74 00                	je     1811 <__FRAME_END__+0x1005>
    1811:	5f                   	pop    rdi
    1812:	5f                   	pop    rdi
    1813:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    1816:	65 5f                	gs pop rdi
    1818:	6d                   	ins    DWORD PTR es:[rdi],dx
    1819:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    181a:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    181d:	5f                   	pop    rdi
    181e:	73 6d                	jae    188d <__FRAME_END__+0x1081>
    1820:	61                   	(bad)  
    1821:	6c                   	ins    BYTE PTR es:[rdi],dx
    1822:	6c                   	ins    BYTE PTR es:[rdi],dx
    1823:	5f                   	pop    rdi
    1824:	5f                   	pop    rdi
    1825:	20 31                	and    BYTE PTR [rcx],dh
    1827:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    182a:	55                   	push   rbp
    182b:	53                   	push   rbx
    182c:	45 5f                	rex.RB pop r15
    182e:	49 53                	rex.WB push r11
    1830:	4f                   	rex.WRXB
    1831:	43 39 35 00 5f 5f 46 	rex.XB cmp DWORD PTR [rip+0x465f5f00],esi        # 465f7738 <_end+0x463f6720>
    1838:	4c 54                	rex.WR push rsp
    183a:	36 34 58             	ss xor al,0x58
    183d:	5f                   	pop    rdi
    183e:	48                   	rex.W
    183f:	41 53                	push   r11
    1841:	5f                   	pop    rdi
    1842:	44                   	rex.R
    1843:	45                   	rex.RB
    1844:	4e                   	rex.WRX
    1845:	4f 52                	rex.WRXB push r10
    1847:	4d 5f                	rex.WRB pop r15
    1849:	5f                   	pop    rdi
    184a:	20 31                	and    BYTE PTR [rcx],dh
    184c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    184f:	44                   	rex.R
    1850:	45                   	rex.RB
    1851:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    1854:	5f                   	pop    rdi
    1855:	4d                   	rex.WRB
    1856:	41 58                	pop    r8
    1858:	5f                   	pop    rdi
    1859:	45 58                	rex.RB pop r8
    185b:	50                   	push   rax
    185c:	5f                   	pop    rdi
    185d:	5f                   	pop    rdi
    185e:	20 39                	and    BYTE PTR [rcx],bh
    1860:	37                   	(bad)  
    1861:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1864:	4f                   	rex.WRXB
    1865:	4e                   	rex.WRX
    1866:	42                   	rex.X
    1867:	46 20 32             	rex.RX and BYTE PTR [rdx],r14b
    186a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    186d:	55                   	push   rbp
    186e:	53                   	push   rbx
    186f:	45 5f                	rex.RB pop r15
    1871:	49 53                	rex.WB push r11
    1873:	4f                   	rex.WRXB
    1874:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    1877:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    187a:	64 65 72 72          	fs gs jb 18f0 <__FRAME_END__+0x10e4>
    187e:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1881:	64 65 72 72          	fs gs jb 18f7 <__FRAME_END__+0x10eb>
    1885:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    1888:	74 61                	je     18eb <__FRAME_END__+0x10df>
    188a:	62                   	(bad)  
    188b:	6c                   	ins    BYTE PTR es:[rdi],dx
    188c:	65 5f                	gs pop rdi
    188e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    188f:	66 66 73 65          	data16 data16 jae 18f8 <__FRAME_END__+0x10ec>
    1893:	74 00                	je     1895 <__FRAME_END__+0x1089>
    1895:	5f                   	pop    rdi
    1896:	47 5f                	rex.RXB pop r15
    1898:	49                   	rex.WB
    1899:	4f 5f                	rex.WRXB pop r15
    189b:	49                   	rex.WB
    189c:	4f 5f                	rex.WRXB pop r15
    189e:	46                   	rex.RX
    189f:	49                   	rex.WB
    18a0:	4c                   	rex.WR
    18a1:	45 5f                	rex.RB pop r15
    18a3:	56                   	push   rsi
    18a4:	45 52                	rex.RB push r10
    18a6:	53                   	push   rbx
    18a7:	49                   	rex.WB
    18a8:	4f                   	rex.WRXB
    18a9:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    18ac:	78 32                	js     18e0 <__FRAME_END__+0x10d4>
    18ae:	30 30                	xor    BYTE PTR [rax],dh
    18b0:	30 31                	xor    BYTE PTR [rcx],dh
    18b2:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    18b5:	4f 5f                	rex.WRXB pop r15
    18b7:	54                   	push   rsp
    18b8:	49                   	rex.WB
    18b9:	45                   	rex.RB
    18ba:	44 5f                	rex.R pop rdi
    18bc:	50                   	push   rax
    18bd:	55                   	push   rbp
    18be:	54                   	push   rsp
    18bf:	5f                   	pop    rdi
    18c0:	47                   	rex.RXB
    18c1:	45 54                	rex.RB push r12
    18c3:	20 30                	and    BYTE PTR [rax],dh
    18c5:	78 34                	js     18fb <__FRAME_END__+0x10ef>
    18c7:	30 30                	xor    BYTE PTR [rax],dh
    18c9:	00 4c 5f 74          	add    BYTE PTR [rdi+rbx*2+0x74],cl
    18cd:	6d                   	ins    DWORD PTR es:[rdi],dx
    18ce:	70 6e                	jo     193e <__FRAME_END__+0x1132>
    18d0:	61                   	(bad)  
    18d1:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d2:	20 32                	and    BYTE PTR [rdx],dh
    18d4:	30 00                	xor    BYTE PTR [rax],al
    18d6:	5f                   	pop    rdi
    18d7:	49                   	rex.WB
    18d8:	4f 5f                	rex.WRXB pop r15
    18da:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    18de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18df:	75 70                	jne    1951 <__FRAME_END__+0x1145>
    18e1:	5f                   	pop    rdi
    18e2:	72 65                	jb     1949 <__FRAME_END__+0x113d>
    18e4:	67 69 6f 6e 5f 73 74 	imul   ebp,DWORD PTR [edi+0x6e],0x6174735f
    18eb:	61 
    18ec:	72 74                	jb     1962 <__FRAME_END__+0x1156>
    18ee:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    18f1:	63 74 2c 5f          	movsxd esi,DWORD PTR [rsp+rbp*1+0x5f]
    18f5:	66 70 29             	data16 jo 1921 <__FRAME_END__+0x1115>
    18f8:	20 00                	and    BYTE PTR [rax],al
    18fa:	5f                   	pop    rdi
    18fb:	5f                   	pop    rdi
    18fc:	53                   	push   rbx
    18fd:	54                   	push   rsp
    18fe:	44                   	rex.R
    18ff:	43 5f                	rex.XB pop r15
    1901:	49                   	rex.WB
    1902:	45                   	rex.RB
    1903:	43 5f                	rex.XB pop r15
    1905:	35 35 39 5f 43       	xor    eax,0x435f3935
    190a:	4f                   	rex.WRXB
    190b:	4d 50                	rex.WRB push r8
    190d:	4c                   	rex.WR
    190e:	45 58                	rex.RB pop r8
    1910:	5f                   	pop    rdi
    1911:	5f                   	pop    rdi
    1912:	20 31                	and    BYTE PTR [rcx],dh
    1914:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1917:	47                   	rex.RXB
    1918:	4c                   	rex.WR
    1919:	49                   	rex.WB
    191a:	42                   	rex.X
    191b:	43 5f                	rex.XB pop r15
    191d:	55                   	push   rbp
    191e:	53                   	push   rbx
    191f:	45 5f                	rex.RB pop r15
    1921:	44                   	rex.R
    1922:	45 50                	rex.RB push r8
    1924:	52                   	push   rdx
    1925:	45                   	rex.RB
    1926:	43                   	rex.XB
    1927:	41 54                	push   r12
    1929:	45                   	rex.RB
    192a:	44 5f                	rex.R pop rdi
    192c:	47                   	rex.RXB
    192d:	45 54                	rex.RB push r12
    192f:	53                   	push   rbx
    1930:	20 30                	and    BYTE PTR [rax],dh
    1932:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1935:	4f 5f                	rex.WRXB pop r15
    1937:	48                   	rex.W
    1938:	45 58                	rex.RB pop r8
    193a:	20 30                	and    BYTE PTR [rax],dh
    193c:	31 30                	xor    DWORD PTR [rax],esi
    193e:	30 00                	xor    BYTE PTR [rax],al
    1940:	5f                   	pop    rdi
    1941:	5f                   	pop    rdi
    1942:	46                   	rex.RX
    1943:	4c 54                	rex.WR push rsp
    1945:	36 34 58             	ss xor al,0x58
    1948:	5f                   	pop    rdi
    1949:	4d                   	rex.WRB
    194a:	49                   	rex.WB
    194b:	4e 5f                	rex.WRX pop rdi
    194d:	31 30                	xor    DWORD PTR [rax],esi
    194f:	5f                   	pop    rdi
    1950:	45 58                	rex.RB pop r8
    1952:	50                   	push   rax
    1953:	5f                   	pop    rdi
    1954:	5f                   	pop    rdi
    1955:	20 28                	and    BYTE PTR [rax],ch
    1957:	2d 34 39 33 31       	sub    eax,0x31333934
    195c:	29 00                	sub    DWORD PTR [rax],eax
    195e:	5f                   	pop    rdi
    195f:	5f                   	pop    rdi
    1960:	73 74                	jae    19d6 <__FRAME_END__+0x11ca>
    1962:	75 62                	jne    19c6 <__FRAME_END__+0x11ba>
    1964:	5f                   	pop    rdi
    1965:	70 75                	jo     19dc <__FRAME_END__+0x11d0>
    1967:	74 6d                	je     19d6 <__FRAME_END__+0x11ca>
    1969:	73 67                	jae    19d2 <__FRAME_END__+0x11c6>
    196b:	20 00                	and    BYTE PTR [rax],al
    196d:	5f                   	pop    rdi
    196e:	49                   	rex.WB
    196f:	4f 5f                	rex.WRXB pop r15
    1971:	72 65                	jb     19d8 <__FRAME_END__+0x11cc>
    1973:	61                   	(bad)  
    1974:	64 5f                	fs pop rdi
    1976:	62 61                	(bad)  
    1978:	73 65                	jae    19df <__FRAME_END__+0x11d3>
    197a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    197d:	53                   	push   rbx
    197e:	54                   	push   rsp
    197f:	44                   	rex.R
    1980:	43 5f                	rex.XB pop r15
    1982:	49 53                	rex.WB push r11
    1984:	4f 5f                	rex.WRXB pop r15
    1986:	31 30                	xor    DWORD PTR [rax],esi
    1988:	36 34 36             	ss xor al,0x36
    198b:	5f                   	pop    rdi
    198c:	5f                   	pop    rdi
    198d:	20 32                	and    BYTE PTR [rdx],dh
    198f:	30 31                	xor    BYTE PTR [rcx],dh
    1991:	37                   	(bad)  
    1992:	30 36                	xor    BYTE PTR [rsi],dh
    1994:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1998:	42                   	rex.X
    1999:	45                   	rex.RB
    199a:	47                   	rex.RXB
    199b:	49                   	rex.WB
    199c:	4e 5f                	rex.WRX pop rdi
    199e:	44                   	rex.R
    199f:	45                   	rex.RB
    19a0:	43                   	rex.XB
    19a1:	4c 53                	rex.WR push rbx
    19a3:	20 00                	and    BYTE PTR [rax],al
    19a5:	5f                   	pop    rdi
    19a6:	49                   	rex.WB
    19a7:	4f 5f                	rex.WRXB pop r15
    19a9:	73 74                	jae    1a1f <__FRAME_END__+0x1213>
    19ab:	64 69 6e 20 28 28 5f 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x495f2828
    19b2:	49 
    19b3:	4f 5f                	rex.WRXB pop r15
    19b5:	46                   	rex.RX
    19b6:	49                   	rex.WB
    19b7:	4c                   	rex.WR
    19b8:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    19bb:	28 26                	sub    BYTE PTR [rsi],ah
    19bd:	5f                   	pop    rdi
    19be:	49                   	rex.WB
    19bf:	4f 5f                	rex.WRXB pop r15
    19c1:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    19c4:	5f                   	pop    rdi
    19c5:	73 74                	jae    1a3b <__FRAME_END__+0x122f>
    19c7:	64 69 6e 5f 29 29 00 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x5f002929
    19ce:	5f 
    19cf:	5f                   	pop    rdi
    19d0:	46                   	rex.RX
    19d1:	4c 54                	rex.WR push rsp
    19d3:	31 32                	xor    DWORD PTR [rdx],esi
    19d5:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    19d8:	41 58                	pop    r8
    19da:	5f                   	pop    rdi
    19db:	31 30                	xor    DWORD PTR [rax],esi
    19dd:	5f                   	pop    rdi
    19de:	45 58                	rex.RB pop r8
    19e0:	50                   	push   rax
    19e1:	5f                   	pop    rdi
    19e2:	5f                   	pop    rdi
    19e3:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    19e6:	33 32                	xor    esi,DWORD PTR [rdx]
    19e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19eb:	46                   	rex.RX
    19ec:	4c 54                	rex.WR push rsp
    19ee:	31 32                	xor    DWORD PTR [rdx],esi
    19f0:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    19f3:	49                   	rex.WB
    19f4:	4e 5f                	rex.WRX pop rdi
    19f6:	5f                   	pop    rdi
    19f7:	20 33                	and    BYTE PTR [rbx],dh
    19f9:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    19fc:	32 31                	xor    dh,BYTE PTR [rcx]
    19fe:	30 33                	xor    BYTE PTR [rbx],dh
    1a00:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    1a03:	31 31                	xor    DWORD PTR [rcx],esi
    1a05:	32 30                	xor    dh,BYTE PTR [rax]
    1a07:	39 33                	cmp    DWORD PTR [rbx],esi
    1a09:	35 30 36 32 36       	xor    eax,0x36323630
    1a0e:	32 36                	xor    dh,BYTE PTR [rsi]
    1a10:	37                   	(bad)  
    1a11:	37                   	(bad)  
    1a12:	38 31                	cmp    BYTE PTR [rcx],dh
    1a14:	37                   	(bad)  
    1a15:	33 32                	xor    esi,DWORD PTR [rdx]
    1a17:	31 37                	xor    DWORD PTR [rdi],esi
    1a19:	35 32 36 30 65       	xor    eax,0x65303632
    1a1e:	2d 34 39 33 32       	sub    eax,0x32333934
    1a23:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    1a26:	38 00                	cmp    BYTE PTR [rax],al
    1a28:	5f                   	pop    rdi
    1a29:	5f                   	pop    rdi
    1a2a:	53                   	push   rbx
    1a2b:	55                   	push   rbp
    1a2c:	53                   	push   rbx
    1a2d:	45                   	rex.RB
    1a2e:	43                   	rex.XB
    1a2f:	4f                   	rex.WRXB
    1a30:	4e                   	rex.WRX
    1a31:	44 53                	rex.R push rbx
    1a33:	5f                   	pop    rdi
    1a34:	54                   	push   rsp
    1a35:	5f                   	pop    rdi
    1a36:	54                   	push   rsp
    1a37:	59                   	pop    rcx
    1a38:	50                   	push   rax
    1a39:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1a3d:	53                   	push   rbx
    1a3e:	59                   	pop    rcx
    1a3f:	53                   	push   rbx
    1a40:	43                   	rex.XB
    1a41:	41                   	rex.B
    1a42:	4c                   	rex.WR
    1a43:	4c 5f                	rex.WR pop rdi
    1a45:	53                   	push   rbx
    1a46:	4c                   	rex.WR
    1a47:	4f                   	rex.WRXB
    1a48:	4e                   	rex.WRX
    1a49:	47 5f                	rex.RXB pop r15
    1a4b:	54                   	push   rsp
    1a4c:	59                   	pop    rcx
    1a4d:	50                   	push   rax
    1a4e:	45 00 53 45          	add    BYTE PTR [r11+0x45],r10b
    1a52:	45                   	rex.RB
    1a53:	4b 5f                	rex.WXB pop r15
    1a55:	45                   	rex.RB
    1a56:	4e                   	rex.WRX
    1a57:	44 20 32             	and    BYTE PTR [rdx],r14b
    1a5a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a5d:	49                   	rex.WB
    1a5e:	4e 54                	rex.WRX push rsp
    1a60:	5f                   	pop    rdi
    1a61:	46                   	rex.RX
    1a62:	41 53                	push   r11
    1a64:	54                   	push   rsp
    1a65:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    1a68:	49                   	rex.WB
    1a69:	44 54                	rex.R push rsp
    1a6b:	48 5f                	rex.W pop rdi
    1a6d:	5f                   	pop    rdi
    1a6e:	20 38                	and    BYTE PTR [rax],bh
    1a70:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a73:	46                   	rex.RX
    1a74:	4c 54                	rex.WR push rsp
    1a76:	36 34 5f             	ss xor al,0x5f
    1a79:	4d                   	rex.WRB
    1a7a:	49                   	rex.WB
    1a7b:	4e 5f                	rex.WRX pop rdi
    1a7d:	31 30                	xor    DWORD PTR [rax],esi
    1a7f:	5f                   	pop    rdi
    1a80:	45 58                	rex.RB pop r8
    1a82:	50                   	push   rax
    1a83:	5f                   	pop    rdi
    1a84:	5f                   	pop    rdi
    1a85:	20 28                	and    BYTE PTR [rax],ch
    1a87:	2d 33 30 37 29       	sub    eax,0x29373033
    1a8c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a8f:	73 74                	jae    1b05 <__FRAME_END__+0x12f9>
    1a91:	75 62                	jne    1af5 <__FRAME_END__+0x12e9>
    1a93:	5f                   	pop    rdi
    1a94:	66 64 65 74 61       	data16 fs gs je 1afa <__FRAME_END__+0x12ee>
    1a99:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1a9c:	00 5f 6e             	add    BYTE PTR [rdi+0x6e],bl
    1a9f:	65 78 74             	gs js  1b16 <__FRAME_END__+0x130a>
    1aa2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1aa5:	44                   	rex.R
    1aa6:	42                   	rex.X
    1aa7:	4c 5f                	rex.WR pop rdi
    1aa9:	4d                   	rex.WRB
    1aaa:	41 58                	pop    r8
    1aac:	5f                   	pop    rdi
    1aad:	5f                   	pop    rdi
    1aae:	20 28                	and    BYTE PTR [rax],ch
    1ab0:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    1ab4:	62                   	(bad)  
    1ab5:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ab6:	65 29 31             	sub    DWORD PTR gs:[rcx],esi
    1ab9:	2e 37                	cs (bad) 
    1abb:	39 37                	cmp    DWORD PTR [rdi],esi
    1abd:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    1ac0:	31 33                	xor    DWORD PTR [rbx],esi
    1ac2:	34 38                	xor    al,0x38
    1ac4:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    1ac7:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31384b04 <_end+0x31183aec>
    1acd:	34 35                	xor    al,0x35
    1acf:	32 37                	xor    dh,BYTE PTR [rdi]
    1ad1:	34 32                	xor    al,0x32
    1ad3:	33 37                	xor    esi,DWORD PTR [rdi]
    1ad5:	33 31                	xor    esi,DWORD PTR [rcx]
    1ad7:	37                   	(bad)  
    1ad8:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    1adb:	35 37 65 2b 33       	xor    eax,0x332b6537
    1ae0:	30 38                	xor    BYTE PTR [rax],bh
    1ae2:	4c 29 00             	sub    QWORD PTR [rax],r8
    1ae5:	5f                   	pop    rdi
    1ae6:	44                   	rex.R
    1ae7:	45                   	rex.RB
    1ae8:	46                   	rex.RX
    1ae9:	41 55                	push   r13
    1aeb:	4c 54                	rex.WR push rsp
    1aed:	5f                   	pop    rdi
    1aee:	53                   	push   rbx
    1aef:	4f 55                	rex.WRXB push r13
    1af1:	52                   	push   rdx
    1af2:	43                   	rex.XB
    1af3:	45 20 31             	and    BYTE PTR [r9],r14b
    1af6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1af9:	52                   	push   rdx
    1afa:	4c                   	rex.WR
    1afb:	49                   	rex.WB
    1afc:	4d 5f                	rex.WRB pop r15
    1afe:	54                   	push   rsp
    1aff:	5f                   	pop    rdi
    1b00:	4d                   	rex.WRB
    1b01:	41 54                	push   r12
    1b03:	43                   	rex.XB
    1b04:	48                   	rex.W
    1b05:	45 53                	rex.RB push r11
    1b07:	5f                   	pop    rdi
    1b08:	52                   	push   rdx
    1b09:	4c                   	rex.WR
    1b0a:	49                   	rex.WB
    1b0b:	4d                   	rex.WRB
    1b0c:	36 34 5f             	ss xor al,0x5f
    1b0f:	54                   	push   rsp
    1b10:	20 31                	and    BYTE PTR [rcx],dh
    1b12:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1b15:	61                   	(bad)  
    1b16:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b17:	64 36 34 5f          	fs ss xor al,0x5f
    1b1b:	5f                   	pop    rdi
    1b1c:	20 31                	and    BYTE PTR [rcx],dh
    1b1e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1b21:	5f                   	pop    rdi
    1b22:	5f                   	pop    rdi
    1b23:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b24:	62 73 74 61 74       	(bad)  {k1}
    1b29:	65 5f                	gs pop rdi
    1b2b:	74 5f                	je     1b8c <__FRAME_END__+0x1380>
    1b2d:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    1b34:	20 
    1b35:	31 00                	xor    DWORD PTR [rax],eax
    1b37:	5f                   	pop    rdi
    1b38:	49                   	rex.WB
    1b39:	4f 5f                	rex.WRXB pop r15
    1b3b:	44                   	rex.R
    1b3c:	45                   	rex.RB
    1b3d:	4c                   	rex.WR
    1b3e:	45 54                	rex.RB push r12
    1b40:	45 5f                	rex.RB pop r15
    1b42:	44                   	rex.R
    1b43:	4f                   	rex.WRXB
    1b44:	4e 54                	rex.WRX push rsp
    1b46:	5f                   	pop    rdi
    1b47:	43                   	rex.XB
    1b48:	4c                   	rex.WR
    1b49:	4f 53                	rex.WRXB push r11
    1b4b:	45 20 30             	and    BYTE PTR [r8],r14b
    1b4e:	78 34                	js     1b84 <__FRAME_END__+0x1378>
    1b50:	30 00                	xor    BYTE PTR [rax],al
    1b52:	5f                   	pop    rdi
    1b53:	5f                   	pop    rdi
    1b54:	46                   	rex.RX
    1b55:	4c 54                	rex.WR push rsp
    1b57:	33 32                	xor    esi,DWORD PTR [rdx]
    1b59:	5f                   	pop    rdi
    1b5a:	44                   	rex.R
    1b5b:	45                   	rex.RB
    1b5c:	43                   	rex.XB
    1b5d:	49                   	rex.WB
    1b5e:	4d                   	rex.WRB
    1b5f:	41                   	rex.B
    1b60:	4c 5f                	rex.WR pop rdi
    1b62:	44                   	rex.R
    1b63:	49                   	rex.WB
    1b64:	47 5f                	rex.RXB pop r15
    1b66:	5f                   	pop    rdi
    1b67:	20 39                	and    BYTE PTR [rcx],bh
    1b69:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1b6c:	46                   	rex.RX
    1b6d:	4c 54                	rex.WR push rsp
    1b6f:	31 32                	xor    DWORD PTR [rdx],esi
    1b71:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    1b74:	49                   	rex.WB
    1b75:	47 5f                	rex.RXB pop r15
    1b77:	5f                   	pop    rdi
    1b78:	20 33                	and    BYTE PTR [rbx],dh
    1b7a:	33 00                	xor    eax,DWORD PTR [rax]
    1b7c:	5f                   	pop    rdi
    1b7d:	5f                   	pop    rdi
    1b7e:	55                   	push   rbp
    1b7f:	49                   	rex.WB
    1b80:	4e 54                	rex.WRX push rsp
    1b82:	31 36                	xor    DWORD PTR [rsi],esi
    1b84:	5f                   	pop    rdi
    1b85:	54                   	push   rsp
    1b86:	59                   	pop    rcx
    1b87:	50                   	push   rax
    1b88:	45 5f                	rex.RB pop r15
    1b8a:	5f                   	pop    rdi
    1b8b:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1b8e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b8f:	72 74                	jb     1c05 <__FRAME_END__+0x13f9>
    1b91:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1b94:	73 69                	jae    1bff <__FRAME_END__+0x13f3>
    1b96:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1b98:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1b9d:	74 00                	je     1b9f <__FRAME_END__+0x1393>
    1b9f:	5f                   	pop    rdi
    1ba0:	5f                   	pop    rdi
    1ba1:	48                   	rex.W
    1ba2:	41 56                	push   r14
    1ba4:	45 5f                	rex.RB pop r15
    1ba6:	43                   	rex.XB
    1ba7:	4f                   	rex.WRXB
    1ba8:	4c 55                	rex.WR push rbp
    1baa:	4d                   	rex.WRB
    1bab:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    1bae:	5f                   	pop    rdi
    1baf:	4f                   	rex.WRXB
    1bb0:	4c                   	rex.WR
    1bb1:	44 5f                	rex.R pop rdi
    1bb3:	53                   	push   rbx
    1bb4:	54                   	push   rsp
    1bb5:	44                   	rex.R
    1bb6:	49                   	rex.WB
    1bb7:	4f 5f                	rex.WRXB pop r15
    1bb9:	4d                   	rex.WRB
    1bba:	41                   	rex.B
    1bbb:	47                   	rex.RXB
    1bbc:	49                   	rex.WB
    1bbd:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    1bc0:	78 46                	js     1c08 <__FRAME_END__+0x13fc>
    1bc2:	41                   	rex.B
    1bc3:	42                   	rex.X
    1bc4:	43 30 30             	rex.XB xor BYTE PTR [r8],sil
    1bc7:	30 30                	xor    BYTE PTR [rax],dh
    1bc9:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1bcc:	4f 53                	rex.WRXB push r11
    1bce:	5f                   	pop    rdi
    1bcf:	4e                   	rex.WRX
    1bd0:	4f                   	rex.WRXB
    1bd1:	43 52                	rex.XB push r10
    1bd3:	45                   	rex.RB
    1bd4:	41 54                	push   r12
    1bd6:	45 20 33             	and    BYTE PTR [r11],r14b
    1bd9:	32 00                	xor    al,BYTE PTR [rax]
    1bdb:	5f                   	pop    rdi
    1bdc:	5f                   	pop    rdi
    1bdd:	57                   	push   rdi
    1bde:	43                   	rex.XB
    1bdf:	48                   	rex.W
    1be0:	41 52                	push   r10
    1be2:	5f                   	pop    rdi
    1be3:	57                   	push   rdi
    1be4:	49                   	rex.WB
    1be5:	44 54                	rex.R push rsp
    1be7:	48 5f                	rex.W pop rdi
    1be9:	5f                   	pop    rdi
    1bea:	20 33                	and    BYTE PTR [rbx],dh
    1bec:	32 00                	xor    al,BYTE PTR [rax]
    1bee:	5f                   	pop    rdi
    1bef:	5f                   	pop    rdi
    1bf0:	47                   	rex.RXB
    1bf1:	43                   	rex.XB
    1bf2:	43 5f                	rex.XB pop r15
    1bf4:	41 54                	push   r12
    1bf6:	4f                   	rex.WRXB
    1bf7:	4d                   	rex.WRB
    1bf8:	49                   	rex.WB
    1bf9:	43 5f                	rex.XB pop r15
    1bfb:	43                   	rex.XB
    1bfc:	48                   	rex.W
    1bfd:	41 52                	push   r10
    1bff:	5f                   	pop    rdi
    1c00:	4c                   	rex.WR
    1c01:	4f                   	rex.WRXB
    1c02:	43                   	rex.XB
    1c03:	4b 5f                	rex.WXB pop r15
    1c05:	46 52                	rex.RX push rdx
    1c07:	45                   	rex.RB
    1c08:	45 20 32             	and    BYTE PTR [r10],r14b
    1c0b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1c0e:	4f 5f                	rex.WRXB pop r15
    1c10:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c11:	61                   	(bad)  
    1c12:	72 6b                	jb     1c7f <__FRAME_END__+0x1473>
    1c14:	65 72 00             	gs jb  1c17 <__FRAME_END__+0x140b>
    1c17:	5f                   	pop    rdi
    1c18:	5f                   	pop    rdi
    1c19:	42                   	rex.X
    1c1a:	49                   	rex.WB
    1c1b:	47                   	rex.RXB
    1c1c:	47                   	rex.RXB
    1c1d:	45 53                	rex.RB push r11
    1c1f:	54                   	push   rsp
    1c20:	5f                   	pop    rdi
    1c21:	41                   	rex.B
    1c22:	4c                   	rex.WR
    1c23:	49                   	rex.WB
    1c24:	47                   	rex.RXB
    1c25:	4e                   	rex.WRX
    1c26:	4d                   	rex.WRB
    1c27:	45                   	rex.RB
    1c28:	4e 54                	rex.WRX push rsp
    1c2a:	5f                   	pop    rdi
    1c2b:	5f                   	pop    rdi
    1c2c:	20 31                	and    BYTE PTR [rcx],dh
    1c2e:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1c32:	4c                   	rex.WR
    1c33:	4f                   	rex.WRXB
    1c34:	4e                   	rex.WRX
    1c35:	47 5f                	rex.RXB pop r15
    1c37:	4c                   	rex.WR
    1c38:	4f                   	rex.WRXB
    1c39:	4e                   	rex.WRX
    1c3a:	47 5f                	rex.RXB pop r15
    1c3c:	4d                   	rex.WRB
    1c3d:	41 58                	pop    r8
    1c3f:	5f                   	pop    rdi
    1c40:	5f                   	pop    rdi
    1c41:	20 30                	and    BYTE PTR [rax],dh
    1c43:	78 37                	js     1c7c <__FRAME_END__+0x1470>
    1c45:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1c4c:	66 66 66 66 66 66 66 
    1c53:	66 4c                	data16 rex.WR
    1c55:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1c59:	55                   	push   rbp
    1c5a:	4c                   	rex.WR
    1c5b:	4f                   	rex.WRXB
    1c5c:	4e                   	rex.WRX
    1c5d:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    1c60:	5f                   	pop    rdi
    1c61:	54                   	push   rsp
    1c62:	59                   	pop    rcx
    1c63:	50                   	push   rax
    1c64:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    1c68:	73 69                	jae    1cd3 <__FRAME_END__+0x14c7>
    1c6a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c6c:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c71:	74 00                	je     1c73 <__FRAME_END__+0x1467>
    1c73:	5f                   	pop    rdi
    1c74:	5f                   	pop    rdi
    1c75:	55                   	push   rbp
    1c76:	49                   	rex.WB
    1c77:	4e 54                	rex.WRX push rsp
    1c79:	5f                   	pop    rdi
    1c7a:	4c                   	rex.WR
    1c7b:	45                   	rex.RB
    1c7c:	41 53                	push   r11
    1c7e:	54                   	push   rsp
    1c7f:	31 36                	xor    DWORD PTR [rsi],esi
    1c81:	5f                   	pop    rdi
    1c82:	54                   	push   rsp
    1c83:	59                   	pop    rcx
    1c84:	50                   	push   rax
    1c85:	45 5f                	rex.RB pop r15
    1c87:	5f                   	pop    rdi
    1c88:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1c8b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c8c:	72 74                	jb     1d02 <__FRAME_END__+0x14f6>
    1c8e:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1c91:	73 69                	jae    1cfc <__FRAME_END__+0x14f0>
    1c93:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c95:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c9a:	74 00                	je     1c9c <__FRAME_END__+0x1490>
    1c9c:	5f                   	pop    rdi
    1c9d:	5f                   	pop    rdi
    1c9e:	46                   	rex.RX
    1c9f:	4c 54                	rex.WR push rsp
    1ca1:	5f                   	pop    rdi
    1ca2:	4d                   	rex.WRB
    1ca3:	41 58                	pop    r8
    1ca5:	5f                   	pop    rdi
    1ca6:	31 30                	xor    DWORD PTR [rax],esi
    1ca8:	5f                   	pop    rdi
    1ca9:	45 58                	rex.RB pop r8
    1cab:	50                   	push   rax
    1cac:	5f                   	pop    rdi
    1cad:	5f                   	pop    rdi
    1cae:	20 33                	and    BYTE PTR [rbx],dh
    1cb0:	38 00                	cmp    BYTE PTR [rax],al
    1cb2:	5f                   	pop    rdi
    1cb3:	49                   	rex.WB
    1cb4:	4f 5f                	rex.WRXB pop r15
    1cb6:	53                   	push   rbx
    1cb7:	4b                   	rex.WXB
    1cb8:	49 50                	rex.WB push r8
    1cba:	57                   	push   rdi
    1cbb:	53                   	push   rbx
    1cbc:	20 30                	and    BYTE PTR [rax],dh
    1cbe:	31 00                	xor    DWORD PTR [rax],eax
    1cc0:	5f                   	pop    rdi
    1cc1:	5f                   	pop    rdi
    1cc2:	46                   	rex.RX
    1cc3:	4c 54                	rex.WR push rsp
    1cc5:	33 32                	xor    esi,DWORD PTR [rdx]
    1cc7:	58                   	pop    rax
    1cc8:	5f                   	pop    rdi
    1cc9:	45 50                	rex.RB push r8
    1ccb:	53                   	push   rbx
    1ccc:	49                   	rex.WB
    1ccd:	4c                   	rex.WR
    1cce:	4f                   	rex.WRXB
    1ccf:	4e 5f                	rex.WRX pop rdi
    1cd1:	5f                   	pop    rdi
    1cd2:	20 32                	and    BYTE PTR [rdx],dh
    1cd4:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    1cd7:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    1cda:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    1cde:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33315014 <_end+0x33113ffc>
    1ce4:	30 38                	xor    BYTE PTR [rax],bh
    1ce6:	30 38                	xor    BYTE PTR [rax],bh
    1ce8:	34 37                	xor    al,0x37
    1cea:	32 36                	xor    dh,BYTE PTR [rsi]
    1cec:	33 33                	xor    esi,DWORD PTR [rbx]
    1cee:	33 36                	xor    esi,DWORD PTR [rsi]
    1cf0:	31 38                	xor    DWORD PTR [rax],edi
    1cf2:	31 36                	xor    DWORD PTR [rsi],esi
    1cf4:	34 30                	xor    al,0x30
    1cf6:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    1cfa:	31 36                	xor    DWORD PTR [rsi],esi
    1cfc:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    1cff:	78 00                	js     1d01 <__FRAME_END__+0x14f5>
    1d01:	4e 55                	rex.WRX push rbp
    1d03:	4c                   	rex.WR
    1d04:	4c 20 28             	rex.WR and BYTE PTR [rax],r13b
    1d07:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    1d0a:	69 64 20 2a 29 30 29 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x293029
    1d11:	00 
    1d12:	61                   	(bad)  
    1d13:	72 67                	jb     1d7c <__FRAME_END__+0x1570>
    1d15:	76 00                	jbe    1d17 <__FRAME_END__+0x150b>
    1d17:	5f                   	pop    rdi
    1d18:	5f                   	pop    rdi
    1d19:	55                   	push   rbp
    1d1a:	53                   	push   rbx
    1d1b:	45 5f                	rex.RB pop r15
    1d1d:	50                   	push   rax
    1d1e:	4f 53                	rex.WRXB push r11
    1d20:	49 58                	rex.WB pop r8
    1d22:	5f                   	pop    rdi
    1d23:	49                   	rex.WB
    1d24:	4d 50                	rex.WRB push r8
    1d26:	4c                   	rex.WR
    1d27:	49                   	rex.WB
    1d28:	43                   	rex.XB
    1d29:	49 54                	rex.WB push r12
    1d2b:	4c 59                	rex.WR pop rcx
    1d2d:	20 31                	and    BYTE PTR [rcx],dh
    1d2f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d32:	4f 5f                	rex.WRXB pop r15
    1d34:	66 65 6f             	outs   dx,WORD PTR gs:[rsi]
    1d37:	66 5f                	pop    di
    1d39:	75 6e                	jne    1da9 <__FRAME_END__+0x159d>
    1d3b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d3d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1d40:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
    1d44:	66 70 29             	data16 jo 1d70 <__FRAME_END__+0x1564>
    1d47:	20 28                	and    BYTE PTR [rax],ch
    1d49:	28 28                	sub    BYTE PTR [rax],ch
    1d4b:	5f                   	pop    rdi
    1d4c:	5f                   	pop    rdi
    1d4d:	66 70 29             	data16 jo 1d79 <__FRAME_END__+0x156d>
    1d50:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    1d55:	61                   	(bad)  
    1d56:	67 73 20             	addr32 jae 1d79 <__FRAME_END__+0x156d>
    1d59:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
    1d5d:	4f 5f                	rex.WRXB pop r15
    1d5f:	45                   	rex.RB
    1d60:	4f                   	rex.WRXB
    1d61:	46 5f                	rex.RX pop rdi
    1d63:	53                   	push   rbx
    1d64:	45                   	rex.RB
    1d65:	45                   	rex.RB
    1d66:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
    1d69:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 294d8f <_end+0x93d77>
    1d6f:	5f                   	pop    rdi
    1d70:	5f                   	pop    rdi
    1d71:	4e                   	rex.WRX
    1d72:	4f 5f                	rex.WRXB pop r15
    1d74:	49                   	rex.WB
    1d75:	4e                   	rex.WRX
    1d76:	4c                   	rex.WR
    1d77:	49                   	rex.WB
    1d78:	4e                   	rex.WRX
    1d79:	45 5f                	rex.RB pop r15
    1d7b:	5f                   	pop    rdi
    1d7c:	20 31                	and    BYTE PTR [rcx],dh
    1d7e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d81:	4f 5f                	rex.WRXB pop r15
    1d83:	73 74                	jae    1df9 <__FRAME_END__+0x15ed>
    1d85:	64 65 72 72          	fs gs jb 1dfb <__FRAME_END__+0x15ef>
    1d89:	20 28                	and    BYTE PTR [rax],ch
    1d8b:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    1d8e:	4f 5f                	rex.WRXB pop r15
    1d90:	46                   	rex.RX
    1d91:	49                   	rex.WB
    1d92:	4c                   	rex.WR
    1d93:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1d96:	28 26                	sub    BYTE PTR [rsi],ah
    1d98:	5f                   	pop    rdi
    1d99:	49                   	rex.WB
    1d9a:	4f 5f                	rex.WRXB pop r15
    1d9c:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1d9f:	5f                   	pop    rdi
    1da0:	73 74                	jae    1e16 <__FRAME_END__+0x160a>
    1da2:	64 65 72 72          	fs gs jb 1e18 <__FRAME_END__+0x160c>
    1da6:	5f                   	pop    rdi
    1da7:	29 29                	sub    DWORD PTR [rcx],ebp
    1da9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dac:	76 61                	jbe    1e0f <__FRAME_END__+0x1603>
    1dae:	5f                   	pop    rdi
    1daf:	61                   	(bad)  
    1db0:	72 67                	jb     1e19 <__FRAME_END__+0x160d>
    1db2:	5f                   	pop    rdi
    1db3:	70 61                	jo     1e16 <__FRAME_END__+0x160a>
    1db5:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    1db8:	29 20                	sub    DWORD PTR [rax],esp
    1dba:	5f                   	pop    rdi
    1dbb:	5f                   	pop    rdi
    1dbc:	62                   	(bad)  
    1dbd:	75 69                	jne    1e28 <__FRAME_END__+0x161c>
    1dbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dc0:	74 69                	je     1e2b <__FRAME_END__+0x161f>
    1dc2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1dc3:	5f                   	pop    rdi
    1dc4:	76 61                	jbe    1e27 <__FRAME_END__+0x161b>
    1dc6:	5f                   	pop    rdi
    1dc7:	61                   	(bad)  
    1dc8:	72 67                	jb     1e31 <__FRAME_END__+0x1625>
    1dca:	5f                   	pop    rdi
    1dcb:	70 61                	jo     1e2e <__FRAME_END__+0x1622>
    1dcd:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    1dd0:	28 29                	sub    BYTE PTR [rcx],ch
    1dd2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dd5:	46                   	rex.RX
    1dd6:	4c 54                	rex.WR push rsp
    1dd8:	5f                   	pop    rdi
    1dd9:	4d                   	rex.WRB
    1dda:	41                   	rex.B
    1ddb:	4e 54                	rex.WRX push rsp
    1ddd:	5f                   	pop    rdi
    1dde:	44                   	rex.R
    1ddf:	49                   	rex.WB
    1de0:	47 5f                	rex.RXB pop r15
    1de2:	5f                   	pop    rdi
    1de3:	20 32                	and    BYTE PTR [rdx],dh
    1de5:	34 00                	xor    al,0x0
    1de7:	5f                   	pop    rdi
    1de8:	5f                   	pop    rdi
    1de9:	44                   	rex.R
    1dea:	41                   	rex.B
    1deb:	44                   	rex.R
    1dec:	44 52                	rex.R push rdx
    1dee:	5f                   	pop    rdi
    1def:	54                   	push   rsp
    1df0:	5f                   	pop    rdi
    1df1:	54                   	push   rsp
    1df2:	59                   	pop    rcx
    1df3:	50                   	push   rax
    1df4:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1df8:	53                   	push   rbx
    1df9:	33 32                	xor    esi,DWORD PTR [rdx]
    1dfb:	5f                   	pop    rdi
    1dfc:	54                   	push   rsp
    1dfd:	59                   	pop    rcx
    1dfe:	50                   	push   rax
    1dff:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1e03:	46                   	rex.RX
    1e04:	4c 54                	rex.WR push rsp
    1e06:	36 34 5f             	ss xor al,0x5f
    1e09:	44                   	rex.R
    1e0a:	45                   	rex.RB
    1e0b:	43                   	rex.XB
    1e0c:	49                   	rex.WB
    1e0d:	4d                   	rex.WRB
    1e0e:	41                   	rex.B
    1e0f:	4c 5f                	rex.WR pop rdi
    1e11:	44                   	rex.R
    1e12:	49                   	rex.WB
    1e13:	47 5f                	rex.RXB pop r15
    1e15:	5f                   	pop    rdi
    1e16:	20 31                	and    BYTE PTR [rcx],dh
    1e18:	37                   	(bad)  
    1e19:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e1c:	47                   	rex.RXB
    1e1d:	43                   	rex.XB
    1e1e:	43 5f                	rex.XB pop r15
    1e20:	48                   	rex.W
    1e21:	41 56                	push   r14
    1e23:	45 5f                	rex.RB pop r15
    1e25:	53                   	push   rbx
    1e26:	59                   	pop    rcx
    1e27:	4e                   	rex.WRX
    1e28:	43 5f                	rex.XB pop r15
    1e2a:	43                   	rex.XB
    1e2b:	4f                   	rex.WRXB
    1e2c:	4d 50                	rex.WRB push r8
    1e2e:	41 52                	push   r10
    1e30:	45 5f                	rex.RB pop r15
    1e32:	41                   	rex.B
    1e33:	4e                   	rex.WRX
    1e34:	44 5f                	rex.R pop rdi
    1e36:	53                   	push   rbx
    1e37:	57                   	push   rdi
    1e38:	41 50                	push   r8
    1e3a:	5f                   	pop    rdi
    1e3b:	34 20                	xor    al,0x20
    1e3d:	31 00                	xor    DWORD PTR [rax],eax
    1e3f:	5f                   	pop    rdi
    1e40:	5f                   	pop    rdi
    1e41:	46                   	rex.RX
    1e42:	4c 54                	rex.WR push rsp
    1e44:	33 32                	xor    esi,DWORD PTR [rdx]
    1e46:	5f                   	pop    rdi
    1e47:	4d                   	rex.WRB
    1e48:	49                   	rex.WB
    1e49:	4e 5f                	rex.WRX pop rdi
    1e4b:	45 58                	rex.RB pop r8
    1e4d:	50                   	push   rax
    1e4e:	5f                   	pop    rdi
    1e4f:	5f                   	pop    rdi
    1e50:	20 28                	and    BYTE PTR [rax],ch
    1e52:	2d 31 32 35 29       	sub    eax,0x29353231
    1e57:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e5a:	53                   	push   rbx
    1e5b:	49 5a                	rex.WB pop r10
    1e5d:	45 5f                	rex.RB pop r15
    1e5f:	54                   	push   rsp
    1e60:	59                   	pop    rcx
    1e61:	50                   	push   rax
    1e62:	45 5f                	rex.RB pop r15
    1e64:	5f                   	pop    rdi
    1e65:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1e69:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1e6d:	73 69                	jae    1ed8 <__FRAME_END__+0x16cc>
    1e6f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1e71:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1e76:	74 00                	je     1e78 <__FRAME_END__+0x166c>
    1e78:	5f                   	pop    rdi
    1e79:	49                   	rex.WB
    1e7a:	4f 5f                	rex.WRXB pop r15
    1e7c:	46                   	rex.RX
    1e7d:	4c                   	rex.WR
    1e7e:	41                   	rex.B
    1e7f:	47 53                	rex.RXB push r11
    1e81:	32 5f 55             	xor    bl,BYTE PTR [rdi+0x55]
    1e84:	53                   	push   rbx
    1e85:	45 52                	rex.RB push r10
    1e87:	5f                   	pop    rdi
    1e88:	57                   	push   rdi
    1e89:	42 55                	rex.X push rbp
    1e8b:	46 20 38             	rex.RX and BYTE PTR [rax],r15b
    1e8e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e91:	4c                   	rex.WR
    1e92:	44                   	rex.R
    1e93:	42                   	rex.X
    1e94:	4c 5f                	rex.WR pop rdi
    1e96:	4d                   	rex.WRB
    1e97:	41 58                	pop    r8
    1e99:	5f                   	pop    rdi
    1e9a:	5f                   	pop    rdi
    1e9b:	20 31                	and    BYTE PTR [rcx],dh
    1e9d:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1ea0:	39 37                	cmp    DWORD PTR [rdi],esi
    1ea2:	33 31                	xor    esi,DWORD PTR [rcx]
    1ea4:	34 39                	xor    al,0x39
    1ea6:	35 33 35 37 32       	xor    eax,0x32373533
    1eab:	33 31                	xor    esi,DWORD PTR [rcx]
    1ead:	37                   	(bad)  
    1eae:	36 35 30 32 31 32    	ss xor eax,0x32313230
    1eb4:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1eb7:	35 33 30 33 30       	xor    eax,0x30333033
    1ebc:	39 37                	cmp    DWORD PTR [rdi],esi
    1ebe:	30 32                	xor    BYTE PTR [rdx],dh
    1ec0:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    1ec3:	34 39                	xor    al,0x39
    1ec5:	33 32                	xor    esi,DWORD PTR [rdx]
    1ec7:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ecb:	44                   	rex.R
    1ecc:	45                   	rex.RB
    1ecd:	43 5f                	rex.XB pop r15
    1ecf:	45 56                	rex.RB push r14
    1ed1:	41                   	rex.B
    1ed2:	4c 5f                	rex.WR pop rdi
    1ed4:	4d                   	rex.WRB
    1ed5:	45 54                	rex.RB push r12
    1ed7:	48                   	rex.W
    1ed8:	4f                   	rex.WRXB
    1ed9:	44 5f                	rex.R pop rdi
    1edb:	5f                   	pop    rdi
    1edc:	20 32                	and    BYTE PTR [rdx],dh
    1ede:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ee1:	46                   	rex.RX
    1ee2:	4c 54                	rex.WR push rsp
    1ee4:	5f                   	pop    rdi
    1ee5:	4d                   	rex.WRB
    1ee6:	41 58                	pop    r8
    1ee8:	5f                   	pop    rdi
    1ee9:	5f                   	pop    rdi
    1eea:	20 33                	and    BYTE PTR [rbx],dh
    1eec:	2e 34 30             	cs xor al,0x30
    1eef:	32 38                	xor    bh,BYTE PTR [rax]
    1ef1:	32 33                	xor    dh,BYTE PTR [rbx]
    1ef3:	34 36                	xor    al,0x36
    1ef5:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1ef8:	35 32 38 38 35       	xor    eax,0x35383832
    1efd:	39 38                	cmp    DWORD PTR [rax],edi
    1eff:	31 31                	xor    DWORD PTR [rcx],esi
    1f01:	37                   	(bad)  
    1f02:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    1f05:	38 33                	cmp    BYTE PTR [rbx],dh
    1f07:	34 38                	xor    al,0x38
    1f09:	34 35                	xor    al,0x35
    1f0b:	31 36                	xor    DWORD PTR [rsi],esi
    1f0d:	39 32                	cmp    DWORD PTR [rdx],esi
    1f0f:	35 65 2b 33 38       	xor    eax,0x38332b65
    1f14:	46 00 5f 49          	rex.RX add BYTE PTR [rdi+0x49],r11b
    1f18:	4f 5f                	rex.WRXB pop r15
    1f1a:	75 69                	jne    1f85 <__FRAME_END__+0x1779>
    1f1c:	64 5f                	fs pop rdi
    1f1e:	74 20                	je     1f40 <__FRAME_END__+0x1734>
    1f20:	5f                   	pop    rdi
    1f21:	5f                   	pop    rdi
    1f22:	75 69                	jne    1f8d <__FRAME_END__+0x1781>
    1f24:	64 5f                	fs pop rdi
    1f26:	74 00                	je     1f28 <__FRAME_END__+0x171c>
    1f28:	5f                   	pop    rdi
    1f29:	5f                   	pop    rdi
    1f2a:	44                   	rex.R
    1f2b:	42                   	rex.X
    1f2c:	4c 5f                	rex.WR pop rdi
    1f2e:	4d                   	rex.WRB
    1f2f:	49                   	rex.WB
    1f30:	4e 5f                	rex.WRX pop rdi
    1f32:	31 30                	xor    DWORD PTR [rax],esi
    1f34:	5f                   	pop    rdi
    1f35:	45 58                	rex.RB pop r8
    1f37:	50                   	push   rax
    1f38:	5f                   	pop    rdi
    1f39:	5f                   	pop    rdi
    1f3a:	20 28                	and    BYTE PTR [rax],ch
    1f3c:	2d 33 30 37 29       	sub    eax,0x29373033
    1f41:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f44:	4f 5f                	rex.WRXB pop r15
    1f46:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1f49:	5f                   	pop    rdi
    1f4a:	73 74                	jae    1fc0 <__FRAME_END__+0x17b4>
    1f4c:	64 65 72 72          	fs gs jb 1fc2 <__FRAME_END__+0x17b6>
    1f50:	5f                   	pop    rdi
    1f51:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f54:	55                   	push   rbp
    1f55:	49                   	rex.WB
    1f56:	4e 54                	rex.WRX push rsp
    1f58:	33 32                	xor    esi,DWORD PTR [rdx]
    1f5a:	5f                   	pop    rdi
    1f5b:	4d                   	rex.WRB
    1f5c:	41 58                	pop    r8
    1f5e:	5f                   	pop    rdi
    1f5f:	5f                   	pop    rdi
    1f60:	20 30                	and    BYTE PTR [rax],dh
    1f62:	78 66                	js     1fca <__FRAME_END__+0x17be>
    1f64:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    1f6b:	55 
    1f6c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f6f:	4f 5f                	rex.WRXB pop r15
    1f71:	4f                   	rex.WRXB
    1f72:	43 54                	rex.XB push r12
    1f74:	20 30                	and    BYTE PTR [rax],dh
    1f76:	34 30                	xor    al,0x30
    1f78:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f7b:	46                   	rex.RX
    1f7c:	4c 54                	rex.WR push rsp
    1f7e:	31 32                	xor    DWORD PTR [rdx],esi
    1f80:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    1f83:	41 53                	push   r11
    1f85:	5f                   	pop    rdi
    1f86:	49                   	rex.WB
    1f87:	4e                   	rex.WRX
    1f88:	46                   	rex.RX
    1f89:	49                   	rex.WB
    1f8a:	4e                   	rex.WRX
    1f8b:	49 54                	rex.WB push r12
    1f8d:	59                   	pop    rcx
    1f8e:	5f                   	pop    rdi
    1f8f:	5f                   	pop    rdi
    1f90:	20 31                	and    BYTE PTR [rcx],dh
    1f92:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    1f95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f96:	64 65 00 5f 49       	fs add BYTE PTR gs:[rdi+0x49],bl
    1f9b:	4f 5f                	rex.WRXB pop r15
    1f9d:	48                   	rex.W
    1f9e:	41 56                	push   r14
    1fa0:	45 5f                	rex.RB pop r15
    1fa2:	53                   	push   rbx
    1fa3:	54                   	push   rsp
    1fa4:	5f                   	pop    rdi
    1fa5:	42                   	rex.X
    1fa6:	4c                   	rex.WR
    1fa7:	4b 53                	rex.WXB push r11
    1fa9:	49 5a                	rex.WB pop r10
    1fab:	45 20 5f 47          	and    BYTE PTR [r15+0x47],r11b
    1faf:	5f                   	pop    rdi
    1fb0:	48                   	rex.W
    1fb1:	41 56                	push   r14
    1fb3:	45 5f                	rex.RB pop r15
    1fb5:	53                   	push   rbx
    1fb6:	54                   	push   rsp
    1fb7:	5f                   	pop    rdi
    1fb8:	42                   	rex.X
    1fb9:	4c                   	rex.WR
    1fba:	4b 53                	rex.WXB push r11
    1fbc:	49 5a                	rex.WB pop r10
    1fbe:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1fc2:	46                   	rex.RX
    1fc3:	4c 54                	rex.WR push rsp
    1fc5:	36 34 5f             	ss xor al,0x5f
    1fc8:	48                   	rex.W
    1fc9:	41 53                	push   r11
    1fcb:	5f                   	pop    rdi
    1fcc:	44                   	rex.R
    1fcd:	45                   	rex.RB
    1fce:	4e                   	rex.WRX
    1fcf:	4f 52                	rex.WRXB push r10
    1fd1:	4d 5f                	rex.WRB pop r15
    1fd3:	5f                   	pop    rdi
    1fd4:	20 31                	and    BYTE PTR [rcx],dh
    1fd6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fd9:	46                   	rex.RX
    1fda:	4c 54                	rex.WR push rsp
    1fdc:	5f                   	pop    rdi
    1fdd:	45 56                	rex.RB push r14
    1fdf:	41                   	rex.B
    1fe0:	4c 5f                	rex.WR pop rdi
    1fe2:	4d                   	rex.WRB
    1fe3:	45 54                	rex.RB push r12
    1fe5:	48                   	rex.W
    1fe6:	4f                   	rex.WRXB
    1fe7:	44 5f                	rex.R pop rdi
    1fe9:	5f                   	pop    rdi
    1fea:	20 30                	and    BYTE PTR [rax],dh
    1fec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fef:	46 53                	rex.RX push rbx
    1ff1:	42                   	rex.X
    1ff2:	4c                   	rex.WR
    1ff3:	4b                   	rex.WXB
    1ff4:	43                   	rex.XB
    1ff5:	4e 54                	rex.WRX push rsp
    1ff7:	5f                   	pop    rdi
    1ff8:	54                   	push   rsp
    1ff9:	5f                   	pop    rdi
    1ffa:	54                   	push   rsp
    1ffb:	59                   	pop    rcx
    1ffc:	50                   	push   rax
    1ffd:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2001:	53                   	push   rbx
    2002:	59                   	pop    rcx
    2003:	53                   	push   rbx
    2004:	43                   	rex.XB
    2005:	41                   	rex.B
    2006:	4c                   	rex.WR
    2007:	4c 5f                	rex.WR pop rdi
    2009:	55                   	push   rbp
    200a:	4c                   	rex.WR
    200b:	4f                   	rex.WRXB
    200c:	4e                   	rex.WRX
    200d:	47 5f                	rex.RXB pop r15
    200f:	54                   	push   rsp
    2010:	59                   	pop    rcx
    2011:	50                   	push   rax
    2012:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2016:	46                   	rex.RX
    2017:	4c 54                	rex.WR push rsp
    2019:	33 32                	xor    esi,DWORD PTR [rdx]
    201b:	58                   	pop    rax
    201c:	5f                   	pop    rdi
    201d:	48                   	rex.W
    201e:	41 53                	push   r11
    2020:	5f                   	pop    rdi
    2021:	44                   	rex.R
    2022:	45                   	rex.RB
    2023:	4e                   	rex.WRX
    2024:	4f 52                	rex.WRXB push r10
    2026:	4d 5f                	rex.WRB pop r15
    2028:	5f                   	pop    rdi
    2029:	20 31                	and    BYTE PTR [rcx],dh
    202b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    202e:	78 38                	js     2068 <__FRAME_END__+0x185c>
    2030:	36 5f                	ss pop rdi
    2032:	36 34 5f             	ss xor al,0x5f
    2035:	5f                   	pop    rdi
    2036:	20 31                	and    BYTE PTR [rcx],dh
    2038:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    203b:	46                   	rex.RX
    203c:	4c 54                	rex.WR push rsp
    203e:	36 34 58             	ss xor al,0x58
    2041:	5f                   	pop    rdi
    2042:	4d                   	rex.WRB
    2043:	41 58                	pop    r8
    2045:	5f                   	pop    rdi
    2046:	45 58                	rex.RB pop r8
    2048:	50                   	push   rax
    2049:	5f                   	pop    rdi
    204a:	5f                   	pop    rdi
    204b:	20 31                	and    BYTE PTR [rcx],dh
    204d:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    2050:	34 00                	xor    al,0x0
    2052:	5f                   	pop    rdi
    2053:	5f                   	pop    rdi
    2054:	56                   	push   rsi
    2055:	45 52                	rex.RB push r10
    2057:	53                   	push   rbx
    2058:	49                   	rex.WB
    2059:	4f                   	rex.WRXB
    205a:	4e 5f                	rex.WRX pop rdi
    205c:	5f                   	pop    rdi
    205d:	20 22                	and    BYTE PTR [rdx],ah
    205f:	37                   	(bad)  
    2060:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
    2063:	30 22                	xor    BYTE PTR [rdx],ah
    2065:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2068:	4f 5f                	rex.WRXB pop r15
    206a:	4c                   	rex.WR
    206b:	49                   	rex.WB
    206c:	4e                   	rex.WRX
    206d:	4b                   	rex.WXB
    206e:	45                   	rex.RB
    206f:	44 20 30             	and    BYTE PTR [rax],r14b
    2072:	78 38                	js     20ac <__FRAME_END__+0x18a0>
    2074:	30 00                	xor    BYTE PTR [rax],al
    2076:	5f                   	pop    rdi
    2077:	5f                   	pop    rdi
    2078:	52                   	push   rdx
    2079:	45                   	rex.RB
    207a:	44                   	rex.R
    207b:	49 52                	rex.WB push r10
    207d:	45                   	rex.RB
    207e:	43 54                	rex.XB push r12
    2080:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
    2083:	6d                   	ins    DWORD PTR es:[rdi],dx
    2084:	65 2c 70             	gs sub al,0x70
    2087:	72 6f                	jb     20f8 <__FRAME_END__+0x18ec>
    2089:	74 6f                	je     20fa <__FRAME_END__+0x18ee>
    208b:	2c 61                	sub    al,0x61
    208d:	6c                   	ins    BYTE PTR es:[rdi],dx
    208e:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    2095:	6d                   	ins    DWORD PTR es:[rdi],dx
    2096:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    209a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    209b:	74 6f                	je     210c <__FRAME_END__+0x1900>
    209d:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    20a0:	61                   	(bad)  
    20a1:	73 6d                	jae    2110 <__FRAME_END__+0x1904>
    20a3:	5f                   	pop    rdi
    20a4:	5f                   	pop    rdi
    20a5:	20 28                	and    BYTE PTR [rax],ch
    20a7:	5f                   	pop    rdi
    20a8:	5f                   	pop    rdi
    20a9:	41 53                	push   r11
    20ab:	4d                   	rex.WRB
    20ac:	4e                   	rex.WRX
    20ad:	41                   	rex.B
    20ae:	4d                   	rex.WRB
    20af:	45 20 28             	and    BYTE PTR [r8],r13b
    20b2:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    20b5:	69 61 73 29 29 00 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f002929
    20bc:	5f                   	pop    rdi
    20bd:	46 53                	rex.RX push rbx
    20bf:	42                   	rex.X
    20c0:	4c                   	rex.WR
    20c1:	4b                   	rex.WXB
    20c2:	43                   	rex.XB
    20c3:	4e 54                	rex.WRX push rsp
    20c5:	36 34 5f             	ss xor al,0x5f
    20c8:	54                   	push   rsp
    20c9:	5f                   	pop    rdi
    20ca:	54                   	push   rsp
    20cb:	59                   	pop    rcx
    20cc:	50                   	push   rax
    20cd:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    20d1:	55                   	push   rbp
    20d2:	51                   	push   rcx
    20d3:	55                   	push   rbp
    20d4:	41                   	rex.B
    20d5:	44 5f                	rex.R pop rdi
    20d7:	54                   	push   rsp
    20d8:	59                   	pop    rcx
    20d9:	50                   	push   rax
    20da:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    20de:	46                   	rex.RX
    20df:	4c 54                	rex.WR push rsp
    20e1:	36 34 58             	ss xor al,0x58
    20e4:	5f                   	pop    rdi
    20e5:	4d                   	rex.WRB
    20e6:	41 58                	pop    r8
    20e8:	5f                   	pop    rdi
    20e9:	5f                   	pop    rdi
    20ea:	20 31                	and    BYTE PTR [rcx],dh
    20ec:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    20ef:	39 37                	cmp    DWORD PTR [rdi],esi
    20f1:	33 31                	xor    esi,DWORD PTR [rcx]
    20f3:	34 39                	xor    al,0x39
    20f5:	35 33 35 37 32       	xor    eax,0x32373533
    20fa:	33 31                	xor    esi,DWORD PTR [rcx]
    20fc:	37                   	(bad)  
    20fd:	36 35 30 32 31 32    	ss xor eax,0x32313230
    2103:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    2106:	35 33 30 33 30       	xor    eax,0x30333033
    210b:	39 37                	cmp    DWORD PTR [rdi],esi
    210d:	30 32                	xor    BYTE PTR [rdx],dh
    210f:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    2112:	34 39                	xor    al,0x39
    2114:	33 32                	xor    esi,DWORD PTR [rdx]
    2116:	46                   	rex.RX
    2117:	36 34 78             	ss xor al,0x78
    211a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    211d:	4f 5f                	rex.WRXB pop r15
    211f:	72 65                	jb     2186 <__FRAME_END__+0x197a>
    2121:	61                   	(bad)  
    2122:	64 5f                	fs pop rdi
    2124:	70 74                	jo     219a <__FRAME_END__+0x198e>
    2126:	72 00                	jb     2128 <__FRAME_END__+0x191c>
    2128:	5f                   	pop    rdi
    2129:	5f                   	pop    rdi
    212a:	53                   	push   rbx
    212b:	49 5a                	rex.WB pop r10
    212d:	45 5f                	rex.RB pop r15
    212f:	54                   	push   rsp
    2130:	20 00                	and    BYTE PTR [rax],al
    2132:	5f                   	pop    rdi
    2133:	5f                   	pop    rdi
    2134:	49                   	rex.WB
    2135:	44 5f                	rex.R pop rdi
    2137:	54                   	push   rsp
    2138:	5f                   	pop    rdi
    2139:	54                   	push   rsp
    213a:	59                   	pop    rcx
    213b:	50                   	push   rax
    213c:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2140:	55                   	push   rbp
    2141:	33 32                	xor    esi,DWORD PTR [rdx]
    2143:	5f                   	pop    rdi
    2144:	54                   	push   rsp
    2145:	59                   	pop    rcx
    2146:	50                   	push   rax
    2147:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    214b:	53                   	push   rbx
    214c:	49 5a                	rex.WB pop r10
    214e:	45 5f                	rex.RB pop r15
    2150:	54                   	push   rsp
    2151:	5f                   	pop    rdi
    2152:	5f                   	pop    rdi
    2153:	20 00                	and    BYTE PTR [rax],al
    2155:	5f                   	pop    rdi
    2156:	49                   	rex.WB
    2157:	4f 5f                	rex.WRXB pop r15
    2159:	66 75 6e             	data16 jne 21ca <__FRAME_END__+0x19be>
    215c:	6c                   	ins    BYTE PTR es:[rdi],dx
    215d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    215e:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    2161:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2168:	29 
    2169:	20 00                	and    BYTE PTR [rax],al
    216b:	5f                   	pop    rdi
    216c:	5f                   	pop    rdi
    216d:	4b                   	rex.WXB
    216e:	45 59                	rex.RB pop r9
    2170:	5f                   	pop    rdi
    2171:	54                   	push   rsp
    2172:	5f                   	pop    rdi
    2173:	54                   	push   rsp
    2174:	59                   	pop    rcx
    2175:	50                   	push   rax
    2176:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    217a:	53                   	push   rbx
    217b:	33 32                	xor    esi,DWORD PTR [rdx]
    217d:	5f                   	pop    rdi
    217e:	54                   	push   rsp
    217f:	59                   	pop    rcx
    2180:	50                   	push   rax
    2181:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2185:	49                   	rex.WB
    2186:	4e 54                	rex.WRX push rsp
    2188:	5f                   	pop    rdi
    2189:	4c                   	rex.WR
    218a:	45                   	rex.RB
    218b:	41 53                	push   r11
    218d:	54                   	push   rsp
    218e:	36 34 5f             	ss xor al,0x5f
    2191:	4d                   	rex.WRB
    2192:	41 58                	pop    r8
    2194:	5f                   	pop    rdi
    2195:	5f                   	pop    rdi
    2196:	20 30                	and    BYTE PTR [rax],dh
    2198:	78 37                	js     21d1 <__FRAME_END__+0x19c5>
    219a:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    21a1:	66 66 66 66 66 66 66 
    21a8:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    21ad:	49                   	rex.WB
    21ae:	4e 54                	rex.WRX push rsp
    21b0:	5f                   	pop    rdi
    21b1:	4c                   	rex.WR
    21b2:	45                   	rex.RB
    21b3:	41 53                	push   r11
    21b5:	54                   	push   rsp
    21b6:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    21b9:	49                   	rex.WB
    21ba:	44 54                	rex.R push rsp
    21bc:	48 5f                	rex.W pop rdi
    21be:	5f                   	pop    rdi
    21bf:	20 38                	and    BYTE PTR [rax],bh
    21c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21c4:	4c                   	rex.WR
    21c5:	44                   	rex.R
    21c6:	42                   	rex.X
    21c7:	4c 5f                	rex.WR pop rdi
    21c9:	52                   	push   rdx
    21ca:	45                   	rex.RB
    21cb:	44                   	rex.R
    21cc:	49 52                	rex.WB push r10
    21ce:	31 5f 4e             	xor    DWORD PTR [rdi+0x4e],ebx
    21d1:	54                   	push   rsp
    21d2:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    21d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    21d7:	65 2c 70             	gs sub al,0x70
    21da:	72 6f                	jb     224b <__FRAME_END__+0x1a3f>
    21dc:	74 6f                	je     224d <__FRAME_END__+0x1a41>
    21de:	2c 61                	sub    al,0x61
    21e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    21e1:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    21e8:	6d                   	ins    DWORD PTR es:[rdi],dx
    21e9:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    21ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21ee:	74 6f                	je     225f <__FRAME_END__+0x1a53>
    21f0:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    21f3:	54                   	push   rsp
    21f4:	48 52                	rex.W push rdx
    21f6:	4f 57                	rex.WRXB push r15
    21f8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21fb:	55                   	push   rbp
    21fc:	49                   	rex.WB
    21fd:	4e 54                	rex.WRX push rsp
    21ff:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2202:	41 58                	pop    r8
    2204:	5f                   	pop    rdi
    2205:	5f                   	pop    rdi
    2206:	20 30                	and    BYTE PTR [rax],dh
    2208:	78 66                	js     2270 <__FRAME_END__+0x1a64>
    220a:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    220e:	4f 5f                	rex.WRXB pop r15
    2210:	46                   	rex.RX
    2211:	4c                   	rex.WR
    2212:	41                   	rex.B
    2213:	47 53                	rex.RXB push r11
    2215:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    2218:	4f 54                	rex.WRXB push r12
    221a:	43                   	rex.XB
    221b:	41                   	rex.B
    221c:	4e                   	rex.WRX
    221d:	43                   	rex.XB
    221e:	45                   	rex.RB
    221f:	4c 20 32             	rex.WR and BYTE PTR [rdx],r14b
    2222:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2225:	61                   	(bad)  
    2226:	6c                   	ins    BYTE PTR es:[rdi],dx
    2227:	77 61                	ja     228a <__FRAME_END__+0x1a7e>
    2229:	79 73                	jns    229e <__FRAME_END__+0x1a92>
    222b:	5f                   	pop    rdi
    222c:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    2233:	5f                   	pop    rdi
    2234:	5f                   	pop    rdi
    2235:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    223c:	5f                   	pop    rdi
    223d:	5f                   	pop    rdi
    223e:	61                   	(bad)  
    223f:	74 74                	je     22b5 <__FRAME_END__+0x1aa9>
    2241:	72 69                	jb     22ac <__FRAME_END__+0x1aa0>
    2243:	62                   	(bad)  
    2244:	75 74                	jne    22ba <__FRAME_END__+0x1aae>
    2246:	65 5f                	gs pop rdi
    2248:	5f                   	pop    rdi
    2249:	20 28                	and    BYTE PTR [rax],ch
    224b:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    224e:	61                   	(bad)  
    224f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2250:	77 61                	ja     22b3 <__FRAME_END__+0x1aa7>
    2252:	79 73                	jns    22c7 <__FRAME_END__+0x1abb>
    2254:	5f                   	pop    rdi
    2255:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    225c:	5f                   	pop    rdi
    225d:	29 29                	sub    DWORD PTR [rcx],ebp
    225f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2262:	55                   	push   rbp
    2263:	49                   	rex.WB
    2264:	4e 54                	rex.WRX push rsp
    2266:	31 36                	xor    DWORD PTR [rsi],esi
    2268:	5f                   	pop    rdi
    2269:	4d                   	rex.WRB
    226a:	41 58                	pop    r8
    226c:	5f                   	pop    rdi
    226d:	5f                   	pop    rdi
    226e:	20 30                	and    BYTE PTR [rax],dh
    2270:	78 66                	js     22d8 <__FRAME_END__+0x1acc>
    2272:	66 66 66 00 5f 49    	data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2278:	4f 5f                	rex.WRXB pop r15
    227a:	4d                   	rex.WRB
    227b:	41                   	rex.B
    227c:	47                   	rex.RXB
    227d:	49                   	rex.WB
    227e:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    2281:	78 46                	js     22c9 <__FRAME_END__+0x1abd>
    2283:	42                   	rex.X
    2284:	41                   	rex.B
    2285:	44 30 30             	xor    BYTE PTR [rax],r14b
    2288:	30 30                	xor    BYTE PTR [rax],dh
    228a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    228d:	47                   	rex.RXB
    228e:	4c                   	rex.WR
    228f:	49                   	rex.WB
    2290:	42                   	rex.X
    2291:	43 5f                	rex.XB pop r15
    2293:	55                   	push   rbp
    2294:	53                   	push   rbx
    2295:	45 28 46 29          	sub    BYTE PTR [r14+0x29],r8b
    2299:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    229c:	47                   	rex.RXB
    229d:	4c                   	rex.WR
    229e:	49                   	rex.WB
    229f:	42                   	rex.X
    22a0:	43 5f                	rex.XB pop r15
    22a2:	55                   	push   rbp
    22a3:	53                   	push   rbx
    22a4:	45 5f                	rex.RB pop r15
    22a6:	20 23                	and    BYTE PTR [rbx],ah
    22a8:	23 20                	and    esp,DWORD PTR [rax]
    22aa:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    22ae:	49                   	rex.WB
    22af:	4e 54                	rex.WRX push rsp
    22b1:	5f                   	pop    rdi
    22b2:	46                   	rex.RX
    22b3:	41 53                	push   r11
    22b5:	54                   	push   rsp
    22b6:	36 34 5f             	ss xor al,0x5f
    22b9:	54                   	push   rsp
    22ba:	59                   	pop    rcx
    22bb:	50                   	push   rax
    22bc:	45 5f                	rex.RB pop r15
    22be:	5f                   	pop    rdi
    22bf:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    22c3:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    22c7:	74 00                	je     22c9 <__FRAME_END__+0x1abd>
    22c9:	73 74                	jae    233f <__FRAME_END__+0x1b33>
    22cb:	64 69 6e 20 73 74 64 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x69647473
    22d2:	69 
    22d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22d4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22d7:	61                   	(bad)  
    22d8:	74 74                	je     234e <__FRAME_END__+0x1b42>
    22da:	72 69                	jb     2345 <__FRAME_END__+0x1b39>
    22dc:	62                   	(bad)  
    22dd:	75 74                	jne    2353 <__FRAME_END__+0x1b47>
    22df:	65 5f                	gs pop rdi
    22e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22e3:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22ea:	5f                   	pop    rdi
    22eb:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    22ee:	61                   	(bad)  
    22ef:	74 74                	je     2365 <__FRAME_END__+0x1b59>
    22f1:	72 69                	jb     235c <__FRAME_END__+0x1b50>
    22f3:	62                   	(bad)  
    22f4:	75 74                	jne    236a <__FRAME_END__+0x1b5e>
    22f6:	65 5f                	gs pop rdi
    22f8:	5f                   	pop    rdi
    22f9:	20 28                	and    BYTE PTR [rax],ch
    22fb:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    22fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2300:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    2307:	5f                   	pop    rdi
    2308:	29 29                	sub    DWORD PTR [rcx],ebp
    230a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    230d:	53                   	push   rbx
    230e:	54                   	push   rsp
    230f:	44                   	rex.R
    2310:	43 5f                	rex.XB pop r15
    2312:	56                   	push   rsi
    2313:	45 52                	rex.RB push r10
    2315:	53                   	push   rbx
    2316:	49                   	rex.WB
    2317:	4f                   	rex.WRXB
    2318:	4e 5f                	rex.WRX pop rdi
    231a:	5f                   	pop    rdi
    231b:	20 32                	and    BYTE PTR [rdx],dh
    231d:	30 31                	xor    BYTE PTR [rcx],dh
    231f:	31 31                	xor    DWORD PTR [rcx],esi
    2321:	32 4c 00 5f          	xor    cl,BYTE PTR [rax+rax*1+0x5f]
    2325:	5f                   	pop    rdi
    2326:	49                   	rex.WB
    2327:	4e 54                	rex.WRX push rsp
    2329:	4d                   	rex.WRB
    232a:	41 58                	pop    r8
    232c:	5f                   	pop    rdi
    232d:	57                   	push   rdi
    232e:	49                   	rex.WB
    232f:	44 54                	rex.R push rsp
    2331:	48 5f                	rex.W pop rdi
    2333:	5f                   	pop    rdi
    2334:	20 36                	and    BYTE PTR [rsi],dh
    2336:	34 00                	xor    al,0x0
    2338:	5f                   	pop    rdi
    2339:	5f                   	pop    rdi
    233a:	44                   	rex.R
    233b:	45                   	rex.RB
    233c:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    233f:	5f                   	pop    rdi
    2340:	4d                   	rex.WRB
    2341:	41 58                	pop    r8
    2343:	5f                   	pop    rdi
    2344:	5f                   	pop    rdi
    2345:	20 39                	and    BYTE PTR [rcx],bh
    2347:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    234a:	39 39                	cmp    DWORD PTR [rcx],edi
    234c:	39 39                	cmp    DWORD PTR [rcx],edi
    234e:	45 39 36             	cmp    DWORD PTR [r14],r14d
    2351:	44                   	rex.R
    2352:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    2356:	47                   	rex.RXB
    2357:	4e 55                	rex.WRX push rbp
    2359:	43 5f                	rex.XB pop r15
    235b:	56                   	push   rsi
    235c:	41 5f                	pop    r15
    235e:	4c                   	rex.WR
    235f:	49 53                	rex.WB push r11
    2361:	54                   	push   rsp
    2362:	20 00                	and    BYTE PTR [rax],al
    2364:	5f                   	pop    rdi
    2365:	5f                   	pop    rdi
    2366:	50                   	push   rax
    2367:	54                   	push   rsp
    2368:	52                   	push   rdx
    2369:	44                   	rex.R
    236a:	49                   	rex.WB
    236b:	46                   	rex.RX
    236c:	46 5f                	rex.RX pop rdi
    236e:	4d                   	rex.WRB
    236f:	41 58                	pop    r8
    2371:	5f                   	pop    rdi
    2372:	5f                   	pop    rdi
    2373:	20 30                	and    BYTE PTR [rax],dh
    2375:	78 37                	js     23ae <__FRAME_END__+0x1ba2>
    2377:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    237e:	66 66 66 66 66 66 66 
    2385:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    238a:	55                   	push   rbp
    238b:	53                   	push   rbx
    238c:	45 5f                	rex.RB pop r15
    238e:	50                   	push   rax
    238f:	4f 53                	rex.WRXB push r11
    2391:	49 58                	rex.WB pop r8
    2393:	31 39                	xor    DWORD PTR [rcx],edi
    2395:	39 33                	cmp    DWORD PTR [rbx],esi
    2397:	30 39                	xor    BYTE PTR [rcx],bh
    2399:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    239c:	49                   	rex.WB
    239d:	4e 54                	rex.WRX push rsp
    239f:	5f                   	pop    rdi
    23a0:	4c                   	rex.WR
    23a1:	45                   	rex.RB
    23a2:	41 53                	push   r11
    23a4:	54                   	push   rsp
    23a5:	31 36                	xor    DWORD PTR [rsi],esi
    23a7:	5f                   	pop    rdi
    23a8:	54                   	push   rsp
    23a9:	59                   	pop    rcx
    23aa:	50                   	push   rax
    23ab:	45 5f                	rex.RB pop r15
    23ad:	5f                   	pop    rdi
    23ae:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    23b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23b2:	72 74                	jb     2428 <__FRAME_END__+0x1c1c>
    23b4:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    23b7:	74 00                	je     23b9 <__FRAME_END__+0x1bad>
    23b9:	5f                   	pop    rdi
    23ba:	5f                   	pop    rdi
    23bb:	46                   	rex.RX
    23bc:	4c 54                	rex.WR push rsp
    23be:	33 32                	xor    esi,DWORD PTR [rdx]
    23c0:	5f                   	pop    rdi
    23c1:	4d                   	rex.WRB
    23c2:	41 58                	pop    r8
    23c4:	5f                   	pop    rdi
    23c5:	45 58                	rex.RB pop r8
    23c7:	50                   	push   rax
    23c8:	5f                   	pop    rdi
    23c9:	5f                   	pop    rdi
    23ca:	20 31                	and    BYTE PTR [rcx],dh
    23cc:	32 38                	xor    bh,BYTE PTR [rax]
    23ce:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23d1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    23d3:	75 5f                	jne    2434 <__FRAME_END__+0x1c28>
    23d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    23d6:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    23dd:	31 00                	xor    DWORD PTR [rax],eax
    23df:	5f                   	pop    rdi
    23e0:	5f                   	pop    rdi
    23e1:	53                   	push   rbx
    23e2:	54                   	push   rsp
    23e3:	44 5f                	rex.R pop rdi
    23e5:	54                   	push   rsp
    23e6:	59                   	pop    rcx
    23e7:	50                   	push   rax
    23e8:	45 20 74 79 70       	and    BYTE PTR [r9+rdi*2+0x70],r14b
    23ed:	65 64 65 66 00 5f 5f 	gs fs data16 add BYTE PTR gs:[rdi+0x5f],bl
    23f4:	4d                   	rex.WRB
    23f5:	4f                   	rex.WRXB
    23f6:	44                   	rex.R
    23f7:	45 5f                	rex.RB pop r15
    23f9:	54                   	push   rsp
    23fa:	5f                   	pop    rdi
    23fb:	54                   	push   rsp
    23fc:	59                   	pop    rcx
    23fd:	50                   	push   rax
    23fe:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2402:	55                   	push   rbp
    2403:	33 32                	xor    esi,DWORD PTR [rdx]
    2405:	5f                   	pop    rdi
    2406:	54                   	push   rsp
    2407:	59                   	pop    rcx
    2408:	50                   	push   rax
    2409:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    240d:	53                   	push   rbx
    240e:	49 5a                	rex.WB pop r10
    2410:	45                   	rex.RB
    2411:	4f                   	rex.WRXB
    2412:	46 5f                	rex.RX pop rdi
    2414:	46                   	rex.RX
    2415:	4c                   	rex.WR
    2416:	4f                   	rex.WRXB
    2417:	41 54                	push   r12
    2419:	31 32                	xor    DWORD PTR [rdx],esi
    241b:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    241e:	20 31                	and    BYTE PTR [rcx],dh
    2420:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    2424:	47                   	rex.RXB
    2425:	4e 55                	rex.WRX push rbp
    2427:	43 5f                	rex.XB pop r15
    2429:	53                   	push   rbx
    242a:	54                   	push   rsp
    242b:	44                   	rex.R
    242c:	43 5f                	rex.XB pop r15
    242e:	49                   	rex.WB
    242f:	4e                   	rex.WRX
    2430:	4c                   	rex.WR
    2431:	49                   	rex.WB
    2432:	4e                   	rex.WRX
    2433:	45 5f                	rex.RB pop r15
    2435:	5f                   	pop    rdi
    2436:	20 31                	and    BYTE PTR [rcx],dh
    2438:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    243b:	44                   	rex.R
    243c:	42                   	rex.X
    243d:	4c 5f                	rex.WR pop rdi
    243f:	44                   	rex.R
    2440:	49                   	rex.WB
    2441:	47 5f                	rex.RXB pop r15
    2443:	5f                   	pop    rdi
    2444:	20 31                	and    BYTE PTR [rcx],dh
    2446:	35 00 5f 5f 47       	xor    eax,0x475f5f00
    244b:	43                   	rex.XB
    244c:	43 5f                	rex.XB pop r15
    244e:	41 54                	push   r12
    2450:	4f                   	rex.WRXB
    2451:	4d                   	rex.WRB
    2452:	49                   	rex.WB
    2453:	43 5f                	rex.XB pop r15
    2455:	43                   	rex.XB
    2456:	48                   	rex.W
    2457:	41 52                	push   r10
    2459:	31 36                	xor    DWORD PTR [rsi],esi
    245b:	5f                   	pop    rdi
    245c:	54                   	push   rsp
    245d:	5f                   	pop    rdi
    245e:	4c                   	rex.WR
    245f:	4f                   	rex.WRXB
    2460:	43                   	rex.XB
    2461:	4b 5f                	rex.WXB pop r15
    2463:	46 52                	rex.RX push rdx
    2465:	45                   	rex.RB
    2466:	45 20 32             	and    BYTE PTR [r10],r14b
    2469:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    246c:	49                   	rex.WB
    246d:	4e 54                	rex.WRX push rsp
    246f:	5f                   	pop    rdi
    2470:	4c                   	rex.WR
    2471:	45                   	rex.RB
    2472:	41 53                	push   r11
    2474:	54                   	push   rsp
    2475:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2478:	41 58                	pop    r8
    247a:	5f                   	pop    rdi
    247b:	5f                   	pop    rdi
    247c:	20 30                	and    BYTE PTR [rax],dh
    247e:	78 37                	js     24b7 <__FRAME_END__+0x1cab>
    2480:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    2484:	53                   	push   rbx
    2485:	31 36                	xor    DWORD PTR [rsi],esi
    2487:	5f                   	pop    rdi
    2488:	54                   	push   rsp
    2489:	59                   	pop    rcx
    248a:	50                   	push   rax
    248b:	45 20 73 68          	and    BYTE PTR [r11+0x68],r14b
    248f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2490:	72 74                	jb     2506 <__FRAME_END__+0x1cfa>
    2492:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    2495:	74 00                	je     2497 <__FRAME_END__+0x1c8b>
    2497:	5f                   	pop    rdi
    2498:	5f                   	pop    rdi
    2499:	4c 50                	rex.WR push rax
    249b:	36 34 5f             	ss xor al,0x5f
    249e:	5f                   	pop    rdi
    249f:	20 31                	and    BYTE PTR [rcx],dh
    24a1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24a4:	53                   	push   rbx
    24a5:	59                   	pop    rcx
    24a6:	53                   	push   rbx
    24a7:	43                   	rex.XB
    24a8:	41                   	rex.B
    24a9:	4c                   	rex.WR
    24aa:	4c 5f                	rex.WR pop rdi
    24ac:	57                   	push   rdi
    24ad:	4f 52                	rex.WRXB push r10
    24af:	44 53                	rex.R push rbx
    24b1:	49 5a                	rex.WB pop r10
    24b3:	45 20 36             	and    BYTE PTR [r14],r14b
    24b6:	34 00                	xor    al,0x0
    24b8:	5f                   	pop    rdi
    24b9:	5f                   	pop    rdi
    24ba:	47                   	rex.RXB
    24bb:	43                   	rex.XB
    24bc:	43 5f                	rex.XB pop r15
    24be:	41 54                	push   r12
    24c0:	4f                   	rex.WRXB
    24c1:	4d                   	rex.WRB
    24c2:	49                   	rex.WB
    24c3:	43 5f                	rex.XB pop r15
    24c5:	4c                   	rex.WR
    24c6:	4f                   	rex.WRXB
    24c7:	4e                   	rex.WRX
    24c8:	47 5f                	rex.RXB pop r15
    24ca:	4c                   	rex.WR
    24cb:	4f                   	rex.WRXB
    24cc:	43                   	rex.XB
    24cd:	4b 5f                	rex.WXB pop r15
    24cf:	46 52                	rex.RX push rdx
    24d1:	45                   	rex.RB
    24d2:	45 20 32             	and    BYTE PTR [r10],r14b
    24d5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24d8:	46                   	rex.RX
    24d9:	4c 54                	rex.WR push rsp
    24db:	33 32                	xor    esi,DWORD PTR [rdx]
    24dd:	58                   	pop    rax
    24de:	5f                   	pop    rdi
    24df:	44                   	rex.R
    24e0:	49                   	rex.WB
    24e1:	47 5f                	rex.RXB pop r15
    24e3:	5f                   	pop    rdi
    24e4:	20 31                	and    BYTE PTR [rcx],dh
    24e6:	35 00 5f 5f 46       	xor    eax,0x465f5f00
    24eb:	4c 54                	rex.WR push rsp
    24ed:	33 32                	xor    esi,DWORD PTR [rdx]
    24ef:	58                   	pop    rax
    24f0:	5f                   	pop    rdi
    24f1:	4d                   	rex.WRB
    24f2:	41                   	rex.B
    24f3:	4e 54                	rex.WRX push rsp
    24f5:	5f                   	pop    rdi
    24f6:	44                   	rex.R
    24f7:	49                   	rex.WB
    24f8:	47 5f                	rex.RXB pop r15
    24fa:	5f                   	pop    rdi
    24fb:	20 35 33 00 5f 49    	and    BYTE PTR [rip+0x495f0033],dh        # 495f2534 <_end+0x493f151c>
    2501:	4f 5f                	rex.WRXB pop r15
    2503:	77 72                	ja     2577 <__FRAME_END__+0x1d6b>
    2505:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    250c:	65 
    250d:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
    2510:	50                   	push   rax
    2511:	36 34 20             	ss xor al,0x20
    2514:	31 00                	xor    DWORD PTR [rax],eax
    2516:	5f                   	pop    rdi
    2517:	46                   	rex.RX
    2518:	45                   	rex.RB
    2519:	41 54                	push   r12
    251b:	55                   	push   rbp
    251c:	52                   	push   rdx
    251d:	45 53                	rex.RB push r11
    251f:	5f                   	pop    rdi
    2520:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    2523:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2526:	46                   	rex.RX
    2527:	4c 54                	rex.WR push rsp
    2529:	33 32                	xor    esi,DWORD PTR [rdx]
    252b:	5f                   	pop    rdi
    252c:	44                   	rex.R
    252d:	49                   	rex.WB
    252e:	47 5f                	rex.RXB pop r15
    2530:	5f                   	pop    rdi
    2531:	20 36                	and    BYTE PTR [rsi],dh
    2533:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2536:	46 53                	rex.RX push rbx
    2538:	57                   	push   rdi
    2539:	4f 52                	rex.WRXB push r10
    253b:	44 5f                	rex.R pop rdi
    253d:	54                   	push   rsp
    253e:	5f                   	pop    rdi
    253f:	54                   	push   rsp
    2540:	59                   	pop    rcx
    2541:	50                   	push   rax
    2542:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2546:	53                   	push   rbx
    2547:	59                   	pop    rcx
    2548:	53                   	push   rbx
    2549:	43                   	rex.XB
    254a:	41                   	rex.B
    254b:	4c                   	rex.WR
    254c:	4c 5f                	rex.WR pop rdi
    254e:	53                   	push   rbx
    254f:	4c                   	rex.WR
    2550:	4f                   	rex.WRXB
    2551:	4e                   	rex.WRX
    2552:	47 5f                	rex.RXB pop r15
    2554:	54                   	push   rsp
    2555:	59                   	pop    rcx
    2556:	50                   	push   rax
    2557:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    255b:	53                   	push   rbx
    255c:	4c                   	rex.WR
    255d:	4f                   	rex.WRXB
    255e:	4e                   	rex.WRX
    255f:	47 57                	rex.RXB push r15
    2561:	4f 52                	rex.WRXB push r10
    2563:	44 5f                	rex.R pop rdi
    2565:	54                   	push   rsp
    2566:	59                   	pop    rcx
    2567:	50                   	push   rax
    2568:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    256d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2571:	74 00                	je     2573 <__FRAME_END__+0x1d67>
    2573:	5f                   	pop    rdi
    2574:	49                   	rex.WB
    2575:	4f 5f                	rex.WRXB pop r15
    2577:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    257a:	5f                   	pop    rdi
    257b:	73 74                	jae    25f1 <__FRAME_END__+0x1de5>
    257d:	64 69 6e 5f 00 5f 5f 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x785f5f00
    2584:	78 
    2585:	38 36                	cmp    BYTE PTR [rsi],dh
    2587:	5f                   	pop    rdi
    2588:	36 34 20             	ss xor al,0x20
    258b:	31 00                	xor    DWORD PTR [rax],eax
    258d:	5f                   	pop    rdi
    258e:	5f                   	pop    rdi
    258f:	46                   	rex.RX
    2590:	4c 54                	rex.WR push rsp
    2592:	36 34 58             	ss xor al,0x58
    2595:	5f                   	pop    rdi
    2596:	4d                   	rex.WRB
    2597:	41 58                	pop    r8
    2599:	5f                   	pop    rdi
    259a:	31 30                	xor    DWORD PTR [rax],esi
    259c:	5f                   	pop    rdi
    259d:	45 58                	rex.RB pop r8
    259f:	50                   	push   rax
    25a0:	5f                   	pop    rdi
    25a1:	5f                   	pop    rdi
    25a2:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    25a5:	33 32                	xor    esi,DWORD PTR [rdx]
    25a7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25aa:	44                   	rex.R
    25ab:	42                   	rex.X
    25ac:	4c 5f                	rex.WR pop rdi
    25ae:	4d                   	rex.WRB
    25af:	49                   	rex.WB
    25b0:	4e 5f                	rex.WRX pop rdi
    25b2:	5f                   	pop    rdi
    25b3:	20 28                	and    BYTE PTR [rax],ch
    25b5:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    25b9:	62                   	(bad)  
    25ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    25bb:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    25be:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    25c1:	35 30 37 33 38       	xor    eax,0x38333730
    25c6:	35 38 35 30 37       	xor    eax,0x37303538
    25cb:	32 30                	xor    dh,BYTE PTR [rax]
    25cd:	31 33                	xor    DWORD PTR [rbx],esi
    25cf:	38 33                	cmp    BYTE PTR [rbx],dh
    25d1:	30 39                	xor    BYTE PTR [rcx],bh
    25d3:	30 32                	xor    BYTE PTR [rdx],dh
    25d5:	33 32                	xor    esi,DWORD PTR [rdx]
    25d7:	37                   	(bad)  
    25d8:	31 37                	xor    DWORD PTR [rdi],esi
    25da:	33 33                	xor    esi,DWORD PTR [rbx]
    25dc:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    25df:	34 30                	xor    al,0x30
    25e1:	36 65 2d 33 30 38 4c 	ss gs sub eax,0x4c383033
    25e8:	29 00                	sub    DWORD PTR [rax],eax
    25ea:	5f                   	pop    rdi
    25eb:	49                   	rex.WB
    25ec:	4f 5f                	rex.WRXB pop r15
    25ee:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    25f1:	5f                   	pop    rdi
    25f2:	73 74                	jae    2668 <__FRAME_END__+0x1e5c>
    25f4:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    25f6:	75 74                	jne    266c <__FRAME_END__+0x1e60>
    25f8:	5f                   	pop    rdi
    25f9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25fc:	55                   	push   rbp
    25fd:	49                   	rex.WB
    25fe:	4e 54                	rex.WRX push rsp
    2600:	5f                   	pop    rdi
    2601:	46                   	rex.RX
    2602:	41 53                	push   r11
    2604:	54                   	push   rsp
    2605:	33 32                	xor    esi,DWORD PTR [rdx]
    2607:	5f                   	pop    rdi
    2608:	4d                   	rex.WRB
    2609:	41 58                	pop    r8
    260b:	5f                   	pop    rdi
    260c:	5f                   	pop    rdi
    260d:	20 30                	and    BYTE PTR [rax],dh
    260f:	78 66                	js     2677 <__FRAME_END__+0x1e6b>
    2611:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2618:	66 66 66 66 66 66 66 
    261f:	66 55                	push   bp
    2621:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2625:	46                   	rex.RX
    2626:	49                   	rex.WB
    2627:	4e                   	rex.WRX
    2628:	49 54                	rex.WB push r12
    262a:	45 5f                	rex.RB pop r15
    262c:	4d                   	rex.WRB
    262d:	41 54                	push   r12
    262f:	48 5f                	rex.W pop rdi
    2631:	4f                   	rex.WRXB
    2632:	4e                   	rex.WRX
    2633:	4c 59                	rex.WR pop rcx
    2635:	5f                   	pop    rdi
    2636:	5f                   	pop    rdi
    2637:	20 30                	and    BYTE PTR [rax],dh
    2639:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    263c:	4f 5f                	rex.WRXB pop r15
    263e:	73 61                	jae    26a1 <__FRAME_END__+0x1e95>
    2640:	76 65                	jbe    26a7 <__FRAME_END__+0x1e9b>
    2642:	5f                   	pop    rdi
    2643:	62 61                	(bad)  
    2645:	73 65                	jae    26ac <__FRAME_END__+0x1ea0>
    2647:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    264a:	55                   	push   rbp
    264b:	31 36                	xor    DWORD PTR [rsi],esi
    264d:	5f                   	pop    rdi
    264e:	54                   	push   rsp
    264f:	59                   	pop    rcx
    2650:	50                   	push   rax
    2651:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    2655:	73 69                	jae    26c0 <__FRAME_END__+0x1eb4>
    2657:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2659:	65 64 20 73 68       	gs and BYTE PTR fs:[rbx+0x68],dh
    265e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    265f:	72 74                	jb     26d5 <__FRAME_END__+0x1ec9>
    2661:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    2664:	74 00                	je     2666 <__FRAME_END__+0x1e5a>
    2666:	45                   	rex.RB
    2667:	4f                   	rex.WRXB
    2668:	46 20 28             	rex.RX and BYTE PTR [rax],r13b
    266b:	2d 31 29 00 5f       	sub    eax,0x5f002931
    2670:	5f                   	pop    rdi
    2671:	46                   	rex.RX
    2672:	4c 54                	rex.WR push rsp
    2674:	36 34 5f             	ss xor al,0x5f
    2677:	4d                   	rex.WRB
    2678:	41 58                	pop    r8
    267a:	5f                   	pop    rdi
    267b:	5f                   	pop    rdi
    267c:	20 31                	and    BYTE PTR [rcx],dh
    267e:	2e 37                	cs (bad) 
    2680:	39 37                	cmp    DWORD PTR [rdi],esi
    2682:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    2685:	31 33                	xor    DWORD PTR [rbx],esi
    2687:	34 38                	xor    al,0x38
    2689:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    268c:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 313856c9 <_end+0x311846b1>
    2692:	34 35                	xor    al,0x35
    2694:	32 37                	xor    dh,BYTE PTR [rdi]
    2696:	34 32                	xor    al,0x32
    2698:	33 37                	xor    esi,DWORD PTR [rdi]
    269a:	33 31                	xor    esi,DWORD PTR [rcx]
    269c:	37                   	(bad)  
    269d:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    26a0:	35 37 65 2b 33       	xor    eax,0x332b6537
    26a5:	30 38                	xor    BYTE PTR [rax],bh
    26a7:	46                   	rex.RX
    26a8:	36 34 00             	ss xor al,0x0
    26ab:	5f                   	pop    rdi
    26ac:	5f                   	pop    rdi
    26ad:	73 69                	jae    2718 <__FRAME_END__+0x1f0c>
    26af:	7a 65                	jp     2716 <__FRAME_END__+0x1f0a>
    26b1:	5f                   	pop    rdi
    26b2:	74 5f                	je     2713 <__FRAME_END__+0x1f07>
    26b4:	5f                   	pop    rdi
    26b5:	20 00                	and    BYTE PTR [rax],al
    26b7:	5f                   	pop    rdi
    26b8:	5f                   	pop    rdi
    26b9:	55                   	push   rbp
    26ba:	49                   	rex.WB
    26bb:	4e 54                	rex.WRX push rsp
    26bd:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    26c0:	59                   	pop    rcx
    26c1:	50                   	push   rax
    26c2:	45 5f                	rex.RB pop r15
    26c4:	5f                   	pop    rdi
    26c5:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    26c8:	73 69                	jae    2733 <__FRAME_END__+0x1f27>
    26ca:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    26cc:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    26d1:	61                   	(bad)  
    26d2:	72 00                	jb     26d4 <__FRAME_END__+0x1ec8>
    26d4:	5f                   	pop    rdi
    26d5:	49                   	rex.WB
    26d6:	4f 5f                	rex.WRXB pop r15
    26d8:	66 69 6c 65 5f 66 6c 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6c66
    26df:	61                   	(bad)  
    26e0:	67 73 20             	addr32 jae 2703 <__FRAME_END__+0x1ef7>
    26e3:	5f                   	pop    rdi
    26e4:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    26e6:	61                   	(bad)  
    26e7:	67 73 00             	addr32 jae 26ea <__FRAME_END__+0x1ede>
    26ea:	5f                   	pop    rdi
    26eb:	5f                   	pop    rdi
    26ec:	55                   	push   rbp
    26ed:	53                   	push   rbx
    26ee:	45 5f                	rex.RB pop r15
    26f0:	58                   	pop    rax
    26f1:	4f 50                	rex.WRXB push r8
    26f3:	45                   	rex.RB
    26f4:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    26f8:	58                   	pop    rax
    26f9:	53                   	push   rbx
    26fa:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    26fe:	49                   	rex.WB
    26ff:	4e 54                	rex.WRX push rsp
    2701:	5f                   	pop    rdi
    2702:	46                   	rex.RX
    2703:	41 53                	push   r11
    2705:	54                   	push   rsp
    2706:	33 32                	xor    esi,DWORD PTR [rdx]
    2708:	5f                   	pop    rdi
    2709:	54                   	push   rsp
    270a:	59                   	pop    rcx
    270b:	50                   	push   rax
    270c:	45 5f                	rex.RB pop r15
    270e:	5f                   	pop    rdi
    270f:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    2713:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2717:	74 00                	je     2719 <__FRAME_END__+0x1f0d>
    2719:	5f                   	pop    rdi
    271a:	49                   	rex.WB
    271b:	4f 53                	rex.WRXB push r11
    271d:	5f                   	pop    rdi
    271e:	49                   	rex.WB
    271f:	4e 50                	rex.WRX push rax
    2721:	55                   	push   rbp
    2722:	54                   	push   rsp
    2723:	20 31                	and    BYTE PTR [rcx],dh
    2725:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2728:	47                   	rex.RXB
    2729:	43                   	rex.XB
    272a:	43 5f                	rex.XB pop r15
    272c:	41 53                	push   r11
    272e:	4d 5f                	rex.WRB pop r15
    2730:	46                   	rex.RX
    2731:	4c                   	rex.WR
    2732:	41                   	rex.B
    2733:	47 5f                	rex.RXB pop r15
    2735:	4f 55                	rex.WRXB push r13
    2737:	54                   	push   rsp
    2738:	50                   	push   rax
    2739:	55                   	push   rbp
    273a:	54                   	push   rsp
    273b:	53                   	push   rbx
    273c:	5f                   	pop    rdi
    273d:	5f                   	pop    rdi
    273e:	20 31                	and    BYTE PTR [rcx],dh
    2740:	00 70 75             	add    BYTE PTR [rax+0x75],dh
    2743:	74 63                	je     27a8 <__FRAME_END__+0x1f9c>
    2745:	28 5f 63             	sub    BYTE PTR [rdi+0x63],bl
    2748:	68 2c 5f 66 70       	push   0x70665f2c
    274d:	29 20                	sub    DWORD PTR [rax],esp
    274f:	5f                   	pop    rdi
    2750:	49                   	rex.WB
    2751:	4f 5f                	rex.WRXB pop r15
    2753:	70 75                	jo     27ca <__FRAME_END__+0x1fbe>
    2755:	74 63                	je     27ba <__FRAME_END__+0x1fae>
    2757:	20 28                	and    BYTE PTR [rax],ch
    2759:	5f                   	pop    rdi
    275a:	63 68 2c             	movsxd ebp,DWORD PTR [rax+0x2c]
    275d:	20 5f 66             	and    BYTE PTR [rdi+0x66],bl
    2760:	70 29                	jo     278b <__FRAME_END__+0x1f7f>
    2762:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2765:	55                   	push   rbp
    2766:	49                   	rex.WB
    2767:	4e 54                	rex.WRX push rsp
    2769:	5f                   	pop    rdi
    276a:	4c                   	rex.WR
    276b:	45                   	rex.RB
    276c:	41 53                	push   r11
    276e:	54                   	push   rsp
    276f:	36 34 5f             	ss xor al,0x5f
    2772:	4d                   	rex.WRB
    2773:	41 58                	pop    r8
    2775:	5f                   	pop    rdi
    2776:	5f                   	pop    rdi
    2777:	20 30                	and    BYTE PTR [rax],dh
    2779:	78 66                	js     27e1 <__FRAME_END__+0x1fd5>
    277b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2782:	66 66 66 66 66 66 66 
    2789:	66 55                	push   bp
    278b:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    278f:	50                   	push   rax
    2790:	4d 54                	rex.WRB push r12
    2792:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2795:	55                   	push   rbp
    2796:	51                   	push   rcx
    2797:	55                   	push   rbp
    2798:	41                   	rex.B
    2799:	44 5f                	rex.R pop rdi
    279b:	54                   	push   rsp
    279c:	59                   	pop    rcx
    279d:	50                   	push   rax
    279e:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    27a2:	73 69                	jae    280d <__FRAME_END__+0x2001>
    27a4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    27a6:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    27ac:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    27b0:	74 00                	je     27b2 <__FRAME_END__+0x1fa6>
    27b2:	5f                   	pop    rdi
    27b3:	5f                   	pop    rdi
    27b4:	45                   	rex.RB
    27b5:	4c                   	rex.WR
    27b6:	46 5f                	rex.RX pop rdi
    27b8:	5f                   	pop    rdi
    27b9:	20 31                	and    BYTE PTR [rcx],dh
    27bb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    27be:	46                   	rex.RX
    27bf:	4c 54                	rex.WR push rsp
    27c1:	33 32                	xor    esi,DWORD PTR [rdx]
    27c3:	58                   	pop    rax
    27c4:	5f                   	pop    rdi
    27c5:	4d                   	rex.WRB
    27c6:	49                   	rex.WB
    27c7:	4e 5f                	rex.WRX pop rdi
    27c9:	5f                   	pop    rdi
    27ca:	20 32                	and    BYTE PTR [rdx],dh
    27cc:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    27cf:	35 30 37 33 38       	xor    eax,0x38333730
    27d4:	35 38 35 30 37       	xor    eax,0x37303538
    27d9:	32 30                	xor    dh,BYTE PTR [rax]
    27db:	31 33                	xor    DWORD PTR [rbx],esi
    27dd:	38 33                	cmp    BYTE PTR [rbx],dh
    27df:	30 39                	xor    BYTE PTR [rcx],bh
    27e1:	30 32                	xor    BYTE PTR [rdx],dh
    27e3:	33 32                	xor    esi,DWORD PTR [rdx]
    27e5:	37                   	(bad)  
    27e6:	31 37                	xor    DWORD PTR [rdi],esi
    27e8:	33 33                	xor    esi,DWORD PTR [rbx]
    27ea:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    27ed:	34 30                	xor    al,0x30
    27ef:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
    27f6:	33 32                	xor    esi,DWORD PTR [rdx]
    27f8:	78 00                	js     27fa <__FRAME_END__+0x1fee>
    27fa:	5f                   	pop    rdi
    27fb:	5f                   	pop    rdi
    27fc:	55                   	push   rbp
    27fd:	49                   	rex.WB
    27fe:	4e 54                	rex.WRX push rsp
    2800:	50                   	push   rax
    2801:	54                   	push   rsp
    2802:	52                   	push   rdx
    2803:	5f                   	pop    rdi
    2804:	54                   	push   rsp
    2805:	59                   	pop    rcx
    2806:	50                   	push   rax
    2807:	45 5f                	rex.RB pop r15
    2809:	5f                   	pop    rdi
    280a:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    280e:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    2812:	73 69                	jae    287d <__FRAME_END__+0x2071>
    2814:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2816:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    281b:	74 00                	je     281d <__FRAME_END__+0x2011>
    281d:	5f                   	pop    rdi
    281e:	5f                   	pop    rdi
    281f:	49                   	rex.WB
    2820:	4e 54                	rex.WRX push rsp
    2822:	31 36                	xor    DWORD PTR [rsi],esi
    2824:	5f                   	pop    rdi
    2825:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2829:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    282c:	5f                   	pop    rdi
    282d:	5f                   	pop    rdi
    282e:	47                   	rex.RXB
    282f:	43                   	rex.XB
    2830:	43 5f                	rex.XB pop r15
    2832:	48                   	rex.W
    2833:	41 56                	push   r14
    2835:	45 5f                	rex.RB pop r15
    2837:	44 57                	rex.R push rdi
    2839:	41 52                	push   r10
    283b:	46 32 5f 43          	rex.RX xor r11b,BYTE PTR [rdi+0x43]
    283f:	46                   	rex.RX
    2840:	49 5f                	rex.WB pop r15
    2842:	41 53                	push   r11
    2844:	4d 20 31             	rex.WRB and BYTE PTR [r9],r14b
    2847:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    284a:	53                   	push   rbx
    284b:	49 5a                	rex.WB pop r10
    284d:	45                   	rex.RB
    284e:	4f                   	rex.WRXB
    284f:	46 5f                	rex.RX pop rdi
    2851:	46                   	rex.RX
    2852:	4c                   	rex.WR
    2853:	4f                   	rex.WRXB
    2854:	41 54                	push   r12
    2856:	5f                   	pop    rdi
    2857:	5f                   	pop    rdi
    2858:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    285b:	5f                   	pop    rdi
    285c:	5f                   	pop    rdi
    285d:	44                   	rex.R
    285e:	45                   	rex.RB
    285f:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2862:	5f                   	pop    rdi
    2863:	53                   	push   rbx
    2864:	55                   	push   rbp
    2865:	42                   	rex.X
    2866:	4e                   	rex.WRX
    2867:	4f 52                	rex.WRXB push r10
    2869:	4d                   	rex.WRB
    286a:	41                   	rex.B
    286b:	4c 5f                	rex.WR pop rdi
    286d:	4d                   	rex.WRB
    286e:	49                   	rex.WB
    286f:	4e 5f                	rex.WRX pop rdi
    2871:	5f                   	pop    rdi
    2872:	20 30                	and    BYTE PTR [rax],dh
    2874:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    2877:	30 30                	xor    BYTE PTR [rax],dh
    2879:	30 31                	xor    BYTE PTR [rcx],dh
    287b:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    2881:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2884:	4f 5f                	rex.WRXB pop r15
    2886:	49 53                	rex.WB push r11
    2888:	5f                   	pop    rdi
    2889:	41 50                	push   r8
    288b:	50                   	push   rax
    288c:	45                   	rex.RB
    288d:	4e                   	rex.WRX
    288e:	44                   	rex.R
    288f:	49                   	rex.WB
    2890:	4e                   	rex.WRX
    2891:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    2894:	78 31                	js     28c7 <__FRAME_END__+0x20bb>
    2896:	30 30                	xor    BYTE PTR [rax],dh
    2898:	30 00                	xor    BYTE PTR [rax],al
    289a:	5f                   	pop    rdi
    289b:	5f                   	pop    rdi
    289c:	46                   	rex.RX
    289d:	4c 54                	rex.WR push rsp
    289f:	36 34 58             	ss xor al,0x58
    28a2:	5f                   	pop    rdi
    28a3:	48                   	rex.W
    28a4:	41 53                	push   r11
    28a6:	5f                   	pop    rdi
    28a7:	51                   	push   rcx
    28a8:	55                   	push   rbp
    28a9:	49                   	rex.WB
    28aa:	45 54                	rex.RB push r12
    28ac:	5f                   	pop    rdi
    28ad:	4e                   	rex.WRX
    28ae:	41                   	rex.B
    28af:	4e 5f                	rex.WRX pop rdi
    28b1:	5f                   	pop    rdi
    28b2:	20 31                	and    BYTE PTR [rcx],dh
    28b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    28b7:	46                   	rex.RX
    28b8:	4c 54                	rex.WR push rsp
    28ba:	5f                   	pop    rdi
    28bb:	48                   	rex.W
    28bc:	41 53                	push   r11
    28be:	5f                   	pop    rdi
    28bf:	49                   	rex.WB
    28c0:	4e                   	rex.WRX
    28c1:	46                   	rex.RX
    28c2:	49                   	rex.WB
    28c3:	4e                   	rex.WRX
    28c4:	49 54                	rex.WB push r12
    28c6:	59                   	pop    rcx
    28c7:	5f                   	pop    rdi
    28c8:	5f                   	pop    rdi
    28c9:	20 31                	and    BYTE PTR [rcx],dh
    28cb:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    28ce:	4f 53                	rex.WRXB push r11
    28d0:	5f                   	pop    rdi
    28d1:	4e                   	rex.WRX
    28d2:	4f 52                	rex.WRXB push r10
    28d4:	45 50                	rex.RB push r8
    28d6:	4c                   	rex.WR
    28d7:	41                   	rex.B
    28d8:	43                   	rex.XB
    28d9:	45 20 36             	and    BYTE PTR [r14],r14b
    28dc:	34 00                	xor    al,0x0
    28de:	5f                   	pop    rdi
    28df:	5f                   	pop    rdi
    28e0:	53                   	push   rbx
    28e1:	54                   	push   rsp
    28e2:	44 5f                	rex.R pop rdi
    28e4:	54                   	push   rsp
    28e5:	59                   	pop    rcx
    28e6:	50                   	push   rax
    28e7:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    28eb:	55                   	push   rbp
    28ec:	53                   	push   rbx
    28ed:	45 5f                	rex.RB pop r15
    28ef:	50                   	push   rax
    28f0:	4f 53                	rex.WRXB push r11
    28f2:	49 58                	rex.WB pop r8
    28f4:	31 39                	xor    DWORD PTR [rcx],edi
    28f6:	39 33                	cmp    DWORD PTR [rbx],esi
    28f8:	30 39                	xor    BYTE PTR [rcx],bh
    28fa:	20 31                	and    BYTE PTR [rcx],dh
    28fc:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    28ff:	4f 5f                	rex.WRXB pop r15
    2901:	73 69                	jae    296c <__FRAME_END__+0x2160>
    2903:	7a 65                	jp     296a <__FRAME_END__+0x215e>
    2905:	5f                   	pop    rdi
    2906:	74 20                	je     2928 <__FRAME_END__+0x211c>
    2908:	73 69                	jae    2973 <__FRAME_END__+0x2167>
    290a:	7a 65                	jp     2971 <__FRAME_END__+0x2165>
    290c:	5f                   	pop    rdi
    290d:	74 00                	je     290f <__FRAME_END__+0x2103>
    290f:	5f                   	pop    rdi
    2910:	5f                   	pop    rdi
    2911:	49                   	rex.WB
    2912:	4e                   	rex.WRX
    2913:	4f                   	rex.WRXB
    2914:	36 34 5f             	ss xor al,0x5f
    2917:	54                   	push   rsp
    2918:	5f                   	pop    rdi
    2919:	54                   	push   rsp
    291a:	59                   	pop    rcx
    291b:	50                   	push   rax
    291c:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2920:	55                   	push   rbp
    2921:	51                   	push   rcx
    2922:	55                   	push   rbp
    2923:	41                   	rex.B
    2924:	44 5f                	rex.R pop rdi
    2926:	54                   	push   rsp
    2927:	59                   	pop    rcx
    2928:	50                   	push   rax
    2929:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    292d:	47                   	rex.RXB
    292e:	4e 55                	rex.WRX push rbp
    2930:	5f                   	pop    rdi
    2931:	4c                   	rex.WR
    2932:	49                   	rex.WB
    2933:	42 52                	rex.X push rdx
    2935:	41 52                	push   r10
    2937:	59                   	pop    rcx
    2938:	5f                   	pop    rdi
    2939:	5f                   	pop    rdi
    293a:	20 36                	and    BYTE PTR [rsi],dh
    293c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    293f:	53                   	push   rbx
    2940:	54                   	push   rsp
    2941:	44                   	rex.R
    2942:	43 5f                	rex.XB pop r15
    2944:	5f                   	pop    rdi
    2945:	20 31                	and    BYTE PTR [rcx],dh
    2947:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    294a:	67 6c                	ins    BYTE PTR es:[edi],dx
    294c:	69 62 63 5f 63 39 39 	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
    2953:	5f                   	pop    rdi
    2954:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2956:	65 78 61             	gs js  29ba <__FRAME_END__+0x21ae>
    2959:	72 72                	jb     29cd <__FRAME_END__+0x21c1>
    295b:	5f                   	pop    rdi
    295c:	61                   	(bad)  
    295d:	76 61                	jbe    29c0 <__FRAME_END__+0x21b4>
    295f:	69 6c 61 62 6c 65 20 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x3120656c
    2966:	31 
    2967:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    296a:	53                   	push   rbx
    296b:	53                   	push   rbx
    296c:	45 32 5f 5f          	xor    r11b,BYTE PTR [r15+0x5f]
    2970:	20 31                	and    BYTE PTR [rcx],dh
    2972:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2975:	53                   	push   rbx
    2976:	4c                   	rex.WR
    2977:	4f                   	rex.WRXB
    2978:	4e                   	rex.WRX
    2979:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    297c:	5f                   	pop    rdi
    297d:	54                   	push   rsp
    297e:	59                   	pop    rcx
    297f:	50                   	push   rax
    2980:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
    2984:	74 00                	je     2986 <__FRAME_END__+0x217a>
    2986:	5f                   	pop    rdi
    2987:	5f                   	pop    rdi
    2988:	44                   	rex.R
    2989:	42                   	rex.X
    298a:	4c 5f                	rex.WR pop rdi
    298c:	4d                   	rex.WRB
    298d:	41 58                	pop    r8
    298f:	5f                   	pop    rdi
    2990:	45 58                	rex.RB pop r8
    2992:	50                   	push   rax
    2993:	5f                   	pop    rdi
    2994:	5f                   	pop    rdi
    2995:	20 31                	and    BYTE PTR [rcx],dh
    2997:	30 32                	xor    BYTE PTR [rdx],dh
    2999:	34 00                	xor    al,0x0
    299b:	5f                   	pop    rdi
    299c:	5f                   	pop    rdi
    299d:	53                   	push   rbx
    299e:	49 5a                	rex.WB pop r10
    29a0:	45                   	rex.RB
    29a1:	4f                   	rex.WRXB
    29a2:	46 5f                	rex.RX pop rdi
    29a4:	4c                   	rex.WR
    29a5:	4f                   	rex.WRXB
    29a6:	4e                   	rex.WRX
    29a7:	47 5f                	rex.RXB pop r15
    29a9:	5f                   	pop    rdi
    29aa:	20 38                	and    BYTE PTR [rax],bh
    29ac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29af:	41 54                	push   r12
    29b1:	4f                   	rex.WRXB
    29b2:	4d                   	rex.WRB
    29b3:	49                   	rex.WB
    29b4:	43 5f                	rex.XB pop r15
    29b6:	43                   	rex.XB
    29b7:	4f                   	rex.WRXB
    29b8:	4e 53                	rex.WRX push rbx
    29ba:	55                   	push   rbp
    29bb:	4d                   	rex.WRB
    29bc:	45 20 31             	and    BYTE PTR [r9],r14b
    29bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29c2:	55                   	push   rbp
    29c3:	53                   	push   rbx
    29c4:	45 5f                	rex.RB pop r15
    29c6:	46                   	rex.RX
    29c7:	49                   	rex.WB
    29c8:	4c                   	rex.WR
    29c9:	45 5f                	rex.RB pop r15
    29cb:	4f                   	rex.WRXB
    29cc:	46                   	rex.RX
    29cd:	46 53                	rex.RX push rbx
    29cf:	45 54                	rex.RB push r12
    29d1:	36 34 00             	ss xor al,0x0
    29d4:	5f                   	pop    rdi
    29d5:	49                   	rex.WB
    29d6:	4f 5f                	rex.WRXB pop r15
    29d8:	46                   	rex.RX
    29d9:	4c                   	rex.WR
    29da:	41                   	rex.B
    29db:	47 53                	rex.RXB push r11
    29dd:	32 5f 4d             	xor    bl,BYTE PTR [rdi+0x4d]
    29e0:	4d                   	rex.WRB
    29e1:	41 50                	push   r8
    29e3:	20 31                	and    BYTE PTR [rcx],dh
    29e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29e8:	46                   	rex.RX
    29e9:	4c 54                	rex.WR push rsp
    29eb:	33 32                	xor    esi,DWORD PTR [rdx]
    29ed:	5f                   	pop    rdi
    29ee:	4d                   	rex.WRB
    29ef:	49                   	rex.WB
    29f0:	4e 5f                	rex.WRX pop rdi
    29f2:	5f                   	pop    rdi
    29f3:	20 31                	and    BYTE PTR [rcx],dh
    29f5:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    29f8:	35 34 39 34 33       	xor    eax,0x33343934
    29fd:	35 30 38 32 32       	xor    eax,0x32323830
    2a02:	32 38                	xor    bh,BYTE PTR [rax]
    2a04:	37                   	(bad)  
    2a05:	35 30 37 39 36       	xor    eax,0x36393730
    2a0a:	38 37                	cmp    BYTE PTR [rdi],dh
    2a0c:	33 36                	xor    esi,DWORD PTR [rsi]
    2a0e:	35 33 37 32 32       	xor    eax,0x32323733
    2a13:	32 32                	xor    dh,BYTE PTR [rdx]
    2a15:	34 35                	xor    al,0x35
    2a17:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    2a1b:	33 38                	xor    edi,DWORD PTR [rax]
    2a1d:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    2a20:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2a23:	57                   	push   rdi
    2a24:	49                   	rex.WB
    2a25:	4e 54                	rex.WRX push rsp
    2a27:	5f                   	pop    rdi
    2a28:	54                   	push   rsp
    2a29:	59                   	pop    rcx
    2a2a:	50                   	push   rax
    2a2b:	45 5f                	rex.RB pop r15
    2a2d:	5f                   	pop    rdi
    2a2e:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    2a31:	73 69                	jae    2a9c <__FRAME_END__+0x2290>
    2a33:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2a35:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    2a3a:	74 00                	je     2a3c <__FRAME_END__+0x2230>
    2a3c:	5f                   	pop    rdi
    2a3d:	5f                   	pop    rdi
    2a3e:	55                   	push   rbp
    2a3f:	53                   	push   rbx
    2a40:	45 5f                	rex.RB pop r15
    2a42:	4d                   	rex.WRB
    2a43:	49 53                	rex.WB push r11
    2a45:	43 00 5f 49          	rex.XB add BYTE PTR [r15+0x49],bl
    2a49:	4f 5f                	rex.WRXB pop r15
    2a4b:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    2a4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a50:	75 70                	jne    2ac2 <__FRAME_END__+0x22b6>
    2a52:	5f                   	pop    rdi
    2a53:	72 65                	jb     2aba <__FRAME_END__+0x22ae>
    2a55:	67 69 6f 6e 5f 65 6e 	imul   ebp,DWORD PTR [edi+0x6e],0x646e655f
    2a5c:	64 
    2a5d:	28 5f 44             	sub    BYTE PTR [rdi+0x44],bl
    2a60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a61:	69 74 29 20 00 5f 5f 	imul   esi,DWORD PTR [rcx+rbp*1+0x20],0x495f5f00
    2a68:	49 
    2a69:	4e 54                	rex.WRX push rsp
    2a6b:	31 36                	xor    DWORD PTR [rsi],esi
    2a6d:	5f                   	pop    rdi
    2a6e:	4d                   	rex.WRB
    2a6f:	41 58                	pop    r8
    2a71:	5f                   	pop    rdi
    2a72:	5f                   	pop    rdi
    2a73:	20 30                	and    BYTE PTR [rax],dh
    2a75:	78 37                	js     2aae <__FRAME_END__+0x22a2>
    2a77:	66 66 66 00 5f 50    	data16 data16 data16 add BYTE PTR [rdi+0x50],bl
    2a7d:	4f 53                	rex.WRXB push r11
    2a7f:	49 58                	rex.WB pop r8
    2a81:	5f                   	pop    rdi
    2a82:	43 5f                	rex.XB pop r15
    2a84:	53                   	push   rbx
    2a85:	4f 55                	rex.WRXB push r13
    2a87:	52                   	push   rdx
    2a88:	43                   	rex.XB
    2a89:	45 20 32             	and    BYTE PTR [r10],r14b
    2a8c:	30 30                	xor    BYTE PTR [rax],dh
    2a8e:	38 30                	cmp    BYTE PTR [rax],dh
    2a90:	39 4c 00 5f          	cmp    DWORD PTR [rax+rax*1+0x5f],ecx
    2a94:	5f                   	pop    rdi
    2a95:	53                   	push   rbx
    2a96:	43                   	rex.XB
    2a97:	48                   	rex.W
    2a98:	41 52                	push   r10
    2a9a:	5f                   	pop    rdi
    2a9b:	57                   	push   rdi
    2a9c:	49                   	rex.WB
    2a9d:	44 54                	rex.R push rsp
    2a9f:	48 5f                	rex.W pop rdi
    2aa1:	5f                   	pop    rdi
    2aa2:	20 38                	and    BYTE PTR [rax],bh
    2aa4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2aa7:	55                   	push   rbp
    2aa8:	49                   	rex.WB
    2aa9:	4e 54                	rex.WRX push rsp
    2aab:	33 32                	xor    esi,DWORD PTR [rdx]
    2aad:	5f                   	pop    rdi
    2aae:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2ab2:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    2ab5:	23 23                	and    esp,DWORD PTR [rbx]
    2ab7:	20 55 00             	and    BYTE PTR [rbp+0x0],dl
    2aba:	5f                   	pop    rdi
    2abb:	5f                   	pop    rdi
    2abc:	4c                   	rex.WR
    2abd:	44                   	rex.R
    2abe:	42                   	rex.X
    2abf:	4c 5f                	rex.WR pop rdi
    2ac1:	4d                   	rex.WRB
    2ac2:	49                   	rex.WB
    2ac3:	4e 5f                	rex.WRX pop rdi
    2ac5:	31 30                	xor    DWORD PTR [rax],esi
    2ac7:	5f                   	pop    rdi
    2ac8:	45 58                	rex.RB pop r8
    2aca:	50                   	push   rax
    2acb:	5f                   	pop    rdi
    2acc:	5f                   	pop    rdi
    2acd:	20 28                	and    BYTE PTR [rax],ch
    2acf:	2d 34 39 33 31       	sub    eax,0x31333934
    2ad4:	29 00                	sub    DWORD PTR [rax],eax
    2ad6:	5f                   	pop    rdi
    2ad7:	53                   	push   rbx
    2ad8:	54                   	push   rsp
    2ad9:	44                   	rex.R
    2ada:	49                   	rex.WB
    2adb:	4f 5f                	rex.WRXB pop r15
    2add:	55                   	push   rbp
    2ade:	53                   	push   rbx
    2adf:	45 53                	rex.RB push r11
    2ae1:	5f                   	pop    rdi
    2ae2:	49                   	rex.WB
    2ae3:	4f 53                	rex.WRXB push r11
    2ae5:	54                   	push   rsp
    2ae6:	52                   	push   rdx
    2ae7:	45                   	rex.RB
    2ae8:	41                   	rex.B
    2ae9:	4d 20 00             	rex.WRB and BYTE PTR [r8],r8b
    2aec:	5f                   	pop    rdi
    2aed:	5f                   	pop    rdi
    2aee:	53                   	push   rbx
    2aef:	49 5a                	rex.WB pop r10
    2af1:	45                   	rex.RB
    2af2:	4f                   	rex.WRXB
    2af3:	46 5f                	rex.RX pop rdi
    2af5:	44                   	rex.R
    2af6:	4f 55                	rex.WRXB push r13
    2af8:	42                   	rex.X
    2af9:	4c                   	rex.WR
    2afa:	45 5f                	rex.RB pop r15
    2afc:	5f                   	pop    rdi
    2afd:	20 38                	and    BYTE PTR [rax],bh
    2aff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b02:	55                   	push   rbp
    2b03:	49                   	rex.WB
    2b04:	4e 54                	rex.WRX push rsp
    2b06:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    2b09:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    2b0c:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2b0f:	5f                   	pop    rdi
    2b10:	5f                   	pop    rdi
    2b11:	42                   	rex.X
    2b12:	4c                   	rex.WR
    2b13:	4b                   	rex.WXB
    2b14:	43                   	rex.XB
    2b15:	4e 54                	rex.WRX push rsp
    2b17:	36 34 5f             	ss xor al,0x5f
    2b1a:	54                   	push   rsp
    2b1b:	5f                   	pop    rdi
    2b1c:	54                   	push   rsp
    2b1d:	59                   	pop    rcx
    2b1e:	50                   	push   rax
    2b1f:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2b23:	53                   	push   rbx
    2b24:	51                   	push   rcx
    2b25:	55                   	push   rbp
    2b26:	41                   	rex.B
    2b27:	44 5f                	rex.R pop rdi
    2b29:	54                   	push   rsp
    2b2a:	59                   	pop    rcx
    2b2b:	50                   	push   rax
    2b2c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2b30:	55                   	push   rbp
    2b31:	53                   	push   rbx
    2b32:	45 5f                	rex.RB pop r15
    2b34:	46                   	rex.RX
    2b35:	4f 52                	rex.WRXB push r10
    2b37:	54                   	push   rsp
    2b38:	49                   	rex.WB
    2b39:	46 59                	rex.RX pop rcx
    2b3b:	5f                   	pop    rdi
    2b3c:	4c                   	rex.WR
    2b3d:	45 56                	rex.RB push r14
    2b3f:	45                   	rex.RB
    2b40:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2b44:	47                   	rex.RXB
    2b45:	4c                   	rex.WR
    2b46:	49                   	rex.WB
    2b47:	42                   	rex.X
    2b48:	43 5f                	rex.XB pop r15
    2b4a:	55                   	push   rbp
    2b4b:	53                   	push   rbx
    2b4c:	45 5f                	rex.RB pop r15
    2b4e:	4c                   	rex.WR
    2b4f:	49                   	rex.WB
    2b50:	42 5f                	rex.X pop rdi
    2b52:	45 58                	rex.RB pop r8
    2b54:	54                   	push   rsp
    2b55:	32 00                	xor    al,BYTE PTR [rax]
    2b57:	5f                   	pop    rdi
    2b58:	5f                   	pop    rdi
    2b59:	57                   	push   rdi
    2b5a:	49                   	rex.WB
    2b5b:	4e 54                	rex.WRX push rsp
    2b5d:	5f                   	pop    rdi
    2b5e:	4d                   	rex.WRB
    2b5f:	49                   	rex.WB
    2b60:	4e 5f                	rex.WRX pop rdi
    2b62:	5f                   	pop    rdi
    2b63:	20 30                	and    BYTE PTR [rax],dh
    2b65:	55                   	push   rbp
    2b66:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b69:	4c                   	rex.WR
    2b6a:	44                   	rex.R
    2b6b:	42                   	rex.X
    2b6c:	4c 5f                	rex.WR pop rdi
    2b6e:	4d                   	rex.WRB
    2b6f:	41                   	rex.B
    2b70:	4e 54                	rex.WRX push rsp
    2b72:	5f                   	pop    rdi
    2b73:	44                   	rex.R
    2b74:	49                   	rex.WB
    2b75:	47 5f                	rex.RXB pop r15
    2b77:	5f                   	pop    rdi
    2b78:	20 36                	and    BYTE PTR [rsi],dh
    2b7a:	34 00                	xor    al,0x0
    2b7c:	5f                   	pop    rdi
    2b7d:	5f                   	pop    rdi
    2b7e:	70 61                	jo     2be1 <__FRAME_END__+0x23d5>
    2b80:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    2b83:	5f                   	pop    rdi
    2b84:	5f                   	pop    rdi
    2b85:	70 61                	jo     2be8 <__FRAME_END__+0x23dc>
    2b87:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2b8a:	5f                   	pop    rdi
    2b8b:	5f                   	pop    rdi
    2b8c:	70 61                	jo     2bef <__FRAME_END__+0x23e3>
    2b8e:	64 33 00             	xor    eax,DWORD PTR fs:[rax]
    2b91:	5f                   	pop    rdi
    2b92:	5f                   	pop    rdi
    2b93:	70 61                	jo     2bf6 <__FRAME_END__+0x23ea>
    2b95:	64 34 00             	fs xor al,0x0
    2b98:	5f                   	pop    rdi
    2b99:	5f                   	pop    rdi
    2b9a:	70 61                	jo     2bfd <__FRAME_END__+0x23f1>
    2b9c:	64 35 00 5f 5f 53    	fs xor eax,0x535f5f00
    2ba2:	54                   	push   rsp
    2ba3:	44                   	rex.R
    2ba4:	43 5f                	rex.XB pop r15
    2ba6:	55                   	push   rbp
    2ba7:	54                   	push   rsp
    2ba8:	46 5f                	rex.RX pop rdi
    2baa:	31 36                	xor    DWORD PTR [rsi],esi
    2bac:	5f                   	pop    rdi
    2bad:	5f                   	pop    rdi
    2bae:	20 31                	and    BYTE PTR [rcx],dh
    2bb0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2bb3:	4c                   	rex.WR
    2bb4:	44                   	rex.R
    2bb5:	42                   	rex.X
    2bb6:	4c 5f                	rex.WR pop rdi
    2bb8:	45 50                	rex.RB push r8
    2bba:	53                   	push   rbx
    2bbb:	49                   	rex.WB
    2bbc:	4c                   	rex.WR
    2bbd:	4f                   	rex.WRXB
    2bbe:	4e 5f                	rex.WRX pop rdi
    2bc0:	5f                   	pop    rdi
    2bc1:	20 31                	and    BYTE PTR [rcx],dh
    2bc3:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
    2bc6:	34 32                	xor    al,0x32
    2bc8:	30 32                	xor    BYTE PTR [rdx],dh
    2bca:	31 37                	xor    DWORD PTR [rdi],esi
    2bcc:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2bcf:	35 35 30 34 34       	xor    eax,0x34343035
    2bd4:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
    2bd7:	30 37                	xor    BYTE PTR [rdi],dh
    2bd9:	34 35                	xor    al,0x35
    2bdb:	32 38                	xor    bh,BYTE PTR [rax]
    2bdd:	30 30                	xor    BYTE PTR [rax],dh
    2bdf:	38 36                	cmp    BYTE PTR [rsi],dh
    2be1:	39 39                	cmp    DWORD PTR [rcx],edi
    2be3:	34 31                	xor    al,0x31
    2be5:	37                   	(bad)  
    2be6:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
    2be9:	31 39                	xor    DWORD PTR [rcx],edi
    2beb:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2bef:	62                   	(bad)  
    2bf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bf1:	73 30                	jae    2c23 <__FRAME_END__+0x2417>
    2bf3:	28 70 74             	sub    BYTE PTR [rax+0x74],dh
    2bf6:	72 29                	jb     2c21 <__FRAME_END__+0x2415>
    2bf8:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2bfb:	62                   	(bad)  
    2bfc:	75 69                	jne    2c67 <__FRAME_END__+0x245b>
    2bfe:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bff:	74 69                	je     2c6a <__FRAME_END__+0x245e>
    2c01:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c02:	5f                   	pop    rdi
    2c03:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c04:	62                   	(bad)  
    2c05:	6a 65                	push   0x65
    2c07:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2c0b:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2c12:	72 2c                	jb     2c40 <__FRAME_END__+0x2434>
    2c14:	20 30                	and    BYTE PTR [rax],dh
    2c16:	29 00                	sub    DWORD PTR [rax],eax
    2c18:	5f                   	pop    rdi
    2c19:	49                   	rex.WB
    2c1a:	4f                   	rex.WRXB
    2c1b:	4c                   	rex.WR
    2c1c:	42                   	rex.X
    2c1d:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
    2c20:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c23:	61                   	(bad)  
    2c24:	74 74                	je     2c9a <__FRAME_END__+0x248e>
    2c26:	72 69                	jb     2c91 <__FRAME_END__+0x2485>
    2c28:	62                   	(bad)  
    2c29:	75 74                	jne    2c9f <__FRAME_END__+0x2493>
    2c2b:	65 5f                	gs pop rdi
    2c2d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2c2f:	72 6d                	jb     2c9e <__FRAME_END__+0x2492>
    2c31:	61                   	(bad)  
    2c32:	74 5f                	je     2c93 <__FRAME_END__+0x2487>
    2c34:	61                   	(bad)  
    2c35:	72 67                	jb     2c9e <__FRAME_END__+0x2492>
    2c37:	5f                   	pop    rdi
    2c38:	5f                   	pop    rdi
    2c39:	28 78 29             	sub    BYTE PTR [rax+0x29],bh
    2c3c:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2c3f:	61                   	(bad)  
    2c40:	74 74                	je     2cb6 <__FRAME_END__+0x24aa>
    2c42:	72 69                	jb     2cad <__FRAME_END__+0x24a1>
    2c44:	62                   	(bad)  
    2c45:	75 74                	jne    2cbb <__FRAME_END__+0x24af>
    2c47:	65 5f                	gs pop rdi
    2c49:	5f                   	pop    rdi
    2c4a:	20 28                	and    BYTE PTR [rax],ch
    2c4c:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2c4f:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2c51:	72 6d                	jb     2cc0 <__FRAME_END__+0x24b4>
    2c53:	61                   	(bad)  
    2c54:	74 5f                	je     2cb5 <__FRAME_END__+0x24a9>
    2c56:	61                   	(bad)  
    2c57:	72 67                	jb     2cc0 <__FRAME_END__+0x24b4>
    2c59:	5f                   	pop    rdi
    2c5a:	5f                   	pop    rdi
    2c5b:	20 28                	and    BYTE PTR [rax],ch
    2c5d:	78 29                	js     2c88 <__FRAME_END__+0x247c>
    2c5f:	29 29                	sub    DWORD PTR [rcx],ebp
    2c61:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c64:	5f                   	pop    rdi
    2c65:	5f                   	pop    rdi
    2c66:	46                   	rex.RX
    2c67:	49                   	rex.WB
    2c68:	4c                   	rex.WR
    2c69:	45 5f                	rex.RB pop r15
    2c6b:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    2c72:	20 
    2c73:	31 00                	xor    DWORD PTR [rax],eax
    2c75:	5f                   	pop    rdi
    2c76:	5f                   	pop    rdi
    2c77:	4c                   	rex.WR
    2c78:	44                   	rex.R
    2c79:	42                   	rex.X
    2c7a:	4c 5f                	rex.WR pop rdi
    2c7c:	48                   	rex.W
    2c7d:	41 53                	push   r11
    2c7f:	5f                   	pop    rdi
    2c80:	49                   	rex.WB
    2c81:	4e                   	rex.WRX
    2c82:	46                   	rex.RX
    2c83:	49                   	rex.WB
    2c84:	4e                   	rex.WRX
    2c85:	49 54                	rex.WB push r12
    2c87:	59                   	pop    rcx
    2c88:	5f                   	pop    rdi
    2c89:	5f                   	pop    rdi
    2c8a:	20 31                	and    BYTE PTR [rcx],dh
    2c8c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c8f:	55                   	push   rbp
    2c90:	53                   	push   rbx
    2c91:	45 5f                	rex.RB pop r15
    2c93:	50                   	push   rax
    2c94:	4f 53                	rex.WRXB push r11
    2c96:	49 58                	rex.WB pop r8
    2c98:	20 31                	and    BYTE PTR [rcx],dh
    2c9a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c9d:	49                   	rex.WB
    2c9e:	4e                   	rex.WRX
    2c9f:	4f 5f                	rex.WRXB pop r15
    2ca1:	54                   	push   rsp
    2ca2:	5f                   	pop    rdi
    2ca3:	4d                   	rex.WRB
    2ca4:	41 54                	push   r12
    2ca6:	43                   	rex.XB
    2ca7:	48                   	rex.W
    2ca8:	45 53                	rex.RB push r11
    2caa:	5f                   	pop    rdi
    2cab:	49                   	rex.WB
    2cac:	4e                   	rex.WRX
    2cad:	4f                   	rex.WRXB
    2cae:	36 34 5f             	ss xor al,0x5f
    2cb1:	54                   	push   rsp
    2cb2:	20 31                	and    BYTE PTR [rcx],dh
    2cb4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2cb7:	47                   	rex.RXB
    2cb8:	43                   	rex.XB
    2cb9:	43 5f                	rex.XB pop r15
    2cbb:	49                   	rex.WB
    2cbc:	45                   	rex.RB
    2cbd:	43 5f                	rex.XB pop r15
    2cbf:	35 35 39 5f 43       	xor    eax,0x435f3935
    2cc4:	4f                   	rex.WRXB
    2cc5:	4d 50                	rex.WRB push r8
    2cc7:	4c                   	rex.WR
    2cc8:	45 58                	rex.RB pop r8
    2cca:	20 32                	and    BYTE PTR [rdx],dh
    2ccc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ccf:	53                   	push   rbx
    2cd0:	49                   	rex.WB
    2cd1:	47 5f                	rex.RXB pop r15
    2cd3:	41 54                	push   r12
    2cd5:	4f                   	rex.WRXB
    2cd6:	4d                   	rex.WRB
    2cd7:	49                   	rex.WB
    2cd8:	43 5f                	rex.XB pop r15
    2cda:	4d                   	rex.WRB
    2cdb:	49                   	rex.WB
    2cdc:	4e 5f                	rex.WRX pop rdi
    2cde:	5f                   	pop    rdi
    2cdf:	20 28                	and    BYTE PTR [rax],ch
    2ce1:	2d 5f 5f 53 49       	sub    eax,0x49535f5f
    2ce6:	47 5f                	rex.RXB pop r15
    2ce8:	41 54                	push   r12
    2cea:	4f                   	rex.WRXB
    2ceb:	4d                   	rex.WRB
    2cec:	49                   	rex.WB
    2ced:	43 5f                	rex.XB pop r15
    2cef:	4d                   	rex.WRB
    2cf0:	41 58                	pop    r8
    2cf2:	5f                   	pop    rdi
    2cf3:	5f                   	pop    rdi
    2cf4:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 295e1a <_end+0x94e02>
    2cfa:	5f                   	pop    rdi
    2cfb:	49                   	rex.WB
    2cfc:	4f 5f                	rex.WRXB pop r15
    2cfe:	49                   	rex.WB
    2cff:	4e 5f                	rex.WRX pop rdi
    2d01:	42                   	rex.X
    2d02:	41                   	rex.B
    2d03:	43                   	rex.XB
    2d04:	4b 55                	rex.WXB push r13
    2d06:	50                   	push   rax
    2d07:	20 30                	and    BYTE PTR [rax],dh
    2d09:	78 31                	js     2d3c <__FRAME_END__+0x2530>
    2d0b:	30 30                	xor    BYTE PTR [rax],dh
    2d0d:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2d10:	4f 5f                	rex.WRXB pop r15
    2d12:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2d14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d15:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    2d18:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2d1f:	29 
    2d20:	20 00                	and    BYTE PTR [rax],al
    2d22:	5f                   	pop    rdi
    2d23:	5f                   	pop    rdi
    2d24:	53                   	push   rbx
    2d25:	49 5a                	rex.WB pop r10
    2d27:	45                   	rex.RB
    2d28:	4f                   	rex.WRXB
    2d29:	46 5f                	rex.RX pop rdi
    2d2b:	57                   	push   rdi
    2d2c:	43                   	rex.XB
    2d2d:	48                   	rex.W
    2d2e:	41 52                	push   r10
    2d30:	5f                   	pop    rdi
    2d31:	54                   	push   rsp
    2d32:	5f                   	pop    rdi
    2d33:	5f                   	pop    rdi
    2d34:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2d37:	5f                   	pop    rdi
    2d38:	5f                   	pop    rdi
    2d39:	61                   	(bad)  
    2d3a:	74 74                	je     2db0 <__FRAME_END__+0x25a4>
    2d3c:	72 69                	jb     2da7 <__FRAME_END__+0x259b>
    2d3e:	62                   	(bad)  
    2d3f:	75 74                	jne    2db5 <__FRAME_END__+0x25a9>
    2d41:	65 5f                	gs pop rdi
    2d43:	64 65 70 72          	fs gs jo 2db9 <__FRAME_END__+0x25ad>
    2d47:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d4b:	65 64 5f             	gs fs pop rdi
    2d4e:	5f                   	pop    rdi
    2d4f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2d52:	61                   	(bad)  
    2d53:	74 74                	je     2dc9 <__FRAME_END__+0x25bd>
    2d55:	72 69                	jb     2dc0 <__FRAME_END__+0x25b4>
    2d57:	62                   	(bad)  
    2d58:	75 74                	jne    2dce <__FRAME_END__+0x25c2>
    2d5a:	65 5f                	gs pop rdi
    2d5c:	5f                   	pop    rdi
    2d5d:	20 28                	and    BYTE PTR [rax],ch
    2d5f:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2d62:	64 65 70 72          	fs gs jo 2dd8 <__FRAME_END__+0x25cc>
    2d66:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d6a:	65 64 5f             	gs fs pop rdi
    2d6d:	5f                   	pop    rdi
    2d6e:	29 29                	sub    DWORD PTR [rcx],ebp
    2d70:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d73:	46                   	rex.RX
    2d74:	4c 54                	rex.WR push rsp
    2d76:	31 32                	xor    DWORD PTR [rdx],esi
    2d78:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2d7b:	49                   	rex.WB
    2d7c:	4e 5f                	rex.WRX pop rdi
    2d7e:	31 30                	xor    DWORD PTR [rax],esi
    2d80:	5f                   	pop    rdi
    2d81:	45 58                	rex.RB pop r8
    2d83:	50                   	push   rax
    2d84:	5f                   	pop    rdi
    2d85:	5f                   	pop    rdi
    2d86:	20 28                	and    BYTE PTR [rax],ch
    2d88:	2d 34 39 33 31       	sub    eax,0x31333934
    2d8d:	29 00                	sub    DWORD PTR [rax],eax
    2d8f:	5f                   	pop    rdi
    2d90:	5f                   	pop    rdi
    2d91:	46                   	rex.RX
    2d92:	4c                   	rex.WR
    2d93:	4f                   	rex.WRXB
    2d94:	41 54                	push   r12
    2d96:	5f                   	pop    rdi
    2d97:	57                   	push   rdi
    2d98:	4f 52                	rex.WRXB push r10
    2d9a:	44 5f                	rex.R pop rdi
    2d9c:	4f 52                	rex.WRXB push r10
    2d9e:	44                   	rex.R
    2d9f:	45 52                	rex.RB push r10
    2da1:	5f                   	pop    rdi
    2da2:	5f                   	pop    rdi
    2da3:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2da6:	4f 52                	rex.WRXB push r10
    2da8:	44                   	rex.R
    2da9:	45 52                	rex.RB push r10
    2dab:	5f                   	pop    rdi
    2dac:	4c                   	rex.WR
    2dad:	49 54                	rex.WB push r12
    2daf:	54                   	push   rsp
    2db0:	4c                   	rex.WR
    2db1:	45 5f                	rex.RB pop r15
    2db3:	45                   	rex.RB
    2db4:	4e                   	rex.WRX
    2db5:	44                   	rex.R
    2db6:	49                   	rex.WB
    2db7:	41                   	rex.B
    2db8:	4e 5f                	rex.WRX pop rdi
    2dba:	5f                   	pop    rdi
    2dbb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dbe:	47                   	rex.RXB
    2dbf:	43                   	rex.XB
    2dc0:	43 5f                	rex.XB pop r15
    2dc2:	48                   	rex.W
    2dc3:	41 56                	push   r14
    2dc5:	45 5f                	rex.RB pop r15
    2dc7:	53                   	push   rbx
    2dc8:	59                   	pop    rcx
    2dc9:	4e                   	rex.WRX
    2dca:	43 5f                	rex.XB pop r15
    2dcc:	43                   	rex.XB
    2dcd:	4f                   	rex.WRXB
    2dce:	4d 50                	rex.WRB push r8
    2dd0:	41 52                	push   r10
    2dd2:	45 5f                	rex.RB pop r15
    2dd4:	41                   	rex.B
    2dd5:	4e                   	rex.WRX
    2dd6:	44 5f                	rex.R pop rdi
    2dd8:	53                   	push   rbx
    2dd9:	57                   	push   rdi
    2dda:	41 50                	push   r8
    2ddc:	5f                   	pop    rdi
    2ddd:	32 20                	xor    ah,BYTE PTR [rax]
    2ddf:	31 00                	xor    DWORD PTR [rax],eax
    2de1:	5f                   	pop    rdi
    2de2:	47 5f                	rex.RXB pop r15
    2de4:	48                   	rex.W
    2de5:	41 56                	push   r14
    2de7:	45 5f                	rex.RB pop r15
    2de9:	4d 52                	rex.WRB push r10
    2deb:	45                   	rex.RB
    2dec:	4d                   	rex.WRB
    2ded:	41 50                	push   r8
    2def:	20 31                	and    BYTE PTR [rcx],dh
    2df1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2df4:	44                   	rex.R
    2df5:	45                   	rex.RB
    2df6:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2df9:	5f                   	pop    rdi
    2dfa:	4d                   	rex.WRB
    2dfb:	41                   	rex.B
    2dfc:	4e 54                	rex.WRX push rsp
    2dfe:	5f                   	pop    rdi
    2dff:	44                   	rex.R
    2e00:	49                   	rex.WB
    2e01:	47 5f                	rex.RXB pop r15
    2e03:	5f                   	pop    rdi
    2e04:	20 37                	and    BYTE PTR [rdi],dh
    2e06:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e09:	46                   	rex.RX
    2e0a:	4c 54                	rex.WR push rsp
    2e0c:	33 32                	xor    esi,DWORD PTR [rdx]
    2e0e:	5f                   	pop    rdi
    2e0f:	44                   	rex.R
    2e10:	45                   	rex.RB
    2e11:	4e                   	rex.WRX
    2e12:	4f 52                	rex.WRXB push r10
    2e14:	4d 5f                	rex.WRB pop r15
    2e16:	4d                   	rex.WRB
    2e17:	49                   	rex.WB
    2e18:	4e 5f                	rex.WRX pop rdi
    2e1a:	5f                   	pop    rdi
    2e1b:	20 31                	and    BYTE PTR [rcx],dh
    2e1d:	2e 34 30             	cs xor al,0x30
    2e20:	31 32                	xor    DWORD PTR [rdx],esi
    2e22:	39 38                	cmp    DWORD PTR [rax],edi
    2e24:	34 36                	xor    al,0x36
    2e26:	34 33                	xor    al,0x33
    2e28:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2e2b:	31 37                	xor    DWORD PTR [rdi],esi
    2e2d:	30 37                	xor    BYTE PTR [rdi],dh
    2e2f:	30 39                	xor    BYTE PTR [rcx],bh
    2e31:	32 33                	xor    dh,BYTE PTR [rbx]
    2e33:	37                   	(bad)  
    2e34:	32 39                	xor    bh,BYTE PTR [rcx]
    2e36:	35 38 33 32 38       	xor    eax,0x38323338
    2e3b:	39 39                	cmp    DWORD PTR [rcx],edi
    2e3d:	31 36                	xor    DWORD PTR [rsi],esi
    2e3f:	31 33                	xor    DWORD PTR [rbx],esi
    2e41:	65 2d 34 35 46 33    	gs sub eax,0x33463534
    2e47:	32 00                	xor    al,BYTE PTR [rax]
    2e49:	5f                   	pop    rdi
    2e4a:	5f                   	pop    rdi
    2e4b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e4c:	65 65 64 5f          	gs gs fs pop rdi
    2e50:	73 69                	jae    2ebb <__FRAME_END__+0x26af>
    2e52:	7a 65                	jp     2eb9 <__FRAME_END__+0x26ad>
    2e54:	5f                   	pop    rdi
    2e55:	74 00                	je     2e57 <__FRAME_END__+0x264b>
    2e57:	5f                   	pop    rdi
    2e58:	5f                   	pop    rdi
    2e59:	55                   	push   rbp
    2e5a:	49                   	rex.WB
    2e5b:	4e 54                	rex.WRX push rsp
    2e5d:	5f                   	pop    rdi
    2e5e:	46                   	rex.RX
    2e5f:	41 53                	push   r11
    2e61:	54                   	push   rsp
    2e62:	31 36                	xor    DWORD PTR [rsi],esi
    2e64:	5f                   	pop    rdi
    2e65:	4d                   	rex.WRB
    2e66:	41 58                	pop    r8
    2e68:	5f                   	pop    rdi
    2e69:	5f                   	pop    rdi
    2e6a:	20 30                	and    BYTE PTR [rax],dh
    2e6c:	78 66                	js     2ed4 <__FRAME_END__+0x26c8>
    2e6e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2e75:	66 66 66 66 66 66 66 
    2e7c:	66 55                	push   bp
    2e7e:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2e82:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e83:	65 65 64 5f          	gs gs fs pop rdi
    2e87:	5f                   	pop    rdi
    2e88:	5f                   	pop    rdi
    2e89:	76 61                	jbe    2eec <__FRAME_END__+0x26e0>
    2e8b:	5f                   	pop    rdi
    2e8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e8d:	69 73 74 00 5f 5f 49 	imul   esi,DWORD PTR [rbx+0x74],0x495f5f00
    2e94:	4e 54                	rex.WRX push rsp
    2e96:	33 32                	xor    esi,DWORD PTR [rdx]
    2e98:	5f                   	pop    rdi
    2e99:	4d                   	rex.WRB
    2e9a:	41 58                	pop    r8
    2e9c:	5f                   	pop    rdi
    2e9d:	5f                   	pop    rdi
    2e9e:	20 30                	and    BYTE PTR [rax],dh
    2ea0:	78 37                	js     2ed9 <__FRAME_END__+0x26cd>
    2ea2:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2ea9:	00 5f 49 
    2eac:	4f 5f                	rex.WRXB pop r15
    2eae:	49                   	rex.WB
    2eaf:	4e 54                	rex.WRX push rsp
    2eb1:	45 52                	rex.RB push r10
    2eb3:	4e                   	rex.WRX
    2eb4:	41                   	rex.B
    2eb5:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
    2eb8:	31 30                	xor    DWORD PTR [rax],esi
    2eba:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ebd:	5f                   	pop    rdi
    2ebe:	69 6e 74 5f 73 69 7a 	imul   ebp,DWORD PTR [rsi+0x74],0x7a69735f
    2ec5:	65 5f                	gs pop rdi
    2ec7:	74 5f                	je     2f28 <__FRAME_END__+0x271c>
    2ec9:	68 20 00 5f 5f       	push   0x5f5f0020
    2ece:	67 6c                	ins    BYTE PTR es:[edi],dx
    2ed0:	69 62 63 5f 6c 69 6b 	imul   esp,DWORD PTR [rdx+0x63],0x6b696c5f
    2ed7:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2ed9:	79 28                	jns    2f03 <__FRAME_END__+0x26f7>
    2edb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2ede:	64 29 20             	sub    DWORD PTR fs:[rax],esp
    2ee1:	5f                   	pop    rdi
    2ee2:	5f                   	pop    rdi
    2ee3:	62                   	(bad)  
    2ee4:	75 69                	jne    2f4f <__FRAME_END__+0x2743>
    2ee6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ee7:	74 69                	je     2f52 <__FRAME_END__+0x2746>
    2ee9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2eea:	5f                   	pop    rdi
    2eeb:	65 78 70             	gs js  2f5e <__FRAME_END__+0x2752>
    2eee:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    2ef3:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    2ef6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ef7:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
    2efb:	31 29                	xor    DWORD PTR [rcx],ebp
    2efd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f00:	41 54                	push   r12
    2f02:	4f                   	rex.WRXB
    2f03:	4d                   	rex.WRB
    2f04:	49                   	rex.WB
    2f05:	43 5f                	rex.XB pop r15
    2f07:	41                   	rex.B
    2f08:	43 51                	rex.XB push r9
    2f0a:	55                   	push   rbp
    2f0b:	49 52                	rex.WB push r10
    2f0d:	45 20 32             	and    BYTE PTR [r10],r14b
    2f10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f13:	55                   	push   rbp
    2f14:	49                   	rex.WB
    2f15:	4e 54                	rex.WRX push rsp
    2f17:	31 36                	xor    DWORD PTR [rsi],esi
    2f19:	5f                   	pop    rdi
    2f1a:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2f1e:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2f21:	61                   	(bad)  
    2f22:	64 64 5f             	fs fs pop rdi
    2f25:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f28:	61                   	(bad)  
    2f29:	74 2e                	je     2f59 <__FRAME_END__+0x274d>
    2f2b:	63 00                	movsxd eax,DWORD PTR [rax]
    2f2d:	5f                   	pop    rdi
    2f2e:	5f                   	pop    rdi
    2f2f:	49                   	rex.WB
    2f30:	4e 54                	rex.WRX push rsp
    2f32:	36 34 5f             	ss xor al,0x5f
    2f35:	4d                   	rex.WRB
    2f36:	41 58                	pop    r8
    2f38:	5f                   	pop    rdi
    2f39:	5f                   	pop    rdi
    2f3a:	20 30                	and    BYTE PTR [rax],dh
    2f3c:	78 37                	js     2f75 <__FRAME_END__+0x2769>
    2f3e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2f45:	66 66 66 66 66 66 66 
    2f4c:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2f51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f52:	65 65 64 5f          	gs gs fs pop rdi
    2f56:	73 69                	jae    2fc1 <__FRAME_END__+0x27b5>
    2f58:	7a 65                	jp     2fbf <__FRAME_END__+0x27b3>
    2f5a:	5f                   	pop    rdi
    2f5b:	74 20                	je     2f7d <__FRAME_END__+0x2771>
    2f5d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f60:	62                   	(bad)  
    2f61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f62:	73 28                	jae    2f8c <__FRAME_END__+0x2780>
    2f64:	70 74                	jo     2fda <__FRAME_END__+0x27ce>
    2f66:	72 29                	jb     2f91 <__FRAME_END__+0x2785>
    2f68:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f6b:	62                   	(bad)  
    2f6c:	75 69                	jne    2fd7 <__FRAME_END__+0x27cb>
    2f6e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f6f:	74 69                	je     2fda <__FRAME_END__+0x27ce>
    2f71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f72:	5f                   	pop    rdi
    2f73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f74:	62                   	(bad)  
    2f75:	6a 65                	push   0x65
    2f77:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2f7b:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2f82:	72 2c                	jb     2fb0 <__FRAME_END__+0x27a4>
    2f84:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f87:	55                   	push   rbp
    2f88:	53                   	push   rbx
    2f89:	45 5f                	rex.RB pop r15
    2f8b:	46                   	rex.RX
    2f8c:	4f 52                	rex.WRXB push r10
    2f8e:	54                   	push   rsp
    2f8f:	49                   	rex.WB
    2f90:	46 59                	rex.RX pop rcx
    2f92:	5f                   	pop    rdi
    2f93:	4c                   	rex.WR
    2f94:	45 56                	rex.RB push r14
    2f96:	45                   	rex.RB
    2f97:	4c 20 3e             	rex.WR and BYTE PTR [rsi],r15b
    2f9a:	20 31                	and    BYTE PTR [rcx],dh
    2f9c:	29 00                	sub    DWORD PTR [rax],eax
    2f9e:	5f                   	pop    rdi
    2f9f:	5f                   	pop    rdi
    2fa0:	55                   	push   rbp
    2fa1:	57                   	push   rdi
    2fa2:	4f 52                	rex.WRXB push r10
    2fa4:	44 5f                	rex.R pop rdi
    2fa6:	54                   	push   rsp
    2fa7:	59                   	pop    rcx
    2fa8:	50                   	push   rax
    2fa9:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    2fad:	73 69                	jae    3018 <__FRAME_END__+0x280c>
    2faf:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2fb1:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2fb7:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2fbb:	74 00                	je     2fbd <__FRAME_END__+0x27b1>
    2fbd:	5f                   	pop    rdi
    2fbe:	5f                   	pop    rdi
    2fbf:	47                   	rex.RXB
    2fc0:	4c                   	rex.WR
    2fc1:	49                   	rex.WB
    2fc2:	42                   	rex.X
    2fc3:	43 5f                	rex.XB pop r15
    2fc5:	4d                   	rex.WRB
    2fc6:	49                   	rex.WB
    2fc7:	4e                   	rex.WRX
    2fc8:	4f 52                	rex.WRXB push r10
    2fca:	5f                   	pop    rdi
    2fcb:	5f                   	pop    rdi
    2fcc:	20 32                	and    BYTE PTR [rdx],dh
    2fce:	37                   	(bad)  
    2fcf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fd2:	53                   	push   rbx
    2fd3:	45                   	rex.RB
    2fd4:	47 5f                	rex.RXB pop r15
    2fd6:	47 53                	rex.RXB push r11
    2fd8:	20 31                	and    BYTE PTR [rcx],dh
    2fda:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fdd:	53                   	push   rbx
    2fde:	53                   	push   rbx
    2fdf:	45 5f                	rex.RB pop r15
    2fe1:	4d                   	rex.WRB
    2fe2:	41 54                	push   r12
    2fe4:	48 5f                	rex.W pop rdi
    2fe6:	5f                   	pop    rdi
    2fe7:	20 31                	and    BYTE PTR [rcx],dh
    2fe9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fec:	4e                   	rex.WRX
    2fed:	4c                   	rex.WR
    2fee:	49                   	rex.WB
    2fef:	4e                   	rex.WRX
    2ff0:	4b 5f                	rex.WXB pop r15
    2ff2:	54                   	push   rsp
    2ff3:	5f                   	pop    rdi
    2ff4:	54                   	push   rsp
    2ff5:	59                   	pop    rcx
    2ff6:	50                   	push   rax
    2ff7:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2ffb:	53                   	push   rbx
    2ffc:	59                   	pop    rcx
    2ffd:	53                   	push   rbx
    2ffe:	43                   	rex.XB
    2fff:	41                   	rex.B
    3000:	4c                   	rex.WR
    3001:	4c 5f                	rex.WR pop rdi
    3003:	55                   	push   rbp
    3004:	4c                   	rex.WR
    3005:	4f                   	rex.WRXB
    3006:	4e                   	rex.WRX
    3007:	47 5f                	rex.RXB pop r15
    3009:	54                   	push   rsp
    300a:	59                   	pop    rcx
    300b:	50                   	push   rax
    300c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3010:	55                   	push   rbp
    3011:	49                   	rex.WB
    3012:	4e 54                	rex.WRX push rsp
    3014:	4d                   	rex.WRB
    3015:	41 58                	pop    r8
    3017:	5f                   	pop    rdi
    3018:	54                   	push   rsp
    3019:	59                   	pop    rcx
    301a:	50                   	push   rax
    301b:	45 5f                	rex.RB pop r15
    301d:	5f                   	pop    rdi
    301e:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3022:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3026:	73 69                	jae    3091 <__FRAME_END__+0x2885>
    3028:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    302a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    302f:	74 00                	je     3031 <__FRAME_END__+0x2825>
    3031:	5f                   	pop    rdi
    3032:	5f                   	pop    rdi
    3033:	55                   	push   rbp
    3034:	53                   	push   rbx
    3035:	45 5f                	rex.RB pop r15
    3037:	58                   	pop    rax
    3038:	4f 50                	rex.WRXB push r8
    303a:	45                   	rex.RB
    303b:	4e 32 4b 00          	rex.WRX xor r9b,BYTE PTR [rbx+0x0]
    303f:	5f                   	pop    rdi
    3040:	5f                   	pop    rdi
    3041:	73 74                	jae    30b7 <__FRAME_END__+0x28ab>
    3043:	75 62                	jne    30a7 <__FRAME_END__+0x289b>
    3045:	5f                   	pop    rdi
    3046:	66 63 68 66          	movsxd bp,DWORD PTR [rax+0x66]
    304a:	6c                   	ins    BYTE PTR es:[rdi],dx
    304b:	61                   	(bad)  
    304c:	67 73 20             	addr32 jae 306f <__FRAME_END__+0x2863>
    304f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3052:	4c                   	rex.WR
    3053:	45                   	rex.RB
    3054:	41                   	rex.B
    3055:	46 20 2c 20          	and    BYTE PTR [rax+r12*1],r13b
    3059:	5f                   	pop    rdi
    305a:	5f                   	pop    rdi
    305b:	6c                   	ins    BYTE PTR es:[rdi],dx
    305c:	65 61                	gs (bad) 
    305e:	66 5f                	pop    di
    3060:	5f                   	pop    rdi
    3061:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3064:	44                   	rex.R
    3065:	45                   	rex.RB
    3066:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    3069:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    306c:	41 58                	pop    r8
    306e:	5f                   	pop    rdi
    306f:	45 58                	rex.RB pop r8
    3071:	50                   	push   rax
    3072:	5f                   	pop    rdi
    3073:	5f                   	pop    rdi
    3074:	20 36                	and    BYTE PTR [rsi],dh
    3076:	31 34 35 00 5f 49 4f 	xor    DWORD PTR [rsi*1+0x4f495f00],esi
    307d:	5f                   	pop    rdi
    307e:	4c                   	rex.WR
    307f:	45                   	rex.RB
    3080:	46 54                	rex.RX push rsp
    3082:	20 30                	and    BYTE PTR [rax],dh
    3084:	32 00                	xor    al,BYTE PTR [rax]
    3086:	5f                   	pop    rdi
    3087:	5f                   	pop    rdi
    3088:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    308a:	72 74                	jb     3100 <__FRAME_END__+0x28f4>
    308c:	69 66 79 5f 66 75 6e 	imul   esp,DWORD PTR [rsi+0x79],0x6e75665f
    3093:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    3097:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3098:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    309b:	65 78 74             	gs js  3112 <__FRAME_END__+0x2906>
    309e:	65 72 6e             	gs jb  310f <__FRAME_END__+0x2903>
    30a1:	5f                   	pop    rdi
    30a2:	61                   	(bad)  
    30a3:	6c                   	ins    BYTE PTR es:[rdi],dx
    30a4:	77 61                	ja     3107 <__FRAME_END__+0x28fb>
    30a6:	79 73                	jns    311b <__FRAME_END__+0x290f>
    30a8:	5f                   	pop    rdi
    30a9:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    30b0:	5f                   	pop    rdi
    30b1:	5f                   	pop    rdi
    30b2:	61                   	(bad)  
    30b3:	74 74                	je     3129 <__FRAME_END__+0x291d>
    30b5:	72 69                	jb     3120 <__FRAME_END__+0x2914>
    30b7:	62                   	(bad)  
    30b8:	75 74                	jne    312e <__FRAME_END__+0x2922>
    30ba:	65 5f                	gs pop rdi
    30bc:	61                   	(bad)  
    30bd:	72 74                	jb     3133 <__FRAME_END__+0x2927>
    30bf:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    30c6:	5f                   	pop    rdi
    30c7:	5f                   	pop    rdi
    30c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    30cb:	46                   	rex.RX
    30cc:	4c 54                	rex.WR push rsp
    30ce:	5f                   	pop    rdi
    30cf:	45 50                	rex.RB push r8
    30d1:	53                   	push   rbx
    30d2:	49                   	rex.WB
    30d3:	4c                   	rex.WR
    30d4:	4f                   	rex.WRXB
    30d5:	4e 5f                	rex.WRX pop rdi
    30d7:	5f                   	pop    rdi
    30d8:	20 31                	and    BYTE PTR [rcx],dh
    30da:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    30dd:	32 30                	xor    dh,BYTE PTR [rax]
    30df:	39 32                	cmp    DWORD PTR [rdx],esi
    30e1:	38 39                	cmp    BYTE PTR [rcx],bh
    30e3:	35 35 30 37 38       	xor    eax,0x38373035
    30e8:	31 32                	xor    DWORD PTR [rdx],esi
    30ea:	35 30 30 30 30       	xor    eax,0x30303030
    30ef:	30 30                	xor    BYTE PTR [rax],dh
    30f1:	30 30                	xor    BYTE PTR [rax],dh
    30f3:	30 30                	xor    BYTE PTR [rax],dh
    30f5:	30 30                	xor    BYTE PTR [rax],dh
    30f7:	30 30                	xor    BYTE PTR [rax],dh
    30f9:	30 30                	xor    BYTE PTR [rax],dh
    30fb:	30 30                	xor    BYTE PTR [rax],dh
    30fd:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    3100:	37                   	(bad)  
    3101:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    3105:	53                   	push   rbx
    3106:	49                   	rex.WB
    3107:	47 5f                	rex.RXB pop r15
    3109:	41 54                	push   r12
    310b:	4f                   	rex.WRXB
    310c:	4d                   	rex.WRB
    310d:	49                   	rex.WB
    310e:	43 5f                	rex.XB pop r15
    3110:	57                   	push   rdi
    3111:	49                   	rex.WB
    3112:	44 54                	rex.R push rsp
    3114:	48 5f                	rex.W pop rdi
    3116:	5f                   	pop    rdi
    3117:	20 33                	and    BYTE PTR [rbx],dh
    3119:	32 00                	xor    al,BYTE PTR [rax]
    311b:	5f                   	pop    rdi
    311c:	5f                   	pop    rdi
    311d:	43                   	rex.XB
    311e:	4f                   	rex.WRXB
    311f:	4e                   	rex.WRX
    3120:	43                   	rex.XB
    3121:	41 54                	push   r12
    3123:	28 78 2c             	sub    BYTE PTR [rax+0x2c],bh
    3126:	79 29                	jns    3151 <__FRAME_END__+0x2945>
    3128:	20 78 20             	and    BYTE PTR [rax+0x20],bh
    312b:	23 23                	and    esp,DWORD PTR [rbx]
    312d:	20 79 00             	and    BYTE PTR [rcx+0x0],bh
    3130:	5f                   	pop    rdi
    3131:	5f                   	pop    rdi
    3132:	61                   	(bad)  
    3133:	74 74                	je     31a9 <__FRAME_END__+0x299d>
    3135:	72 69                	jb     31a0 <__FRAME_END__+0x2994>
    3137:	62                   	(bad)  
    3138:	75 74                	jne    31ae <__FRAME_END__+0x29a2>
    313a:	65 5f                	gs pop rdi
    313c:	64 65 70 72          	fs gs jo 31b2 <__FRAME_END__+0x29a6>
    3140:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    3144:	65 64 5f             	gs fs pop rdi
    3147:	6d                   	ins    DWORD PTR es:[rdi],dx
    3148:	73 67                	jae    31b1 <__FRAME_END__+0x29a5>
    314a:	5f                   	pop    rdi
    314b:	5f                   	pop    rdi
    314c:	28 6d 73             	sub    BYTE PTR [rbp+0x73],ch
    314f:	67 29 20             	sub    DWORD PTR [eax],esp
    3152:	5f                   	pop    rdi
    3153:	5f                   	pop    rdi
    3154:	61                   	(bad)  
    3155:	74 74                	je     31cb <__FRAME_END__+0x29bf>
    3157:	72 69                	jb     31c2 <__FRAME_END__+0x29b6>
    3159:	62                   	(bad)  
    315a:	75 74                	jne    31d0 <__FRAME_END__+0x29c4>
    315c:	65 5f                	gs pop rdi
    315e:	5f                   	pop    rdi
    315f:	20 28                	and    BYTE PTR [rax],ch
    3161:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3164:	64 65 70 72          	fs gs jo 31da <__FRAME_END__+0x29ce>
    3168:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    316c:	65 64 5f             	gs fs pop rdi
    316f:	5f                   	pop    rdi
    3170:	20 28                	and    BYTE PTR [rax],ch
    3172:	6d                   	ins    DWORD PTR es:[rdi],dx
    3173:	73 67                	jae    31dc <__FRAME_END__+0x29d0>
    3175:	29 29                	sub    DWORD PTR [rcx],ebp
    3177:	29 00                	sub    DWORD PTR [rax],eax
    3179:	5f                   	pop    rdi
    317a:	5f                   	pop    rdi
    317b:	53                   	push   rbx
    317c:	48 52                	rex.W push rdx
    317e:	54                   	push   rsp
    317f:	5f                   	pop    rdi
    3180:	4d                   	rex.WRB
    3181:	41 58                	pop    r8
    3183:	5f                   	pop    rdi
    3184:	5f                   	pop    rdi
    3185:	20 30                	and    BYTE PTR [rax],dh
    3187:	78 37                	js     31c0 <__FRAME_END__+0x29b4>
    3189:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    318f:	47                   	rex.RXB
    3190:	43                   	rex.XB
    3191:	43 5f                	rex.XB pop r15
    3193:	41 54                	push   r12
    3195:	4f                   	rex.WRXB
    3196:	4d                   	rex.WRB
    3197:	49                   	rex.WB
    3198:	43 5f                	rex.XB pop r15
    319a:	57                   	push   rdi
    319b:	43                   	rex.XB
    319c:	48                   	rex.W
    319d:	41 52                	push   r10
    319f:	5f                   	pop    rdi
    31a0:	54                   	push   rsp
    31a1:	5f                   	pop    rdi
    31a2:	4c                   	rex.WR
    31a3:	4f                   	rex.WRXB
    31a4:	43                   	rex.XB
    31a5:	4b 5f                	rex.WXB pop r15
    31a7:	46 52                	rex.RX push rdx
    31a9:	45                   	rex.RB
    31aa:	45 20 32             	and    BYTE PTR [r10],r14b
    31ad:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    31b0:	4f 5f                	rex.WRXB pop r15
    31b2:	50                   	push   rax
    31b3:	45                   	rex.RB
    31b4:	4e                   	rex.WRX
    31b5:	44                   	rex.R
    31b6:	49                   	rex.WB
    31b7:	4e                   	rex.WRX
    31b8:	47 5f                	rex.RXB pop r15
    31ba:	4f 55                	rex.WRXB push r13
    31bc:	54                   	push   rsp
    31bd:	50                   	push   rax
    31be:	55                   	push   rbp
    31bf:	54                   	push   rsp
    31c0:	5f                   	pop    rdi
    31c1:	43                   	rex.XB
    31c2:	4f 55                	rex.WRXB push r13
    31c4:	4e 54                	rex.WRX push rsp
    31c6:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    31c9:	70 29                	jo     31f4 <__FRAME_END__+0x29e8>
    31cb:	20 28                	and    BYTE PTR [rax],ch
    31cd:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    31d0:	70 29                	jo     31fb <__FRAME_END__+0x29ef>
    31d2:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    31d7:	5f                   	pop    rdi
    31d8:	77 72                	ja     324c <__FRAME_END__+0x2a40>
    31da:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    31e1:	20 
    31e2:	2d 20 28 5f 66       	sub    eax,0x665f2820
    31e7:	70 29                	jo     3212 <__FRAME_END__+0x2a06>
    31e9:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    31ee:	5f                   	pop    rdi
    31ef:	77 72                	ja     3263 <__FRAME_END__+0x2a57>
    31f1:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    31f8:	65 
    31f9:	29 00                	sub    DWORD PTR [rax],eax
    31fb:	5f                   	pop    rdi
    31fc:	49                   	rex.WB
    31fd:	4f 5f                	rex.WRXB pop r15
    31ff:	55                   	push   rbp
    3200:	53                   	push   rbx
    3201:	45 52                	rex.RB push r10
    3203:	5f                   	pop    rdi
    3204:	4c                   	rex.WR
    3205:	4f                   	rex.WRXB
    3206:	43                   	rex.XB
    3207:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    320a:	78 38                	js     3244 <__FRAME_END__+0x2a38>
    320c:	30 30                	xor    BYTE PTR [rax],dh
    320e:	30 00                	xor    BYTE PTR [rax],al
    3210:	5f                   	pop    rdi
    3211:	5f                   	pop    rdi
    3212:	4f 52                	rex.WRXB push r10
    3214:	44                   	rex.R
    3215:	45 52                	rex.RB push r10
    3217:	5f                   	pop    rdi
    3218:	50                   	push   rax
    3219:	44 50                	rex.R push rax
    321b:	5f                   	pop    rdi
    321c:	45                   	rex.RB
    321d:	4e                   	rex.WRX
    321e:	44                   	rex.R
    321f:	49                   	rex.WB
    3220:	41                   	rex.B
    3221:	4e 5f                	rex.WRX pop rdi
    3223:	5f                   	pop    rdi
    3224:	20 33                	and    BYTE PTR [rbx],dh
    3226:	34 31                	xor    al,0x31
    3228:	32 00                	xor    al,BYTE PTR [rax]
    322a:	5f                   	pop    rdi
    322b:	49                   	rex.WB
    322c:	4f 5f                	rex.WRXB pop r15
    322e:	55                   	push   rbp
    322f:	4e                   	rex.WRX
    3230:	49                   	rex.WB
    3231:	46                   	rex.RX
    3232:	49                   	rex.WB
    3233:	45                   	rex.RB
    3234:	44 5f                	rex.R pop rdi
    3236:	4a 55                	rex.WX push rbp
    3238:	4d 50                	rex.WRB push r8
    323a:	54                   	push   rsp
    323b:	41                   	rex.B
    323c:	42                   	rex.X
    323d:	4c                   	rex.WR
    323e:	45 53                	rex.RB push r11
    3240:	20 31                	and    BYTE PTR [rcx],dh
    3242:	00 54 4d 50          	add    BYTE PTR [rbp+rcx*2+0x50],dl
    3246:	5f                   	pop    rdi
    3247:	4d                   	rex.WRB
    3248:	41 58                	pop    r8
    324a:	20 32                	and    BYTE PTR [rdx],dh
    324c:	33 38                	xor    edi,DWORD PTR [rax]
    324e:	33 32                	xor    esi,DWORD PTR [rdx]
    3250:	38 00                	cmp    BYTE PTR [rax],al
    3252:	5f                   	pop    rdi
    3253:	49                   	rex.WB
    3254:	4f 5f                	rex.WRXB pop r15
    3256:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3257:	65 65 64 5f          	gs gs fs pop rdi
    325b:	6c                   	ins    BYTE PTR es:[rdi],dx
    325c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    325d:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    3260:	5f                   	pop    rdi
    3261:	66 70 29             	data16 jo 328d <__FRAME_END__+0x2a81>
    3264:	20 28                	and    BYTE PTR [rax],ch
    3266:	28 28                	sub    BYTE PTR [rax],ch
    3268:	5f                   	pop    rdi
    3269:	66 70 29             	data16 jo 3295 <__FRAME_END__+0x2a89>
    326c:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    3271:	61                   	(bad)  
    3272:	67 73 32             	addr32 jae 32a7 <__FRAME_END__+0x2a9b>
    3275:	20 26                	and    BYTE PTR [rsi],ah
    3277:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    327a:	4f 5f                	rex.WRXB pop r15
    327c:	46                   	rex.RX
    327d:	4c                   	rex.WR
    327e:	41                   	rex.B
    327f:	47 53                	rex.RXB push r11
    3281:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    3284:	45                   	rex.RB
    3285:	45                   	rex.RB
    3286:	44 5f                	rex.R pop rdi
    3288:	4c                   	rex.WR
    3289:	4f                   	rex.WRXB
    328a:	43                   	rex.XB
    328b:	4b 29 20             	rex.WXB sub QWORD PTR [r8],rsp
    328e:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 2962b4 <_end+0x9529c>
    3294:	5f                   	pop    rdi
    3295:	5f                   	pop    rdi
    3296:	46                   	rex.RX
    3297:	4c 54                	rex.WR push rsp
    3299:	5f                   	pop    rdi
    329a:	44                   	rex.R
    329b:	45                   	rex.RB
    329c:	43                   	rex.XB
    329d:	49                   	rex.WB
    329e:	4d                   	rex.WRB
    329f:	41                   	rex.B
    32a0:	4c 5f                	rex.WR pop rdi
    32a2:	44                   	rex.R
    32a3:	49                   	rex.WB
    32a4:	47 5f                	rex.RXB pop r15
    32a6:	5f                   	pop    rdi
    32a7:	20 39                	and    BYTE PTR [rcx],bh
    32a9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32ac:	77 61                	ja     330f <__FRAME_END__+0x2b03>
    32ae:	72 6e                	jb     331e <__FRAME_END__+0x2b12>
    32b0:	64 65 63 6c 28 6e    	fs movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    32b6:	61                   	(bad)  
    32b7:	6d                   	ins    DWORD PTR es:[rdi],dx
    32b8:	65 2c 6d             	gs sub al,0x6d
    32bb:	73 67                	jae    3324 <__FRAME_END__+0x2b18>
    32bd:	29 20                	sub    DWORD PTR [rax],esp
    32bf:	65 78 74             	gs js  3336 <__FRAME_END__+0x2b2a>
    32c2:	65 72 6e             	gs jb  3333 <__FRAME_END__+0x2b27>
    32c5:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    32c8:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    32cf:	20 
    32d0:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    32d3:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    32da:	74 
    32db:	74 72                	je     334f <__FRAME_END__+0x2b43>
    32dd:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    32e4:	28 28                	sub    BYTE PTR [rax],ch
    32e6:	5f                   	pop    rdi
    32e7:	5f                   	pop    rdi
    32e8:	77 61                	ja     334b <__FRAME_END__+0x2b3f>
    32ea:	72 6e                	jb     335a <__FRAME_END__+0x2b4e>
    32ec:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    32f3:	6d                   	ins    DWORD PTR es:[rdi],dx
    32f4:	73 67                	jae    335d <__FRAME_END__+0x2b51>
    32f6:	29 29                	sub    DWORD PTR [rcx],ebp
    32f8:	29 00                	sub    DWORD PTR [rax],eax
    32fa:	5f                   	pop    rdi
    32fb:	5f                   	pop    rdi
    32fc:	46                   	rex.RX
    32fd:	4c 54                	rex.WR push rsp
    32ff:	36 34 5f             	ss xor al,0x5f
    3302:	4d                   	rex.WRB
    3303:	41 58                	pop    r8
    3305:	5f                   	pop    rdi
    3306:	31 30                	xor    DWORD PTR [rax],esi
    3308:	5f                   	pop    rdi
    3309:	45 58                	rex.RB pop r8
    330b:	50                   	push   rax
    330c:	5f                   	pop    rdi
    330d:	5f                   	pop    rdi
    330e:	20 33                	and    BYTE PTR [rbx],dh
    3310:	30 38                	xor    BYTE PTR [rax],bh
    3312:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3315:	53                   	push   rbx
    3316:	54                   	push   rsp
    3317:	52                   	push   rdx
    3318:	49                   	rex.WB
    3319:	4e                   	rex.WRX
    331a:	47 28 78 29          	rex.RXB sub BYTE PTR [r8+0x29],r15b
    331e:	20 23                	and    BYTE PTR [rbx],ah
    3320:	78 00                	js     3322 <__FRAME_END__+0x2b16>
    3322:	5f                   	pop    rdi
    3323:	5f                   	pop    rdi
    3324:	4c                   	rex.WR
    3325:	44                   	rex.R
    3326:	42                   	rex.X
    3327:	4c 5f                	rex.WR pop rdi
    3329:	4d                   	rex.WRB
    332a:	49                   	rex.WB
    332b:	4e 5f                	rex.WRX pop rdi
    332d:	45 58                	rex.RB pop r8
    332f:	50                   	push   rax
    3330:	5f                   	pop    rdi
    3331:	5f                   	pop    rdi
    3332:	20 28                	and    BYTE PTR [rax],ch
    3334:	2d 31 36 33 38       	sub    eax,0x38333631
    3339:	31 29                	xor    DWORD PTR [rcx],ebp
    333b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    333e:	57                   	push   rdi
    333f:	49                   	rex.WB
    3340:	4e 54                	rex.WRX push rsp
    3342:	5f                   	pop    rdi
    3343:	57                   	push   rdi
    3344:	49                   	rex.WB
    3345:	44 54                	rex.R push rsp
    3347:	48 5f                	rex.W pop rdi
    3349:	5f                   	pop    rdi
    334a:	20 33                	and    BYTE PTR [rbx],dh
    334c:	32 00                	xor    al,BYTE PTR [rax]
    334e:	5f                   	pop    rdi
    334f:	49                   	rex.WB
    3350:	4f 5f                	rex.WRXB pop r15
    3352:	53                   	push   rbx
    3353:	48                   	rex.W
    3354:	4f 57                	rex.WRXB push r15
    3356:	50                   	push   rax
    3357:	4f 53                	rex.WRXB push r11
    3359:	20 30                	and    BYTE PTR [rax],dh
    335b:	32 30                	xor    dh,BYTE PTR [rax]
    335d:	30 30                	xor    BYTE PTR [rax],dh
    335f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3362:	4f 5f                	rex.WRXB pop r15
    3364:	72 65                	jb     33cb <__FRAME_END__+0x2bbf>
    3366:	61                   	(bad)  
    3367:	64 5f                	fs pop rdi
    3369:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    336b:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    336f:	46                   	rex.RX
    3370:	4c 54                	rex.WR push rsp
    3372:	36 34 58             	ss xor al,0x58
    3375:	5f                   	pop    rdi
    3376:	4d                   	rex.WRB
    3377:	49                   	rex.WB
    3378:	4e 5f                	rex.WRX pop rdi
    337a:	5f                   	pop    rdi
    337b:	20 33                	and    BYTE PTR [rbx],dh
    337d:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    3380:	32 31                	xor    dh,BYTE PTR [rcx]
    3382:	30 33                	xor    BYTE PTR [rbx],dh
    3384:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    3387:	31 31                	xor    DWORD PTR [rcx],esi
    3389:	32 30                	xor    dh,BYTE PTR [rax]
    338b:	39 33                	cmp    DWORD PTR [rbx],esi
    338d:	35 30 36 32 36       	xor    eax,0x36323630
    3392:	32 36                	xor    dh,BYTE PTR [rsi]
    3394:	37                   	(bad)  
    3395:	37                   	(bad)  
    3396:	38 31                	cmp    BYTE PTR [rcx],dh
    3398:	37                   	(bad)  
    3399:	33 32                	xor    esi,DWORD PTR [rdx]
    339b:	31 37                	xor    DWORD PTR [rdi],esi
    339d:	35 32 36 30 65       	xor    eax,0x65303632
    33a2:	2d 34 39 33 32       	sub    eax,0x32333934
    33a7:	46                   	rex.RX
    33a8:	36 34 78             	ss xor al,0x78
    33ab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    33ae:	4f 53                	rex.WRXB push r11
    33b0:	5f                   	pop    rdi
    33b1:	4f 55                	rex.WRXB push r13
    33b3:	54                   	push   rsp
    33b4:	50                   	push   rax
    33b5:	55                   	push   rbp
    33b6:	54                   	push   rsp
    33b7:	20 32                	and    BYTE PTR [rdx],dh
    33b9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    33bc:	49                   	rex.WB
    33bd:	4e 54                	rex.WRX push rsp
    33bf:	5f                   	pop    rdi
    33c0:	46                   	rex.RX
    33c1:	41 53                	push   r11
    33c3:	54                   	push   rsp
    33c4:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    33c7:	41 58                	pop    r8
    33c9:	5f                   	pop    rdi
    33ca:	5f                   	pop    rdi
    33cb:	20 30                	and    BYTE PTR [rax],dh
    33cd:	78 37                	js     3406 <__FRAME_END__+0x2bfa>
    33cf:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    33d3:	52                   	push   rdx
    33d4:	45                   	rex.RB
    33d5:	47                   	rex.RXB
    33d6:	49 53                	rex.WB push r11
    33d8:	54                   	push   rsp
    33d9:	45 52                	rex.RB push r10
    33db:	5f                   	pop    rdi
    33dc:	50                   	push   rax
    33dd:	52                   	push   rdx
    33de:	45                   	rex.RB
    33df:	46                   	rex.RX
    33e0:	49 58                	rex.WB pop r8
    33e2:	5f                   	pop    rdi
    33e3:	5f                   	pop    rdi
    33e4:	20 00                	and    BYTE PTR [rax],al
    33e6:	5f                   	pop    rdi
    33e7:	5f                   	pop    rdi
    33e8:	46                   	rex.RX
    33e9:	4c 54                	rex.WR push rsp
    33eb:	33 32                	xor    esi,DWORD PTR [rdx]
    33ed:	5f                   	pop    rdi
    33ee:	45 50                	rex.RB push r8
    33f0:	53                   	push   rbx
    33f1:	49                   	rex.WB
    33f2:	4c                   	rex.WR
    33f3:	4f                   	rex.WRXB
    33f4:	4e 5f                	rex.WRX pop rdi
    33f6:	5f                   	pop    rdi
    33f7:	20 31                	and    BYTE PTR [rcx],dh
    33f9:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    33fc:	32 30                	xor    dh,BYTE PTR [rax]
    33fe:	39 32                	cmp    DWORD PTR [rdx],esi
    3400:	38 39                	cmp    BYTE PTR [rcx],bh
    3402:	35 35 30 37 38       	xor    eax,0x38373035
    3407:	31 32                	xor    DWORD PTR [rdx],esi
    3409:	35 30 30 30 30       	xor    eax,0x30303030
    340e:	30 30                	xor    BYTE PTR [rax],dh
    3410:	30 30                	xor    BYTE PTR [rax],dh
    3412:	30 30                	xor    BYTE PTR [rax],dh
    3414:	30 30                	xor    BYTE PTR [rax],dh
    3416:	30 30                	xor    BYTE PTR [rax],dh
    3418:	30 30                	xor    BYTE PTR [rax],dh
    341a:	30 30                	xor    BYTE PTR [rax],dh
    341c:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    341f:	37                   	(bad)  
    3420:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    3423:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3426:	47                   	rex.RXB
    3427:	4c                   	rex.WR
    3428:	49                   	rex.WB
    3429:	42                   	rex.X
    342a:	43 5f                	rex.XB pop r15
    342c:	49                   	rex.WB
    342d:	4e 54                	rex.WRX push rsp
    342f:	45 52                	rex.RB push r10
    3431:	4e                   	rex.WRX
    3432:	41                   	rex.B
    3433:	4c 5f                	rex.WR pop rdi
    3435:	53                   	push   rbx
    3436:	54                   	push   rsp
    3437:	41 52                	push   r10
    3439:	54                   	push   rsp
    343a:	49                   	rex.WB
    343b:	4e                   	rex.WRX
    343c:	47 5f                	rex.RXB pop r15
    343e:	48                   	rex.W
    343f:	45                   	rex.RB
    3440:	41                   	rex.B
    3441:	44                   	rex.R
    3442:	45 52                	rex.RB push r10
    3444:	5f                   	pop    rdi
    3445:	49                   	rex.WB
    3446:	4d 50                	rex.WRB push r8
    3448:	4c                   	rex.WR
    3449:	45                   	rex.RB
    344a:	4d                   	rex.WRB
    344b:	45                   	rex.RB
    344c:	4e 54                	rex.WRX push rsp
    344e:	41 54                	push   r12
    3450:	49                   	rex.WB
    3451:	4f                   	rex.WRXB
    3452:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    3455:	5f                   	pop    rdi
    3456:	5f                   	pop    rdi
    3457:	53                   	push   rbx
    3458:	57                   	push   rdi
    3459:	4f 52                	rex.WRXB push r10
    345b:	44 5f                	rex.R pop rdi
    345d:	54                   	push   rsp
    345e:	59                   	pop    rcx
    345f:	50                   	push   rax
    3460:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3465:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3469:	74 00                	je     346b <__FRAME_END__+0x2c5f>
    346b:	5f                   	pop    rdi
    346c:	5f                   	pop    rdi
    346d:	4c                   	rex.WR
    346e:	4f                   	rex.WRXB
    346f:	4e                   	rex.WRX
    3470:	47 5f                	rex.RXB pop r15
    3472:	4d                   	rex.WRB
    3473:	41 58                	pop    r8
    3475:	5f                   	pop    rdi
    3476:	5f                   	pop    rdi
    3477:	20 30                	and    BYTE PTR [rax],dh
    3479:	78 37                	js     34b2 <__FRAME_END__+0x2ca6>
    347b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3482:	66 66 66 66 66 66 66 
    3489:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    348e:	73 74                	jae    3504 <__FRAME_END__+0x2cf8>
    3490:	75 62                	jne    34f4 <__FRAME_END__+0x2ce8>
    3492:	5f                   	pop    rdi
    3493:	67 65 74 6d          	addr32 gs je 3504 <__FRAME_END__+0x2cf8>
    3497:	73 67                	jae    3500 <__FRAME_END__+0x2cf4>
    3499:	20 00                	and    BYTE PTR [rax],al
    349b:	5f                   	pop    rdi
    349c:	5f                   	pop    rdi
    349d:	44                   	rex.R
    349e:	45                   	rex.RB
    349f:	43                   	rex.XB
    34a0:	36 34 5f             	ss xor al,0x5f
    34a3:	4d                   	rex.WRB
    34a4:	41 58                	pop    r8
    34a6:	5f                   	pop    rdi
    34a7:	45 58                	rex.RB pop r8
    34a9:	50                   	push   rax
    34aa:	5f                   	pop    rdi
    34ab:	5f                   	pop    rdi
    34ac:	20 33                	and    BYTE PTR [rbx],dh
    34ae:	38 35 00 5f 5f 46    	cmp    BYTE PTR [rip+0x465f5f00],dh        # 465f93b4 <_end+0x463f839c>
    34b4:	4c 54                	rex.WR push rsp
    34b6:	33 32                	xor    esi,DWORD PTR [rdx]
    34b8:	58                   	pop    rax
    34b9:	5f                   	pop    rdi
    34ba:	4d                   	rex.WRB
    34bb:	49                   	rex.WB
    34bc:	4e 5f                	rex.WRX pop rdi
    34be:	31 30                	xor    DWORD PTR [rax],esi
    34c0:	5f                   	pop    rdi
    34c1:	45 58                	rex.RB pop r8
    34c3:	50                   	push   rax
    34c4:	5f                   	pop    rdi
    34c5:	5f                   	pop    rdi
    34c6:	20 28                	and    BYTE PTR [rax],ch
    34c8:	2d 33 30 37 29       	sub    eax,0x29373033
    34cd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    34d0:	55                   	push   rbp
    34d1:	53                   	push   rbx
    34d2:	45 5f                	rex.RB pop r15
    34d4:	50                   	push   rax
    34d5:	4f 53                	rex.WRXB push r11
    34d7:	49 58                	rex.WB pop r8
    34d9:	32 00                	xor    al,BYTE PTR [rax]
    34db:	5f                   	pop    rdi
    34dc:	49                   	rex.WB
    34dd:	4f 5f                	rex.WRXB pop r15
    34df:	55                   	push   rbp
    34e0:	4e                   	rex.WRX
    34e1:	49 54                	rex.WB push r12
    34e3:	42 55                	rex.X push rbp
    34e5:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
    34e8:	32 30                	xor    dh,BYTE PTR [rax]
    34ea:	30 30                	xor    BYTE PTR [rax],dh
    34ec:	30 00                	xor    BYTE PTR [rax],al
    34ee:	5f                   	pop    rdi
    34ef:	5f                   	pop    rdi
    34f0:	4f                   	rex.WRXB
    34f1:	46                   	rex.RX
    34f2:	46 5f                	rex.RX pop rdi
    34f4:	54                   	push   rsp
    34f5:	5f                   	pop    rdi
    34f6:	54                   	push   rsp
    34f7:	59                   	pop    rcx
    34f8:	50                   	push   rax
    34f9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    34fd:	53                   	push   rbx
    34fe:	59                   	pop    rcx
    34ff:	53                   	push   rbx
    3500:	43                   	rex.XB
    3501:	41                   	rex.B
    3502:	4c                   	rex.WR
    3503:	4c 5f                	rex.WR pop rdi
    3505:	53                   	push   rbx
    3506:	4c                   	rex.WR
    3507:	4f                   	rex.WRXB
    3508:	4e                   	rex.WRX
    3509:	47 5f                	rex.RXB pop r15
    350b:	54                   	push   rsp
    350c:	59                   	pop    rcx
    350d:	50                   	push   rax
    350e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3512:	55                   	push   rbp
    3513:	49                   	rex.WB
    3514:	4e 54                	rex.WRX push rsp
    3516:	4d                   	rex.WRB
    3517:	41 58                	pop    r8
    3519:	5f                   	pop    rdi
    351a:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    351e:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    3521:	23 23                	and    esp,DWORD PTR [rbx]
    3523:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
    3526:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3529:	43                   	rex.XB
    352a:	48                   	rex.W
    352b:	41 52                	push   r10
    352d:	33 32                	xor    esi,DWORD PTR [rdx]
    352f:	5f                   	pop    rdi
    3530:	54                   	push   rsp
    3531:	59                   	pop    rcx
    3532:	50                   	push   rax
    3533:	45 5f                	rex.RB pop r15
    3535:	5f                   	pop    rdi
    3536:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    3539:	73 69                	jae    35a4 <__FRAME_END__+0x2d98>
    353b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    353d:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3542:	74 00                	je     3544 <__FRAME_END__+0x2d38>
    3544:	5f                   	pop    rdi
    3545:	5f                   	pop    rdi
    3546:	46                   	rex.RX
    3547:	4c 54                	rex.WR push rsp
    3549:	36 34 58             	ss xor al,0x58
    354c:	5f                   	pop    rdi
    354d:	48                   	rex.W
    354e:	41 53                	push   r11
    3550:	5f                   	pop    rdi
    3551:	49                   	rex.WB
    3552:	4e                   	rex.WRX
    3553:	46                   	rex.RX
    3554:	49                   	rex.WB
    3555:	4e                   	rex.WRX
    3556:	49 54                	rex.WB push r12
    3558:	59                   	pop    rcx
    3559:	5f                   	pop    rdi
    355a:	5f                   	pop    rdi
    355b:	20 31                	and    BYTE PTR [rcx],dh
    355d:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    3560:	49 54                	rex.WB push r12
    3562:	53                   	push   rbx
    3563:	5f                   	pop    rdi
    3564:	47 5f                	rex.RXB pop r15
    3566:	43                   	rex.XB
    3567:	4f                   	rex.WRXB
    3568:	4e                   	rex.WRX
    3569:	46                   	rex.RX
    356a:	49                   	rex.WB
    356b:	47 5f                	rex.RXB pop r15
    356d:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    3570:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3573:	44                   	rex.R
    3574:	45                   	rex.RB
    3575:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    3578:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    357b:	49                   	rex.WB
    357c:	4e 5f                	rex.WRX pop rdi
    357e:	5f                   	pop    rdi
    357f:	20 31                	and    BYTE PTR [rcx],dh
    3581:	45 2d 36 31 34 33    	rex.RB sub eax,0x33343136
    3587:	44                   	rex.R
    3588:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    358c:	46                   	rex.RX
    358d:	4c 54                	rex.WR push rsp
    358f:	33 32                	xor    esi,DWORD PTR [rdx]
    3591:	58                   	pop    rax
    3592:	5f                   	pop    rdi
    3593:	4d                   	rex.WRB
    3594:	49                   	rex.WB
    3595:	4e 5f                	rex.WRX pop rdi
    3597:	45 58                	rex.RB pop r8
    3599:	50                   	push   rax
    359a:	5f                   	pop    rdi
    359b:	5f                   	pop    rdi
    359c:	20 28                	and    BYTE PTR [rax],ch
    359e:	2d 31 30 32 31       	sub    eax,0x31323031
    35a3:	29 00                	sub    DWORD PTR [rax],eax
    35a5:	5f                   	pop    rdi
    35a6:	49                   	rex.WB
    35a7:	4f 5f                	rex.WRXB pop r15
    35a9:	67 65 74 63          	addr32 gs je 3610 <__FRAME_END__+0x2e04>
    35ad:	5f                   	pop    rdi
    35ae:	75 6e                	jne    361e <__FRAME_END__+0x2e12>
    35b0:	6c                   	ins    BYTE PTR es:[rdi],dx
    35b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35b2:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    35b5:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    35b9:	70 29                	jo     35e4 <__FRAME_END__+0x2dd8>
    35bb:	20 28                	and    BYTE PTR [rax],ch
    35bd:	5f                   	pop    rdi
    35be:	49                   	rex.WB
    35bf:	4f 5f                	rex.WRXB pop r15
    35c1:	42                   	rex.X
    35c2:	45 20 28             	and    BYTE PTR [r8],r13b
    35c5:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    35c8:	70 29                	jo     35f3 <__FRAME_END__+0x2de7>
    35ca:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35cf:	5f                   	pop    rdi
    35d0:	72 65                	jb     3637 <__FRAME_END__+0x2e2b>
    35d2:	61                   	(bad)  
    35d3:	64 5f                	fs pop rdi
    35d5:	70 74                	jo     364b <__FRAME_END__+0x2e3f>
    35d7:	72 20                	jb     35f9 <__FRAME_END__+0x2ded>
    35d9:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    35df:	70 29                	jo     360a <__FRAME_END__+0x2dfe>
    35e1:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35e6:	5f                   	pop    rdi
    35e7:	72 65                	jb     364e <__FRAME_END__+0x2e42>
    35e9:	61                   	(bad)  
    35ea:	64 5f                	fs pop rdi
    35ec:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    35ee:	64 2c 20             	fs sub al,0x20
    35f1:	30 29                	xor    BYTE PTR [rcx],ch
    35f3:	20 3f                	and    BYTE PTR [rdi],bh
    35f5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    35f8:	75 66                	jne    3660 <__FRAME_END__+0x2e54>
    35fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    35fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35fc:	77 20                	ja     361e <__FRAME_END__+0x2e12>
    35fe:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3601:	70 29                	jo     362c <__FRAME_END__+0x2e20>
    3603:	20 3a                	and    BYTE PTR [rdx],bh
    3605:	20 2a                	and    BYTE PTR [rdx],ch
    3607:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    360a:	73 69                	jae    3675 <__FRAME_END__+0x2e69>
    360c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    360e:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3613:	61                   	(bad)  
    3614:	72 20                	jb     3636 <__FRAME_END__+0x2e2a>
    3616:	2a 29                	sub    ch,BYTE PTR [rcx]
    3618:	20 28                	and    BYTE PTR [rax],ch
    361a:	5f                   	pop    rdi
    361b:	66 70 29             	data16 jo 3647 <__FRAME_END__+0x2e3b>
    361e:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3623:	5f                   	pop    rdi
    3624:	72 65                	jb     368b <__FRAME_END__+0x2e7f>
    3626:	61                   	(bad)  
    3627:	64 5f                	fs pop rdi
    3629:	70 74                	jo     369f <__FRAME_END__+0x2e93>
    362b:	72 2b                	jb     3658 <__FRAME_END__+0x2e4c>
    362d:	2b 29                	sub    ebp,DWORD PTR [rcx]
    362f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3632:	49                   	rex.WB
    3633:	4e 54                	rex.WRX push rsp
    3635:	50                   	push   rax
    3636:	54                   	push   rsp
    3637:	52                   	push   rdx
    3638:	5f                   	pop    rdi
    3639:	57                   	push   rdi
    363a:	49                   	rex.WB
    363b:	44 54                	rex.R push rsp
    363d:	48 5f                	rex.W pop rdi
    363f:	5f                   	pop    rdi
    3640:	20 36                	and    BYTE PTR [rsi],dh
    3642:	34 00                	xor    al,0x0
    3644:	5f                   	pop    rdi
    3645:	5f                   	pop    rdi
    3646:	49                   	rex.WB
    3647:	4e                   	rex.WRX
    3648:	4f 5f                	rex.WRXB pop r15
    364a:	54                   	push   rsp
    364b:	5f                   	pop    rdi
    364c:	54                   	push   rsp
    364d:	59                   	pop    rcx
    364e:	50                   	push   rax
    364f:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3653:	53                   	push   rbx
    3654:	59                   	pop    rcx
    3655:	53                   	push   rbx
    3656:	43                   	rex.XB
    3657:	41                   	rex.B
    3658:	4c                   	rex.WR
    3659:	4c 5f                	rex.WR pop rdi
    365b:	55                   	push   rbp
    365c:	4c                   	rex.WR
    365d:	4f                   	rex.WRXB
    365e:	4e                   	rex.WRX
    365f:	47 5f                	rex.RXB pop r15
    3661:	54                   	push   rsp
    3662:	59                   	pop    rcx
    3663:	50                   	push   rax
    3664:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3668:	55                   	push   rbp
    3669:	49                   	rex.WB
    366a:	4e 54                	rex.WRX push rsp
    366c:	5f                   	pop    rdi
    366d:	46                   	rex.RX
    366e:	41 53                	push   r11
    3670:	54                   	push   rsp
    3671:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    3674:	59                   	pop    rcx
    3675:	50                   	push   rax
    3676:	45 5f                	rex.RB pop r15
    3678:	5f                   	pop    rdi
    3679:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    367c:	73 69                	jae    36e7 <__FRAME_END__+0x2edb>
    367e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3680:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3685:	61                   	(bad)  
    3686:	72 00                	jb     3688 <__FRAME_END__+0x2e7c>
    3688:	5f                   	pop    rdi
    3689:	5f                   	pop    rdi
    368a:	49                   	rex.WB
    368b:	4e 54                	rex.WRX push rsp
    368d:	33 32                	xor    esi,DWORD PTR [rdx]
    368f:	5f                   	pop    rdi
    3690:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    3694:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3697:	5f                   	pop    rdi
    3698:	5f                   	pop    rdi
    3699:	46 53                	rex.RX push rbx
    369b:	46                   	rex.RX
    369c:	49                   	rex.WB
    369d:	4c                   	rex.WR
    369e:	43                   	rex.XB
    369f:	4e 54                	rex.WRX push rsp
    36a1:	36 34 5f             	ss xor al,0x5f
    36a4:	54                   	push   rsp
    36a5:	5f                   	pop    rdi
    36a6:	54                   	push   rsp
    36a7:	59                   	pop    rcx
    36a8:	50                   	push   rax
    36a9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    36ad:	55                   	push   rbp
    36ae:	51                   	push   rcx
    36af:	55                   	push   rbp
    36b0:	41                   	rex.B
    36b1:	44 5f                	rex.R pop rdi
    36b3:	54                   	push   rsp
    36b4:	59                   	pop    rcx
    36b5:	50                   	push   rax
    36b6:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    36ba:	4c                   	rex.WR
    36bb:	44                   	rex.R
    36bc:	42                   	rex.X
    36bd:	4c 5f                	rex.WR pop rdi
    36bf:	48                   	rex.W
    36c0:	41 53                	push   r11
    36c2:	5f                   	pop    rdi
    36c3:	51                   	push   rcx
    36c4:	55                   	push   rbp
    36c5:	49                   	rex.WB
    36c6:	45 54                	rex.RB push r12
    36c8:	5f                   	pop    rdi
    36c9:	4e                   	rex.WRX
    36ca:	41                   	rex.B
    36cb:	4e 5f                	rex.WRX pop rdi
    36cd:	5f                   	pop    rdi
    36ce:	20 31                	and    BYTE PTR [rcx],dh
    36d0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36d3:	47                   	rex.RXB
    36d4:	4e 55                	rex.WRX push rbp
    36d6:	43 5f                	rex.XB pop r15
    36d8:	50                   	push   rax
    36d9:	41 54                	push   r12
    36db:	43                   	rex.XB
    36dc:	48                   	rex.W
    36dd:	4c                   	rex.WR
    36de:	45 56                	rex.RB push r14
    36e0:	45                   	rex.RB
    36e1:	4c 5f                	rex.WR pop rdi
    36e3:	5f                   	pop    rdi
    36e4:	20 30                	and    BYTE PTR [rax],dh
    36e6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36e9:	57                   	push   rdi
    36ea:	49                   	rex.WB
    36eb:	4e 54                	rex.WRX push rsp
    36ed:	5f                   	pop    rdi
    36ee:	4d                   	rex.WRB
    36ef:	41 58                	pop    r8
    36f1:	5f                   	pop    rdi
    36f2:	5f                   	pop    rdi
    36f3:	20 30                	and    BYTE PTR [rax],dh
    36f5:	78 66                	js     375d <__FRAME_END__+0x2f51>
    36f7:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    36fe:	55 
    36ff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3702:	61                   	(bad)  
    3703:	74 74                	je     3779 <__FRAME_END__+0x2f6d>
    3705:	72 69                	jb     3770 <__FRAME_END__+0x2f64>
    3707:	62                   	(bad)  
    3708:	75 74                	jne    377e <__FRAME_END__+0x2f72>
    370a:	65 5f                	gs pop rdi
    370c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    370d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    370e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    370f:	73 74                	jae    3785 <__FRAME_END__+0x2f79>
    3711:	72 69                	jb     377c <__FRAME_END__+0x2f70>
    3713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3714:	67 5f                	addr32 pop rdi
    3716:	5f                   	pop    rdi
    3717:	20 00                	and    BYTE PTR [rax],al
    3719:	5f                   	pop    rdi
    371a:	49                   	rex.WB
    371b:	4f 5f                	rex.WRXB pop r15
    371d:	4d                   	rex.WRB
    371e:	41                   	rex.B
    371f:	47                   	rex.RXB
    3720:	49                   	rex.WB
    3721:	43 5f                	rex.XB pop r15
    3723:	4d                   	rex.WRB
    3724:	41 53                	push   r11
    3726:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    3729:	78 46                	js     3771 <__FRAME_END__+0x2f65>
    372b:	46                   	rex.RX
    372c:	46                   	rex.RX
    372d:	46 30 30             	rex.RX xor BYTE PTR [rax],r14b
    3730:	30 30                	xor    BYTE PTR [rax],dh
    3732:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3735:	6c                   	ins    BYTE PTR es:[rdi],dx
    3736:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    373d:	5f                   	pop    rdi
    373e:	5f                   	pop    rdi
    373f:	47                   	rex.RXB
    3740:	4c                   	rex.WR
    3741:	49                   	rex.WB
    3742:	42                   	rex.X
    3743:	43 5f                	rex.XB pop r15
    3745:	55                   	push   rbp
    3746:	53                   	push   rbx
    3747:	45 5f                	rex.RB pop r15
    3749:	49                   	rex.WB
    374a:	45                   	rex.RB
    374b:	43 5f                	rex.XB pop r15
    374d:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f7089 <_end+0x463f6071>
    3754:	55                   	push   rbp
    3755:	4e                   	rex.WRX
    3756:	43 53                	rex.XB push r11
    3758:	5f                   	pop    rdi
    3759:	45 58                	rex.RB pop r8
    375b:	54                   	push   rsp
    375c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    375f:	4f 5f                	rex.WRXB pop r15
    3761:	76 61                	jbe    37c4 <__FRAME_END__+0x2fb8>
    3763:	5f                   	pop    rdi
    3764:	6c                   	ins    BYTE PTR es:[rdi],dx
    3765:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
    376c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    376d:	75 63                	jne    37d2 <__FRAME_END__+0x2fc6>
    376f:	5f                   	pop    rdi
    3770:	76 61                	jbe    37d3 <__FRAME_END__+0x2fc7>
    3772:	5f                   	pop    rdi
    3773:	6c                   	ins    BYTE PTR es:[rdi],dx
    3774:	69 73 74 00 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f00
    377b:	42 55                	rex.X push rbp
    377d:	46 53                	rex.RX push rbx
    377f:	49 5a                	rex.WB pop r10
    3781:	20 38                	and    BYTE PTR [rax],bh
    3783:	31 39                	xor    DWORD PTR [rcx],edi
    3785:	32 00                	xor    al,BYTE PTR [rax]
    3787:	5f                   	pop    rdi
    3788:	5f                   	pop    rdi
    3789:	4c                   	rex.WR
    378a:	44                   	rex.R
    378b:	42                   	rex.X
    378c:	4c 5f                	rex.WR pop rdi
    378e:	52                   	push   rdx
    378f:	45                   	rex.RB
    3790:	44                   	rex.R
    3791:	49 52                	rex.WB push r10
    3793:	31 28                	xor    DWORD PTR [rax],ebp
    3795:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3796:	61                   	(bad)  
    3797:	6d                   	ins    DWORD PTR es:[rdi],dx
    3798:	65 2c 70             	gs sub al,0x70
    379b:	72 6f                	jb     380c <__FRAME_END__+0x3000>
    379d:	74 6f                	je     380e <__FRAME_END__+0x3002>
    379f:	2c 61                	sub    al,0x61
    37a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    37a2:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    37a9:	6d                   	ins    DWORD PTR es:[rdi],dx
    37aa:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    37ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37af:	74 6f                	je     3820 <__FRAME_END__+0x3014>
    37b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    37b4:	61                   	(bad)  
    37b5:	74 74                	je     382b <__FRAME_END__+0x301f>
    37b7:	72 69                	jb     3822 <__FRAME_END__+0x3016>
    37b9:	62                   	(bad)  
    37ba:	75 74                	jne    3830 <__FRAME_END__+0x3024>
    37bc:	65 5f                	gs pop rdi
    37be:	6d                   	ins    DWORD PTR es:[rdi],dx
    37bf:	61                   	(bad)  
    37c0:	6c                   	ins    BYTE PTR es:[rdi],dx
    37c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    37c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37c3:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    37c6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    37c9:	61                   	(bad)  
    37ca:	74 74                	je     3840 <__FRAME_END__+0x3034>
    37cc:	72 69                	jb     3837 <__FRAME_END__+0x302b>
    37ce:	62                   	(bad)  
    37cf:	75 74                	jne    3845 <__FRAME_END__+0x3039>
    37d1:	65 5f                	gs pop rdi
    37d3:	5f                   	pop    rdi
    37d4:	20 28                	and    BYTE PTR [rax],ch
    37d6:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    37d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    37da:	61                   	(bad)  
    37db:	6c                   	ins    BYTE PTR es:[rdi],dx
    37dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    37dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37de:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    37e1:	29 29                	sub    DWORD PTR [rcx],ebp
    37e3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    37e6:	55                   	push   rbp
    37e7:	49                   	rex.WB
    37e8:	4e 54                	rex.WRX push rsp
    37ea:	33 32                	xor    esi,DWORD PTR [rdx]
    37ec:	5f                   	pop    rdi
    37ed:	54                   	push   rsp
    37ee:	59                   	pop    rcx
    37ef:	50                   	push   rax
    37f0:	45 5f                	rex.RB pop r15
    37f2:	5f                   	pop    rdi
    37f3:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    37f6:	73 69                	jae    3861 <__FRAME_END__+0x3055>
    37f8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    37fa:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    37ff:	74 00                	je     3801 <__FRAME_END__+0x2ff5>
    3801:	5f                   	pop    rdi
    3802:	5f                   	pop    rdi
    3803:	4c                   	rex.WR
    3804:	44                   	rex.R
    3805:	42                   	rex.X
    3806:	4c 5f                	rex.WR pop rdi
    3808:	52                   	push   rdx
    3809:	45                   	rex.RB
    380a:	44                   	rex.R
    380b:	49 52                	rex.WB push r10
    380d:	5f                   	pop    rdi
    380e:	4e 54                	rex.WRX push rsp
    3810:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    3814:	6d                   	ins    DWORD PTR es:[rdi],dx
    3815:	65 2c 70             	gs sub al,0x70
    3818:	72 6f                	jb     3889 <__FRAME_END__+0x307d>
    381a:	74 6f                	je     388b <__FRAME_END__+0x307f>
    381c:	29 20                	sub    DWORD PTR [rax],esp
    381e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    381f:	61                   	(bad)  
    3820:	6d                   	ins    DWORD PTR es:[rdi],dx
    3821:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    3825:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3826:	74 6f                	je     3897 <__FRAME_END__+0x308b>
    3828:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    382b:	54                   	push   rsp
    382c:	48 52                	rex.W push rdx
    382e:	4f 57                	rex.WRXB push r15
    3830:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3833:	55                   	push   rbp
    3834:	53                   	push   rbx
    3835:	45 5f                	rex.RB pop r15
    3837:	58                   	pop    rax
    3838:	4f 50                	rex.WRXB push r8
    383a:	45                   	rex.RB
    383b:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    383f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3842:	4f 5f                	rex.WRXB pop r15
    3844:	55                   	push   rbp
    3845:	50                   	push   rax
    3846:	50                   	push   rax
    3847:	45 52                	rex.RB push r10
    3849:	43                   	rex.XB
    384a:	41 53                	push   r11
    384c:	45 20 30             	and    BYTE PTR [r8],r14b
    384f:	31 30                	xor    DWORD PTR [rax],esi
    3851:	30 30                	xor    BYTE PTR [rax],dh
    3853:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
    3856:	74 6d                	je     38c5 <__FRAME_END__+0x30b9>
    3858:	70 64                	jo     38be <__FRAME_END__+0x30b2>
    385a:	69 72 20 22 2f 74 6d 	imul   esi,DWORD PTR [rdx+0x20],0x6d742f22
    3861:	70 22                	jo     3885 <__FRAME_END__+0x3079>
    3863:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3866:	52                   	push   rdx
    3867:	45                   	rex.RB
    3868:	44                   	rex.R
    3869:	49 52                	rex.WB push r10
    386b:	45                   	rex.RB
    386c:	43 54                	rex.XB push r12
    386e:	5f                   	pop    rdi
    386f:	4e 54                	rex.WRX push rsp
    3871:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    3875:	6d                   	ins    DWORD PTR es:[rdi],dx
    3876:	65 2c 70             	gs sub al,0x70
    3879:	72 6f                	jb     38ea <__FRAME_END__+0x30de>
    387b:	74 6f                	je     38ec <__FRAME_END__+0x30e0>
    387d:	2c 61                	sub    al,0x61
    387f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3880:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    3887:	6d                   	ins    DWORD PTR es:[rdi],dx
    3888:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    388c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    388d:	74 6f                	je     38fe <__FRAME_END__+0x30f2>
    388f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3892:	61                   	(bad)  
    3893:	73 6d                	jae    3902 <__FRAME_END__+0x30f6>
    3895:	5f                   	pop    rdi
    3896:	5f                   	pop    rdi
    3897:	20 28                	and    BYTE PTR [rax],ch
    3899:	5f                   	pop    rdi
    389a:	5f                   	pop    rdi
    389b:	41 53                	push   r11
    389d:	4d                   	rex.WRB
    389e:	4e                   	rex.WRX
    389f:	41                   	rex.B
    38a0:	4d                   	rex.WRB
    38a1:	45 20 28             	and    BYTE PTR [r8],r13b
    38a4:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    38a7:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    38ae:	5f                   	pop    rdi
    38af:	54                   	push   rsp
    38b0:	48 52                	rex.W push rdx
    38b2:	4f 57                	rex.WRXB push r15
    38b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    38b7:	55                   	push   rbp
    38b8:	53                   	push   rbx
    38b9:	45 5f                	rex.RB pop r15
    38bb:	58                   	pop    rax
    38bc:	4f 50                	rex.WRXB push r8
    38be:	45                   	rex.RB
    38bf:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    38c3:	46                   	rex.RX
    38c4:	4c 54                	rex.WR push rsp
    38c6:	31 32                	xor    DWORD PTR [rdx],esi
    38c8:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    38cb:	50                   	push   rax
    38cc:	53                   	push   rbx
    38cd:	49                   	rex.WB
    38ce:	4c                   	rex.WR
    38cf:	4f                   	rex.WRXB
    38d0:	4e 5f                	rex.WRX pop rdi
    38d2:	5f                   	pop    rdi
    38d3:	20 31                	and    BYTE PTR [rcx],dh
    38d5:	2e 39 32             	cmp    DWORD PTR cs:[rdx],esi
    38d8:	35 39 32 39 39       	xor    eax,0x39393239
    38dd:	34 34                	xor    al,0x34
    38df:	33 38                	xor    edi,DWORD PTR [rax]
    38e1:	37                   	(bad)  
    38e2:	32 33                	xor    dh,BYTE PTR [rbx]
    38e4:	35 38 35 33 30       	xor    eax,0x30333538
    38e9:	35 35 39 37 37       	xor    eax,0x37373935
    38ee:	39 34 32             	cmp    DWORD PTR [rdx+rsi*1],esi
    38f1:	35 38 34 39 32       	xor    eax,0x32393438
    38f6:	37                   	(bad)  
    38f7:	33 32                	xor    esi,DWORD PTR [rdx]
    38f9:	65 2d 33 34 46 31    	gs sub eax,0x31463433
    38ff:	32 38                	xor    bh,BYTE PTR [rax]
    3901:	00 46 4f             	add    BYTE PTR [rsi+0x4f],al
    3904:	50                   	push   rax
    3905:	45                   	rex.RB
    3906:	4e 5f                	rex.WRX pop rdi
    3908:	4d                   	rex.WRB
    3909:	41 58                	pop    r8
    390b:	20 31                	and    BYTE PTR [rcx],dh
    390d:	36 00 5f 49          	add    BYTE PTR ss:[rdi+0x49],bl
    3911:	4f 5f                	rex.WRXB pop r15
    3913:	46                   	rex.RX
    3914:	49                   	rex.WB
    3915:	4c                   	rex.WR
    3916:	45 5f                	rex.RB pop r15
    3918:	70 6c                	jo     3986 <__FRAME_END__+0x317a>
    391a:	75 73                	jne    398f <__FRAME_END__+0x3183>
    391c:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    391f:	4f 53                	rex.WRXB push r11
    3921:	49 58                	rex.WB pop r8
    3923:	5f                   	pop    rdi
    3924:	43 5f                	rex.XB pop r15
    3926:	53                   	push   rbx
    3927:	4f 55                	rex.WRXB push r13
    3929:	52                   	push   rdx
    392a:	43                   	rex.XB
    392b:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    392f:	54                   	push   rsp
    3930:	48 52                	rex.W push rdx
    3932:	4f 57                	rex.WRXB push r15
    3934:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3937:	61                   	(bad)  
    3938:	74 74                	je     39ae <__FRAME_END__+0x31a2>
    393a:	72 69                	jb     39a5 <__FRAME_END__+0x3199>
    393c:	62                   	(bad)  
    393d:	75 74                	jne    39b3 <__FRAME_END__+0x31a7>
    393f:	65 5f                	gs pop rdi
    3941:	5f                   	pop    rdi
    3942:	20 28                	and    BYTE PTR [rax],ch
    3944:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3947:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3948:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3949:	74 68                	je     39b3 <__FRAME_END__+0x31a7>
    394b:	72 6f                	jb     39bc <__FRAME_END__+0x31b0>
    394d:	77 5f                	ja     39ae <__FRAME_END__+0x31a2>
    394f:	5f                   	pop    rdi
    3950:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3953:	4c                   	rex.WR
    3954:	45                   	rex.RB
    3955:	41                   	rex.B
    3956:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
    3959:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    395c:	53                   	push   rbx
    395d:	49 5a                	rex.WB pop r10
    395f:	45                   	rex.RB
    3960:	4f                   	rex.WRXB
    3961:	46 5f                	rex.RX pop rdi
    3963:	4c                   	rex.WR
    3964:	4f                   	rex.WRXB
    3965:	4e                   	rex.WRX
    3966:	47 5f                	rex.RXB pop r15
    3968:	4c                   	rex.WR
    3969:	4f                   	rex.WRXB
    396a:	4e                   	rex.WRX
    396b:	47 5f                	rex.RXB pop r15
    396d:	5f                   	pop    rdi
    396e:	20 38                	and    BYTE PTR [rax],bh
    3970:	00 5f 56             	add    BYTE PTR [rdi+0x56],bl
    3973:	41 5f                	pop    r15
    3975:	4c                   	rex.WR
    3976:	49 53                	rex.WB push r11
    3978:	54                   	push   rsp
    3979:	5f                   	pop    rdi
    397a:	44                   	rex.R
    397b:	45                   	rex.RB
    397c:	46                   	rex.RX
    397d:	49                   	rex.WB
    397e:	4e                   	rex.WRX
    397f:	45                   	rex.RB
    3980:	44 20 00             	and    BYTE PTR [rax],r8b
    3983:	5f                   	pop    rdi
    3984:	5f                   	pop    rdi
    3985:	55                   	push   rbp
    3986:	49                   	rex.WB
    3987:	4e 54                	rex.WRX push rsp
    3989:	5f                   	pop    rdi
    398a:	46                   	rex.RX
    398b:	41 53                	push   r11
    398d:	54                   	push   rsp
    398e:	33 32                	xor    esi,DWORD PTR [rdx]
    3990:	5f                   	pop    rdi
    3991:	54                   	push   rsp
    3992:	59                   	pop    rcx
    3993:	50                   	push   rax
    3994:	45 5f                	rex.RB pop r15
    3996:	5f                   	pop    rdi
    3997:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    399b:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    399f:	73 69                	jae    3a0a <__FRAME_END__+0x31fe>
    39a1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    39a3:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    39a8:	74 00                	je     39aa <__FRAME_END__+0x319e>
    39aa:	5f                   	pop    rdi
    39ab:	5f                   	pop    rdi
    39ac:	53                   	push   rbx
    39ad:	48 52                	rex.W push rdx
    39af:	54                   	push   rsp
    39b0:	5f                   	pop    rdi
    39b1:	57                   	push   rdi
    39b2:	49                   	rex.WB
    39b3:	44 54                	rex.R push rsp
    39b5:	48 5f                	rex.W pop rdi
    39b7:	5f                   	pop    rdi
    39b8:	20 31                	and    BYTE PTR [rcx],dh
    39ba:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    39be:	53                   	push   rbx
    39bf:	53                   	push   rbx
    39c0:	45 32 5f 4d          	xor    r11b,BYTE PTR [r15+0x4d]
    39c4:	41 54                	push   r12
    39c6:	48 5f                	rex.W pop rdi
    39c8:	5f                   	pop    rdi
    39c9:	20 31                	and    BYTE PTR [rcx],dh
    39cb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    39ce:	53                   	push   rbx
    39cf:	53                   	push   rbx
    39d0:	49 5a                	rex.WB pop r10
    39d2:	45 5f                	rex.RB pop r15
    39d4:	54                   	push   rsp
    39d5:	5f                   	pop    rdi
    39d6:	54                   	push   rsp
    39d7:	59                   	pop    rcx
    39d8:	50                   	push   rax
    39d9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    39dd:	53                   	push   rbx
    39de:	57                   	push   rdi
    39df:	4f 52                	rex.WRXB push r10
    39e1:	44 5f                	rex.R pop rdi
    39e3:	54                   	push   rsp
    39e4:	59                   	pop    rcx
    39e5:	50                   	push   rax
    39e6:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    39ea:	53                   	push   rbx
    39eb:	36 34 5f             	ss xor al,0x5f
    39ee:	54                   	push   rsp
    39ef:	59                   	pop    rcx
    39f0:	50                   	push   rax
    39f1:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    39f6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    39fa:	74 00                	je     39fc <__FRAME_END__+0x31f0>
    39fc:	5f                   	pop    rdi
    39fd:	5f                   	pop    rdi
    39fe:	61                   	(bad)  
    39ff:	74 74                	je     3a75 <__FRAME_END__+0x3269>
    3a01:	72 69                	jb     3a6c <__FRAME_END__+0x3260>
    3a03:	62                   	(bad)  
    3a04:	75 74                	jne    3a7a <__FRAME_END__+0x326e>
    3a06:	65 5f                	gs pop rdi
    3a08:	70 75                	jo     3a7f <__FRAME_END__+0x3273>
    3a0a:	72 65                	jb     3a71 <__FRAME_END__+0x3265>
    3a0c:	5f                   	pop    rdi
    3a0d:	5f                   	pop    rdi
    3a0e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3a11:	61                   	(bad)  
    3a12:	74 74                	je     3a88 <__FRAME_END__+0x327c>
    3a14:	72 69                	jb     3a7f <__FRAME_END__+0x3273>
    3a16:	62                   	(bad)  
    3a17:	75 74                	jne    3a8d <__FRAME_END__+0x3281>
    3a19:	65 5f                	gs pop rdi
    3a1b:	5f                   	pop    rdi
    3a1c:	20 28                	and    BYTE PTR [rax],ch
    3a1e:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3a21:	70 75                	jo     3a98 <__FRAME_END__+0x328c>
    3a23:	72 65                	jb     3a8a <__FRAME_END__+0x327e>
    3a25:	5f                   	pop    rdi
    3a26:	5f                   	pop    rdi
    3a27:	29 29                	sub    DWORD PTR [rcx],ebp
    3a29:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a2c:	49                   	rex.WB
    3a2d:	4e 54                	rex.WRX push rsp
    3a2f:	4d                   	rex.WRB
    3a30:	41 58                	pop    r8
    3a32:	5f                   	pop    rdi
    3a33:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    3a37:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    3a3a:	23 23                	and    esp,DWORD PTR [rbx]
    3a3c:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    3a40:	49                   	rex.WB
    3a41:	4f 5f                	rex.WRXB pop r15
    3a43:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    3a4a:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    3a4d:	5f                   	pop    rdi
    3a4e:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    3a55:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a58:	49                   	rex.WB
    3a59:	4e 54                	rex.WRX push rsp
    3a5b:	5f                   	pop    rdi
    3a5c:	46                   	rex.RX
    3a5d:	41 53                	push   r11
    3a5f:	54                   	push   rsp
    3a60:	33 32                	xor    esi,DWORD PTR [rdx]
    3a62:	5f                   	pop    rdi
    3a63:	57                   	push   rdi
    3a64:	49                   	rex.WB
    3a65:	44 54                	rex.R push rsp
    3a67:	48 5f                	rex.W pop rdi
    3a69:	5f                   	pop    rdi
    3a6a:	20 36                	and    BYTE PTR [rsi],dh
    3a6c:	34 00                	xor    al,0x0
    3a6e:	5f                   	pop    rdi
    3a6f:	5f                   	pop    rdi
    3a70:	55                   	push   rbp
    3a71:	53                   	push   rbx
    3a72:	45 5f                	rex.RB pop r15
    3a74:	58                   	pop    rax
    3a75:	4f 50                	rex.WRXB push r8
    3a77:	45                   	rex.RB
    3a78:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    3a7c:	20 31                	and    BYTE PTR [rcx],dh
    3a7e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a81:	49                   	rex.WB
    3a82:	4e 54                	rex.WRX push rsp
    3a84:	5f                   	pop    rdi
    3a85:	4c                   	rex.WR
    3a86:	45                   	rex.RB
    3a87:	41 53                	push   r11
    3a89:	54                   	push   rsp
    3a8a:	36 34 5f             	ss xor al,0x5f
    3a8d:	57                   	push   rdi
    3a8e:	49                   	rex.WB
    3a8f:	44 54                	rex.R push rsp
    3a91:	48 5f                	rex.W pop rdi
    3a93:	5f                   	pop    rdi
    3a94:	20 36                	and    BYTE PTR [rsi],dh
    3a96:	34 00                	xor    al,0x0
    3a98:	5f                   	pop    rdi
    3a99:	5f                   	pop    rdi
    3a9a:	47                   	rex.RXB
    3a9b:	4c                   	rex.WR
    3a9c:	49                   	rex.WB
    3a9d:	42                   	rex.X
    3a9e:	43 5f                	rex.XB pop r15
    3aa0:	55                   	push   rbp
    3aa1:	53                   	push   rbx
    3aa2:	45 5f                	rex.RB pop r15
    3aa4:	49                   	rex.WB
    3aa5:	45                   	rex.RB
    3aa6:	43 5f                	rex.XB pop r15
    3aa8:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f73e4 <_end+0x543f63cc>
    3aaf:	59                   	pop    rcx
    3ab0:	50                   	push   rax
    3ab1:	45 53                	rex.RB push r11
    3ab3:	5f                   	pop    rdi
    3ab4:	45 58                	rex.RB pop r8
    3ab6:	54                   	push   rsp
    3ab7:	20 30                	and    BYTE PTR [rax],dh
    3ab9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3abc:	49                   	rex.WB
    3abd:	4e 54                	rex.WRX push rsp
    3abf:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    3ac2:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    3ac5:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3ac8:	5f                   	pop    rdi
    3ac9:	5f                   	pop    rdi
    3aca:	53                   	push   rbx
    3acb:	49 5a                	rex.WB pop r10
    3acd:	45                   	rex.RB
    3ace:	4f                   	rex.WRXB
    3acf:	46 5f                	rex.RX pop rdi
    3ad1:	50                   	push   rax
    3ad2:	4f                   	rex.WRXB
    3ad3:	49                   	rex.WB
    3ad4:	4e 54                	rex.WRX push rsp
    3ad6:	45 52                	rex.RB push r10
    3ad8:	5f                   	pop    rdi
    3ad9:	5f                   	pop    rdi
    3ada:	20 38                	and    BYTE PTR [rax],bh
    3adc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3adf:	46                   	rex.RX
    3ae0:	4c 54                	rex.WR push rsp
    3ae2:	36 34 5f             	ss xor al,0x5f
    3ae5:	45 50                	rex.RB push r8
    3ae7:	53                   	push   rbx
    3ae8:	49                   	rex.WB
    3ae9:	4c                   	rex.WR
    3aea:	4f                   	rex.WRXB
    3aeb:	4e 5f                	rex.WRX pop rdi
    3aed:	5f                   	pop    rdi
    3aee:	20 32                	and    BYTE PTR [rdx],dh
    3af0:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    3af3:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    3af6:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    3afa:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33316e30 <_end+0x33115e18>
    3b00:	30 38                	xor    BYTE PTR [rax],bh
    3b02:	30 38                	xor    BYTE PTR [rax],bh
    3b04:	34 37                	xor    al,0x37
    3b06:	32 36                	xor    dh,BYTE PTR [rsi]
    3b08:	33 33                	xor    esi,DWORD PTR [rbx]
    3b0a:	33 36                	xor    esi,DWORD PTR [rsi]
    3b0c:	31 38                	xor    DWORD PTR [rax],edi
    3b0e:	31 36                	xor    DWORD PTR [rsi],esi
    3b10:	34 30                	xor    al,0x30
    3b12:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    3b16:	31 36                	xor    DWORD PTR [rsi],esi
    3b18:	46                   	rex.RX
    3b19:	36 34 00             	ss xor al,0x0
    3b1c:	5f                   	pop    rdi
    3b1d:	49                   	rex.WB
    3b1e:	4f 5f                	rex.WRXB pop r15
    3b20:	76 61                	jbe    3b83 <__FRAME_END__+0x3377>
    3b22:	5f                   	pop    rdi
    3b23:	6c                   	ins    BYTE PTR es:[rdi],dx
    3b24:	69 73 74 20 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f20
    3b2b:	76 61                	jbe    3b8e <__FRAME_END__+0x3382>
    3b2d:	5f                   	pop    rdi
    3b2e:	6c                   	ins    BYTE PTR es:[rdi],dx
    3b2f:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    3b36:	4c 54                	rex.WR push rsp
    3b38:	36 34 58             	ss xor al,0x58
    3b3b:	5f                   	pop    rdi
    3b3c:	4d                   	rex.WRB
    3b3d:	41                   	rex.B
    3b3e:	4e 54                	rex.WRX push rsp
    3b40:	5f                   	pop    rdi
    3b41:	44                   	rex.R
    3b42:	49                   	rex.WB
    3b43:	47 5f                	rex.RXB pop r15
    3b45:	5f                   	pop    rdi
    3b46:	20 36                	and    BYTE PTR [rsi],dh
    3b48:	34 00                	xor    al,0x0
    3b4a:	5f                   	pop    rdi
    3b4b:	44                   	rex.R
    3b4c:	45                   	rex.RB
    3b4d:	46                   	rex.RX
    3b4e:	41 55                	push   r13
    3b50:	4c 54                	rex.WR push rsp
    3b52:	5f                   	pop    rdi
    3b53:	53                   	push   rbx
    3b54:	4f 55                	rex.WRXB push r13
    3b56:	52                   	push   rdx
    3b57:	43                   	rex.XB
    3b58:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3b5c:	57                   	push   rdi
    3b5d:	43                   	rex.XB
    3b5e:	48                   	rex.W
    3b5f:	41 52                	push   r10
    3b61:	5f                   	pop    rdi
    3b62:	4d                   	rex.WRB
    3b63:	41 58                	pop    r8
    3b65:	5f                   	pop    rdi
    3b66:	5f                   	pop    rdi
    3b67:	20 30                	and    BYTE PTR [rax],dh
    3b69:	78 37                	js     3ba2 <__FRAME_END__+0x3396>
    3b6b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    3b72:	00 5f 49 
    3b75:	4f 5f                	rex.WRXB pop r15
    3b77:	42 55                	rex.X push rbp
    3b79:	46 53                	rex.RX push rbx
    3b7b:	49 5a                	rex.WB pop r10
    3b7d:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    3b80:	5f                   	pop    rdi
    3b81:	42 55                	rex.X push rbp
    3b83:	46 53                	rex.RX push rbx
    3b85:	49 5a                	rex.WB pop r10
    3b87:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3b8a:	46 53                	rex.RX push rbx
    3b8c:	46                   	rex.RX
    3b8d:	49                   	rex.WB
    3b8e:	4c                   	rex.WR
    3b8f:	43                   	rex.XB
    3b90:	4e 54                	rex.WRX push rsp
    3b92:	5f                   	pop    rdi
    3b93:	54                   	push   rsp
    3b94:	5f                   	pop    rdi
    3b95:	54                   	push   rsp
    3b96:	59                   	pop    rcx
    3b97:	50                   	push   rax
    3b98:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3b9c:	53                   	push   rbx
    3b9d:	59                   	pop    rcx
    3b9e:	53                   	push   rbx
    3b9f:	43                   	rex.XB
    3ba0:	41                   	rex.B
    3ba1:	4c                   	rex.WR
    3ba2:	4c 5f                	rex.WR pop rdi
    3ba4:	55                   	push   rbp
    3ba5:	4c                   	rex.WR
    3ba6:	4f                   	rex.WRXB
    3ba7:	4e                   	rex.WRX
    3ba8:	47 5f                	rex.RXB pop r15
    3baa:	54                   	push   rsp
    3bab:	59                   	pop    rcx
    3bac:	50                   	push   rax
    3bad:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3bb1:	4f 5f                	rex.WRXB pop r15
    3bb3:	42                   	rex.X
    3bb4:	41                   	rex.B
    3bb5:	44 5f                	rex.R pop rdi
    3bb7:	53                   	push   rbx
    3bb8:	45                   	rex.RB
    3bb9:	45                   	rex.RB
    3bba:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    3bbd:	78 34                	js     3bf3 <__FRAME_END__+0x33e7>
    3bbf:	30 30                	xor    BYTE PTR [rax],dh
    3bc1:	30 00                	xor    BYTE PTR [rax],al
    3bc3:	5f                   	pop    rdi
    3bc4:	5f                   	pop    rdi
    3bc5:	77 61                	ja     3c28 <__FRAME_END__+0x341c>
    3bc7:	72 6e                	jb     3c37 <__FRAME_END__+0x342b>
    3bc9:	61                   	(bad)  
    3bca:	74 74                	je     3c40 <__FRAME_END__+0x3434>
    3bcc:	72 28                	jb     3bf6 <__FRAME_END__+0x33ea>
    3bce:	6d                   	ins    DWORD PTR es:[rdi],dx
    3bcf:	73 67                	jae    3c38 <__FRAME_END__+0x342c>
    3bd1:	29 20                	sub    DWORD PTR [rax],esp
    3bd3:	5f                   	pop    rdi
    3bd4:	5f                   	pop    rdi
    3bd5:	61                   	(bad)  
    3bd6:	74 74                	je     3c4c <__FRAME_END__+0x3440>
    3bd8:	72 69                	jb     3c43 <__FRAME_END__+0x3437>
    3bda:	62                   	(bad)  
    3bdb:	75 74                	jne    3c51 <__FRAME_END__+0x3445>
    3bdd:	65 5f                	gs pop rdi
    3bdf:	5f                   	pop    rdi
    3be0:	28 28                	sub    BYTE PTR [rax],ch
    3be2:	5f                   	pop    rdi
    3be3:	5f                   	pop    rdi
    3be4:	77 61                	ja     3c47 <__FRAME_END__+0x343b>
    3be6:	72 6e                	jb     3c56 <__FRAME_END__+0x344a>
    3be8:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    3bef:	6d                   	ins    DWORD PTR es:[rdi],dx
    3bf0:	73 67                	jae    3c59 <__FRAME_END__+0x344d>
    3bf2:	29 29                	sub    DWORD PTR [rcx],ebp
    3bf4:	29 00                	sub    DWORD PTR [rax],eax
    3bf6:	5f                   	pop    rdi
    3bf7:	5f                   	pop    rdi
    3bf8:	49                   	rex.WB
    3bf9:	4e 54                	rex.WRX push rsp
    3bfb:	5f                   	pop    rdi
    3bfc:	57                   	push   rdi
    3bfd:	49                   	rex.WB
    3bfe:	44 54                	rex.R push rsp
    3c00:	48 5f                	rex.W pop rdi
    3c02:	5f                   	pop    rdi
    3c03:	20 33                	and    BYTE PTR [rbx],dh
    3c05:	32 00                	xor    al,BYTE PTR [rax]
    3c07:	5f                   	pop    rdi
    3c08:	5f                   	pop    rdi
    3c09:	4c                   	rex.WR
    3c0a:	44                   	rex.R
    3c0b:	42                   	rex.X
    3c0c:	4c 5f                	rex.WR pop rdi
    3c0e:	44                   	rex.R
    3c0f:	45                   	rex.RB
    3c10:	43                   	rex.XB
    3c11:	49                   	rex.WB
    3c12:	4d                   	rex.WRB
    3c13:	41                   	rex.B
    3c14:	4c 5f                	rex.WR pop rdi
    3c16:	44                   	rex.R
    3c17:	49                   	rex.WB
    3c18:	47 5f                	rex.RXB pop r15
    3c1a:	5f                   	pop    rdi
    3c1b:	20 32                	and    BYTE PTR [rdx],dh
    3c1d:	31 00                	xor    DWORD PTR [rax],eax
    3c1f:	5f                   	pop    rdi
    3c20:	5f                   	pop    rdi
    3c21:	47                   	rex.RXB
    3c22:	43                   	rex.XB
    3c23:	43 5f                	rex.XB pop r15
    3c25:	41 54                	push   r12
    3c27:	4f                   	rex.WRXB
    3c28:	4d                   	rex.WRB
    3c29:	49                   	rex.WB
    3c2a:	43 5f                	rex.XB pop r15
    3c2c:	50                   	push   rax
    3c2d:	4f                   	rex.WRXB
    3c2e:	49                   	rex.WB
    3c2f:	4e 54                	rex.WRX push rsp
    3c31:	45 52                	rex.RB push r10
    3c33:	5f                   	pop    rdi
    3c34:	4c                   	rex.WR
    3c35:	4f                   	rex.WRXB
    3c36:	43                   	rex.XB
    3c37:	4b 5f                	rex.WXB pop r15
    3c39:	46 52                	rex.RX push rdx
    3c3b:	45                   	rex.RB
    3c3c:	45 20 32             	and    BYTE PTR [r10],r14b
    3c3f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3c42:	73 74                	jae    3cb8 <__FRAME_END__+0x34ac>
    3c44:	75 62                	jne    3ca8 <__FRAME_END__+0x349c>
    3c46:	5f                   	pop    rdi
    3c47:	5f                   	pop    rdi
    3c48:	5f                   	pop    rdi
    3c49:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3c4c:	70 61                	jo     3caf <__FRAME_END__+0x34a3>
    3c4e:	74 5f                	je     3caf <__FRAME_END__+0x34a3>
    3c50:	62                   	(bad)  
    3c51:	64 66 6c             	fs data16 ins BYTE PTR es:[rdi],dx
    3c54:	75 73                	jne    3cc9 <__FRAME_END__+0x34bd>
    3c56:	68 20 00 46 4f       	push   0x4f460020
    3c5b:	50                   	push   rax
    3c5c:	45                   	rex.RB
    3c5d:	4e 5f                	rex.WRX pop rdi
    3c5f:	4d                   	rex.WRB
    3c60:	41 58                	pop    r8
    3c62:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
    3c65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c66:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    3c69:	5f                   	pop    rdi
    3c6a:	5f                   	pop    rdi
    3c6b:	53                   	push   rbx
    3c6c:	45                   	rex.RB
    3c6d:	47 5f                	rex.RXB pop r15
    3c6f:	46 53                	rex.RX push rbx
    3c71:	20 31                	and    BYTE PTR [rcx],dh
    3c73:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3c76:	50                   	push   rax
    3c77:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    3c7a:	67 73 29             	addr32 jae 3ca6 <__FRAME_END__+0x349a>
    3c7d:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    3c80:	67 73 00             	addr32 jae 3c83 <__FRAME_END__+0x3477>
    3c83:	5f                   	pop    rdi
    3c84:	5f                   	pop    rdi
    3c85:	54                   	push   rsp
    3c86:	49                   	rex.WB
    3c87:	4d                   	rex.WRB
    3c88:	45 5f                	rex.RB pop r15
    3c8a:	54                   	push   rsp
    3c8b:	5f                   	pop    rdi
    3c8c:	54                   	push   rsp
    3c8d:	59                   	pop    rcx
    3c8e:	50                   	push   rax
    3c8f:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3c93:	53                   	push   rbx
    3c94:	59                   	pop    rcx
    3c95:	53                   	push   rbx
    3c96:	43                   	rex.XB
    3c97:	41                   	rex.B
    3c98:	4c                   	rex.WR
    3c99:	4c 5f                	rex.WR pop rdi
    3c9b:	53                   	push   rbx
    3c9c:	4c                   	rex.WR
    3c9d:	4f                   	rex.WRXB
    3c9e:	4e                   	rex.WRX
    3c9f:	47 5f                	rex.RXB pop r15
    3ca1:	54                   	push   rsp
    3ca2:	59                   	pop    rcx
    3ca3:	50                   	push   rax
    3ca4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3ca8:	55                   	push   rbp
    3ca9:	49                   	rex.WB
    3caa:	4e 54                	rex.WRX push rsp
    3cac:	5f                   	pop    rdi
    3cad:	46                   	rex.RX
    3cae:	41 53                	push   r11
    3cb0:	54                   	push   rsp
    3cb1:	31 36                	xor    DWORD PTR [rsi],esi
    3cb3:	5f                   	pop    rdi
    3cb4:	54                   	push   rsp
    3cb5:	59                   	pop    rcx
    3cb6:	50                   	push   rax
    3cb7:	45 5f                	rex.RB pop r15
    3cb9:	5f                   	pop    rdi
    3cba:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3cbe:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3cc2:	73 69                	jae    3d2d <__FRAME_END__+0x3521>
    3cc4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3cc6:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3ccb:	74 00                	je     3ccd <__FRAME_END__+0x34c1>
    3ccd:	5f                   	pop    rdi
    3cce:	5f                   	pop    rdi
    3ccf:	47                   	rex.RXB
    3cd0:	4c                   	rex.WR
    3cd1:	49                   	rex.WB
    3cd2:	42                   	rex.X
    3cd3:	43 5f                	rex.XB pop r15
    3cd5:	5f                   	pop    rdi
    3cd6:	20 32                	and    BYTE PTR [rdx],dh
    3cd8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3cdb:	4f 5f                	rex.WRXB pop r15
    3cdd:	73 74                	jae    3d53 <__FRAME_END__+0x3547>
    3cdf:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3ce1:	75 74                	jne    3d57 <__FRAME_END__+0x354b>
    3ce3:	20 28                	and    BYTE PTR [rax],ch
    3ce5:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    3ce8:	4f 5f                	rex.WRXB pop r15
    3cea:	46                   	rex.RX
    3ceb:	49                   	rex.WB
    3cec:	4c                   	rex.WR
    3ced:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    3cf0:	28 26                	sub    BYTE PTR [rsi],ah
    3cf2:	5f                   	pop    rdi
    3cf3:	49                   	rex.WB
    3cf4:	4f 5f                	rex.WRXB pop r15
    3cf6:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    3cf9:	5f                   	pop    rdi
    3cfa:	73 74                	jae    3d70 <__FRAME_END__+0x3564>
    3cfc:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3cfe:	75 74                	jne    3d74 <__FRAME_END__+0x3568>
    3d00:	5f                   	pop    rdi
    3d01:	29 29                	sub    DWORD PTR [rcx],ebp
    3d03:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d06:	55                   	push   rbp
    3d07:	53                   	push   rbx
    3d08:	45 52                	rex.RB push r10
    3d0a:	5f                   	pop    rdi
    3d0b:	4c                   	rex.WR
    3d0c:	41                   	rex.B
    3d0d:	42                   	rex.X
    3d0e:	45                   	rex.RB
    3d0f:	4c 5f                	rex.WR pop rdi
    3d11:	50                   	push   rax
    3d12:	52                   	push   rdx
    3d13:	45                   	rex.RB
    3d14:	46                   	rex.RX
    3d15:	49 58                	rex.WB pop r8
    3d17:	5f                   	pop    rdi
    3d18:	5f                   	pop    rdi
    3d19:	20 00                	and    BYTE PTR [rax],al
    3d1b:	5f                   	pop    rdi
    3d1c:	49                   	rex.WB
    3d1d:	4f 5f                	rex.WRXB pop r15
    3d1f:	70 69                	jo     3d8a <__FRAME_END__+0x357e>
    3d21:	64 5f                	fs pop rdi
    3d23:	74 20                	je     3d45 <__FRAME_END__+0x3539>
    3d25:	5f                   	pop    rdi
    3d26:	5f                   	pop    rdi
    3d27:	70 69                	jo     3d92 <__FRAME_END__+0x3586>
    3d29:	64 5f                	fs pop rdi
    3d2b:	74 00                	je     3d2d <__FRAME_END__+0x3521>
    3d2d:	5f                   	pop    rdi
    3d2e:	5f                   	pop    rdi
    3d2f:	67 6c                	ins    BYTE PTR es:[edi],dx
    3d31:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
    3d38:	72 6f                	jb     3da9 <__FRAME_END__+0x359d>
    3d3a:	5f                   	pop    rdi
    3d3b:	77 61                	ja     3d9e <__FRAME_END__+0x3592>
    3d3d:	72 6e                	jb     3dad <__FRAME_END__+0x35a1>
    3d3f:	69 6e 67 31 28 6d 65 	imul   ebp,DWORD PTR [rsi+0x67],0x656d2831
    3d46:	73 73                	jae    3dbb <__FRAME_END__+0x35af>
    3d48:	61                   	(bad)  
    3d49:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
    3d4d:	5f                   	pop    rdi
    3d4e:	50                   	push   rax
    3d4f:	72 61                	jb     3db2 <__FRAME_END__+0x35a6>
    3d51:	67 6d                	ins    DWORD PTR es:[edi],dx
    3d53:	61                   	(bad)  
    3d54:	20 28                	and    BYTE PTR [rax],ch
    3d56:	23 6d 65             	and    ebp,DWORD PTR [rbp+0x65]
    3d59:	73 73                	jae    3dce <__FRAME_END__+0x35c2>
    3d5b:	61                   	(bad)  
    3d5c:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
    3d60:	5f                   	pop    rdi
    3d61:	5f                   	pop    rdi
    3d62:	47                   	rex.RXB
    3d63:	43                   	rex.XB
    3d64:	43 5f                	rex.XB pop r15
    3d66:	41 54                	push   r12
    3d68:	4f                   	rex.WRXB
    3d69:	4d                   	rex.WRB
    3d6a:	49                   	rex.WB
    3d6b:	43 5f                	rex.XB pop r15
    3d6d:	43                   	rex.XB
    3d6e:	48                   	rex.W
    3d6f:	41 52                	push   r10
    3d71:	33 32                	xor    esi,DWORD PTR [rdx]
    3d73:	5f                   	pop    rdi
    3d74:	54                   	push   rsp
    3d75:	5f                   	pop    rdi
    3d76:	4c                   	rex.WR
    3d77:	4f                   	rex.WRXB
    3d78:	43                   	rex.XB
    3d79:	4b 5f                	rex.WXB pop r15
    3d7b:	46 52                	rex.RX push rdx
    3d7d:	45                   	rex.RB
    3d7e:	45 20 32             	and    BYTE PTR [r10],r14b
    3d81:	00 5f 6f             	add    BYTE PTR [rdi+0x6f],bl
    3d84:	6c                   	ins    BYTE PTR es:[rdi],dx
    3d85:	64 5f                	fs pop rdi
    3d87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d88:	66 66 73 65          	data16 data16 jae 3df1 <__FRAME_END__+0x35e5>
    3d8c:	74 00                	je     3d8e <__FRAME_END__+0x3582>
    3d8e:	5f                   	pop    rdi
    3d8f:	49                   	rex.WB
    3d90:	4f 5f                	rex.WRXB pop r15
    3d92:	46                   	rex.RX
    3d93:	49                   	rex.WB
    3d94:	4c                   	rex.WR
    3d95:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3d99:	4f 5f                	rex.WRXB pop r15
    3d9b:	55                   	push   rbp
    3d9c:	4e                   	rex.WRX
    3d9d:	42 55                	rex.X push rbp
    3d9f:	46                   	rex.RX
    3da0:	46                   	rex.RX
    3da1:	45 52                	rex.RB push r10
    3da3:	45                   	rex.RB
    3da4:	44 20 32             	and    BYTE PTR [rdx],r14b
    3da7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3daa:	43                   	rex.XB
    3dab:	48                   	rex.W
    3dac:	41 52                	push   r10
    3dae:	5f                   	pop    rdi
    3daf:	42                   	rex.X
    3db0:	49 54                	rex.WB push r12
    3db2:	5f                   	pop    rdi
    3db3:	5f                   	pop    rdi
    3db4:	20 38                	and    BYTE PTR [rax],bh
    3db6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3db9:	43                   	rex.XB
    3dba:	4c                   	rex.WR
    3dbb:	4f                   	rex.WRXB
    3dbc:	43                   	rex.XB
    3dbd:	4b 5f                	rex.WXB pop r15
    3dbf:	54                   	push   rsp
    3dc0:	5f                   	pop    rdi
    3dc1:	54                   	push   rsp
    3dc2:	59                   	pop    rcx
    3dc3:	50                   	push   rax
    3dc4:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3dc8:	53                   	push   rbx
    3dc9:	59                   	pop    rcx
    3dca:	53                   	push   rbx
    3dcb:	43                   	rex.XB
    3dcc:	41                   	rex.B
    3dcd:	4c                   	rex.WR
    3dce:	4c 5f                	rex.WR pop rdi
    3dd0:	53                   	push   rbx
    3dd1:	4c                   	rex.WR
    3dd2:	4f                   	rex.WRXB
    3dd3:	4e                   	rex.WRX
    3dd4:	47 5f                	rex.RXB pop r15
    3dd6:	54                   	push   rsp
    3dd7:	59                   	pop    rcx
    3dd8:	50                   	push   rax
    3dd9:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3ddd:	41 54                	push   r12
    3ddf:	4f                   	rex.WRXB
    3de0:	4d                   	rex.WRB
    3de1:	49                   	rex.WB
    3de2:	43 5f                	rex.XB pop r15
    3de4:	52                   	push   rdx
    3de5:	45                   	rex.RB
    3de6:	4c                   	rex.WR
    3de7:	41 58                	pop    r8
    3de9:	45                   	rex.RB
    3dea:	44 20 30             	and    BYTE PTR [rax],r14b
    3ded:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3df0:	4f 5f                	rex.WRXB pop r15
    3df2:	73 73                	jae    3e67 <__FRAME_END__+0x365b>
    3df4:	69 7a 65 5f 74 20 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f20745f
    3dfb:	5f                   	pop    rdi
    3dfc:	73 73                	jae    3e71 <__FRAME_END__+0x3665>
    3dfe:	69 7a 65 5f 74 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f00745f
    3e05:	5f                   	pop    rdi
    3e06:	53                   	push   rbx
    3e07:	54                   	push   rsp
    3e08:	44                   	rex.R
    3e09:	43 5f                	rex.XB pop r15
    3e0b:	48                   	rex.W
    3e0c:	4f 53                	rex.WRXB push r11
    3e0e:	54                   	push   rsp
    3e0f:	45                   	rex.RB
    3e10:	44 5f                	rex.R pop rdi
    3e12:	5f                   	pop    rdi
    3e13:	20 31                	and    BYTE PTR [rcx],dh
    3e15:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3e18:	53                   	push   rbx
    3e19:	49 5a                	rex.WB pop r10
    3e1b:	45 5f                	rex.RB pop r15
    3e1d:	57                   	push   rdi
    3e1e:	49                   	rex.WB
    3e1f:	44 54                	rex.R push rsp
    3e21:	48 5f                	rex.W pop rdi
    3e23:	5f                   	pop    rdi
    3e24:	20 36                	and    BYTE PTR [rsi],dh
    3e26:	34 00                	xor    al,0x0
    3e28:	5f                   	pop    rdi
    3e29:	5f                   	pop    rdi
    3e2a:	52                   	push   rdx
    3e2b:	45                   	rex.RB
    3e2c:	44                   	rex.R
    3e2d:	49 52                	rex.WB push r10
    3e2f:	45                   	rex.RB
    3e30:	43 54                	rex.XB push r12
    3e32:	5f                   	pop    rdi
    3e33:	4c                   	rex.WR
    3e34:	44                   	rex.R
    3e35:	42                   	rex.X
    3e36:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    3e3a:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e3b:	65 2c 70             	gs sub al,0x70
    3e3e:	72 6f                	jb     3eaf <__FRAME_END__+0x36a3>
    3e40:	74 6f                	je     3eb1 <__FRAME_END__+0x36a5>
    3e42:	2c 61                	sub    al,0x61
    3e44:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e45:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    3e4c:	52                   	push   rdx
    3e4d:	45                   	rex.RB
    3e4e:	44                   	rex.R
    3e4f:	49 52                	rex.WB push r10
    3e51:	45                   	rex.RB
    3e52:	43 54                	rex.XB push r12
    3e54:	20 28                	and    BYTE PTR [rax],ch
    3e56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e57:	61                   	(bad)  
    3e58:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e59:	65 2c 20             	gs sub al,0x20
    3e5c:	70 72                	jo     3ed0 <__FRAME_END__+0x36c4>
    3e5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e5f:	74 6f                	je     3ed0 <__FRAME_END__+0x36c4>
    3e61:	2c 20                	sub    al,0x20
    3e63:	61                   	(bad)  
    3e64:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e65:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    3e6c:	61                   	(bad)  
    3e6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e6e:	77 61                	ja     3ed1 <__FRAME_END__+0x36c5>
    3e70:	79 73                	jns    3ee5 <__FRAME_END__+0x36d9>
    3e72:	5f                   	pop    rdi
    3e73:	69 6e 6c 69 6e 65 00 	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
    3e7a:	5f                   	pop    rdi
    3e7b:	5f                   	pop    rdi
    3e7c:	68 61 73 5f 69       	push   0x695f7361
    3e81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e82:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e86:	65 28 53 54          	sub    BYTE PTR gs:[rbx+0x54],dl
    3e8a:	52                   	push   rdx
    3e8b:	29 20                	sub    DWORD PTR [rax],esp
    3e8d:	5f                   	pop    rdi
    3e8e:	5f                   	pop    rdi
    3e8f:	68 61 73 5f 69       	push   0x695f7361
    3e94:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e95:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e99:	65 5f                	gs pop rdi
    3e9b:	5f                   	pop    rdi
    3e9c:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
    3e9f:	52                   	push   rdx
    3ea0:	29 00                	sub    DWORD PTR [rax],eax
    3ea2:	5f                   	pop    rdi
    3ea3:	5f                   	pop    rdi
    3ea4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ea5:	65 65 64 5f          	gs gs fs pop rdi
    3ea9:	5f                   	pop    rdi
    3eaa:	5f                   	pop    rdi
    3eab:	76 61                	jbe    3f0e <__FRAME_END__+0x3702>
    3ead:	5f                   	pop    rdi
    3eae:	6c                   	ins    BYTE PTR es:[rdi],dx
    3eaf:	69 73 74 20 00 5f 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f5f0020
    3eb6:	41 53                	push   r11
    3eb8:	4d                   	rex.WRB
    3eb9:	4e                   	rex.WRX
    3eba:	41                   	rex.B
    3ebb:	4d                   	rex.WRB
    3ebc:	45 32 28             	xor    r13b,BYTE PTR [r8]
    3ebf:	70 72                	jo     3f33 <__FRAME_END__+0x3727>
    3ec1:	65 66 69 78 2c 63 6e 	imul   di,WORD PTR gs:[rax+0x2c],0x6e63
    3ec8:	61                   	(bad)  
    3ec9:	6d                   	ins    DWORD PTR es:[rdi],dx
    3eca:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    3ecd:	5f                   	pop    rdi
    3ece:	5f                   	pop    rdi
    3ecf:	53                   	push   rbx
    3ed0:	54                   	push   rsp
    3ed1:	52                   	push   rdx
    3ed2:	49                   	rex.WB
    3ed3:	4e                   	rex.WRX
    3ed4:	47 20 28             	rex.RXB and BYTE PTR [r8],r13b
    3ed7:	70 72                	jo     3f4b <__FRAME_END__+0x373f>
    3ed9:	65 66 69 78 29 20 63 	imul   di,WORD PTR gs:[rax+0x29],0x6320
    3ee0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ee1:	61                   	(bad)  
    3ee2:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ee3:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
    3ee7:	4f 5f                	rex.WRXB pop r15
    3ee9:	53                   	push   rbx
    3eea:	43                   	rex.XB
    3eeb:	49                   	rex.WB
    3eec:	45                   	rex.RB
    3eed:	4e 54                	rex.WRX push rsp
    3eef:	49                   	rex.WB
    3ef0:	46                   	rex.RX
    3ef1:	49                   	rex.WB
    3ef2:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    3ef5:	34 30                	xor    al,0x30
    3ef7:	30 30                	xor    BYTE PTR [rax],dh
    3ef9:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3efc:	4f 5f                	rex.WRXB pop r15
    3efe:	70 65                	jo     3f65 <__FRAME_END__+0x3759>
    3f00:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    3f05:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3f06:	6c                   	ins    BYTE PTR es:[rdi],dx
    3f07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f08:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3f0b:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    3f0f:	70 29                	jo     3f3a <__FRAME_END__+0x372e>
    3f11:	20 28                	and    BYTE PTR [rax],ch
    3f13:	5f                   	pop    rdi
    3f14:	49                   	rex.WB
    3f15:	4f 5f                	rex.WRXB pop r15
    3f17:	42                   	rex.X
    3f18:	45 20 28             	and    BYTE PTR [r8],r13b
    3f1b:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3f1e:	70 29                	jo     3f49 <__FRAME_END__+0x373d>
    3f20:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f25:	5f                   	pop    rdi
    3f26:	72 65                	jb     3f8d <__FRAME_END__+0x3781>
    3f28:	61                   	(bad)  
    3f29:	64 5f                	fs pop rdi
    3f2b:	70 74                	jo     3fa1 <__FRAME_END__+0x3795>
    3f2d:	72 20                	jb     3f4f <__FRAME_END__+0x3743>
    3f2f:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    3f35:	70 29                	jo     3f60 <__FRAME_END__+0x3754>
    3f37:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f3c:	5f                   	pop    rdi
    3f3d:	72 65                	jb     3fa4 <__FRAME_END__+0x3798>
    3f3f:	61                   	(bad)  
    3f40:	64 5f                	fs pop rdi
    3f42:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3f44:	64 2c 20             	fs sub al,0x20
    3f47:	30 29                	xor    BYTE PTR [rcx],ch
    3f49:	20 26                	and    BYTE PTR [rsi],ah
    3f4b:	26 20 5f 5f          	and    BYTE PTR es:[rdi+0x5f],bl
    3f4f:	75 6e                	jne    3fbf <__FRAME_END__+0x37b3>
    3f51:	64 65 72 66          	fs gs jb 3fbb <__FRAME_END__+0x37af>
    3f55:	6c                   	ins    BYTE PTR es:[rdi],dx
    3f56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f57:	77 20                	ja     3f79 <__FRAME_END__+0x376d>
    3f59:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3f5c:	70 29                	jo     3f87 <__FRAME_END__+0x377b>
    3f5e:	20 3d 3d 20 45 4f    	and    BYTE PTR [rip+0x4f45203d],bh        # 4f455fa1 <_end+0x4f254f89>
    3f64:	46 20 3f             	rex.RX and BYTE PTR [rdi],r15b
    3f67:	20 45 4f             	and    BYTE PTR [rbp+0x4f],al
    3f6a:	46 20 3a             	rex.RX and BYTE PTR [rdx],r15b
    3f6d:	20 2a                	and    BYTE PTR [rdx],ch
    3f6f:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    3f72:	73 69                	jae    3fdd <__FRAME_END__+0x37d1>
    3f74:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3f76:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3f7b:	61                   	(bad)  
    3f7c:	72 20                	jb     3f9e <__FRAME_END__+0x3792>
    3f7e:	2a 29                	sub    ch,BYTE PTR [rcx]
    3f80:	20 28                	and    BYTE PTR [rax],ch
    3f82:	5f                   	pop    rdi
    3f83:	66 70 29             	data16 jo 3faf <__FRAME_END__+0x37a3>
    3f86:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f8b:	5f                   	pop    rdi
    3f8c:	72 65                	jb     3ff3 <__FRAME_END__+0x37e7>
    3f8e:	61                   	(bad)  
    3f8f:	64 5f                	fs pop rdi
    3f91:	70 74                	jo     4007 <__FRAME_END__+0x37fb>
    3f93:	72 29                	jb     3fbe <__FRAME_END__+0x37b2>
    3f95:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3f98:	4c                   	rex.WR
    3f99:	4f                   	rex.WRXB
    3f9a:	4e                   	rex.WRX
    3f9b:	47 5f                	rex.RXB pop r15
    3f9d:	57                   	push   rdi
    3f9e:	49                   	rex.WB
    3f9f:	44 54                	rex.R push rsp
    3fa1:	48 5f                	rex.W pop rdi
    3fa3:	5f                   	pop    rdi
    3fa4:	20 36                	and    BYTE PTR [rsi],dh
    3fa6:	34 00                	xor    al,0x0
    3fa8:	5f                   	pop    rdi
    3fa9:	5f                   	pop    rdi
    3faa:	55                   	push   rbp
    3fab:	49                   	rex.WB
    3fac:	4e 54                	rex.WRX push rsp
    3fae:	36 34 5f             	ss xor al,0x5f
    3fb1:	4d                   	rex.WRB
    3fb2:	41 58                	pop    r8
    3fb4:	5f                   	pop    rdi
    3fb5:	5f                   	pop    rdi
    3fb6:	20 30                	and    BYTE PTR [rax],dh
    3fb8:	78 66                	js     4020 <__FRAME_END__+0x3814>
    3fba:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3fc1:	66 66 66 66 66 66 66 
    3fc8:	66 55                	push   bp
    3fca:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    3fce:	53                   	push   rbx
    3fcf:	51                   	push   rcx
    3fd0:	55                   	push   rbp
    3fd1:	41                   	rex.B
    3fd2:	44 5f                	rex.R pop rdi
    3fd4:	54                   	push   rsp
    3fd5:	59                   	pop    rcx
    3fd6:	50                   	push   rax
    3fd7:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3fdc:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3fe0:	74 00                	je     3fe2 <__FRAME_END__+0x37d6>
    3fe2:	5f                   	pop    rdi
    3fe3:	5f                   	pop    rdi
    3fe4:	55                   	push   rbp
    3fe5:	53                   	push   rbx
    3fe6:	45 5f                	rex.RB pop r15
    3fe8:	58                   	pop    rax
    3fe9:	4f 50                	rex.WRXB push r8
    3feb:	45                   	rex.RB
    3fec:	4e 32 4b 58          	rex.WRX xor r9b,BYTE PTR [rbx+0x58]
    3ff0:	53                   	push   rbx
    3ff1:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    3ff5:	61                   	(bad)  
    3ff6:	74 74                	je     406c <__FRAME_END__+0x3860>
    3ff8:	72 69                	jb     4063 <__FRAME_END__+0x3857>
    3ffa:	62                   	(bad)  
    3ffb:	75 74                	jne    4071 <__FRAME_END__+0x3865>
    3ffd:	65 5f                	gs pop rdi
    3fff:	61                   	(bad)  
    4000:	6c                   	ins    BYTE PTR es:[rdi],dx
    4001:	6c                   	ins    BYTE PTR es:[rdi],dx
    4002:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4003:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    4006:	69 7a 65 5f 5f 28 70 	imul   edi,DWORD PTR [rdx+0x65],0x70285f5f
    400d:	61                   	(bad)  
    400e:	72 61                	jb     4071 <__FRAME_END__+0x3865>
    4010:	6d                   	ins    DWORD PTR es:[rdi],dx
    4011:	73 29                	jae    403c <__FRAME_END__+0x3830>
    4013:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    4016:	61                   	(bad)  
    4017:	74 74                	je     408d <__FRAME_END__+0x3881>
    4019:	72 69                	jb     4084 <__FRAME_END__+0x3878>
    401b:	62                   	(bad)  
    401c:	75 74                	jne    4092 <__FRAME_END__+0x3886>
    401e:	65 5f                	gs pop rdi
    4020:	5f                   	pop    rdi
    4021:	20 28                	and    BYTE PTR [rax],ch
    4023:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4026:	61                   	(bad)  
    4027:	6c                   	ins    BYTE PTR es:[rdi],dx
    4028:	6c                   	ins    BYTE PTR es:[rdi],dx
    4029:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    402a:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    402d:	69 7a 65 5f 5f 20 70 	imul   edi,DWORD PTR [rdx+0x65],0x70205f5f
    4034:	61                   	(bad)  
    4035:	72 61                	jb     4098 <__FRAME_END__+0x388c>
    4037:	6d                   	ins    DWORD PTR es:[rdi],dx
    4038:	73 29                	jae    4063 <__FRAME_END__+0x3857>
    403a:	29 00                	sub    DWORD PTR [rax],eax
    403c:	5f                   	pop    rdi
    403d:	49                   	rex.WB
    403e:	4f 5f                	rex.WRXB pop r15
    4040:	77 69                	ja     40ab <__FRAME_END__+0x389f>
    4042:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4043:	74 5f                	je     40a4 <__FRAME_END__+0x3898>
    4045:	74 20                	je     4067 <__FRAME_END__+0x385b>
    4047:	77 69                	ja     40b2 <__FRAME_END__+0x38a6>
    4049:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    404a:	74 5f                	je     40ab <__FRAME_END__+0x389f>
    404c:	74 00                	je     404e <__FRAME_END__+0x3842>
    404e:	5f                   	pop    rdi
    404f:	5f                   	pop    rdi
    4050:	6b 38 20             	imul   edi,DWORD PTR [rax],0x20
    4053:	31 00                	xor    DWORD PTR [rax],eax
    4055:	5f                   	pop    rdi
    4056:	5f                   	pop    rdi
    4057:	47                   	rex.RXB
    4058:	43                   	rex.XB
    4059:	43 5f                	rex.XB pop r15
    405b:	41 54                	push   r12
    405d:	4f                   	rex.WRXB
    405e:	4d                   	rex.WRB
    405f:	49                   	rex.WB
    4060:	43 5f                	rex.XB pop r15
    4062:	4c                   	rex.WR
    4063:	4c                   	rex.WR
    4064:	4f                   	rex.WRXB
    4065:	4e                   	rex.WRX
    4066:	47 5f                	rex.RXB pop r15
    4068:	4c                   	rex.WR
    4069:	4f                   	rex.WRXB
    406a:	43                   	rex.XB
    406b:	4b 5f                	rex.WXB pop r15
    406d:	46 52                	rex.RX push rdx
    406f:	45                   	rex.RB
    4070:	45 20 32             	and    BYTE PTR [r10],r14b
    4073:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4076:	44                   	rex.R
    4077:	45                   	rex.RB
    4078:	43                   	rex.XB
    4079:	36 34 5f             	ss xor al,0x5f
    407c:	4d                   	rex.WRB
    407d:	49                   	rex.WB
    407e:	4e 5f                	rex.WRX pop rdi
    4080:	45 58                	rex.RB pop r8
    4082:	50                   	push   rax
    4083:	5f                   	pop    rdi
    4084:	5f                   	pop    rdi
    4085:	20 28                	and    BYTE PTR [rax],ch
    4087:	2d 33 38 32 29       	sub    eax,0x29323833
    408c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    408f:	72 65                	jb     40f6 <__FRAME_END__+0x38ea>
    4091:	73 74                	jae    4107 <__FRAME_END__+0x38fb>
    4093:	72 69                	jb     40fe <__FRAME_END__+0x38f2>
    4095:	63 74 5f 61          	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
    4099:	72 72                	jb     410d <__FRAME_END__+0x3901>
    409b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    409e:	72 65                	jb     4105 <__FRAME_END__+0x38f9>
    40a0:	73 74                	jae    4116 <__FRAME_END__+0x390a>
    40a2:	72 69                	jb     410d <__FRAME_END__+0x3901>
    40a4:	63 74 00 5f          	movsxd esi,DWORD PTR [rax+rax*1+0x5f]
    40a8:	5f                   	pop    rdi
    40a9:	41 54                	push   r12
    40ab:	4f                   	rex.WRXB
    40ac:	4d                   	rex.WRB
    40ad:	49                   	rex.WB
    40ae:	43 5f                	rex.XB pop r15
    40b0:	41                   	rex.B
    40b1:	43 51                	rex.XB push r9
    40b3:	5f                   	pop    rdi
    40b4:	52                   	push   rdx
    40b5:	45                   	rex.RB
    40b6:	4c 20 34 00          	rex.WR and BYTE PTR [rax+rax*1],r14b
    40ba:	5f                   	pop    rdi
    40bb:	49                   	rex.WB
    40bc:	4f 5f                	rex.WRXB pop r15
    40be:	66 70 6f             	data16 jo 4130 <__FRAME_END__+0x3924>
    40c1:	73 5f                	jae    4122 <__FRAME_END__+0x3916>
    40c3:	74 20                	je     40e5 <__FRAME_END__+0x38d9>
    40c5:	5f                   	pop    rdi
    40c6:	47 5f                	rex.RXB pop r15
    40c8:	66 70 6f             	data16 jo 413a <__FRAME_END__+0x392e>
    40cb:	73 5f                	jae    412c <__FRAME_END__+0x3920>
    40cd:	74 00                	je     40cf <__FRAME_END__+0x38c3>
    40cf:	5f                   	pop    rdi
    40d0:	5f                   	pop    rdi
    40d1:	61                   	(bad)  
    40d2:	74 74                	je     4148 <__FRAME_END__+0x393c>
    40d4:	72 69                	jb     413f <__FRAME_END__+0x3933>
    40d6:	62                   	(bad)  
    40d7:	75 74                	jne    414d <__FRAME_END__+0x3941>
    40d9:	65 5f                	gs pop rdi
    40db:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    40dd:	72 6d                	jb     414c <__FRAME_END__+0x3940>
    40df:	61                   	(bad)  
    40e0:	74 5f                	je     4141 <__FRAME_END__+0x3935>
    40e2:	73 74                	jae    4158 <__FRAME_END__+0x394c>
    40e4:	72 66                	jb     414c <__FRAME_END__+0x3940>
    40e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    40e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40e9:	5f                   	pop    rdi
    40ea:	5f                   	pop    rdi
    40eb:	28 61 2c             	sub    BYTE PTR [rcx+0x2c],ah
    40ee:	62                   	(bad)  
    40ef:	29 20                	sub    DWORD PTR [rax],esp
    40f1:	5f                   	pop    rdi
    40f2:	5f                   	pop    rdi
    40f3:	61                   	(bad)  
    40f4:	74 74                	je     416a <__FRAME_END__+0x395e>
    40f6:	72 69                	jb     4161 <__FRAME_END__+0x3955>
    40f8:	62                   	(bad)  
    40f9:	75 74                	jne    416f <__FRAME_END__+0x3963>
    40fb:	65 5f                	gs pop rdi
    40fd:	5f                   	pop    rdi
    40fe:	20 28                	and    BYTE PTR [rax],ch
    4100:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4103:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    4105:	72 6d                	jb     4174 <__FRAME_END__+0x3968>
    4107:	61                   	(bad)  
    4108:	74 5f                	je     4169 <__FRAME_END__+0x395d>
    410a:	5f                   	pop    rdi
    410b:	20 28                	and    BYTE PTR [rax],ch
    410d:	5f                   	pop    rdi
    410e:	5f                   	pop    rdi
    410f:	73 74                	jae    4185 <__FRAME_END__+0x3979>
    4111:	72 66                	jb     4179 <__FRAME_END__+0x396d>
    4113:	6d                   	ins    DWORD PTR es:[rdi],dx
    4114:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4115:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4116:	5f                   	pop    rdi
    4117:	5f                   	pop    rdi
    4118:	2c 20                	sub    al,0x20
    411a:	61                   	(bad)  
    411b:	2c 20                	sub    al,0x20
    411d:	62                   	(bad)  
    411e:	29 29                	sub    DWORD PTR [rcx],ebp
    4120:	29 00                	sub    DWORD PTR [rax],eax
    4122:	5f                   	pop    rdi
    4123:	5f                   	pop    rdi
    4124:	44                   	rex.R
    4125:	45                   	rex.RB
    4126:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    4129:	5f                   	pop    rdi
    412a:	4d                   	rex.WRB
    412b:	49                   	rex.WB
    412c:	4e 5f                	rex.WRX pop rdi
    412e:	45 58                	rex.RB pop r8
    4130:	50                   	push   rax
    4131:	5f                   	pop    rdi
    4132:	5f                   	pop    rdi
    4133:	20 28                	and    BYTE PTR [rax],ch
    4135:	2d 39 34 29 00       	sub    eax,0x293439
    413a:	5f                   	pop    rdi
    413b:	49                   	rex.WB
    413c:	4f 5f                	rex.WRXB pop r15
    413e:	46                   	rex.RX
    413f:	49 58                	rex.WB pop r8
    4141:	45                   	rex.RB
    4142:	44 20 30             	and    BYTE PTR [rax],r14b
    4145:	31 30                	xor    DWORD PTR [rax],esi
    4147:	30 30                	xor    BYTE PTR [rax],dh
    4149:	30 00                	xor    BYTE PTR [rax],al
    414b:	5f                   	pop    rdi
    414c:	5f                   	pop    rdi
    414d:	49                   	rex.WB
    414e:	4e 54                	rex.WRX push rsp
    4150:	36 34 5f             	ss xor al,0x5f
    4153:	54                   	push   rsp
    4154:	59                   	pop    rcx
    4155:	50                   	push   rax
    4156:	45 5f                	rex.RB pop r15
    4158:	5f                   	pop    rdi
    4159:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    415d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4161:	74 00                	je     4163 <__FRAME_END__+0x3957>
    4163:	5f                   	pop    rdi
    4164:	5f                   	pop    rdi
    4165:	46                   	rex.RX
    4166:	4c 54                	rex.WR push rsp
    4168:	5f                   	pop    rdi
    4169:	4d                   	rex.WRB
    416a:	49                   	rex.WB
    416b:	4e 5f                	rex.WRX pop rdi
    416d:	5f                   	pop    rdi
    416e:	20 31                	and    BYTE PTR [rcx],dh
    4170:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    4173:	35 34 39 34 33       	xor    eax,0x33343934
    4178:	35 30 38 32 32       	xor    eax,0x32323830
    417d:	32 38                	xor    bh,BYTE PTR [rax]
    417f:	37                   	(bad)  
    4180:	35 30 37 39 36       	xor    eax,0x36393730
    4185:	38 37                	cmp    BYTE PTR [rdi],dh
    4187:	33 36                	xor    esi,DWORD PTR [rsi]
    4189:	35 33 37 32 32       	xor    eax,0x32323733
    418e:	32 32                	xor    dh,BYTE PTR [rdx]
    4190:	34 35                	xor    al,0x35
    4192:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    4196:	33 38                	xor    edi,DWORD PTR [rax]
    4198:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    419c:	55                   	push   rbp
    419d:	36 34 5f             	ss xor al,0x5f
    41a0:	54                   	push   rsp
    41a1:	59                   	pop    rcx
    41a2:	50                   	push   rax
    41a3:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    41a7:	73 69                	jae    4212 <__FRAME_END__+0x3a06>
    41a9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    41ab:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    41b1:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    41b5:	74 00                	je     41b7 <__FRAME_END__+0x39ab>
    41b7:	5f                   	pop    rdi
    41b8:	73 62                	jae    421c <__FRAME_END__+0x3a10>
    41ba:	75 66                	jne    4222 <__FRAME_END__+0x3a16>
    41bc:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    41bf:	4f 5f                	rex.WRXB pop r15
    41c1:	76 61                	jbe    4224 <__FRAME_END__+0x3a18>
    41c3:	5f                   	pop    rdi
    41c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    41c5:	69 73 74 00 73 74 64 	imul   esi,DWORD PTR [rbx+0x74],0x64747300
    41cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    41cd:	75 74                	jne    4243 <__FRAME_END__+0x3a37>
    41cf:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    41d2:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    41d4:	75 74                	jne    424a <__FRAME_END__+0x3a3e>
    41d6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41d9:	55                   	push   rbp
    41da:	53                   	push   rbx
    41db:	45 5f                	rex.RB pop r15
    41dd:	47                   	rex.RXB
    41de:	4e 55                	rex.WRX push rbp
    41e0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41e3:	54                   	push   rsp
    41e4:	49                   	rex.WB
    41e5:	4d                   	rex.WRB
    41e6:	45 52                	rex.RB push r10
    41e8:	5f                   	pop    rdi
    41e9:	54                   	push   rsp
    41ea:	5f                   	pop    rdi
    41eb:	54                   	push   rsp
    41ec:	59                   	pop    rcx
    41ed:	50                   	push   rax
    41ee:	45 20 76 6f          	and    BYTE PTR [r14+0x6f],r14b
    41f2:	69 64 20 2a 00 5f 49 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x4f495f00
    41f9:	4f 
    41fa:	5f                   	pop    rdi
    41fb:	77 72                	ja     426f <__FRAME_END__+0x3a63>
    41fd:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
    4204:	00 
    4205:	5f                   	pop    rdi
    4206:	5f                   	pop    rdi
    4207:	46 58                	rex.RX pop rax
    4209:	53                   	push   rbx
    420a:	52                   	push   rdx
    420b:	5f                   	pop    rdi
    420c:	5f                   	pop    rdi
    420d:	20 31                	and    BYTE PTR [rcx],dh
    420f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4212:	4c                   	rex.WR
    4213:	45                   	rex.RB
    4214:	41                   	rex.B
    4215:	46 5f                	rex.RX pop rdi
    4217:	41 54                	push   r12
    4219:	54                   	push   rsp
    421a:	52                   	push   rdx
    421b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    421e:	61                   	(bad)  
    421f:	74 74                	je     4295 <__FRAME_END__+0x3a89>
    4221:	72 69                	jb     428c <__FRAME_END__+0x3a80>
    4223:	62                   	(bad)  
    4224:	75 74                	jne    429a <__FRAME_END__+0x3a8e>
    4226:	65 5f                	gs pop rdi
    4228:	5f                   	pop    rdi
    4229:	20 28                	and    BYTE PTR [rax],ch
    422b:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    422e:	6c                   	ins    BYTE PTR es:[rdi],dx
    422f:	65 61                	gs (bad) 
    4231:	66 5f                	pop    di
    4233:	5f                   	pop    rdi
    4234:	29 29                	sub    DWORD PTR [rcx],ebp
    4236:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4239:	49                   	rex.WB
    423a:	4e 54                	rex.WRX push rsp
    423c:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    423f:	59                   	pop    rcx
    4240:	50                   	push   rax
    4241:	45 5f                	rex.RB pop r15
    4243:	5f                   	pop    rdi
    4244:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    4247:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4249:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    424e:	61                   	(bad)  
    424f:	72 00                	jb     4251 <__FRAME_END__+0x3a45>
    4251:	5f                   	pop    rdi
    4252:	5f                   	pop    rdi
    4253:	49                   	rex.WB
    4254:	4e 54                	rex.WRX push rsp
    4256:	5f                   	pop    rdi
    4257:	4c                   	rex.WR
    4258:	45                   	rex.RB
    4259:	41 53                	push   r11
    425b:	54                   	push   rsp
    425c:	33 32                	xor    esi,DWORD PTR [rdx]
    425e:	5f                   	pop    rdi
    425f:	57                   	push   rdi
    4260:	49                   	rex.WB
    4261:	44 54                	rex.R push rsp
    4263:	48 5f                	rex.W pop rdi
    4265:	5f                   	pop    rdi
    4266:	20 33                	and    BYTE PTR [rbx],dh
    4268:	32 00                	xor    al,BYTE PTR [rax]
    426a:	5f                   	pop    rdi
    426b:	5f                   	pop    rdi
    426c:	53                   	push   rbx
    426d:	59                   	pop    rcx
    426e:	53                   	push   rbx
    426f:	43                   	rex.XB
    4270:	41                   	rex.B
    4271:	4c                   	rex.WR
    4272:	4c 5f                	rex.WR pop rdi
    4274:	53                   	push   rbx
    4275:	4c                   	rex.WR
    4276:	4f                   	rex.WRXB
    4277:	4e                   	rex.WRX
    4278:	47 5f                	rex.RXB pop r15
    427a:	54                   	push   rsp
    427b:	59                   	pop    rcx
    427c:	50                   	push   rax
    427d:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4281:	53                   	push   rbx
    4282:	4c                   	rex.WR
    4283:	4f                   	rex.WRXB
    4284:	4e                   	rex.WRX
    4285:	47 57                	rex.RXB push r15
    4287:	4f 52                	rex.WRXB push r10
    4289:	44 5f                	rex.R pop rdi
    428b:	54                   	push   rsp
    428c:	59                   	pop    rcx
    428d:	50                   	push   rax
    428e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4292:	55                   	push   rbp
    4293:	49                   	rex.WB
    4294:	4e 54                	rex.WRX push rsp
    4296:	4d                   	rex.WRB
    4297:	41 58                	pop    r8
    4299:	5f                   	pop    rdi
    429a:	4d                   	rex.WRB
    429b:	41 58                	pop    r8
    429d:	5f                   	pop    rdi
    429e:	5f                   	pop    rdi
    429f:	20 30                	and    BYTE PTR [rax],dh
    42a1:	78 66                	js     4309 <__FRAME_END__+0x3afd>
    42a3:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    42aa:	66 66 66 66 66 66 66 
    42b1:	66 55                	push   bp
    42b3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    42b7:	67 6c                	ins    BYTE PTR es:[edi],dx
    42b9:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    42c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42c1:	67 5f                	addr32 pop rdi
    42c3:	70 72                	jo     4337 <__FRAME_END__+0x3b2b>
    42c5:	65 72 65             	gs jb  432d <__FRAME_END__+0x3b21>
    42c8:	71 28                	jno    42f2 <__FRAME_END__+0x3ae6>
    42ca:	6d                   	ins    DWORD PTR es:[rdi],dx
    42cb:	61                   	(bad)  
    42cc:	6a 2c                	push   0x2c
    42ce:	6d                   	ins    DWORD PTR es:[rdi],dx
    42cf:	69 6e 29 20 30 00 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f003020
    42d6:	49                   	rex.WB
    42d7:	4f 5f                	rex.WRXB pop r15
    42d9:	62 61                	(bad)  
    42db:	63 6b 75             	movsxd ebp,DWORD PTR [rbx+0x75]
    42de:	70 5f                	jo     433f <__FRAME_END__+0x3b33>
    42e0:	62 61                	(bad)  
    42e2:	73 65                	jae    4349 <__FRAME_END__+0x3b3d>
    42e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e8:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    42ef:	31 00                	xor    DWORD PTR [rax],eax
    42f1:	5f                   	pop    rdi
    42f2:	5f                   	pop    rdi
    42f3:	50                   	push   rax
    42f4:	49                   	rex.WB
    42f5:	43 5f                	rex.XB pop r15
    42f7:	5f                   	pop    rdi
    42f8:	20 32                	and    BYTE PTR [rdx],dh
    42fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42fd:	49                   	rex.WB
    42fe:	4e 54                	rex.WRX push rsp
    4300:	5f                   	pop    rdi
    4301:	4c                   	rex.WR
    4302:	45                   	rex.RB
    4303:	41 53                	push   r11
    4305:	54                   	push   rsp
    4306:	33 32                	xor    esi,DWORD PTR [rdx]
    4308:	5f                   	pop    rdi
    4309:	54                   	push   rsp
    430a:	59                   	pop    rcx
    430b:	50                   	push   rax
    430c:	45 5f                	rex.RB pop r15
    430e:	5f                   	pop    rdi
    430f:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    4312:	74 00                	je     4314 <__FRAME_END__+0x3b08>
    4314:	5f                   	pop    rdi
    4315:	5f                   	pop    rdi
    4316:	55                   	push   rbp
    4317:	49                   	rex.WB
    4318:	4e 54                	rex.WRX push rsp
    431a:	5f                   	pop    rdi
    431b:	4c                   	rex.WR
    431c:	45                   	rex.RB
    431d:	41 53                	push   r11
    431f:	54                   	push   rsp
    4320:	36 34 5f             	ss xor al,0x5f
    4323:	54                   	push   rsp
    4324:	59                   	pop    rcx
    4325:	50                   	push   rax
    4326:	45 5f                	rex.RB pop r15
    4328:	5f                   	pop    rdi
    4329:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    432d:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    4331:	73 69                	jae    439c <__FRAME_END__+0x3b90>
    4333:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4335:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    433a:	74 00                	je     433c <__FRAME_END__+0x3b30>
    433c:	5f                   	pop    rdi
    433d:	49                   	rex.WB
    433e:	4f 5f                	rex.WRXB pop r15
    4340:	70 75                	jo     43b7 <__FRAME_END__+0x3bab>
    4342:	74 63                	je     43a7 <__FRAME_END__+0x3b9b>
    4344:	5f                   	pop    rdi
    4345:	75 6e                	jne    43b5 <__FRAME_END__+0x3ba9>
    4347:	6c                   	ins    BYTE PTR es:[rdi],dx
    4348:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4349:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    434c:	64 28 5f 63          	sub    BYTE PTR fs:[rdi+0x63],bl
    4350:	68 2c 5f 66 70       	push   0x70665f2c
    4355:	29 20                	sub    DWORD PTR [rax],esp
    4357:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    435a:	4f 5f                	rex.WRXB pop r15
    435c:	42                   	rex.X
    435d:	45 20 28             	and    BYTE PTR [r8],r13b
    4360:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    4363:	70 29                	jo     438e <__FRAME_END__+0x3b82>
    4365:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    436a:	5f                   	pop    rdi
    436b:	77 72                	ja     43df <__FRAME_END__+0x3bd3>
    436d:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    4374:	20 
    4375:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    437b:	70 29                	jo     43a6 <__FRAME_END__+0x3b9a>
    437d:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    4382:	5f                   	pop    rdi
    4383:	77 72                	ja     43f7 <__FRAME_END__+0x3beb>
    4385:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2c646e65
    438c:	2c 
    438d:	20 30                	and    BYTE PTR [rax],dh
    438f:	29 20                	sub    DWORD PTR [rax],esp
    4391:	3f                   	(bad)  
    4392:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    4395:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4396:	76 65                	jbe    43fd <__FRAME_END__+0x3bf1>
    4398:	72 66                	jb     4400 <__FRAME_END__+0x3bf4>
    439a:	6c                   	ins    BYTE PTR es:[rdi],dx
    439b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    439c:	77 20                	ja     43be <__FRAME_END__+0x3bb2>
    439e:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    43a1:	70 2c                	jo     43cf <__FRAME_END__+0x3bc3>
    43a3:	20 28                	and    BYTE PTR [rax],ch
    43a5:	75 6e                	jne    4415 <__FRAME_END__+0x3c09>
    43a7:	73 69                	jae    4412 <__FRAME_END__+0x3c06>
    43a9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    43ab:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    43b0:	61                   	(bad)  
    43b1:	72 29                	jb     43dc <__FRAME_END__+0x3bd0>
    43b3:	20 28                	and    BYTE PTR [rax],ch
    43b5:	5f                   	pop    rdi
    43b6:	63 68 29             	movsxd ebp,DWORD PTR [rax+0x29]
    43b9:	29 20                	sub    DWORD PTR [rax],esp
    43bb:	3a 20                	cmp    ah,BYTE PTR [rax]
    43bd:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    43c0:	73 69                	jae    442b <__FRAME_END__+0x3c1f>
    43c2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    43c4:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    43c9:	61                   	(bad)  
    43ca:	72 29                	jb     43f5 <__FRAME_END__+0x3be9>
    43cc:	20 28                	and    BYTE PTR [rax],ch
    43ce:	2a 28                	sub    ch,BYTE PTR [rax]
    43d0:	5f                   	pop    rdi
    43d1:	66 70 29             	data16 jo 43fd <__FRAME_END__+0x3bf1>
    43d4:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    43d9:	5f                   	pop    rdi
    43da:	77 72                	ja     444e <__FRAME_END__+0x3c42>
    43dc:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2b727470
    43e3:	2b 
    43e4:	2b 20                	sub    esp,DWORD PTR [rax]
    43e6:	3d 20 28 5f 63       	cmp    eax,0x635f2820
    43eb:	68 29 29 29 00       	push   0x292929
    43f0:	5f                   	pop    rdi
    43f1:	50                   	push   rax
    43f2:	4f 53                	rex.WRXB push r11
    43f4:	49 58                	rex.WB pop r8
    43f6:	5f                   	pop    rdi
    43f7:	53                   	push   rbx
    43f8:	4f 55                	rex.WRXB push r13
    43fa:	52                   	push   rdx
    43fb:	43                   	rex.XB
    43fc:	45 20 31             	and    BYTE PTR [r9],r14b
    43ff:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4402:	4f 5f                	rex.WRXB pop r15
    4404:	44                   	rex.R
    4405:	4f                   	rex.WRXB
    4406:	4e 54                	rex.WRX push rsp
    4408:	5f                   	pop    rdi
    4409:	43                   	rex.XB
    440a:	4c                   	rex.WR
    440b:	4f 53                	rex.WRXB push r11
    440d:	45 20 30             	and    BYTE PTR [r8],r14b
    4410:	31 30                	xor    DWORD PTR [rax],esi
    4412:	30 30                	xor    BYTE PTR [rax],dh
    4414:	30 30                	xor    BYTE PTR [rax],dh
    4416:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4419:	47                   	rex.RXB
    441a:	4c                   	rex.WR
    441b:	49                   	rex.WB
    441c:	42                   	rex.X
    441d:	43 5f                	rex.XB pop r15
    441f:	55                   	push   rbp
    4420:	53                   	push   rbx
    4421:	45 5f                	rex.RB pop r15
    4423:	49                   	rex.WB
    4424:	45                   	rex.RB
    4425:	43 5f                	rex.XB pop r15
    4427:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f7d63 <_end+0x423f6d4b>
    442e:	46 50                	rex.RX push rax
    4430:	5f                   	pop    rdi
    4431:	45 58                	rex.RB pop r8
    4433:	54                   	push   rsp
    4434:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4437:	53                   	push   rbx
    4438:	49 5a                	rex.WB pop r10
    443a:	45 5f                	rex.RB pop r15
    443c:	4d                   	rex.WRB
    443d:	41 58                	pop    r8
    443f:	5f                   	pop    rdi
    4440:	5f                   	pop    rdi
    4441:	20 30                	and    BYTE PTR [rax],dh
    4443:	78 66                	js     44ab <__FRAME_END__+0x3c9f>
    4445:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    444c:	66 66 66 66 66 66 66 
    4453:	66 55                	push   bp
    4455:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    4459:	55                   	push   rbp
    445a:	49                   	rex.WB
    445b:	44 5f                	rex.R pop rdi
    445d:	54                   	push   rsp
    445e:	5f                   	pop    rdi
    445f:	54                   	push   rsp
    4460:	59                   	pop    rcx
    4461:	50                   	push   rax
    4462:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4466:	55                   	push   rbp
    4467:	33 32                	xor    esi,DWORD PTR [rdx]
    4469:	5f                   	pop    rdi
    446a:	54                   	push   rsp
    446b:	59                   	pop    rcx
    446c:	50                   	push   rax
    446d:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4471:	55                   	push   rbp
    4472:	4c                   	rex.WR
    4473:	4f                   	rex.WRXB
    4474:	4e                   	rex.WRX
    4475:	47 57                	rex.RXB push r15
    4477:	4f 52                	rex.WRXB push r10
    4479:	44 5f                	rex.R pop rdi
    447b:	54                   	push   rsp
    447c:	59                   	pop    rcx
    447d:	50                   	push   rax
    447e:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    4482:	73 69                	jae    44ed <__FRAME_END__+0x3ce1>
    4484:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4486:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    448c:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4490:	74 00                	je     4492 <__FRAME_END__+0x3c86>
    4492:	5f                   	pop    rdi
    4493:	5f                   	pop    rdi
    4494:	47                   	rex.RXB
    4495:	43                   	rex.XB
    4496:	43 5f                	rex.XB pop r15
    4498:	41 54                	push   r12
    449a:	4f                   	rex.WRXB
    449b:	4d                   	rex.WRB
    449c:	49                   	rex.WB
    449d:	43 5f                	rex.XB pop r15
    449f:	53                   	push   rbx
    44a0:	48                   	rex.W
    44a1:	4f 52                	rex.WRXB push r10
    44a3:	54                   	push   rsp
    44a4:	5f                   	pop    rdi
    44a5:	4c                   	rex.WR
    44a6:	4f                   	rex.WRXB
    44a7:	43                   	rex.XB
    44a8:	4b 5f                	rex.WXB pop r15
    44aa:	46 52                	rex.RX push rdx
    44ac:	45                   	rex.RB
    44ad:	45 20 32             	and    BYTE PTR [r10],r14b
    44b0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    44b3:	46                   	rex.RX
    44b4:	4c 54                	rex.WR push rsp
    44b6:	36 34 58             	ss xor al,0x58
    44b9:	5f                   	pop    rdi
    44ba:	44                   	rex.R
    44bb:	45                   	rex.RB
    44bc:	43                   	rex.XB
    44bd:	49                   	rex.WB
    44be:	4d                   	rex.WRB
    44bf:	41                   	rex.B
    44c0:	4c 5f                	rex.WR pop rdi
    44c2:	44                   	rex.R
    44c3:	49                   	rex.WB
    44c4:	47 5f                	rex.RXB pop r15
    44c6:	5f                   	pop    rdi
    44c7:	20 32                	and    BYTE PTR [rdx],dh
    44c9:	31 00                	xor    DWORD PTR [rax],eax
    44cb:	53                   	push   rbx
    44cc:	45                   	rex.RB
    44cd:	45                   	rex.RB
    44ce:	4b 5f                	rex.WXB pop r15
    44d0:	53                   	push   rbx
    44d1:	45 54                	rex.RB push r12
    44d3:	20 30                	and    BYTE PTR [rax],dh
    44d5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    44d8:	55                   	push   rbp
    44d9:	53                   	push   rbx
    44da:	45 5f                	rex.RB pop r15
    44dc:	58                   	pop    rax
    44dd:	4f 50                	rex.WRXB push r8
    44df:	45                   	rex.RB
    44e0:	4e 5f                	rex.WRX pop rdi
    44e2:	45 58                	rex.RB pop r8
    44e4:	54                   	push   rsp
    44e5:	45                   	rex.RB
    44e6:	4e                   	rex.WRX
    44e7:	44                   	rex.R
    44e8:	45                   	rex.RB
    44e9:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    44ed:	49                   	rex.WB
    44ee:	4e 54                	rex.WRX push rsp
    44f0:	5f                   	pop    rdi
    44f1:	46                   	rex.RX
    44f2:	41 53                	push   r11
    44f4:	54                   	push   rsp
    44f5:	31 36                	xor    DWORD PTR [rsi],esi
    44f7:	5f                   	pop    rdi
    44f8:	4d                   	rex.WRB
    44f9:	41 58                	pop    r8
    44fb:	5f                   	pop    rdi
    44fc:	5f                   	pop    rdi
    44fd:	20 30                	and    BYTE PTR [rax],dh
    44ff:	78 37                	js     4538 <__FRAME_END__+0x3d2c>
    4501:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    4508:	66 66 66 66 66 66 66 
    450f:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    4514:	46                   	rex.RX
    4515:	4c 54                	rex.WR push rsp
    4517:	5f                   	pop    rdi
    4518:	4d                   	rex.WRB
    4519:	41 58                	pop    r8
    451b:	5f                   	pop    rdi
    451c:	45 58                	rex.RB pop r8
    451e:	50                   	push   rax
    451f:	5f                   	pop    rdi
    4520:	5f                   	pop    rdi
    4521:	20 31                	and    BYTE PTR [rcx],dh
    4523:	32 38                	xor    bh,BYTE PTR [rax]
    4525:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4528:	46                   	rex.RX
    4529:	4c 54                	rex.WR push rsp
    452b:	36 34 5f             	ss xor al,0x5f
    452e:	4d                   	rex.WRB
    452f:	49                   	rex.WB
    4530:	4e 5f                	rex.WRX pop rdi
    4532:	45 58                	rex.RB pop r8
    4534:	50                   	push   rax
    4535:	5f                   	pop    rdi
    4536:	5f                   	pop    rdi
    4537:	20 28                	and    BYTE PTR [rax],ch
    4539:	2d 31 30 32 31       	sub    eax,0x31323031
    453e:	29 00                	sub    DWORD PTR [rax],eax
    4540:	5f                   	pop    rdi
    4541:	49                   	rex.WB
    4542:	4f 53                	rex.WRXB push r11
    4544:	5f                   	pop    rdi
    4545:	41 50                	push   r8
    4547:	50                   	push   rax
    4548:	45                   	rex.RB
    4549:	4e                   	rex.WRX
    454a:	44 20 38             	and    BYTE PTR [rax],r15b
    454d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4550:	47                   	rex.RXB
    4551:	4c                   	rex.WR
    4552:	49                   	rex.WB
    4553:	42                   	rex.X
    4554:	43 5f                	rex.XB pop r15
    4556:	49                   	rex.WB
    4557:	4e 54                	rex.WRX push rsp
    4559:	45 52                	rex.RB push r10
    455b:	4e                   	rex.WRX
    455c:	41                   	rex.B
    455d:	4c 5f                	rex.WR pop rdi
    455f:	53                   	push   rbx
    4560:	54                   	push   rsp
    4561:	41 52                	push   r10
    4563:	54                   	push   rsp
    4564:	49                   	rex.WB
    4565:	4e                   	rex.WRX
    4566:	47 5f                	rex.RXB pop r15
    4568:	48                   	rex.W
    4569:	45                   	rex.RB
    456a:	41                   	rex.B
    456b:	44                   	rex.R
    456c:	45 52                	rex.RB push r10
    456e:	5f                   	pop    rdi
    456f:	49                   	rex.WB
    4570:	4d 50                	rex.WRB push r8
    4572:	4c                   	rex.WR
    4573:	45                   	rex.RB
    4574:	4d                   	rex.WRB
    4575:	45                   	rex.RB
    4576:	4e 54                	rex.WRX push rsp
    4578:	41 54                	push   r12
    457a:	49                   	rex.WB
    457b:	4f                   	rex.WRXB
    457c:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    4580:	46                   	rex.RX
    4581:	4c 54                	rex.WR push rsp
    4583:	5f                   	pop    rdi
    4584:	45 56                	rex.RB push r14
    4586:	41                   	rex.B
    4587:	4c 5f                	rex.WR pop rdi
    4589:	4d                   	rex.WRB
    458a:	45 54                	rex.RB push r12
    458c:	48                   	rex.W
    458d:	4f                   	rex.WRXB
    458e:	44 5f                	rex.R pop rdi
    4590:	54                   	push   rsp
    4591:	53                   	push   rbx
    4592:	5f                   	pop    rdi
    4593:	31 38                	xor    DWORD PTR [rax],edi
    4595:	36 36 31 5f 33       	ss xor DWORD PTR ss:[rdi+0x33],ebx
    459a:	5f                   	pop    rdi
    459b:	5f                   	pop    rdi
    459c:	20 30                	and    BYTE PTR [rax],dh
    459e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45a1:	44                   	rex.R
    45a2:	42                   	rex.X
    45a3:	4c 5f                	rex.WR pop rdi
    45a5:	48                   	rex.W
    45a6:	41 53                	push   r11
    45a8:	5f                   	pop    rdi
    45a9:	49                   	rex.WB
    45aa:	4e                   	rex.WRX
    45ab:	46                   	rex.RX
    45ac:	49                   	rex.WB
    45ad:	4e                   	rex.WRX
    45ae:	49 54                	rex.WB push r12
    45b0:	59                   	pop    rcx
    45b1:	5f                   	pop    rdi
    45b2:	5f                   	pop    rdi
    45b3:	20 31                	and    BYTE PTR [rcx],dh
    45b5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45b8:	61                   	(bad)  
    45b9:	74 74                	je     462f <__FRAME_END__+0x3e23>
    45bb:	72 69                	jb     4626 <__FRAME_END__+0x3e1a>
    45bd:	62                   	(bad)  
    45be:	75 74                	jne    4634 <__FRAME_END__+0x3e28>
    45c0:	65 5f                	gs pop rdi
    45c2:	77 61                	ja     4625 <__FRAME_END__+0x3e19>
    45c4:	72 6e                	jb     4634 <__FRAME_END__+0x3e28>
    45c6:	5f                   	pop    rdi
    45c7:	75 6e                	jne    4637 <__FRAME_END__+0x3e2b>
    45c9:	75 73                	jne    463e <__FRAME_END__+0x3e32>
    45cb:	65 64 5f             	gs fs pop rdi
    45ce:	72 65                	jb     4635 <__FRAME_END__+0x3e29>
    45d0:	73 75                	jae    4647 <__FRAME_END__+0x3e3b>
    45d2:	6c                   	ins    BYTE PTR es:[rdi],dx
    45d3:	74 5f                	je     4634 <__FRAME_END__+0x3e28>
    45d5:	5f                   	pop    rdi
    45d6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    45d9:	61                   	(bad)  
    45da:	74 74                	je     4650 <__FRAME_END__+0x3e44>
    45dc:	72 69                	jb     4647 <__FRAME_END__+0x3e3b>
    45de:	62                   	(bad)  
    45df:	75 74                	jne    4655 <__FRAME_END__+0x3e49>
    45e1:	65 5f                	gs pop rdi
    45e3:	5f                   	pop    rdi
    45e4:	20 28                	and    BYTE PTR [rax],ch
    45e6:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    45e9:	77 61                	ja     464c <__FRAME_END__+0x3e40>
    45eb:	72 6e                	jb     465b <__FRAME_END__+0x3e4f>
    45ed:	5f                   	pop    rdi
    45ee:	75 6e                	jne    465e <__FRAME_END__+0x3e52>
    45f0:	75 73                	jne    4665 <__FRAME_END__+0x3e59>
    45f2:	65 64 5f             	gs fs pop rdi
    45f5:	72 65                	jb     465c <__FRAME_END__+0x3e50>
    45f7:	73 75                	jae    466e <__FRAME_END__+0x3e62>
    45f9:	6c                   	ins    BYTE PTR es:[rdi],dx
    45fa:	74 5f                	je     465b <__FRAME_END__+0x3e4f>
    45fc:	5f                   	pop    rdi
    45fd:	29 29                	sub    DWORD PTR [rcx],ebp
    45ff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4602:	49                   	rex.WB
    4603:	4e 54                	rex.WRX push rsp
    4605:	36 34 5f             	ss xor al,0x5f
    4608:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    460c:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    460f:	23 23                	and    esp,DWORD PTR [rbx]
    4611:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    4615:	5f                   	pop    rdi
    4616:	45                   	rex.RB
    4617:	4e                   	rex.WRX
    4618:	44 5f                	rex.R pop rdi
    461a:	44                   	rex.R
    461b:	45                   	rex.RB
    461c:	43                   	rex.XB
    461d:	4c 53                	rex.WR push rbx
    461f:	20 00                	and    BYTE PTR [rax],al
    4621:	5f                   	pop    rdi
    4622:	5f                   	pop    rdi
    4623:	46                   	rex.RX
    4624:	4c 54                	rex.WR push rsp
    4626:	5f                   	pop    rdi
    4627:	48                   	rex.W
    4628:	41 53                	push   r11
    462a:	5f                   	pop    rdi
    462b:	51                   	push   rcx
    462c:	55                   	push   rbp
    462d:	49                   	rex.WB
    462e:	45 54                	rex.RB push r12
    4630:	5f                   	pop    rdi
    4631:	4e                   	rex.WRX
    4632:	41                   	rex.B
    4633:	4e 5f                	rex.WRX pop rdi
    4635:	5f                   	pop    rdi
    4636:	20 31                	and    BYTE PTR [rcx],dh
    4638:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    463b:	53                   	push   rbx
    463c:	49 5a                	rex.WB pop r10
    463e:	45                   	rex.RB
    463f:	4f                   	rex.WRXB
    4640:	46 5f                	rex.RX pop rdi
    4642:	49                   	rex.WB
    4643:	4e 54                	rex.WRX push rsp
    4645:	5f                   	pop    rdi
    4646:	5f                   	pop    rdi
    4647:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    464a:	5f                   	pop    rdi
    464b:	5f                   	pop    rdi
    464c:	43                   	rex.XB
    464d:	4c                   	rex.WR
    464e:	4f                   	rex.WRXB
    464f:	43                   	rex.XB
    4650:	4b                   	rex.WXB
    4651:	49                   	rex.WB
    4652:	44 5f                	rex.R pop rdi
    4654:	54                   	push   rsp
    4655:	5f                   	pop    rdi
    4656:	54                   	push   rsp
    4657:	59                   	pop    rcx
    4658:	50                   	push   rax
    4659:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    465d:	53                   	push   rbx
    465e:	33 32                	xor    esi,DWORD PTR [rdx]
    4660:	5f                   	pop    rdi
    4661:	54                   	push   rsp
    4662:	59                   	pop    rcx
    4663:	50                   	push   rax
    4664:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4668:	49                   	rex.WB
    4669:	4e 54                	rex.WRX push rsp
    466b:	5f                   	pop    rdi
    466c:	46                   	rex.RX
    466d:	41 53                	push   r11
    466f:	54                   	push   rsp
    4670:	31 36                	xor    DWORD PTR [rsi],esi
    4672:	5f                   	pop    rdi
    4673:	54                   	push   rsp
    4674:	59                   	pop    rcx
    4675:	50                   	push   rax
    4676:	45 5f                	rex.RB pop r15
    4678:	5f                   	pop    rdi
    4679:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    467d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4681:	74 00                	je     4683 <__FRAME_END__+0x3e77>
    4683:	5f                   	pop    rdi
    4684:	5f                   	pop    rdi
    4685:	53                   	push   rbx
    4686:	54                   	push   rsp
    4687:	44                   	rex.R
    4688:	43 5f                	rex.XB pop r15
    468a:	49                   	rex.WB
    468b:	45                   	rex.RB
    468c:	43 5f                	rex.XB pop r15
    468e:	35 35 39 5f 5f       	xor    eax,0x5f5f3935
    4693:	20 31                	and    BYTE PTR [rcx],dh
    4695:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4698:	44                   	rex.R
    4699:	45                   	rex.RB
    469a:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    469d:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    46a0:	55                   	push   rbp
    46a1:	42                   	rex.X
    46a2:	4e                   	rex.WRX
    46a3:	4f 52                	rex.WRXB push r10
    46a5:	4d                   	rex.WRB
    46a6:	41                   	rex.B
    46a7:	4c 5f                	rex.WR pop rdi
    46a9:	4d                   	rex.WRB
    46aa:	49                   	rex.WB
    46ab:	4e 5f                	rex.WRX pop rdi
    46ad:	5f                   	pop    rdi
    46ae:	20 30                	and    BYTE PTR [rax],dh
    46b0:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    46b3:	30 30                	xor    BYTE PTR [rax],dh
    46b5:	30 30                	xor    BYTE PTR [rax],dh
    46b7:	30 30                	xor    BYTE PTR [rax],dh
    46b9:	30 30                	xor    BYTE PTR [rax],dh
    46bb:	30 30                	xor    BYTE PTR [rax],dh
    46bd:	30 30                	xor    BYTE PTR [rax],dh
    46bf:	30 30                	xor    BYTE PTR [rax],dh
    46c1:	30 30                	xor    BYTE PTR [rax],dh
    46c3:	30 30                	xor    BYTE PTR [rax],dh
    46c5:	30 30                	xor    BYTE PTR [rax],dh
    46c7:	30 30                	xor    BYTE PTR [rax],dh
    46c9:	30 30                	xor    BYTE PTR [rax],dh
    46cb:	30 30                	xor    BYTE PTR [rax],dh
    46cd:	30 30                	xor    BYTE PTR [rax],dh
    46cf:	30 30                	xor    BYTE PTR [rax],dh
    46d1:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
    46d4:	36 31 34 33          	xor    DWORD PTR ss:[rbx+rsi*1],esi
    46d8:	44                   	rex.R
    46d9:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    46dd:	55                   	push   rbp
    46de:	53                   	push   rbx
    46df:	45 5f                	rex.RB pop r15
    46e1:	4c                   	rex.WR
    46e2:	41 52                	push   r10
    46e4:	47                   	rex.RXB
    46e5:	45                   	rex.RB
    46e6:	46                   	rex.RX
    46e7:	49                   	rex.WB
    46e8:	4c                   	rex.WR
    46e9:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    46ed:	53                   	push   rbx
    46ee:	49 5a                	rex.WB pop r10
    46f0:	45                   	rex.RB
    46f1:	4f                   	rex.WRXB
    46f2:	46 5f                	rex.RX pop rdi
    46f4:	46                   	rex.RX
    46f5:	4c                   	rex.WR
    46f6:	4f                   	rex.WRXB
    46f7:	41 54                	push   r12
    46f9:	38 30                	cmp    BYTE PTR [rax],dh
    46fb:	5f                   	pop    rdi
    46fc:	5f                   	pop    rdi
    46fd:	20 31                	and    BYTE PTR [rcx],dh
    46ff:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4703:	46                   	rex.RX
    4704:	4c 54                	rex.WR push rsp
    4706:	33 32                	xor    esi,DWORD PTR [rdx]
    4708:	58                   	pop    rax
    4709:	5f                   	pop    rdi
    470a:	48                   	rex.W
    470b:	41 53                	push   r11
    470d:	5f                   	pop    rdi
    470e:	51                   	push   rcx
    470f:	55                   	push   rbp
    4710:	49                   	rex.WB
    4711:	45 54                	rex.RB push r12
    4713:	5f                   	pop    rdi
    4714:	4e                   	rex.WRX
    4715:	41                   	rex.B
    4716:	4e 5f                	rex.WRX pop rdi
    4718:	5f                   	pop    rdi
    4719:	20 31                	and    BYTE PTR [rcx],dh
    471b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    471e:	44                   	rex.R
    471f:	42                   	rex.X
    4720:	4c 5f                	rex.WR pop rdi
    4722:	4d                   	rex.WRB
    4723:	41 58                	pop    r8
    4725:	5f                   	pop    rdi
    4726:	31 30                	xor    DWORD PTR [rax],esi
    4728:	5f                   	pop    rdi
    4729:	45 58                	rex.RB pop r8
    472b:	50                   	push   rax
    472c:	5f                   	pop    rdi
    472d:	5f                   	pop    rdi
    472e:	20 33                	and    BYTE PTR [rbx],dh
    4730:	30 38                	xor    BYTE PTR [rax],bh
    4732:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4735:	55                   	push   rbp
    4736:	53                   	push   rbx
    4737:	45 5f                	rex.RB pop r15
    4739:	4d                   	rex.WRB
    473a:	49 53                	rex.WB push r11
    473c:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    473f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4742:	47 58                	rex.RXB pop r8
    4744:	58                   	pop    rax
    4745:	5f                   	pop    rdi
    4746:	41                   	rex.B
    4747:	42                   	rex.X
    4748:	49 5f                	rex.WB pop r15
    474a:	56                   	push   rsi
    474b:	45 52                	rex.RB push r10
    474d:	53                   	push   rbx
    474e:	49                   	rex.WB
    474f:	4f                   	rex.WRXB
    4750:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    4753:	30 31                	xor    BYTE PTR [rcx],dh
    4755:	31 00                	xor    DWORD PTR [rax],eax
    4757:	5f                   	pop    rdi
    4758:	5f                   	pop    rdi
    4759:	70 69                	jo     47c4 <__FRAME_END__+0x3fb8>
    475b:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    475e:	20 32                	and    BYTE PTR [rdx],dh
    4760:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4763:	41 54                	push   r12
    4765:	4f                   	rex.WRXB
    4766:	4d                   	rex.WRB
    4767:	49                   	rex.WB
    4768:	43 5f                	rex.XB pop r15
    476a:	52                   	push   rdx
    476b:	45                   	rex.RB
    476c:	4c                   	rex.WR
    476d:	45                   	rex.RB
    476e:	41 53                	push   r11
    4770:	45 20 33             	and    BYTE PTR [r11],r14b
    4773:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4776:	53                   	push   rbx
    4777:	53                   	push   rbx
    4778:	45 5f                	rex.RB pop r15
    477a:	5f                   	pop    rdi
    477b:	20 31                	and    BYTE PTR [rcx],dh
    477d:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4780:	4f 5f                	rex.WRXB pop r15
    4782:	4e                   	rex.WRX
    4783:	4f 5f                	rex.WRXB pop r15
    4785:	52                   	push   rdx
    4786:	45                   	rex.RB
    4787:	41                   	rex.B
    4788:	44 53                	rex.R push rbx
    478a:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    478d:	5f                   	pop    rdi
    478e:	5f                   	pop    rdi
    478f:	47                   	rex.RXB
    4790:	4c                   	rex.WR
    4791:	49                   	rex.WB
    4792:	42                   	rex.X
    4793:	43 5f                	rex.XB pop r15
    4795:	55                   	push   rbp
    4796:	53                   	push   rbx
    4797:	45 5f                	rex.RB pop r15
    4799:	49                   	rex.WB
    479a:	45                   	rex.RB
    479b:	43 5f                	rex.XB pop r15
    479d:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f80d9 <_end+0x463f70c1>
    47a4:	55                   	push   rbp
    47a5:	4e                   	rex.WRX
    47a6:	43 53                	rex.XB push r11
    47a8:	5f                   	pop    rdi
    47a9:	45 58                	rex.RB pop r8
    47ab:	54                   	push   rsp
    47ac:	20 30                	and    BYTE PTR [rax],dh
    47ae:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
    47b1:	69 6e 00 5f 53 49 5a 	imul   ebp,DWORD PTR [rsi+0x0],0x5a49535f
    47b8:	45 54                	rex.RB push r12
    47ba:	5f                   	pop    rdi
    47bb:	20 00                	and    BYTE PTR [rax],al
    47bd:	5f                   	pop    rdi
    47be:	5f                   	pop    rdi
    47bf:	46                   	rex.RX
    47c0:	4c 54                	rex.WR push rsp
    47c2:	31 32                	xor    DWORD PTR [rdx],esi
    47c4:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    47c7:	45                   	rex.RB
    47c8:	4e                   	rex.WRX
    47c9:	4f 52                	rex.WRXB push r10
    47cb:	4d 5f                	rex.WRB pop r15
    47cd:	4d                   	rex.WRB
    47ce:	49                   	rex.WB
    47cf:	4e 5f                	rex.WRX pop rdi
    47d1:	5f                   	pop    rdi
    47d2:	20 36                	and    BYTE PTR [rsi],dh
    47d4:	2e 34 37             	cs xor al,0x37
    47d7:	35 31 37 35 31       	xor    eax,0x31353731
    47dc:	31 39                	xor    DWORD PTR [rcx],edi
    47de:	34 33                	xor    al,0x33
    47e0:	38 30                	cmp    BYTE PTR [rax],dh
    47e2:	32 35 31 31 30 39    	xor    dh,BYTE PTR [rip+0x39303131]        # 39307919 <_end+0x39106901>
    47e8:	32 34 34             	xor    dh,BYTE PTR [rsp+rsi*1]
    47eb:	33 38                	xor    edi,DWORD PTR [rax]
    47ed:	39 35 38 32 32 37    	cmp    DWORD PTR [rip+0x37323238],esi        # 37327a2b <_end+0x37126a13>
    47f3:	36 34 36             	ss xor al,0x36
    47f6:	35 35 65 2d 34       	xor    eax,0x342d6535
    47fb:	39 36                	cmp    DWORD PTR [rsi],esi
    47fd:	36 46 31 32          	rex.RX xor DWORD PTR ss:[rdx],r14d
    4801:	38 00                	cmp    BYTE PTR [rax],al
    4803:	5f                   	pop    rdi
    4804:	5f                   	pop    rdi
    4805:	47                   	rex.RXB
    4806:	4c                   	rex.WR
    4807:	49                   	rex.WB
    4808:	42                   	rex.X
    4809:	43 5f                	rex.XB pop r15
    480b:	55                   	push   rbp
    480c:	53                   	push   rbx
    480d:	45 5f                	rex.RB pop r15
    480f:	49                   	rex.WB
    4810:	45                   	rex.RB
    4811:	43 5f                	rex.XB pop r15
    4813:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f814f <_end+0x423f7137>
    481a:	46 50                	rex.RX push rax
    481c:	5f                   	pop    rdi
    481d:	45 58                	rex.RB pop r8
    481f:	54                   	push   rsp
    4820:	20 30                	and    BYTE PTR [rax],dh
    4822:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4825:	73 74                	jae    489b <__FRAME_END__+0x408f>
    4827:	75 62                	jne    488b <__FRAME_END__+0x407f>
    4829:	5f                   	pop    rdi
    482a:	72 65                	jb     4891 <__FRAME_END__+0x4085>
    482c:	76 6f                	jbe    489d <__FRAME_END__+0x4091>
    482e:	6b 65 20 00          	imul   esp,DWORD PTR [rbp+0x20],0x0
    4832:	5f                   	pop    rdi
    4833:	5f                   	pop    rdi
    4834:	49                   	rex.WB
    4835:	4e 54                	rex.WRX push rsp
    4837:	4d                   	rex.WRB
    4838:	41 58                	pop    r8
    483a:	5f                   	pop    rdi
    483b:	54                   	push   rsp
    483c:	59                   	pop    rcx
    483d:	50                   	push   rax
    483e:	45 5f                	rex.RB pop r15
    4840:	5f                   	pop    rdi
    4841:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4845:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4849:	74 00                	je     484b <__FRAME_END__+0x403f>
    484b:	5f                   	pop    rdi
    484c:	5f                   	pop    rdi
    484d:	46                   	rex.RX
    484e:	4c 54                	rex.WR push rsp
    4850:	5f                   	pop    rdi
    4851:	4d                   	rex.WRB
    4852:	49                   	rex.WB
    4853:	4e 5f                	rex.WRX pop rdi
    4855:	45 58                	rex.RB pop r8
    4857:	50                   	push   rax
    4858:	5f                   	pop    rdi
    4859:	5f                   	pop    rdi
    485a:	20 28                	and    BYTE PTR [rax],ch
    485c:	2d 31 32 35 29       	sub    eax,0x29353231
    4861:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4864:	53                   	push   rbx
    4865:	53                   	push   rbx
    4866:	50                   	push   rax
    4867:	5f                   	pop    rdi
    4868:	53                   	push   rbx
    4869:	54                   	push   rsp
    486a:	52                   	push   rdx
    486b:	4f                   	rex.WRXB
    486c:	4e                   	rex.WRX
    486d:	47 5f                	rex.RXB pop r15
    486f:	5f                   	pop    rdi
    4870:	20 33                	and    BYTE PTR [rbx],dh
    4872:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4875:	65 72 72             	gs jb  48ea <__FRAME_END__+0x40de>
    4878:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4879:	72 64                	jb     48df <__FRAME_END__+0x40d3>
    487b:	65 63 6c 28 6e       	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    4880:	61                   	(bad)  
    4881:	6d                   	ins    DWORD PTR es:[rdi],dx
    4882:	65 2c 6d             	gs sub al,0x6d
    4885:	73 67                	jae    48ee <__FRAME_END__+0x40e2>
    4887:	29 20                	sub    DWORD PTR [rax],esp
    4889:	65 78 74             	gs js  4900 <__FRAME_END__+0x40f4>
    488c:	65 72 6e             	gs jb  48fd <__FRAME_END__+0x40f1>
    488f:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    4892:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    4899:	20 
    489a:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    489d:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    48a4:	74 
    48a5:	74 72                	je     4919 <__FRAME_END__+0x410d>
    48a7:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    48ae:	28 28                	sub    BYTE PTR [rax],ch
    48b0:	5f                   	pop    rdi
    48b1:	5f                   	pop    rdi
    48b2:	65 72 72             	gs jb  4927 <__FRAME_END__+0x411b>
    48b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    48b6:	72 5f                	jb     4917 <__FRAME_END__+0x410b>
    48b8:	5f                   	pop    rdi
    48b9:	20 28                	and    BYTE PTR [rax],ch
    48bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    48bc:	73 67                	jae    4925 <__FRAME_END__+0x4119>
    48be:	29 29                	sub    DWORD PTR [rcx],ebp
    48c0:	29 00                	sub    DWORD PTR [rax],eax
    48c2:	5f                   	pop    rdi
    48c3:	5f                   	pop    rdi
    48c4:	44                   	rex.R
    48c5:	45                   	rex.RB
    48c6:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    48c9:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    48cc:	41 58                	pop    r8
    48ce:	5f                   	pop    rdi
    48cf:	5f                   	pop    rdi
    48d0:	20 39                	and    BYTE PTR [rcx],bh
    48d2:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    48d5:	39 39                	cmp    DWORD PTR [rcx],edi
    48d7:	39 39                	cmp    DWORD PTR [rcx],edi
    48d9:	39 39                	cmp    DWORD PTR [rcx],edi
    48db:	39 39                	cmp    DWORD PTR [rcx],edi
    48dd:	39 39                	cmp    DWORD PTR [rcx],edi
    48df:	39 39                	cmp    DWORD PTR [rcx],edi
    48e1:	39 39                	cmp    DWORD PTR [rcx],edi
    48e3:	39 39                	cmp    DWORD PTR [rcx],edi
    48e5:	39 39                	cmp    DWORD PTR [rcx],edi
    48e7:	39 39                	cmp    DWORD PTR [rcx],edi
    48e9:	39 39                	cmp    DWORD PTR [rcx],edi
    48eb:	39 39                	cmp    DWORD PTR [rcx],edi
    48ed:	39 39                	cmp    DWORD PTR [rcx],edi
    48ef:	39 39                	cmp    DWORD PTR [rcx],edi
    48f1:	39 39                	cmp    DWORD PTR [rcx],edi
    48f3:	39 45 36             	cmp    DWORD PTR [rbp+0x36],eax
    48f6:	31 34 34             	xor    DWORD PTR [rsp+rsi*1],esi
    48f9:	44                   	rex.R
    48fa:	4c 00 5f 42          	rex.WR add BYTE PTR [rdi+0x42],r11b
    48fe:	49 54                	rex.WB push r12
    4900:	53                   	push   rbx
    4901:	5f                   	pop    rdi
    4902:	53                   	push   rbx
    4903:	54                   	push   rsp
    4904:	44                   	rex.R
    4905:	49                   	rex.WB
    4906:	4f 5f                	rex.WRXB pop r15
    4908:	4c                   	rex.WR
    4909:	49                   	rex.WB
    490a:	4d 5f                	rex.WRB pop r15
    490c:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    490f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4912:	41 54                	push   r12
    4914:	4f                   	rex.WRXB
    4915:	4d                   	rex.WRB
    4916:	49                   	rex.WB
    4917:	43 5f                	rex.XB pop r15
    4919:	48                   	rex.W
    491a:	4c                   	rex.WR
    491b:	45 5f                	rex.RB pop r15
    491d:	41                   	rex.B
    491e:	43 51                	rex.XB push r9
    4920:	55                   	push   rbp
    4921:	49 52                	rex.WB push r10
    4923:	45 20 36             	and    BYTE PTR [r14],r14b
    4926:	35 35 33 36 00       	xor    eax,0x363335
    492b:	5f                   	pop    rdi
    492c:	5f                   	pop    rdi
    492d:	4f                   	rex.WRXB
    492e:	46                   	rex.RX
    492f:	46                   	rex.RX
    4930:	36 34 5f             	ss xor al,0x5f
    4933:	54                   	push   rsp
    4934:	5f                   	pop    rdi
    4935:	54                   	push   rsp
    4936:	59                   	pop    rcx
    4937:	50                   	push   rax
    4938:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    493c:	53                   	push   rbx
    493d:	51                   	push   rcx
    493e:	55                   	push   rbp
    493f:	41                   	rex.B
    4940:	44 5f                	rex.R pop rdi
    4942:	54                   	push   rsp
    4943:	59                   	pop    rcx
    4944:	50                   	push   rax
    4945:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4949:	55                   	push   rbp
    494a:	53                   	push   rbx
    494b:	45 5f                	rex.RB pop r15
    494d:	49 53                	rex.WB push r11
    494f:	4f                   	rex.WRXB
    4950:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
    4953:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4956:	4f 5f                	rex.WRXB pop r15
    4958:	53                   	push   rbx
    4959:	54                   	push   rsp
    495a:	44                   	rex.R
    495b:	49                   	rex.WB
    495c:	4f 20 30             	rex.WRXB and BYTE PTR [r8],r14b
    495f:	34 30                	xor    al,0x30
    4961:	30 30                	xor    BYTE PTR [rax],dh
    4963:	30 00                	xor    BYTE PTR [rax],al
    4965:	5f                   	pop    rdi
    4966:	5f                   	pop    rdi
    4967:	44                   	rex.R
    4968:	45 56                	rex.RB push r14
    496a:	5f                   	pop    rdi
    496b:	54                   	push   rsp
    496c:	5f                   	pop    rdi
    496d:	54                   	push   rsp
    496e:	59                   	pop    rcx
    496f:	50                   	push   rax
    4970:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4974:	55                   	push   rbp
    4975:	51                   	push   rcx
    4976:	55                   	push   rbp
    4977:	41                   	rex.B
    4978:	44 5f                	rex.R pop rdi
    497a:	54                   	push   rsp
    497b:	59                   	pop    rcx
    497c:	50                   	push   rax
    497d:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4981:	43 50                	rex.XB push r8
    4983:	55                   	push   rbp
    4984:	5f                   	pop    rdi
    4985:	4d                   	rex.WRB
    4986:	41 53                	push   r11
    4988:	4b 5f                	rex.WXB pop r15
    498a:	54                   	push   rsp
    498b:	59                   	pop    rcx
    498c:	50                   	push   rax
    498d:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4991:	53                   	push   rbx
    4992:	59                   	pop    rcx
    4993:	53                   	push   rbx
    4994:	43                   	rex.XB
    4995:	41                   	rex.B
    4996:	4c                   	rex.WR
    4997:	4c 5f                	rex.WR pop rdi
    4999:	55                   	push   rbp
    499a:	4c                   	rex.WR
    499b:	4f                   	rex.WRXB
    499c:	4e                   	rex.WRX
    499d:	47 5f                	rex.RXB pop r15
    499f:	54                   	push   rsp
    49a0:	59                   	pop    rcx
    49a1:	50                   	push   rax
    49a2:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    49a6:	55                   	push   rbp
    49a7:	49                   	rex.WB
    49a8:	4e 54                	rex.WRX push rsp
    49aa:	5f                   	pop    rdi
    49ab:	4c                   	rex.WR
    49ac:	45                   	rex.RB
    49ad:	41 53                	push   r11
    49af:	54                   	push   rsp
    49b0:	33 32                	xor    esi,DWORD PTR [rdx]
    49b2:	5f                   	pop    rdi
    49b3:	4d                   	rex.WRB
    49b4:	41 58                	pop    r8
    49b6:	5f                   	pop    rdi
    49b7:	5f                   	pop    rdi
    49b8:	20 30                	and    BYTE PTR [rax],dh
    49ba:	78 66                	js     4a22 <__FRAME_END__+0x4216>
    49bc:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    49c3:	55 
    49c4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    49c7:	4f 5f                	rex.WRXB pop r15
    49c9:	42                   	rex.X
    49ca:	45 28 65 78          	sub    BYTE PTR [r13+0x78],r12b
    49ce:	70 72                	jo     4a42 <__FRAME_END__+0x4236>
    49d0:	2c 72                	sub    al,0x72
    49d2:	65 73 29             	gs jae 49fe <__FRAME_END__+0x41f2>
    49d5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    49d8:	62                   	(bad)  
    49d9:	75 69                	jne    4a44 <__FRAME_END__+0x4238>
    49db:	6c                   	ins    BYTE PTR es:[rdi],dx
    49dc:	74 69                	je     4a47 <__FRAME_END__+0x423b>
    49de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    49df:	5f                   	pop    rdi
    49e0:	65 78 70             	gs js  4a53 <__FRAME_END__+0x4247>
    49e3:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    49e8:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    49eb:	70 72                	jo     4a5f <__FRAME_END__+0x4253>
    49ed:	29 2c 20             	sub    DWORD PTR [rax+riz*1],ebp
    49f0:	72 65                	jb     4a57 <__FRAME_END__+0x424b>
    49f2:	73 29                	jae    4a1d <__FRAME_END__+0x4211>
    49f4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    49f7:	41 53                	push   r11
    49f9:	4d                   	rex.WRB
    49fa:	4e                   	rex.WRX
    49fb:	41                   	rex.B
    49fc:	4d                   	rex.WRB
    49fd:	45 28 63 6e          	sub    BYTE PTR [r11+0x6e],r12b
    4a01:	61                   	(bad)  
    4a02:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a03:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    4a06:	5f                   	pop    rdi
    4a07:	5f                   	pop    rdi
    4a08:	41 53                	push   r11
    4a0a:	4d                   	rex.WRB
    4a0b:	4e                   	rex.WRX
    4a0c:	41                   	rex.B
    4a0d:	4d                   	rex.WRB
    4a0e:	45 32 20             	xor    r12b,BYTE PTR [r8]
    4a11:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4a14:	55                   	push   rbp
    4a15:	53                   	push   rbx
    4a16:	45 52                	rex.RB push r10
    4a18:	5f                   	pop    rdi
    4a19:	4c                   	rex.WR
    4a1a:	41                   	rex.B
    4a1b:	42                   	rex.X
    4a1c:	45                   	rex.RB
    4a1d:	4c 5f                	rex.WR pop rdi
    4a1f:	50                   	push   rax
    4a20:	52                   	push   rdx
    4a21:	45                   	rex.RB
    4a22:	46                   	rex.RX
    4a23:	49 58                	rex.WB pop r8
    4a25:	5f                   	pop    rdi
    4a26:	5f                   	pop    rdi
    4a27:	2c 20                	sub    al,0x20
    4a29:	63 6e 61             	movsxd ebp,DWORD PTR [rsi+0x61]
    4a2c:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a2d:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4a30:	5f                   	pop    rdi
    4a31:	5f                   	pop    rdi
    4a32:	46                   	rex.RX
    4a33:	4c 54                	rex.WR push rsp
    4a35:	33 32                	xor    esi,DWORD PTR [rdx]
    4a37:	58                   	pop    rax
    4a38:	5f                   	pop    rdi
    4a39:	4d                   	rex.WRB
    4a3a:	41 58                	pop    r8
    4a3c:	5f                   	pop    rdi
    4a3d:	31 30                	xor    DWORD PTR [rax],esi
    4a3f:	5f                   	pop    rdi
    4a40:	45 58                	rex.RB pop r8
    4a42:	50                   	push   rax
    4a43:	5f                   	pop    rdi
    4a44:	5f                   	pop    rdi
    4a45:	20 33                	and    BYTE PTR [rbx],dh
    4a47:	30 38                	xor    BYTE PTR [rax],bh
    4a49:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4a4c:	61                   	(bad)  
    4a4d:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a4e:	64 36 34 20          	fs ss xor al,0x20
    4a52:	31 00                	xor    DWORD PTR [rax],eax
    4a54:	5f                   	pop    rdi
    4a55:	5f                   	pop    rdi
    4a56:	57                   	push   rdi
    4a57:	4f 52                	rex.WRXB push r10
    4a59:	44 53                	rex.R push rbx
    4a5b:	49 5a                	rex.WB pop r10
    4a5d:	45 20 36             	and    BYTE PTR [r14],r14b
    4a60:	34 00                	xor    al,0x0
    4a62:	5f                   	pop    rdi
    4a63:	5f                   	pop    rdi
    4a64:	75 6e                	jne    4ad4 <__FRAME_END__+0x42c8>
    4a66:	69 78 20 31 00 5f 63 	imul   edi,DWORD PTR [rax+0x20],0x635f0031
    4a6d:	68 61 69 6e 00       	push   0x6e6961
    4a72:	5f                   	pop    rdi
    4a73:	5f                   	pop    rdi
    4a74:	46                   	rex.RX
    4a75:	4c 54                	rex.WR push rsp
    4a77:	36 34 5f             	ss xor al,0x5f
    4a7a:	44                   	rex.R
    4a7b:	45                   	rex.RB
    4a7c:	4e                   	rex.WRX
    4a7d:	4f 52                	rex.WRXB push r10
    4a7f:	4d 5f                	rex.WRB pop r15
    4a81:	4d                   	rex.WRB
    4a82:	49                   	rex.WB
    4a83:	4e 5f                	rex.WRX pop rdi
    4a85:	5f                   	pop    rdi
    4a86:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    4a89:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    4a8c:	36 35 36 34 35 38    	ss xor eax,0x38353436
    4a92:	34 31                	xor    al,0x31
    4a94:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    4a97:	35 34 34 31 37       	xor    eax,0x37313434
    4a9c:	36 35 36 38 37 39    	ss xor eax,0x39373836
    4aa2:	32 38                	xor    bh,BYTE PTR [rax]
    4aa4:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    4aa7:	32 31                	xor    dh,BYTE PTR [rcx]
    4aa9:	33 37                	xor    esi,DWORD PTR [rdi]
    4aab:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4aae:	33 32                	xor    esi,DWORD PTR [rdx]
    4ab0:	34 46                	xor    al,0x46
    4ab2:	36 34 00             	ss xor al,0x0
    4ab5:	4c 5f                	rex.WR pop rdi
    4ab7:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    4abb:	6d                   	ins    DWORD PTR es:[rdi],dx
    4abc:	69 64 20 39 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x39],0x505f5f00
    4ac3:	50 
    4ac4:	54                   	push   rsp
    4ac5:	52                   	push   rdx
    4ac6:	44                   	rex.R
    4ac7:	49                   	rex.WB
    4ac8:	46                   	rex.RX
    4ac9:	46 5f                	rex.RX pop rdi
    4acb:	54                   	push   rsp
    4acc:	59                   	pop    rcx
    4acd:	50                   	push   rax
    4ace:	45 5f                	rex.RB pop r15
    4ad0:	5f                   	pop    rdi
    4ad1:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4ad5:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4ad9:	74 00                	je     4adb <__FRAME_END__+0x42cf>
    4adb:	5f                   	pop    rdi
    4adc:	5f                   	pop    rdi
    4add:	46                   	rex.RX
    4ade:	4c 54                	rex.WR push rsp
    4ae0:	33 32                	xor    esi,DWORD PTR [rdx]
    4ae2:	5f                   	pop    rdi
    4ae3:	4d                   	rex.WRB
    4ae4:	41 58                	pop    r8
    4ae6:	5f                   	pop    rdi
    4ae7:	31 30                	xor    DWORD PTR [rax],esi
    4ae9:	5f                   	pop    rdi
    4aea:	45 58                	rex.RB pop r8
    4aec:	50                   	push   rax
    4aed:	5f                   	pop    rdi
    4aee:	5f                   	pop    rdi
    4aef:	20 33                	and    BYTE PTR [rbx],dh
    4af1:	38 00                	cmp    BYTE PTR [rax],al
    4af3:	5f                   	pop    rdi
    4af4:	5f                   	pop    rdi
    4af5:	57                   	push   rdi
    4af6:	4f 52                	rex.WRXB push r10
    4af8:	44 53                	rex.R push rbx
    4afa:	49 5a                	rex.WB pop r10
    4afc:	45 5f                	rex.RB pop r15
    4afe:	54                   	push   rsp
    4aff:	49                   	rex.WB
    4b00:	4d                   	rex.WRB
    4b01:	45                   	rex.RB
    4b02:	36 34 5f             	ss xor al,0x5f
    4b05:	43                   	rex.XB
    4b06:	4f                   	rex.WRXB
    4b07:	4d 50                	rex.WRB push r8
    4b09:	41 54                	push   r12
    4b0b:	33 32                	xor    esi,DWORD PTR [rdx]
    4b0d:	20 31                	and    BYTE PTR [rcx],dh
    4b0f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4b12:	46                   	rex.RX
    4b13:	4c 54                	rex.WR push rsp
    4b15:	31 32                	xor    DWORD PTR [rdx],esi
    4b17:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    4b1a:	45                   	rex.RB
    4b1b:	43                   	rex.XB
    4b1c:	49                   	rex.WB
    4b1d:	4d                   	rex.WRB
    4b1e:	41                   	rex.B
    4b1f:	4c 5f                	rex.WR pop rdi
    4b21:	44                   	rex.R
    4b22:	49                   	rex.WB
    4b23:	47 5f                	rex.RXB pop r15
    4b25:	5f                   	pop    rdi
    4b26:	20 33                	and    BYTE PTR [rbx],dh
    4b28:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4b2c:	50                   	push   rax
    4b2d:	54                   	push   rsp
    4b2e:	52                   	push   rdx
    4b2f:	44                   	rex.R
    4b30:	49                   	rex.WB
    4b31:	46                   	rex.RX
    4b32:	46 5f                	rex.RX pop rdi
    4b34:	57                   	push   rdi
    4b35:	49                   	rex.WB
    4b36:	44 54                	rex.R push rsp
    4b38:	48 5f                	rex.W pop rdi
    4b3a:	5f                   	pop    rdi
    4b3b:	20 36                	and    BYTE PTR [rsi],dh
    4b3d:	34 00                	xor    al,0x0
    4b3f:	5f                   	pop    rdi
    4b40:	5f                   	pop    rdi
    4b41:	49                   	rex.WB
    4b42:	4e 54                	rex.WRX push rsp
    4b44:	5f                   	pop    rdi
    4b45:	4c                   	rex.WR
    4b46:	45                   	rex.RB
    4b47:	41 53                	push   r11
    4b49:	54                   	push   rsp
    4b4a:	33 32                	xor    esi,DWORD PTR [rdx]
    4b4c:	5f                   	pop    rdi
    4b4d:	4d                   	rex.WRB
    4b4e:	41 58                	pop    r8
    4b50:	5f                   	pop    rdi
    4b51:	5f                   	pop    rdi
    4b52:	20 30                	and    BYTE PTR [rax],dh
    4b54:	78 37                	js     4b8d <__FRAME_END__+0x4381>
    4b56:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    4b5d:	00 5f 5f 
    4b60:	55                   	push   rbp
    4b61:	49                   	rex.WB
    4b62:	4e 54                	rex.WRX push rsp
    4b64:	5f                   	pop    rdi
    4b65:	46                   	rex.RX
    4b66:	41 53                	push   r11
    4b68:	54                   	push   rsp
    4b69:	36 34 5f             	ss xor al,0x5f
    4b6c:	54                   	push   rsp
    4b6d:	59                   	pop    rcx
    4b6e:	50                   	push   rax
    4b6f:	45 5f                	rex.RB pop r15
    4b71:	5f                   	pop    rdi
    4b72:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4b76:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    4b7a:	73 69                	jae    4be5 <__FRAME_END__+0x43d9>
    4b7c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4b7e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4b83:	74 00                	je     4b85 <__FRAME_END__+0x4379>
    4b85:	5f                   	pop    rdi
    4b86:	5f                   	pop    rdi
    4b87:	73 74                	jae    4bfd <__FRAME_END__+0x43f1>
    4b89:	75 62                	jne    4bed <__FRAME_END__+0x43e1>
    4b8b:	5f                   	pop    rdi
    4b8c:	73 73                	jae    4c01 <__FRAME_END__+0x43f5>
    4b8e:	74 6b                	je     4bfb <__FRAME_END__+0x43ef>
    4b90:	20 00                	and    BYTE PTR [rax],al
    4b92:	5f                   	pop    rdi
    4b93:	49                   	rex.WB
    4b94:	4f 5f                	rex.WRXB pop r15
    4b96:	66 70 6f             	data16 jo 4c08 <__FRAME_END__+0x43fc>
    4b99:	73 36                	jae    4bd1 <__FRAME_END__+0x43c5>
    4b9b:	34 5f                	xor    al,0x5f
    4b9d:	74 20                	je     4bbf <__FRAME_END__+0x43b3>
    4b9f:	5f                   	pop    rdi
    4ba0:	47 5f                	rex.RXB pop r15
    4ba2:	66 70 6f             	data16 jo 4c14 <__FRAME_END__+0x4408>
    4ba5:	73 36                	jae    4bdd <__FRAME_END__+0x43d1>
    4ba7:	34 5f                	xor    al,0x5f
    4ba9:	74 00                	je     4bab <__FRAME_END__+0x439f>
    4bab:	5f                   	pop    rdi
    4bac:	5f                   	pop    rdi
    4bad:	54                   	push   rsp
    4bae:	48 52                	rex.W push rdx
    4bb0:	4f 57                	rex.WRXB push r15
    4bb2:	4e                   	rex.WRX
    4bb3:	4c 20 5f 5f          	rex.WR and BYTE PTR [rdi+0x5f],r11b
    4bb7:	61                   	(bad)  
    4bb8:	74 74                	je     4c2e <__FRAME_END__+0x4422>
    4bba:	72 69                	jb     4c25 <__FRAME_END__+0x4419>
    4bbc:	62                   	(bad)  
    4bbd:	75 74                	jne    4c33 <__FRAME_END__+0x4427>
    4bbf:	65 5f                	gs pop rdi
    4bc1:	5f                   	pop    rdi
    4bc2:	20 28                	and    BYTE PTR [rax],ch
    4bc4:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4bc7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4bc8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4bc9:	74 68                	je     4c33 <__FRAME_END__+0x4427>
    4bcb:	72 6f                	jb     4c3c <__FRAME_END__+0x4430>
    4bcd:	77 5f                	ja     4c2e <__FRAME_END__+0x4422>
    4bcf:	5f                   	pop    rdi
    4bd0:	29 29                	sub    DWORD PTR [rcx],ebp
    4bd2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bd5:	4c                   	rex.WR
    4bd6:	44                   	rex.R
    4bd7:	42                   	rex.X
    4bd8:	4c 5f                	rex.WR pop rdi
    4bda:	4d                   	rex.WRB
    4bdb:	41 58                	pop    r8
    4bdd:	5f                   	pop    rdi
    4bde:	31 30                	xor    DWORD PTR [rax],esi
    4be0:	5f                   	pop    rdi
    4be1:	45 58                	rex.RB pop r8
    4be3:	50                   	push   rax
    4be4:	5f                   	pop    rdi
    4be5:	5f                   	pop    rdi
    4be6:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    4be9:	33 32                	xor    esi,DWORD PTR [rdx]
    4beb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bee:	44                   	rex.R
    4bef:	45                   	rex.RB
    4bf0:	43                   	rex.XB
    4bf1:	36 34 5f             	ss xor al,0x5f
    4bf4:	4d                   	rex.WRB
    4bf5:	49                   	rex.WB
    4bf6:	4e 5f                	rex.WRX pop rdi
    4bf8:	5f                   	pop    rdi
    4bf9:	20 31                	and    BYTE PTR [rcx],dh
    4bfb:	45 2d 33 38 33 44    	rex.RB sub eax,0x44333833
    4c01:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    4c05:	46                   	rex.RX
    4c06:	4c 54                	rex.WR push rsp
    4c08:	33 32                	xor    esi,DWORD PTR [rdx]
    4c0a:	5f                   	pop    rdi
    4c0b:	4d                   	rex.WRB
    4c0c:	41 58                	pop    r8
    4c0e:	5f                   	pop    rdi
    4c0f:	5f                   	pop    rdi
    4c10:	20 33                	and    BYTE PTR [rbx],dh
    4c12:	2e 34 30             	cs xor al,0x30
    4c15:	32 38                	xor    bh,BYTE PTR [rax]
    4c17:	32 33                	xor    dh,BYTE PTR [rbx]
    4c19:	34 36                	xor    al,0x36
    4c1b:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    4c1e:	35 32 38 38 35       	xor    eax,0x35383832
    4c23:	39 38                	cmp    DWORD PTR [rax],edi
    4c25:	31 31                	xor    DWORD PTR [rcx],esi
    4c27:	37                   	(bad)  
    4c28:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    4c2b:	38 33                	cmp    BYTE PTR [rbx],dh
    4c2d:	34 38                	xor    al,0x38
    4c2f:	34 35                	xor    al,0x35
    4c31:	31 36                	xor    DWORD PTR [rsi],esi
    4c33:	39 32                	cmp    DWORD PTR [rdx],esi
    4c35:	35 65 2b 33 38       	xor    eax,0x38332b65
    4c3a:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    4c3d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c40:	44                   	rex.R
    4c41:	42                   	rex.X
    4c42:	4c 5f                	rex.WR pop rdi
    4c44:	45 50                	rex.RB push r8
    4c46:	53                   	push   rbx
    4c47:	49                   	rex.WB
    4c48:	4c                   	rex.WR
    4c49:	4f                   	rex.WRXB
    4c4a:	4e 5f                	rex.WRX pop rdi
    4c4c:	5f                   	pop    rdi
    4c4d:	20 28                	and    BYTE PTR [rax],ch
    4c4f:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    4c53:	62                   	(bad)  
    4c54:	6c                   	ins    BYTE PTR es:[rdi],dx
    4c55:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    4c58:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    4c5b:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    4c5e:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    4c62:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33317f98 <_end+0x33116f80>
    4c68:	30 38                	xor    BYTE PTR [rax],bh
    4c6a:	30 38                	xor    BYTE PTR [rax],bh
    4c6c:	34 37                	xor    al,0x37
    4c6e:	32 36                	xor    dh,BYTE PTR [rsi]
    4c70:	33 33                	xor    esi,DWORD PTR [rbx]
    4c72:	33 36                	xor    esi,DWORD PTR [rsi]
    4c74:	31 38                	xor    DWORD PTR [rax],edi
    4c76:	31 36                	xor    DWORD PTR [rsi],esi
    4c78:	34 30                	xor    al,0x30
    4c7a:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    4c7e:	31 36                	xor    DWORD PTR [rsi],esi
    4c80:	4c 29 00             	sub    QWORD PTR [rax],r8
    4c83:	5f                   	pop    rdi
    4c84:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    4c87:	5f                   	pop    rdi
    4c88:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    4c8b:	75 6d                	jne    4cfa <__FRAME_END__+0x44ee>
    4c8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4c8e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c91:	50                   	push   rax
    4c92:	52                   	push   rdx
    4c93:	41                   	rex.B
    4c94:	47                   	rex.RXB
    4c95:	4d                   	rex.WRB
    4c96:	41 5f                	pop    r15
    4c98:	52                   	push   rdx
    4c99:	45                   	rex.RB
    4c9a:	44                   	rex.R
    4c9b:	45                   	rex.RB
    4c9c:	46                   	rex.RX
    4c9d:	49                   	rex.WB
    4c9e:	4e                   	rex.WRX
    4c9f:	45 5f                	rex.RB pop r15
    4ca1:	45 58                	rex.RB pop r8
    4ca3:	54                   	push   rsp
    4ca4:	4e                   	rex.WRX
    4ca5:	41                   	rex.B
    4ca6:	4d                   	rex.WRB
    4ca7:	45 20 31             	and    BYTE PTR [r9],r14b
    4caa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4cad:	53                   	push   rbx
    4cae:	49                   	rex.WB
    4caf:	47 5f                	rex.RXB pop r15
    4cb1:	41 54                	push   r12
    4cb3:	4f                   	rex.WRXB
    4cb4:	4d                   	rex.WRB
    4cb5:	49                   	rex.WB
    4cb6:	43 5f                	rex.XB pop r15
    4cb8:	54                   	push   rsp
    4cb9:	59                   	pop    rcx
    4cba:	50                   	push   rax
    4cbb:	45 5f                	rex.RB pop r15
    4cbd:	5f                   	pop    rdi
    4cbe:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    4cc1:	74 00                	je     4cc3 <__FRAME_END__+0x44b7>
    4cc3:	5f                   	pop    rdi
    4cc4:	5f                   	pop    rdi
    4cc5:	46                   	rex.RX
    4cc6:	4c 54                	rex.WR push rsp
    4cc8:	36 34 58             	ss xor al,0x58
    4ccb:	5f                   	pop    rdi
    4ccc:	44                   	rex.R
    4ccd:	45                   	rex.RB
    4cce:	4e                   	rex.WRX
    4ccf:	4f 52                	rex.WRXB push r10
    4cd1:	4d 5f                	rex.WRB pop r15
    4cd3:	4d                   	rex.WRB
    4cd4:	49                   	rex.WB
    4cd5:	4e 5f                	rex.WRX pop rdi
    4cd7:	5f                   	pop    rdi
    4cd8:	20 33                	and    BYTE PTR [rbx],dh
    4cda:	2e 36 34 35          	cs ss xor al,0x35
    4cde:	31 39                	xor    DWORD PTR [rcx],edi
    4ce0:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38387e19 <_end+0x38186e01>
    4ce6:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    4ce9:	34 36                	xor    al,0x36
    4ceb:	30 32                	xor    BYTE PTR [rdx],dh
    4ced:	35 32 38 34 30       	xor    eax,0x30343832
    4cf2:	35 39 33 33 36       	xor    eax,0x36333339
    4cf7:	31 39                	xor    DWORD PTR [rcx],edi
    4cf9:	34 31                	xor    al,0x31
    4cfb:	39 38                	cmp    DWORD PTR [rax],edi
    4cfd:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4d00:	34 39                	xor    al,0x39
    4d02:	35 31 46 36 34       	xor    eax,0x34364631
    4d07:	78 00                	js     4d09 <__FRAME_END__+0x44fd>
    4d09:	5f                   	pop    rdi
    4d0a:	5f                   	pop    rdi
    4d0b:	55                   	push   rbp
    4d0c:	53                   	push   rbx
    4d0d:	45 5f                	rex.RB pop r15
    4d0f:	50                   	push   rax
    4d10:	4f 53                	rex.WRXB push r11
    4d12:	49 58                	rex.WB pop r8
    4d14:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d17:	46                   	rex.RX
    4d18:	4c 54                	rex.WR push rsp
    4d1a:	31 32                	xor    DWORD PTR [rdx],esi
    4d1c:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    4d1f:	41 53                	push   r11
    4d21:	5f                   	pop    rdi
    4d22:	44                   	rex.R
    4d23:	45                   	rex.RB
    4d24:	4e                   	rex.WRX
    4d25:	4f 52                	rex.WRXB push r10
    4d27:	4d 5f                	rex.WRB pop r15
    4d29:	5f                   	pop    rdi
    4d2a:	20 31                	and    BYTE PTR [rcx],dh
    4d2c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4d2f:	4f 5f                	rex.WRXB pop r15
    4d31:	43 55                	rex.XB push r13
    4d33:	52                   	push   rdx
    4d34:	52                   	push   rdx
    4d35:	45                   	rex.RB
    4d36:	4e 54                	rex.WRX push rsp
    4d38:	4c 59                	rex.WR pop rcx
    4d3a:	5f                   	pop    rdi
    4d3b:	50                   	push   rax
    4d3c:	55                   	push   rbp
    4d3d:	54                   	push   rsp
    4d3e:	54                   	push   rsp
    4d3f:	49                   	rex.WB
    4d40:	4e                   	rex.WRX
    4d41:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    4d44:	78 38                	js     4d7e <__FRAME_END__+0x4572>
    4d46:	30 30                	xor    BYTE PTR [rax],dh
    4d48:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d4b:	44                   	rex.R
    4d4c:	42                   	rex.X
    4d4d:	4c 5f                	rex.WR pop rdi
    4d4f:	44                   	rex.R
    4d50:	45                   	rex.RB
    4d51:	43                   	rex.XB
    4d52:	49                   	rex.WB
    4d53:	4d                   	rex.WRB
    4d54:	41                   	rex.B
    4d55:	4c 5f                	rex.WR pop rdi
    4d57:	44                   	rex.R
    4d58:	49                   	rex.WB
    4d59:	47 5f                	rex.RXB pop r15
    4d5b:	5f                   	pop    rdi
    4d5c:	20 31                	and    BYTE PTR [rcx],dh
    4d5e:	37                   	(bad)  
    4d5f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d62:	4c                   	rex.WR
    4d63:	44                   	rex.R
    4d64:	42                   	rex.X
    4d65:	4c 5f                	rex.WR pop rdi
    4d67:	48                   	rex.W
    4d68:	41 53                	push   r11
    4d6a:	5f                   	pop    rdi
    4d6b:	44                   	rex.R
    4d6c:	45                   	rex.RB
    4d6d:	4e                   	rex.WRX
    4d6e:	4f 52                	rex.WRXB push r10
    4d70:	4d 5f                	rex.WRB pop r15
    4d72:	5f                   	pop    rdi
    4d73:	20 31                	and    BYTE PTR [rcx],dh
    4d75:	00 5f 75             	add    BYTE PTR [rdi+0x75],bl
    4d78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d79:	75 73                	jne    4dee <__FRAME_END__+0x45e2>
    4d7b:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    4d7f:	5f                   	pop    rdi
    4d80:	49                   	rex.WB
    4d81:	4f 5f                	rex.WRXB pop r15
    4d83:	62                   	(bad)  
    4d84:	75 66                	jne    4dec <__FRAME_END__+0x45e0>
    4d86:	5f                   	pop    rdi
    4d87:	62 61                	(bad)  
    4d89:	73 65                	jae    4df0 <__FRAME_END__+0x45e4>
    4d8b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d8e:	73 74                	jae    4e04 <__FRAME_END__+0x45f8>
    4d90:	75 62                	jne    4df4 <__FRAME_END__+0x45e8>
    4d92:	5f                   	pop    rdi
    4d93:	6c                   	ins    BYTE PTR es:[rdi],dx
    4d94:	63 68 6d             	movsxd ebp,DWORD PTR [rax+0x6d]
    4d97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d98:	64 20 00             	and    BYTE PTR fs:[rax],al
    4d9b:	5f                   	pop    rdi
    4d9c:	5f                   	pop    rdi
    4d9d:	46                   	rex.RX
    4d9e:	4c 54                	rex.WR push rsp
    4da0:	36 34 5f             	ss xor al,0x5f
    4da3:	4d                   	rex.WRB
    4da4:	41                   	rex.B
    4da5:	4e 54                	rex.WRX push rsp
    4da7:	5f                   	pop    rdi
    4da8:	44                   	rex.R
    4da9:	49                   	rex.WB
    4daa:	47 5f                	rex.RXB pop r15
    4dac:	5f                   	pop    rdi
    4dad:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f4de6 <_end+0x5f3f3dce>
    4db3:	44                   	rex.R
    4db4:	45                   	rex.RB
    4db5:	43                   	rex.XB
    4db6:	36 34 5f             	ss xor al,0x5f
    4db9:	4d                   	rex.WRB
    4dba:	41                   	rex.B
    4dbb:	4e 54                	rex.WRX push rsp
    4dbd:	5f                   	pop    rdi
    4dbe:	44                   	rex.R
    4dbf:	49                   	rex.WB
    4dc0:	47 5f                	rex.RXB pop r15
    4dc2:	5f                   	pop    rdi
    4dc3:	20 31                	and    BYTE PTR [rcx],dh
    4dc5:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4dc9:	46                   	rex.RX
    4dca:	4c 54                	rex.WR push rsp
    4dcc:	5f                   	pop    rdi
    4dcd:	48                   	rex.W
    4dce:	41 53                	push   r11
    4dd0:	5f                   	pop    rdi
    4dd1:	44                   	rex.R
    4dd2:	45                   	rex.RB
    4dd3:	4e                   	rex.WRX
    4dd4:	4f 52                	rex.WRXB push r10
    4dd6:	4d 5f                	rex.WRB pop r15
    4dd8:	5f                   	pop    rdi
    4dd9:	20 31                	and    BYTE PTR [rcx],dh
    4ddb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4dde:	44                   	rex.R
    4ddf:	45                   	rex.RB
    4de0:	43                   	rex.XB
    4de1:	49                   	rex.WB
    4de2:	4d                   	rex.WRB
    4de3:	41                   	rex.B
    4de4:	4c 5f                	rex.WR pop rdi
    4de6:	44                   	rex.R
    4de7:	49                   	rex.WB
    4de8:	47 5f                	rex.RXB pop r15
    4dea:	5f                   	pop    rdi
    4deb:	20 32                	and    BYTE PTR [rdx],dh
    4ded:	31 00                	xor    DWORD PTR [rax],eax

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
       0:	04 00                	add    al,0x0
       2:	02 00                	add    al,BYTE PTR [rax]
       4:	00 00                	add    BYTE PTR [rax],al
       6:	00 07                	add    BYTE PTR [rdi],al
       8:	0f 01 00             	sgdt   [rax]
       b:	00 03                	add    BYTE PTR [rbx],al
       d:	00 01                	add    BYTE PTR [rcx],al
       f:	03 1f                	add    ebx,DWORD PTR [rdi]
      11:	07                   	(bad)  
      12:	07                   	(bad)  
      13:	17                   	(bad)  
      14:	09 00                	or     DWORD PTR [rax],eax
      16:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      19:	01 05 07 39 09 00    	add    DWORD PTR [rip+0x93907],eax        # 93926 <__FRAME_END__+0x9311a>
      1f:	00 03                	add    BYTE PTR [rbx],al
      21:	1b 08                	sbb    ecx,DWORD PTR [rax]
      23:	06                   	(bad)  
      24:	1f                   	(bad)  
      25:	4e                   	rex.WRX
      26:	45 00 00             	add    BYTE PTR [r8],r8b
      29:	03 21                	add    esp,DWORD PTR [rcx]
      2b:	09 07                	or     DWORD PTR [rdi],eax
      2d:	49 09 00             	or     QWORD PTR [r8],rax
      30:	00 03                	add    BYTE PTR [rbx],al
      32:	a8 03                	test   al,0x3
      34:	0a 07                	or     al,BYTE PTR [rdi]
      36:	e7 0a                	out    0xa,eax
      38:	00 00                	add    BYTE PTR [rax],al
      3a:	03 ab 03 0b 07 4f    	add    ebp,DWORD PTR [rbx+0x4f070b03]
      40:	0c 00                	or     al,0x0
      42:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      45:	ac                   	lods   al,BYTE PTR ds:[rsi]
      46:	03 0c 04             	add    ecx,DWORD PTR [rsp+rax*1]
      49:	07                   	(bad)  
      4a:	65 0c 00             	gs or  al,0x0
      4d:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      50:	c0 03 0d             	rol    BYTE PTR [rbx],0xd
      53:	03 0a                	add    ecx,DWORD PTR [rdx]
      55:	0e                   	(bad)  
      56:	07                   	(bad)  
      57:	af                   	scas   eax,DWORD PTR es:[rdi]
      58:	0c 00                	or     al,0x0
      5a:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
      5d:	04 07                	add    al,0x7
      5f:	07                   	(bad)  
      60:	0d 00 00 04 07       	or     eax,0x7040000
      65:	3b 0d 00 00 03 21    	cmp    ecx,DWORD PTR [rip+0x21030000]        # 2103006b <_end+0x20e2f053>
      6b:	02 07                	add    al,BYTE PTR [rdi]
      6d:	4b 0d 00 00 04 03    	rex.WXB or rax,0x3040000
      73:	23 03                	and    eax,DWORD PTR [rbx]
      75:	05 18 ef 14 00       	add    eax,0x14ef18
      7a:	00 03                	add    BYTE PTR [rbx],al
      7c:	1b 0b                	sbb    ecx,DWORD PTR [rbx]
      7e:	07                   	(bad)  
      7f:	4f 0c 00             	rex.WRXB or al,0x0
      82:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      85:	e2 0d                	loop   94 <_init-0x424>
      87:	00 00                	add    BYTE PTR [rax],al
      89:	03 82 01 0f 07 40    	add    eax,DWORD PTR [rdx+0x40070f01]
      8f:	0e                   	(bad)  
      90:	00 00                	add    BYTE PTR [rax],al
      92:	04 06                	add    al,0x6
      94:	cc                   	int3   
      95:	01 de                	add    esi,ebx
      97:	28 00                	sub    BYTE PTR [rax],al
      99:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      9c:	24 10                	and    al,0x10
      9e:	05 02 62 2c 00       	add    eax,0x2c6202
      a3:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      a6:	25 11 05 02 64       	and    eax,0x64020511
      ab:	2c 00                	sub    al,0x0
      ad:	00 04 05 27 d6 2a 00 	add    BYTE PTR [rax*1+0x2ad627],al
      b4:	00 03                	add    BYTE PTR [rbx],al
      b6:	29 04 05 1d da 10 00 	sub    DWORD PTR [rax*1+0x10da1d],eax
      bd:	00 03                	add    BYTE PTR [rbx],al
      bf:	23 12                	and    edx,DWORD PTR [rdx]
      c1:	07                   	(bad)  
      c2:	2e 0f 00 00          	sldt   WORD PTR cs:[rax]
      c6:	03 13                	add    edx,DWORD PTR [rbx]
      c8:	02 07                	add    al,BYTE PTR [rdi]
      ca:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
      ce:	04 03                	add    al,0x3
      d0:	15 13 05 02 1f       	adc    eax,0x1f020513
      d5:	1b 00                	sbb    eax,DWORD PTR [rax]
      d7:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      da:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
      de:	04 07                	add    al,0x7
      e0:	8c 0f                	mov    WORD PTR [rdi],cs
      e2:	00 00                	add    BYTE PTR [rax],al
      e4:	03 35 14 07 e4 0f    	add    esi,DWORD PTR [rip+0xfe40714]        # fe407fe <_end+0xfc3f7e6>
      ea:	00 00                	add    BYTE PTR [rax],al
      ec:	04 07                	add    al,0x7
      ee:	f4                   	hlt    
      ef:	0f 00 00             	sldt   WORD PTR [rax]
      f2:	04 07                	add    al,0x7
      f4:	c0 11 00             	rcl    BYTE PTR [rcx],0x0
      f7:	00 03                	add    BYTE PTR [rbx],al
      f9:	83 01 15             	add    DWORD PTR [rcx],0x15
      fc:	07                   	(bad)  
      fd:	06                   	(bad)  
      fe:	12 00                	adc    al,BYTE PTR [rax]
     100:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     103:	34 12                	xor    al,0x12
     105:	00 00                	add    BYTE PTR [rax],al
     107:	03 8d 06 06 04 04    	add    ecx,DWORD PTR [rbp+0x4040606]
     10d:	04 00                	add    al,0x0
     10f:	04 00                	add    al,0x0
     111:	00 05 00 3d 29 00    	add    BYTE PTR [rip+0x293d00],al        # 293e17 <_end+0x92dff>
     117:	00 05 00 0b 23 00    	add    BYTE PTR [rip+0x230b00],al        # 230c1d <_end+0x2fc05>
     11d:	00 05 00 9f 2b 00    	add    BYTE PTR [rip+0x2b9f00],al        # 2ba023 <_end+0xb900b>
     123:	00 05 00 71 0b 00    	add    BYTE PTR [rip+0xb7100],al        # b7229 <__FRAME_END__+0xb6a1d>
     129:	00 05 00 04 3e 00    	add    BYTE PTR [rip+0x3e0400],al        # 3e052f <_end+0x1df517>
     12f:	00 05 00 6a 07 00    	add    BYTE PTR [rip+0x76a00],al        # 76b35 <__FRAME_END__+0x76329>
     135:	00 05 00 99 05 00    	add    BYTE PTR [rip+0x59900],al        # 59a3b <__FRAME_END__+0x5922f>
     13b:	00 05 00 d1 36 00    	add    BYTE PTR [rip+0x36d100],al        # 36d241 <_end+0x16c229>
     141:	00 05 00 52 20 00    	add    BYTE PTR [rip+0x205200],al        # 205347 <_end+0x432f>
     147:	00 05 00 db 3d 00    	add    BYTE PTR [rip+0x3ddb00],al        # 3ddc4d <_end+0x1dcc35>
     14d:	00 05 00 41 09 00    	add    BYTE PTR [rip+0x94100],al        # 94253 <__FRAME_END__+0x93a47>
     153:	00 05 00 fe 2e 00    	add    BYTE PTR [rip+0x2efe00],al        # 2eff59 <_end+0xeef41>
     159:	00 05 00 61 47 00    	add    BYTE PTR [rip+0x476100],al        # 47625f <_end+0x275247>
     15f:	00 05 00 a7 40 00    	add    BYTE PTR [rip+0x40a700],al        # 40a865 <_end+0x20984d>
     165:	00 05 00 ad 29 00    	add    BYTE PTR [rip+0x29ad00],al        # 29ae6b <_end+0x99e53>
     16b:	00 05 00 57 47 00    	add    BYTE PTR [rip+0x475700],al        # 475871 <_end+0x274859>
     171:	00 05 00 f1 42 00    	add    BYTE PTR [rip+0x42f100],al        # 42f277 <_end+0x22e25f>
     177:	00 05 00 8c 10 00    	add    BYTE PTR [rip+0x108c00],al        # 108d7d <__FRAME_END__+0x108571>
     17d:	00 05 00 ba 0c 00    	add    BYTE PTR [rip+0xcba00],al        # cbb83 <__FRAME_END__+0xcb377>
     183:	00 05 00 23 26 00    	add    BYTE PTR [rip+0x262300],al        # 262489 <_end+0x61471>
     189:	00 05 00 0e 25 00    	add    BYTE PTR [rip+0x250e00],al        # 250f8f <_end+0x4ff77>
     18f:	00 05 00 97 24 00    	add    BYTE PTR [rip+0x249700],al        # 249895 <_end+0x4887d>
     195:	00 05 00 39 46 00    	add    BYTE PTR [rip+0x463900],al        # 463a9b <_end+0x262a83>
     19b:	00 05 00 9b 29 00    	add    BYTE PTR [rip+0x299b00],al        # 299ca1 <_end+0x98c89>
     1a1:	00 05 00 5a 39 00    	add    BYTE PTR [rip+0x395a00],al        # 395ba7 <_end+0x194b8f>
     1a7:	00 05 00 72 09 00    	add    BYTE PTR [rip+0x97200],al        # 973ad <__FRAME_END__+0x96ba1>
     1ad:	00 05 00 48 28 00    	add    BYTE PTR [rip+0x284800],al        # 2849b3 <_end+0x8399b>
     1b3:	00 05 00 ec 2a 00    	add    BYTE PTR [rip+0x2aec00],al        # 2aedb9 <_end+0xadda1>
     1b9:	00 05 00 b6 14 00    	add    BYTE PTR [rip+0x14b600],al        # 14b7bf <__FRAME_END__+0x14afb3>
     1bf:	00 05 00 37 07 00    	add    BYTE PTR [rip+0x73700],al        # 738c5 <__FRAME_END__+0x730b9>
     1c5:	00 05 00 a8 3d 00    	add    BYTE PTR [rip+0x3da800],al        # 3da9cb <_end+0x1d99b3>
     1cb:	00 05 00 17 1c 00    	add    BYTE PTR [rip+0x1c1700],al        # 1c18d1 <__FRAME_END__+0x1c10c5>
     1d1:	00 05 00 58 17 00    	add    BYTE PTR [rip+0x175800],al        # 1759d7 <__FRAME_END__+0x1751cb>
     1d7:	00 05 00 50 07 00    	add    BYTE PTR [rip+0x75000],al        # 751dd <__FRAME_END__+0x749d1>
     1dd:	00 05 00 10 32 00    	add    BYTE PTR [rip+0x321000],al        # 3211e3 <_end+0x1201cb>
     1e3:	00 05 00 7b 0a 00    	add    BYTE PTR [rip+0xa7b00],al        # a7ce9 <__FRAME_END__+0xa74dd>
     1e9:	00 05 00 8f 2d 00    	add    BYTE PTR [rip+0x2d8f00],al        # 2d90ef <_end+0xd80d7>
     1ef:	00 05 00 c8 3a 00    	add    BYTE PTR [rip+0x3ac800],al        # 3ac9f5 <_end+0x1ab9dd>
     1f5:	00 05 00 58 1e 00    	add    BYTE PTR [rip+0x1e5800],al        # 1e59fb <__FRAME_END__+0x1e51ef>
     1fb:	00 05 00 c1 4a 00    	add    BYTE PTR [rip+0x4ac100],al        # 4ac301 <_end+0x2ab2e9>
     201:	00 05 00 e6 12 00    	add    BYTE PTR [rip+0x12e600],al        # 12e807 <__FRAME_END__+0x12dffb>
     207:	00 05 00 21 2a 00    	add    BYTE PTR [rip+0x2a2100],al        # 2a230d <_end+0xa12f5>
     20d:	00 05 00 32 48 00    	add    BYTE PTR [rip+0x483200],al        # 483413 <_end+0x2823fb>
     213:	00 05 00 0e 30 00    	add    BYTE PTR [rip+0x300e00],al        # 301019 <_end+0x100001>
     219:	00 05 00 14 07 00    	add    BYTE PTR [rip+0x71400],al        # 7161f <__FRAME_END__+0x70e13>
     21f:	00 05 00 27 35 00    	add    BYTE PTR [rip+0x352700],al        # 352925 <_end+0x15190d>
     225:	00 05 00 ab 4c 00    	add    BYTE PTR [rip+0x4cab00],al        # 4cad2b <_end+0x2c9d13>
     22b:	00 05 00 37 42 00    	add    BYTE PTR [rip+0x423700],al        # 423931 <_end+0x222919>
     231:	00 05 00 b9 08 00    	add    BYTE PTR [rip+0x8b900],al        # 8bb37 <__FRAME_END__+0x8b32b>
     237:	00 05 00 d0 17 00    	add    BYTE PTR [rip+0x17d000],al        # 17d23d <__FRAME_END__+0x17ca31>
     23d:	00 05 00 4b 41 00    	add    BYTE PTR [rip+0x414b00],al        # 414d43 <_end+0x213d2b>
     243:	00 05 00 b7 26 00    	add    BYTE PTR [rip+0x26b700],al        # 26b949 <_end+0x6a931>
     249:	00 05 00 7c 1b 00    	add    BYTE PTR [rip+0x1b7c00],al        # 1b7e4f <__FRAME_END__+0x1b7643>
     24f:	00 05 00 e4 37 00    	add    BYTE PTR [rip+0x37e400],al        # 37e655 <_end+0x17d63d>
     255:	00 05 00 9f 09 00    	add    BYTE PTR [rip+0x99f00],al        # 9a15b <__FRAME_END__+0x9994f>
     25b:	00 05 00 e8 09 00    	add    BYTE PTR [rip+0x9e800],al        # 9ea61 <__FRAME_END__+0x9e255>
     261:	00 05 00 9a 23 00    	add    BYTE PTR [rip+0x239a00],al        # 239c67 <_end+0x38c4f>
     267:	00 05 00 fb 42 00    	add    BYTE PTR [rip+0x42fb00],al        # 42fd6d <_end+0x22ed55>
     26d:	00 05 00 0c 0b 00    	add    BYTE PTR [rip+0xb0c00],al        # b0e73 <__FRAME_END__+0xb0667>
     273:	00 05 00 53 0d 00    	add    BYTE PTR [rip+0xd5300],al        # d5579 <__FRAME_END__+0xd4d6d>
     279:	00 05 00 73 1c 00    	add    BYTE PTR [rip+0x1c7300],al        # 1c757f <__FRAME_END__+0x1c6d73>
     27f:	00 05 00 12 0a 00    	add    BYTE PTR [rip+0xa1200],al        # a1485 <__FRAME_END__+0xa0c79>
     285:	00 05 00 14 43 00    	add    BYTE PTR [rip+0x431400],al        # 43168b <_end+0x230673>
     28b:	00 05 00 9b 0c 00    	add    BYTE PTR [rip+0xc9b00],al        # c9d91 <__FRAME_END__+0xc9585>
     291:	00 05 00 66 46 00    	add    BYTE PTR [rip+0x466600],al        # 466897 <_end+0x26587f>
     297:	00 05 00 fc 26 00    	add    BYTE PTR [rip+0x26fc00],al        # 26fe9d <_end+0x6ee85>
     29d:	00 05 00 ac 22 00    	add    BYTE PTR [rip+0x22ac00],al        # 22aea3 <_end+0x29e8b>
     2a3:	00 05 00 66 36 00    	add    BYTE PTR [rip+0x366600],al        # 3668a9 <_end+0x165891>
     2a9:	00 05 00 a6 3c 00    	add    BYTE PTR [rip+0x3ca600],al        # 3ca8af <_end+0x1c9897>
     2af:	00 05 00 83 39 00    	add    BYTE PTR [rip+0x398300],al        # 3985b5 <_end+0x19759d>
     2b5:	00 05 00 5e 4b 00    	add    BYTE PTR [rip+0x4b5e00],al        # 4b60bb <_end+0x2b50a3>
     2bb:	00 05 00 3e 16 00    	add    BYTE PTR [rip+0x163e00],al        # 1640c1 <__FRAME_END__+0x1638b5>
     2c1:	00 05 00 fa 27 00    	add    BYTE PTR [rip+0x27fa00],al        # 27fcc7 <_end+0x7ecaf>
     2c7:	00 05 00 7a 3e 00    	add    BYTE PTR [rip+0x3e7a00],al        # 3e7ccd <_end+0x1e6cb5>
     2cd:	00 05 00 a1 03 00    	add    BYTE PTR [rip+0x3a100],al        # 3a3d3 <__FRAME_END__+0x39bc7>
     2d3:	00 05 00 40 47 00    	add    BYTE PTR [rip+0x474000],al        # 4742d9 <_end+0x2732c1>
     2d9:	00 05 00 28 0c 00    	add    BYTE PTR [rip+0xc2800],al        # c2adf <__FRAME_END__+0xc22d3>
     2df:	00 05 00 79 31 00    	add    BYTE PTR [rip+0x317900],al        # 317be5 <_end+0x116bcd>
     2e5:	00 05 00 3b 08 00    	add    BYTE PTR [rip+0x83b00],al        # 83deb <__FRAME_END__+0x835df>
     2eb:	00 05 00 6b 34 00    	add    BYTE PTR [rip+0x346b00],al        # 346df1 <_end+0x145dd9>
     2f1:	00 05 00 30 1c 00    	add    BYTE PTR [rip+0x1c3000],al        # 1c32f7 <__FRAME_END__+0x1c2aeb>
     2f7:	00 05 00 5a 3b 00    	add    BYTE PTR [rip+0x3b5a00],al        # 3b5cfd <_end+0x1b4ce5>
     2fd:	00 05 00 2a 0b 00    	add    BYTE PTR [rip+0xb2a00],al        # b2d03 <__FRAME_END__+0xb24f7>
     303:	00 05 00 e7 36 00    	add    BYTE PTR [rip+0x36e700],al        # 36ea09 <_end+0x16d9f1>
     309:	00 05 00 57 2b 00    	add    BYTE PTR [rip+0x2b5700],al        # 2b5a0f <_end+0xb49f7>
     30f:	00 05 00 64 23 00    	add    BYTE PTR [rip+0x236400],al        # 236715 <_end+0x356fd>
     315:	00 05 00 35 44 00    	add    BYTE PTR [rip+0x443500],al        # 44381b <_end+0x242803>
     31b:	00 05 00 93 2a 00    	add    BYTE PTR [rip+0x2a9300],al        # 2a9621 <_end+0xa8609>
     321:	00 05 00 aa 39 00    	add    BYTE PTR [rip+0x39aa00],al        # 39ad27 <_end+0x199d0f>
     327:	00 05 00 f6 3b 00    	add    BYTE PTR [rip+0x3bf600],al        # 3bf92d <_end+0x1be915>
     32d:	00 05 00 96 3f 00    	add    BYTE PTR [rip+0x3f9600],al        # 3f9933 <_end+0x1f891b>
     333:	00 05 00 b1 06 00    	add    BYTE PTR [rip+0x6b100],al        # 6b439 <__FRAME_END__+0x6ac2d>
     339:	00 05 00 db 1b 00    	add    BYTE PTR [rip+0x1bdb00],al        # 1bde3f <__FRAME_END__+0x1bd633>
     33f:	00 05 00 3c 33 00    	add    BYTE PTR [rip+0x333c00],al        # 333f45 <_end+0x132f2d>
     345:	00 05 00 2a 4b 00    	add    BYTE PTR [rip+0x4b2a00],al        # 4b2d4b <_end+0x2b1d33>
     34b:	00 05 00 16 3e 00    	add    BYTE PTR [rip+0x3e1600],al        # 3e1951 <_end+0x1e0939>
     351:	00 05 00 b7 10 00    	add    BYTE PTR [rip+0x10b700],al        # 10ba57 <__FRAME_END__+0x10b24b>
     357:	00 05 00 2a 3a 00    	add    BYTE PTR [rip+0x3a2a00],al        # 3a2d5d <_end+0x1a1d45>
     35d:	00 05 00 90 42 00    	add    BYTE PTR [rip+0x429000],al        # 429363 <_end+0x22834b>
     363:	00 05 00 10 35 00    	add    BYTE PTR [rip+0x351000],al        # 351369 <_end+0x150351>
     369:	00 05 00 24 23 00    	add    BYTE PTR [rip+0x232400],al        # 23276f <_end+0x31757>
     36f:	00 05 00 0c 00 00    	add    BYTE PTR [rip+0xc00],al        # f75 <__FRAME_END__+0x769>
     375:	00 05 00 cd 2c 00    	add    BYTE PTR [rip+0x2ccd00],al        # 2cd07b <_end+0xcc063>
     37b:	00 05 00 03 31 00    	add    BYTE PTR [rip+0x310300],al        # 310681 <_end+0x10f669>
     381:	00 05 00 f9 12 00    	add    BYTE PTR [rip+0x12f900],al        # 12fc87 <__FRAME_END__+0x12f47b>
     387:	00 05 00 66 2a 00    	add    BYTE PTR [rip+0x2a6600],al        # 2a698d <_end+0xa5975>
     38d:	00 05 00 91 2e 00    	add    BYTE PTR [rip+0x2e9100],al        # 2e9493 <_end+0xe847b>
     393:	00 05 00 2d 2f 00    	add    BYTE PTR [rip+0x2f2d00],al        # 2f3099 <_end+0xf2081>
     399:	00 05 00 f9 21 00    	add    BYTE PTR [rip+0x21f900],al        # 21fc9f <_end+0x1ec87>
     39f:	00 05 00 60 22 00    	add    BYTE PTR [rip+0x226000],al        # 2263a5 <_end+0x2538d>
     3a5:	00 05 00 52 1f 00    	add    BYTE PTR [rip+0x1f5200],al        # 1f55ab <__FRAME_END__+0x1f4d9f>
     3ab:	00 05 00 a8 3f 00    	add    BYTE PTR [rip+0x3fa800],al        # 3fabb1 <_end+0x1f9b99>
     3b1:	00 05 00 6a 24 00    	add    BYTE PTR [rip+0x246a00],al        # 246db7 <_end+0x45d9f>
     3b7:	00 05 00 ba 3a 00    	add    BYTE PTR [rip+0x3aba00],al        # 3abdbd <_end+0x1aada5>
     3bd:	00 05 00 ab 21 00    	add    BYTE PTR [rip+0x21ab00],al        # 21aec3 <_end+0x19eab>
     3c3:	00 05 00 a9 0b 00    	add    BYTE PTR [rip+0xba900],al        # bacc9 <__FRAME_END__+0xba4bd>
     3c9:	00 05 00 1d 28 00    	add    BYTE PTR [rip+0x281d00],al        # 2820cf <_end+0x810b7>
     3cf:	00 05 00 b0 0e 00    	add    BYTE PTR [rip+0xeb000],al        # eb3d5 <__FRAME_END__+0xeabc9>
     3d5:	00 05 00 3f 4b 00    	add    BYTE PTR [rip+0x4b3f00],al        # 4b42db <_end+0x2b32c3>
     3db:	00 05 00 88 36 00    	add    BYTE PTR [rip+0x368800],al        # 368be1 <_end+0x167bc9>
     3e1:	00 05 00 51 42 00    	add    BYTE PTR [rip+0x425100],al        # 4254e7 <_end+0x2244cf>
     3e7:	00 05 00 83 21 00    	add    BYTE PTR [rip+0x218300],al        # 2186ed <_end+0x176d5>
     3ed:	00 05 00 00 46 00    	add    BYTE PTR [rip+0x460000],al        # 4603f3 <_end+0x25f3db>
     3f3:	00 05 00 7f 3a 00    	add    BYTE PTR [rip+0x3a7f00],al        # 3a82f9 <_end+0x1a72e1>
     3f9:	00 05 00 84 12 00    	add    BYTE PTR [rip+0x128400],al        # 1287ff <__FRAME_END__+0x127ff3>
     3ff:	00 05 00 00 2b 00    	add    BYTE PTR [rip+0x2b0000],al        # 2b0405 <_end+0xaf3ed>
     405:	00 05 00 ae 11 00    	add    BYTE PTR [rip+0x11ae00],al        # 11b20b <__FRAME_END__+0x11a9ff>
     40b:	00 05 00 11 2f 00    	add    BYTE PTR [rip+0x2f1100],al        # 2f1511 <_end+0xf04f9>
     411:	00 05 00 a4 49 00    	add    BYTE PTR [rip+0x49a400],al        # 49a817 <_end+0x2997ff>
     417:	00 05 00 a5 2a 00    	add    BYTE PTR [rip+0x2aa500],al        # 2aa91d <_end+0xa9905>
     41d:	00 05 00 63 27 00    	add    BYTE PTR [rip+0x276300],al        # 276723 <_end+0x7570b>
     423:	00 05 00 dd 07 00    	add    BYTE PTR [rip+0x7dd00],al        # 7e129 <__FRAME_END__+0x7d91d>
     429:	00 05 00 ba 33 00    	add    BYTE PTR [rip+0x33ba00],al        # 33be2f <_end+0x13ae17>
     42f:	00 05 00 5b 1a 00    	add    BYTE PTR [rip+0x1a5b00],al        # 1a5f35 <__FRAME_END__+0x1a5729>
     435:	00 05 00 eb 44 00    	add    BYTE PTR [rip+0x44eb00],al        # 44ef3b <_end+0x24df23>
     43b:	00 05 00 44 10 00    	add    BYTE PTR [rip+0x104400],al        # 104841 <__FRAME_END__+0x104035>
     441:	00 05 00 c1 09 00    	add    BYTE PTR [rip+0x9c100],al        # 9c547 <__FRAME_END__+0x9bd3b>
     447:	00 05 00 56 3a 00    	add    BYTE PTR [rip+0x3a5600],al        # 3a5a4d <_end+0x1a4a35>
     44d:	00 05 00 7a 03 00    	add    BYTE PTR [rip+0x37a00],al        # 37e53 <__FRAME_END__+0x37647>
     453:	00 05 00 0a 03 00    	add    BYTE PTR [rip+0x30a00],al        # 30e59 <__FRAME_END__+0x3064d>
     459:	00 05 00 8d 15 00    	add    BYTE PTR [rip+0x158d00],al        # 15915f <__FRAME_END__+0x158953>
     45f:	00 05 00 57 2e 00    	add    BYTE PTR [rip+0x2e5700],al        # 2e5b65 <_end+0xe4b4d>
     465:	00 05 00 fa 25 00    	add    BYTE PTR [rip+0x25fa00],al        # 25fe6b <_end+0x5ee53>
     46b:	00 05 00 ca 11 00    	add    BYTE PTR [rip+0x11ca00],al        # 11ce71 <__FRAME_END__+0x11c665>
     471:	00 05 00 1a 02 00    	add    BYTE PTR [rip+0x21a00],al        # 21e77 <__FRAME_END__+0x2166b>
     477:	00 05 00 30 36 00    	add    BYTE PTR [rip+0x363000],al        # 36347d <_end+0x162465>
     47d:	00 05 00 d8 04 00    	add    BYTE PTR [rip+0x4d800],al        # 4dc83 <__FRAME_END__+0x4d477>
     483:	00 05 00 ea 10 00    	add    BYTE PTR [rip+0x10ea00],al        # 10ee89 <__FRAME_END__+0x10e67d>
     489:	00 05 00 b5 2c 00    	add    BYTE PTR [rip+0x2cb500],al        # 2cb98f <_end+0xca977>
     48f:	00 05 00 d7 1f 00    	add    BYTE PTR [rip+0x1fd700],al        # 1fdb95 <__FRAME_END__+0x1fd389>
     495:	00 05 00 7e 45 00    	add    BYTE PTR [rip+0x457e00],al        # 45829b <_end+0x257283>
     49b:	00 05 00 c9 1e 00    	add    BYTE PTR [rip+0x1ec900],al        # 1ecda1 <__FRAME_END__+0x1ec595>
     4a1:	00 05 00 15 14 00    	add    BYTE PTR [rip+0x141500],al        # 1419a7 <__FRAME_END__+0x14119b>
     4a7:	00 05 00 d3 1d 00    	add    BYTE PTR [rip+0x1dd300],al        # 1dd7ad <__FRAME_END__+0x1dcfa1>
     4ad:	00 05 00 36 10 00    	add    BYTE PTR [rip+0x103600],al        # 103ab3 <__FRAME_END__+0x1032a7>
     4b3:	00 05 00 4b 48 00    	add    BYTE PTR [rip+0x484b00],al        # 484fb9 <_end+0x283fa1>
     4b9:	00 05 00 cc 00 00    	add    BYTE PTR [rip+0xcc00],al        # d0bf <__FRAME_END__+0xc8b3>
     4bf:	00 05 00 12 45 00    	add    BYTE PTR [rip+0x451200],al        # 4516c5 <_end+0x2506ad>
     4c5:	00 05 00 9c 1c 00    	add    BYTE PTR [rip+0x1c9c00],al        # 1ca0cb <__FRAME_END__+0x1c98bf>
     4cb:	00 05 00 94 32 00    	add    BYTE PTR [rip+0x329400],al        # 3298d1 <_end+0x1288b9>
     4d1:	00 05 00 df 1e 00    	add    BYTE PTR [rip+0x1edf00],al        # 1ee3d7 <__FRAME_END__+0x1edbcb>
     4d7:	00 05 00 63 41 00    	add    BYTE PTR [rip+0x416300],al        # 4167dd <_end+0x2157c5>
     4dd:	00 05 00 c9 30 00    	add    BYTE PTR [rip+0x30c900],al        # 30cde3 <_end+0x10bdcb>
     4e3:	00 05 00 d6 06 00    	add    BYTE PTR [rip+0x6d600],al        # 6dae9 <__FRAME_END__+0x6d2dd>
     4e9:	00 05 00 c7 4d 00    	add    BYTE PTR [rip+0x4dc700],al        # 4dcbef <_end+0x2dbbd7>
     4ef:	00 05 00 b5 28 00    	add    BYTE PTR [rip+0x28b500],al        # 28b9f5 <_end+0x8a9dd>
     4f5:	00 05 00 21 46 00    	add    BYTE PTR [rip+0x462100],al        # 4625fb <_end+0x2615e3>
     4fb:	00 05 00 03 08 00    	add    BYTE PTR [rip+0x80300],al        # 80801 <__FRAME_END__+0x7fff5>
     501:	00 05 00 39 24 00    	add    BYTE PTR [rip+0x243900],al        # 243e07 <_end+0x42def>
     507:	00 05 00 62 03 00    	add    BYTE PTR [rip+0x36200],al        # 3670d <__FRAME_END__+0x35f01>
     50d:	00 05 00 28 1f 00    	add    BYTE PTR [rip+0x1f2800],al        # 1f2d13 <__FRAME_END__+0x1f2507>
     513:	00 05 00 86 29 00    	add    BYTE PTR [rip+0x298600],al        # 298b19 <_end+0x97b01>
     519:	00 05 00 1c 47 00    	add    BYTE PTR [rip+0x471c00],al        # 47211f <_end+0x271107>
     51f:	00 05 00 49 4d 00    	add    BYTE PTR [rip+0x4d4900],al        # 4d4e25 <_end+0x2d3e0d>
     525:	00 05 00 a3 1a 00    	add    BYTE PTR [rip+0x1aa300],al        # 1aa82b <__FRAME_END__+0x1aa01f>
     52b:	00 05 00 a8 25 00    	add    BYTE PTR [rip+0x25a800],al        # 25ad31 <_end+0x59d19>
     531:	00 05 00 3e 4c 00    	add    BYTE PTR [rip+0x4c3e00],al        # 4c4337 <_end+0x2c331f>
     537:	00 05 00 c6 01 00    	add    BYTE PTR [rip+0x1c600],al        # 1cb3d <__FRAME_END__+0x1c331>
     53d:	00 05 00 f7 0a 00    	add    BYTE PTR [rip+0xaf700],al        # afc43 <__FRAME_END__+0xaf437>
     543:	00 05 00 9f 45 00    	add    BYTE PTR [rip+0x459f00],al        # 45a449 <_end+0x259431>
     549:	00 05 00 d0 14 00    	add    BYTE PTR [rip+0x14d000],al        # 14d54f <__FRAME_END__+0x14cd43>
     54f:	00 05 00 67 2b 00    	add    BYTE PTR [rip+0x2b6700],al        # 2b6c55 <_end+0xb5c3d>
     555:	00 05 00 28 09 00    	add    BYTE PTR [rip+0x92800],al        # 92d5b <__FRAME_END__+0x9254f>
     55b:	00 05 00 22 33 00    	add    BYTE PTR [rip+0x332200],al        # 332761 <_end+0x131749>
     561:	00 05 00 ba 2a 00    	add    BYTE PTR [rip+0x2aba00],al        # 2abf67 <_end+0xaaf4f>
     567:	00 05 00 c1 15 00    	add    BYTE PTR [rip+0x15c100],al        # 15c66d <__FRAME_END__+0x15be61>
     56d:	00 05 00 d3 4b 00    	add    BYTE PTR [rip+0x4bd300],al        # 4bd873 <_end+0x2bc85b>
     573:	00 05 00 dc 4d 00    	add    BYTE PTR [rip+0x4ddc00],al        # 4de179 <_end+0x2dd161>
     579:	00 05 00 07 3c 00    	add    BYTE PTR [rip+0x3c0700],al        # 3c0c7f <_end+0x1bfc67>
     57f:	00 05 00 8f 1e 00    	add    BYTE PTR [rip+0x1e8f00],al        # 1e9485 <__FRAME_END__+0x1e8c79>
     585:	00 05 00 a2 0a 00    	add    BYTE PTR [rip+0xaa200],al        # aa78b <__FRAME_END__+0xa9f7f>
     58b:	00 05 00 b1 2b 00    	add    BYTE PTR [rip+0x2bb100],al        # 2bb691 <_end+0xba679>
     591:	00 05 00 ff 14 00    	add    BYTE PTR [rip+0x14ff00],al        # 150497 <__FRAME_END__+0x14fc8b>
     597:	00 05 00 60 4d 00    	add    BYTE PTR [rip+0x4d6000],al        # 4d659d <_end+0x2d5585>
     59d:	00 05 00 75 2c 00    	add    BYTE PTR [rip+0x2c7500],al        # 2c7aa3 <_end+0xc6a8b>
     5a3:	00 05 00 b8 36 00    	add    BYTE PTR [rip+0x36b800],al        # 36bda9 <_end+0x16ad91>
     5a9:	00 05 00 7b 02 00    	add    BYTE PTR [rip+0x27b00],al        # 280af <__FRAME_END__+0x278a3>
     5af:	00 05 00 24 25 00    	add    BYTE PTR [rip+0x252400],al        # 2529b5 <_end+0x5199d>
     5b5:	00 05 00 3f 1e 00    	add    BYTE PTR [rip+0x1e3f00],al        # 1e44bb <__FRAME_END__+0x1e3caf>
     5bb:	00 05 00 dc 0a 00    	add    BYTE PTR [rip+0xadc00],al        # ae1c1 <__FRAME_END__+0xad9b5>
     5c1:	00 05 00 b9 23 00    	add    BYTE PTR [rip+0x23b900],al        # 23bec7 <_end+0x3aeaf>
     5c7:	00 05 00 db 4a 00    	add    BYTE PTR [rip+0x4adb00],al        # 4ae0cd <_end+0x2ad0b5>
     5cd:	00 05 00 52 1b 00    	add    BYTE PTR [rip+0x1b5200],al        # 1b57d3 <__FRAME_END__+0x1b4fc7>
     5d3:	00 05 00 03 4c 00    	add    BYTE PTR [rip+0x4c0300],al        # 4c08d9 <_end+0x2bf8c1>
     5d9:	00 05 00 e6 29 00    	add    BYTE PTR [rip+0x29e600],al        # 29ebdf <_end+0x9dbc7>
     5df:	00 05 00 e6 33 00    	add    BYTE PTR [rip+0x33e600],al        # 33ebe5 <_end+0x13dbcd>
     5e5:	00 05 00 07 2e 00    	add    BYTE PTR [rip+0x2e0700],al        # 2e0ceb <_end+0xdfcd3>
     5eb:	00 05 00 b2 0f 00    	add    BYTE PTR [rip+0xfb200],al        # fb7f1 <__FRAME_END__+0xfafe5>
     5f1:	00 05 00 9c 00 00    	add    BYTE PTR [rip+0x9c00],al        # a1f7 <__FRAME_END__+0x99eb>
     5f7:	00 05 00 9f 08 00    	add    BYTE PTR [rip+0x89f00],al        # 8a4fd <__FRAME_END__+0x89cf1>
int main(int argc, char * argv[]) {
     5fd:	00 05 00 9b 4d 00    	add    BYTE PTR [rip+0x4d9b00],al        # 4da103 <_end+0x2d90eb>
     603:	00 05 00 8a 0c 00    	add    BYTE PTR [rip+0xc8a00],al        # c9009 <__FRAME_END__+0xc87fd>
	a = 2.2;
     609:	00 05 00 26 45 00    	add    BYTE PTR [rip+0x452600],al        # 452c0f <_end+0x251bf7>
     60f:	00 05 00 71 1a 00    	add    BYTE PTR [rip+0x1a7100],al        # 1a7715 <__FRAME_END__+0x1a6f09>
	b = 3.3;
     615:	00 05 00 b5 00 00    	add    BYTE PTR [rip+0xb500],al        # bb1b <__FRAME_END__+0xb30f>
     61b:	00 05 00 fa 32 00    	add    BYTE PTR [rip+0x32fa00],al        # 330021 <_end+0x12f009>
	c = a + b;
     621:	00 05 00 01 1e 00    	add    BYTE PTR [rip+0x1e0100],al        # 1e0727 <__FRAME_END__+0x1dff1b>
     627:	00 05 00 6f 26 00    	add    BYTE PTR [rip+0x266f00],al        # 26752d <_end+0x66515>
     62d:	00 05 00 75 06 00    	add    BYTE PTR [rip+0x67500],al        # 67b33 <__FRAME_END__+0x67327>
}
     633:	00 05 00 dd 3a 00    	add    BYTE PTR [rip+0x3add00],al        # 3ae339 <_end+0x1ad321>
     639:	00 05 00 72 4a 00    	add    BYTE PTR [rip+0x4a7200],al        # 4a783f <_end+0x2a6827>
     63f:	00 05 00 c0 1f 00    	add    BYTE PTR [rip+0x1fc000],al        # 1fc645 <__FRAME_END__+0x1fbe39>
     645:	00 05 00 74 15 00    	add    BYTE PTR [rip+0x157400],al        # 157a4b <__FRAME_END__+0x15723f>
     64b:	00 05 00 2a 00 00    	add    BYTE PTR [rip+0x2a00],al        # 3051 <__FRAME_END__+0x2845>
     651:	00 05 00 40 17 00    	add    BYTE PTR [rip+0x174000],al        # 174657 <__FRAME_END__+0x173e4b>
     657:	00 05 00 6a 1b 00    	add    BYTE PTR [rip+0x1b6a00],al        # 1b705d <__FRAME_END__+0x1b6851>
     65d:	00 05 00 fa 10 00    	add    BYTE PTR [rip+0x10fa00],al        # 110063 <__FRAME_END__+0x10f857>
     663:	00 05 00 71 2d 00    	add    BYTE PTR [rip+0x2d7100],al        # 2d7769 <_end+0xd6751>
     669:	00 05 00 fc 13 00    	add    BYTE PTR [rip+0x13fc00],al        # 14026f <__FRAME_END__+0x13fa63>
     66f:	00 05 00 ce 19 00    	add    BYTE PTR [rip+0x19ce00],al        # 19d475 <__FRAME_END__+0x19cc69>
     675:	00 05 00 10 4b 00    	add    BYTE PTR [rip+0x4b1000],al        # 4b167b <_end+0x2b0663>
     67b:	00 05 00 3c 0e 00    	add    BYTE PTR [rip+0xe3c00],al        # e4281 <__FRAME_END__+0xe3a75>
     681:	00 05 00 e9 19 00    	add    BYTE PTR [rip+0x19e900],al        # 19ef87 <__FRAME_END__+0x19e77b>
     687:	00 05 00 c1 38 00    	add    BYTE PTR [rip+0x38c100],al        # 38c78d <_end+0x18b775>
     68d:	00 05 00 bd 47 00    	add    BYTE PTR [rip+0x47bd00],al        # 47c393 <_end+0x27b37b>
     693:	00 05 00 15 4d 00    	add    BYTE PTR [rip+0x4d1500],al        # 4d1b99 <_end+0x2d0b81>
     699:	00 05 00 79 1f 00    	add    BYTE PTR [rip+0x1f7900],al        # 1f7f9f <__FRAME_END__+0x1f7793>
     69f:	00 05 00 18 0e 00    	add    BYTE PTR [rip+0xe1800],al        # e1ea5 <__FRAME_END__+0xe1699>
     6a5:	00 05 00 e8 24 00    	add    BYTE PTR [rip+0x24e800],al        # 24eeab <_end+0x4de93>
     6ab:	00 05 00 d6 24 00    	add    BYTE PTR [rip+0x24d600],al        # 24dcb1 <_end+0x4cc99>
     6b1:	00 05 00 8a 35 00    	add    BYTE PTR [rip+0x358a00],al        # 3590b7 <_end+0x15809f>
     6b7:	00 05 00 b1 34 00    	add    BYTE PTR [rip+0x34b100],al        # 34b7bd <_end+0x14a7a5>
     6bd:	00 05 00 4c 01 00    	add    BYTE PTR [rip+0x14c00],al        # 152c3 <__FRAME_END__+0x14ab7>
     6c3:	00 05 00 30 4a 00    	add    BYTE PTR [rip+0x4a3000],al        # 4a36c9 <_end+0x2a26b1>
     6c9:	00 05 00 3f 03 00    	add    BYTE PTR [rip+0x33f00],al        # 345cf <__FRAME_END__+0x33dc3>
     6cf:	00 05 00 fe 03 00    	add    BYTE PTR [rip+0x3fe00],al        # 404d5 <__FRAME_END__+0x3fcc9>
     6d5:	00 05 00 bc 27 00    	add    BYTE PTR [rip+0x27bc00],al        # 27c2db <_end+0x7b2c3>
     6db:	00 05 00 c0 1c 00    	add    BYTE PTR [rip+0x1cc000],al        # 1cc6e1 <__FRAME_END__+0x1cbed5>
     6e1:	00 05 00 25 14 00    	add    BYTE PTR [rip+0x142500],al        # 142be7 <__FRAME_END__+0x1423db>
     6e7:	00 05 00 14 20 00    	add    BYTE PTR [rip+0x201400],al        # 201aed <_end+0xad5>
     6ed:	00 05 00 fa 0c 00    	add    BYTE PTR [rip+0xcfa00],al        # d00f3 <__FRAME_END__+0xcf8e7>
     6f3:	00 05 00 01 47 00    	add    BYTE PTR [rip+0x470100],al        # 4707f9 <_end+0x26f7e1>
     6f9:	00 05 00 33 3b 00    	add    BYTE PTR [rip+0x3b3300],al        # 3b39ff <_end+0x1b29e7>
     6ff:	00 05 00 9e 0e 00    	add    BYTE PTR [rip+0xe9e00],al        # ea505 <__FRAME_END__+0xe9cf9>
     705:	00 05 00 06 10 00    	add    BYTE PTR [rip+0x100600],al        # 100d0b <__FRAME_END__+0x1004ff>
     70b:	00 05 00 40 19 00    	add    BYTE PTR [rip+0x194000],al        # 194711 <__FRAME_END__+0x193f05>
     711:	00 05 00 39 20 00    	add    BYTE PTR [rip+0x203900],al        # 204017 <_end+0x2fff>
     717:	00 05 00 8d 25 00    	add    BYTE PTR [rip+0x258d00],al        # 25941d <_end+0x58405>
     71d:	00 05 00 b1 44 00    	add    BYTE PTR [rip+0x44b100],al        # 44b823 <_end+0x24a80b>
     723:	00 05 00 dc 20 00    	add    BYTE PTR [rip+0x20dc00],al        # 20e329 <_end+0xd311>
     729:	00 05 00 6d 33 00    	add    BYTE PTR [rip+0x336d00],al        # 33742f <_end+0x136417>
     72f:	00 05 00 0b 01 00    	add    BYTE PTR [rip+0x10b00],al        # 11235 <__FRAME_END__+0x10a29>
     735:	00 05 00 c3 4c 00    	add    BYTE PTR [rip+0x4cc300],al        # 4cca3b <_end+0x2cba23>
     73b:	00 05 00 35 18 00    	add    BYTE PTR [rip+0x183500],al        # 183c41 <__FRAME_END__+0x183435>
     741:	00 05 00 44 35 00    	add    BYTE PTR [rip+0x354400],al        # 354b47 <_end+0x153b2f>
     747:	00 05 00 9a 28 00    	add    BYTE PTR [rip+0x289a00],al        # 28a14d <_end+0x89135>
     74d:	00 05 00 f2 2d 00    	add    BYTE PTR [rip+0x2df200],al        # 2df953 <_end+0xde93b>
     753:	00 05 00 22 41 00    	add    BYTE PTR [rip+0x412200],al        # 412959 <_end+0x211941>
     759:	00 05 00 4d 18 00    	add    BYTE PTR [rip+0x184d00],al        # 18545f <__FRAME_END__+0x184c53>
     75f:	00 05 00 a1 10 00    	add    BYTE PTR [rip+0x10a100],al        # 10a865 <__FRAME_END__+0x10a059>
     765:	00 05 00 38 23 00    	add    BYTE PTR [rip+0x233800],al        # 233f6b <_end+0x32f53>
     76b:	00 05 00 eb 08 00    	add    BYTE PTR [rip+0x8eb00],al        # 8f271 <__FRAME_END__+0x8ea65>
     771:	00 05 00 5b 28 00    	add    BYTE PTR [rip+0x285b00],al        # 286277 <_end+0x8525f>
     777:	00 05 00 b1 4d 00    	add    BYTE PTR [rip+0x4db100],al        # 4db87d <_end+0x2da865>
     77d:	00 05 00 74 40 00    	add    BYTE PTR [rip+0x407400],al        # 407b83 <_end+0x206b6b>
     783:	00 05 00 9b 34 00    	add    BYTE PTR [rip+0x349b00],al        # 34a289 <_end+0x149271>
     789:	00 05 00 ec 4b 00    	add    BYTE PTR [rip+0x4bec00],al        # 4bf38f <_end+0x2be377>
     78f:	00 05 00 57 16 00    	add    BYTE PTR [rip+0x165700],al        # 165e95 <__FRAME_END__+0x165689>
     795:	00 05 00 ac 01 00    	add    BYTE PTR [rip+0x1ac00],al        # 1b39b <__FRAME_END__+0x1ab8f>
     79b:	00 05 00 6b 00 00    	add    BYTE PTR [rip+0x6b00],al        # 72a1 <__FRAME_END__+0x6a95>
     7a1:	00 05 00 aa 17 00    	add    BYTE PTR [rip+0x17aa00],al        # 17b1a7 <__FRAME_END__+0x17a99b>
     7a7:	00 05 00 b4 12 00    	add    BYTE PTR [rip+0x12b400],al        # 12bbad <__FRAME_END__+0x12b3a1>
     7ad:	00 05 00 62 30 00    	add    BYTE PTR [rip+0x306200],al        # 3069b3 <_end+0x10599b>
     7b3:	00 05 00 71 35 00    	add    BYTE PTR [rip+0x357100],al        # 3578b9 <_end+0x1568a1>
     7b9:	00 05 00 c2 48 00    	add    BYTE PTR [rip+0x48c200],al        # 48c9bf <_end+0x28b9a7>
     7bf:	00 05 00 24 13 00    	add    BYTE PTR [rip+0x132400],al        # 132bc5 <__FRAME_END__+0x1323b9>
     7c5:	00 05 00 96 46 00    	add    BYTE PTR [rip+0x469600],al        # 469dcb <_end+0x268db3>
     7cb:	00 05 00 d1 33 00    	add    BYTE PTR [rip+0x33d100],al        # 33d8d1 <_end+0x13c8b9>
     7d1:	00 05 00 04 3d 00    	add    BYTE PTR [rip+0x3d0400],al        # 3d0bd7 <_end+0x1cfbbf>
     7d7:	00 05 00 22 24 00    	add    BYTE PTR [rip+0x242200],al        # 2429dd <_end+0x419c5>
     7dd:	00 05 00 6f 1d 00    	add    BYTE PTR [rip+0x1d6f00],al        # 1d76e3 <__FRAME_END__+0x1d6ed7>
     7e3:	00 05 00 d4 0f 00    	add    BYTE PTR [rip+0xfd400],al        # fdbe9 <__FRAME_END__+0xfd3dd>
     7e9:	00 05 00 bc 2d 00    	add    BYTE PTR [rip+0x2dbc00],al        # 2dc3ef <_end+0xdb3d7>
     7ef:	00 05 00 1a 1e 00    	add    BYTE PTR [rip+0x1e1a00],al        # 1e21f5 <__FRAME_END__+0x1e19e9>
     7f5:	00 05 00 91 02 00    	add    BYTE PTR [rip+0x29100],al        # 298fb <__FRAME_END__+0x290ef>
     7fb:	00 05 00 5c 10 00    	add    BYTE PTR [rip+0x105c00],al        # 106401 <__FRAME_END__+0x105bf5>
     801:	00 05 00 ee 1b 00    	add    BYTE PTR [rip+0x1bee00],al        # 1bf607 <__FRAME_END__+0x1bedfb>
     807:	00 05 00 48 24 00    	add    BYTE PTR [rip+0x244800],al        # 24500d <_end+0x43ff5>
     80d:	00 05 00 60 3d 00    	add    BYTE PTR [rip+0x3d6000],al        # 3d6813 <_end+0x1d57fb>
     813:	00 05 00 8d 31 00    	add    BYTE PTR [rip+0x318d00],al        # 319519 <_end+0x118501>
     819:	00 05 00 92 44 00    	add    BYTE PTR [rip+0x449200],al        # 449a1f <_end+0x248a07>
     81f:	00 05 00 86 16 00    	add    BYTE PTR [rip+0x168600],al        # 168e25 <__FRAME_END__+0x168619>
     825:	00 05 00 b8 24 00    	add    BYTE PTR [rip+0x24b800],al        # 24c02b <_end+0x4b013>
     82b:	00 05 00 55 40 00    	add    BYTE PTR [rip+0x405500],al        # 405d31 <_end+0x204d19>
     831:	00 05 00 6e 01 00    	add    BYTE PTR [rip+0x16e00],al        # 17637 <__FRAME_END__+0x16e2b>
     837:	00 05 00 1f 3c 00    	add    BYTE PTR [rip+0x3c1f00],al        # 3c273d <_end+0x1c1725>
     83d:	00 05 00 2c 28 00    	add    BYTE PTR [rip+0x282c00],al        # 283443 <_end+0x8242b>
     843:	00 05 00 8f 4c 00    	add    BYTE PTR [rip+0x4c8f00],al        # 4c9749 <_end+0x2c8731>
     849:	00 05 00 62 48 00    	add    BYTE PTR [rip+0x486200],al        # 486a4f <_end+0x285a37>
     84f:	00 05 00 76 0d 00    	add    BYTE PTR [rip+0xd7600],al        # d7e55 <__FRAME_END__+0xd7649>
     855:	00 05 00 22 2d 00    	add    BYTE PTR [rip+0x2d2200],al        # 2d2a5b <_end+0xd1a43>
     85b:	00 05 00 70 04 00    	add    BYTE PTR [rip+0x47000],al        # 47861 <__FRAME_END__+0x47055>
     861:	00 05 00 85 17 00    	add    BYTE PTR [rip+0x178500],al        # 178d67 <__FRAME_END__+0x17855b>
     867:	00 05 00 4a 4a 00    	add    BYTE PTR [rip+0x4a4a00],al        # 4a526d <_end+0x2a4255>
     86d:	00 05 00 13 1b 00    	add    BYTE PTR [rip+0x1b1300],al        # 1b1b73 <__FRAME_END__+0x1b1367>
     873:	00 05 00 82 25 00    	add    BYTE PTR [rip+0x258200],al        # 258a79 <_end+0x57a61>
     879:	00 05 00 2c 20 00    	add    BYTE PTR [rip+0x202c00],al        # 20347f <_end+0x2467>
     87f:	00 05 00 eb 46 00    	add    BYTE PTR [rip+0x46eb00],al        # 46f385 <_end+0x26e36d>
     885:	00 05 00 0b 24 00    	add    BYTE PTR [rip+0x240b00],al        # 24138b <_end+0x40373>
     88b:	00 05 00 10 49 00    	add    BYTE PTR [rip+0x491000],al        # 491891 <_end+0x290879>
     891:	00 05 00 a5 15 00    	add    BYTE PTR [rip+0x15a500],al        # 15ad97 <__FRAME_END__+0x15a58b>
     897:	00 05 00 26 27 00    	add    BYTE PTR [rip+0x272600],al        # 272e9d <_end+0x71e85>
     89d:	00 05 00 4e 40 00    	add    BYTE PTR [rip+0x404e00],al        # 4056a3 <_end+0x20468b>
     8a3:	00 05 00 59 03 00    	add    BYTE PTR [rip+0x35900],al        # 361a9 <__FRAME_END__+0x3599d>
     8a9:	00 05 00 11 18 00    	add    BYTE PTR [rip+0x181100],al        # 1819af <__FRAME_END__+0x1811a3>
     8af:	00 05 00 b2 16 00    	add    BYTE PTR [rip+0x16b200],al        # 16bab5 <__FRAME_END__+0x16b2a9>
     8b5:	00 05 00 74 47 00    	add    BYTE PTR [rip+0x477400],al        # 477cbb <_end+0x276ca3>
     8bb:	00 05 00 68 29 00    	add    BYTE PTR [rip+0x296800],al        # 2970c1 <_end+0x960a9>
     8c1:	00 05 00 05 42 00    	add    BYTE PTR [rip+0x420500],al        # 420dc7 <_end+0x21fdaf>
     8c7:	00 05 00 db 2f 00    	add    BYTE PTR [rip+0x2fdb00],al        # 2fe3cd <_end+0xfd3b5>
     8cd:	00 05 00 bc 39 00    	add    BYTE PTR [rip+0x39bc00],al        # 39c4d3 <_end+0x19b4bb>
     8d3:	00 05 00 69 3c 00    	add    BYTE PTR [rip+0x3c6900],al        # 3c71d9 <_end+0x1c61c1>
     8d9:	00 05 00 d0 2f 00    	add    BYTE PTR [rip+0x2fd000],al        # 2fd8df <_end+0xfc8c7>
     8df:	00 05 00 cf 23 00    	add    BYTE PTR [rip+0x23cf00],al        # 23d7e5 <_end+0x3c7cd>
     8e5:	00 05 00 33 37 00    	add    BYTE PTR [rip+0x373300],al        # 373beb <_end+0x172bd3>
     8eb:	00 05 00 e5 42 00    	add    BYTE PTR [rip+0x42e500],al        # 42edf1 <_end+0x22ddd9>
     8f1:	00 05 00 35 37 00    	add    BYTE PTR [rip+0x373500],al        # 373df7 <_end+0x172ddf>
     8f7:	00 05 00 62 4a 00    	add    BYTE PTR [rip+0x4a6200],al        # 4a6afd <_end+0x2a5ae5>
     8fd:	00 05 00 c9 0f 00    	add    BYTE PTR [rip+0xfc900],al        # fd203 <__FRAME_END__+0xfc9f7>
     903:	00 05 00 64 4a 00    	add    BYTE PTR [rip+0x4a6400],al        # 4a6d09 <_end+0x2a5cf1>
     909:	00 05 00 b2 27 00    	add    BYTE PTR [rip+0x27b200],al        # 27bb0f <_end+0x7aaf7>
     90f:	00 05 00 d2 08 00    	add    BYTE PTR [rip+0x8d200],al        # 8db15 <__FRAME_END__+0x8d309>
     915:	00 00                	add    BYTE PTR [rax],al
     917:	04 00                	add    al,0x0
     919:	00 05 13 d5 02 00    	add    BYTE PTR [rip+0x2d513],al        # 2de32 <__FRAME_END__+0x2d626>
     91f:	00 05 26 83 46 00    	add    BYTE PTR [rip+0x468326],al        # 468c4b <_end+0x267c33>
     925:	00 05 2e fa 18 00    	add    BYTE PTR [rip+0x18fa2e],al        # 190359 <__FRAME_END__+0x18fb4d>
     92b:	00 05 3a 7b 19 00    	add    BYTE PTR [rip+0x197b3a],al        # 19846b <__FRAME_END__+0x197c5f>
     931:	00 05 3d 65 0a 00    	add    BYTE PTR [rip+0xa653d],al        # a6e74 <__FRAME_END__+0xa6668>
     937:	00 00                	add    BYTE PTR [rax],al
     939:	04 00                	add    al,0x0
     93b:	00 05 18 96 10 00    	add    BYTE PTR [rip+0x109618],al        # 109f59 <__FRAME_END__+0x10974d>
     941:	00 05 1a 24 34 00    	add    BYTE PTR [rip+0x34241a],al        # 342d61 <_end+0x141d49>
     947:	00 00                	add    BYTE PTR [rax],al
     949:	04 00                	add    al,0x0
     94b:	00 05 13 16 25 00    	add    BYTE PTR [rip+0x251613],al        # 251f64 <_end+0x50f4c>
     951:	00 06                	add    BYTE PTR [rsi],al
     953:	77 47                	ja     99c <__FRAME_END__+0x190>
     955:	49 00 00             	rex.WB add BYTE PTR [r8],al
     958:	06                   	(bad)  
     959:	78 6b                	js     9c6 <__FRAME_END__+0x1ba>
     95b:	18 00                	sbb    BYTE PTR [rax],al
     95d:	00 06                	add    BYTE PTR [rsi],al
     95f:	79 28                	jns    989 <__FRAME_END__+0x17d>
     961:	18 00                	sbb    BYTE PTR [rax],al
     963:	00 06                	add    BYTE PTR [rsi],al
     965:	7a 88                	jp     8ef <__FRAME_END__+0xe3>
     967:	07                   	(bad)  
     968:	00 00                	add    BYTE PTR [rax],al
     96a:	06                   	(bad)  
     96b:	7b 09                	jnp    976 <__FRAME_END__+0x16a>
     96d:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
     970:	06                   	(bad)  
     971:	7c ce                	jl     941 <__FRAME_END__+0x135>
     973:	34 00                	xor    al,0x0
     975:	00 06                	add    BYTE PTR [rsi],al
     977:	7d 88                	jge    901 <__FRAME_END__+0xf5>
     979:	23 00                	and    eax,DWORD PTR [rax]
     97b:	00 06                	add    BYTE PTR [rsi],al
     97d:	7e 3f                	jle    9be <__FRAME_END__+0x1b2>
     97f:	13 00                	adc    eax,DWORD PTR [rax]
     981:	00 06                	add    BYTE PTR [rsi],al
     983:	7f b5                	jg     93a <__FRAME_END__+0x12e>
     985:	38 00                	cmp    BYTE PTR [rax],al
     987:	00 06                	add    BYTE PTR [rsi],al
     989:	80 01 d6             	add    BYTE PTR [rcx],0xd6
     98c:	44 00 00             	add    BYTE PTR [rax],r8b
     98f:	06                   	(bad)  
     990:	81 01 14 0d 00 00    	add    DWORD PTR [rcx],0xd14
     996:	06                   	(bad)  
     997:	82                   	(bad)  
     998:	01 31                	add    DWORD PTR [rcx],esi
     99a:	30 00                	xor    BYTE PTR [rax],al
     99c:	00 06                	add    BYTE PTR [rsi],al
     99e:	83 01 e2             	add    DWORD PTR [rcx],0xffffffe2
     9a1:	3f                   	(bad)  
     9a2:	00 00                	add    BYTE PTR [rax],al
     9a4:	06                   	(bad)  
     9a5:	84 01                	test   BYTE PTR [rcx],al
     9a7:	31 38                	xor    DWORD PTR [rax],edi
     9a9:	00 00                	add    BYTE PTR [rax],al
     9ab:	06                   	(bad)  
     9ac:	85 01                	test   DWORD PTR [rcx],eax
     9ae:	ea                   	(bad)  
     9af:	26 00 00             	add    BYTE PTR es:[rax],al
     9b2:	06                   	(bad)  
     9b3:	86 01                	xchg   BYTE PTR [rcx],al
     9b5:	db 46 00             	fild   DWORD PTR [rsi+0x0]
     9b8:	00 06                	add    BYTE PTR [rsi],al
     9ba:	87 01                	xchg   DWORD PTR [rcx],eax
     9bc:	aa                   	stos   BYTE PTR es:[rdi],al
     9bd:	05 00 00 06 88       	add    eax,0x88060000
     9c2:	01 c0                	add    eax,eax
     9c4:	29 00                	sub    DWORD PTR [rax],eax
     9c6:	00 06                	add    BYTE PTR [rsi],al
     9c8:	89 01                	mov    DWORD PTR [rcx],eax
     9ca:	3c 2a                	cmp    al,0x2a
     9cc:	00 00                	add    BYTE PTR [rax],al
     9ce:	06                   	(bad)  
     9cf:	8a 01                	mov    al,BYTE PTR [rcx]
     9d1:	46 0d 00 00 06 8b    	rex.RX or eax,0x8b060000
     9d7:	01 d7                	add    edi,edx
     9d9:	41 00 00             	add    BYTE PTR [r8],al
     9dc:	06                   	(bad)  
     9dd:	8c 01                	mov    WORD PTR [rcx],es
     9df:	2e 2b 00             	sub    eax,DWORD PTR cs:[rax]
     9e2:	00 06                	add    BYTE PTR [rsi],al
     9e4:	8d 01                	lea    eax,[rcx]
     9e6:	e3 17                	jrcxz  9ff <__FRAME_END__+0x1f3>
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	06                   	(bad)  
     9eb:	8e 01                	mov    es,WORD PTR [rcx]
     9ed:	6d                   	ins    DWORD PTR es:[rdi],dx
     9ee:	05 00 00 05 93       	add    eax,0x93050000
     9f3:	01 cf                	add    edi,ecx
     9f5:	12 00                	adc    al,BYTE PTR [rax]
     9f7:	00 05 9e 01 84 04    	add    BYTE PTR [rip+0x484019e],al        # 4840b9b <_end+0x463fb83>
     9fd:	00 00                	add    BYTE PTR [rax],al
     9ff:	05 ac 01 b5 42       	add    eax,0x42b501ac
     a04:	00 00                	add    BYTE PTR [rax],al
     a06:	05 b0 01 8b 22       	add    eax,0x228b01b0
     a0b:	00 00                	add    BYTE PTR [rax],al
     a0d:	06                   	(bad)  
     a0e:	dc 01                	fadd   QWORD PTR [rcx]
     a10:	4a 3b 00             	rex.WX cmp rax,QWORD PTR [rax]
     a13:	00 05 dd 01 e5 1a    	add    BYTE PTR [rip+0x1ae501dd],al        # 1ae50bf6 <_end+0x1ac4fbde>
     a19:	00 00                	add    BYTE PTR [rax],al
     a1b:	05 e3 01 e6 02       	add    eax,0x2e601e3
     a20:	00 00                	add    BYTE PTR [rax],al
     a22:	05 e9 01 c1 17       	add    eax,0x17c101e9
     a27:	00 00                	add    BYTE PTR [rax],al
     a29:	05 ef 01 63 09       	add    eax,0x96301ef
     a2e:	00 00                	add    BYTE PTR [rax],al
     a30:	05 84 02 17 1d       	add    eax,0x1d170284
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	06                   	(bad)  
     a38:	86 02                	xchg   BYTE PTR [rdx],al
     a3a:	c8 06 00 00          	enter  0x6,0x0
     a3e:	05 87 02 f0 43       	add    eax,0x43f00287
     a43:	00 00                	add    BYTE PTR [rax],al
     a45:	06                   	(bad)  
     a46:	88 02                	mov    BYTE PTR [rdx],al
     a48:	1d 39 00 00 05       	sbb    eax,0x5000039
     a4d:	89 02                	mov    DWORD PTR [rdx],eax
     a4f:	7b 2a                	jnp    a7b <__FRAME_END__+0x26f>
     a51:	00 00                	add    BYTE PTR [rax],al
     a53:	05 ac 02 8d 2c       	add    eax,0x2c8d02ac
     a58:	00 00                	add    BYTE PTR [rax],al
     a5a:	05 b0 02 54 09       	add    eax,0x95402b0
     a5f:	00 00                	add    BYTE PTR [rax],al
     a61:	05 b4 02 e9 28       	add    eax,0x28e902b4
     a66:	00 00                	add    BYTE PTR [rax],al
     a68:	05 b8 02 17 08       	add    eax,0x81702b8
     a6d:	00 00                	add    BYTE PTR [rax],al
     a6f:	05 bc 02 75 17       	add    eax,0x177502bc
     a74:	00 00                	add    BYTE PTR [rax],al
     a76:	06                   	(bad)  
     a77:	bd 02 28 18 00       	mov    ebp,0x182802
     a7c:	00 05 be 02 63 09    	add    BYTE PTR [rip+0x96302be],al        # 9630d40 <_end+0x942fd28>
     a82:	00 00                	add    BYTE PTR [rax],al
     a84:	06                   	(bad)  
     a85:	bf 02 6b 18 00       	mov    edi,0x186b02
     a8a:	00 05 c0 02 c1 17    	add    BYTE PTR [rip+0x17c102c0],al        # 17c10d50 <_end+0x17a0fd38>
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	05 c4 02 6e 3a       	add    eax,0x3a6e02c4
     a97:	00 00                	add    BYTE PTR [rax],al
     a99:	06                   	(bad)  
     a9a:	c5 02 37             	(bad)  
     a9d:	0d 00 00 05 c6       	or     eax,0xc6050000
     aa2:	02 8d 0e 00 00 05    	add    cl,BYTE PTR [rbp+0x500000e]
     aa8:	f0 02 33             	lock add dh,BYTE PTR [rbx]
     aab:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     aae:	05 f4 02 97 07       	add    eax,0x79702f4
     ab3:	00 00                	add    BYTE PTR [rax],al
     ab5:	05 83 03 21 0d       	add    eax,0xd210383
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	05 8b 03 15 19       	add    eax,0x1915038b
     ac1:	00 00                	add    BYTE PTR [rax],al
     ac3:	06                   	(bad)  
     ac4:	9a                   	(bad)  
     ac5:	03 f3                	add    esi,ebx
     ac7:	07                   	(bad)  
     ac8:	00 00                	add    BYTE PTR [rax],al
     aca:	05 9b 03 2b 29       	add    eax,0x292b039b
     acf:	00 00                	add    BYTE PTR [rax],al
     ad1:	05 9f 03 cd 3c       	add    eax,0x3ccd039f
     ad6:	00 00                	add    BYTE PTR [rax],al
     ad8:	05 a0 03 bd 2f       	add    eax,0x2fbd03a0
     add:	00 00                	add    BYTE PTR [rax],al
     adf:	05 a2 03 11 06       	add    eax,0x61103a2
     ae4:	00 00                	add    BYTE PTR [rax],al
     ae6:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     ae9:	00 05 13 ef 03 00    	add    BYTE PTR [rip+0x3ef13],al        # 3fa02 <__FRAME_END__+0x3f1f6>
     aef:	00 02                	add    BYTE PTR [rdx],al
     af1:	22 5f 5f             	and    bl,BYTE PTR [rdi+0x5f]
     af4:	50                   	push   rax
     af5:	00 06                	add    BYTE PTR [rsi],al
     af7:	23 8d 27 00 00 05    	and    ecx,DWORD PTR [rbp+0x5000027]
     afd:	2a 50 30             	sub    dl,BYTE PTR [rax+0x30]
     b00:	00 00                	add    BYTE PTR [rax],al
     b02:	05 2b 10 42 00       	add    eax,0x42102b
     b07:	00 05 37 2d 39 00    	add    BYTE PTR [rip+0x392d37],al        # 393844 <_end+0x19282c>
     b0d:	00 05 38 ab 4b 00    	add    BYTE PTR [rip+0x4bab38],al        # 4bb64b <_end+0x2ba633>
     b13:	00 05 39 8b 0d 00    	add    BYTE PTR [rip+0xd8b39],al        # d9652 <__FRAME_END__+0xd8e46>
     b19:	00 05 3a 5a 08 00    	add    BYTE PTR [rip+0x85a3a],al        # 86559 <__FRAME_END__+0x85d4d>
     b1f:	00 05 59 6a 14 00    	add    BYTE PTR [rip+0x146a59],al        # 14757e <__FRAME_END__+0x146d72>
     b25:	00 05 5e 74 3c 00    	add    BYTE PTR [rip+0x3c745e],al        # 3c7f89 <_end+0x1c6f71>
     b2b:	00 05 5f 8d 14 00    	add    BYTE PTR [rip+0x148d5f],al        # 149890 <__FRAME_END__+0x149084>
     b31:	00 05 64 1b 31 00    	add    BYTE PTR [rip+0x311b64],al        # 31269b <_end+0x111683>
     b37:	00 05 65 13 33 00    	add    BYTE PTR [rip+0x331365],al        # 331ea2 <_end+0x130e8a>
     b3d:	00 05 68 47 0a 00    	add    BYTE PTR [rip+0xa4768],al        # a52ab <__FRAME_END__+0xa4a9f>
     b43:	00 05 70 96 19 00    	add    BYTE PTR [rip+0x199670],al        # 19a1b9 <__FRAME_END__+0x1999ad>
     b49:	00 05 71 14 46 00    	add    BYTE PTR [rip+0x461471],al        # 461fc0 <_end+0x260fa8>
     b4f:	00 05 76 5e 2f 00    	add    BYTE PTR [rip+0x2f5e76],al        # 2f69cb <_end+0xf59b3>
     b55:	00 05 77 ed 2b 00    	add    BYTE PTR [rip+0x2bed77],al        # 2bf8d2 <_end+0xbe8ba>
     b5b:	00 05 7a aa 32 00    	add    BYTE PTR [rip+0x32aa7a],al        # 32b5db <_end+0x12a5c3>
     b61:	00 05 7c c3 3b 00    	add    BYTE PTR [rip+0x3bc37c],al        # 3bcee3 <_end+0x1bbecb>
     b67:	00 05 7d 73 48 00    	add    BYTE PTR [rip+0x48737d],al        # 487eea <_end+0x286ed2>
     b6d:	00 05 8a 01 6e 02    	add    BYTE PTR [rip+0x26e018a],al        # 26e0cfd <_end+0x24dfce5>
     b73:	00 00                	add    BYTE PTR [rax],al
     b75:	05 8b 01 48 29       	add    eax,0x2948018b
     b7a:	00 00                	add    BYTE PTR [rax],al
     b7c:	05 a9 01 76 20       	add    eax,0x207601a9
     b81:	00 00                	add    BYTE PTR [rax],al
     b83:	05 b0 01 64 38       	add    eax,0x386401b0
     b88:	00 00                	add    BYTE PTR [rax],al
     b8a:	05 b2 01 a7 13       	add    eax,0x13a701b2
     b8f:	00 00                	add    BYTE PTR [rax],al
     b91:	05 b5 01 f5 49       	add    eax,0x49f501b5
     b96:	00 00                	add    BYTE PTR [rax],al
     b98:	05 b6 01 b4 3e       	add    eax,0x3eb401b6
     b9d:	00 00                	add    BYTE PTR [rax],al
     b9f:	05 cb 01 b2 37       	add    eax,0x37b201cb
     ba4:	00 00                	add    BYTE PTR [rax],al
     ba6:	05 d3 01 f3 3f       	add    eax,0x3ff301d3
     bab:	00 00                	add    BYTE PTR [rax],al
     bad:	05 dd 01 fc 39       	add    eax,0x39fc01dd
     bb2:	00 00                	add    BYTE PTR [rax],al
     bb4:	05 e4 01 3d 05       	add    eax,0x53d01e4
     bb9:	00 00                	add    BYTE PTR [rax],al
     bbb:	05 ed 01 05 12       	add    eax,0x120501ed
     bc0:	00 00                	add    BYTE PTR [rax],al
     bc2:	05 ee 01 d5 22       	add    eax,0x22d501ee
     bc7:	00 00                	add    BYTE PTR [rax],al
     bc9:	05 f6 01 37 2d       	add    eax,0x2d3701f6
     bce:	00 00                	add    BYTE PTR [rax],al
     bd0:	05 80 02 30 31       	add    eax,0x31300280
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	05 8d 02 21 2c       	add    eax,0x2c21028d
     bdc:	00 00                	add    BYTE PTR [rax],al
     bde:	05 97 02 cf 40       	add    eax,0x40cf0297
     be3:	00 00                	add    BYTE PTR [rax],al
     be5:	05 a0 02 a6 07       	add    eax,0x7a602a0
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	05 a8 02 b6 45       	add    eax,0x45b602a8
     bf1:	00 00                	add    BYTE PTR [rax],al
     bf3:	05 b1 02 e8 14       	add    eax,0x14e802b1
     bf8:	00 00                	add    BYTE PTR [rax],al
     bfa:	06                   	(bad)  
     bfb:	b9 02 6a 3e 00       	mov    ecx,0x3e6a02
     c00:	00 05 ba 02 23 22    	add    BYTE PTR [rip+0x222302ba],al        # 22230ec0 <_end+0x2202fea8>
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	05 c3 02 33 12       	add    eax,0x123302c3
     c0d:	00 00                	add    BYTE PTR [rax],al
     c0f:	05 d5 02 53 0f       	add    eax,0xf5302d5
     c14:	00 00                	add    BYTE PTR [rax],al
     c16:	05 d6 02 3b 0c       	add    eax,0xc3b02d6
     c1b:	00 00                	add    BYTE PTR [rax],al
     c1d:	05 df 02 86 30       	add    eax,0x308602df
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	05 e5 02 aa 1d       	add    eax,0x1daa02e5
     c29:	00 00                	add    BYTE PTR [rax],al
     c2b:	05 e6 02 fd 04       	add    eax,0x4fd02e6
     c30:	00 00                	add    BYTE PTR [rax],al
     c32:	05 fa 02 8d 40       	add    eax,0x408d02fa
     c37:	00 00                	add    BYTE PTR [rax],al
     c39:	05 89 03 3c 04       	add    eax,0x43c0389
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	05 8a 03 cc 2e       	add    eax,0x2ecc038a
     c45:	00 00                	add    BYTE PTR [rax],al
     c47:	05 a0 03 00 37       	add    eax,0x370003a0
     c4c:	00 00                	add    BYTE PTR [rax],al
     c4e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     c51:	00 05 04 54 4a 00    	add    BYTE PTR [rip+0x4a5404],al        # 4a605b <_end+0x2a5043>
     c57:	00 05 0c f3 4a 00    	add    BYTE PTR [rip+0x4af30c],al        # 4aff69 <_end+0x2aef51>
     c5d:	00 05 0e a2 24 00    	add    BYTE PTR [rip+0x24a20e],al        # 24ae71 <_end+0x49e59>
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	04 00                	add    al,0x0
     c67:	00 05 c2 03 87 37    	add    BYTE PTR [rip+0x378703c2],al        # 3787102f <_end+0x37670017>
     c6d:	00 00                	add    BYTE PTR [rax],al
     c6f:	05 c3 03 df 05       	add    eax,0x5df03c3
     c74:	00 00                	add    BYTE PTR [rax],al
     c76:	05 c4 03 c2 21       	add    eax,0x21c203c4
     c7b:	00 00                	add    BYTE PTR [rax],al
     c7d:	05 c5 03 01 38       	add    eax,0x380103c5
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	05 c6 03 c4 0b       	add    eax,0xbc403c6
     c89:	00 00                	add    BYTE PTR [rax],al
     c8b:	05 c8 03 28 3e       	add    eax,0x3e2803c8
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	05 c9 03 5d 13       	add    eax,0x135d03c9
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	05 d4 03 2d 3d       	add    eax,0x3d2d03d4
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	05 d5 03 cc 0d       	add    eax,0xdcc03d5
     ca5:	00 00                	add    BYTE PTR [rax],al
     ca7:	05 e7 03 08 17       	add    eax,0x170803e7
     cac:	00 00                	add    BYTE PTR [rax],al
     cae:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     cb1:	00 05 0a 40 3c 00    	add    BYTE PTR [rip+0x3c400a],al        # 3c4cc1 <_end+0x1c3ca9>
     cb7:	00 05 0b 2b 08 00    	add    BYTE PTR [rip+0x82b0b],al        # 837c8 <__FRAME_END__+0x82fbc>
     cbd:	00 05 0c 58 15 00    	add    BYTE PTR [rip+0x15580c],al        # 1564cf <__FRAME_END__+0x155cc3>
     cc3:	00 05 0d 3f 30 00    	add    BYTE PTR [rip+0x303f0d],al        # 304bd6 <_end+0x103bbe>
     cc9:	00 05 0e 8d 1a 00    	add    BYTE PTR [rip+0x1a8d0e],al        # 1a99dd <__FRAME_END__+0x1a91d1>
     ccf:	00 05 0f 8c 34 00    	add    BYTE PTR [rip+0x348c0f],al        # 3498e4 <_end+0x1488cc>
     cd5:	00 05 10 d8 15 00    	add    BYTE PTR [rip+0x15d810],al        # 15e4eb <__FRAME_END__+0x15dcdf>
     cdb:	00 05 11 8c 4d 00    	add    BYTE PTR [rip+0x4d8c11],al        # 4d98f2 <_end+0x2d88da>
     ce1:	00 05 12 5e 19 00    	add    BYTE PTR [rip+0x195e12],al        # 196af9 <__FRAME_END__+0x1962ed>
     ce7:	00 05 13 23 48 00    	add    BYTE PTR [rip+0x482313],al        # 483000 <_end+0x281fe8>
     ced:	00 05 14 a1 0f 00    	add    BYTE PTR [rip+0xfa114],al        # fae07 <__FRAME_END__+0xfa5fb>
     cf3:	00 05 15 35 0a 00    	add    BYTE PTR [rip+0xa3515],al        # a420e <__FRAME_END__+0xa3a02>
     cf9:	00 05 16 85 4b 00    	add    BYTE PTR [rip+0x4b8516],al        # 4b9215 <_end+0x2b81fd>
     cff:	00 05 17 f3 16 00    	add    BYTE PTR [rip+0x16f317],al        # 17001c <__FRAME_END__+0x16f810>
     d05:	00 00                	add    BYTE PTR [rax],al
     d07:	04 00                	add    al,0x0
     d09:	00 06                	add    BYTE PTR [rsi],al
     d0b:	25 42 2b 00 00       	and    eax,0x2b42
     d10:	05 2a 9d 12 00       	add    eax,0x129d2a
     d15:	00 06                	add    BYTE PTR [rsi],al
     d17:	2f                   	(bad)  
     d18:	17                   	(bad)  
     d19:	44 00 00             	add    BYTE PTR [rax],r8b
     d1c:	05 33 03 48 00       	add    eax,0x480333
     d21:	00 06                	add    BYTE PTR [rsi],al
     d23:	38 3d 37 00 00 05    	cmp    BYTE PTR [rip+0x5000037],bh        # 5000d60 <_end+0x4dffd48>
     d29:	3c 8d                	cmp    al,0x8d
     d2b:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     d2e:	06                   	(bad)  
     d2f:	41 da 0c 00          	fimul  DWORD PTR [r8+rax*1]
     d33:	00 05 45 98 3a 00    	add    BYTE PTR [rip+0x3a9845],al        # 3aa57e <_end+0x1a9566>
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	04 00                	add    al,0x0
     d3d:	00 05 1f 4f 2f 00    	add    BYTE PTR [rip+0x2f4f1f],al        # 2f5c62 <_end+0xf4c4a>
     d43:	00 05 20 68 06 00    	add    BYTE PTR [rip+0x66820],al        # 67569 <__FRAME_END__+0x66d5d>
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	04 00                	add    al,0x0
     d4d:	00 05 bb 01 ab 26    	add    BYTE PTR [rip+0x26ab01bb],al        # 26ab0f0e <_end+0x268afef6>
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	05 bc 01 49 21       	add    eax,0x214901bc
     d5a:	00 00                	add    BYTE PTR [rax],al
     d5c:	05 bd 01 98 0f       	add    eax,0xf9801bd
     d61:	00 00                	add    BYTE PTR [rax],al
     d63:	05 be 01 a3 16       	add    eax,0x16a301be
     d68:	00 00                	add    BYTE PTR [rax],al
     d6a:	05 bf 01 03 0f       	add    eax,0xf0301bf
     d6f:	00 00                	add    BYTE PTR [rax],al
     d71:	05 c0 01 33 0e       	add    eax,0xe3301c0
     d76:	00 00                	add    BYTE PTR [rax],al
     d78:	05 c1 01 28 21       	add    eax,0x212801c1
     d7d:	00 00                	add    BYTE PTR [rax],al
     d7f:	05 c2 01 26 10       	add    eax,0x102601c2
     d84:	00 00                	add    BYTE PTR [rax],al
     d86:	05 c3 01 22 10       	add    eax,0x102201c3
     d8b:	00 00                	add    BYTE PTR [rax],al
     d8d:	05 c4 01 9c 11       	add    eax,0x119c01c4
     d92:	00 00                	add    BYTE PTR [rax],al
     d94:	05 c5 01 44 00       	add    eax,0x4401c5
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	05 c6 01 98 11       	add    eax,0x119801c6
     da0:	00 00                	add    BYTE PTR [rax],al
     da2:	05 c7 01 04 09       	add    eax,0x90401c7
     da7:	00 00                	add    BYTE PTR [rax],al
     da9:	05 c8 01 bb 2e       	add    eax,0x2ebb01c8
     dae:	00 00                	add    BYTE PTR [rax],al
     db0:	05 c9 01 94 0f       	add    eax,0xf9401c9
     db5:	00 00                	add    BYTE PTR [rax],al
     db7:	05 ca 01 b4 47       	add    eax,0x47b401ca
     dbc:	00 00                	add    BYTE PTR [rax],al
     dbe:	05 d2 01 08 0a       	add    eax,0xa0801d2
     dc3:	00 00                	add    BYTE PTR [rax],al
     dc5:	06                   	(bad)  
     dc6:	ee                   	out    dx,al
     dc7:	01 49 2e             	add    DWORD PTR [rcx+0x2e],ecx
     dca:	00 00                	add    BYTE PTR [rax],al
     dcc:	06                   	(bad)  
     dcd:	91                   	xchg   ecx,eax
     dce:	03 58 13             	add    ebx,DWORD PTR [rax+0x13]
     dd1:	00 00                	add    BYTE PTR [rax],al
     dd3:	05 96 03 01 1d       	add    eax,0x1d010396
     dd8:	00 00                	add    BYTE PTR [rax],al
     dda:	06                   	(bad)  
     ddb:	9c                   	pushf  
     ddc:	03 51 13             	add    edx,DWORD PTR [rcx+0x13]
     ddf:	00 00                	add    BYTE PTR [rax],al
     de1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     de4:	00 05 62 82 24 00    	add    BYTE PTR [rip+0x248262],al        # 24904c <_end+0x48034>
     dea:	00 05 63 48 26 00    	add    BYTE PTR [rip+0x264863],al        # 265653 <_end+0x6463b>
     df0:	00 05 64 56 0a 00    	add    BYTE PTR [rip+0xa5664],al        # a645a <__FRAME_END__+0xa5c4e>
     df6:	00 05 65 f9 17 00    	add    BYTE PTR [rip+0x17f965],al        # 180761 <__FRAME_END__+0x17ff55>
     dfc:	00 05 66 59 25 00    	add    BYTE PTR [rip+0x255966],al        # 256768 <_end+0x55750>
     e02:	00 05 67 6f 44 00    	add    BYTE PTR [rip+0x446f67],al        # 447d6f <_end+0x246d57>
     e08:	00 05 75 cc 3f 00    	add    BYTE PTR [rip+0x3fcc75],al        # 3fda83 <_end+0x1fca6b>
     e0e:	00 05 76 93 27 00    	add    BYTE PTR [rip+0x279376],al        # 27a18a <_end+0x79172>
     e14:	00 05 77 55 34 00    	add    BYTE PTR [rip+0x345577],al        # 346391 <_end+0x145379>
     e1a:	00 05 78 9e 2f 00    	add    BYTE PTR [rip+0x2f9e78],al        # 2fac98 <_end+0xf9c80>
     e20:	00 05 79 73 29 00    	add    BYTE PTR [rip+0x297379],al        # 29819f <_end+0x97187>
     e26:	00 05 7a 57 1c 00    	add    BYTE PTR [rip+0x1c577a],al        # 1c65a6 <__FRAME_END__+0x1c5d9a>
     e2c:	00 05 7b e8 39 00    	add    BYTE PTR [rip+0x39e87b],al        # 39f6ad <_end+0x19e695>
     e32:	00 05 7c 9a 41 00    	add    BYTE PTR [rip+0x419a7c],al        # 41a8b4 <_end+0x21989c>
     e38:	00 05 7e df 23 00    	add    BYTE PTR [rip+0x23df7e],al        # 23edbc <_end+0x3dda4>
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	04 00                	add    al,0x0
     e42:	00 05 18 e5 15 00    	add    BYTE PTR [rip+0x15e518],al        # 15f360 <__FRAME_END__+0x15eb54>
     e48:	00 05 22 6a 42 00    	add    BYTE PTR [rip+0x426a22],al        # 427870 <_end+0x226858>
     e4e:	00 05 23 e5 00 00    	add    BYTE PTR [rip+0xe523],al        # f377 <__FRAME_END__+0xeb6b>
     e54:	00 05 26 65 49 00    	add    BYTE PTR [rip+0x496526],al        # 497380 <_end+0x296368>
     e5a:	00 05 27 57 44 00    	add    BYTE PTR [rip+0x445727],al        # 446587 <_end+0x24556f>
     e60:	00 05 28 9e 14 00    	add    BYTE PTR [rip+0x149e28],al        # 14ac8e <__FRAME_END__+0x14a482>
     e66:	00 05 29 44 36 00    	add    BYTE PTR [rip+0x364429],al        # 365295 <_end+0x16427d>
     e6c:	00 05 2a 0f 29 00    	add    BYTE PTR [rip+0x290f2a],al        # 291d9c <_end+0x90d84>
     e72:	00 05 2b f2 23 00    	add    BYTE PTR [rip+0x23f22b],al        # 2400a3 <_end+0x3f08b>
     e78:	00 05 2d ea 2f 00    	add    BYTE PTR [rip+0x2fea2d],al        # 2ff8ab <_end+0xfe893>
     e7e:	00 05 2e 34 25 00    	add    BYTE PTR [rip+0x25342e],al        # 2542b2 <_end+0x5329a>
     e84:	00 05 33 ee 34 00    	add    BYTE PTR [rip+0x34ee33],al        # 34fcbd <_end+0x14eca5>
     e8a:	00 05 34 2b 49 00    	add    BYTE PTR [rip+0x492b34],al        # 4939c4 <_end+0x2929ac>
     e90:	00 05 35 40 15 00    	add    BYTE PTR [rip+0x154035],al        # 154ecb <__FRAME_END__+0x1546bf>
     e96:	00 05 36 bc 05 00    	add    BYTE PTR [rip+0x5bc36],al        # 5cad2 <__FRAME_END__+0x5c2c6>
     e9c:	00 05 37 23 17 00    	add    BYTE PTR [rip+0x172337],al        # 1731d9 <__FRAME_END__+0x1729cd>
     ea2:	00 05 38 bc 16 00    	add    BYTE PTR [rip+0x16bc38],al        # 16cae0 <__FRAME_END__+0x16c2d4>
     ea8:	00 05 39 0f 2b 00    	add    BYTE PTR [rip+0x2b0f39],al        # 2b1de7 <_end+0xb0dcf>
     eae:	00 05 3a ed 1f 00    	add    BYTE PTR [rip+0x1fed3a],al        # 1ffbee <__FRAME_END__+0x1ff3e2>
     eb4:	00 05 3b bb 20 00    	add    BYTE PTR [rip+0x20bb3b],al        # 20c9f5 <_end+0xb9dd>
     eba:	00 05 3c 88 3b 00    	add    BYTE PTR [rip+0x3b883c],al        # 3b96fc <_end+0x1b86e4>
     ec0:	00 05 3d 97 36 00    	add    BYTE PTR [rip+0x36973d],al        # 36a603 <_end+0x1695eb>
     ec6:	00 05 3e 32 21 00    	add    BYTE PTR [rip+0x21323e],al        # 21410a <_end+0x130f2>
     ecc:	00 05 3f b7 3d 00    	add    BYTE PTR [rip+0x3db73f],al        # 3dc611 <_end+0x1db5f9>
     ed2:	00 05 40 83 3c 00    	add    BYTE PTR [rip+0x3c8340],al        # 3c9218 <_end+0x1c8200>
     ed8:	00 05 41 f9 15 00    	add    BYTE PTR [rip+0x15f941],al        # 16081f <__FRAME_END__+0x160013>
     ede:	00 05 42 28 1a 00    	add    BYTE PTR [rip+0x1a2842],al        # 1a3726 <__FRAME_END__+0x1a2f1a>
     ee4:	00 05 43 e7 1d 00    	add    BYTE PTR [rip+0x1de743],al        # 1df62d <__FRAME_END__+0x1dee21>
     eea:	00 05 44 6b 21 00    	add    BYTE PTR [rip+0x216b44],al        # 217a34 <_end+0x16a1c>
     ef0:	00 05 45 4a 46 00    	add    BYTE PTR [rip+0x464a45],al        # 46593b <_end+0x264923>
     ef6:	00 05 46 e1 41 00    	add    BYTE PTR [rip+0x41e146],al        # 41f042 <_end+0x21e02a>
     efc:	00 05 47 83 0b 00    	add    BYTE PTR [rip+0xb8347],al        # b9249 <__FRAME_END__+0xb8a3d>
     f02:	00 05 48 c9 0e 00    	add    BYTE PTR [rip+0xec948],al        # ed850 <__FRAME_END__+0xed044>
     f08:	00 05 49 cc 39 00    	add    BYTE PTR [rip+0x39cc49],al        # 39db57 <_end+0x19cb3f>
     f0e:	00 05 4a 7f 49 00    	add    BYTE PTR [rip+0x497f4a],al        # 498e5e <_end+0x297e46>
     f14:	00 05 50 92 01 00    	add    BYTE PTR [rip+0x19250],al        # 1a16a <__FRAME_END__+0x1995e>
     f1a:	00 05 53 9b 2c 00    	add    BYTE PTR [rip+0x2c9b53],al        # 2caa73 <_end+0xc9a5b>
     f20:	00 05 56 f7 1a 00    	add    BYTE PTR [rip+0x1af756],al        # 1b067c <__FRAME_END__+0x1afe70>
     f26:	00 05 5c 16 09 00    	add    BYTE PTR [rip+0x9165c],al        # 92588 <__FRAME_END__+0x91d7c>
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	04 00                	add    al,0x0
     f30:	00 05 05 5e 35 00    	add    BYTE PTR [rip+0x355e05],al        # 356d3b <_end+0x155d23>
     f36:	00 05 0e 4f 2f 00    	add    BYTE PTR [rip+0x2f4f0e],al        # 2f5e4a <_end+0xf4e32>
     f3c:	00 05 12 68 06 00    	add    BYTE PTR [rip+0x66812],al        # 67754 <__FRAME_END__+0x66f48>
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	04 00                	add    al,0x0
     f46:	00 06                	add    BYTE PTR [rsi],al
     f48:	ee                   	out    dx,al
     f49:	01 49 2e             	add    DWORD PTR [rcx+0x2e],ecx
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	06                   	(bad)  
     f4f:	91                   	xchg   ecx,eax
     f50:	03 58 13             	add    ebx,DWORD PTR [rax+0x13]
     f53:	00 00                	add    BYTE PTR [rax],al
     f55:	05 96 03 01 1d       	add    eax,0x1d010396
     f5a:	00 00                	add    BYTE PTR [rax],al
     f5c:	06                   	(bad)  
     f5d:	9c                   	pushf  
     f5e:	03 51 13             	add    edx,DWORD PTR [rcx+0x13]
     f61:	00 00                	add    BYTE PTR [rax],al
     f63:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     f66:	00 05 33 85 09 00    	add    BYTE PTR [rip+0x98533],al        # 9949f <__FRAME_END__+0x98c93>
     f6c:	00 05 35 2e 05 00    	add    BYTE PTR [rip+0x52e35],al        # 53da7 <__FRAME_END__+0x5359b>
     f72:	00 05 36 e1 2d 00    	add    BYTE PTR [rip+0x2de136],al        # 2df0ae <_end+0xde096>
     f78:	00 05 38 95 18 00    	add    BYTE PTR [rip+0x189538],al        # 18a4b6 <__FRAME_END__+0x189caa>
     f7e:	00 05 3b 3d 02 00    	add    BYTE PTR [rip+0x23d3b],al        # 24cbf <__FRAME_END__+0x244b3>
     f84:	00 05 3d 78 37 00    	add    BYTE PTR [rip+0x37783d],al        # 3787c7 <_end+0x1777af>
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	04 00                	add    al,0x0
     f8e:	00 05 25 ba 40 00    	add    BYTE PTR [rip+0x40ba25],al        # 40c9b9 <_end+0x20b9a1>
     f94:	00 05 26 92 4b 00    	add    BYTE PTR [rip+0x4b9226],al        # 4ba1c0 <_end+0x2b91a8>
     f9a:	00 05 27 fd 28 00    	add    BYTE PTR [rip+0x28fd27],al        # 290cc7 <_end+0x8fcaf>
     fa0:	00 05 28 ee 3d 00    	add    BYTE PTR [rip+0x3dee28],al        # 3dfdce <_end+0x1dedb6>
     fa6:	00 05 29 7a 10 00    	add    BYTE PTR [rip+0x107a29],al        # 1089d5 <__FRAME_END__+0x1081c9>
     fac:	00 05 2a c4 0c 00    	add    BYTE PTR [rip+0xcc42a],al        # cd3dc <__FRAME_END__+0xccbd0>
     fb2:	00 05 2b 1b 3d 00    	add    BYTE PTR [rip+0x3d1b2b],al        # 3d2ae3 <_end+0x1d1acb>
     fb8:	00 05 2c 16 1f 00    	add    BYTE PTR [rip+0x1f162c],al        # 1f25ea <__FRAME_END__+0x1f1dde>
     fbe:	00 05 2d 3f 3a 00    	add    BYTE PTR [rip+0x3a3f2d],al        # 3a4ef1 <_end+0x1a3ed9>
     fc4:	00 05 2e 99 1f 00    	add    BYTE PTR [rip+0x1f992e],al        # 1fa8f8 <__FRAME_END__+0x1fa0ec>
     fca:	00 05 2f 73 3b 00    	add    BYTE PTR [rip+0x3b732f],al        # 3b82ff <_end+0x1b72e7>
     fd0:	00 05 30 1c 3b 00    	add    BYTE PTR [rip+0x3b1c30],al        # 3b2c06 <_end+0x1b1bee>
     fd6:	00 05 31 3c 40 00    	add    BYTE PTR [rip+0x403c31],al        # 404c0d <_end+0x203bf5>
     fdc:	00 05 34 a2 3e 00    	add    BYTE PTR [rip+0x3ea234],al        # 3eb216 <_end+0x1ea1fe>
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	04 00                	add    al,0x0
     fe6:	00 06                	add    BYTE PTR [rsi],al
     fe8:	22 80 2e 00 00 05    	and    al,BYTE PTR [rax+0x500002e]
     fee:	27                   	(bad)  
     fef:	54                   	push   rsp
     ff0:	23 00                	and    eax,DWORD PTR [rax]
     ff2:	00 00                	add    BYTE PTR [rax],al
     ff4:	04 00                	add    al,0x0
     ff6:	00 06                	add    BYTE PTR [rsi],al
     ff8:	37                   	(bad)  
     ff9:	bd 41 00 00 05       	mov    ebp,0x5000041
     ffe:	38 5d 37             	cmp    BYTE PTR [rbp+0x37],bl
    1001:	00 00                	add    BYTE PTR [rax],al
    1003:	05 3f 2a 32 00       	add    eax,0x322a3f
    1008:	00 05 42 66 26 00    	add    BYTE PTR [rip+0x266642],al        # 267650 <_end+0x66638>
    100e:	00 05 51 19 27 00    	add    BYTE PTR [rip+0x271951],al        # 272965 <_end+0x7194d>
    1014:	00 05 52 ac 33 00    	add    BYTE PTR [rip+0x33ac52],al        # 33bc6c <_end+0x13ac54>
    101a:	00 05 53 bf 0d 00    	add    BYTE PTR [rip+0xdbf53],al        # dcf73 <__FRAME_END__+0xdc767>
    1020:	00 05 54 40 45 00    	add    BYTE PTR [rip+0x454054],al        # 45507a <_end+0x254062>
    1026:	00 05 55 9c 17 00    	add    BYTE PTR [rip+0x179c55],al        # 17ac81 <__FRAME_END__+0x17a475>
    102c:	00 05 56 ca 1b 00    	add    BYTE PTR [rip+0x1bca56],al        # 1bda88 <__FRAME_END__+0x1bd27c>
    1032:	00 05 57 cc 28 00    	add    BYTE PTR [rip+0x28cc57],al        # 28dc8f <_end+0x8cc77>
    1038:	00 05 58 b6 02 00    	add    BYTE PTR [rip+0x2b658],al        # 2c696 <__FRAME_END__+0x2be8a>
    103e:	00 05 60 76 22 00    	add    BYTE PTR [rip+0x227660],al        # 2286a4 <_end+0x2768c>
    1044:	00 05 61 ae 1b 00    	add    BYTE PTR [rip+0x1bae61],al        # 1bbeab <__FRAME_END__+0x1bb69f>
    104a:	00 05 62 19 37 00    	add    BYTE PTR [rip+0x371962],al        # 3729b2 <_end+0x17199a>
    1050:	00 05 63 e0 03 00    	add    BYTE PTR [rip+0x3e063],al        # 3f0b9 <__FRAME_END__+0x3e8ad>
    1056:	00 05 64 97 3d 00    	add    BYTE PTR [rip+0x3d9764],al        # 3da7c0 <_end+0x1d97a8>
    105c:	00 05 65 7e 47 00    	add    BYTE PTR [rip+0x477e65],al        # 478ec7 <_end+0x277eaf>
    1062:	00 05 66 89 05 00    	add    BYTE PTR [rip+0x58966],al        # 599ce <__FRAME_END__+0x591c2>
    1068:	00 05 67 22 03 00    	add    BYTE PTR [rip+0x32267],al        # 332d5 <__FRAME_END__+0x32ac9>
    106e:	00 05 68 f3 11 00    	add    BYTE PTR [rip+0x11f368],al        # 1203dc <__FRAME_END__+0x11fbd0>
    1074:	00 05 69 37 1b 00    	add    BYTE PTR [rip+0x1b3769],al        # 1b47e3 <__FRAME_END__+0x1b3fd7>
    107a:	00 05 6a 66 20 00    	add    BYTE PTR [rip+0x20666a],al        # 2076ea <_end+0x66d2>
    1080:	00 05 6b fa 2c 00    	add    BYTE PTR [rip+0x2cfa6b],al        # 2d0af1 <_end+0xcfad9>
    1086:	00 05 6c 75 07 00    	add    BYTE PTR [rip+0x7756c],al        # 785f8 <__FRAME_END__+0x77dec>
    108c:	00 05 6d b3 18 00    	add    BYTE PTR [rip+0x18b36d],al        # 18c3ff <__FRAME_END__+0x18bbf3>
    1092:	00 05 6e 2d 4d 00    	add    BYTE PTR [rip+0x4d2d6e],al        # 4d3e06 <_end+0x2d2dee>
    1098:	00 05 6f 82 28 00    	add    BYTE PTR [rip+0x28826f],al        # 28930d <_end+0x882f5>
    109e:	00 05 70 55 00 00    	add    BYTE PTR [rip+0x5570],al        # 6614 <__FRAME_END__+0x5e08>
    10a4:	00 05 71 af 3b 00    	add    BYTE PTR [rip+0x3baf71],al        # 3bc01b <_end+0x1bb003>
    10aa:	00 05 72 fb 31 00    	add    BYTE PTR [rip+0x31fb72],al        # 320c22 <_end+0x11fc0a>
    10b0:	00 05 74 d4 29 00    	add    BYTE PTR [rip+0x29d474],al        # 29e52a <_end+0x9d512>
    10b6:	00 05 75 0c 22 00    	add    BYTE PTR [rip+0x220c75],al        # 221d31 <_end+0x20d19>
    10bc:	00 05 79 78 1e 00    	add    BYTE PTR [rip+0x1e7879],al        # 1e893b <__FRAME_END__+0x1e812f>
    10c2:	00 05 82 01 b2 1c    	add    BYTE PTR [rip+0x1cb20182],al        # 1cb2124a <_end+0x1c920232>
    10c8:	00 00                	add    BYTE PTR [rax],al
    10ca:	05 83 01 7a 30       	add    eax,0x307a0183
    10cf:	00 00                	add    BYTE PTR [rax],al
    10d1:	05 84 01 d3 03       	add    eax,0x3d30184
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	05 85 01 aa 2e       	add    eax,0x2eaa0185
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	05 86 01 00 00       	add    eax,0x186
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	05 87 01 6d 1f       	add    eax,0x1f6d0187
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	05 88 01 33 19       	add    eax,0x19330188
    10f2:	00 00                	add    BYTE PTR [rax],al
    10f4:	05 89 01 e1 16       	add    eax,0x16e10189
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	05 8a 01 4d 0b       	add    eax,0xb4d018a
    1100:	00 00                	add    BYTE PTR [rax],al
    1102:	05 8b 01 40 38       	add    eax,0x3840018b
    1107:	00 00                	add    BYTE PTR [rax],al
    1109:	05 8c 01 4e 33       	add    eax,0x334e018c
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	05 8d 01 e5 3e       	add    eax,0x3ee5018d
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	05 8e 01 3a 41       	add    eax,0x413a018e
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	05 8f 01 db 34       	add    eax,0x34db018f
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	05 90 01 54 49       	add    eax,0x49540190
    112a:	00 00                	add    BYTE PTR [rax],al
    112c:	05 91 01 00 44       	add    eax,0x44000191
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	05 92 01 89 08       	add    eax,0x8890192
    1138:	00 00                	add    BYTE PTR [rax],al
    113a:	05 f7 01 d4 26       	add    eax,0x26d401f7
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	05 94 02 9f 1b       	add    eax,0x1b9f0294
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	05 c3 02 a5 19       	add    eax,0x19a502c3
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	05 c4 02 d9 3c       	add    eax,0x3cd902c4
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	05 c5 02 7f 1d       	add    eax,0x1d7f02c5
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	05 8f 03 c5 49       	add    eax,0x49c5038f
    1162:	00 00                	add    BYTE PTR [rax],al
    1164:	05 94 03 a5 35       	add    eax,0x35a50394
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	05 97 03 fa 3e       	add    eax,0x3efa0397
    1170:	00 00                	add    BYTE PTR [rax],al
    1172:	05 9b 03 3c 43       	add    eax,0x433c039b
    1177:	00 00                	add    BYTE PTR [rax],al
    1179:	05 ae 03 30 1d       	add    eax,0x1d3003ae
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	05 af 03 12 0f       	add    eax,0xf1203af
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	05 b9 03 ae 31       	add    eax,0x31ae03b9
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	05 c0 03 16 16       	add    eax,0x161603c0
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	05 c1 03 0e 2d       	add    eax,0x2d0e03c1
    119a:	00 00                	add    BYTE PTR [rax],al
    119c:	05 c2 03 55 21       	add    eax,0x215503c2
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	05 c3 03 6d 12       	add    eax,0x126d03c3
    11a8:	00 00                	add    BYTE PTR [rax],al
    11aa:	05 c5 03 d6 18       	add    eax,0x18d603c5
    11af:	00 00                	add    BYTE PTR [rax],al
    11b1:	05 c8 03 47 2a       	add    eax,0x2a4703c8
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	05 cb 03 52 32       	add    eax,0x325203cb
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    11c2:	00 05 2f 71 39 00    	add    BYTE PTR [rip+0x39712f],al        # 3982f7 <_end+0x1972df>
    11c8:	00 05 3d 60 0b 00    	add    BYTE PTR [rip+0xb603d],al        # b720b <__FRAME_END__+0xb69ff>
    11ce:	00 05 48 f0 0e 00    	add    BYTE PTR [rip+0xef048],al        # f021c <__FRAME_END__+0xefa10>
    11d4:	00 05 57 f5 02 00    	add    BYTE PTR [rip+0x2f557],al        # 30731 <__FRAME_END__+0x2ff25>
    11da:	00 05 58 18 2c 00    	add    BYTE PTR [rip+0x2c1858],al        # 2c2a38 <_end+0xc1a20>
    11e0:	00 05 59 62 18 00    	add    BYTE PTR [rip+0x186259],al        # 18743f <__FRAME_END__+0x186c33>
    11e6:	00 05 5e 7b 0e 00    	add    BYTE PTR [rip+0xe7b5e],al        # e8d4a <__FRAME_END__+0xe853e>
    11ec:	00 05 6b cb 44 00    	add    BYTE PTR [rip+0x44cb6b],al        # 44dd5d <_end+0x24cd45>
    11f2:	00 05 6c 34 03 00    	add    BYTE PTR [rip+0x3346c],al        # 34664 <__FRAME_END__+0x33e58>
    11f8:	00 05 6d 50 1a 00    	add    BYTE PTR [rip+0x1a506d],al        # 1a626b <__FRAME_END__+0x1a5a5f>
    11fe:	00 05 76 54 38 00    	add    BYTE PTR [rip+0x385476],al        # 38667a <_end+0x185662>
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	04 00                	add    al,0x0
    1208:	00 05 13 fc 48 00    	add    BYTE PTR [rip+0x48fc13],al        # 490e21 <_end+0x28fe09>
    120e:	00 05 19 ca 18 00    	add    BYTE PTR [rip+0x18ca19],al        # 18dc2d <__FRAME_END__+0x18d421>
    1214:	00 05 1a 43 32 00    	add    BYTE PTR [rip+0x32431a],al        # 325534 <_end+0x12451c>
    121a:	00 05 1b c3 02 00    	add    BYTE PTR [rip+0x2c31b],al        # 2d53b <__FRAME_END__+0x2cd2f>
    1220:	00 05 1e b5 4a 00    	add    BYTE PTR [rip+0x4ab51e],al        # 4ac744 <_end+0x2ab72c>
    1226:	00 06                	add    BYTE PTR [rsi],al
    1228:	24 59                	and    al,0x59
    122a:	3c 00                	cmp    al,0x0
    122c:	00 05 25 02 39 00    	add    BYTE PTR [rip+0x390225],al        # 391457 <_end+0x19043f>
    1232:	00 00                	add    BYTE PTR [rax],al
    1234:	04 00                	add    al,0x0
    1236:	00 05 8b 01 c9 22    	add    BYTE PTR [rip+0x22c9018b],al        # 22c913c7 <_end+0x22a903af>
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	05 8c 01 c9 41       	add    eax,0x41c9018c
    1243:	00 00                	add    BYTE PTR [rax],al
    1245:	05 8d 01 78 18       	add    eax,0x1878018d
    124a:	00 00                	add    BYTE PTR [rax],al
    124c:	05 e8 03 0b 13       	add    eax,0x130b03e8
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	05 90 04 41 27       	add    eax,0x27410490
    1258:	00 00                	add    BYTE PTR [rax],al
	...
Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=00000000000004f0..000000000000051b
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=00000000000004d0..00000000000004e0
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 00000000000004d6
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 00000000000004e0
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000044 FDE cie=00000030 pc=00000000000004e0..00000000000004e8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 000000000000001c 0000005c FDE cie=00000030 pc=00000000000005fa..0000000000000635
  DW_CFA_advance_loc: 1 to 00000000000005fb
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000000005fe
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 54 to 0000000000000634
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000a8 0000000000000044 0000007c FDE cie=00000030 pc=0000000000000640..00000000000006a5
  DW_CFA_advance_loc: 2 to 0000000000000642
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 2 to 0000000000000644
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 0000000000000649
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 2 to 000000000000064b
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 0000000000000653
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 000000000000065b
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 0000000000000668
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 50 to 000000000000069a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000000069b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000000069c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000000069e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 00000000000006a0
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 00000000000006a2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000000000006a4
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000f0 0000000000000010 000000c4 FDE cie=00000030 pc=00000000000006b0..00000000000006b2
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000104 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    00000000000005fa 000000000000003b 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0x36f (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0xbdd): GNU C11 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fstack-protector-strong
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0x2f21): add_float.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x1116): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/C/Intel_architecture/AMD64/Float_Operations/Add_Float/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x5fa
    <21>   DW_AT_high_pc     : 0x3b
    <29>   DW_AT_stmt_list   : 0x0
    <2d>   DW_AT_GNU_macros  : 0x0
 <1><31>: Abbrev Number: 2 (DW_TAG_typedef)
    <32>   DW_AT_name        : (indirect string, offset: 0x2908): size_t
    <36>   DW_AT_decl_file   : 2
    <37>   DW_AT_decl_line   : 216
    <38>   DW_AT_type        : <0x3c>
 <1><3c>: Abbrev Number: 3 (DW_TAG_base_type)
    <3d>   DW_AT_byte_size   : 8
    <3e>   DW_AT_encoding    : 7	(unsigned)
    <3f>   DW_AT_name        : (indirect string, offset: 0x3998): long unsigned int
 <1><43>: Abbrev Number: 3 (DW_TAG_base_type)
    <44>   DW_AT_byte_size   : 1
    <45>   DW_AT_encoding    : 8	(unsigned char)
    <46>   DW_AT_name        : (indirect string, offset: 0x26c6): unsigned char
 <1><4a>: Abbrev Number: 3 (DW_TAG_base_type)
    <4b>   DW_AT_byte_size   : 2
    <4c>   DW_AT_encoding    : 7	(unsigned)
    <4d>   DW_AT_name        : (indirect string, offset: 0x724): short unsigned int
 <1><51>: Abbrev Number: 3 (DW_TAG_base_type)
    <52>   DW_AT_byte_size   : 4
    <53>   DW_AT_encoding    : 7	(unsigned)
    <54>   DW_AT_name        : (indirect string, offset: 0x1c66): unsigned int
 <1><58>: Abbrev Number: 3 (DW_TAG_base_type)
    <59>   DW_AT_byte_size   : 1
    <5a>   DW_AT_encoding    : 6	(signed char)
    <5b>   DW_AT_name        : (indirect string, offset: 0x4245): signed char
 <1><5f>: Abbrev Number: 3 (DW_TAG_base_type)
    <60>   DW_AT_byte_size   : 2
    <61>   DW_AT_encoding    : 5	(signed)
    <62>   DW_AT_name        : (indirect string, offset: 0x248d): short int
 <1><66>: Abbrev Number: 4 (DW_TAG_base_type)
    <67>   DW_AT_byte_size   : 4
    <68>   DW_AT_encoding    : 5	(signed)
    <69>   DW_AT_name        : int
 <1><6d>: Abbrev Number: 3 (DW_TAG_base_type)
    <6e>   DW_AT_byte_size   : 8
    <6f>   DW_AT_encoding    : 5	(signed)
    <70>   DW_AT_name        : (indirect string, offset: 0x39f3): long int
 <1><74>: Abbrev Number: 2 (DW_TAG_typedef)
    <75>   DW_AT_name        : (indirect string, offset: 0x1084): __off_t
    <79>   DW_AT_decl_file   : 3
    <7a>   DW_AT_decl_line   : 140
    <7b>   DW_AT_type        : <0x6d>
 <1><7f>: Abbrev Number: 2 (DW_TAG_typedef)
    <80>   DW_AT_name        : (indirect string, offset: 0xcd0): __off64_t
    <84>   DW_AT_decl_file   : 3
    <85>   DW_AT_decl_line   : 141
    <86>   DW_AT_type        : <0x6d>
 <1><8a>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <8b>   DW_AT_byte_size   : 8
 <1><8c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <8d>   DW_AT_byte_size   : 8
    <8e>   DW_AT_type        : <0x92>
 <1><92>: Abbrev Number: 3 (DW_TAG_base_type)
    <93>   DW_AT_byte_size   : 1
    <94>   DW_AT_encoding    : 6	(signed char)
    <95>   DW_AT_name        : (indirect string, offset: 0x424c): char
 <1><99>: Abbrev Number: 7 (DW_TAG_const_type)
    <9a>   DW_AT_type        : <0x92>
 <1><9e>: Abbrev Number: 8 (DW_TAG_structure_type)
    <9f>   DW_AT_name        : (indirect string, offset: 0x3d8e): _IO_FILE
    <a3>   DW_AT_byte_size   : 216
    <a4>   DW_AT_decl_file   : 4
    <a5>   DW_AT_decl_line   : 245
    <a6>   DW_AT_sibling     : <0x21e>
 <2><aa>: Abbrev Number: 9 (DW_TAG_member)
    <ab>   DW_AT_name        : (indirect string, offset: 0x26e3): _flags
    <af>   DW_AT_decl_file   : 4
    <b0>   DW_AT_decl_line   : 246
    <b1>   DW_AT_type        : <0x66>
    <b5>   DW_AT_data_member_location: 0
 <2><b6>: Abbrev Number: 9 (DW_TAG_member)
    <b7>   DW_AT_name        : (indirect string, offset: 0x211b): _IO_read_ptr
    <bb>   DW_AT_decl_file   : 4
    <bc>   DW_AT_decl_line   : 251
    <bd>   DW_AT_type        : <0x8c>
    <c1>   DW_AT_data_member_location: 8
 <2><c2>: Abbrev Number: 9 (DW_TAG_member)
    <c3>   DW_AT_name        : (indirect string, offset: 0x3360): _IO_read_end
    <c7>   DW_AT_decl_file   : 4
    <c8>   DW_AT_decl_line   : 252
    <c9>   DW_AT_type        : <0x8c>
    <cd>   DW_AT_data_member_location: 16
 <2><ce>: Abbrev Number: 9 (DW_TAG_member)
    <cf>   DW_AT_name        : (indirect string, offset: 0x196d): _IO_read_base
    <d3>   DW_AT_decl_file   : 4
    <d4>   DW_AT_decl_line   : 253
    <d5>   DW_AT_type        : <0x8c>
    <d9>   DW_AT_data_member_location: 24
 <2><da>: Abbrev Number: 9 (DW_TAG_member)
    <db>   DW_AT_name        : (indirect string, offset: 0x24ff): _IO_write_base
    <df>   DW_AT_decl_file   : 4
    <e0>   DW_AT_decl_line   : 254
    <e1>   DW_AT_type        : <0x8c>
    <e5>   DW_AT_data_member_location: 32
 <2><e6>: Abbrev Number: 9 (DW_TAG_member)
    <e7>   DW_AT_name        : (indirect string, offset: 0x41f7): _IO_write_ptr
    <eb>   DW_AT_decl_file   : 4
    <ec>   DW_AT_decl_line   : 255
    <ed>   DW_AT_type        : <0x8c>
    <f1>   DW_AT_data_member_location: 40
 <2><f2>: Abbrev Number: 10 (DW_TAG_member)
    <f3>   DW_AT_name        : (indirect string, offset: 0x603): _IO_write_end
    <f7>   DW_AT_decl_file   : 4
    <f8>   DW_AT_decl_line   : 256
    <fa>   DW_AT_type        : <0x8c>
    <fe>   DW_AT_data_member_location: 48
 <2><ff>: Abbrev Number: 10 (DW_TAG_member)
    <100>   DW_AT_name        : (indirect string, offset: 0x4d7f): _IO_buf_base
    <104>   DW_AT_decl_file   : 4
    <105>   DW_AT_decl_line   : 257
    <107>   DW_AT_type        : <0x8c>
    <10b>   DW_AT_data_member_location: 56
 <2><10c>: Abbrev Number: 10 (DW_TAG_member)
    <10d>   DW_AT_name        : (indirect string, offset: 0x2fe): _IO_buf_end
    <111>   DW_AT_decl_file   : 4
    <112>   DW_AT_decl_line   : 258
    <114>   DW_AT_type        : <0x8c>
    <118>   DW_AT_data_member_location: 64
 <2><119>: Abbrev Number: 10 (DW_TAG_member)
    <11a>   DW_AT_name        : (indirect string, offset: 0x263a): _IO_save_base
    <11e>   DW_AT_decl_file   : 4
    <11f>   DW_AT_decl_line   : 260
    <121>   DW_AT_type        : <0x8c>
    <125>   DW_AT_data_member_location: 72
 <2><126>: Abbrev Number: 10 (DW_TAG_member)
    <127>   DW_AT_name        : (indirect string, offset: 0x42d5): _IO_backup_base
    <12b>   DW_AT_decl_file   : 4
    <12c>   DW_AT_decl_line   : 261
    <12e>   DW_AT_type        : <0x8c>
    <132>   DW_AT_data_member_location: 80
 <2><133>: Abbrev Number: 10 (DW_TAG_member)
    <134>   DW_AT_name        : (indirect string, offset: 0xff9): _IO_save_end
    <138>   DW_AT_decl_file   : 4
    <139>   DW_AT_decl_line   : 262
    <13b>   DW_AT_type        : <0x8c>
    <13f>   DW_AT_data_member_location: 88
 <2><140>: Abbrev Number: 10 (DW_TAG_member)
    <141>   DW_AT_name        : (indirect string, offset: 0x938): _markers
    <145>   DW_AT_decl_file   : 4
    <146>   DW_AT_decl_line   : 264
    <148>   DW_AT_type        : <0x256>
    <14c>   DW_AT_data_member_location: 96
 <2><14d>: Abbrev Number: 10 (DW_TAG_member)
    <14e>   DW_AT_name        : (indirect string, offset: 0x4a6b): _chain
    <152>   DW_AT_decl_file   : 4
    <153>   DW_AT_decl_line   : 266
    <155>   DW_AT_type        : <0x25c>
    <159>   DW_AT_data_member_location: 104
 <2><15a>: Abbrev Number: 10 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x1700): _fileno
    <15f>   DW_AT_decl_file   : 4
    <160>   DW_AT_decl_line   : 268
    <162>   DW_AT_type        : <0x66>
    <166>   DW_AT_data_member_location: 112
 <2><167>: Abbrev Number: 10 (DW_TAG_member)
    <168>   DW_AT_name        : (indirect string, offset: 0x852): _flags2
    <16c>   DW_AT_decl_file   : 4
    <16d>   DW_AT_decl_line   : 272
    <16f>   DW_AT_type        : <0x66>
    <173>   DW_AT_data_member_location: 116
 <2><174>: Abbrev Number: 10 (DW_TAG_member)
    <175>   DW_AT_name        : (indirect string, offset: 0x3d82): _old_offset
    <179>   DW_AT_decl_file   : 4
    <17a>   DW_AT_decl_line   : 274
    <17c>   DW_AT_type        : <0x74>
    <180>   DW_AT_data_member_location: 120
 <2><181>: Abbrev Number: 10 (DW_TAG_member)
    <182>   DW_AT_name        : (indirect string, offset: 0x4c83): _cur_column
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 278
    <189>   DW_AT_type        : <0x4a>
    <18d>   DW_AT_data_member_location: 128
 <2><18e>: Abbrev Number: 10 (DW_TAG_member)
    <18f>   DW_AT_name        : (indirect string, offset: 0x1886): _vtable_offset
    <193>   DW_AT_decl_file   : 4
    <194>   DW_AT_decl_line   : 279
    <196>   DW_AT_type        : <0x58>
    <19a>   DW_AT_data_member_location: 130
 <2><19b>: Abbrev Number: 10 (DW_TAG_member)
    <19c>   DW_AT_name        : (indirect string, offset: 0x164): _shortbuf
    <1a0>   DW_AT_decl_file   : 4
    <1a1>   DW_AT_decl_line   : 280
    <1a3>   DW_AT_type        : <0x262>
    <1a7>   DW_AT_data_member_location: 131
 <2><1a8>: Abbrev Number: 10 (DW_TAG_member)
    <1a9>   DW_AT_name        : (indirect string, offset: 0x3c63): _lock
    <1ad>   DW_AT_decl_file   : 4
    <1ae>   DW_AT_decl_line   : 284
    <1b0>   DW_AT_type        : <0x272>
    <1b4>   DW_AT_data_member_location: 136
 <2><1b5>: Abbrev Number: 10 (DW_TAG_member)
    <1b6>   DW_AT_name        : (indirect string, offset: 0x3d86): _offset
    <1ba>   DW_AT_decl_file   : 4
    <1bb>   DW_AT_decl_line   : 293
    <1bd>   DW_AT_type        : <0x7f>
    <1c1>   DW_AT_data_member_location: 144
 <2><1c2>: Abbrev Number: 10 (DW_TAG_member)
    <1c3>   DW_AT_name        : (indirect string, offset: 0x2b7c): __pad1
    <1c7>   DW_AT_decl_file   : 4
    <1c8>   DW_AT_decl_line   : 301
    <1ca>   DW_AT_type        : <0x8a>
    <1ce>   DW_AT_data_member_location: 152
 <2><1cf>: Abbrev Number: 10 (DW_TAG_member)
    <1d0>   DW_AT_name        : (indirect string, offset: 0x2b83): __pad2
    <1d4>   DW_AT_decl_file   : 4
    <1d5>   DW_AT_decl_line   : 302
    <1d7>   DW_AT_type        : <0x8a>
    <1db>   DW_AT_data_member_location: 160
 <2><1dc>: Abbrev Number: 10 (DW_TAG_member)
    <1dd>   DW_AT_name        : (indirect string, offset: 0x2b8a): __pad3
    <1e1>   DW_AT_decl_file   : 4
    <1e2>   DW_AT_decl_line   : 303
    <1e4>   DW_AT_type        : <0x8a>
    <1e8>   DW_AT_data_member_location: 168
 <2><1e9>: Abbrev Number: 10 (DW_TAG_member)
    <1ea>   DW_AT_name        : (indirect string, offset: 0x2b91): __pad4
    <1ee>   DW_AT_decl_file   : 4
    <1ef>   DW_AT_decl_line   : 304
    <1f1>   DW_AT_type        : <0x8a>
    <1f5>   DW_AT_data_member_location: 176
 <2><1f6>: Abbrev Number: 10 (DW_TAG_member)
    <1f7>   DW_AT_name        : (indirect string, offset: 0x2b98): __pad5
    <1fb>   DW_AT_decl_file   : 4
    <1fc>   DW_AT_decl_line   : 306
    <1fe>   DW_AT_type        : <0x31>
    <202>   DW_AT_data_member_location: 184
 <2><203>: Abbrev Number: 10 (DW_TAG_member)
    <204>   DW_AT_name        : (indirect string, offset: 0x1f93): _mode
    <208>   DW_AT_decl_file   : 4
    <209>   DW_AT_decl_line   : 307
    <20b>   DW_AT_type        : <0x66>
    <20f>   DW_AT_data_member_location: 192
 <2><210>: Abbrev Number: 10 (DW_TAG_member)
    <211>   DW_AT_name        : (indirect string, offset: 0x4d76): _unused2
    <215>   DW_AT_decl_file   : 4
    <216>   DW_AT_decl_line   : 309
    <218>   DW_AT_type        : <0x278>
    <21c>   DW_AT_data_member_location: 196
 <2><21d>: Abbrev Number: 0
 <1><21e>: Abbrev Number: 11 (DW_TAG_typedef)
    <21f>   DW_AT_name        : (indirect string, offset: 0x20f): _IO_lock_t
    <223>   DW_AT_decl_file   : 4
    <224>   DW_AT_decl_line   : 154
 <1><225>: Abbrev Number: 8 (DW_TAG_structure_type)
    <226>   DW_AT_name        : (indirect string, offset: 0x1c0c): _IO_marker
    <22a>   DW_AT_byte_size   : 24
    <22b>   DW_AT_decl_file   : 4
    <22c>   DW_AT_decl_line   : 160
    <22d>   DW_AT_sibling     : <0x256>
 <2><231>: Abbrev Number: 9 (DW_TAG_member)
    <232>   DW_AT_name        : (indirect string, offset: 0x1a9d): _next
    <236>   DW_AT_decl_file   : 4
    <237>   DW_AT_decl_line   : 161
    <238>   DW_AT_type        : <0x256>
    <23c>   DW_AT_data_member_location: 0
 <2><23d>: Abbrev Number: 9 (DW_TAG_member)
    <23e>   DW_AT_name        : (indirect string, offset: 0x41b7): _sbuf
    <242>   DW_AT_decl_file   : 4
    <243>   DW_AT_decl_line   : 162
    <244>   DW_AT_type        : <0x25c>
    <248>   DW_AT_data_member_location: 8
 <2><249>: Abbrev Number: 9 (DW_TAG_member)
    <24a>   DW_AT_name        : (indirect string, offset: 0xf0d): _pos
    <24e>   DW_AT_decl_file   : 4
    <24f>   DW_AT_decl_line   : 166
    <250>   DW_AT_type        : <0x66>
    <254>   DW_AT_data_member_location: 16
 <2><255>: Abbrev Number: 0
 <1><256>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <257>   DW_AT_byte_size   : 8
    <258>   DW_AT_type        : <0x225>
 <1><25c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <25d>   DW_AT_byte_size   : 8
    <25e>   DW_AT_type        : <0x9e>
 <1><262>: Abbrev Number: 12 (DW_TAG_array_type)
    <263>   DW_AT_type        : <0x92>
    <267>   DW_AT_sibling     : <0x272>
 <2><26b>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <26c>   DW_AT_type        : <0x3c>
    <270>   DW_AT_upper_bound : 0
 <2><271>: Abbrev Number: 0
 <1><272>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <273>   DW_AT_byte_size   : 8
    <274>   DW_AT_type        : <0x21e>
 <1><278>: Abbrev Number: 12 (DW_TAG_array_type)
    <279>   DW_AT_type        : <0x92>
    <27d>   DW_AT_sibling     : <0x288>
 <2><281>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <282>   DW_AT_type        : <0x3c>
    <286>   DW_AT_upper_bound : 19
 <2><287>: Abbrev Number: 0
 <1><288>: Abbrev Number: 14 (DW_TAG_structure_type)
    <289>   DW_AT_name        : (indirect string, offset: 0x390f): _IO_FILE_plus
    <28d>   DW_AT_declaration : 1
 <1><28d>: Abbrev Number: 15 (DW_TAG_variable)
    <28e>   DW_AT_name        : (indirect string, offset: 0x2573): _IO_2_1_stdin_
    <292>   DW_AT_decl_file   : 4
    <293>   DW_AT_decl_line   : 319
    <295>   DW_AT_type        : <0x288>
    <299>   DW_AT_external    : 1
    <299>   DW_AT_declaration : 1
 <1><299>: Abbrev Number: 15 (DW_TAG_variable)
    <29a>   DW_AT_name        : (indirect string, offset: 0x25ea): _IO_2_1_stdout_
    <29e>   DW_AT_decl_file   : 4
    <29f>   DW_AT_decl_line   : 320
    <2a1>   DW_AT_type        : <0x288>
    <2a5>   DW_AT_external    : 1
    <2a5>   DW_AT_declaration : 1
 <1><2a5>: Abbrev Number: 15 (DW_TAG_variable)
    <2a6>   DW_AT_name        : (indirect string, offset: 0x1f42): _IO_2_1_stderr_
    <2aa>   DW_AT_decl_file   : 4
    <2ab>   DW_AT_decl_line   : 321
    <2ad>   DW_AT_type        : <0x288>
    <2b1>   DW_AT_external    : 1
    <2b1>   DW_AT_declaration : 1
 <1><2b1>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <2b2>   DW_AT_byte_size   : 8
    <2b3>   DW_AT_type        : <0x99>
 <1><2b7>: Abbrev Number: 7 (DW_TAG_const_type)
    <2b8>   DW_AT_type        : <0x2b1>
 <1><2bc>: Abbrev Number: 16 (DW_TAG_variable)
    <2bd>   DW_AT_name        : (indirect string, offset: 0x22cf): stdin
    <2c1>   DW_AT_decl_file   : 5
    <2c2>   DW_AT_decl_line   : 135
    <2c3>   DW_AT_type        : <0x25c>
    <2c7>   DW_AT_external    : 1
    <2c7>   DW_AT_declaration : 1
 <1><2c7>: Abbrev Number: 16 (DW_TAG_variable)
    <2c8>   DW_AT_name        : (indirect string, offset: 0x41d0): stdout
    <2cc>   DW_AT_decl_file   : 5
    <2cd>   DW_AT_decl_line   : 136
    <2ce>   DW_AT_type        : <0x25c>
    <2d2>   DW_AT_external    : 1
    <2d2>   DW_AT_declaration : 1
 <1><2d2>: Abbrev Number: 16 (DW_TAG_variable)
    <2d3>   DW_AT_name        : (indirect string, offset: 0x187f): stderr
    <2d7>   DW_AT_decl_file   : 5
    <2d8>   DW_AT_decl_line   : 137
    <2d9>   DW_AT_type        : <0x25c>
    <2dd>   DW_AT_external    : 1
    <2dd>   DW_AT_declaration : 1
 <1><2dd>: Abbrev Number: 16 (DW_TAG_variable)
    <2de>   DW_AT_name        : (indirect string, offset: 0x167d): sys_nerr
    <2e2>   DW_AT_decl_file   : 6
    <2e3>   DW_AT_decl_line   : 26
    <2e4>   DW_AT_type        : <0x66>
    <2e8>   DW_AT_external    : 1
    <2e8>   DW_AT_declaration : 1
 <1><2e8>: Abbrev Number: 12 (DW_TAG_array_type)
    <2e9>   DW_AT_type        : <0x2b7>
    <2ed>   DW_AT_sibling     : <0x2f3>
 <2><2f1>: Abbrev Number: 17 (DW_TAG_subrange_type)
 <2><2f2>: Abbrev Number: 0
 <1><2f3>: Abbrev Number: 7 (DW_TAG_const_type)
    <2f4>   DW_AT_type        : <0x2e8>
 <1><2f8>: Abbrev Number: 16 (DW_TAG_variable)
    <2f9>   DW_AT_name        : (indirect string, offset: 0x1568): sys_errlist
    <2fd>   DW_AT_decl_file   : 6
    <2fe>   DW_AT_decl_line   : 27
    <2ff>   DW_AT_type        : <0x2f3>
    <303>   DW_AT_external    : 1
    <303>   DW_AT_declaration : 1
 <1><303>: Abbrev Number: 18 (DW_TAG_subprogram)
    <304>   DW_AT_external    : 1
    <304>   DW_AT_name        : (indirect string, offset: 0x47af): main
    <308>   DW_AT_decl_file   : 1
    <309>   DW_AT_decl_line   : 3
    <30a>   DW_AT_prototyped  : 1
    <30a>   DW_AT_type        : <0x66>
    <30e>   DW_AT_low_pc      : 0x5fa
    <316>   DW_AT_high_pc     : 0x3b
    <31e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <320>   DW_AT_GNU_all_call_sites: 1
    <320>   DW_AT_sibling     : <0x365>
 <2><324>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <325>   DW_AT_name        : (indirect string, offset: 0x74b): argc
    <329>   DW_AT_decl_file   : 1
    <32a>   DW_AT_decl_line   : 3
    <32b>   DW_AT_type        : <0x66>
    <32f>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><332>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <333>   DW_AT_name        : (indirect string, offset: 0x1d12): argv
    <337>   DW_AT_decl_file   : 1
    <338>   DW_AT_decl_line   : 3
    <339>   DW_AT_type        : <0x365>
    <33d>   DW_AT_location    : 2 byte block: 91 50 	(DW_OP_fbreg: -48)
 <2><340>: Abbrev Number: 20 (DW_TAG_variable)
    <341>   DW_AT_name        : a
    <343>   DW_AT_decl_file   : 1
    <344>   DW_AT_decl_line   : 4
    <345>   DW_AT_type        : <0x36b>
    <349>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><34c>: Abbrev Number: 20 (DW_TAG_variable)
    <34d>   DW_AT_name        : b
    <34f>   DW_AT_decl_file   : 1
    <350>   DW_AT_decl_line   : 4
    <351>   DW_AT_type        : <0x36b>
    <355>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><358>: Abbrev Number: 20 (DW_TAG_variable)
    <359>   DW_AT_name        : c
    <35b>   DW_AT_decl_file   : 1
    <35c>   DW_AT_decl_line   : 4
    <35d>   DW_AT_type        : <0x36b>
    <361>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><364>: Abbrev Number: 0
 <1><365>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <366>   DW_AT_byte_size   : 8
    <367>   DW_AT_type        : <0x8c>
 <1><36b>: Abbrev Number: 3 (DW_TAG_base_type)
    <36c>   DW_AT_byte_size   : 4
    <36d>   DW_AT_encoding    : 4	(float)
    <36e>   DW_AT_name        : (indirect string, offset: 0x1030): float
 <1><372>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_structure_type    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subrange_type    [no children]
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      555
  DWARF Version:               2
  Prologue Length:             527
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/usr/lib/gcc/x86_64-linux-gnu/7/include
  2	/usr/x86_64-linux-gnu/include/bits
  3	/usr/x86_64-linux-gnu/include
  4	/usr/x86_64-linux-gnu/include/sys
  5	/usr/x86_64-linux-gnu/include/gnu
  6	/usr/x86_64-linux-gnu/include/bits/types

 The File Name Table (offset 0xf2):
  Entry	Dir	Time	Size	Name
  1	0	0	0	add_float.c
  2	1	0	0	stddef.h
  3	2	0	0	types.h
  4	2	0	0	libio.h
  5	3	0	0	stdio.h
  6	2	0	0	sys_errlist.h
  7	3	0	0	stdc-predef.h
  8	2	0	0	libc-header-start.h
  9	3	0	0	features.h
  10	4	0	0	cdefs.h
  11	2	0	0	wordsize.h
  12	2	0	0	long-double.h
  13	5	0	0	stubs.h
  14	5	0	0	stubs-64.h
  15	2	0	0	typesizes.h
  16	6	0	0	__FILE.h
  17	6	0	0	FILE.h
  18	2	0	0	_G_config.h
  19	6	0	0	__mbstate_t.h
  20	1	0	0	stdarg.h
  21	2	0	0	stdio_lim.h

 Line Number Statements:
  [0x00000219]  Extended opcode 2: set Address to 0x5fa
  [0x00000224]  Special opcode 7: advance Address by 0 to 0x5fa and Line by 2 to 3
  [0x00000225]  Special opcode 162: advance Address by 11 to 0x605 and Line by 3 to 6
  [0x00000226]  Special opcode 189: advance Address by 13 to 0x612 and Line by 2 to 8
  [0x00000227]  Special opcode 189: advance Address by 13 to 0x61f and Line by 2 to 10
  [0x00000228]  Advance PC by constant 17 to 0x630
  [0x00000229]  Special opcode 49: advance Address by 3 to 0x633 and Line by 2 to 12
  [0x0000022a]  Advance PC by 2 to 0x635
  [0x0000022c]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5f494f5f 44454320 30323000 5f5f5349 _IO_DEC 020.__SI
  0x00000010 475f4154 4f4d4943 5f4d4158 5f5f2030 G_ATOMIC_MAX__ 0
  0x00000020 78376666 66666666 66005f5f 464c5436 x7fffffff.__FLT6
  0x00000030 345f4841 535f5155 4945545f 4e414e5f 4_HAS_QUIET_NAN_
  0x00000040 5f203100 5f53495a 455f545f 44454649 _ 1._SIZE_T_DEFI
  0x00000050 4e454420 005f494f 5f49535f 46494c45 NED ._IO_IS_FILE
  0x00000060 42554620 30783230 3030005f 5f444543 BUF 0x2000.__DEC
  0x00000070 36345f53 55424e4f 524d414c 5f4d494e 64_SUBNORMAL_MIN
  0x00000080 5f5f2030 2e303030 30303030 30303030 __ 0.00000000000
  0x00000090 30303031 452d3338 33444400 5f5f464c 0001E-383DD.__FL
  0x000000a0 5433325f 4841535f 494e4649 4e495459 T32_HAS_INFINITY
  0x000000b0 5f5f2031 005f5f46 4c543634 5f4d4158 __ 1.__FLT64_MAX
  0x000000c0 5f455850 5f5f2031 30323400 5f5f464c _EXP__ 1024.__FL
  0x000000d0 545f4d49 4e5f3130 5f455850 5f5f2028 T_MIN_10_EXP__ (
  0x000000e0 2d333729 005f5f53 59534341 4c4c5f55 -37).__SYSCALL_U
  0x000000f0 4c4f4e47 5f545950 45205f5f 554c4f4e LONG_TYPE __ULON
  0x00000100 47574f52 445f5459 5045005f 5f464c54 GWORD_TYPE.__FLT
  0x00000110 3634585f 45505349 4c4f4e5f 5f20312e 64X_EPSILON__ 1.
  0x00000120 30383432 30323137 32343835 35303434 0842021724855044
  0x00000130 33343030 37343532 38303038 36393934 3400745280086994
  0x00000140 31373165 2d313946 36347800 5f5f464c 171e-19F64x.__FL
  0x00000150 54333258 5f4d4158 5f455850 5f5f2031 T32X_MAX_EXP__ 1
  0x00000160 30323400 5f73686f 72746275 66005f5f 024._shortbuf.__
  0x00000170 4743435f 41544f4d 49435f54 4553545f GCC_ATOMIC_TEST_
  0x00000180 414e445f 5345545f 54525545 56414c20 AND_SET_TRUEVAL 
  0x00000190 31005f5f 4f46465f 545f4d41 54434845 1.__OFF_T_MATCHE
  0x000001a0 535f4f46 4636345f 54203100 5f5f4445 S_OFF64_T 1.__DE
  0x000001b0 4336345f 45505349 4c4f4e5f 5f203145 C64_EPSILON__ 1E
  0x000001c0 2d313544 44005f5f 44424c5f 44454e4f -15DD.__DBL_DENO
  0x000001d0 524d5f4d 494e5f5f 20282864 6f75626c RM_MIN__ ((doubl
  0x000001e0 6529342e 39343036 35363435 38343132 e)4.940656458412
  0x000001f0 34363534 34313736 35363837 39323836 4654417656879286
  0x00000200 38323231 33373265 2d333234 4c29005f 8221372e-324L)._
  0x00000210 494f5f6c 6f636b5f 74005f5f 494e5450 IO_lock_t.__INTP
  0x00000220 54525f4d 41585f5f 20307837 66666666 TR_MAX__ 0x7ffff
  0x00000230 66666666 66666666 6666664c 005f475f fffffffffffL._G_
  0x00000240 48415645 5f53545f 424c4b53 495a4520 HAVE_ST_BLKSIZE 
  0x00000250 64656669 6e656420 285f5354 41544255 defined (_STATBU
  0x00000260 465f5354 5f424c4b 53495a45 29005f5f F_ST_BLKSIZE).__
  0x00000270 666c6578 61727220 5b5d005f 5f464c54 flexarr [].__FLT
  0x00000280 33325f4d 414e545f 4449475f 5f203234 32_MANT_DIG__ 24
  0x00000290 005f5f47 43435f48 4156455f 53594e43 .__GCC_HAVE_SYNC
  0x000002a0 5f434f4d 50415245 5f414e44 5f535741 _COMPARE_AND_SWA
  0x000002b0 505f3820 31005f49 4f535f42 494e2031 P_8 1._IOS_BIN 1
  0x000002c0 32380046 494c454e 414d455f 4d415820 28.FILENAME_MAX 
  0x000002d0 34303936 005f5354 44435f50 52454445 4096._STDC_PREDE
  0x000002e0 465f4820 31005f5f 5553455f 49534f43 F_H 1.__USE_ISOC
  0x000002f0 31312031 005f494f 46424620 30005f49 11 1._IOFBF 0._I
  0x00000300 4f5f6275 665f656e 64005f5f 494e545f O_buf_end.__INT_
  0x00000310 46415354 36345f57 49445448 5f5f2036 FAST64_WIDTH__ 6
  0x00000320 34005f49 4f5f454f 465f5345 454e2030 4._IO_EOF_SEEN 0
  0x00000330 78313000 5345454b 5f435552 2031005f x10.SEEK_CUR 1._
  0x00000340 5f464c54 3332585f 44454349 4d414c5f _FLT32X_DECIMAL_
  0x00000350 4449475f 5f203137 005f5f6b 385f5f20 DIG__ 17.__k8__ 
  0x00000360 31005f5f 44424c5f 4d494e5f 4558505f 1.__DBL_MIN_EXP_
  0x00000370 5f20282d 31303231 29005f5f 494e545f _ (-1021).__INT_
  0x00000380 46415354 36345f4d 41585f5f 20307837 FAST64_MAX__ 0x7
  0x00000390 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x000003a0 005f5f68 61735f69 6e636c75 64655f6e .__has_include_n
  0x000003b0 65787428 53545229 205f5f68 61735f69 ext(STR) __has_i
  0x000003c0 6e636c75 64655f6e 6578745f 5f285354 nclude_next__(ST
  0x000003d0 5229005f 494f5f52 49474854 20303400 R)._IO_RIGHT 04.
  0x000003e0 5f494f5f 55534552 5f425546 2031005f _IO_USER_BUF 1._
  0x000003f0 5359535f 43444546 535f4820 31005f5f SYS_CDEFS_H 1.__
  0x00000400 464c5433 32585f4d 41585f5f 20312e37 FLT32X_MAX__ 1.7
  0x00000410 39373639 33313334 38363233 31353730 9769313486231570
  0x00000420 38313435 32373432 33373331 37303433 8145274237317043
  0x00000430 3537652b 33303846 33327800 5f5f676c 57e+308F32x.__gl
  0x00000440 6962635f 756e6c69 6b656c79 28636f6e ibc_unlikely(con
  0x00000450 6429205f 5f627569 6c74696e 5f657870 d) __builtin_exp
  0x00000460 65637420 2828636f 6e64292c 20302900 ect ((cond), 0).
  0x00000470 5f5f5349 5a454f46 5f57494e 545f545f __SIZEOF_WINT_T_
  0x00000480 5f203400 5f5f474e 55435f50 52455245 _ 4.__GNUC_PRERE
  0x00000490 51286d61 6a2c6d69 6e292028 285f5f47 Q(maj,min) ((__G
  0x000004a0 4e55435f 5f203c3c 20313629 202b205f NUC__ << 16) + _
  0x000004b0 5f474e55 435f4d49 4e4f525f 5f203e3d _GNUC_MINOR__ >=
  0x000004c0 2028286d 616a2920 3c3c2031 3629202b  ((maj) << 16) +
  0x000004d0 20286d69 6e292900 5f5f5549 4e545054  (min)).__UINTPT
  0x000004e0 525f4d41 585f5f20 30786666 66666666 R_MAX__ 0xffffff
  0x000004f0 66666666 66666666 6666554c 005f5f76 ffffffffffUL.__v
  0x00000500 615f6172 675f7061 636b5f6c 656e2829 a_arg_pack_len()
  0x00000510 205f5f62 75696c74 696e5f76 615f6172  __builtin_va_ar
  0x00000520 675f7061 636b5f6c 656e2028 29005f47 g_pack_len ()._G
  0x00000530 5f484156 455f4d4d 41502031 005f5f61 _HAVE_MMAP 1.__a
  0x00000540 74747269 62757465 5f636f6e 73745f5f ttribute_const__
  0x00000550 205f5f61 74747269 62757465 5f5f2028  __attribute__ (
  0x00000560 285f5f63 6f6e7374 5f5f2929 005f5f47 (__const__)).__G
  0x00000570 4c494243 5f555345 5f444550 52454341 LIBC_USE_DEPRECA
  0x00000580 5445445f 47455453 005f494f 5f4e4f5f TED_GETS._IO_NO_
  0x00000590 57524954 45532038 005f5f47 4e55435f WRITES 8.__GNUC_
  0x000005a0 4d494e4f 525f5f20 33005f5f 5553455f MINOR__ 3.__USE_
  0x000005b0 4c415247 4546494c 45363400 5f5f524c LARGEFILE64.__RL
  0x000005c0 494d5f54 5f545950 45205f5f 53595343 IM_T_TYPE __SYSC
  0x000005d0 414c4c5f 554c4f4e 475f5459 5045005f ALL_ULONG_TYPE._
  0x000005e0 5f4c4442 4c5f5245 44495228 6e616d65 _LDBL_REDIR(name
  0x000005f0 2c70726f 746f2920 6e616d65 2070726f ,proto) name pro
  0x00000600 746f005f 494f5f77 72697465 5f656e64 to._IO_write_end
  0x00000610 005f5f47 4c494243 5f505245 52455128 .__GLIBC_PREREQ(
  0x00000620 6d616a2c 6d696e29 2028285f 5f474c49 maj,min) ((__GLI
  0x00000630 42435f5f 203c3c20 31362920 2b205f5f BC__ << 16) + __
  0x00000640 474c4942 435f4d49 4e4f525f 5f203e3d GLIBC_MINOR__ >=
  0x00000650 2028286d 616a2920 3c3c2031 3629202b  ((maj) << 16) +
  0x00000660 20286d69 6e292900 5f5f6e65 65645f4e  (min)).__need_N
  0x00000670 554c4c20 005f5f46 4c543634 5f4d494e ULL .__FLT64_MIN
  0x00000680 5f5f2032 2e323235 30373338 35383530 __ 2.22507385850
  0x00000690 37323031 33383330 39303233 32373137 7201383090232717
  0x000006a0 33333234 30343036 652d3330 38463634 33240406e-308F64
  0x000006b0 005f5f4c 4f4e475f 4c4f4e47 5f574944 .__LONG_LONG_WID
  0x000006c0 54485f5f 20363400 5f504f53 49585f53 TH__ 64._POSIX_S
  0x000006d0 4f555243 45005f5f 464c545f 44454e4f OURCE.__FLT_DENO
  0x000006e0 524d5f4d 494e5f5f 20312e34 30313239 RM_MIN__ 1.40129
  0x000006f0 38343634 33323438 31373037 30393233 8464324817070923
  0x00000700 37323935 38333238 39393136 3133652d 72958328991613e-
  0x00000710 34354600 5f5f4348 41523136 5f545950 45F.__CHAR16_TYP
  0x00000720 455f5f20 73686f72 7420756e 7369676e E__ short unsign
  0x00000730 65642069 6e74005f 5f53495a 454f465f ed int.__SIZEOF_
  0x00000740 53495a45 5f545f5f 20380061 72676300 SIZE_T__ 8.argc.
  0x00000750 5f5f4f52 4445525f 4249475f 454e4449 __ORDER_BIG_ENDI
  0x00000760 414e5f5f 20343332 31005f5f 474e5543 AN__ 4321.__GNUC
  0x00000770 5f5f2037 005f494f 5f4c494e 455f4255 __ 7._IO_LINE_BU
  0x00000780 46203078 32303000 5f5f5553 455f4953 F 0x200.__USE_IS
  0x00000790 4f435858 3131005f 5f555345 5f415446 OCXX11.__USE_ATF
  0x000007a0 494c4520 31005f5f 6e6f6e6e 756c6c28 ILE 1.__nonnull(
  0x000007b0 70617261 6d732920 5f5f6174 74726962 params) __attrib
  0x000007c0 7574655f 5f202828 5f5f6e6f 6e6e756c ute__ ((__nonnul
  0x000007d0 6c5f5f20 70617261 6d732929 005f5f55 l__ params)).__U
  0x000007e0 494e5436 345f4328 63292063 20232320 INT64_C(c) c ## 
  0x000007f0 554c005f 5f474e55 5f4c4942 52415259 UL.__GNU_LIBRARY
  0x00000800 5f5f005f 5f44424c 5f4d414e 545f4449 __.__DBL_MANT_DI
  0x00000810 475f5f20 3533005f 5f555345 5f504f53 G__ 53.__USE_POS
  0x00000820 49583139 39353036 2031005f 5f737475 IX199506 1.__stu
  0x00000830 625f6368 666c6167 7320005f 5f494e54 b_chflags .__INT
  0x00000840 5f4d4158 5f5f2030 78376666 66666666 _MAX__ 0x7ffffff
  0x00000850 66005f66 6c616773 32005f5f 4e54484e f._flags2.__NTHN
  0x00000860 4c286663 7429205f 5f617474 72696275 L(fct) __attribu
  0x00000870 74655f5f 2028285f 5f6e6f74 68726f77 te__ ((__nothrow
  0x00000880 5f5f2929 20666374 005f494f 5f424f4f __)) fct._IO_BOO
  0x00000890 4c414c50 48412030 32303030 3030005f LALPHA 0200000._
  0x000008a0 5f464c54 33325f48 41535f51 55494554 _FLT32_HAS_QUIET
  0x000008b0 5f4e414e 5f5f2031 005f5f49 4e543136 _NAN__ 1.__INT16
  0x000008c0 5f545950 455f5f20 73686f72 7420696e _TYPE__ short in
  0x000008d0 74005f5f 44454349 4d414c5f 4249445f t.__DECIMAL_BID_
  0x000008e0 464f524d 41545f5f 2031005f 5f444543 FORMAT__ 1.__DEC
  0x000008f0 33325f45 5053494c 4f4e5f5f 2031452d 32_EPSILON__ 1E-
  0x00000900 36444600 5f53495a 455f545f 4445434c 6DF._SIZE_T_DECL
  0x00000910 41524544 20005f5f 46445f53 45545349 ARED .__FD_SETSI
  0x00000920 5a452031 30323400 5f5f4c44 424c5f44 ZE 1024.__LDBL_D
  0x00000930 49475f5f 20313800 5f6d6172 6b657273 IG__ 18._markers
  0x00000940 005f5f41 544f4d49 435f5345 515f4353 .__ATOMIC_SEQ_CS
  0x00000950 54203500 5f5f5553 455f504f 53495832 T 5.__USE_POSIX2
  0x00000960 2031005f 5f555345 5f49534f 43393520  1.__USE_ISOC95 
  0x00000970 31005f5f 53495a45 4f465f53 484f5254 1.__SIZEOF_SHORT
  0x00000980 5f5f2032 005f475f 76615f6c 69737420 __ 2._G_va_list 
  0x00000990 5f5f676e 75635f76 615f6c69 7374005f __gnuc_va_list._
  0x000009a0 5f55494e 5436345f 54595045 5f5f206c _UINT64_TYPE__ l
  0x000009b0 6f6e6720 756e7369 676e6564 20696e74 ong unsigned int
  0x000009c0 005f5f49 4e545f46 41535433 325f4d41 .__INT_FAST32_MA
  0x000009d0 585f5f20 30783766 66666666 66666666 X__ 0x7fffffffff
  0x000009e0 66666666 66664c00 5f5f494e 545f4c45 ffffffL.__INT_LE
  0x000009f0 41535438 5f545950 455f5f20 7369676e AST8_TYPE__ sign
  0x00000a00 65642063 68617200 5f5f7369 7a655f74 ed char.__size_t
  0x00000a10 20005f5f 55494e54 5f4c4541 53543332  .__UINT_LEAST32
  0x00000a20 5f545950 455f5f20 756e7369 676e6564 _TYPE__ unsigned
  0x00000a30 20696e74 005f5f73 7475625f 73696772  int.__stub_sigr
  0x00000a40 65747572 6e20005f 5f707472 5f742076 eturn .__ptr_t v
  0x00000a50 6f696420 2a005f5f 5333325f 54595045 oid *.__S32_TYPE
  0x00000a60 20696e74 005f5f53 5444435f 4e4f5f54  int.__STDC_NO_T
  0x00000a70 48524541 44535f5f 2031005f 5f425954 HREADS__ 1.__BYT
  0x00000a80 455f4f52 4445525f 5f205f5f 4f524445 E_ORDER__ __ORDE
  0x00000a90 525f4c49 54544c45 5f454e44 49414e5f R_LITTLE_ENDIAN_
  0x00000aa0 5f005f5f 4c44424c 5f4d494e 5f5f2033 _.__LDBL_MIN__ 3
  0x00000ab0 2e333632 31303331 34333131 32303933 .362103143112093
  0x00000ac0 35303632 36323637 37383137 33323137 5062626778173217
  0x00000ad0 35323630 652d3439 33324c00 5f5f464c 5260e-4932L.__FL
  0x00000ae0 5433325f 4d494e5f 31305f45 58505f5f T32_MIN_10_EXP__
  0x00000af0 20282d33 3729005f 5f44424c 5f484153  (-37).__DBL_HAS
  0x00000b00 5f44454e 4f524d5f 5f203100 5f5f494e _DENORM__ 1.__IN
  0x00000b10 545f4c45 41535436 345f5459 50455f5f T_LEAST64_TYPE__
  0x00000b20 206c6f6e 6720696e 74005f5f 57434841  long int.__WCHA
  0x00000b30 525f4d49 4e5f5f20 282d5f5f 57434841 R_MIN__ (-__WCHA
  0x00000b40 525f4d41 585f5f20 2d203129 005f494f R_MAX__ - 1)._IO
  0x00000b50 5f53484f 57504f49 4e542030 34303000 _SHOWPOINT 0400.
  0x00000b60 5f5f6f66 665f745f 64656669 6e656420 __off_t_defined 
  0x00000b70 005f5f53 5444435f 5554465f 33325f5f .__STDC_UTF_32__
  0x00000b80 2031005f 5f424c4b 53495a45 5f545f54  1.__BLKSIZE_T_T
  0x00000b90 59504520 5f5f5359 5343414c 4c5f534c YPE __SYSCALL_SL
  0x00000ba0 4f4e475f 54595045 005f5f49 4e545f4c ONG_TYPE.__INT_L
  0x00000bb0 45415354 31365f4d 41585f5f 20307837 EAST16_MAX__ 0x7
  0x00000bc0 66666600 5f5f4c44 424c5f52 45444952 fff.__LDBL_REDIR
  0x00000bd0 5f444543 4c286e61 6d652920 00474e55 _DECL(name) .GNU
  0x00000be0 20433131 20372e33 2e30202d 6d74756e  C11 7.3.0 -mtun
  0x00000bf0 653d6765 6e657269 63202d6d 61726368 e=generic -march
  0x00000c00 3d783836 2d363420 2d676764 6233202d =x86-64 -ggdb3 -
  0x00000c10 66737461 636b2d70 726f7465 63746f72 fstack-protector
  0x00000c20 2d737472 6f6e6700 5f5f5343 4841525f -strong.__SCHAR_
  0x00000c30 4d41585f 5f203078 3766005f 5f657874 MAX__ 0x7f.__ext
  0x00000c40 65726e5f 616c7761 79735f69 6e6c696e ern_always_inlin
  0x00000c50 65206578 7465726e 205f5f61 6c776179 e extern __alway
  0x00000c60 735f696e 6c696e65 205f5f61 74747269 s_inline __attri
  0x00000c70 62757465 5f5f2028 285f5f67 6e755f69 bute__ ((__gnu_i
  0x00000c80 6e6c696e 655f5f29 29005f5f 464c5436 nline__)).__FLT6
  0x00000c90 345f4449 475f5f20 3135005f 5f494e54 4_DIG__ 15.__INT
  0x00000ca0 5f464153 54385f54 5950455f 5f207369 _FAST8_TYPE__ si
  0x00000cb0 676e6564 20636861 72005f5f 5049455f gned char.__PIE_
  0x00000cc0 5f203200 5f494f5f 6f666636 345f7420 _ 2._IO_off64_t 
  0x00000cd0 5f5f6f66 6636345f 74005f5f 474c4942 __off64_t.__GLIB
  0x00000ce0 435f5553 455f4945 435f3630 3535395f C_USE_IEC_60559_
  0x00000cf0 54595045 535f4558 54005f5f 464c5433 TYPES_EXT.__FLT3
  0x00000d00 32585f48 41535f49 4e46494e 4954595f 2X_HAS_INFINITY_
  0x00000d10 5f203100 5f5f5553 455f554e 49583938 _ 1.__USE_UNIX98
  0x00000d20 005f5f55 53455f46 4f525449 46595f4c .__USE_FORTIFY_L
  0x00000d30 4556454c 2030005f 41544649 4c455f53 EVEL 0._ATFILE_S
  0x00000d40 4f555243 45005f5f 5553455f 41544649 OURCE.__USE_ATFI
  0x00000d50 4c45005f 5f55494e 545f4c45 41535438 LE.__UINT_LEAST8
  0x00000d60 5f545950 455f5f20 756e7369 676e6564 _TYPE__ unsigned
  0x00000d70 20636861 72005f5f 53495a45 4f465f49  char.__SIZEOF_I
  0x00000d80 4e543132 385f5f20 3136005f 5f4e5448 NT128__ 16.__NTH
  0x00000d90 28666374 29205f5f 61747472 69627574 (fct) __attribut
  0x00000da0 655f5f20 28285f5f 6e6f7468 726f775f e__ ((__nothrow_
  0x00000db0 5f205f5f 4c454146 29292066 6374005f _ __LEAF)) fct._
  0x00000dc0 494f535f 4154454e 44203400 5f5f676c IOS_ATEND 4.__gl
  0x00000dd0 6962635f 6d616372 6f5f7761 726e696e ibc_macro_warnin
  0x00000de0 67286d65 73736167 6529205f 5f676c69 g(message) __gli
  0x00000df0 62635f6d 6163726f 5f776172 6e696e67 bc_macro_warning
  0x00000e00 31202847 43432077 61726e69 6e67206d 1 (GCC warning m
  0x00000e10 65737361 67652900 5f5f464c 54313238 essage).__FLT128
  0x00000e20 5f484153 5f515549 45545f4e 414e5f5f _HAS_QUIET_NAN__
  0x00000e30 2031005f 545f5349 5a452000 5f5f464c  1._T_SIZE .__FL
  0x00000e40 54313238 5f4d4158 5f5f2031 2e313839 T128_MAX__ 1.189
  0x00000e50 37333134 39353335 37323331 37363530 7314953572317650
  0x00000e60 38353735 39333236 36323830 30373032 8575932662800702
  0x00000e70 652b3439 33324631 32380042 55465349 e+4932F128.BUFSI
  0x00000e80 5a205f49 4f5f4255 4653495a 005f4154 Z _IO_BUFSIZ._AT
  0x00000e90 46494c45 5f534f55 52434520 31005f5f FILE_SOURCE 1.__
  0x00000ea0 464c5436 34585f44 49475f5f 20313800 FLT64X_DIG__ 18.
  0x00000eb0 5f5f494e 545f4c45 41535431 365f5749 __INT_LEAST16_WI
  0x00000ec0 4454485f 5f203136 005f5f46 5349445f DTH__ 16.__FSID_
  0x00000ed0 545f5459 50452073 74727563 74207b20 T_TYPE struct { 
  0x00000ee0 696e7420 5f5f7661 6c5b325d 3b207d00 int __val[2]; }.
  0x00000ef0 5f5f7373 697a655f 745f6465 66696e65 __ssize_t_define
  0x00000f00 6420005f 545f5349 5a455f20 005f706f d ._T_SIZE_ ._po
  0x00000f10 73005f49 4f5f6665 72726f72 5f756e6c s._IO_ferror_unl
  0x00000f20 6f636b65 64285f5f 66702920 2828285f ocked(__fp) (((_
  0x00000f30 5f667029 2d3e5f66 6c616773 2026205f _fp)->_flags & _
  0x00000f40 494f5f45 52525f53 45454e29 20213d20 IO_ERR_SEEN) != 
  0x00000f50 3029005f 5f657874 65726e5f 696e6c69 0).__extern_inli
  0x00000f60 6e652065 78746572 6e205f5f 696e6c69 ne extern __inli
  0x00000f70 6e65205f 5f617474 72696275 74655f5f ne __attribute__
  0x00000f80 2028285f 5f676e75 5f696e6c 696e655f  ((__gnu_inline_
  0x00000f90 5f292900 5f474343 5f53495a 455f5420 _))._GCC_SIZE_T 
  0x00000fa0 005f5f73 7475625f 7365746c 6f67696e .__stub_setlogin
  0x00000fb0 20005f5f 464c5433 325f4841 535f4445  .__FLT32_HAS_DE
  0x00000fc0 4e4f524d 5f5f2031 005f5f75 6e69785f NORM__ 1.__unix_
  0x00000fd0 5f203100 5f5f4743 435f4841 56455f53 _ 1.__GCC_HAVE_S
  0x00000fe0 594e435f 434f4d50 4152455f 414e445f YNC_COMPARE_AND_
  0x00000ff0 53574150 5f312031 005f494f 5f736176 SWAP_1 1._IO_sav
  0x00001000 655f656e 64005f5f 464c5436 34585f4d e_end.__FLT64X_M
  0x00001010 494e5f45 58505f5f 20282d31 36333831 IN_EXP__ (-16381
  0x00001020 29005f42 53445f53 495a455f 545f2000 )._BSD_SIZE_T_ .
  0x00001030 666c6f61 74005f5f 464c545f 4449475f float.__FLT_DIG_
  0x00001040 5f203600 5f5f494e 545f4641 53543136 _ 6.__INT_FAST16
  0x00001050 5f574944 54485f5f 20363400 5f5f4743 _WIDTH__ 64.__GC
  0x00001060 435f4154 4f4d4943 5f424f4f 4c5f4c4f C_ATOMIC_BOOL_LO
  0x00001070 434b5f46 52454520 32005f49 4f5f6f66 CK_FREE 2._IO_of
  0x00001080 665f7420 5f5f6f66 665f7400 5f5f7069 f_t __off_t.__pi
  0x00001090 655f5f20 32005f53 5444494f 5f482031 e__ 2._STDIO_H 1
  0x000010a0 005f5f44 45433332 5f4d494e 5f5f2031 .__DEC32_MIN__ 1
  0x000010b0 452d3935 4446005f 5f494e54 4d41585f E-95DF.__INTMAX_
  0x000010c0 4d41585f 5f203078 37666666 66666666 MAX__ 0x7fffffff
  0x000010d0 66666666 66666666 4c005f42 4954535f ffffffffL._BITS_
  0x000010e0 4c494249 4f5f4820 31005f5f 4743435f LIBIO_H 1.__GCC_
  0x000010f0 4945435f 35353920 32005f5f 464c5431 IEC_559 2.__FLT1
  0x00001100 32385f4d 494e5f45 58505f5f 20282d31 28_MIN_EXP__ (-1
  0x00001110 36333831 29002f68 6f6d652f 7562756e 6381)./home/ubun
  0x00001120 74752f45 6e67696e 65657269 6e672f50 tu/Engineering/P
  0x00001130 726f6772 616d6d69 6e672f44 69736173 rogramming/Disas
  0x00001140 73656d62 6c696e67 2d42696e 61726965 sembling-Binarie
  0x00001150 732f432f 496e7465 6c5f6172 63686974 s/C/Intel_archit
  0x00001160 65637475 72652f41 4d443634 2f466c6f ecture/AMD64/Flo
  0x00001170 61745f4f 70657261 74696f6e 732f4164 at_Operations/Ad
  0x00001180 645f466c 6f61742f 57697468 5f446562 d_Float/With_Deb
  0x00001190 75675f49 6e666f00 5f425344 5f53495a ug_Info._BSD_SIZ
  0x000011a0 455f545f 44454649 4e45445f 20005f5f E_T_DEFINED_ .__
  0x000011b0 55494e54 5f4c4541 53543136 5f4d4158 UINT_LEAST16_MAX
  0x000011c0 5f5f2030 78666666 66005f5f 55494e54 __ 0xffff.__UINT
  0x000011d0 5f464153 5436345f 4d41585f 5f203078 _FAST64_MAX__ 0x
  0x000011e0 66666666 66666666 66666666 66666666 ffffffffffffffff
  0x000011f0 554c005f 494f5f45 52525f53 45454e20 UL._IO_ERR_SEEN 
  0x00001200 30783230 005f5f61 74747269 62757465 0x20.__attribute
  0x00001210 5f757365 645f5f20 5f5f6174 74726962 _used__ __attrib
  0x00001220 7574655f 5f202828 5f5f7573 65645f5f ute__ ((__used__
  0x00001230 2929005f 5f617474 72696275 74655f61 )).__attribute_a
  0x00001240 72746966 69636961 6c5f5f20 5f5f6174 rtificial__ __at
  0x00001250 74726962 7574655f 5f202828 5f5f6172 tribute__ ((__ar
  0x00001260 74696669 6369616c 5f5f2929 005f494f tificial__))._IO
  0x00001270 5f667472 796c6f63 6b66696c 65285f66 _ftrylockfile(_f
  0x00001280 70292000 5f5f5549 4e545f4c 45415354 p) .__UINT_LEAST
  0x00001290 385f4d41 585f5f20 30786666 005f5f47 8_MAX__ 0xff.__G
  0x000012a0 4c494243 5f555345 5f4c4942 5f455854 LIBC_USE_LIB_EXT
  0x000012b0 32203000 5f5f4445 43313238 5f4d494e 2 0.__DEC128_MIN
  0x000012c0 5f455850 5f5f2028 2d363134 3229005f _EXP__ (-6142)._
  0x000012d0 5f4b4552 4e454c5f 53545249 43545f4e _KERNEL_STRICT_N
  0x000012e0 414d4553 20005f5f 57434841 525f5459 AMES .__WCHAR_TY
  0x000012f0 50455f5f 20696e74 005f5f49 4e54385f PE__ int.__INT8_
  0x00001300 4d41585f 5f203078 37660067 65746328 MAX__ 0x7f.getc(
  0x00001310 5f667029 205f494f 5f676574 6320285f _fp) _IO_getc (_
  0x00001320 66702900 5f5f4445 43313238 5f455053 fp).__DEC128_EPS
  0x00001330 494c4f4e 5f5f2031 452d3333 444c005f ILON__ 1E-33DL._
  0x00001340 5f555345 5f504f53 49583139 39353036 _USE_POSIX199506
  0x00001350 005f5f6e 6565645f 4e554c4c 005f5f52 .__need_NULL.__R
  0x00001360 45444952 4543545f 4e54485f 4c44424c EDIRECT_NTH_LDBL
  0x00001370 286e616d 652c7072 6f746f2c 616c6961 (name,proto,alia
  0x00001380 7329205f 5f524544 49524543 545f4e54 s) __REDIRECT_NT
  0x00001390 4820286e 616d652c 2070726f 746f2c20 H (name, proto, 
  0x000013a0 616c6961 7329005f 5f524544 49524543 alias).__REDIREC
  0x000013b0 545f4e54 484e4c28 6e616d65 2c70726f T_NTHNL(name,pro
  0x000013c0 746f2c61 6c696173 29206e61 6d652070 to,alias) name p
  0x000013d0 726f746f 205f5f61 736d5f5f 20285f5f roto __asm__ (__
  0x000013e0 41534d4e 414d4520 2823616c 69617329 ASMNAME (#alias)
  0x000013f0 29205f5f 5448524f 574e4c00 5f5f464c ) __THROWNL.__FL
  0x00001400 54313238 5f4d4158 5f455850 5f5f2031 T128_MAX_EXP__ 1
  0x00001410 36333834 005f5f46 4c545f52 41444958 6384.__FLT_RADIX
  0x00001420 5f5f2032 005f5f46 4c543332 585f4445 __ 2.__FLT32X_DE
  0x00001430 4e4f524d 5f4d494e 5f5f2034 2e393430 NORM_MIN__ 4.940
  0x00001440 36353634 35383431 32343635 34343137 6564584124654417
  0x00001450 36353638 37393238 36383232 31333732 6568792868221372
  0x00001460 652d3332 34463332 78005f5f 676c6962 e-324F32x.__glib
  0x00001470 635f636c 616e675f 6861735f 65787465 c_clang_has_exte
  0x00001480 6e73696f 6e286578 74292030 005f5f50 nsion(ext) 0.__P
  0x00001490 4d542861 72677329 20617267 73005f5f MT(args) args.__
  0x000014a0 4749445f 545f5459 5045205f 5f553332 GID_T_TYPE __U32
  0x000014b0 5f545950 45005f5f 53495a45 4f465f4c _TYPE.__SIZEOF_L
  0x000014c0 4f4e475f 444f5542 4c455f5f 20313600 ONG_DOUBLE__ 16.
  0x000014d0 5f5f4442 4c5f4841 535f5155 4945545f __DBL_HAS_QUIET_
  0x000014e0 4e414e5f 5f203100 5f5f7775 7220005f NAN__ 1.__wur ._
  0x000014f0 42495453 5f545950 45535f48 2031005f BITS_TYPES_H 1._
  0x00001500 5f4c4442 4c5f4445 4e4f524d 5f4d494e _LDBL_DENORM_MIN
  0x00001510 5f5f2033 2e363435 31393935 33313838 __ 3.64519953188
  0x00001520 32343734 36303235 32383430 35393333 2474602528405933
  0x00001530 36313934 31393832 652d3439 35314c00 61941982e-4951L.
  0x00001540 5f5f5049 445f545f 54595045 205f5f53 __PID_T_TYPE __S
  0x00001550 33325f54 59504500 5f5f7374 75625f66 32_TYPE.__stub_f
  0x00001560 61747461 63682000 7379735f 6572726c attach .sys_errl
  0x00001570 69737400 5f5f464c 5436345f 4841535f ist.__FLT64_HAS_
  0x00001580 494e4649 4e495459 5f5f2031 005f5f55 INFINITY__ 1.__U
  0x00001590 494e545f 46415354 385f4d41 585f5f20 INT_FAST8_MAX__ 
  0x000015a0 30786666 005f5f41 544f4d49 435f484c 0xff.__ATOMIC_HL
  0x000015b0 455f5245 4c454153 45203133 31303732 E_RELEASE 131072
  0x000015c0 005f5f4c 44424c5f 4d41585f 4558505f .__LDBL_MAX_EXP_
  0x000015d0 5f203136 33383400 5f5f7374 75625f67 _ 16384.__stub_g
  0x000015e0 74747920 005f4249 54535f54 59504553 tty ._BITS_TYPES
  0x000015f0 495a4553 5f482031 005f5f55 5345434f IZES_H 1.__USECO
  0x00001600 4e44535f 545f5459 5045205f 5f553332 NDS_T_TYPE __U32
  0x00001610 5f545950 45005f49 4f5f7065 656b6328 _TYPE._IO_peekc(
  0x00001620 5f667029 205f494f 5f706565 6b635f75 _fp) _IO_peekc_u
  0x00001630 6e6c6f63 6b656420 285f6670 29005f5f nlocked (_fp).__
  0x00001640 494e5450 54525f54 5950455f 5f206c6f INTPTR_TYPE__ lo
  0x00001650 6e672069 6e74005f 5f444543 36345f4d ng int.__DEC64_M
  0x00001660 41585f5f 20392e39 39393939 39393939 AX__ 9.999999999
  0x00001670 39393939 39394533 38344444 00737973 999999E384DD.sys
  0x00001680 5f6e6572 72005f5f 4743435f 41544f4d _nerr.__GCC_ATOM
  0x00001690 49435f49 4e545f4c 4f434b5f 46524545 IC_INT_LOCK_FREE
  0x000016a0 2032005f 5359535f 53495a45 5f545f48  2._SYS_SIZE_T_H
  0x000016b0 20005f5f 4d4d585f 5f203100 5f5f424c  .__MMX__ 1.__BL
  0x000016c0 4b434e54 5f545f54 59504520 5f5f5359 KCNT_T_TYPE __SY
  0x000016d0 5343414c 4c5f534c 4f4e475f 54595045 SCALL_SLONG_TYPE
  0x000016e0 005f494f 5f53484f 57424153 45203032 ._IO_SHOWBASE 02
  0x000016f0 3030005f 5f737475 625f7374 74792000 00.__stub_stty .
  0x00001700 5f66696c 656e6f00 5f5f4841 56455f47 _fileno.__HAVE_G
  0x00001710 454e4552 49435f53 454c4543 54494f4e ENERIC_SELECTION
  0x00001720 2031005f 5f524c49 4d36345f 545f5459  1.__RLIM64_T_TY
  0x00001730 5045205f 5f555155 41445f54 59504500 PE __UQUAD_TYPE.
  0x00001740 5f5f464c 54313238 5f4d414e 545f4449 __FLT128_MANT_DI
  0x00001750 475f5f20 31313300 5f5f4f52 4445525f G__ 113.__ORDER_
  0x00001760 4c495454 4c455f45 4e444941 4e5f5f20 LITTLE_ENDIAN__ 
  0x00001770 31323334 005f5f55 53455f58 4f50454e 1234.__USE_XOPEN
  0x00001780 324b2031 005f5f53 495a454f 465f5054 2K 1.__SIZEOF_PT
  0x00001790 52444946 465f545f 5f203800 5f494f53 RDIFF_T__ 8._IOS
  0x000017a0 5f545255 4e432031 36005f5f 44454331 _TRUNC 16.__DEC1
  0x000017b0 32385f4d 414e545f 4449475f 5f203334 28_MANT_DIG__ 34
  0x000017c0 005f5f55 53455f49 534f4339 39203100 .__USE_ISOC99 1.
  0x000017d0 5f5f494e 5433325f 54595045 5f5f2069 __INT32_TYPE__ i
  0x000017e0 6e74005f 5f4b4552 4e454c5f 53545249 nt.__KERNEL_STRI
  0x000017f0 43545f4e 414d4553 005f5f55 33325f54 CT_NAMES.__U32_T
  0x00001800 59504520 756e7369 676e6564 20696e74 YPE unsigned int
  0x00001810 005f5f63 6f64655f 6d6f6465 6c5f736d .__code_model_sm
  0x00001820 616c6c5f 5f203100 5f5f5553 455f4953 all__ 1.__USE_IS
  0x00001830 4f433935 005f5f46 4c543634 585f4841 OC95.__FLT64X_HA
  0x00001840 535f4445 4e4f524d 5f5f2031 005f5f44 S_DENORM__ 1.__D
  0x00001850 45433332 5f4d4158 5f455850 5f5f2039 EC32_MAX_EXP__ 9
  0x00001860 37005f49 4f4e4246 2032005f 5f555345 7._IONBF 2.__USE
  0x00001870 5f49534f 43393900 73746465 72722073 _ISOC99.stderr s
  0x00001880 74646572 72005f76 7461626c 655f6f66 tderr._vtable_of
  0x00001890 66736574 005f475f 494f5f49 4f5f4649 fset._G_IO_IO_FI
  0x000018a0 4c455f56 45525349 4f4e2030 78323030 LE_VERSION 0x200
  0x000018b0 3031005f 494f5f54 4945445f 5055545f 01._IO_TIED_PUT_
  0x000018c0 47455420 30783430 30004c5f 746d706e GET 0x400.L_tmpn
  0x000018d0 616d2032 30005f49 4f5f636c 65616e75 am 20._IO_cleanu
  0x000018e0 705f7265 67696f6e 5f737461 7274285f p_region_start(_
  0x000018f0 6663742c 5f667029 20005f5f 53544443 fct,_fp) .__STDC
  0x00001900 5f494543 5f353539 5f434f4d 504c4558 _IEC_559_COMPLEX
  0x00001910 5f5f2031 005f5f47 4c494243 5f555345 __ 1.__GLIBC_USE
  0x00001920 5f444550 52454341 5445445f 47455453 _DEPRECATED_GETS
  0x00001930 2030005f 494f5f48 45582030 31303000  0._IO_HEX 0100.
  0x00001940 5f5f464c 54363458 5f4d494e 5f31305f __FLT64X_MIN_10_
  0x00001950 4558505f 5f20282d 34393331 29005f5f EXP__ (-4931).__
  0x00001960 73747562 5f707574 6d736720 005f494f stub_putmsg ._IO
  0x00001970 5f726561 645f6261 7365005f 5f535444 _read_base.__STD
  0x00001980 435f4953 4f5f3130 3634365f 5f203230 C_ISO_10646__ 20
  0x00001990 31373036 4c005f5f 42454749 4e5f4445 1706L.__BEGIN_DE
  0x000019a0 434c5320 005f494f 5f737464 696e2028 CLS ._IO_stdin (
  0x000019b0 285f494f 5f46494c 452a2928 265f494f (_IO_FILE*)(&_IO
  0x000019c0 5f325f31 5f737464 696e5f29 29005f5f _2_1_stdin_)).__
  0x000019d0 464c5431 32385f4d 41585f31 305f4558 FLT128_MAX_10_EX
  0x000019e0 505f5f20 34393332 005f5f46 4c543132 P__ 4932.__FLT12
  0x000019f0 385f4d49 4e5f5f20 332e3336 32313033 8_MIN__ 3.362103
  0x00001a00 31343331 31323039 33353036 32363236 1431120935062626
  0x00001a10 37373831 37333231 37353236 30652d34 7781732175260e-4
  0x00001a20 39333246 31323800 5f5f5355 5345434f 932F128.__SUSECO
  0x00001a30 4e44535f 545f5459 5045205f 5f535953 NDS_T_TYPE __SYS
  0x00001a40 43414c4c 5f534c4f 4e475f54 59504500 CALL_SLONG_TYPE.
  0x00001a50 5345454b 5f454e44 2032005f 5f494e54 SEEK_END 2.__INT
  0x00001a60 5f464153 54385f57 49445448 5f5f2038 _FAST8_WIDTH__ 8
  0x00001a70 005f5f46 4c543634 5f4d494e 5f31305f .__FLT64_MIN_10_
  0x00001a80 4558505f 5f20282d 33303729 005f5f73 EXP__ (-307).__s
  0x00001a90 7475625f 66646574 61636820 005f6e65 tub_fdetach ._ne
  0x00001aa0 7874005f 5f44424c 5f4d4158 5f5f2028 xt.__DBL_MAX__ (
  0x00001ab0 28646f75 626c6529 312e3739 37363933 (double)1.797693
  0x00001ac0 31333438 36323331 35373038 31343532 1348623157081452
  0x00001ad0 37343233 37333137 30343335 37652b33 7423731704357e+3
  0x00001ae0 30384c29 005f4445 4641554c 545f534f 08L)._DEFAULT_SO
  0x00001af0 55524345 2031005f 5f524c49 4d5f545f URCE 1.__RLIM_T_
  0x00001b00 4d415443 4845535f 524c494d 36345f54 MATCHES_RLIM64_T
  0x00001b10 2031005f 5f616d64 36345f5f 2031005f  1.__amd64__ 1._
  0x00001b20 5f5f5f6d 62737461 74655f74 5f646566 ___mbstate_t_def
  0x00001b30 696e6564 2031005f 494f5f44 454c4554 ined 1._IO_DELET
  0x00001b40 455f444f 4e545f43 4c4f5345 20307834 E_DONT_CLOSE 0x4
  0x00001b50 30005f5f 464c5433 325f4445 43494d41 0.__FLT32_DECIMA
  0x00001b60 4c5f4449 475f5f20 39005f5f 464c5431 L_DIG__ 9.__FLT1
  0x00001b70 32385f44 49475f5f 20333300 5f5f5549 28_DIG__ 33.__UI
  0x00001b80 4e543136 5f545950 455f5f20 73686f72 NT16_TYPE__ shor
  0x00001b90 7420756e 7369676e 65642069 6e74005f t unsigned int._
  0x00001ba0 5f484156 455f434f 4c554d4e 20005f4f _HAVE_COLUMN ._O
  0x00001bb0 4c445f53 5444494f 5f4d4147 49432030 LD_STDIO_MAGIC 0
  0x00001bc0 78464142 43303030 30005f49 4f535f4e xFABC0000._IOS_N
  0x00001bd0 4f435245 41544520 3332005f 5f574348 OCREATE 32.__WCH
  0x00001be0 41525f57 49445448 5f5f2033 32005f5f AR_WIDTH__ 32.__
  0x00001bf0 4743435f 41544f4d 49435f43 4841525f GCC_ATOMIC_CHAR_
  0x00001c00 4c4f434b 5f465245 45203200 5f494f5f LOCK_FREE 2._IO_
  0x00001c10 6d61726b 6572005f 5f424947 47455354 marker.__BIGGEST
  0x00001c20 5f414c49 474e4d45 4e545f5f 20313600 _ALIGNMENT__ 16.
  0x00001c30 5f5f4c4f 4e475f4c 4f4e475f 4d41585f __LONG_LONG_MAX_
  0x00001c40 5f203078 37666666 66666666 66666666 _ 0x7fffffffffff
  0x00001c50 66666666 4c4c005f 5f554c4f 4e473332 ffffLL.__ULONG32
  0x00001c60 5f545950 4520756e 7369676e 65642069 _TYPE unsigned i
  0x00001c70 6e74005f 5f55494e 545f4c45 41535431 nt.__UINT_LEAST1
  0x00001c80 365f5459 50455f5f 2073686f 72742075 6_TYPE__ short u
  0x00001c90 6e736967 6e656420 696e7400 5f5f464c nsigned int.__FL
  0x00001ca0 545f4d41 585f3130 5f455850 5f5f2033 T_MAX_10_EXP__ 3
  0x00001cb0 38005f49 4f5f534b 49505753 20303100 8._IO_SKIPWS 01.
  0x00001cc0 5f5f464c 54333258 5f455053 494c4f4e __FLT32X_EPSILON
  0x00001cd0 5f5f2032 2e323230 34343630 34393235 __ 2.22044604925
  0x00001ce0 30333133 30383038 34373236 33333336 0313080847263336
  0x00001cf0 31383136 34303632 652d3136 46333278 18164062e-16F32x
  0x00001d00 004e554c 4c202828 766f6964 202a2930 .NULL ((void *)0
  0x00001d10 29006172 6776005f 5f555345 5f504f53 ).argv.__USE_POS
  0x00001d20 49585f49 4d504c49 4349544c 59203100 IX_IMPLICITLY 1.
  0x00001d30 5f494f5f 66656f66 5f756e6c 6f636b65 _IO_feof_unlocke
  0x00001d40 64285f5f 66702920 2828285f 5f667029 d(__fp) (((__fp)
  0x00001d50 2d3e5f66 6c616773 2026205f 494f5f45 ->_flags & _IO_E
  0x00001d60 4f465f53 45454e29 20213d20 3029005f OF_SEEN) != 0)._
  0x00001d70 5f4e4f5f 494e4c49 4e455f5f 2031005f _NO_INLINE__ 1._
  0x00001d80 494f5f73 74646572 72202828 5f494f5f IO_stderr ((_IO_
  0x00001d90 46494c45 2a292826 5f494f5f 325f315f FILE*)(&_IO_2_1_
  0x00001da0 73746465 72725f29 29005f5f 76615f61 stderr_)).__va_a
  0x00001db0 72675f70 61636b28 29205f5f 6275696c rg_pack() __buil
  0x00001dc0 74696e5f 76615f61 72675f70 61636b20 tin_va_arg_pack 
  0x00001dd0 2829005f 5f464c54 5f4d414e 545f4449 ().__FLT_MANT_DI
  0x00001de0 475f5f20 3234005f 5f444144 44525f54 G__ 24.__DADDR_T
  0x00001df0 5f545950 45205f5f 5333325f 54595045 _TYPE __S32_TYPE
  0x00001e00 005f5f46 4c543634 5f444543 494d414c .__FLT64_DECIMAL
  0x00001e10 5f444947 5f5f2031 37005f5f 4743435f _DIG__ 17.__GCC_
  0x00001e20 48415645 5f53594e 435f434f 4d504152 HAVE_SYNC_COMPAR
  0x00001e30 455f414e 445f5357 41505f34 2031005f E_AND_SWAP_4 1._
  0x00001e40 5f464c54 33325f4d 494e5f45 58505f5f _FLT32_MIN_EXP__
  0x00001e50 20282d31 32352900 5f5f5349 5a455f54  (-125).__SIZE_T
  0x00001e60 5950455f 5f206c6f 6e672075 6e736967 YPE__ long unsig
  0x00001e70 6e656420 696e7400 5f494f5f 464c4147 ned int._IO_FLAG
  0x00001e80 53325f55 5345525f 57425546 2038005f S2_USER_WBUF 8._
  0x00001e90 5f4c4442 4c5f4d41 585f5f20 312e3138 _LDBL_MAX__ 1.18
  0x00001ea0 39373331 34393533 35373233 31373635 9731495357231765
  0x00001eb0 30323132 36333835 33303330 39373032 0212638530309702
  0x00001ec0 31652b34 3933324c 005f5f44 45435f45 1e+4932L.__DEC_E
  0x00001ed0 56414c5f 4d455448 4f445f5f 2032005f VAL_METHOD__ 2._
  0x00001ee0 5f464c54 5f4d4158 5f5f2033 2e343032 _FLT_MAX__ 3.402
  0x00001ef0 38323334 36363338 35323838 35393831 8234663852885981
  0x00001f00 31373034 31383334 38343531 36393235 1704183484516925
  0x00001f10 652b3338 46005f49 4f5f7569 645f7420 e+38F._IO_uid_t 
  0x00001f20 5f5f7569 645f7400 5f5f4442 4c5f4d49 __uid_t.__DBL_MI
  0x00001f30 4e5f3130 5f455850 5f5f2028 2d333037 N_10_EXP__ (-307
  0x00001f40 29005f49 4f5f325f 315f7374 64657272 )._IO_2_1_stderr
  0x00001f50 5f005f5f 55494e54 33325f4d 41585f5f _.__UINT32_MAX__
  0x00001f60 20307866 66666666 66666655 005f494f  0xffffffffU._IO
  0x00001f70 5f4f4354 20303430 005f5f46 4c543132 _OCT 040.__FLT12
  0x00001f80 385f4841 535f494e 46494e49 54595f5f 8_HAS_INFINITY__
  0x00001f90 2031005f 6d6f6465 005f494f 5f484156  1._mode._IO_HAV
  0x00001fa0 455f5354 5f424c4b 53495a45 205f475f E_ST_BLKSIZE _G_
  0x00001fb0 48415645 5f53545f 424c4b53 495a4500 HAVE_ST_BLKSIZE.
  0x00001fc0 5f5f464c 5436345f 4841535f 44454e4f __FLT64_HAS_DENO
  0x00001fd0 524d5f5f 2031005f 5f464c54 5f455641 RM__ 1.__FLT_EVA
  0x00001fe0 4c5f4d45 54484f44 5f5f2030 005f5f46 L_METHOD__ 0.__F
  0x00001ff0 53424c4b 434e545f 545f5459 5045205f SBLKCNT_T_TYPE _
  0x00002000 5f535953 43414c4c 5f554c4f 4e475f54 _SYSCALL_ULONG_T
  0x00002010 59504500 5f5f464c 54333258 5f484153 YPE.__FLT32X_HAS
  0x00002020 5f44454e 4f524d5f 5f203100 5f5f7838 _DENORM__ 1.__x8
  0x00002030 365f3634 5f5f2031 005f5f46 4c543634 6_64__ 1.__FLT64
  0x00002040 585f4d41 585f4558 505f5f20 31363338 X_MAX_EXP__ 1638
  0x00002050 34005f5f 56455253 494f4e5f 5f202237 4.__VERSION__ "7
  0x00002060 2e332e30 22005f49 4f5f4c49 4e4b4544 .3.0"._IO_LINKED
  0x00002070 20307838 30005f5f 52454449 52454354  0x80.__REDIRECT
  0x00002080 286e616d 652c7072 6f746f2c 616c6961 (name,proto,alia
  0x00002090 7329206e 616d6520 70726f74 6f205f5f s) name proto __
  0x000020a0 61736d5f 5f20285f 5f41534d 4e414d45 asm__ (__ASMNAME
  0x000020b0 20282361 6c696173 2929005f 5f465342  (#alias)).__FSB
  0x000020c0 4c4b434e 5436345f 545f5459 5045205f LKCNT64_T_TYPE _
  0x000020d0 5f555155 41445f54 59504500 5f5f464c _UQUAD_TYPE.__FL
  0x000020e0 54363458 5f4d4158 5f5f2031 2e313839 T64X_MAX__ 1.189
  0x000020f0 37333134 39353335 37323331 37363530 7314953572317650
  0x00002100 32313236 33383533 30333039 37303231 2126385303097021
  0x00002110 652b3439 33324636 3478005f 494f5f72 e+4932F64x._IO_r
  0x00002120 6561645f 70747200 5f5f5349 5a455f54 ead_ptr.__SIZE_T
  0x00002130 20005f5f 49445f54 5f545950 45205f5f  .__ID_T_TYPE __
  0x00002140 5533325f 54595045 005f5f53 495a455f U32_TYPE.__SIZE_
  0x00002150 545f5f20 005f494f 5f66756e 6c6f636b T__ ._IO_funlock
  0x00002160 66696c65 285f6670 2920005f 5f4b4559 file(_fp) .__KEY
  0x00002170 5f545f54 59504520 5f5f5333 325f5459 _T_TYPE __S32_TY
  0x00002180 5045005f 5f494e54 5f4c4541 53543634 PE.__INT_LEAST64
  0x00002190 5f4d4158 5f5f2030 78376666 66666666 _MAX__ 0x7ffffff
  0x000021a0 66666666 66666666 664c005f 5f494e54 fffffffffL.__INT
  0x000021b0 5f4c4541 5354385f 57494454 485f5f20 _LEAST8_WIDTH__ 
  0x000021c0 38005f5f 4c44424c 5f524544 4952315f 8.__LDBL_REDIR1_
  0x000021d0 4e544828 6e616d65 2c70726f 746f2c61 NTH(name,proto,a
  0x000021e0 6c696173 29206e61 6d652070 726f746f lias) name proto
  0x000021f0 205f5f54 48524f57 005f5f55 494e5438  __THROW.__UINT8
  0x00002200 5f4d4158 5f5f2030 78666600 5f494f5f _MAX__ 0xff._IO_
  0x00002210 464c4147 53325f4e 4f544341 4e43454c FLAGS2_NOTCANCEL
  0x00002220 2032005f 5f616c77 6179735f 696e6c69  2.__always_inli
  0x00002230 6e65205f 5f696e6c 696e6520 5f5f6174 ne __inline __at
  0x00002240 74726962 7574655f 5f202828 5f5f616c tribute__ ((__al
  0x00002250 77617973 5f696e6c 696e655f 5f292900 ways_inline__)).
  0x00002260 5f5f5549 4e543136 5f4d4158 5f5f2030 __UINT16_MAX__ 0
  0x00002270 78666666 66005f49 4f5f4d41 47494320 xffff._IO_MAGIC 
  0x00002280 30784642 41443030 3030005f 5f474c49 0xFBAD0000.__GLI
  0x00002290 42435f55 53452846 29205f5f 474c4942 BC_USE(F) __GLIB
  0x000022a0 435f5553 455f2023 23204600 5f5f494e C_USE_ ## F.__IN
  0x000022b0 545f4641 53543634 5f545950 455f5f20 T_FAST64_TYPE__ 
  0x000022c0 6c6f6e67 20696e74 00737464 696e2073 long int.stdin s
  0x000022d0 7464696e 005f5f61 74747269 62757465 tdin.__attribute
  0x000022e0 5f6e6f69 6e6c696e 655f5f20 5f5f6174 _noinline__ __at
  0x000022f0 74726962 7574655f 5f202828 5f5f6e6f tribute__ ((__no
  0x00002300 696e6c69 6e655f5f 2929005f 5f535444 inline__)).__STD
  0x00002310 435f5645 5253494f 4e5f5f20 32303131 C_VERSION__ 2011
  0x00002320 31324c00 5f5f494e 544d4158 5f574944 12L.__INTMAX_WID
  0x00002330 54485f5f 20363400 5f5f4445 4333325f TH__ 64.__DEC32_
  0x00002340 4d41585f 5f20392e 39393939 39394539 MAX__ 9.999999E9
  0x00002350 36444600 5f5f474e 55435f56 415f4c49 6DF.__GNUC_VA_LI
  0x00002360 53542000 5f5f5054 52444946 465f4d41 ST .__PTRDIFF_MA
  0x00002370 585f5f20 30783766 66666666 66666666 X__ 0x7fffffffff
  0x00002380 66666666 66664c00 5f5f5553 455f504f ffffffL.__USE_PO
  0x00002390 53495831 39393330 39005f5f 494e545f SIX199309.__INT_
  0x000023a0 4c454153 5431365f 54595045 5f5f2073 LEAST16_TYPE__ s
  0x000023b0 686f7274 20696e74 005f5f46 4c543332 hort int.__FLT32
  0x000023c0 5f4d4158 5f455850 5f5f2031 3238005f _MAX_EXP__ 128._
  0x000023d0 5f676e75 5f6c696e 75785f5f 2031005f _gnu_linux__ 1._
  0x000023e0 5f535444 5f545950 45207479 70656465 _STD_TYPE typede
  0x000023f0 66005f5f 4d4f4445 5f545f54 59504520 f.__MODE_T_TYPE 
  0x00002400 5f5f5533 325f5459 5045005f 5f53495a __U32_TYPE.__SIZ
  0x00002410 454f465f 464c4f41 54313238 5f5f2031 EOF_FLOAT128__ 1
  0x00002420 36005f5f 474e5543 5f535444 435f494e 6.__GNUC_STDC_IN
  0x00002430 4c494e45 5f5f2031 005f5f44 424c5f44 LINE__ 1.__DBL_D
  0x00002440 49475f5f 20313500 5f5f4743 435f4154 IG__ 15.__GCC_AT
  0x00002450 4f4d4943 5f434841 5231365f 545f4c4f OMIC_CHAR16_T_LO
  0x00002460 434b5f46 52454520 32005f5f 494e545f CK_FREE 2.__INT_
  0x00002470 4c454153 54385f4d 41585f5f 20307837 LEAST8_MAX__ 0x7
  0x00002480 66005f5f 5331365f 54595045 2073686f f.__S16_TYPE sho
  0x00002490 72742069 6e74005f 5f4c5036 345f5f20 rt int.__LP64__ 
  0x000024a0 31005f5f 53595343 414c4c5f 574f5244 1.__SYSCALL_WORD
  0x000024b0 53495a45 20363400 5f5f4743 435f4154 SIZE 64.__GCC_AT
  0x000024c0 4f4d4943 5f4c4f4e 475f4c4f 434b5f46 OMIC_LONG_LOCK_F
  0x000024d0 52454520 32005f5f 464c5433 32585f44 REE 2.__FLT32X_D
  0x000024e0 49475f5f 20313500 5f5f464c 54333258 IG__ 15.__FLT32X
  0x000024f0 5f4d414e 545f4449 475f5f20 3533005f _MANT_DIG__ 53._
  0x00002500 494f5f77 72697465 5f626173 65005f4c IO_write_base._L
  0x00002510 50363420 31005f46 45415455 5245535f P64 1._FEATURES_
  0x00002520 48203100 5f5f464c 5433325f 4449475f H 1.__FLT32_DIG_
  0x00002530 5f203600 5f5f4653 574f5244 5f545f54 _ 6.__FSWORD_T_T
  0x00002540 59504520 5f5f5359 5343414c 4c5f534c YPE __SYSCALL_SL
  0x00002550 4f4e475f 54595045 005f5f53 4c4f4e47 ONG_TYPE.__SLONG
  0x00002560 574f5244 5f545950 45206c6f 6e672069 WORD_TYPE long i
  0x00002570 6e74005f 494f5f32 5f315f73 7464696e nt._IO_2_1_stdin
  0x00002580 5f005f5f 7838365f 36342031 005f5f46 _.__x86_64 1.__F
  0x00002590 4c543634 585f4d41 585f3130 5f455850 LT64X_MAX_10_EXP
  0x000025a0 5f5f2034 39333200 5f5f4442 4c5f4d49 __ 4932.__DBL_MI
  0x000025b0 4e5f5f20 2828646f 75626c65 29322e32 N__ ((double)2.2
  0x000025c0 32353037 33383538 35303732 30313338 2507385850720138
  0x000025d0 33303930 32333237 31373333 32343034 3090232717332404
  0x000025e0 3036652d 3330384c 29005f49 4f5f325f 06e-308L)._IO_2_
  0x000025f0 315f7374 646f7574 5f005f5f 55494e54 1_stdout_.__UINT
  0x00002600 5f464153 5433325f 4d41585f 5f203078 _FAST32_MAX__ 0x
  0x00002610 66666666 66666666 66666666 66666666 ffffffffffffffff
  0x00002620 554c005f 5f46494e 4954455f 4d415448 UL.__FINITE_MATH
  0x00002630 5f4f4e4c 595f5f20 30005f49 4f5f7361 _ONLY__ 0._IO_sa
  0x00002640 76655f62 61736500 5f5f5531 365f5459 ve_base.__U16_TY
  0x00002650 50452075 6e736967 6e656420 73686f72 PE unsigned shor
  0x00002660 7420696e 7400454f 4620282d 3129005f t int.EOF (-1)._
  0x00002670 5f464c54 36345f4d 41585f5f 20312e37 _FLT64_MAX__ 1.7
  0x00002680 39373639 33313334 38363233 31353730 9769313486231570
  0x00002690 38313435 32373432 33373331 37303433 8145274237317043
  0x000026a0 3537652b 33303846 3634005f 5f73697a 57e+308F64.__siz
  0x000026b0 655f745f 5f20005f 5f55494e 54385f54 e_t__ .__UINT8_T
  0x000026c0 5950455f 5f20756e 7369676e 65642063 YPE__ unsigned c
  0x000026d0 68617200 5f494f5f 66696c65 5f666c61 har._IO_file_fla
  0x000026e0 6773205f 666c6167 73005f5f 5553455f gs _flags.__USE_
  0x000026f0 584f5045 4e324b38 58534900 5f5f494e XOPEN2K8XSI.__IN
  0x00002700 545f4641 53543332 5f545950 455f5f20 T_FAST32_TYPE__ 
  0x00002710 6c6f6e67 20696e74 005f494f 535f494e long int._IOS_IN
  0x00002720 50555420 31005f5f 4743435f 41534d5f PUT 1.__GCC_ASM_
  0x00002730 464c4147 5f4f5554 50555453 5f5f2031 FLAG_OUTPUTS__ 1
  0x00002740 00707574 63285f63 682c5f66 7029205f .putc(_ch,_fp) _
  0x00002750 494f5f70 75746320 285f6368 2c205f66 IO_putc (_ch, _f
  0x00002760 7029005f 5f55494e 545f4c45 41535436 p).__UINT_LEAST6
  0x00002770 345f4d41 585f5f20 30786666 66666666 4_MAX__ 0xffffff
  0x00002780 66666666 66666666 6666554c 005f5f50 ffffffffffUL.__P
  0x00002790 4d54005f 5f555155 41445f54 59504520 MT.__UQUAD_TYPE 
  0x000027a0 756e7369 676e6564 206c6f6e 6720696e unsigned long in
  0x000027b0 74005f5f 454c465f 5f203100 5f5f464c t.__ELF__ 1.__FL
  0x000027c0 54333258 5f4d494e 5f5f2032 2e323235 T32X_MIN__ 2.225
  0x000027d0 30373338 35383530 37323031 33383330 0738585072013830
  0x000027e0 39303233 32373137 33333234 30343036 9023271733240406
  0x000027f0 652d3330 38463332 78005f5f 55494e54 e-308F32x.__UINT
  0x00002800 5054525f 54595045 5f5f206c 6f6e6720 PTR_TYPE__ long 
  0x00002810 756e7369 676e6564 20696e74 005f5f49 unsigned int.__I
  0x00002820 4e543136 5f432863 29206300 5f5f4743 NT16_C(c) c.__GC
  0x00002830 435f4841 56455f44 57415246 325f4346 C_HAVE_DWARF2_CF
  0x00002840 495f4153 4d203100 5f5f5349 5a454f46 I_ASM 1.__SIZEOF
  0x00002850 5f464c4f 41545f5f 2034005f 5f444543 _FLOAT__ 4.__DEC
  0x00002860 33325f53 55424e4f 524d414c 5f4d494e 32_SUBNORMAL_MIN
  0x00002870 5f5f2030 2e303030 30303145 2d393544 __ 0.000001E-95D
  0x00002880 46005f49 4f5f4953 5f415050 454e4449 F._IO_IS_APPENDI
  0x00002890 4e472030 78313030 30005f5f 464c5436 NG 0x1000.__FLT6
  0x000028a0 34585f48 41535f51 55494554 5f4e414e 4X_HAS_QUIET_NAN
  0x000028b0 5f5f2031 005f5f46 4c545f48 41535f49 __ 1.__FLT_HAS_I
  0x000028c0 4e46494e 4954595f 5f203100 5f494f53 NFINITY__ 1._IOS
  0x000028d0 5f4e4f52 45504c41 43452036 34005f5f _NOREPLACE 64.__
  0x000028e0 5354445f 54595045 005f5f55 53455f50 STD_TYPE.__USE_P
  0x000028f0 4f534958 31393933 30392031 005f494f OSIX199309 1._IO
  0x00002900 5f73697a 655f7420 73697a65 5f74005f _size_t size_t._
  0x00002910 5f494e4f 36345f54 5f545950 45205f5f _INO64_T_TYPE __
  0x00002920 55515541 445f5459 5045005f 5f474e55 UQUAD_TYPE.__GNU
  0x00002930 5f4c4942 52415259 5f5f2036 005f5f53 _LIBRARY__ 6.__S
  0x00002940 5444435f 5f203100 5f5f676c 6962635f TDC__ 1.__glibc_
  0x00002950 6339395f 666c6578 6172725f 61766169 c99_flexarr_avai
  0x00002960 6c61626c 65203100 5f5f5353 45325f5f lable 1.__SSE2__
  0x00002970 2031005f 5f534c4f 4e473332 5f545950  1.__SLONG32_TYP
  0x00002980 4520696e 74005f5f 44424c5f 4d41585f E int.__DBL_MAX_
  0x00002990 4558505f 5f203130 3234005f 5f53495a EXP__ 1024.__SIZ
  0x000029a0 454f465f 4c4f4e47 5f5f2038 005f5f41 EOF_LONG__ 8.__A
  0x000029b0 544f4d49 435f434f 4e53554d 45203100 TOMIC_CONSUME 1.
  0x000029c0 5f5f5553 455f4649 4c455f4f 46465345 __USE_FILE_OFFSE
  0x000029d0 54363400 5f494f5f 464c4147 53325f4d T64._IO_FLAGS2_M
  0x000029e0 4d415020 31005f5f 464c5433 325f4d49 MAP 1.__FLT32_MI
  0x000029f0 4e5f5f20 312e3137 35343934 33353038 N__ 1.1754943508
  0x00002a00 32323238 37353037 39363837 33363533 2228750796873653
  0x00002a10 37323232 32343536 38652d33 38463332 722224568e-38F32
  0x00002a20 005f5f57 494e545f 54595045 5f5f2075 .__WINT_TYPE__ u
  0x00002a30 6e736967 6e656420 696e7400 5f5f5553 nsigned int.__US
  0x00002a40 455f4d49 5343005f 494f5f63 6c65616e E_MISC._IO_clean
  0x00002a50 75705f72 6567696f 6e5f656e 64285f44 up_region_end(_D
  0x00002a60 6f697429 20005f5f 494e5431 365f4d41 oit) .__INT16_MA
  0x00002a70 585f5f20 30783766 6666005f 504f5349 X__ 0x7fff._POSI
  0x00002a80 585f435f 534f5552 43452032 30303830 X_C_SOURCE 20080
  0x00002a90 394c005f 5f534348 41525f57 49445448 9L.__SCHAR_WIDTH
  0x00002aa0 5f5f2038 005f5f55 494e5433 325f4328 __ 8.__UINT32_C(
  0x00002ab0 63292063 20232320 55005f5f 4c44424c c) c ## U.__LDBL
  0x00002ac0 5f4d494e 5f31305f 4558505f 5f20282d _MIN_10_EXP__ (-
  0x00002ad0 34393331 29005f53 5444494f 5f555345 4931)._STDIO_USE
  0x00002ae0 535f494f 53545245 414d2000 5f5f5349 S_IOSTREAM .__SI
  0x00002af0 5a454f46 5f444f55 424c455f 5f203800 ZEOF_DOUBLE__ 8.
  0x00002b00 5f5f5549 4e54385f 43286329 2063005f __UINT8_C(c) c._
  0x00002b10 5f424c4b 434e5436 345f545f 54595045 _BLKCNT64_T_TYPE
  0x00002b20 205f5f53 51554144 5f545950 45005f5f  __SQUAD_TYPE.__
  0x00002b30 5553455f 464f5254 4946595f 4c455645 USE_FORTIFY_LEVE
  0x00002b40 4c005f5f 474c4942 435f5553 455f4c49 L.__GLIBC_USE_LI
  0x00002b50 425f4558 5432005f 5f57494e 545f4d49 B_EXT2.__WINT_MI
  0x00002b60 4e5f5f20 3055005f 5f4c4442 4c5f4d41 N__ 0U.__LDBL_MA
  0x00002b70 4e545f44 49475f5f 20363400 5f5f7061 NT_DIG__ 64.__pa
  0x00002b80 6431005f 5f706164 32005f5f 70616433 d1.__pad2.__pad3
  0x00002b90 005f5f70 61643400 5f5f7061 6435005f .__pad4.__pad5._
  0x00002ba0 5f535444 435f5554 465f3136 5f5f2031 _STDC_UTF_16__ 1
  0x00002bb0 005f5f4c 44424c5f 45505349 4c4f4e5f .__LDBL_EPSILON_
  0x00002bc0 5f20312e 30383432 30323137 32343835 _ 1.084202172485
  0x00002bd0 35303434 33343030 37343532 38303038 5044340074528008
  0x00002be0 36393934 31373165 2d31394c 005f5f62 6994171e-19L.__b
  0x00002bf0 6f733028 70747229 205f5f62 75696c74 os0(ptr) __built
  0x00002c00 696e5f6f 626a6563 745f7369 7a652028 in_object_size (
  0x00002c10 7074722c 20302900 5f494f4c 42462031 ptr, 0)._IOLBF 1
  0x00002c20 005f5f61 74747269 62757465 5f666f72 .__attribute_for
  0x00002c30 6d61745f 6172675f 5f287829 205f5f61 mat_arg__(x) __a
  0x00002c40 74747269 62757465 5f5f2028 285f5f66 ttribute__ ((__f
  0x00002c50 6f726d61 745f6172 675f5f20 28782929 ormat_arg__ (x))
  0x00002c60 29005f5f 5f5f4649 4c455f64 6566696e ).____FILE_defin
  0x00002c70 65642031 005f5f4c 44424c5f 4841535f ed 1.__LDBL_HAS_
  0x00002c80 494e4649 4e495459 5f5f2031 005f5f55 INFINITY__ 1.__U
  0x00002c90 53455f50 4f534958 2031005f 5f494e4f SE_POSIX 1.__INO
  0x00002ca0 5f545f4d 41544348 45535f49 4e4f3634 _T_MATCHES_INO64
  0x00002cb0 5f542031 005f5f47 43435f49 45435f35 _T 1.__GCC_IEC_5
  0x00002cc0 35395f43 4f4d504c 45582032 005f5f53 59_COMPLEX 2.__S
  0x00002cd0 49475f41 544f4d49 435f4d49 4e5f5f20 IG_ATOMIC_MIN__ 
  0x00002ce0 282d5f5f 5349475f 41544f4d 49435f4d (-__SIG_ATOMIC_M
  0x00002cf0 41585f5f 202d2031 29005f49 4f5f494e AX__ - 1)._IO_IN
  0x00002d00 5f424143 4b555020 30783130 30005f49 _BACKUP 0x100._I
  0x00002d10 4f5f666c 6f636b66 696c6528 5f667029 O_flockfile(_fp)
  0x00002d20 20005f5f 53495a45 4f465f57 43484152  .__SIZEOF_WCHAR
  0x00002d30 5f545f5f 2034005f 5f617474 72696275 _T__ 4.__attribu
  0x00002d40 74655f64 65707265 63617465 645f5f20 te_deprecated__ 
  0x00002d50 5f5f6174 74726962 7574655f 5f202828 __attribute__ ((
  0x00002d60 5f5f6465 70726563 61746564 5f5f2929 __deprecated__))
  0x00002d70 005f5f46 4c543132 385f4d49 4e5f3130 .__FLT128_MIN_10
  0x00002d80 5f455850 5f5f2028 2d343933 3129005f _EXP__ (-4931)._
  0x00002d90 5f464c4f 41545f57 4f52445f 4f524445 _FLOAT_WORD_ORDE
  0x00002da0 525f5f20 5f5f4f52 4445525f 4c495454 R__ __ORDER_LITT
  0x00002db0 4c455f45 4e444941 4e5f5f00 5f5f4743 LE_ENDIAN__.__GC
  0x00002dc0 435f4841 56455f53 594e435f 434f4d50 C_HAVE_SYNC_COMP
  0x00002dd0 4152455f 414e445f 53574150 5f322031 ARE_AND_SWAP_2 1
  0x00002de0 005f475f 48415645 5f4d5245 4d415020 ._G_HAVE_MREMAP 
  0x00002df0 31005f5f 44454333 325f4d41 4e545f44 1.__DEC32_MANT_D
  0x00002e00 49475f5f 2037005f 5f464c54 33325f44 IG__ 7.__FLT32_D
  0x00002e10 454e4f52 4d5f4d49 4e5f5f20 312e3430 ENORM_MIN__ 1.40
  0x00002e20 31323938 34363433 32343831 37303730 1298464324817070
  0x00002e30 39323337 32393538 33323839 39313631 9237295832899161
  0x00002e40 33652d34 35463332 005f5f6e 6565645f 3e-45F32.__need_
  0x00002e50 73697a65 5f74005f 5f55494e 545f4641 size_t.__UINT_FA
  0x00002e60 53543136 5f4d4158 5f5f2030 78666666 ST16_MAX__ 0xfff
  0x00002e70 66666666 66666666 66666666 66554c00 fffffffffffffUL.
  0x00002e80 5f5f6e65 65645f5f 5f76615f 6c697374 __need___va_list
  0x00002e90 005f5f49 4e543332 5f4d4158 5f5f2030 .__INT32_MAX__ 0
  0x00002ea0 78376666 66666666 66005f49 4f5f494e x7fffffff._IO_IN
  0x00002eb0 5445524e 414c2030 3130005f 5f5f696e TERNAL 010.___in
  0x00002ec0 745f7369 7a655f74 5f682000 5f5f676c t_size_t_h .__gl
  0x00002ed0 6962635f 6c696b65 6c792863 6f6e6429 ibc_likely(cond)
  0x00002ee0 205f5f62 75696c74 696e5f65 78706563  __builtin_expec
  0x00002ef0 74202828 636f6e64 292c2031 29005f5f t ((cond), 1).__
  0x00002f00 41544f4d 49435f41 43515549 52452032 ATOMIC_ACQUIRE 2
  0x00002f10 005f5f55 494e5431 365f4328 63292063 .__UINT16_C(c) c
  0x00002f20 00616464 5f666c6f 61742e63 005f5f49 .add_float.c.__I
  0x00002f30 4e543634 5f4d4158 5f5f2030 78376666 NT64_MAX__ 0x7ff
  0x00002f40 66666666 66666666 66666666 664c005f fffffffffffffL._
  0x00002f50 5f6e6565 645f7369 7a655f74 20005f5f _need_size_t .__
  0x00002f60 626f7328 70747229 205f5f62 75696c74 bos(ptr) __built
  0x00002f70 696e5f6f 626a6563 745f7369 7a652028 in_object_size (
  0x00002f80 7074722c 205f5f55 53455f46 4f525449 ptr, __USE_FORTI
  0x00002f90 46595f4c 4556454c 203e2031 29005f5f FY_LEVEL > 1).__
  0x00002fa0 55574f52 445f5459 50452075 6e736967 UWORD_TYPE unsig
  0x00002fb0 6e656420 6c6f6e67 20696e74 005f5f47 ned long int.__G
  0x00002fc0 4c494243 5f4d494e 4f525f5f 20323700 LIBC_MINOR__ 27.
  0x00002fd0 5f5f5345 475f4753 2031005f 5f535345 __SEG_GS 1.__SSE
  0x00002fe0 5f4d4154 485f5f20 31005f5f 4e4c494e _MATH__ 1.__NLIN
  0x00002ff0 4b5f545f 54595045 205f5f53 59534341 K_T_TYPE __SYSCA
  0x00003000 4c4c5f55 4c4f4e47 5f545950 45005f5f LL_ULONG_TYPE.__
  0x00003010 55494e54 4d41585f 54595045 5f5f206c UINTMAX_TYPE__ l
  0x00003020 6f6e6720 756e7369 676e6564 20696e74 ong unsigned int
  0x00003030 005f5f55 53455f58 4f50454e 324b005f .__USE_XOPEN2K._
  0x00003040 5f737475 625f6663 68666c61 67732000 _stub_fchflags .
  0x00003050 5f5f4c45 4146202c 205f5f6c 6561665f __LEAF , __leaf_
  0x00003060 5f005f5f 44454331 32385f4d 41585f45 _.__DEC128_MAX_E
  0x00003070 58505f5f 20363134 35005f49 4f5f4c45 XP__ 6145._IO_LE
  0x00003080 46542030 32005f5f 666f7274 6966795f FT 02.__fortify_
  0x00003090 66756e63 74696f6e 205f5f65 78746572 function __exter
  0x000030a0 6e5f616c 77617973 5f696e6c 696e6520 n_always_inline 
  0x000030b0 5f5f6174 74726962 7574655f 61727469 __attribute_arti
  0x000030c0 66696369 616c5f5f 005f5f46 4c545f45 ficial__.__FLT_E
  0x000030d0 5053494c 4f4e5f5f 20312e31 39323039 PSILON__ 1.19209
  0x000030e0 32383935 35303738 31323530 30303030 2895507812500000
  0x000030f0 30303030 30303030 30303030 3030652d 00000000000000e-
  0x00003100 3746005f 5f534947 5f41544f 4d49435f 7F.__SIG_ATOMIC_
  0x00003110 57494454 485f5f20 3332005f 5f434f4e WIDTH__ 32.__CON
  0x00003120 43415428 782c7929 20782023 23207900 CAT(x,y) x ## y.
  0x00003130 5f5f6174 74726962 7574655f 64657072 __attribute_depr
  0x00003140 65636174 65645f6d 73675f5f 286d7367 ecated_msg__(msg
  0x00003150 29205f5f 61747472 69627574 655f5f20 ) __attribute__ 
  0x00003160 28285f5f 64657072 65636174 65645f5f ((__deprecated__
  0x00003170 20286d73 67292929 005f5f53 4852545f  (msg))).__SHRT_
  0x00003180 4d41585f 5f203078 37666666 005f5f47 MAX__ 0x7fff.__G
  0x00003190 43435f41 544f4d49 435f5743 4841525f CC_ATOMIC_WCHAR_
  0x000031a0 545f4c4f 434b5f46 52454520 32005f49 T_LOCK_FREE 2._I
  0x000031b0 4f5f5045 4e44494e 475f4f55 54505554 O_PENDING_OUTPUT
  0x000031c0 5f434f55 4e54285f 66702920 28285f66 _COUNT(_fp) ((_f
  0x000031d0 70292d3e 5f494f5f 77726974 655f7074 p)->_IO_write_pt
  0x000031e0 72202d20 285f6670 292d3e5f 494f5f77 r - (_fp)->_IO_w
  0x000031f0 72697465 5f626173 6529005f 494f5f55 rite_base)._IO_U
  0x00003200 5345525f 4c4f434b 20307838 30303000 SER_LOCK 0x8000.
  0x00003210 5f5f4f52 4445525f 5044505f 454e4449 __ORDER_PDP_ENDI
  0x00003220 414e5f5f 20333431 32005f49 4f5f554e AN__ 3412._IO_UN
  0x00003230 49464945 445f4a55 4d505441 424c4553 IFIED_JUMPTABLES
  0x00003240 20310054 4d505f4d 41582032 33383332  1.TMP_MAX 23832
  0x00003250 38005f49 4f5f6e65 65645f6c 6f636b28 8._IO_need_lock(
  0x00003260 5f667029 20282828 5f667029 2d3e5f66 _fp) (((_fp)->_f
  0x00003270 6c616773 32202620 5f494f5f 464c4147 lags2 & _IO_FLAG
  0x00003280 53325f4e 4545445f 4c4f434b 2920213d S2_NEED_LOCK) !=
  0x00003290 20302900 5f5f464c 545f4445 43494d41  0).__FLT_DECIMA
  0x000032a0 4c5f4449 475f5f20 39005f5f 7761726e L_DIG__ 9.__warn
  0x000032b0 6465636c 286e616d 652c6d73 67292065 decl(name,msg) e
  0x000032c0 78746572 6e20766f 6964206e 616d6520 xtern void name 
  0x000032d0 28766f69 6429205f 5f617474 72696275 (void) __attribu
  0x000032e0 74655f5f 28285f5f 7761726e 696e675f te__((__warning_
  0x000032f0 5f20286d 73672929 29005f5f 464c5436 _ (msg))).__FLT6
  0x00003300 345f4d41 585f3130 5f455850 5f5f2033 4_MAX_10_EXP__ 3
  0x00003310 3038005f 5f535452 494e4728 78292023 08.__STRING(x) #
  0x00003320 78005f5f 4c44424c 5f4d494e 5f455850 x.__LDBL_MIN_EXP
  0x00003330 5f5f2028 2d313633 38312900 5f5f5749 __ (-16381).__WI
  0x00003340 4e545f57 49445448 5f5f2033 32005f49 NT_WIDTH__ 32._I
  0x00003350 4f5f5348 4f57504f 53203032 30303000 O_SHOWPOS 02000.
  0x00003360 5f494f5f 72656164 5f656e64 005f5f46 _IO_read_end.__F
  0x00003370 4c543634 585f4d49 4e5f5f20 332e3336 LT64X_MIN__ 3.36
  0x00003380 32313033 31343331 31323039 33353036 2103143112093506
  0x00003390 32363236 37373831 37333231 37353236 2626778173217526
  0x000033a0 30652d34 39333246 36347800 5f494f53 0e-4932F64x._IOS
  0x000033b0 5f4f5554 50555420 32005f5f 494e545f _OUTPUT 2.__INT_
  0x000033c0 46415354 385f4d41 585f5f20 30783766 FAST8_MAX__ 0x7f
  0x000033d0 005f5f52 45474953 5445525f 50524546 .__REGISTER_PREF
  0x000033e0 49585f5f 20005f5f 464c5433 325f4550 IX__ .__FLT32_EP
  0x000033f0 53494c4f 4e5f5f20 312e3139 32303932 SILON__ 1.192092
  0x00003400 38393535 30373831 32353030 30303030 8955078125000000
  0x00003410 30303030 30303030 30303030 30652d37 0000000000000e-7
  0x00003420 46333200 5f5f474c 4942435f 494e5445 F32.__GLIBC_INTE
  0x00003430 524e414c 5f535441 5254494e 475f4845 RNAL_STARTING_HE
  0x00003440 41444552 5f494d50 4c454d45 4e544154 ADER_IMPLEMENTAT
  0x00003450 494f4e20 005f5f53 574f5244 5f545950 ION .__SWORD_TYP
  0x00003460 45206c6f 6e672069 6e74005f 5f4c4f4e E long int.__LON
  0x00003470 475f4d41 585f5f20 30783766 66666666 G_MAX__ 0x7fffff
  0x00003480 66666666 66666666 66664c00 5f5f7374 ffffffffffL.__st
  0x00003490 75625f67 65746d73 6720005f 5f444543 ub_getmsg .__DEC
  0x000034a0 36345f4d 41585f45 58505f5f 20333835 64_MAX_EXP__ 385
  0x000034b0 005f5f46 4c543332 585f4d49 4e5f3130 .__FLT32X_MIN_10
  0x000034c0 5f455850 5f5f2028 2d333037 29005f5f _EXP__ (-307).__
  0x000034d0 5553455f 504f5349 5832005f 494f5f55 USE_POSIX2._IO_U
  0x000034e0 4e495442 55462030 32303030 30005f5f NITBUF 020000.__
  0x000034f0 4f46465f 545f5459 5045205f 5f535953 OFF_T_TYPE __SYS
  0x00003500 43414c4c 5f534c4f 4e475f54 59504500 CALL_SLONG_TYPE.
  0x00003510 5f5f5549 4e544d41 585f4328 63292063 __UINTMAX_C(c) c
  0x00003520 20232320 554c005f 5f434841 5233325f  ## UL.__CHAR32_
  0x00003530 54595045 5f5f2075 6e736967 6e656420 TYPE__ unsigned 
  0x00003540 696e7400 5f5f464c 54363458 5f484153 int.__FLT64X_HAS
  0x00003550 5f494e46 494e4954 595f5f20 31005f42 _INFINITY__ 1._B
  0x00003560 4954535f 475f434f 4e464947 5f482031 ITS_G_CONFIG_H 1
  0x00003570 005f5f44 45433132 385f4d49 4e5f5f20 .__DEC128_MIN__ 
  0x00003580 31452d36 31343344 4c005f5f 464c5433 1E-6143DL.__FLT3
  0x00003590 32585f4d 494e5f45 58505f5f 20282d31 2X_MIN_EXP__ (-1
  0x000035a0 30323129 005f494f 5f676574 635f756e 021)._IO_getc_un
  0x000035b0 6c6f636b 6564285f 66702920 285f494f locked(_fp) (_IO
  0x000035c0 5f424520 28285f66 70292d3e 5f494f5f _BE ((_fp)->_IO_
  0x000035d0 72656164 5f707472 203e3d20 285f6670 read_ptr >= (_fp
  0x000035e0 292d3e5f 494f5f72 6561645f 656e642c )->_IO_read_end,
  0x000035f0 20302920 3f205f5f 75666c6f 7720285f  0) ? __uflow (_
  0x00003600 66702920 3a202a28 756e7369 676e6564 fp) : *(unsigned
  0x00003610 20636861 72202a29 20285f66 70292d3e  char *) (_fp)->
  0x00003620 5f494f5f 72656164 5f707472 2b2b2900 _IO_read_ptr++).
  0x00003630 5f5f494e 54505452 5f574944 54485f5f __INTPTR_WIDTH__
  0x00003640 20363400 5f5f494e 4f5f545f 54595045  64.__INO_T_TYPE
  0x00003650 205f5f53 59534341 4c4c5f55 4c4f4e47  __SYSCALL_ULONG
  0x00003660 5f545950 45005f5f 55494e54 5f464153 _TYPE.__UINT_FAS
  0x00003670 54385f54 5950455f 5f20756e 7369676e T8_TYPE__ unsign
  0x00003680 65642063 68617200 5f5f494e 5433325f ed char.__INT32_
  0x00003690 43286329 2063005f 5f465346 494c434e C(c) c.__FSFILCN
  0x000036a0 5436345f 545f5459 5045205f 5f555155 T64_T_TYPE __UQU
  0x000036b0 41445f54 59504500 5f5f4c44 424c5f48 AD_TYPE.__LDBL_H
  0x000036c0 41535f51 55494554 5f4e414e 5f5f2031 AS_QUIET_NAN__ 1
  0x000036d0 005f5f47 4e55435f 50415443 484c4556 .__GNUC_PATCHLEV
  0x000036e0 454c5f5f 2030005f 5f57494e 545f4d41 EL__ 0.__WINT_MA
  0x000036f0 585f5f20 30786666 66666666 66665500 X__ 0xffffffffU.
  0x00003700 5f5f6174 74726962 7574655f 6e6f6e73 __attribute_nons
  0x00003710 7472696e 675f5f20 005f494f 5f4d4147 tring__ ._IO_MAG
  0x00003720 49435f4d 41534b20 30784646 46463030 IC_MASK 0xFFFF00
  0x00003730 3030005f 5f6c696e 75782031 005f5f47 00.__linux 1.__G
  0x00003740 4c494243 5f555345 5f494543 5f363035 LIBC_USE_IEC_605
  0x00003750 35395f46 554e4353 5f455854 005f494f 59_FUNCS_EXT._IO
  0x00003760 5f76615f 6c697374 205f5f67 6e75635f _va_list __gnuc_
  0x00003770 76615f6c 69737400 5f475f42 55465349 va_list._G_BUFSI
  0x00003780 5a203831 3932005f 5f4c4442 4c5f5245 Z 8192.__LDBL_RE
  0x00003790 44495231 286e616d 652c7072 6f746f2c DIR1(name,proto,
  0x000037a0 616c6961 7329206e 616d6520 70726f74 alias) name prot
  0x000037b0 6f005f5f 61747472 69627574 655f6d61 o.__attribute_ma
  0x000037c0 6c6c6f63 5f5f205f 5f617474 72696275 lloc__ __attribu
  0x000037d0 74655f5f 2028285f 5f6d616c 6c6f635f te__ ((__malloc_
  0x000037e0 5f292900 5f5f5549 4e543332 5f545950 _)).__UINT32_TYP
  0x000037f0 455f5f20 756e7369 676e6564 20696e74 E__ unsigned int
  0x00003800 005f5f4c 44424c5f 52454449 525f4e54 .__LDBL_REDIR_NT
  0x00003810 48286e61 6d652c70 726f746f 29206e61 H(name,proto) na
  0x00003820 6d652070 726f746f 205f5f54 48524f57 me proto __THROW
  0x00003830 005f5f55 53455f58 4f50454e 324b3800 .__USE_XOPEN2K8.
  0x00003840 5f494f5f 55505045 52434153 45203031 _IO_UPPERCASE 01
  0x00003850 30303000 505f746d 70646972 20222f74 000.P_tmpdir "/t
  0x00003860 6d702200 5f5f5245 44495245 43545f4e mp".__REDIRECT_N
  0x00003870 5448286e 616d652c 70726f74 6f2c616c TH(name,proto,al
  0x00003880 69617329 206e616d 65207072 6f746f20 ias) name proto 
  0x00003890 5f5f6173 6d5f5f20 285f5f41 534d4e41 __asm__ (__ASMNA
  0x000038a0 4d452028 23616c69 61732929 205f5f54 ME (#alias)) __T
  0x000038b0 48524f57 005f5f55 53455f58 4f50454e HROW.__USE_XOPEN
  0x000038c0 005f5f46 4c543132 385f4550 53494c4f .__FLT128_EPSILO
  0x000038d0 4e5f5f20 312e3932 35393239 39343433 N__ 1.9259299443
  0x000038e0 38373233 35383533 30353539 37373934 8723585305597794
  0x000038f0 32353834 39323733 32652d33 34463132 258492732e-34F12
  0x00003900 3800464f 50454e5f 4d415820 3136005f 8.FOPEN_MAX 16._
  0x00003910 494f5f46 494c455f 706c7573 005f504f IO_FILE_plus._PO
  0x00003920 5349585f 435f534f 55524345 005f5f54 SIX_C_SOURCE.__T
  0x00003930 48524f57 205f5f61 74747269 62757465 HROW __attribute
  0x00003940 5f5f2028 285f5f6e 6f746872 6f775f5f __ ((__nothrow__
  0x00003950 205f5f4c 45414629 29005f5f 53495a45  __LEAF)).__SIZE
  0x00003960 4f465f4c 4f4e475f 4c4f4e47 5f5f2038 OF_LONG_LONG__ 8
  0x00003970 005f5641 5f4c4953 545f4445 46494e45 ._VA_LIST_DEFINE
  0x00003980 4420005f 5f55494e 545f4641 53543332 D .__UINT_FAST32
  0x00003990 5f545950 455f5f20 6c6f6e67 20756e73 _TYPE__ long uns
  0x000039a0 69676e65 6420696e 74005f5f 53485254 igned int.__SHRT
  0x000039b0 5f574944 54485f5f 20313600 5f5f5353 _WIDTH__ 16.__SS
  0x000039c0 45325f4d 4154485f 5f203100 5f5f5353 E2_MATH__ 1.__SS
  0x000039d0 495a455f 545f5459 5045205f 5f53574f IZE_T_TYPE __SWO
  0x000039e0 52445f54 59504500 5f5f5336 345f5459 RD_TYPE.__S64_TY
  0x000039f0 5045206c 6f6e6720 696e7400 5f5f6174 PE long int.__at
  0x00003a00 74726962 7574655f 70757265 5f5f205f tribute_pure__ _
  0x00003a10 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00003a20 5f707572 655f5f29 29005f5f 494e544d _pure__)).__INTM
  0x00003a30 41585f43 28632920 63202323 204c005f AX_C(c) c ## L._
  0x00003a40 494f5f69 636f6e76 5f74205f 475f6963 IO_iconv_t _G_ic
  0x00003a50 6f6e765f 74005f5f 494e545f 46415354 onv_t.__INT_FAST
  0x00003a60 33325f57 49445448 5f5f2036 34005f5f 32_WIDTH__ 64.__
  0x00003a70 5553455f 584f5045 4e324b38 2031005f USE_XOPEN2K8 1._
  0x00003a80 5f494e54 5f4c4541 53543634 5f574944 _INT_LEAST64_WID
  0x00003a90 54485f5f 20363400 5f5f474c 4942435f TH__ 64.__GLIBC_
  0x00003aa0 5553455f 4945435f 36303535 395f5459 USE_IEC_60559_TY
  0x00003ab0 5045535f 45585420 30005f5f 494e5438 PES_EXT 0.__INT8
  0x00003ac0 5f432863 29206300 5f5f5349 5a454f46 _C(c) c.__SIZEOF
  0x00003ad0 5f504f49 4e544552 5f5f2038 005f5f46 _POINTER__ 8.__F
  0x00003ae0 4c543634 5f455053 494c4f4e 5f5f2032 LT64_EPSILON__ 2
  0x00003af0 2e323230 34343630 34393235 30333133 .220446049250313
  0x00003b00 30383038 34373236 33333336 31383136 0808472633361816
  0x00003b10 34303632 652d3136 46363400 5f494f5f 4062e-16F64._IO_
  0x00003b20 76615f6c 69737420 5f475f76 615f6c69 va_list _G_va_li
  0x00003b30 7374005f 5f464c54 3634585f 4d414e54 st.__FLT64X_MANT
  0x00003b40 5f444947 5f5f2036 34005f44 45464155 _DIG__ 64._DEFAU
  0x00003b50 4c545f53 4f555243 45005f5f 57434841 LT_SOURCE.__WCHA
  0x00003b60 525f4d41 585f5f20 30783766 66666666 R_MAX__ 0x7fffff
  0x00003b70 6666005f 494f5f42 55465349 5a205f47 ff._IO_BUFSIZ _G
  0x00003b80 5f425546 53495a00 5f5f4653 46494c43 _BUFSIZ.__FSFILC
  0x00003b90 4e545f54 5f545950 45205f5f 53595343 NT_T_TYPE __SYSC
  0x00003ba0 414c4c5f 554c4f4e 475f5459 5045005f ALL_ULONG_TYPE._
  0x00003bb0 494f5f42 41445f53 45454e20 30783430 IO_BAD_SEEN 0x40
  0x00003bc0 3030005f 5f776172 6e617474 72286d73 00.__warnattr(ms
  0x00003bd0 6729205f 5f617474 72696275 74655f5f g) __attribute__
  0x00003be0 28285f5f 7761726e 696e675f 5f20286d ((__warning__ (m
  0x00003bf0 73672929 29005f5f 494e545f 57494454 sg))).__INT_WIDT
  0x00003c00 485f5f20 3332005f 5f4c4442 4c5f4445 H__ 32.__LDBL_DE
  0x00003c10 43494d41 4c5f4449 475f5f20 3231005f CIMAL_DIG__ 21._
  0x00003c20 5f474343 5f41544f 4d49435f 504f494e _GCC_ATOMIC_POIN
  0x00003c30 5445525f 4c4f434b 5f465245 45203200 TER_LOCK_FREE 2.
  0x00003c40 5f5f7374 75625f5f 5f636f6d 7061745f __stub___compat_
  0x00003c50 6264666c 75736820 00464f50 454e5f4d bdflush .FOPEN_M
  0x00003c60 4158005f 6c6f636b 005f5f53 45475f46 AX._lock.__SEG_F
  0x00003c70 53203100 5f5f5028 61726773 29206172 S 1.__P(args) ar
  0x00003c80 6773005f 5f54494d 455f545f 54595045 gs.__TIME_T_TYPE
  0x00003c90 205f5f53 59534341 4c4c5f53 4c4f4e47  __SYSCALL_SLONG
  0x00003ca0 5f545950 45005f5f 55494e54 5f464153 _TYPE.__UINT_FAS
  0x00003cb0 5431365f 54595045 5f5f206c 6f6e6720 T16_TYPE__ long 
  0x00003cc0 756e7369 676e6564 20696e74 005f5f47 unsigned int.__G
  0x00003cd0 4c494243 5f5f2032 005f494f 5f737464 LIBC__ 2._IO_std
  0x00003ce0 6f757420 28285f49 4f5f4649 4c452a29 out ((_IO_FILE*)
  0x00003cf0 28265f49 4f5f325f 315f7374 646f7574 (&_IO_2_1_stdout
  0x00003d00 5f292900 5f5f5553 45525f4c 4142454c _)).__USER_LABEL
  0x00003d10 5f505245 4649585f 5f20005f 494f5f70 _PREFIX__ ._IO_p
  0x00003d20 69645f74 205f5f70 69645f74 005f5f67 id_t __pid_t.__g
  0x00003d30 6c696263 5f6d6163 726f5f77 61726e69 libc_macro_warni
  0x00003d40 6e673128 6d657373 61676529 205f5072 ng1(message) _Pr
  0x00003d50 61676d61 2028236d 65737361 67652900 agma (#message).
  0x00003d60 5f5f4743 435f4154 4f4d4943 5f434841 __GCC_ATOMIC_CHA
  0x00003d70 5233325f 545f4c4f 434b5f46 52454520 R32_T_LOCK_FREE 
  0x00003d80 32005f6f 6c645f6f 66667365 74005f49 2._old_offset._I
  0x00003d90 4f5f4649 4c45005f 494f5f55 4e425546 O_FILE._IO_UNBUF
  0x00003da0 46455245 44203200 5f5f4348 41525f42 FERED 2.__CHAR_B
  0x00003db0 49545f5f 2038005f 5f434c4f 434b5f54 IT__ 8.__CLOCK_T
  0x00003dc0 5f545950 45205f5f 53595343 414c4c5f _TYPE __SYSCALL_
  0x00003dd0 534c4f4e 475f5459 5045005f 5f41544f SLONG_TYPE.__ATO
  0x00003de0 4d49435f 52454c41 58454420 30005f49 MIC_RELAXED 0._I
  0x00003df0 4f5f7373 697a655f 74205f5f 7373697a O_ssize_t __ssiz
  0x00003e00 655f7400 5f5f5354 44435f48 4f535445 e_t.__STDC_HOSTE
  0x00003e10 445f5f20 31005f5f 53495a45 5f574944 D__ 1.__SIZE_WID
  0x00003e20 54485f5f 20363400 5f5f5245 44495245 TH__ 64.__REDIRE
  0x00003e30 43545f4c 44424c28 6e616d65 2c70726f CT_LDBL(name,pro
  0x00003e40 746f2c61 6c696173 29205f5f 52454449 to,alias) __REDI
  0x00003e50 52454354 20286e61 6d652c20 70726f74 RECT (name, prot
  0x00003e60 6f2c2061 6c696173 29005f5f 616c7761 o, alias).__alwa
  0x00003e70 79735f69 6e6c696e 65005f5f 6861735f ys_inline.__has_
  0x00003e80 696e636c 75646528 53545229 205f5f68 include(STR) __h
  0x00003e90 61735f69 6e636c75 64655f5f 28535452 as_include__(STR
  0x00003ea0 29005f5f 6e656564 5f5f5f76 615f6c69 ).__need___va_li
  0x00003eb0 73742000 5f5f4153 4d4e414d 45322870 st .__ASMNAME2(p
  0x00003ec0 72656669 782c636e 616d6529 205f5f53 refix,cname) __S
  0x00003ed0 5452494e 47202870 72656669 78292063 TRING (prefix) c
  0x00003ee0 6e616d65 005f494f 5f534349 454e5449 name._IO_SCIENTI
  0x00003ef0 46494320 30343030 30005f49 4f5f7065 FIC 04000._IO_pe
  0x00003f00 656b635f 756e6c6f 636b6564 285f6670 ekc_unlocked(_fp
  0x00003f10 2920285f 494f5f42 45202828 5f667029 ) (_IO_BE ((_fp)
  0x00003f20 2d3e5f49 4f5f7265 61645f70 7472203e ->_IO_read_ptr >
  0x00003f30 3d20285f 6670292d 3e5f494f 5f726561 = (_fp)->_IO_rea
  0x00003f40 645f656e 642c2030 29202626 205f5f75 d_end, 0) && __u
  0x00003f50 6e646572 666c6f77 20285f66 7029203d nderflow (_fp) =
  0x00003f60 3d20454f 46203f20 454f4620 3a202a28 = EOF ? EOF : *(
  0x00003f70 756e7369 676e6564 20636861 72202a29 unsigned char *)
  0x00003f80 20285f66 70292d3e 5f494f5f 72656164  (_fp)->_IO_read
  0x00003f90 5f707472 29005f5f 4c4f4e47 5f574944 _ptr).__LONG_WID
  0x00003fa0 54485f5f 20363400 5f5f5549 4e543634 TH__ 64.__UINT64
  0x00003fb0 5f4d4158 5f5f2030 78666666 66666666 _MAX__ 0xfffffff
  0x00003fc0 66666666 66666666 66554c00 5f5f5351 fffffffffUL.__SQ
  0x00003fd0 5541445f 54595045 206c6f6e 6720696e UAD_TYPE long in
  0x00003fe0 74005f5f 5553455f 584f5045 4e324b58 t.__USE_XOPEN2KX
  0x00003ff0 5349005f 5f617474 72696275 74655f61 SI.__attribute_a
  0x00004000 6c6c6f63 5f73697a 655f5f28 70617261 lloc_size__(para
  0x00004010 6d732920 5f5f6174 74726962 7574655f ms) __attribute_
  0x00004020 5f202828 5f5f616c 6c6f635f 73697a65 _ ((__alloc_size
  0x00004030 5f5f2070 6172616d 73292900 5f494f5f __ params))._IO_
  0x00004040 77696e74 5f742077 696e745f 74005f5f wint_t wint_t.__
  0x00004050 6b382031 005f5f47 43435f41 544f4d49 k8 1.__GCC_ATOMI
  0x00004060 435f4c4c 4f4e475f 4c4f434b 5f465245 C_LLONG_LOCK_FRE
  0x00004070 45203200 5f5f4445 4336345f 4d494e5f E 2.__DEC64_MIN_
  0x00004080 4558505f 5f20282d 33383229 005f5f72 EXP__ (-382).__r
  0x00004090 65737472 6963745f 61727220 5f5f7265 estrict_arr __re
  0x000040a0 73747269 6374005f 5f41544f 4d49435f strict.__ATOMIC_
  0x000040b0 4143515f 52454c20 34005f49 4f5f6670 ACQ_REL 4._IO_fp
  0x000040c0 6f735f74 205f475f 66706f73 5f74005f os_t _G_fpos_t._
  0x000040d0 5f617474 72696275 74655f66 6f726d61 _attribute_forma
  0x000040e0 745f7374 72666d6f 6e5f5f28 612c6229 t_strfmon__(a,b)
  0x000040f0 205f5f61 74747269 62757465 5f5f2028  __attribute__ (
  0x00004100 285f5f66 6f726d61 745f5f20 285f5f73 (__format__ (__s
  0x00004110 7472666d 6f6e5f5f 2c20612c 20622929 trfmon__, a, b))
  0x00004120 29005f5f 44454333 325f4d49 4e5f4558 ).__DEC32_MIN_EX
  0x00004130 505f5f20 282d3934 29005f49 4f5f4649 P__ (-94)._IO_FI
  0x00004140 58454420 30313030 3030005f 5f494e54 XED 010000.__INT
  0x00004150 36345f54 5950455f 5f206c6f 6e672069 64_TYPE__ long i
  0x00004160 6e74005f 5f464c54 5f4d494e 5f5f2031 nt.__FLT_MIN__ 1
  0x00004170 2e313735 34393433 35303832 32323837 .175494350822287
  0x00004180 35303739 36383733 36353337 32323232 5079687365372222
  0x00004190 34353638 652d3338 46005f5f 5536345f 4568e-38F.__U64_
  0x000041a0 54595045 20756e73 69676e65 64206c6f TYPE unsigned lo
  0x000041b0 6e672069 6e74005f 73627566 005f494f ng int._sbuf._IO
  0x000041c0 5f76615f 6c697374 00737464 6f757420 _va_list.stdout 
  0x000041d0 7374646f 7574005f 5f555345 5f474e55 stdout.__USE_GNU
  0x000041e0 005f5f54 494d4552 5f545f54 59504520 .__TIMER_T_TYPE 
  0x000041f0 766f6964 202a005f 494f5f77 72697465 void *._IO_write
  0x00004200 5f707472 005f5f46 5853525f 5f203100 _ptr.__FXSR__ 1.
  0x00004210 5f5f4c45 41465f41 54545220 5f5f6174 __LEAF_ATTR __at
  0x00004220 74726962 7574655f 5f202828 5f5f6c65 tribute__ ((__le
  0x00004230 61665f5f 2929005f 5f494e54 385f5459 af__)).__INT8_TY
  0x00004240 50455f5f 20736967 6e656420 63686172 PE__ signed char
  0x00004250 005f5f49 4e545f4c 45415354 33325f57 .__INT_LEAST32_W
  0x00004260 49445448 5f5f2033 32005f5f 53595343 IDTH__ 32.__SYSC
  0x00004270 414c4c5f 534c4f4e 475f5459 5045205f ALL_SLONG_TYPE _
  0x00004280 5f534c4f 4e47574f 52445f54 59504500 _SLONGWORD_TYPE.
  0x00004290 5f5f5549 4e544d41 585f4d41 585f5f20 __UINTMAX_MAX__ 
  0x000042a0 30786666 66666666 66666666 66666666 0xffffffffffffff
  0x000042b0 6666554c 005f5f67 6c696263 5f636c61 ffUL.__glibc_cla
  0x000042c0 6e675f70 72657265 71286d61 6a2c6d69 ng_prereq(maj,mi
  0x000042d0 6e292030 005f494f 5f626163 6b75705f n) 0._IO_backup_
  0x000042e0 62617365 005f5f6c 696e7578 5f5f2031 base.__linux__ 1
  0x000042f0 005f5f50 49435f5f 2032005f 5f494e54 .__PIC__ 2.__INT
  0x00004300 5f4c4541 53543332 5f545950 455f5f20 _LEAST32_TYPE__ 
  0x00004310 696e7400 5f5f5549 4e545f4c 45415354 int.__UINT_LEAST
  0x00004320 36345f54 5950455f 5f206c6f 6e672075 64_TYPE__ long u
  0x00004330 6e736967 6e656420 696e7400 5f494f5f nsigned int._IO_
  0x00004340 70757463 5f756e6c 6f636b65 64285f63 putc_unlocked(_c
  0x00004350 682c5f66 70292028 5f494f5f 42452028 h,_fp) (_IO_BE (
  0x00004360 285f6670 292d3e5f 494f5f77 72697465 (_fp)->_IO_write
  0x00004370 5f707472 203e3d20 285f6670 292d3e5f _ptr >= (_fp)->_
  0x00004380 494f5f77 72697465 5f656e64 2c203029 IO_write_end, 0)
  0x00004390 203f205f 5f6f7665 72666c6f 7720285f  ? __overflow (_
  0x000043a0 66702c20 28756e73 69676e65 64206368 fp, (unsigned ch
  0x000043b0 61722920 285f6368 2929203a 2028756e ar) (_ch)) : (un
  0x000043c0 7369676e 65642063 68617229 20282a28 signed char) (*(
  0x000043d0 5f667029 2d3e5f49 4f5f7772 6974655f _fp)->_IO_write_
  0x000043e0 7074722b 2b203d20 285f6368 29292900 ptr++ = (_ch))).
  0x000043f0 5f504f53 49585f53 4f555243 45203100 _POSIX_SOURCE 1.
  0x00004400 5f494f5f 444f4e54 5f434c4f 53452030 _IO_DONT_CLOSE 0
  0x00004410 31303030 3030005f 5f474c49 42435f55 100000.__GLIBC_U
  0x00004420 53455f49 45435f36 30353539 5f424650 SE_IEC_60559_BFP
  0x00004430 5f455854 005f5f53 495a455f 4d41585f _EXT.__SIZE_MAX_
  0x00004440 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00004450 66666666 554c005f 5f554944 5f545f54 ffffUL.__UID_T_T
  0x00004460 59504520 5f5f5533 325f5459 5045005f YPE __U32_TYPE._
  0x00004470 5f554c4f 4e47574f 52445f54 59504520 _ULONGWORD_TYPE 
  0x00004480 756e7369 676e6564 206c6f6e 6720696e unsigned long in
  0x00004490 74005f5f 4743435f 41544f4d 49435f53 t.__GCC_ATOMIC_S
  0x000044a0 484f5254 5f4c4f43 4b5f4652 45452032 HORT_LOCK_FREE 2
  0x000044b0 005f5f46 4c543634 585f4445 43494d41 .__FLT64X_DECIMA
  0x000044c0 4c5f4449 475f5f20 32310053 45454b5f L_DIG__ 21.SEEK_
  0x000044d0 53455420 30005f5f 5553455f 584f5045 SET 0.__USE_XOPE
  0x000044e0 4e5f4558 54454e44 4544005f 5f494e54 N_EXTENDED.__INT
  0x000044f0 5f464153 5431365f 4d41585f 5f203078 _FAST16_MAX__ 0x
  0x00004500 37666666 66666666 66666666 66666666 7fffffffffffffff
  0x00004510 4c005f5f 464c545f 4d41585f 4558505f L.__FLT_MAX_EXP_
  0x00004520 5f203132 38005f5f 464c5436 345f4d49 _ 128.__FLT64_MI
  0x00004530 4e5f4558 505f5f20 282d3130 32312900 N_EXP__ (-1021).
  0x00004540 5f494f53 5f415050 454e4420 38005f5f _IOS_APPEND 8.__
  0x00004550 474c4942 435f494e 5445524e 414c5f53 GLIBC_INTERNAL_S
  0x00004560 54415254 494e475f 48454144 45525f49 TARTING_HEADER_I
  0x00004570 4d504c45 4d454e54 4154494f 4e005f5f MPLEMENTATION.__
  0x00004580 464c545f 4556414c 5f4d4554 484f445f FLT_EVAL_METHOD_
  0x00004590 54535f31 38363631 5f335f5f 2030005f TS_18661_3__ 0._
  0x000045a0 5f44424c 5f484153 5f494e46 494e4954 _DBL_HAS_INFINIT
  0x000045b0 595f5f20 31005f5f 61747472 69627574 Y__ 1.__attribut
  0x000045c0 655f7761 726e5f75 6e757365 645f7265 e_warn_unused_re
  0x000045d0 73756c74 5f5f205f 5f617474 72696275 sult__ __attribu
  0x000045e0 74655f5f 2028285f 5f776172 6e5f756e te__ ((__warn_un
  0x000045f0 75736564 5f726573 756c745f 5f292900 used_result__)).
  0x00004600 5f5f494e 5436345f 43286329 20632023 __INT64_C(c) c #
  0x00004610 23204c00 5f5f454e 445f4445 434c5320 # L.__END_DECLS 
  0x00004620 005f5f46 4c545f48 41535f51 55494554 .__FLT_HAS_QUIET
  0x00004630 5f4e414e 5f5f2031 005f5f53 495a454f _NAN__ 1.__SIZEO
  0x00004640 465f494e 545f5f20 34005f5f 434c4f43 F_INT__ 4.__CLOC
  0x00004650 4b49445f 545f5459 5045205f 5f533332 KID_T_TYPE __S32
  0x00004660 5f545950 45005f5f 494e545f 46415354 _TYPE.__INT_FAST
  0x00004670 31365f54 5950455f 5f206c6f 6e672069 16_TYPE__ long i
  0x00004680 6e74005f 5f535444 435f4945 435f3535 nt.__STDC_IEC_55
  0x00004690 395f5f20 31005f5f 44454331 32385f53 9__ 1.__DEC128_S
  0x000046a0 55424e4f 524d414c 5f4d494e 5f5f2030 UBNORMAL_MIN__ 0
  0x000046b0 2e303030 30303030 30303030 30303030 .000000000000000
  0x000046c0 30303030 30303030 30303030 30303030 0000000000000000
  0x000046d0 3031452d 36313433 444c005f 5f555345 01E-6143DL.__USE
  0x000046e0 5f4c4152 47454649 4c45005f 5f53495a _LARGEFILE.__SIZ
  0x000046f0 454f465f 464c4f41 5438305f 5f203136 EOF_FLOAT80__ 16
  0x00004700 005f5f46 4c543332 585f4841 535f5155 .__FLT32X_HAS_QU
  0x00004710 4945545f 4e414e5f 5f203100 5f5f4442 IET_NAN__ 1.__DB
  0x00004720 4c5f4d41 585f3130 5f455850 5f5f2033 L_MAX_10_EXP__ 3
  0x00004730 3038005f 5f555345 5f4d4953 43203100 08.__USE_MISC 1.
  0x00004740 5f5f4758 585f4142 495f5645 5253494f __GXX_ABI_VERSIO
  0x00004750 4e203130 3131005f 5f706963 5f5f2032 N 1011.__pic__ 2
  0x00004760 005f5f41 544f4d49 435f5245 4c454153 .__ATOMIC_RELEAS
  0x00004770 45203300 5f5f5353 455f5f20 31005f49 E 3.__SSE__ 1._I
  0x00004780 4f5f4e4f 5f524541 44532034 005f5f47 O_NO_READS 4.__G
  0x00004790 4c494243 5f555345 5f494543 5f363035 LIBC_USE_IEC_605
  0x000047a0 35395f46 554e4353 5f455854 2030006d 59_FUNCS_EXT 0.m
  0x000047b0 61696e00 5f53495a 45545f20 005f5f46 ain._SIZET_ .__F
  0x000047c0 4c543132 385f4445 4e4f524d 5f4d494e LT128_DENORM_MIN
  0x000047d0 5f5f2036 2e343735 31373531 31393433 __ 6.47517511943
  0x000047e0 38303235 31313039 32343433 38393538 8025110924438958
  0x000047f0 32323736 34363535 652d3439 36364631 22764655e-4966F1
  0x00004800 3238005f 5f474c49 42435f55 53455f49 28.__GLIBC_USE_I
  0x00004810 45435f36 30353539 5f424650 5f455854 EC_60559_BFP_EXT
  0x00004820 2030005f 5f737475 625f7265 766f6b65  0.__stub_revoke
  0x00004830 20005f5f 494e544d 41585f54 5950455f  .__INTMAX_TYPE_
  0x00004840 5f206c6f 6e672069 6e74005f 5f464c54 _ long int.__FLT
  0x00004850 5f4d494e 5f455850 5f5f2028 2d313235 _MIN_EXP__ (-125
  0x00004860 29005f5f 5353505f 5354524f 4e475f5f ).__SSP_STRONG__
  0x00004870 2033005f 5f657272 6f726465 636c286e  3.__errordecl(n
  0x00004880 616d652c 6d736729 20657874 65726e20 ame,msg) extern 
  0x00004890 766f6964 206e616d 65202876 6f696429 void name (void)
  0x000048a0 205f5f61 74747269 62757465 5f5f2828  __attribute__((
  0x000048b0 5f5f6572 726f725f 5f20286d 73672929 __error__ (msg))
  0x000048c0 29005f5f 44454331 32385f4d 41585f5f ).__DEC128_MAX__
  0x000048d0 20392e39 39393939 39393939 39393939  9.9999999999999
  0x000048e0 39393939 39393939 39393939 39393939 9999999999999999
  0x000048f0 39393939 45363134 34444c00 5f424954 9999E6144DL._BIT
  0x00004900 535f5354 44494f5f 4c494d5f 48203100 S_STDIO_LIM_H 1.
  0x00004910 5f5f4154 4f4d4943 5f484c45 5f414351 __ATOMIC_HLE_ACQ
  0x00004920 55495245 20363535 3336005f 5f4f4646 UIRE 65536.__OFF
  0x00004930 36345f54 5f545950 45205f5f 53515541 64_T_TYPE __SQUA
  0x00004940 445f5459 5045005f 5f555345 5f49534f D_TYPE.__USE_ISO
  0x00004950 43313100 5f494f5f 53544449 4f203034 C11._IO_STDIO 04
  0x00004960 30303030 005f5f44 45565f54 5f545950 0000.__DEV_T_TYP
  0x00004970 45205f5f 55515541 445f5459 5045005f E __UQUAD_TYPE._
  0x00004980 5f435055 5f4d4153 4b5f5459 5045205f _CPU_MASK_TYPE _
  0x00004990 5f535953 43414c4c 5f554c4f 4e475f54 _SYSCALL_ULONG_T
  0x000049a0 59504500 5f5f5549 4e545f4c 45415354 YPE.__UINT_LEAST
  0x000049b0 33325f4d 41585f5f 20307866 66666666 32_MAX__ 0xfffff
  0x000049c0 66666655 005f494f 5f424528 65787072 fffU._IO_BE(expr
  0x000049d0 2c726573 29205f5f 6275696c 74696e5f ,res) __builtin_
  0x000049e0 65787065 63742028 28657870 72292c20 expect ((expr), 
  0x000049f0 72657329 005f5f41 534d4e41 4d452863 res).__ASMNAME(c
  0x00004a00 6e616d65 29205f5f 41534d4e 414d4532 name) __ASMNAME2
  0x00004a10 20285f5f 55534552 5f4c4142 454c5f50  (__USER_LABEL_P
  0x00004a20 52454649 585f5f2c 20636e61 6d652900 REFIX__, cname).
  0x00004a30 5f5f464c 54333258 5f4d4158 5f31305f __FLT32X_MAX_10_
  0x00004a40 4558505f 5f203330 38005f5f 616d6436 EXP__ 308.__amd6
  0x00004a50 34203100 5f5f574f 52445349 5a452036 4 1.__WORDSIZE 6
  0x00004a60 34005f5f 756e6978 2031005f 63686169 4.__unix 1._chai
  0x00004a70 6e005f5f 464c5436 345f4445 4e4f524d n.__FLT64_DENORM
  0x00004a80 5f4d494e 5f5f2034 2e393430 36353634 _MIN__ 4.9406564
  0x00004a90 35383431 32343635 34343137 36353638 5841246544176568
  0x00004aa0 37393238 36383232 31333732 652d3332 792868221372e-32
  0x00004ab0 34463634 004c5f63 7465726d 69642039 4F64.L_ctermid 9
  0x00004ac0 005f5f50 54524449 46465f54 5950455f .__PTRDIFF_TYPE_
  0x00004ad0 5f206c6f 6e672069 6e74005f 5f464c54 _ long int.__FLT
  0x00004ae0 33325f4d 41585f31 305f4558 505f5f20 32_MAX_10_EXP__ 
  0x00004af0 3338005f 5f574f52 4453495a 455f5449 38.__WORDSIZE_TI
  0x00004b00 4d453634 5f434f4d 50415433 32203100 ME64_COMPAT32 1.
  0x00004b10 5f5f464c 54313238 5f444543 494d414c __FLT128_DECIMAL
  0x00004b20 5f444947 5f5f2033 36005f5f 50545244 _DIG__ 36.__PTRD
  0x00004b30 4946465f 57494454 485f5f20 3634005f IFF_WIDTH__ 64._
  0x00004b40 5f494e54 5f4c4541 53543332 5f4d4158 _INT_LEAST32_MAX
  0x00004b50 5f5f2030 78376666 66666666 66005f5f __ 0x7fffffff.__
  0x00004b60 55494e54 5f464153 5436345f 54595045 UINT_FAST64_TYPE
  0x00004b70 5f5f206c 6f6e6720 756e7369 676e6564 __ long unsigned
  0x00004b80 20696e74 005f5f73 7475625f 7373746b  int.__stub_sstk
  0x00004b90 20005f49 4f5f6670 6f733634 5f74205f  ._IO_fpos64_t _
  0x00004ba0 475f6670 6f733634 5f74005f 5f544852 G_fpos64_t.__THR
  0x00004bb0 4f574e4c 205f5f61 74747269 62757465 OWNL __attribute
  0x00004bc0 5f5f2028 285f5f6e 6f746872 6f775f5f __ ((__nothrow__
  0x00004bd0 2929005f 5f4c4442 4c5f4d41 585f3130 )).__LDBL_MAX_10
  0x00004be0 5f455850 5f5f2034 39333200 5f5f4445 _EXP__ 4932.__DE
  0x00004bf0 4336345f 4d494e5f 5f203145 2d333833 C64_MIN__ 1E-383
  0x00004c00 4444005f 5f464c54 33325f4d 41585f5f DD.__FLT32_MAX__
  0x00004c10 20332e34 30323832 33343636 33383532  3.4028234663852
  0x00004c20 38383539 38313137 30343138 33343834 8859811704183484
  0x00004c30 35313639 3235652b 33384633 32005f5f 516925e+38F32.__
  0x00004c40 44424c5f 45505349 4c4f4e5f 5f202828 DBL_EPSILON__ ((
  0x00004c50 646f7562 6c652932 2e323230 34343630 double)2.2204460
  0x00004c60 34393235 30333133 30383038 34373236 4925031308084726
  0x00004c70 33333336 31383136 34303632 652d3136 333618164062e-16
  0x00004c80 4c29005f 6375725f 636f6c75 6d6e005f L)._cur_column._
  0x00004c90 5f505241 474d415f 52454445 46494e45 _PRAGMA_REDEFINE
  0x00004ca0 5f455854 4e414d45 2031005f 5f534947 _EXTNAME 1.__SIG
  0x00004cb0 5f41544f 4d49435f 54595045 5f5f2069 _ATOMIC_TYPE__ i
  0x00004cc0 6e74005f 5f464c54 3634585f 44454e4f nt.__FLT64X_DENO
  0x00004cd0 524d5f4d 494e5f5f 20332e36 34353139 RM_MIN__ 3.64519
  0x00004ce0 39353331 38383234 37343630 32353238 9531882474602528
  0x00004cf0 34303539 33333631 39343139 3832652d 40593361941982e-
  0x00004d00 34393531 46363478 005f5f55 53455f50 4951F64x.__USE_P
  0x00004d10 4f534958 005f5f46 4c543132 385f4841 OSIX.__FLT128_HA
  0x00004d20 535f4445 4e4f524d 5f5f2031 005f494f S_DENORM__ 1._IO
  0x00004d30 5f435552 52454e54 4c595f50 55545449 _CURRENTLY_PUTTI
  0x00004d40 4e472030 78383030 005f5f44 424c5f44 NG 0x800.__DBL_D
  0x00004d50 4543494d 414c5f44 49475f5f 20313700 ECIMAL_DIG__ 17.
  0x00004d60 5f5f4c44 424c5f48 41535f44 454e4f52 __LDBL_HAS_DENOR
  0x00004d70 4d5f5f20 31005f75 6e757365 6432005f M__ 1._unused2._
  0x00004d80 494f5f62 75665f62 61736500 5f5f7374 IO_buf_base.__st
  0x00004d90 75625f6c 63686d6f 6420005f 5f464c54 ub_lchmod .__FLT
  0x00004da0 36345f4d 414e545f 4449475f 5f203533 64_MANT_DIG__ 53
  0x00004db0 005f5f44 45433634 5f4d414e 545f4449 .__DEC64_MANT_DI
  0x00004dc0 475f5f20 3136005f 5f464c54 5f484153 G__ 16.__FLT_HAS
  0x00004dd0 5f44454e 4f524d5f 5f203100 5f5f4445 _DENORM__ 1.__DE
  0x00004de0 43494d41 4c5f4449 475f5f20 323100   CIMAL_DIG__ 21.

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_import - offset : 0x10f
 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: add_float.c
 DW_MACRO_start_file - lineno: 31 filenum: 7 filename: /usr/x86_64-linux-gnu/include/stdc-predef.h
 DW_MACRO_import - offset : 0x917
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 1 filenum: 5 filename: /usr/x86_64-linux-gnu/include/stdio.h
 DW_MACRO_import - offset : 0x939
 DW_MACRO_start_file - lineno: 27 filenum: 8 filename: /usr/x86_64-linux-gnu/include/bits/libc-header-start.h
 DW_MACRO_undef_strp - lineno : 31 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION
 DW_MACRO_start_file - lineno: 33 filenum: 9 filename: /usr/x86_64-linux-gnu/include/features.h
 DW_MACRO_import - offset : 0x949
 DW_MACRO_start_file - lineno: 424 filenum: 10 filename: /usr/x86_64-linux-gnu/include/sys/cdefs.h
 DW_MACRO_import - offset : 0xae7
 DW_MACRO_start_file - lineno: 427 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 428 filenum: 12 filename: /usr/x86_64-linux-gnu/include/bits/long-double.h
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xc65
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 448 filenum: 13 filename: /usr/x86_64-linux-gnu/include/gnu/stubs.h
 DW_MACRO_start_file - lineno: 10 filenum: 14 filename: /usr/x86_64-linux-gnu/include/gnu/stubs-64.h
 DW_MACRO_import - offset : 0xcaf
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd07
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd3b
 DW_MACRO_start_file - lineno: 33 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xd4b
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 35 filenum: 3 filename: /usr/x86_64-linux-gnu/include/bits/types.h
 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPES_H 1
 DW_MACRO_start_file - lineno: 27 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xde2
 DW_MACRO_start_file - lineno: 130 filenum: 15 filename: /usr/x86_64-linux-gnu/include/bits/typesizes.h
 DW_MACRO_import - offset : 0xe40
 DW_MACRO_end_file
 DW_MACRO_undef_strp - lineno : 204 macro : __STD_TYPE
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 36 filenum: 16 filename: /usr/x86_64-linux-gnu/include/bits/types/__FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : ____FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 37 filenum: 17 filename: /usr/x86_64-linux-gnu/include/bits/types/FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : __FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_define_strp - lineno : 39 macro : _STDIO_USES_IOSTREAM 
 DW_MACRO_start_file - lineno: 41 filenum: 4 filename: /usr/x86_64-linux-gnu/include/bits/libio.h
 DW_MACRO_define_strp - lineno : 29 macro : _BITS_LIBIO_H 1
 DW_MACRO_start_file - lineno: 35 filenum: 18 filename: /usr/x86_64-linux-gnu/include/bits/_G_config.h
 DW_MACRO_import - offset : 0xf2e
 DW_MACRO_start_file - lineno: 19 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xf44
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 21 filenum: 19 filename: /usr/x86_64-linux-gnu/include/bits/types/__mbstate_t.h
 DW_MACRO_define_strp - lineno : 2 macro : ____mbstate_t_defined 1
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf64
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf8c
 DW_MACRO_start_file - lineno: 53 filenum: 20 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h
 DW_MACRO_import - offset : 0xfe4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xff4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x11c0
 DW_MACRO_start_file - lineno: 131 filenum: 21 filename: /usr/x86_64-linux-gnu/include/bits/stdio_lim.h
 DW_MACRO_import - offset : 0x1206
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x1234
 DW_MACRO_start_file - lineno: 781 filenum: 6 filename: /usr/x86_64-linux-gnu/include/bits/sys_errlist.h
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file

  Offset:                      0x10f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 0 macro : __STDC__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_VERSION__ 201112L
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_16__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_32__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_HOSTED__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_MINOR__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_PATCHLEVEL__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __VERSION__ "7.3.0"
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELAXED 0
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_SEQ_CST 5
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQUIRE 2
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELEASE 3
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQ_REL 4
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_CONSUME 1
 DW_MACRO_define_strp - lineno : 0 macro : __pic__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIC__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __pie__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIE__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FINITE_MATH_ONLY__ 0
 DW_MACRO_define_strp - lineno : 0 macro : _LP64 1
 DW_MACRO_define_strp - lineno : 0 macro : __LP64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SHORT__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_DOUBLE__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SIZE_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR_BIT__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412
 DW_MACRO_define_strp - lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_POINTER__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __has_include(STR) __has_include__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __has_include_next(STR) __has_include_next__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __GXX_ABI_VERSION 1011
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_MAX__ 0x7fffffffffffffffLL
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MIN__ 0U
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_C(c) c ## U
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559_COMPLEX 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD_TS_18661_3__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __DEC_EVAL_METHOD__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_RADIX__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MANT_DIG__ 113
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DIG__ 33
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DECIMAL_DIG__ 36
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MANT_DIG__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN_EXP__ (-94)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX_EXP__ 97
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN__ 1E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX__ 9.999999E96DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_EPSILON__ 1E-6DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MANT_DIG__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN_EXP__ (-382)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX_EXP__ 385
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN__ 1E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX__ 9.999999999999999E384DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_EPSILON__ 1E-15DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MANT_DIG__ 34
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN_EXP__ (-6142)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX_EXP__ 6145
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN__ 1E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_EPSILON__ 1E-33DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __REGISTER_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __USER_LABEL_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_STDC_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __NO_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_DWARF2_CFI_ASM 1
 DW_MACRO_define_strp - lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSP_STRONG__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WCHAR_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WINT_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __amd64 1
 DW_MACRO_define_strp - lineno : 0 macro : __amd64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT80__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_ACQUIRE 65536
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_RELEASE 131072
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __code_model_small__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __MMX__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FXSR__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_FS 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_GS 1
 DW_MACRO_define_strp - lineno : 0 macro : __gnu_linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix__ 1
 DW_MACRO_define_strp - lineno : 0 macro : unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __ELF__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_BID_FORMAT__ 1

  Offset:                      0x917
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _STDC_PREDEF_H 1
 DW_MACRO_define_strp - lineno : 38 macro : __STDC_IEC_559__ 1
 DW_MACRO_define_strp - lineno : 46 macro : __STDC_IEC_559_COMPLEX__ 1
 DW_MACRO_define_strp - lineno : 58 macro : __STDC_ISO_10646__ 201706L
 DW_MACRO_define_strp - lineno : 61 macro : __STDC_NO_THREADS__ 1

  Offset:                      0x939
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _STDIO_H 1
 DW_MACRO_define_strp - lineno : 26 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION 

  Offset:                      0x949
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _FEATURES_H 1
 DW_MACRO_undef_strp - lineno : 119 macro : __USE_ISOC11
 DW_MACRO_undef_strp - lineno : 120 macro : __USE_ISOC99
 DW_MACRO_undef_strp - lineno : 121 macro : __USE_ISOC95
 DW_MACRO_undef_strp - lineno : 122 macro : __USE_ISOCXX11
 DW_MACRO_undef_strp - lineno : 123 macro : __USE_POSIX
 DW_MACRO_undef_strp - lineno : 124 macro : __USE_POSIX2
 DW_MACRO_undef_strp - lineno : 125 macro : __USE_POSIX199309
 DW_MACRO_undef_strp - lineno : 126 macro : __USE_POSIX199506
 DW_MACRO_undef_strp - lineno : 127 macro : __USE_XOPEN
 DW_MACRO_undef_strp - lineno : 128 macro : __USE_XOPEN_EXTENDED
 DW_MACRO_undef_strp - lineno : 129 macro : __USE_UNIX98
 DW_MACRO_undef_strp - lineno : 130 macro : __USE_XOPEN2K
 DW_MACRO_undef_strp - lineno : 131 macro : __USE_XOPEN2KXSI
 DW_MACRO_undef_strp - lineno : 132 macro : __USE_XOPEN2K8
 DW_MACRO_undef_strp - lineno : 133 macro : __USE_XOPEN2K8XSI
 DW_MACRO_undef_strp - lineno : 134 macro : __USE_LARGEFILE
 DW_MACRO_undef_strp - lineno : 135 macro : __USE_LARGEFILE64
 DW_MACRO_undef_strp - lineno : 136 macro : __USE_FILE_OFFSET64
 DW_MACRO_undef_strp - lineno : 137 macro : __USE_MISC
 DW_MACRO_undef_strp - lineno : 138 macro : __USE_ATFILE
 DW_MACRO_undef_strp - lineno : 139 macro : __USE_GNU
 DW_MACRO_undef_strp - lineno : 140 macro : __USE_FORTIFY_LEVEL
 DW_MACRO_undef_strp - lineno : 141 macro : __KERNEL_STRICT_NAMES
 DW_MACRO_undef_strp - lineno : 142 macro : __GLIBC_USE_DEPRECATED_GETS
 DW_MACRO_define_strp - lineno : 147 macro : __KERNEL_STRICT_NAMES 
 DW_MACRO_define_strp - lineno : 158 macro : __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
 DW_MACRO_define_strp - lineno : 172 macro : __glibc_clang_prereq(maj,min) 0
 DW_MACRO_define_strp - lineno : 176 macro : __GLIBC_USE(F) __GLIBC_USE_ ## F
 DW_MACRO_undef_strp - lineno : 220 macro : _DEFAULT_SOURCE
 DW_MACRO_define_strp - lineno : 221 macro : _DEFAULT_SOURCE 1
 DW_MACRO_define_strp - lineno : 227 macro : __USE_ISOC11 1
 DW_MACRO_define_strp - lineno : 233 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 239 macro : __USE_ISOC95 1
 DW_MACRO_define_strp - lineno : 260 macro : __USE_POSIX_IMPLICITLY 1
 DW_MACRO_undef_strp - lineno : 262 macro : _POSIX_SOURCE
 DW_MACRO_define_strp - lineno : 263 macro : _POSIX_SOURCE 1
 DW_MACRO_undef_strp - lineno : 264 macro : _POSIX_C_SOURCE
 DW_MACRO_define_strp - lineno : 265 macro : _POSIX_C_SOURCE 200809L
 DW_MACRO_define_strp - lineno : 300 macro : __USE_POSIX 1
 DW_MACRO_define_strp - lineno : 304 macro : __USE_POSIX2 1
 DW_MACRO_define_strp - lineno : 308 macro : __USE_POSIX199309 1
 DW_MACRO_define_strp - lineno : 312 macro : __USE_POSIX199506 1
 DW_MACRO_define_strp - lineno : 316 macro : __USE_XOPEN2K 1
 DW_MACRO_undef_strp - lineno : 317 macro : __USE_ISOC95
 DW_MACRO_define_strp - lineno : 318 macro : __USE_ISOC95 1
 DW_MACRO_undef_strp - lineno : 319 macro : __USE_ISOC99
 DW_MACRO_define_strp - lineno : 320 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 324 macro : __USE_XOPEN2K8 1
 DW_MACRO_undef_strp - lineno : 325 macro : _ATFILE_SOURCE
 DW_MACRO_define_strp - lineno : 326 macro : _ATFILE_SOURCE 1
 DW_MACRO_define_strp - lineno : 368 macro : __USE_MISC 1
 DW_MACRO_define_strp - lineno : 372 macro : __USE_ATFILE 1
 DW_MACRO_define_strp - lineno : 387 macro : __USE_FORTIFY_LEVEL 0
 DW_MACRO_define_strp - lineno : 395 macro : __GLIBC_USE_DEPRECATED_GETS 0
 DW_MACRO_undef_strp - lineno : 410 macro : __GNU_LIBRARY__
 DW_MACRO_define_strp - lineno : 411 macro : __GNU_LIBRARY__ 6
 DW_MACRO_define_strp - lineno : 415 macro : __GLIBC__ 2
 DW_MACRO_define_strp - lineno : 416 macro : __GLIBC_MINOR__ 27
 DW_MACRO_define_strp - lineno : 418 macro : __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))

  Offset:                      0xae7
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _SYS_CDEFS_H 1
 DW_MACRO_undef - lineno : 34 macro : __P
 DW_MACRO_undef_strp - lineno : 35 macro : __PMT
 DW_MACRO_define_strp - lineno : 42 macro : __LEAF , __leaf__
 DW_MACRO_define_strp - lineno : 43 macro : __LEAF_ATTR __attribute__ ((__leaf__))
 DW_MACRO_define_strp - lineno : 55 macro : __THROW __attribute__ ((__nothrow__ __LEAF))
 DW_MACRO_define_strp - lineno : 56 macro : __THROWNL __attribute__ ((__nothrow__))
 DW_MACRO_define_strp - lineno : 57 macro : __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
 DW_MACRO_define_strp - lineno : 58 macro : __NTHNL(fct) __attribute__ ((__nothrow__)) fct
 DW_MACRO_define_strp - lineno : 89 macro : __glibc_clang_has_extension(ext) 0
 DW_MACRO_define_strp - lineno : 94 macro : __P(args) args
 DW_MACRO_define_strp - lineno : 95 macro : __PMT(args) args
 DW_MACRO_define_strp - lineno : 100 macro : __CONCAT(x,y) x ## y
 DW_MACRO_define_strp - lineno : 101 macro : __STRING(x) #x
 DW_MACRO_define_strp - lineno : 104 macro : __ptr_t void *
 DW_MACRO_define_strp - lineno : 112 macro : __BEGIN_DECLS 
 DW_MACRO_define_strp - lineno : 113 macro : __END_DECLS 
 DW_MACRO_define_strp - lineno : 118 macro : __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
 DW_MACRO_define_strp - lineno : 119 macro : __bos0(ptr) __builtin_object_size (ptr, 0)
 DW_MACRO_define_strp - lineno : 122 macro : __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 124 macro : __warnattr(msg) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 125 macro : __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
 DW_MACRO_define_strp - lineno : 138 macro : __flexarr []
 DW_MACRO_define_strp - lineno : 139 macro : __glibc_c99_flexarr_available 1
 DW_MACRO_define_strp - lineno : 169 macro : __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
 DW_MACRO_define_strp - lineno : 176 macro : __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
 DW_MACRO_define_strp - lineno : 178 macro : __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
 DW_MACRO_define_strp - lineno : 181 macro : __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
 DW_MACRO_define_strp - lineno : 182 macro : __ASMNAME2(prefix,cname) __STRING (prefix) cname
 DW_MACRO_define_strp - lineno : 203 macro : __attribute_malloc__ __attribute__ ((__malloc__))
 DW_MACRO_define_strp - lineno : 211 macro : __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
 DW_MACRO_define_strp - lineno : 221 macro : __attribute_pure__ __attribute__ ((__pure__))
 DW_MACRO_define_strp - lineno : 228 macro : __attribute_const__ __attribute__ ((__const__))
 DW_MACRO_define_strp - lineno : 237 macro : __attribute_used__ __attribute__ ((__used__))
 DW_MACRO_define_strp - lineno : 238 macro : __attribute_noinline__ __attribute__ ((__noinline__))
 DW_MACRO_define_strp - lineno : 246 macro : __attribute_deprecated__ __attribute__ ((__deprecated__))
 DW_MACRO_define_strp - lineno : 256 macro : __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
 DW_MACRO_define_strp - lineno : 269 macro : __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
 DW_MACRO_define_strp - lineno : 279 macro : __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
 DW_MACRO_define_strp - lineno : 288 macro : __nonnull(params) __attribute__ ((__nonnull__ params))
 DW_MACRO_define_strp - lineno : 296 macro : __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
 DW_MACRO_define_strp - lineno : 305 macro : __wur 
 DW_MACRO_undef_strp - lineno : 313 macro : __always_inline
 DW_MACRO_define_strp - lineno : 314 macro : __always_inline __inline __attribute__ ((__always_inline__))
 DW_MACRO_define_strp - lineno : 323 macro : __attribute_artificial__ __attribute__ ((__artificial__))
 DW_MACRO_define_strp - lineno : 341 macro : __extern_inline extern __inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 342 macro : __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 351 macro : __fortify_function __extern_always_inline __attribute_artificial__
 DW_MACRO_define_strp - lineno : 357 macro : __va_arg_pack() __builtin_va_arg_pack ()
 DW_MACRO_define_strp - lineno : 358 macro : __va_arg_pack_len() __builtin_va_arg_pack_len ()
 DW_MACRO_define_strp - lineno : 378 macro : __restrict_arr __restrict
 DW_MACRO_define_strp - lineno : 393 macro : __glibc_unlikely(cond) __builtin_expect ((cond), 0)
 DW_MACRO_define_strp - lineno : 394 macro : __glibc_likely(cond) __builtin_expect ((cond), 1)
 DW_MACRO_define_strp - lineno : 416 macro : __attribute_nonstring__ 

  Offset:                      0xc4f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 4 macro : __WORDSIZE 64
 DW_MACRO_define_strp - lineno : 12 macro : __WORDSIZE_TIME64_COMPAT32 1
 DW_MACRO_define_strp - lineno : 14 macro : __SYSCALL_WORDSIZE 64

  Offset:                      0xc65
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 450 macro : __LDBL_REDIR1(name,proto,alias) name proto
 DW_MACRO_define_strp - lineno : 451 macro : __LDBL_REDIR(name,proto) name proto
 DW_MACRO_define_strp - lineno : 452 macro : __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
 DW_MACRO_define_strp - lineno : 453 macro : __LDBL_REDIR_NTH(name,proto) name proto __THROW
 DW_MACRO_define_strp - lineno : 454 macro : __LDBL_REDIR_DECL(name) 
 DW_MACRO_define_strp - lineno : 456 macro : __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
 DW_MACRO_define_strp - lineno : 457 macro : __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
 DW_MACRO_define_strp - lineno : 468 macro : __glibc_macro_warning1(message) _Pragma (#message)
 DW_MACRO_define_strp - lineno : 469 macro : __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
 DW_MACRO_define_strp - lineno : 487 macro : __HAVE_GENERIC_SELECTION 1

  Offset:                      0xcaf
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 10 macro : __stub___compat_bdflush 
 DW_MACRO_define_strp - lineno : 11 macro : __stub_chflags 
 DW_MACRO_define_strp - lineno : 12 macro : __stub_fattach 
 DW_MACRO_define_strp - lineno : 13 macro : __stub_fchflags 
 DW_MACRO_define_strp - lineno : 14 macro : __stub_fdetach 
 DW_MACRO_define_strp - lineno : 15 macro : __stub_getmsg 
 DW_MACRO_define_strp - lineno : 16 macro : __stub_gtty 
 DW_MACRO_define_strp - lineno : 17 macro : __stub_lchmod 
 DW_MACRO_define_strp - lineno : 18 macro : __stub_putmsg 
 DW_MACRO_define_strp - lineno : 19 macro : __stub_revoke 
 DW_MACRO_define_strp - lineno : 20 macro : __stub_setlogin 
 DW_MACRO_define_strp - lineno : 21 macro : __stub_sigreturn 
 DW_MACRO_define_strp - lineno : 22 macro : __stub_sstk 
 DW_MACRO_define_strp - lineno : 23 macro : __stub_stty 

  Offset:                      0xd07
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 37 macro : __GLIBC_USE_LIB_EXT2
 DW_MACRO_define_strp - lineno : 42 macro : __GLIBC_USE_LIB_EXT2 0
 DW_MACRO_undef_strp - lineno : 47 macro : __GLIBC_USE_IEC_60559_BFP_EXT
 DW_MACRO_define_strp - lineno : 51 macro : __GLIBC_USE_IEC_60559_BFP_EXT 0
 DW_MACRO_undef_strp - lineno : 56 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT
 DW_MACRO_define_strp - lineno : 60 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT 0
 DW_MACRO_undef_strp - lineno : 65 macro : __GLIBC_USE_IEC_60559_TYPES_EXT
 DW_MACRO_define_strp - lineno : 69 macro : __GLIBC_USE_IEC_60559_TYPES_EXT 0

  Offset:                      0xd3b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 31 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 32 macro : __need_NULL 

  Offset:                      0xd4b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 187 macro : __size_t__ 
 DW_MACRO_define_strp - lineno : 188 macro : __SIZE_T__ 
 DW_MACRO_define_strp - lineno : 189 macro : _SIZE_T 
 DW_MACRO_define_strp - lineno : 190 macro : _SYS_SIZE_T_H 
 DW_MACRO_define_strp - lineno : 191 macro : _T_SIZE_ 
 DW_MACRO_define_strp - lineno : 192 macro : _T_SIZE 
 DW_MACRO_define_strp - lineno : 193 macro : __SIZE_T 
 DW_MACRO_define_strp - lineno : 194 macro : _SIZE_T_ 
 DW_MACRO_define_strp - lineno : 195 macro : _BSD_SIZE_T_ 
 DW_MACRO_define_strp - lineno : 196 macro : _SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 197 macro : _SIZE_T_DEFINED 
 DW_MACRO_define_strp - lineno : 198 macro : _BSD_SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 199 macro : _SIZE_T_DECLARED 
 DW_MACRO_define_strp - lineno : 200 macro : ___int_size_t_h 
 DW_MACRO_define_strp - lineno : 201 macro : _GCC_SIZE_T 
 DW_MACRO_define_strp - lineno : 202 macro : _SIZET_ 
 DW_MACRO_define_strp - lineno : 210 macro : __size_t 
 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xde2
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 98 macro : __S16_TYPE short int
 DW_MACRO_define_strp - lineno : 99 macro : __U16_TYPE unsigned short int
 DW_MACRO_define_strp - lineno : 100 macro : __S32_TYPE int
 DW_MACRO_define_strp - lineno : 101 macro : __U32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 102 macro : __SLONGWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 103 macro : __ULONGWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 117 macro : __SQUAD_TYPE long int
 DW_MACRO_define_strp - lineno : 118 macro : __UQUAD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 119 macro : __SWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 120 macro : __UWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 121 macro : __SLONG32_TYPE int
 DW_MACRO_define_strp - lineno : 122 macro : __ULONG32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 123 macro : __S64_TYPE long int
 DW_MACRO_define_strp - lineno : 124 macro : __U64_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 126 macro : __STD_TYPE typedef

  Offset:                      0xe40
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPESIZES_H 1
 DW_MACRO_define_strp - lineno : 34 macro : __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 35 macro : __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 38 macro : __DEV_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 39 macro : __UID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 40 macro : __GID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 41 macro : __INO_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 42 macro : __INO64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 43 macro : __MODE_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 45 macro : __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 46 macro : __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 51 macro : __OFF_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 52 macro : __OFF64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 53 macro : __PID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 54 macro : __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 55 macro : __RLIM64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 56 macro : __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 57 macro : __BLKCNT64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 58 macro : __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 59 macro : __FSBLKCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 60 macro : __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 61 macro : __FSFILCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 62 macro : __ID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 63 macro : __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 64 macro : __TIME_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 65 macro : __USECONDS_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 66 macro : __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 67 macro : __DADDR_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 68 macro : __KEY_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 69 macro : __CLOCKID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 70 macro : __TIMER_T_TYPE void *
 DW_MACRO_define_strp - lineno : 71 macro : __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 72 macro : __FSID_T_TYPE struct { int __val[2]; }
 DW_MACRO_define_strp - lineno : 73 macro : __SSIZE_T_TYPE __SWORD_TYPE
 DW_MACRO_define_strp - lineno : 74 macro : __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 80 macro : __OFF_T_MATCHES_OFF64_T 1
 DW_MACRO_define_strp - lineno : 83 macro : __INO_T_MATCHES_INO64_T 1
 DW_MACRO_define_strp - lineno : 86 macro : __RLIM_T_MATCHES_RLIM64_T 1
 DW_MACRO_define_strp - lineno : 92 macro : __FD_SETSIZE 1024

  Offset:                      0xf2e
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 5 macro : _BITS_G_CONFIG_H 1
 DW_MACRO_define_strp - lineno : 14 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 18 macro : __need_NULL 

  Offset:                      0xf44
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xf64
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 51 macro : _G_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 53 macro : _G_HAVE_MMAP 1
 DW_MACRO_define_strp - lineno : 54 macro : _G_HAVE_MREMAP 1
 DW_MACRO_define_strp - lineno : 56 macro : _G_IO_IO_FILE_VERSION 0x20001
 DW_MACRO_define_strp - lineno : 59 macro : _G_HAVE_ST_BLKSIZE defined (_STATBUF_ST_BLKSIZE)
 DW_MACRO_define_strp - lineno : 61 macro : _G_BUFSIZ 8192

  Offset:                      0xf8c
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 37 macro : _IO_fpos_t _G_fpos_t
 DW_MACRO_define_strp - lineno : 38 macro : _IO_fpos64_t _G_fpos64_t
 DW_MACRO_define_strp - lineno : 39 macro : _IO_size_t size_t
 DW_MACRO_define_strp - lineno : 40 macro : _IO_ssize_t __ssize_t
 DW_MACRO_define_strp - lineno : 41 macro : _IO_off_t __off_t
 DW_MACRO_define_strp - lineno : 42 macro : _IO_off64_t __off64_t
 DW_MACRO_define_strp - lineno : 43 macro : _IO_pid_t __pid_t
 DW_MACRO_define_strp - lineno : 44 macro : _IO_uid_t __uid_t
 DW_MACRO_define_strp - lineno : 45 macro : _IO_iconv_t _G_iconv_t
 DW_MACRO_define_strp - lineno : 46 macro : _IO_HAVE_ST_BLKSIZE _G_HAVE_ST_BLKSIZE
 DW_MACRO_define_strp - lineno : 47 macro : _IO_BUFSIZ _G_BUFSIZ
 DW_MACRO_define_strp - lineno : 48 macro : _IO_va_list _G_va_list
 DW_MACRO_define_strp - lineno : 49 macro : _IO_wint_t wint_t
 DW_MACRO_define_strp - lineno : 52 macro : __need___va_list 

  Offset:                      0xfe4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 34 macro : __need___va_list
 DW_MACRO_define_strp - lineno : 39 macro : __GNUC_VA_LIST 

  Offset:                      0xff4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 55 macro : _IO_va_list
 DW_MACRO_define_strp - lineno : 56 macro : _IO_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 63 macro : _IO_UNIFIED_JUMPTABLES 1
 DW_MACRO_define_strp - lineno : 66 macro : EOF (-1)
 DW_MACRO_define_strp - lineno : 81 macro : _IOS_INPUT 1
 DW_MACRO_define_strp - lineno : 82 macro : _IOS_OUTPUT 2
 DW_MACRO_define_strp - lineno : 83 macro : _IOS_ATEND 4
 DW_MACRO_define_strp - lineno : 84 macro : _IOS_APPEND 8
 DW_MACRO_define_strp - lineno : 85 macro : _IOS_TRUNC 16
 DW_MACRO_define_strp - lineno : 86 macro : _IOS_NOCREATE 32
 DW_MACRO_define_strp - lineno : 87 macro : _IOS_NOREPLACE 64
 DW_MACRO_define_strp - lineno : 88 macro : _IOS_BIN 128
 DW_MACRO_define_strp - lineno : 96 macro : _IO_MAGIC 0xFBAD0000
 DW_MACRO_define_strp - lineno : 97 macro : _OLD_STDIO_MAGIC 0xFABC0000
 DW_MACRO_define_strp - lineno : 98 macro : _IO_MAGIC_MASK 0xFFFF0000
 DW_MACRO_define_strp - lineno : 99 macro : _IO_USER_BUF 1
 DW_MACRO_define_strp - lineno : 100 macro : _IO_UNBUFFERED 2
 DW_MACRO_define_strp - lineno : 101 macro : _IO_NO_READS 4
 DW_MACRO_define_strp - lineno : 102 macro : _IO_NO_WRITES 8
 DW_MACRO_define_strp - lineno : 103 macro : _IO_EOF_SEEN 0x10
 DW_MACRO_define_strp - lineno : 104 macro : _IO_ERR_SEEN 0x20
 DW_MACRO_define_strp - lineno : 105 macro : _IO_DELETE_DONT_CLOSE 0x40
 DW_MACRO_define_strp - lineno : 106 macro : _IO_LINKED 0x80
 DW_MACRO_define_strp - lineno : 107 macro : _IO_IN_BACKUP 0x100
 DW_MACRO_define_strp - lineno : 108 macro : _IO_LINE_BUF 0x200
 DW_MACRO_define_strp - lineno : 109 macro : _IO_TIED_PUT_GET 0x400
 DW_MACRO_define_strp - lineno : 110 macro : _IO_CURRENTLY_PUTTING 0x800
 DW_MACRO_define_strp - lineno : 111 macro : _IO_IS_APPENDING 0x1000
 DW_MACRO_define_strp - lineno : 112 macro : _IO_IS_FILEBUF 0x2000
 DW_MACRO_define_strp - lineno : 113 macro : _IO_BAD_SEEN 0x4000
 DW_MACRO_define_strp - lineno : 114 macro : _IO_USER_LOCK 0x8000
 DW_MACRO_define_strp - lineno : 116 macro : _IO_FLAGS2_MMAP 1
 DW_MACRO_define_strp - lineno : 117 macro : _IO_FLAGS2_NOTCANCEL 2
 DW_MACRO_define_strp - lineno : 121 macro : _IO_FLAGS2_USER_WBUF 8
 DW_MACRO_define_strp - lineno : 130 macro : _IO_SKIPWS 01
 DW_MACRO_define_strp - lineno : 131 macro : _IO_LEFT 02
 DW_MACRO_define_strp - lineno : 132 macro : _IO_RIGHT 04
 DW_MACRO_define_strp - lineno : 133 macro : _IO_INTERNAL 010
 DW_MACRO_define_strp - lineno : 134 macro : _IO_DEC 020
 DW_MACRO_define_strp - lineno : 135 macro : _IO_OCT 040
 DW_MACRO_define_strp - lineno : 136 macro : _IO_HEX 0100
 DW_MACRO_define_strp - lineno : 137 macro : _IO_SHOWBASE 0200
 DW_MACRO_define_strp - lineno : 138 macro : _IO_SHOWPOINT 0400
 DW_MACRO_define_strp - lineno : 139 macro : _IO_UPPERCASE 01000
 DW_MACRO_define_strp - lineno : 140 macro : _IO_SHOWPOS 02000
 DW_MACRO_define_strp - lineno : 141 macro : _IO_SCIENTIFIC 04000
 DW_MACRO_define_strp - lineno : 142 macro : _IO_FIXED 010000
 DW_MACRO_define_strp - lineno : 143 macro : _IO_UNITBUF 020000
 DW_MACRO_define_strp - lineno : 144 macro : _IO_STDIO 040000
 DW_MACRO_define_strp - lineno : 145 macro : _IO_DONT_CLOSE 0100000
 DW_MACRO_define_strp - lineno : 146 macro : _IO_BOOLALPHA 0200000
 DW_MACRO_define_strp - lineno : 247 macro : _IO_file_flags _flags
 DW_MACRO_define_strp - lineno : 276 macro : __HAVE_COLUMN 
 DW_MACRO_define_strp - lineno : 323 macro : _IO_stdin ((_IO_FILE*)(&_IO_2_1_stdin_))
 DW_MACRO_define_strp - lineno : 324 macro : _IO_stdout ((_IO_FILE*)(&_IO_2_1_stdout_))
 DW_MACRO_define_strp - lineno : 325 macro : _IO_stderr ((_IO_FILE*)(&_IO_2_1_stderr_))
 DW_MACRO_define_strp - lineno : 399 macro : _IO_BE(expr,res) __builtin_expect ((expr), res)
 DW_MACRO_define_strp - lineno : 404 macro : _IO_getc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
 DW_MACRO_define_strp - lineno : 407 macro : _IO_peekc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)
 DW_MACRO_define_strp - lineno : 411 macro : _IO_putc_unlocked(_ch,_fp) (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
 DW_MACRO_define_strp - lineno : 430 macro : _IO_feof_unlocked(__fp) (((__fp)->_flags & _IO_EOF_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 431 macro : _IO_ferror_unlocked(__fp) (((__fp)->_flags & _IO_ERR_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 441 macro : _IO_PENDING_OUTPUT_COUNT(_fp) ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)
 DW_MACRO_define_strp - lineno : 448 macro : _IO_peekc(_fp) _IO_peekc_unlocked (_fp)
 DW_MACRO_define_strp - lineno : 449 macro : _IO_flockfile(_fp) 
 DW_MACRO_define_strp - lineno : 450 macro : _IO_funlockfile(_fp) 
 DW_MACRO_define_strp - lineno : 451 macro : _IO_ftrylockfile(_fp) 
 DW_MACRO_define_strp - lineno : 453 macro : _IO_cleanup_region_start(_fct,_fp) 
 DW_MACRO_define_strp - lineno : 456 macro : _IO_cleanup_region_end(_Doit) 
 DW_MACRO_define_strp - lineno : 459 macro : _IO_need_lock(_fp) (((_fp)->_flags2 & _IO_FLAGS2_NEED_LOCK) != 0)

  Offset:                      0x11c0
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 47 macro : _VA_LIST_DEFINED 
 DW_MACRO_define_strp - lineno : 61 macro : __off_t_defined 
 DW_MACRO_define_strp - lineno : 72 macro : __ssize_t_defined 
 DW_MACRO_define_strp - lineno : 87 macro : _IOFBF 0
 DW_MACRO_define_strp - lineno : 88 macro : _IOLBF 1
 DW_MACRO_define_strp - lineno : 89 macro : _IONBF 2
 DW_MACRO_define_strp - lineno : 94 macro : BUFSIZ _IO_BUFSIZ
 DW_MACRO_define_strp - lineno : 107 macro : SEEK_SET 0
 DW_MACRO_define_strp - lineno : 108 macro : SEEK_CUR 1
 DW_MACRO_define_strp - lineno : 109 macro : SEEK_END 2
 DW_MACRO_define_strp - lineno : 118 macro : P_tmpdir "/tmp"

  Offset:                      0x1206
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _BITS_STDIO_LIM_H 1
 DW_MACRO_define_strp - lineno : 25 macro : L_tmpnam 20
 DW_MACRO_define_strp - lineno : 26 macro : TMP_MAX 238328
 DW_MACRO_define_strp - lineno : 27 macro : FILENAME_MAX 4096
 DW_MACRO_define_strp - lineno : 30 macro : L_ctermid 9
 DW_MACRO_undef_strp - lineno : 36 macro : FOPEN_MAX
 DW_MACRO_define_strp - lineno : 37 macro : FOPEN_MAX 16

  Offset:                      0x1234
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 139 macro : stdin stdin
 DW_MACRO_define_strp - lineno : 140 macro : stdout stdout
 DW_MACRO_define_strp - lineno : 141 macro : stderr stderr
 DW_MACRO_define_strp - lineno : 488 macro : getc(_fp) _IO_getc (_fp)
 DW_MACRO_define_strp - lineno : 528 macro : putc(_ch,_fp) _IO_putc (_ch, _fp)


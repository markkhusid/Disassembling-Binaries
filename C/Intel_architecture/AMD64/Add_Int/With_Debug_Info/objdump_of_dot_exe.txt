
add_int_C_AMD64_ggdb3:     file format elf64-x86-64
add_int_C_AMD64_ggdb3
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000004f0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x00000000000007f8 memsz 0x00000000000007f8 flags r-x
    LOAD off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**21
         filesz 0x0000000000000220 memsz 0x0000000000000228 flags rw-
 DYNAMIC off    0x0000000000000e00 vaddr 0x0000000000200e00 paddr 0x0000000000200e00 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000006b4 vaddr 0x00000000000006b4 paddr 0x00000000000006b4 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**0
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000000004b8
  FINI                 0x00000000000006a4
  INIT_ARRAY           0x0000000000200df0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200df8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000348
  SYMTAB               0x00000000000002b8
  STRSZ                0x000000000000007d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fc0
  RELA                 0x00000000000003f8
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000003d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003c6
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000007d  0000000000000348  0000000000000348  00000348  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000c  00000000000003c6  00000000000003c6  000003c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  00000000000003f8  00000000000003f8  000003f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         00000017  00000000000004b8  00000000000004b8  000004b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          00000010  00000000000004d0  00000000000004d0  000004d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt.got      00000008  00000000000004e0  00000000000004e0  000004e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001b2  00000000000004f0  00000000000004f0  000004f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000000006a4  00000000000006a4  000006a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000004  00000000000006b0  00000000000006b0  000006b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  00000000000006b4  00000000000006b4  000006b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000108  00000000000006f0  00000000000006f0  000006f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000200df0  0000000000200df0  00000df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000200df8  0000000000200df8  00000df8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      000001c0  0000000000200e00  0000000000200e00  00000e00  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000040  0000000000200fc0  0000000000200fc0  00000fc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 23 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 24 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103a  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_info   0000036c  0000000000000000  0000000000000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_abbrev 00000105  0000000000000000  0000000000000000  000013d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_line   0000022c  0000000000000000  0000000000000000  000014db  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_str    00004dd4  0000000000000000  0000000000000000  00001707  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_macro  0000125b  0000000000000000  0000000000000000  000064db  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000348 l    d  .dynstr	0000000000000000              .dynstr
00000000000003c6 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000003d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000003f8 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000004b8 l    d  .init	0000000000000000              .init
00000000000004d0 l    d  .plt	0000000000000000              .plt
00000000000004e0 l    d  .plt.got	0000000000000000              .plt.got
00000000000004f0 l    d  .text	0000000000000000              .text
00000000000006a4 l    d  .fini	0000000000000000              .fini
00000000000006b0 l    d  .rodata	0000000000000000              .rodata
00000000000006b4 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000006f0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200df0 l    d  .init_array	0000000000000000              .init_array
0000000000200df8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200e00 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fc0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_macro	0000000000000000              .debug_macro
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000520 l     F .text	0000000000000000              deregister_tm_clones
0000000000000560 l     F .text	0000000000000000              register_tm_clones
00000000000005b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200df8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000005f0 l     F .text	0000000000000000              frame_dummy
0000000000200df0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              add_int.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000007f4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200df8 l       .init_array	0000000000000000              __init_array_end
0000000000200e00 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200df0 l       .init_array	0000000000000000              __init_array_start
00000000000006b4 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fc0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000000006a0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201010 g       .data	0000000000000000              _edata
00000000000006a4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
00000000000006b0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000630 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
00000000000004f0 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
00000000000005fa g     F .text	000000000000002b              main
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000004b8 g     F .init	0000000000000000              _init


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 ca9a17ac 8e8be2bd 89190e09 fc92742d  ..............t-
 0294 a5794865                             .yHe            
Contents of section .gnu.hash:
 0298 01000000 01000000 01000000 00000000  ................
 02a8 00000000 00000000 00000000           ............    
Contents of section .dynsym:
 02b8 00000000 00000000 00000000 00000000  ................
 02c8 00000000 00000000 38000000 20000000  ........8... ...
 02d8 00000000 00000000 00000000 00000000  ................
 02e8 1a000000 12000000 00000000 00000000  ................
 02f8 00000000 00000000 54000000 20000000  ........T... ...
 0308 00000000 00000000 00000000 00000000  ................
 0318 63000000 20000000 00000000 00000000  c... ...........
 0328 00000000 00000000 0b000000 22000000  ............"...
 0338 00000000 00000000 00000000 00000000  ................
Contents of section .dynstr:
 0348 006c6962 632e736f 2e36005f 5f637861  .libc.so.6.__cxa
 0358 5f66696e 616c697a 65005f5f 6c696263  _finalize.__libc
 0368 5f737461 72745f6d 61696e00 474c4942  _start_main.GLIB
 0378 435f322e 322e3500 5f49544d 5f646572  C_2.2.5._ITM_der
 0388 65676973 74657254 4d436c6f 6e655461  egisterTMCloneTa
 0398 626c6500 5f5f676d 6f6e5f73 74617274  ble.__gmon_start
 03a8 5f5f005f 49544d5f 72656769 73746572  __._ITM_register
 03b8 544d436c 6f6e6554 61626c65 00        TMCloneTable.   
Contents of section .gnu.version:
 03c6 00000000 02000000 00000200           ............    
Contents of section .gnu.version_r:
 03d8 01000100 01000000 10000000 00000000  ................
 03e8 751a6909 00000200 2c000000 00000000  u.i.....,.......
Contents of section .rela.dyn:
 03f8 f00d2000 00000000 08000000 00000000  .. .............
 0408 f0050000 00000000 f80d2000 00000000  .......... .....
 0418 08000000 00000000 b0050000 00000000  ................
 0428 08102000 00000000 08000000 00000000  .. .............
 0438 08102000 00000000 d80f2000 00000000  .. ....... .....
 0448 06000000 01000000 00000000 00000000  ................
 0458 e00f2000 00000000 06000000 02000000  .. .............
 0468 00000000 00000000 e80f2000 00000000  .......... .....
 0478 06000000 03000000 00000000 00000000  ................
 0488 f00f2000 00000000 06000000 04000000  .. .............
 0498 00000000 00000000 f80f2000 00000000  .......... .....
 04a8 06000000 05000000 00000000 00000000  ................
Contents of section .init:
 04b8 4883ec08 488b0525 0b200048 85c07402  H...H..%. .H..t.
 04c8 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 04d0 ff35f20a 2000ff25 f40a2000 0f1f4000  .5.. ..%.. ...@.
Contents of section .plt.got:
 04e0 ff25120b 20006690                    .%.. .f.        
Contents of section .text:
 04f0 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 0500 8d059a01 0000488d 0d230100 00488d3d  ......H..#...H.=
 0510 e6000000 ff15c60a 2000f40f 1f440000  ........ ....D..
 0520 488d3de9 0a200055 488d05e1 0a200048  H.=.. .UH.... .H
 0530 39f84889 e5741948 8b059a0a 20004885  9.H..t.H.... .H.
 0540 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 0550 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 0560 488d3da9 0a200048 8d35a20a 20005548  H.=.. .H.5.. .UH
 0570 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 0580 4801c648 d1fe7418 488b0561 0a200048  H..H..t.H..a. .H
 0590 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 05a0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 05b0 803d590a 20000075 2f48833d 370a2000  .=Y. ..u/H.=7. .
 05c0 00554889 e5740c48 8b3d3a0a 2000e80d  .UH..t.H.=:. ...
 05d0 ffffffe8 48ffffff c605310a 2000015d  ....H.....1. ..]
 05e0 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 05f0 554889e5 5de966ff ffff5548 89e5897d  UH..].f...UH...}
 0600 ec488975 e0c745f4 01000000 c745f809  .H.u..E......E..
 0610 0000008b 55f48b45 f801d089 45fcb800  ....U..E....E...
 0620 0000005d c3662e0f 1f840000 00000090  ...].f..........
 0630 41574156 4989d741 5541544c 8d25ae07  AWAVI..AUATL.%..
 0640 20005548 8d2dae07 20005341 89fd4989   .UH.-.. .SA..I.
 0650 f64c29e5 4883ec08 48c1fd03 e857feff  .L).H...H....W..
 0660 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 0670 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 0680 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 0690 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 06a0 f3c3                                 ..              
Contents of section .fini:
 06a4 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 06b0 01000200                             ....            
Contents of section .eh_frame_hdr:
 06b4 011b033b 38000000 06000000 1cfeffff  ...;8...........
 06c4 84000000 2cfeffff ac000000 3cfeffff  ....,.......<...
 06d4 54000000 46ffffff c4000000 7cffffff  T...F.......|...
 06e4 e4000000 ecffffff 2c010000           ........,...    
Contents of section .eh_frame:
 06f0 14000000 00000000 017a5200 01781001  .........zR..x..
 0700 1b0c0708 90010710 14000000 1c000000  ................
 0710 e0fdffff 2b000000 00000000 00000000  ....+...........
 0720 14000000 00000000 017a5200 01781001  .........zR..x..
 0730 1b0c0708 90010000 24000000 1c000000  ........$.......
 0740 90fdffff 10000000 000e1046 0e184a0f  ...........F..J.
 0750 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 0760 14000000 44000000 78fdffff 08000000  ....D...x.......
 0770 00000000 00000000 1c000000 5c000000  ............\...
 0780 7afeffff 2b000000 00410e10 8602430d  z...+....A....C.
 0790 06660c07 08000000 44000000 7c000000  .f......D...|...
 07a0 90feffff 65000000 00420e10 8f02420e  ....e....B....B.
 07b0 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 07c0 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 07d0 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 07e0 10000000 c4000000 b8feffff 02000000  ................
 07f0 00000000 00000000                    ........        
Contents of section .init_array:
 200df0 f0050000 00000000                    ........        
Contents of section .fini_array:
 200df8 b0050000 00000000                    ........        
Contents of section .dynamic:
 200e00 01000000 00000000 01000000 00000000  ................
 200e10 0c000000 00000000 b8040000 00000000  ................
 200e20 0d000000 00000000 a4060000 00000000  ................
 200e30 19000000 00000000 f00d2000 00000000  .......... .....
 200e40 1b000000 00000000 08000000 00000000  ................
 200e50 1a000000 00000000 f80d2000 00000000  .......... .....
 200e60 1c000000 00000000 08000000 00000000  ................
 200e70 f5feff6f 00000000 98020000 00000000  ...o............
 200e80 05000000 00000000 48030000 00000000  ........H.......
 200e90 06000000 00000000 b8020000 00000000  ................
 200ea0 0a000000 00000000 7d000000 00000000  ........}.......
 200eb0 0b000000 00000000 18000000 00000000  ................
 200ec0 15000000 00000000 00000000 00000000  ................
 200ed0 03000000 00000000 c00f2000 00000000  .......... .....
 200ee0 07000000 00000000 f8030000 00000000  ................
 200ef0 08000000 00000000 c0000000 00000000  ................
 200f00 09000000 00000000 18000000 00000000  ................
 200f10 1e000000 00000000 08000000 00000000  ................
 200f20 fbffff6f 00000000 01000008 00000000  ...o............
 200f30 feffff6f 00000000 d8030000 00000000  ...o............
 200f40 ffffff6f 00000000 01000000 00000000  ...o............
 200f50 f0ffff6f 00000000 c6030000 00000000  ...o............
 200f60 f9ffff6f 00000000 03000000 00000000  ...o............
 200f70 00000000 00000000 00000000 00000000  ................
 200f80 00000000 00000000 00000000 00000000  ................
 200f90 00000000 00000000 00000000 00000000  ................
 200fa0 00000000 00000000 00000000 00000000  ................
 200fb0 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 200fc0 000e2000 00000000 00000000 00000000  .. .............
 200fd0 00000000 00000000 00000000 00000000  ................
 200fe0 00000000 00000000 00000000 00000000  ................
 200ff0 00000000 00000000 00000000 00000000  ................
Contents of section .data:
 201000 00000000 00000000 08102000 00000000  .......... .....
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 fa050000 00000000 2b000000 00000000  ........+.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 68030000 04000000 00000801 a60b0000  h...............
 0010 0c4d2500 002a1200 00fa0500 00000000  .M%..*..........
 0020 002b0000 00000000 00000000 00000000  .+..............
 0030 0002d228 000002d8 3c000000 0308074a  ...(....<......J
 0040 39000003 01089026 00000302 070c0700  9......&........
 0050 00030407 481c0000 030106f7 41000003  ....H.......A...
 0060 02055824 00000404 05696e74 00030805  ..X$.....int....
 0070 a5390000 02471000 00038c6d 00000002  .9...G.....m....
 0080 990c0000 038d6d00 00000508 06089200  ......m.........
 0090 00000301 06fe4100 00079200 00000840  ......A........@
 00a0 3d0000d8 04f51e02 000009ad 26000004  =...........&...
 00b0 f6660000 000009e6 20000004 fb8c0000  .f...... .......
 00c0 00080912 33000004 fc8c0000 00100946  ....3..........F
 00d0 19000004 fd8c0000 001809ca 24000004  ............$...
 00e0 fe8c0000 002009a9 41000004 ff8c0000  ..... ..A.......
 00f0 00280aeb 05000004 00018c00 0000300a  .(............0.
 0100 4c4d0000 0401018c 00000038 0afe0200  LM.........8....
 0110 00040201 8c000000 400a0426 00000404  ........@..&....
 0120 018c0000 00480a87 42000004 05018c00  .....H..B.......
 0130 0000500a b10f0000 0406018c 00000058  ..P............X
 0140 0a010900 00040801 56020000 600a574a  ........V...`.WJ
 0150 0000040a 015c0200 00680ad9 16000004  .....\...h......
 0160 0c016600 0000700a 3a080000 04100166  ..f...p.:......f
 0170 00000074 0a343d00 00041201 74000000  ...t.4=.....t...
 0180 780a674c 00000416 014a0000 00800a5f  x.gL.....J....._
 0190 18000004 17015800 0000820a 64010000  ......X.....d...
 01a0 04180162 02000083 0a153c00 00041c01  ...b......<.....
 01b0 72020000 880a383d 00000425 017f0000  r.....8=...%....
 01c0 00900a46 2b000004 2d018a00 0000980a  ...F+...-.......
 01d0 4d2b0000 042e018a 000000a0 0a542b00  M+...........T+.
 01e0 00042f01 8a000000 a80a5b2b 00000430  ../.......[+...0
 01f0 018a0000 00b00a62 2b000004 32013100  .......b+...2.1.
 0200 0000b80a 5e1f0000 04330166 000000c0  ....^....3.f....
 0210 0a434d00 00043501 78020000 c4000b0f  .CM...5.x.......
 0220 02000004 9a08e81b 00001804 a0560200  .............V..
 0230 0009761a 000004a1 56020000 00096941  ..v.....V.....iA
 0240 000004a2 5c020000 0809d60e 000004a6  ....\...........
 0250 66000000 10000608 25020000 06089e00  f.......%.......
 0260 00000c92 00000072 0200000d 3c000000  .......r....<...
 0270 00000608 1e020000 0c920000 00880200  ................
 0280 000d3c00 00001300 0ec13800 000f3e25  ..<.......8...>%
 0290 0000043f 01880200 000fb425 00000440  ...?.......%...@
 02a0 01880200 000f0d1f 00000441 01880200  ...........A....
 02b0 00060899 00000007 b1020000 109a2200  ..............".
 02c0 0005875c 02000010 82410000 05885c02  ...\.....A....\.
 02d0 00001058 18000005 895c0200 00105616  ...X.....\....V.
 02e0 0000061a 66000000 0cb70200 00f30200  ....f...........
 02f0 00110007 e8020000 10411500 00061bf3  .........A......
 0300 02000012 33300000 01036600 0000fa05  ....30....f.....
 0310 00000000 00002b00 00000000 0000019c  ......+.........
 0320 65030000 13330700 00010366 00000002  e....3.....f....
 0330 915c13f4 1c000001 03650300 00029150  .\.......e.....P
 0340 14610001 05660000 00029164 14620001  .a...f.....d.b..
 0350 05660000 00029168 14630001 05660000  .f.....h.c...f..
 0360 0002916c 0006088c 00000000           ...l........    
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17994217 00000216 00030e3a 0b3b0b49  ..B........:.;.I
 0020 13000003 24000b0b 3e0b030e 00000424  ....$...>......$
 0030 000b0b3e 0b030800 00050f00 0b0b0000  ...>............
 0040 060f000b 0b491300 00072600 49130000  .....I....&.I...
 0050 08130103 0e0b0b3a 0b3b0b01 13000009  .......:.;......
 0060 0d00030e 3a0b3b0b 4913380b 00000a0d  ....:.;.I.8.....
 0070 00030e3a 0b3b0549 13380b00 000b1600  ...:.;.I.8......
 0080 030e3a0b 3b0b0000 0c010149 13011300  ..:.;......I....
 0090 000d2100 49132f0b 00000e13 00030e3c  ..!.I./........<
 00a0 1900000f 3400030e 3a0b3b05 49133f19  ....4...:.;.I.?.
 00b0 3c190000 10340003 0e3a0b3b 0b49133f  <....4...:.;.I.?
 00c0 193c1900 00112100 0000122e 013f1903  .<....!......?..
 00d0 0e3a0b3b 0b271949 13110112 07401897  .:.;.'.I.....@..
 00e0 42190113 00001305 00030e3a 0b3b0b49  B..........:.;.I
 00f0 13021800 00143400 03083a0b 3b0b4913  ......4...:.;.I.
 0100 02180000 00                          .....           
Contents of section .debug_line:
 0000 28020000 02000d02 00000101 fb0e0d00  (...............
 0010 01010101 00000001 0000012f 7573722f  .........../usr/
 0020 6c69622f 6763632f 7838365f 36342d6c  lib/gcc/x86_64-l
 0030 696e7578 2d676e75 2f372f69 6e636c75  inux-gnu/7/inclu
 0040 6465002f 7573722f 7838365f 36342d6c  de./usr/x86_64-l
 0050 696e7578 2d676e75 2f696e63 6c756465  inux-gnu/include
 0060 2f626974 73002f75 73722f78 38365f36  /bits./usr/x86_6
 0070 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 0080 75646500 2f757372 2f783836 5f36342d  ude./usr/x86_64-
 0090 6c696e75 782d676e 752f696e 636c7564  linux-gnu/includ
 00a0 652f7379 73002f75 73722f78 38365f36  e/sys./usr/x86_6
 00b0 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 00c0 7564652f 676e7500 2f757372 2f783836  ude/gnu./usr/x86
 00d0 5f36342d 6c696e75 782d676e 752f696e  _64-linux-gnu/in
 00e0 636c7564 652f6269 74732f74 79706573  clude/bits/types
 00f0 00006164 645f696e 742e6300 00000073  ..add_int.c....s
 0100 74646465 662e6800 01000074 79706573  tddef.h....types
 0110 2e680002 00006c69 62696f2e 68000200  .h....libio.h...
 0120 00737464 696f2e68 00030000 7379735f  .stdio.h....sys_
 0130 6572726c 6973742e 68000200 00737464  errlist.h....std
 0140 632d7072 65646566 2e680003 00006c69  c-predef.h....li
 0150 62632d68 65616465 722d7374 6172742e  bc-header-start.
 0160 68000200 00666561 74757265 732e6800  h....features.h.
 0170 03000063 64656673 2e680004 0000776f  ...cdefs.h....wo
 0180 72647369 7a652e68 00020000 6c6f6e67  rdsize.h....long
 0190 2d646f75 626c652e 68000200 00737475  -double.h....stu
 01a0 62732e68 00050000 73747562 732d3634  bs.h....stubs-64
 01b0 2e680005 00007479 70657369 7a65732e  .h....typesizes.
 01c0 68000200 005f5f46 494c452e 68000600  h....__FILE.h...
 01d0 0046494c 452e6800 0600005f 475f636f  .FILE.h...._G_co
 01e0 6e666967 2e680002 00005f5f 6d627374  nfig.h....__mbst
 01f0 6174655f 742e6800 06000073 74646172  ate_t.h....stdar
 0200 672e6800 01000073 7464696f 5f6c696d  g.h....stdio_lim
 0210 2e680002 00000000 0902fa05 00000000  .h..............
 0220 000015af 7576f302 02000101           ....uv......    
Contents of section .debug_str:
 0000 5f494f5f 44454320 30323000 5f5f5349  _IO_DEC 020.__SI
 0010 475f4154 4f4d4943 5f4d4158 5f5f2030  G_ATOMIC_MAX__ 0
 0020 78376666 66666666 66005f5f 464c5436  x7fffffff.__FLT6
 0030 345f4841 535f5155 4945545f 4e414e5f  4_HAS_QUIET_NAN_
 0040 5f203100 5f53495a 455f545f 44454649  _ 1._SIZE_T_DEFI
 0050 4e454420 005f494f 5f49535f 46494c45  NED ._IO_IS_FILE
 0060 42554620 30783230 3030005f 5f444543  BUF 0x2000.__DEC
 0070 36345f53 55424e4f 524d414c 5f4d494e  64_SUBNORMAL_MIN
 0080 5f5f2030 2e303030 30303030 30303030  __ 0.00000000000
 0090 30303031 452d3338 33444400 5f5f464c  0001E-383DD.__FL
 00a0 5433325f 4841535f 494e4649 4e495459  T32_HAS_INFINITY
 00b0 5f5f2031 005f5f46 4c543634 5f4d4158  __ 1.__FLT64_MAX
 00c0 5f455850 5f5f2031 30323400 5f5f464c  _EXP__ 1024.__FL
 00d0 545f4d49 4e5f3130 5f455850 5f5f2028  T_MIN_10_EXP__ (
 00e0 2d333729 005f5f53 59534341 4c4c5f55  -37).__SYSCALL_U
 00f0 4c4f4e47 5f545950 45205f5f 554c4f4e  LONG_TYPE __ULON
 0100 47574f52 445f5459 5045005f 5f464c54  GWORD_TYPE.__FLT
 0110 3634585f 45505349 4c4f4e5f 5f20312e  64X_EPSILON__ 1.
 0120 30383432 30323137 32343835 35303434  0842021724855044
 0130 33343030 37343532 38303038 36393934  3400745280086994
 0140 31373165 2d313946 36347800 5f5f464c  171e-19F64x.__FL
 0150 54333258 5f4d4158 5f455850 5f5f2031  T32X_MAX_EXP__ 1
 0160 30323400 5f73686f 72746275 66005f5f  024._shortbuf.__
 0170 4743435f 41544f4d 49435f54 4553545f  GCC_ATOMIC_TEST_
 0180 414e445f 5345545f 54525545 56414c20  AND_SET_TRUEVAL 
 0190 31005f5f 4f46465f 545f4d41 54434845  1.__OFF_T_MATCHE
 01a0 535f4f46 4636345f 54203100 5f5f4445  S_OFF64_T 1.__DE
 01b0 4336345f 45505349 4c4f4e5f 5f203145  C64_EPSILON__ 1E
 01c0 2d313544 44005f5f 44424c5f 44454e4f  -15DD.__DBL_DENO
 01d0 524d5f4d 494e5f5f 20282864 6f75626c  RM_MIN__ ((doubl
 01e0 6529342e 39343036 35363435 38343132  e)4.940656458412
 01f0 34363534 34313736 35363837 39323836  4654417656879286
 0200 38323231 33373265 2d333234 4c29005f  8221372e-324L)._
 0210 494f5f6c 6f636b5f 74005f5f 494e5450  IO_lock_t.__INTP
 0220 54525f4d 41585f5f 20307837 66666666  TR_MAX__ 0x7ffff
 0230 66666666 66666666 6666664c 005f475f  fffffffffffL._G_
 0240 48415645 5f53545f 424c4b53 495a4520  HAVE_ST_BLKSIZE 
 0250 64656669 6e656420 285f5354 41544255  defined (_STATBU
 0260 465f5354 5f424c4b 53495a45 29005f5f  F_ST_BLKSIZE).__
 0270 666c6578 61727220 5b5d005f 5f464c54  flexarr [].__FLT
 0280 33325f4d 414e545f 4449475f 5f203234  32_MANT_DIG__ 24
 0290 005f5f47 43435f48 4156455f 53594e43  .__GCC_HAVE_SYNC
 02a0 5f434f4d 50415245 5f414e44 5f535741  _COMPARE_AND_SWA
 02b0 505f3820 31005f49 4f535f42 494e2031  P_8 1._IOS_BIN 1
 02c0 32380046 494c454e 414d455f 4d415820  28.FILENAME_MAX 
 02d0 34303936 005f5354 44435f50 52454445  4096._STDC_PREDE
 02e0 465f4820 31005f5f 5553455f 49534f43  F_H 1.__USE_ISOC
 02f0 31312031 005f494f 46424620 30005f49  11 1._IOFBF 0._I
 0300 4f5f6275 665f656e 64005f49 4f5f454f  O_buf_end._IO_EO
 0310 465f5345 454e2030 78313000 5345454b  F_SEEN 0x10.SEEK
 0320 5f435552 2031005f 5f464c54 3332585f  _CUR 1.__FLT32X_
 0330 44454349 4d414c5f 4449475f 5f203137  DECIMAL_DIG__ 17
 0340 005f5f6b 385f5f20 31005f5f 44424c5f  .__k8__ 1.__DBL_
 0350 4d494e5f 4558505f 5f20282d 31303231  MIN_EXP__ (-1021
 0360 29005f5f 494e545f 46415354 36345f4d  ).__INT_FAST64_M
 0370 41585f5f 20307837 66666666 66666666  AX__ 0x7ffffffff
 0380 66666666 6666664c 005f5f68 61735f69  fffffffL.__has_i
 0390 6e636c75 64655f6e 65787428 53545229  nclude_next(STR)
 03a0 205f5f68 61735f69 6e636c75 64655f6e   __has_include_n
 03b0 6578745f 5f285354 5229005f 494f5f52  ext__(STR)._IO_R
 03c0 49474854 20303400 5f494f5f 55534552  IGHT 04._IO_USER
 03d0 5f425546 2031005f 5359535f 43444546  _BUF 1._SYS_CDEF
 03e0 535f4820 31005f5f 464c5433 32585f4d  S_H 1.__FLT32X_M
 03f0 41585f5f 20312e37 39373639 33313334  AX__ 1.797693134
 0400 38363233 31353730 38313435 32373432  8623157081452742
 0410 33373331 37303433 3537652b 33303846  3731704357e+308F
 0420 33327800 5f5f676c 6962635f 756e6c69  32x.__glibc_unli
 0430 6b656c79 28636f6e 6429205f 5f627569  kely(cond) __bui
 0440 6c74696e 5f657870 65637420 2828636f  ltin_expect ((co
 0450 6e64292c 20302900 5f5f5349 5a454f46  nd), 0).__SIZEOF
 0460 5f57494e 545f545f 5f203400 5f5f474e  _WINT_T__ 4.__GN
 0470 55435f50 52455245 51286d61 6a2c6d69  UC_PREREQ(maj,mi
 0480 6e292028 285f5f47 4e55435f 5f203c3c  n) ((__GNUC__ <<
 0490 20313629 202b205f 5f474e55 435f4d49   16) + __GNUC_MI
 04a0 4e4f525f 5f203e3d 2028286d 616a2920  NOR__ >= ((maj) 
 04b0 3c3c2031 3629202b 20286d69 6e292900  << 16) + (min)).
 04c0 5f5f5549 4e545054 525f4d41 585f5f20  __UINTPTR_MAX__ 
 04d0 30786666 66666666 66666666 66666666  0xffffffffffffff
 04e0 6666554c 005f5f76 615f6172 675f7061  ffUL.__va_arg_pa
 04f0 636b5f6c 656e2829 205f5f62 75696c74  ck_len() __built
 0500 696e5f76 615f6172 675f7061 636b5f6c  in_va_arg_pack_l
 0510 656e2028 29005f47 5f484156 455f4d4d  en ()._G_HAVE_MM
 0520 41502031 005f5f61 74747269 62757465  AP 1.__attribute
 0530 5f636f6e 73745f5f 205f5f61 74747269  _const__ __attri
 0540 62757465 5f5f2028 285f5f63 6f6e7374  bute__ ((__const
 0550 5f5f2929 005f5f47 4c494243 5f555345  __)).__GLIBC_USE
 0560 5f444550 52454341 5445445f 47455453  _DEPRECATED_GETS
 0570 005f494f 5f4e4f5f 57524954 45532038  ._IO_NO_WRITES 8
 0580 005f5f47 4e55435f 4d494e4f 525f5f20  .__GNUC_MINOR__ 
 0590 33005f5f 5553455f 4c415247 4546494c  3.__USE_LARGEFIL
 05a0 45363400 5f5f524c 494d5f54 5f545950  E64.__RLIM_T_TYP
 05b0 45205f5f 53595343 414c4c5f 554c4f4e  E __SYSCALL_ULON
 05c0 475f5459 5045005f 5f4c4442 4c5f5245  G_TYPE.__LDBL_RE
 05d0 44495228 6e616d65 2c70726f 746f2920  DIR(name,proto) 
 05e0 6e616d65 2070726f 746f005f 494f5f77  name proto._IO_w
 05f0 72697465 5f656e64 005f5f47 4c494243  rite_end.__GLIBC
 0600 5f505245 52455128 6d616a2c 6d696e29  _PREREQ(maj,min)
 0610 2028285f 5f474c49 42435f5f 203c3c20   ((__GLIBC__ << 
 0620 31362920 2b205f5f 474c4942 435f4d49  16) + __GLIBC_MI
 0630 4e4f525f 5f203e3d 2028286d 616a2920  NOR__ >= ((maj) 
 0640 3c3c2031 3629202b 20286d69 6e292900  << 16) + (min)).
 0650 5f5f6e65 65645f4e 554c4c20 005f5f46  __need_NULL .__F
 0660 4c543634 5f4d494e 5f5f2032 2e323235  LT64_MIN__ 2.225
 0670 30373338 35383530 37323031 33383330  0738585072013830
 0680 39303233 32373137 33333234 30343036  9023271733240406
 0690 652d3330 38463634 005f5f4c 4f4e475f  e-308F64.__LONG_
 06a0 4c4f4e47 5f574944 54485f5f 20363400  LONG_WIDTH__ 64.
 06b0 5f504f53 49585f53 4f555243 45005f5f  _POSIX_SOURCE.__
 06c0 464c545f 44454e4f 524d5f4d 494e5f5f  FLT_DENORM_MIN__
 06d0 20312e34 30313239 38343634 33323438   1.4012984643248
 06e0 31373037 30393233 37323935 38333238  1707092372958328
 06f0 39393136 3133652d 34354600 5f5f4348  991613e-45F.__CH
 0700 41523136 5f545950 455f5f20 73686f72  AR16_TYPE__ shor
 0710 7420756e 7369676e 65642069 6e74005f  t unsigned int._
 0720 5f53495a 454f465f 53495a45 5f545f5f  _SIZEOF_SIZE_T__
 0730 20380061 72676300 5f5f4f52 4445525f   8.argc.__ORDER_
 0740 4249475f 454e4449 414e5f5f 20343332  BIG_ENDIAN__ 432
 0750 31005f5f 474e5543 5f5f2037 005f494f  1.__GNUC__ 7._IO
 0760 5f4c494e 455f4255 46203078 32303000  _LINE_BUF 0x200.
 0770 5f5f5553 455f4953 4f435858 3131005f  __USE_ISOCXX11._
 0780 5f555345 5f415446 494c4520 31005f5f  _USE_ATFILE 1.__
 0790 6e6f6e6e 756c6c28 70617261 6d732920  nonnull(params) 
 07a0 5f5f6174 74726962 7574655f 5f202828  __attribute__ ((
 07b0 5f5f6e6f 6e6e756c 6c5f5f20 70617261  __nonnull__ para
 07c0 6d732929 005f5f55 494e5436 345f4328  ms)).__UINT64_C(
 07d0 63292063 20232320 554c005f 5f474e55  c) c ## UL.__GNU
 07e0 5f4c4942 52415259 5f5f005f 5f44424c  _LIBRARY__.__DBL
 07f0 5f4d414e 545f4449 475f5f20 3533005f  _MANT_DIG__ 53._
 0800 5f555345 5f504f53 49583139 39353036  _USE_POSIX199506
 0810 2031005f 5f737475 625f6368 666c6167   1.__stub_chflag
 0820 7320005f 5f494e54 5f4d4158 5f5f2030  s .__INT_MAX__ 0
 0830 78376666 66666666 66005f66 6c616773  x7fffffff._flags
 0840 32005f5f 4e54484e 4c286663 7429205f  2.__NTHNL(fct) _
 0850 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 0860 5f6e6f74 68726f77 5f5f2929 20666374  _nothrow__)) fct
 0870 005f5f73 7475625f 66636866 6c616773  .__stub_fchflags
 0880 20005f5f 494e5431 365f5459 50455f5f   .__INT16_TYPE__
 0890 2073686f 72742069 6e74005f 5f444543   short int.__DEC
 08a0 494d414c 5f424944 5f464f52 4d41545f  IMAL_BID_FORMAT_
 08b0 5f203100 5f5f4445 4333325f 45505349  _ 1.__DEC32_EPSI
 08c0 4c4f4e5f 5f203145 2d364446 005f5349  LON__ 1E-6DF._SI
 08d0 5a455f54 5f444543 4c415245 4420005f  ZE_T_DECLARED ._
 08e0 5f46445f 53455453 495a4520 31303234  _FD_SETSIZE 1024
 08f0 005f5f4c 44424c5f 4449475f 5f203138  .__LDBL_DIG__ 18
 0900 005f6d61 726b6572 73005f5f 41544f4d  ._markers.__ATOM
 0910 49435f53 45515f43 53542035 005f5f55  IC_SEQ_CST 5.__U
 0920 53455f50 4f534958 32203100 5f5f5553  SE_POSIX2 1.__US
 0930 455f4953 4f433935 2031005f 5f53495a  E_ISOC95 1.__SIZ
 0940 454f465f 53484f52 545f5f20 32005f47  EOF_SHORT__ 2._G
 0950 5f76615f 6c697374 205f5f67 6e75635f  _va_list __gnuc_
 0960 76615f6c 69737400 5f5f5549 4e543634  va_list.__UINT64
 0970 5f545950 455f5f20 6c6f6e67 20756e73  _TYPE__ long uns
 0980 69676e65 6420696e 74005f5f 494e545f  igned int.__INT_
 0990 46415354 33325f4d 41585f5f 20307837  FAST32_MAX__ 0x7
 09a0 66666666 66666666 66666666 6666664c  fffffffffffffffL
 09b0 005f5f49 4e545f4c 45415354 385f5459  .__INT_LEAST8_TY
 09c0 50455f5f 20736967 6e656420 63686172  PE__ signed char
 09d0 005f5f73 697a655f 7420005f 5f55494e  .__size_t .__UIN
 09e0 545f4c45 41535433 325f5459 50455f5f  T_LEAST32_TYPE__
 09f0 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 0a00 73747562 5f736967 72657475 726e2000  stub_sigreturn .
 0a10 5f5f7074 725f7420 766f6964 202a005f  __ptr_t void *._
 0a20 5f533332 5f545950 4520696e 74005f5f  _S32_TYPE int.__
 0a30 53544443 5f4e4f5f 54485245 4144535f  STDC_NO_THREADS_
 0a40 5f203100 5f5f4259 54455f4f 52444552  _ 1.__BYTE_ORDER
 0a50 5f5f205f 5f4f5244 45525f4c 4954544c  __ __ORDER_LITTL
 0a60 455f454e 4449414e 5f5f005f 5f4c4442  E_ENDIAN__.__LDB
 0a70 4c5f4d49 4e5f5f20 332e3336 32313033  L_MIN__ 3.362103
 0a80 31343331 31323039 33353036 32363236  1431120935062626
 0a90 37373831 37333231 37353236 30652d34  7781732175260e-4
 0aa0 3933324c 005f5f46 4c543332 5f4d494e  932L.__FLT32_MIN
 0ab0 5f31305f 4558505f 5f20282d 33372900  _10_EXP__ (-37).
 0ac0 5f5f4442 4c5f4841 535f4445 4e4f524d  __DBL_HAS_DENORM
 0ad0 5f5f2031 005f5f49 4e545f4c 45415354  __ 1.__INT_LEAST
 0ae0 36345f54 5950455f 5f206c6f 6e672069  64_TYPE__ long i
 0af0 6e74005f 5f574348 41525f4d 494e5f5f  nt.__WCHAR_MIN__
 0b00 20282d5f 5f574348 41525f4d 41585f5f   (-__WCHAR_MAX__
 0b10 202d2031 29005f49 4f5f5348 4f57504f   - 1)._IO_SHOWPO
 0b20 494e5420 30343030 005f5f6f 66665f74  INT 0400.__off_t
 0b30 5f646566 696e6564 20005f5f 53544443  _defined .__STDC
 0b40 5f555446 5f33325f 5f203100 5f5f424c  _UTF_32__ 1.__BL
 0b50 4b53495a 455f545f 54595045 205f5f53  KSIZE_T_TYPE __S
 0b60 59534341 4c4c5f53 4c4f4e47 5f545950  YSCALL_SLONG_TYP
 0b70 45005f5f 494e545f 4c454153 5431365f  E.__INT_LEAST16_
 0b80 4d41585f 5f203078 37666666 005f5f4c  MAX__ 0x7fff.__L
 0b90 44424c5f 52454449 525f4445 434c286e  DBL_REDIR_DECL(n
 0ba0 616d6529 2000474e 55204331 3120372e  ame) .GNU C11 7.
 0bb0 332e3020 2d6d7475 6e653d67 656e6572  3.0 -mtune=gener
 0bc0 6963202d 6d617263 683d7838 362d3634  ic -march=x86-64
 0bd0 202d6767 64623320 2d667374 61636b2d   -ggdb3 -fstack-
 0be0 70726f74 6563746f 722d7374 726f6e67  protector-strong
 0bf0 005f5f53 43484152 5f4d4158 5f5f2030  .__SCHAR_MAX__ 0
 0c00 78376600 5f5f6578 7465726e 5f616c77  x7f.__extern_alw
 0c10 6179735f 696e6c69 6e652065 78746572  ays_inline exter
 0c20 6e205f5f 616c7761 79735f69 6e6c696e  n __always_inlin
 0c30 65205f5f 61747472 69627574 655f5f20  e __attribute__ 
 0c40 28285f5f 676e755f 696e6c69 6e655f5f  ((__gnu_inline__
 0c50 2929005f 5f464c54 36345f44 49475f5f  )).__FLT64_DIG__
 0c60 20313500 5f5f494e 545f4641 5354385f   15.__INT_FAST8_
 0c70 54595045 5f5f2073 69676e65 64206368  TYPE__ signed ch
 0c80 6172005f 5f504945 5f5f2032 005f494f  ar.__PIE__ 2._IO
 0c90 5f6f6666 36345f74 205f5f6f 66663634  _off64_t __off64
 0ca0 5f74005f 5f474c49 42435f55 53455f49  _t.__GLIBC_USE_I
 0cb0 45435f36 30353539 5f545950 45535f45  EC_60559_TYPES_E
 0cc0 5854005f 5f464c54 3332585f 4841535f  XT.__FLT32X_HAS_
 0cd0 494e4649 4e495459 5f5f2031 005f5f55  INFINITY__ 1.__U
 0ce0 53455f55 4e495839 38005f5f 5553455f  SE_UNIX98.__USE_
 0cf0 464f5254 4946595f 4c455645 4c203000  FORTIFY_LEVEL 0.
 0d00 5f415446 494c455f 534f5552 4345005f  _ATFILE_SOURCE._
 0d10 5f555345 5f415446 494c4500 5f5f5549  _USE_ATFILE.__UI
 0d20 4e545f4c 45415354 385f5459 50455f5f  NT_LEAST8_TYPE__
 0d30 20756e73 69676e65 64206368 6172005f   unsigned char._
 0d40 5f53495a 454f465f 494e5431 32385f5f  _SIZEOF_INT128__
 0d50 20313600 5f5f4e54 48286663 7429205f   16.__NTH(fct) _
 0d60 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 0d70 5f6e6f74 68726f77 5f5f205f 5f4c4541  _nothrow__ __LEA
 0d80 46292920 66637400 5f494f53 5f415445  F)) fct._IOS_ATE
 0d90 4e442034 005f5f67 6c696263 5f6d6163  ND 4.__glibc_mac
 0da0 726f5f77 61726e69 6e67286d 65737361  ro_warning(messa
 0db0 67652920 5f5f676c 6962635f 6d616372  ge) __glibc_macr
 0dc0 6f5f7761 726e696e 67312028 47434320  o_warning1 (GCC 
 0dd0 7761726e 696e6720 6d657373 61676529  warning message)
 0de0 005f5f46 4c543132 385f4841 535f5155  .__FLT128_HAS_QU
 0df0 4945545f 4e414e5f 5f203100 5f545f53  IET_NAN__ 1._T_S
 0e00 495a4520 005f5f46 4c543132 385f4d41  IZE .__FLT128_MA
 0e10 585f5f20 312e3138 39373331 34393533  X__ 1.1897314953
 0e20 35373233 31373635 30383537 35393332  5723176508575932
 0e30 36363238 30303730 32652b34 39333246  662800702e+4932F
 0e40 31323800 42554653 495a205f 494f5f42  128.BUFSIZ _IO_B
 0e50 55465349 5a005f41 5446494c 455f534f  UFSIZ._ATFILE_SO
 0e60 55524345 2031005f 5f464c54 3634585f  URCE 1.__FLT64X_
 0e70 4449475f 5f203138 005f5f49 4e545f4c  DIG__ 18.__INT_L
 0e80 45415354 31365f57 49445448 5f5f2031  EAST16_WIDTH__ 1
 0e90 36005f5f 46534944 5f545f54 59504520  6.__FSID_T_TYPE 
 0ea0 73747275 6374207b 20696e74 205f5f76  struct { int __v
 0eb0 616c5b32 5d3b207d 005f5f73 73697a65  al[2]; }.__ssize
 0ec0 5f745f64 6566696e 65642000 5f545f53  _t_defined ._T_S
 0ed0 495a455f 20005f70 6f73005f 494f5f66  IZE_ ._pos._IO_f
 0ee0 6572726f 725f756e 6c6f636b 6564285f  error_unlocked(_
 0ef0 5f667029 20282828 5f5f6670 292d3e5f  _fp) (((__fp)->_
 0f00 666c6167 73202620 5f494f5f 4552525f  flags & _IO_ERR_
 0f10 5345454e 2920213d 20302900 5f5f6578  SEEN) != 0).__ex
 0f20 7465726e 5f696e6c 696e6520 65787465  tern_inline exte
 0f30 726e205f 5f696e6c 696e6520 5f5f6174  rn __inline __at
 0f40 74726962 7574655f 5f202828 5f5f676e  tribute__ ((__gn
 0f50 755f696e 6c696e65 5f5f2929 005f4743  u_inline__))._GC
 0f60 435f5349 5a455f54 20005f5f 464c5433  C_SIZE_T .__FLT3
 0f70 325f4841 535f4445 4e4f524d 5f5f2031  2_HAS_DENORM__ 1
 0f80 005f5f75 6e69785f 5f203100 5f5f4743  .__unix__ 1.__GC
 0f90 435f4841 56455f53 594e435f 434f4d50  C_HAVE_SYNC_COMP
 0fa0 4152455f 414e445f 53574150 5f312031  ARE_AND_SWAP_1 1
 0fb0 005f494f 5f736176 655f656e 64005f5f  ._IO_save_end.__
 0fc0 464c5436 34585f4d 494e5f45 58505f5f  FLT64X_MIN_EXP__
 0fd0 20282d31 36333831 29005f42 53445f53   (-16381)._BSD_S
 0fe0 495a455f 545f2000 5f5f7374 75625f73  IZE_T_ .__stub_s
 0ff0 65746c6f 67696e20 005f5f46 4c545f44  etlogin .__FLT_D
 1000 49475f5f 2036005f 5f494e54 5f464153  IG__ 6.__INT_FAS
 1010 5431365f 57494454 485f5f20 3634005f  T16_WIDTH__ 64._
 1020 5f474343 5f41544f 4d49435f 424f4f4c  _GCC_ATOMIC_BOOL
 1030 5f4c4f43 4b5f4652 45452032 005f494f  _LOCK_FREE 2._IO
 1040 5f6f6666 5f74205f 5f6f6666 5f74005f  _off_t __off_t._
 1050 5f706965 5f5f2032 005f5354 44494f5f  _pie__ 2._STDIO_
 1060 48203100 5f5f4445 4333325f 4d494e5f  H 1.__DEC32_MIN_
 1070 5f203145 2d393544 46005f5f 494e544d  _ 1E-95DF.__INTM
 1080 41585f4d 41585f5f 20307837 66666666  AX_MAX__ 0x7ffff
 1090 66666666 66666666 6666664c 005f4249  fffffffffffL._BI
 10a0 54535f4c 4942494f 5f482031 005f5f47  TS_LIBIO_H 1.__G
 10b0 43435f49 45435f35 35392032 005f5f46  CC_IEC_559 2.__F
 10c0 4c543132 385f4d49 4e5f4558 505f5f20  LT128_MIN_EXP__ 
 10d0 282d3136 33383129 005f5f46 4c543332  (-16381).__FLT32
 10e0 5f484153 5f515549 45545f4e 414e5f5f  _HAS_QUIET_NAN__
 10f0 2031005f 4253445f 53495a45 5f545f44   1._BSD_SIZE_T_D
 1100 4546494e 45445f20 005f5f55 494e545f  EFINED_ .__UINT_
 1110 4c454153 5431365f 4d41585f 5f203078  LEAST16_MAX__ 0x
 1120 66666666 005f5f55 494e545f 46415354  ffff.__UINT_FAST
 1130 36345f4d 41585f5f 20307866 66666666  64_MAX__ 0xfffff
 1140 66666666 66666666 66666655 4c005f49  fffffffffffUL._I
 1150 4f5f4552 525f5345 454e2030 78323000  O_ERR_SEEN 0x20.
 1160 5f5f6174 74726962 7574655f 75736564  __attribute_used
 1170 5f5f205f 5f617474 72696275 74655f5f  __ __attribute__
 1180 2028285f 5f757365 645f5f29 29005f5f   ((__used__)).__
 1190 61747472 69627574 655f6172 74696669  attribute_artifi
 11a0 6369616c 5f5f205f 5f617474 72696275  cial__ __attribu
 11b0 74655f5f 2028285f 5f617274 69666963  te__ ((__artific
 11c0 69616c5f 5f292900 5f494f5f 66747279  ial__))._IO_ftry
 11d0 6c6f636b 66696c65 285f6670 2920005f  lockfile(_fp) ._
 11e0 5f55494e 545f4c45 41535438 5f4d4158  _UINT_LEAST8_MAX
 11f0 5f5f2030 78666600 5f5f474c 4942435f  __ 0xff.__GLIBC_
 1200 5553455f 4c49425f 45585432 2030005f  USE_LIB_EXT2 0._
 1210 5f444543 3132385f 4d494e5f 4558505f  _DEC128_MIN_EXP_
 1220 5f20282d 36313432 29002f68 6f6d652f  _ (-6142)./home/
 1230 7562756e 74752f45 6e67696e 65657269  ubuntu/Engineeri
 1240 6e672f50 726f6772 616d6d69 6e672f44  ng/Programming/D
 1250 69736173 73656d62 6c696e67 2d42696e  isassembling-Bin
 1260 61726965 732f432f 496e7465 6c5f6172  aries/C/Intel_ar
 1270 63686974 65637475 72652f41 4d443634  chitecture/AMD64
 1280 2f416464 5f496e74 2f576974 685f4465  /Add_Int/With_De
 1290 6275675f 496e666f 005f5f4b 45524e45  bug_Info.__KERNE
 12a0 4c5f5354 52494354 5f4e414d 45532000  L_STRICT_NAMES .
 12b0 5f5f5743 4841525f 54595045 5f5f2069  __WCHAR_TYPE__ i
 12c0 6e74005f 5f494e54 385f4d41 585f5f20  nt.__INT8_MAX__ 
 12d0 30783766 00676574 63285f66 7029205f  0x7f.getc(_fp) _
 12e0 494f5f67 65746320 285f6670 29005f5f  IO_getc (_fp).__
 12f0 44454331 32385f45 5053494c 4f4e5f5f  DEC128_EPSILON__
 1300 2031452d 3333444c 005f5f55 53455f50   1E-33DL.__USE_P
 1310 4f534958 31393935 3036005f 5f6e6565  OSIX199506.__nee
 1320 645f4e55 4c4c005f 5f524544 49524543  d_NULL.__REDIREC
 1330 545f4e54 485f4c44 424c286e 616d652c  T_NTH_LDBL(name,
 1340 70726f74 6f2c616c 69617329 205f5f52  proto,alias) __R
 1350 45444952 4543545f 4e544820 286e616d  EDIRECT_NTH (nam
 1360 652c2070 726f746f 2c20616c 69617329  e, proto, alias)
 1370 005f5f52 45444952 4543545f 4e54484e  .__REDIRECT_NTHN
 1380 4c286e61 6d652c70 726f746f 2c616c69  L(name,proto,ali
 1390 61732920 6e616d65 2070726f 746f205f  as) name proto _
 13a0 5f61736d 5f5f2028 5f5f4153 4d4e414d  _asm__ (__ASMNAM
 13b0 45202823 616c6961 73292920 5f5f5448  E (#alias)) __TH
 13c0 524f574e 4c005f5f 464c5431 32385f4d  ROWNL.__FLT128_M
 13d0 41585f45 58505f5f 20313633 3834005f  AX_EXP__ 16384._
 13e0 5f464c54 5f524144 49585f5f 2032005f  _FLT_RADIX__ 2._
 13f0 5f464c54 3332585f 44454e4f 524d5f4d  _FLT32X_DENORM_M
 1400 494e5f5f 20342e39 34303635 36343538  IN__ 4.940656458
 1410 34313234 36353434 31373635 36383739  4124654417656879
 1420 32383638 32323133 3732652d 33323446  2868221372e-324F
 1430 33327800 5f5f676c 6962635f 636c616e  32x.__glibc_clan
 1440 675f6861 735f6578 74656e73 696f6e28  g_has_extension(
 1450 65787429 2030005f 5f504d54 28617267  ext) 0.__PMT(arg
 1460 73292061 72677300 5f5f4749 445f545f  s) args.__GID_T_
 1470 54595045 205f5f55 33325f54 59504500  TYPE __U32_TYPE.
 1480 5f5f5349 5a454f46 5f4c4f4e 475f444f  __SIZEOF_LONG_DO
 1490 55424c45 5f5f2031 36005f5f 44424c5f  UBLE__ 16.__DBL_
 14a0 4841535f 51554945 545f4e41 4e5f5f20  HAS_QUIET_NAN__ 
 14b0 31005f5f 77757220 005f4249 54535f54  1.__wur ._BITS_T
 14c0 59504553 5f482031 005f5f48 4156455f  YPES_H 1.__HAVE_
 14d0 434f4c55 4d4e2000 5f5f4c44 424c5f44  COLUMN .__LDBL_D
 14e0 454e4f52 4d5f4d49 4e5f5f20 332e3634  ENORM_MIN__ 3.64
 14f0 35313939 35333138 38323437 34363032  5199531882474602
 1500 35323834 30353933 33363139 34313938  5284059336194198
 1510 32652d34 3935314c 005f5f50 49445f54  2e-4951L.__PID_T
 1520 5f545950 45205f5f 5333325f 54595045  _TYPE __S32_TYPE
 1530 005f5f73 7475625f 66617474 61636820  .__stub_fattach 
 1540 00737973 5f657272 6c697374 005f5f46  .sys_errlist.__F
 1550 4c543634 5f484153 5f494e46 494e4954  LT64_HAS_INFINIT
 1560 595f5f20 31005f5f 55494e54 5f464153  Y__ 1.__UINT_FAS
 1570 54385f4d 41585f5f 20307866 66005f5f  T8_MAX__ 0xff.__
 1580 41544f4d 49435f48 4c455f52 454c4541  ATOMIC_HLE_RELEA
 1590 53452031 33313037 32005f5f 4c44424c  SE 131072.__LDBL
 15a0 5f4d4158 5f455850 5f5f2031 36333834  _MAX_EXP__ 16384
 15b0 005f5f73 7475625f 67747479 20005f42  .__stub_gtty ._B
 15c0 4954535f 54595045 53495a45 535f4820  ITS_TYPESIZES_H 
 15d0 31005f5f 55534543 4f4e4453 5f545f54  1.__USECONDS_T_T
 15e0 59504520 5f5f5533 325f5459 5045005f  YPE __U32_TYPE._
 15f0 494f5f70 65656b63 285f6670 29205f49  IO_peekc(_fp) _I
 1600 4f5f7065 656b635f 756e6c6f 636b6564  O_peekc_unlocked
 1610 20285f66 7029005f 5f494e54 5054525f   (_fp).__INTPTR_
 1620 54595045 5f5f206c 6f6e6720 696e7400  TYPE__ long int.
 1630 5f5f4445 4336345f 4d41585f 5f20392e  __DEC64_MAX__ 9.
 1640 39393939 39393939 39393939 39393945  999999999999999E
 1650 33383444 44007379 735f6e65 7272005f  384DD.sys_nerr._
 1660 5f474343 5f41544f 4d49435f 494e545f  _GCC_ATOMIC_INT_
 1670 4c4f434b 5f465245 45203200 5f535953  LOCK_FREE 2._SYS
 1680 5f53495a 455f545f 4820005f 5f4d4d58  _SIZE_T_H .__MMX
 1690 5f5f2031 005f5f42 4c4b434e 545f545f  __ 1.__BLKCNT_T_
 16a0 54595045 205f5f53 59534341 4c4c5f53  TYPE __SYSCALL_S
 16b0 4c4f4e47 5f545950 45005f49 4f5f5348  LONG_TYPE._IO_SH
 16c0 4f574241 53452030 32303000 5f5f7374  OWBASE 0200.__st
 16d0 75625f73 74747920 005f6669 6c656e6f  ub_stty ._fileno
 16e0 005f5f48 4156455f 47454e45 5249435f  .__HAVE_GENERIC_
 16f0 53454c45 4354494f 4e203100 5f5f524c  SELECTION 1.__RL
 1700 494d3634 5f545f54 59504520 5f5f5551  IM64_T_TYPE __UQ
 1710 5541445f 54595045 005f5f46 4c543132  UAD_TYPE.__FLT12
 1720 385f4d41 4e545f44 49475f5f 20313133  8_MANT_DIG__ 113
 1730 005f5f4f 52444552 5f4c4954 544c455f  .__ORDER_LITTLE_
 1740 454e4449 414e5f5f 20313233 34005f5f  ENDIAN__ 1234.__
 1750 5553455f 584f5045 4e324b20 31005f5f  USE_XOPEN2K 1.__
 1760 53495a45 4f465f50 54524449 46465f54  SIZEOF_PTRDIFF_T
 1770 5f5f2038 005f494f 535f5452 554e4320  __ 8._IOS_TRUNC 
 1780 3136005f 5f444543 3132385f 4d414e54  16.__DEC128_MANT
 1790 5f444947 5f5f2033 34005f5f 5553455f  _DIG__ 34.__USE_
 17a0 49534f43 39392031 005f5f49 4e543332  ISOC99 1.__INT32
 17b0 5f545950 455f5f20 696e7400 5f5f4b45  _TYPE__ int.__KE
 17c0 524e454c 5f535452 4943545f 4e414d45  RNEL_STRICT_NAME
 17d0 53005f5f 5533325f 54595045 20756e73  S.__U32_TYPE uns
 17e0 69676e65 6420696e 74005f5f 636f6465  igned int.__code
 17f0 5f6d6f64 656c5f73 6d616c6c 5f5f2031  _model_small__ 1
 1800 005f5f55 53455f49 534f4339 35005f5f  .__USE_ISOC95.__
 1810 464c5436 34585f48 41535f44 454e4f52  FLT64X_HAS_DENOR
 1820 4d5f5f20 31005f5f 44454333 325f4d41  M__ 1.__DEC32_MA
 1830 585f4558 505f5f20 3937005f 494f4e42  X_EXP__ 97._IONB
 1840 46203200 5f5f5553 455f4953 4f433939  F 2.__USE_ISOC99
 1850 00737464 65727220 73746465 7272005f  .stderr stderr._
 1860 76746162 6c655f6f 66667365 74005f47  vtable_offset._G
 1870 5f494f5f 494f5f46 494c455f 56455253  _IO_IO_FILE_VERS
 1880 494f4e20 30783230 30303100 5f494f5f  ION 0x20001._IO_
 1890 54494544 5f505554 5f474554 20307834  TIED_PUT_GET 0x4
 18a0 3030004c 5f746d70 6e616d20 3230005f  00.L_tmpnam 20._
 18b0 494f5f63 6c65616e 75705f72 6567696f  IO_cleanup_regio
 18c0 6e5f7374 61727428 5f666374 2c5f6670  n_start(_fct,_fp
 18d0 2920005f 5f535444 435f4945 435f3535  ) .__STDC_IEC_55
 18e0 395f434f 4d504c45 585f5f20 31005f5f  9_COMPLEX__ 1.__
 18f0 474c4942 435f5553 455f4445 50524543  GLIBC_USE_DEPREC
 1900 41544544 5f474554 53203000 5f494f5f  ATED_GETS 0._IO_
 1910 48455820 30313030 005f5f46 4c543634  HEX 0100.__FLT64
 1920 585f4d49 4e5f3130 5f455850 5f5f2028  X_MIN_10_EXP__ (
 1930 2d343933 3129005f 5f737475 625f7075  -4931).__stub_pu
 1940 746d7367 20005f49 4f5f7265 61645f62  tmsg ._IO_read_b
 1950 61736500 5f5f5354 44435f49 534f5f31  ase.__STDC_ISO_1
 1960 30363436 5f5f2032 30313730 364c005f  0646__ 201706L._
 1970 5f424547 494e5f44 45434c53 20005f49  _BEGIN_DECLS ._I
 1980 4f5f7374 64696e20 28285f49 4f5f4649  O_stdin ((_IO_FI
 1990 4c452a29 28265f49 4f5f325f 315f7374  LE*)(&_IO_2_1_st
 19a0 64696e5f 2929005f 5f464c54 3132385f  din_)).__FLT128_
 19b0 4d41585f 31305f45 58505f5f 20343933  MAX_10_EXP__ 493
 19c0 32005f5f 464c5431 32385f4d 494e5f5f  2.__FLT128_MIN__
 19d0 20332e33 36323130 33313433 31313230   3.3621031431120
 19e0 39333530 36323632 36373738 31373332  9350626267781732
 19f0 31373532 3630652d 34393332 46313238  175260e-4932F128
 1a00 005f5f53 55534543 4f4e4453 5f545f54  .__SUSECONDS_T_T
 1a10 59504520 5f5f5359 5343414c 4c5f534c  YPE __SYSCALL_SL
 1a20 4f4e475f 54595045 00534545 4b5f454e  ONG_TYPE.SEEK_EN
 1a30 44203200 5f5f494e 545f4641 5354385f  D 2.__INT_FAST8_
 1a40 57494454 485f5f20 38005f5f 464c5436  WIDTH__ 8.__FLT6
 1a50 345f4d49 4e5f3130 5f455850 5f5f2028  4_MIN_10_EXP__ (
 1a60 2d333037 29005f5f 73747562 5f666465  -307).__stub_fde
 1a70 74616368 20005f6e 65787400 5f5f4442  tach ._next.__DB
 1a80 4c5f4d41 585f5f20 2828646f 75626c65  L_MAX__ ((double
 1a90 29312e37 39373639 33313334 38363233  )1.7976931348623
 1aa0 31353730 38313435 32373432 33373331  1570814527423731
 1ab0 37303433 3537652b 3330384c 29005f44  704357e+308L)._D
 1ac0 45464155 4c545f53 4f555243 45203100  EFAULT_SOURCE 1.
 1ad0 5f5f524c 494d5f54 5f4d4154 43484553  __RLIM_T_MATCHES
 1ae0 5f524c49 4d36345f 54203100 5f5f616d  _RLIM64_T 1.__am
 1af0 6436345f 5f203100 5f5f5f5f 6d627374  d64__ 1.____mbst
 1b00 6174655f 745f6465 66696e65 64203100  ate_t_defined 1.
 1b10 5f494f5f 44454c45 54455f44 4f4e545f  _IO_DELETE_DONT_
 1b20 434c4f53 45203078 3430005f 5f464c54  CLOSE 0x40.__FLT
 1b30 33325f44 4543494d 414c5f44 49475f5f  32_DECIMAL_DIG__
 1b40 2039005f 5f464c54 3132385f 4449475f   9.__FLT128_DIG_
 1b50 5f203333 005f5f55 494e5431 365f5459  _ 33.__UINT16_TY
 1b60 50455f5f 2073686f 72742075 6e736967  PE__ short unsig
 1b70 6e656420 696e7400 5f5f5354 44435f55  ned int.__STDC_U
 1b80 54465f31 365f5f20 31005f4f 4c445f53  TF_16__ 1._OLD_S
 1b90 5444494f 5f4d4147 49432030 78464142  TDIO_MAGIC 0xFAB
 1ba0 43303030 30005f49 4f535f4e 4f435245  C0000._IOS_NOCRE
 1bb0 41544520 3332005f 5f574348 41525f57  ATE 32.__WCHAR_W
 1bc0 49445448 5f5f2033 32005f5f 4743435f  IDTH__ 32.__GCC_
 1bd0 41544f4d 49435f43 4841525f 4c4f434b  ATOMIC_CHAR_LOCK
 1be0 5f465245 45203200 5f494f5f 6d61726b  _FREE 2._IO_mark
 1bf0 6572005f 5f494e54 5f4c4541 53543332  er.__INT_LEAST32
 1c00 5f4d4158 5f5f2030 78376666 66666666  _MAX__ 0x7ffffff
 1c10 66005f5f 4c4f4e47 5f4c4f4e 475f4d41  f.__LONG_LONG_MA
 1c20 585f5f20 30783766 66666666 66666666  X__ 0x7fffffffff
 1c30 66666666 66664c4c 005f5f55 4c4f4e47  ffffffLL.__ULONG
 1c40 33325f54 59504520 756e7369 676e6564  32_TYPE unsigned
 1c50 20696e74 005f5f55 494e545f 4c454153   int.__UINT_LEAS
 1c60 5431365f 54595045 5f5f2073 686f7274  T16_TYPE__ short
 1c70 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 1c80 464c545f 4d41585f 31305f45 58505f5f  FLT_MAX_10_EXP__
 1c90 20333800 5f494f5f 534b4950 57532030   38._IO_SKIPWS 0
 1ca0 31005f5f 464c5433 32585f45 5053494c  1.__FLT32X_EPSIL
 1cb0 4f4e5f5f 20322e32 32303434 36303439  ON__ 2.220446049
 1cc0 32353033 31333038 30383437 32363333  2503130808472633
 1cd0 33363138 31363430 3632652d 31364633  3618164062e-16F3
 1ce0 3278004e 554c4c20 2828766f 6964202a  2x.NULL ((void *
 1cf0 29302900 61726776 005f5f55 53455f50  )0).argv.__USE_P
 1d00 4f534958 5f494d50 4c494349 544c5920  OSIX_IMPLICITLY 
 1d10 31005f49 4f5f6665 6f665f75 6e6c6f63  1._IO_feof_unloc
 1d20 6b656428 5f5f6670 29202828 285f5f66  ked(__fp) (((__f
 1d30 70292d3e 5f666c61 67732026 205f494f  p)->_flags & _IO
 1d40 5f454f46 5f534545 4e292021 3d203029  _EOF_SEEN) != 0)
 1d50 005f5f4e 4f5f494e 4c494e45 5f5f2031  .__NO_INLINE__ 1
 1d60 005f494f 5f737464 65727220 28285f49  ._IO_stderr ((_I
 1d70 4f5f4649 4c452a29 28265f49 4f5f325f  O_FILE*)(&_IO_2_
 1d80 315f7374 64657272 5f292900 5f5f7661  1_stderr_)).__va
 1d90 5f617267 5f706163 6b282920 5f5f6275  _arg_pack() __bu
 1da0 696c7469 6e5f7661 5f617267 5f706163  iltin_va_arg_pac
 1db0 6b202829 005f5f46 4c545f4d 414e545f  k ().__FLT_MANT_
 1dc0 4449475f 5f203234 005f5f44 41444452  DIG__ 24.__DADDR
 1dd0 5f545f54 59504520 5f5f5333 325f5459  _T_TYPE __S32_TY
 1de0 5045005f 5f464c54 36345f44 4543494d  PE.__FLT64_DECIM
 1df0 414c5f44 49475f5f 20313700 5f5f4743  AL_DIG__ 17.__GC
 1e00 435f4841 56455f53 594e435f 434f4d50  C_HAVE_SYNC_COMP
 1e10 4152455f 414e445f 53574150 5f342031  ARE_AND_SWAP_4 1
 1e20 005f5f46 4c543332 5f4d494e 5f455850  .__FLT32_MIN_EXP
 1e30 5f5f2028 2d313235 29005f5f 53495a45  __ (-125).__SIZE
 1e40 5f545950 455f5f20 6c6f6e67 20756e73  _TYPE__ long uns
 1e50 69676e65 6420696e 74005f5f 4c44424c  igned int.__LDBL
 1e60 5f4d4158 5f5f2031 2e313839 37333134  _MAX__ 1.1897314
 1e70 39353335 37323331 37363530 32313236  9535723176502126
 1e80 33383533 30333039 37303231 652b3439  385303097021e+49
 1e90 33324c00 5f5f4445 435f4556 414c5f4d  32L.__DEC_EVAL_M
 1ea0 4554484f 445f5f20 32005f5f 464c545f  ETHOD__ 2.__FLT_
 1eb0 4d41585f 5f20332e 34303238 32333436  MAX__ 3.40282346
 1ec0 36333835 32383835 39383131 37303431  6385288598117041
 1ed0 38333438 34353136 39323565 2b333846  83484516925e+38F
 1ee0 005f494f 5f756964 5f74205f 5f756964  ._IO_uid_t __uid
 1ef0 5f74005f 5f44424c 5f4d494e 5f31305f  _t.__DBL_MIN_10_
 1f00 4558505f 5f20282d 33303729 005f494f  EXP__ (-307)._IO
 1f10 5f325f31 5f737464 6572725f 005f5f55  _2_1_stderr_.__U
 1f20 494e5433 325f4d41 585f5f20 30786666  INT32_MAX__ 0xff
 1f30 66666666 66665500 5f494f5f 4f435420  ffffffU._IO_OCT 
 1f40 30343000 5f5f464c 54313238 5f484153  040.__FLT128_HAS
 1f50 5f494e46 494e4954 595f5f20 31005f6d  _INFINITY__ 1._m
 1f60 6f646500 5f494f5f 48415645 5f53545f  ode._IO_HAVE_ST_
 1f70 424c4b53 495a4520 5f475f48 4156455f  BLKSIZE _G_HAVE_
 1f80 53545f42 4c4b5349 5a45005f 5f464c54  ST_BLKSIZE.__FLT
 1f90 36345f48 41535f44 454e4f52 4d5f5f20  64_HAS_DENORM__ 
 1fa0 31005f5f 464c545f 4556414c 5f4d4554  1.__FLT_EVAL_MET
 1fb0 484f445f 5f203000 5f5f4653 424c4b43  HOD__ 0.__FSBLKC
 1fc0 4e545f54 5f545950 45205f5f 53595343  NT_T_TYPE __SYSC
 1fd0 414c4c5f 554c4f4e 475f5459 5045005f  ALL_ULONG_TYPE._
 1fe0 5f464c54 3332585f 4841535f 44454e4f  _FLT32X_HAS_DENO
 1ff0 524d5f5f 2031005f 5f783836 5f36345f  RM__ 1.__x86_64_
 2000 5f203100 5f5f464c 54363458 5f4d4158  _ 1.__FLT64X_MAX
 2010 5f455850 5f5f2031 36333834 005f5f56  _EXP__ 16384.__V
 2020 45525349 4f4e5f5f 2022372e 332e3022  ERSION__ "7.3.0"
 2030 005f494f 5f4c494e 4b454420 30783830  ._IO_LINKED 0x80
 2040 005f5f52 45444952 45435428 6e616d65  .__REDIRECT(name
 2050 2c70726f 746f2c61 6c696173 29206e61  ,proto,alias) na
 2060 6d652070 726f746f 205f5f61 736d5f5f  me proto __asm__
 2070 20285f5f 41534d4e 414d4520 2823616c   (__ASMNAME (#al
 2080 69617329 29005f5f 4653424c 4b434e54  ias)).__FSBLKCNT
 2090 36345f54 5f545950 45205f5f 55515541  64_T_TYPE __UQUA
 20a0 445f5459 5045005f 5f464c54 3634585f  D_TYPE.__FLT64X_
 20b0 4d41585f 5f20312e 31383937 33313439  MAX__ 1.18973149
 20c0 35333537 32333137 36353032 31323633  5357231765021263
 20d0 38353330 33303937 30323165 2b343933  85303097021e+493
 20e0 32463634 78005f49 4f5f7265 61645f70  2F64x._IO_read_p
 20f0 7472005f 5f53495a 455f5420 005f5f49  tr.__SIZE_T .__I
 2100 445f545f 54595045 205f5f55 33325f54  D_T_TYPE __U32_T
 2110 59504500 5f5f5349 5a455f54 5f5f2000  YPE.__SIZE_T__ .
 2120 5f494f5f 66756e6c 6f636b66 696c6528  _IO_funlockfile(
 2130 5f667029 20005f5f 4b45595f 545f5459  _fp) .__KEY_T_TY
 2140 5045205f 5f533332 5f545950 45005f5f  PE __S32_TYPE.__
 2150 494e545f 4c454153 5436345f 4d41585f  INT_LEAST64_MAX_
 2160 5f203078 37666666 66666666 66666666  _ 0x7fffffffffff
 2170 66666666 4c005f5f 494e545f 4c454153  ffffL.__INT_LEAS
 2180 54385f57 49445448 5f5f2038 005f5f4c  T8_WIDTH__ 8.__L
 2190 44424c5f 52454449 52315f4e 5448286e  DBL_REDIR1_NTH(n
 21a0 616d652c 70726f74 6f2c616c 69617329  ame,proto,alias)
 21b0 206e616d 65207072 6f746f20 5f5f5448   name proto __TH
 21c0 524f5700 5f5f5549 4e54385f 4d41585f  ROW.__UINT8_MAX_
 21d0 5f203078 6666005f 494f5f46 4c414753  _ 0xff._IO_FLAGS
 21e0 325f4e4f 5443414e 43454c20 32005f5f  2_NOTCANCEL 2.__
 21f0 616c7761 79735f69 6e6c696e 65205f5f  always_inline __
 2200 696e6c69 6e65205f 5f617474 72696275  inline __attribu
 2210 74655f5f 2028285f 5f616c77 6179735f  te__ ((__always_
 2220 696e6c69 6e655f5f 2929005f 5f55494e  inline__)).__UIN
 2230 5431365f 4d41585f 5f203078 66666666  T16_MAX__ 0xffff
 2240 005f494f 5f4d4147 49432030 78464241  ._IO_MAGIC 0xFBA
 2250 44303030 30005f5f 474c4942 435f5553  D0000.__GLIBC_US
 2260 45284629 205f5f47 4c494243 5f555345  E(F) __GLIBC_USE
 2270 5f202323 2046005f 5f494e54 5f464153  _ ## F.__INT_FAS
 2280 5436345f 54595045 5f5f206c 6f6e6720  T64_TYPE__ long 
 2290 696e7400 73746469 6e207374 64696e00  int.stdin stdin.
 22a0 5f5f6174 74726962 7574655f 6e6f696e  __attribute_noin
 22b0 6c696e65 5f5f205f 5f617474 72696275  line__ __attribu
 22c0 74655f5f 2028285f 5f6e6f69 6e6c696e  te__ ((__noinlin
 22d0 655f5f29 29005f5f 53544443 5f564552  e__)).__STDC_VER
 22e0 53494f4e 5f5f2032 30313131 324c005f  SION__ 201112L._
 22f0 5f494e54 4d41585f 57494454 485f5f20  _INTMAX_WIDTH__ 
 2300 3634005f 5f444543 33325f4d 41585f5f  64.__DEC32_MAX__
 2310 20392e39 39393939 39453936 4446005f   9.999999E96DF._
 2320 5f474e55 435f5641 5f4c4953 5420005f  _GNUC_VA_LIST ._
 2330 5f505452 44494646 5f4d4158 5f5f2030  _PTRDIFF_MAX__ 0
 2340 78376666 66666666 66666666 66666666  x7ffffffffffffff
 2350 664c005f 5f555345 5f504f53 49583139  fL.__USE_POSIX19
 2360 39333039 005f5f49 4e545f4c 45415354  9309.__INT_LEAST
 2370 31365f54 5950455f 5f207368 6f727420  16_TYPE__ short 
 2380 696e7400 5f5f464c 5433325f 4d41585f  int.__FLT32_MAX_
 2390 4558505f 5f203132 38005f5f 676e755f  EXP__ 128.__gnu_
 23a0 6c696e75 785f5f20 31005f5f 5354445f  linux__ 1.__STD_
 23b0 54595045 20747970 65646566 005f5f4d  TYPE typedef.__M
 23c0 4f44455f 545f5459 5045205f 5f553332  ODE_T_TYPE __U32
 23d0 5f545950 45005f5f 53495a45 4f465f46  _TYPE.__SIZEOF_F
 23e0 4c4f4154 3132385f 5f203136 005f5f47  LOAT128__ 16.__G
 23f0 4e55435f 53544443 5f494e4c 494e455f  NUC_STDC_INLINE_
 2400 5f203100 5f5f4442 4c5f4449 475f5f20  _ 1.__DBL_DIG__ 
 2410 3135005f 5f474343 5f41544f 4d49435f  15.__GCC_ATOMIC_
 2420 43484152 31365f54 5f4c4f43 4b5f4652  CHAR16_T_LOCK_FR
 2430 45452032 005f5f49 4e545f4c 45415354  EE 2.__INT_LEAST
 2440 385f4d41 585f5f20 30783766 005f5f53  8_MAX__ 0x7f.__S
 2450 31365f54 59504520 73686f72 7420696e  16_TYPE short in
 2460 74005f5f 4c503634 5f5f2031 005f5f53  t.__LP64__ 1.__S
 2470 59534341 4c4c5f57 4f524453 495a4520  YSCALL_WORDSIZE 
 2480 3634005f 5f474343 5f41544f 4d49435f  64.__GCC_ATOMIC_
 2490 4c4f4e47 5f4c4f43 4b5f4652 45452032  LONG_LOCK_FREE 2
 24a0 005f5f46 4c543332 585f4449 475f5f20  .__FLT32X_DIG__ 
 24b0 3135005f 5f464c54 3332585f 4d414e54  15.__FLT32X_MANT
 24c0 5f444947 5f5f2035 33005f49 4f5f7772  _DIG__ 53._IO_wr
 24d0 6974655f 62617365 005f4c50 36342031  ite_base._LP64 1
 24e0 005f4645 41545552 45535f48 2031005f  ._FEATURES_H 1._
 24f0 5f464c54 33325f44 49475f5f 2036005f  _FLT32_DIG__ 6._
 2500 5f465357 4f52445f 545f5459 5045205f  _FSWORD_T_TYPE _
 2510 5f535953 43414c4c 5f534c4f 4e475f54  _SYSCALL_SLONG_T
 2520 59504500 5f5f534c 4f4e4757 4f52445f  YPE.__SLONGWORD_
 2530 54595045 206c6f6e 6720696e 74005f49  TYPE long int._I
 2540 4f5f325f 315f7374 64696e5f 00616464  O_2_1_stdin_.add
 2550 5f696e74 2e63005f 5f464c54 3634585f  _int.c.__FLT64X_
 2560 4d41585f 31305f45 58505f5f 20343933  MAX_10_EXP__ 493
 2570 32005f5f 44424c5f 4d494e5f 5f202828  2.__DBL_MIN__ ((
 2580 646f7562 6c652932 2e323235 30373338  double)2.2250738
 2590 35383530 37323031 33383330 39303233  5850720138309023
 25a0 32373137 33333234 30343036 652d3330  271733240406e-30
 25b0 384c2900 5f494f5f 325f315f 7374646f  8L)._IO_2_1_stdo
 25c0 75745f00 5f5f5549 4e545f46 41535433  ut_.__UINT_FAST3
 25d0 325f4d41 585f5f20 30786666 66666666  2_MAX__ 0xffffff
 25e0 66666666 66666666 6666554c 005f5f46  ffffffffffUL.__F
 25f0 494e4954 455f4d41 54485f4f 4e4c595f  INITE_MATH_ONLY_
 2600 5f203000 5f494f5f 73617665 5f626173  _ 0._IO_save_bas
 2610 65005f5f 5531365f 54595045 20756e73  e.__U16_TYPE uns
 2620 69676e65 64207368 6f727420 696e7400  igned short int.
 2630 454f4620 282d3129 005f5f46 4c543634  EOF (-1).__FLT64
 2640 5f4d4158 5f5f2031 2e373937 36393331  _MAX__ 1.7976931
 2650 33343836 32333135 37303831 34353237  3486231570814527
 2660 34323337 33313730 34333537 652b3330  423731704357e+30
 2670 38463634 005f5f73 697a655f 745f5f20  8F64.__size_t__ 
 2680 005f5f55 494e5438 5f545950 455f5f20  .__UINT8_TYPE__ 
 2690 756e7369 676e6564 20636861 72005f49  unsigned char._I
 26a0 4f5f6669 6c655f66 6c616773 205f666c  O_file_flags _fl
 26b0 61677300 5f5f5553 455f584f 50454e32  ags.__USE_XOPEN2
 26c0 4b385853 49005f5f 494e545f 46415354  K8XSI.__INT_FAST
 26d0 33325f54 5950455f 5f206c6f 6e672069  32_TYPE__ long i
 26e0 6e74005f 494f535f 494e5055 54203100  nt._IOS_INPUT 1.
 26f0 5f5f4743 435f4153 4d5f464c 41475f4f  __GCC_ASM_FLAG_O
 2700 55545055 54535f5f 20310070 75746328  UTPUTS__ 1.putc(
 2710 5f63682c 5f667029 205f494f 5f707574  _ch,_fp) _IO_put
 2720 6320285f 63682c20 5f667029 005f5f55  c (_ch, _fp).__U
 2730 494e545f 4c454153 5436345f 4d41585f  INT_LEAST64_MAX_
 2740 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 2750 66666666 554c005f 5f504d54 005f5f55  ffffUL.__PMT.__U
 2760 51554144 5f545950 4520756e 7369676e  QUAD_TYPE unsign
 2770 6564206c 6f6e6720 696e7400 5f5f454c  ed long int.__EL
 2780 465f5f20 31005f5f 464c5433 32585f4d  F__ 1.__FLT32X_M
 2790 494e5f5f 20322e32 32353037 33383538  IN__ 2.225073858
 27a0 35303732 30313338 33303930 32333237  5072013830902327
 27b0 31373333 32343034 3036652d 33303846  1733240406e-308F
 27c0 33327800 5f5f5549 4e545054 525f5459  32x.__UINTPTR_TY
 27d0 50455f5f 206c6f6e 6720756e 7369676e  PE__ long unsign
 27e0 65642069 6e74005f 5f494e54 31365f43  ed int.__INT16_C
 27f0 28632920 63005f5f 4743435f 48415645  (c) c.__GCC_HAVE
 2800 5f445741 5246325f 4346495f 41534d20  _DWARF2_CFI_ASM 
 2810 31005f5f 53495a45 4f465f46 4c4f4154  1.__SIZEOF_FLOAT
 2820 5f5f2034 005f5f44 45433332 5f535542  __ 4.__DEC32_SUB
 2830 4e4f524d 414c5f4d 494e5f5f 20302e30  NORMAL_MIN__ 0.0
 2840 30303030 31452d39 35444600 5f494f5f  00001E-95DF._IO_
 2850 49535f41 5050454e 44494e47 20307831  IS_APPENDING 0x1
 2860 30303000 5f5f464c 54363458 5f484153  000.__FLT64X_HAS
 2870 5f515549 45545f4e 414e5f5f 2031005f  _QUIET_NAN__ 1._
 2880 5f464c54 5f484153 5f494e46 494e4954  _FLT_HAS_INFINIT
 2890 595f5f20 31005f49 4f535f4e 4f524550  Y__ 1._IOS_NOREP
 28a0 4c414345 20363400 5f5f5354 445f5459  LACE 64.__STD_TY
 28b0 5045005f 5f555345 5f504f53 49583139  PE.__USE_POSIX19
 28c0 39333039 2031005f 494f5f73 697a655f  9309 1._IO_size_
 28d0 74207369 7a655f74 005f5f49 4e4f3634  t size_t.__INO64
 28e0 5f545f54 59504520 5f5f5551 5541445f  _T_TYPE __UQUAD_
 28f0 54595045 005f5f47 4e555f4c 49425241  TYPE.__GNU_LIBRA
 2900 52595f5f 2036005f 5f535444 435f5f20  RY__ 6.__STDC__ 
 2910 31005f5f 676c6962 635f6339 395f666c  1.__glibc_c99_fl
 2920 65786172 725f6176 61696c61 626c6520  exarr_available 
 2930 31005f5f 53534532 5f5f2031 005f5f53  1.__SSE2__ 1.__S
 2940 4c4f4e47 33325f54 59504520 696e7400  LONG32_TYPE int.
 2950 5f5f4442 4c5f4d41 585f4558 505f5f20  __DBL_MAX_EXP__ 
 2960 31303234 005f5f53 495a454f 465f4c4f  1024.__SIZEOF_LO
 2970 4e475f5f 2038005f 5f41544f 4d49435f  NG__ 8.__ATOMIC_
 2980 434f4e53 554d4520 31005f5f 5553455f  CONSUME 1.__USE_
 2990 46494c45 5f4f4646 53455436 34005f49  FILE_OFFSET64._I
 29a0 4f5f464c 41475332 5f4d4d41 50203100  O_FLAGS2_MMAP 1.
 29b0 5f5f464c 5433325f 4d494e5f 5f20312e  __FLT32_MIN__ 1.
 29c0 31373534 39343335 30383232 32383735  1754943508222875
 29d0 30373936 38373336 35333732 32323234  0796873653722224
 29e0 35363865 2d333846 3332005f 5f57494e  568e-38F32.__WIN
 29f0 545f5459 50455f5f 20756e73 69676e65  T_TYPE__ unsigne
 2a00 6420696e 74005f5f 5553455f 4d495343  d int.__USE_MISC
 2a10 005f494f 5f636c65 616e7570 5f726567  ._IO_cleanup_reg
 2a20 696f6e5f 656e6428 5f446f69 74292000  ion_end(_Doit) .
 2a30 5f5f494e 5431365f 4d41585f 5f203078  __INT16_MAX__ 0x
 2a40 37666666 005f504f 5349585f 435f534f  7fff._POSIX_C_SO
 2a50 55524345 20323030 3830394c 005f5f53  URCE 200809L.__S
 2a60 43484152 5f574944 54485f5f 2038005f  CHAR_WIDTH__ 8._
 2a70 5f55494e 5433325f 43286329 20632023  _UINT32_C(c) c #
 2a80 23205500 5f5f4c44 424c5f4d 494e5f31  # U.__LDBL_MIN_1
 2a90 305f4558 505f5f20 282d3439 33312900  0_EXP__ (-4931).
 2aa0 5f535444 494f5f55 5345535f 494f5354  _STDIO_USES_IOST
 2ab0 5245414d 20005f5f 53495a45 4f465f44  REAM .__SIZEOF_D
 2ac0 4f55424c 455f5f20 38005f5f 55494e54  OUBLE__ 8.__UINT
 2ad0 385f4328 63292063 005f5f42 4c4b434e  8_C(c) c.__BLKCN
 2ae0 5436345f 545f5459 5045205f 5f535155  T64_T_TYPE __SQU
 2af0 41445f54 59504500 5f5f5553 455f464f  AD_TYPE.__USE_FO
 2b00 52544946 595f4c45 56454c00 5f5f474c  RTIFY_LEVEL.__GL
 2b10 4942435f 5553455f 4c49425f 45585432  IBC_USE_LIB_EXT2
 2b20 005f5f57 494e545f 4d494e5f 5f203055  .__WINT_MIN__ 0U
 2b30 005f5f4c 44424c5f 4d414e54 5f444947  .__LDBL_MANT_DIG
 2b40 5f5f2036 34005f5f 70616431 005f5f70  __ 64.__pad1.__p
 2b50 61643200 5f5f7061 6433005f 5f706164  ad2.__pad3.__pad
 2b60 34005f5f 70616435 005f5f78 38365f36  4.__pad5.__x86_6
 2b70 34203100 5f5f4c44 424c5f45 5053494c  4 1.__LDBL_EPSIL
 2b80 4f4e5f5f 20312e30 38343230 32313732  ON__ 1.084202172
 2b90 34383535 30343433 34303037 34353238  4855044340074528
 2ba0 30303836 39393431 3731652d 31394c00  0086994171e-19L.
 2bb0 5f5f626f 73302870 74722920 5f5f6275  __bos0(ptr) __bu
 2bc0 696c7469 6e5f6f62 6a656374 5f73697a  iltin_object_siz
 2bd0 65202870 74722c20 3029005f 494f4c42  e (ptr, 0)._IOLB
 2be0 46203100 5f5f6174 74726962 7574655f  F 1.__attribute_
 2bf0 666f726d 61745f61 72675f5f 28782920  format_arg__(x) 
 2c00 5f5f6174 74726962 7574655f 5f202828  __attribute__ ((
 2c10 5f5f666f 726d6174 5f617267 5f5f2028  __format_arg__ (
 2c20 78292929 005f5f5f 5f46494c 455f6465  x))).____FILE_de
 2c30 66696e65 64203100 5f424954 535f5354  fined 1._BITS_ST
 2c40 44494f5f 4c494d5f 48203100 5f5f4c44  DIO_LIM_H 1.__LD
 2c50 424c5f48 41535f49 4e46494e 4954595f  BL_HAS_INFINITY_
 2c60 5f203100 5f5f5553 455f504f 53495820  _ 1.__USE_POSIX 
 2c70 31005f5f 494e4f5f 545f4d41 54434845  1.__INO_T_MATCHE
 2c80 535f494e 4f36345f 54203100 5f5f4743  S_INO64_T 1.__GC
 2c90 435f4945 435f3535 395f434f 4d504c45  C_IEC_559_COMPLE
 2ca0 58203200 5f5f5349 475f4154 4f4d4943  X 2.__SIG_ATOMIC
 2cb0 5f4d494e 5f5f2028 2d5f5f53 49475f41  _MIN__ (-__SIG_A
 2cc0 544f4d49 435f4d41 585f5f20 2d203129  TOMIC_MAX__ - 1)
 2cd0 005f494f 5f494e5f 4241434b 55502030  ._IO_IN_BACKUP 0
 2ce0 78313030 005f494f 5f666c6f 636b6669  x100._IO_flockfi
 2cf0 6c65285f 66702920 005f5f53 495a454f  le(_fp) .__SIZEO
 2d00 465f5743 4841525f 545f5f20 34005f5f  F_WCHAR_T__ 4.__
 2d10 61747472 69627574 655f6465 70726563  attribute_deprec
 2d20 61746564 5f5f205f 5f617474 72696275  ated__ __attribu
 2d30 74655f5f 2028285f 5f646570 72656361  te__ ((__depreca
 2d40 7465645f 5f292900 5f5f464c 54313238  ted__)).__FLT128
 2d50 5f4d494e 5f31305f 4558505f 5f20282d  _MIN_10_EXP__ (-
 2d60 34393331 29005f5f 464c4f41 545f574f  4931).__FLOAT_WO
 2d70 52445f4f 52444552 5f5f205f 5f4f5244  RD_ORDER__ __ORD
 2d80 45525f4c 4954544c 455f454e 4449414e  ER_LITTLE_ENDIAN
 2d90 5f5f005f 5f474343 5f484156 455f5359  __.__GCC_HAVE_SY
 2da0 4e435f43 4f4d5041 52455f41 4e445f53  NC_COMPARE_AND_S
 2db0 5741505f 32203100 5f475f48 4156455f  WAP_2 1._G_HAVE_
 2dc0 4d52454d 41502031 005f5f44 45433332  MREMAP 1.__DEC32
 2dd0 5f4d414e 545f4449 475f5f20 37005f5f  _MANT_DIG__ 7.__
 2de0 464c5433 325f4445 4e4f524d 5f4d494e  FLT32_DENORM_MIN
 2df0 5f5f2031 2e343031 32393834 36343332  __ 1.40129846432
 2e00 34383137 30373039 32333732 39353833  4817070923729583
 2e10 32383939 31363133 652d3435 46333200  28991613e-45F32.
 2e20 5f5f6e65 65645f73 697a655f 74005f5f  __need_size_t.__
 2e30 55494e54 5f464153 5431365f 4d41585f  UINT_FAST16_MAX_
 2e40 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 2e50 66666666 554c005f 5f6e6565 645f5f5f  ffffUL.__need___
 2e60 76615f6c 69737400 5f5f494e 5433325f  va_list.__INT32_
 2e70 4d41585f 5f203078 37666666 66666666  MAX__ 0x7fffffff
 2e80 005f494f 5f494e54 45524e41 4c203031  ._IO_INTERNAL 01
 2e90 30005f5f 5f696e74 5f73697a 655f745f  0.___int_size_t_
 2ea0 6820005f 5f676c69 62635f6c 696b656c  h .__glibc_likel
 2eb0 7928636f 6e642920 5f5f6275 696c7469  y(cond) __builti
 2ec0 6e5f6578 70656374 20282863 6f6e6429  n_expect ((cond)
 2ed0 2c203129 005f5f41 544f4d49 435f4143  , 1).__ATOMIC_AC
 2ee0 51554952 45203200 5f5f5549 4e543136  QUIRE 2.__UINT16
 2ef0 5f432863 29206300 5f494f5f 464c4147  _C(c) c._IO_FLAG
 2f00 53325f55 5345525f 57425546 2038005f  S2_USER_WBUF 8._
 2f10 5f494e54 36345f4d 41585f5f 20307837  _INT64_MAX__ 0x7
 2f20 66666666 66666666 66666666 6666664c  fffffffffffffffL
 2f30 005f5f6e 6565645f 73697a65 5f742000  .__need_size_t .
 2f40 5f5f626f 73287074 7229205f 5f627569  __bos(ptr) __bui
 2f50 6c74696e 5f6f626a 6563745f 73697a65  ltin_object_size
 2f60 20287074 722c205f 5f555345 5f464f52   (ptr, __USE_FOR
 2f70 54494659 5f4c4556 454c203e 20312900  TIFY_LEVEL > 1).
 2f80 5f5f5557 4f52445f 54595045 20756e73  __UWORD_TYPE uns
 2f90 69676e65 64206c6f 6e672069 6e74005f  igned long int._
 2fa0 5f474c49 42435f4d 494e4f52 5f5f2032  _GLIBC_MINOR__ 2
 2fb0 37005f5f 5345475f 47532031 005f5f53  7.__SEG_GS 1.__S
 2fc0 53455f4d 4154485f 5f203100 5f5f4e4c  SE_MATH__ 1.__NL
 2fd0 494e4b5f 545f5459 5045205f 5f535953  INK_T_TYPE __SYS
 2fe0 43414c4c 5f554c4f 4e475f54 59504500  CALL_ULONG_TYPE.
 2ff0 5f5f5549 4e544d41 585f5459 50455f5f  __UINTMAX_TYPE__
 3000 206c6f6e 6720756e 7369676e 65642069   long unsigned i
 3010 6e74005f 5f555345 5f584f50 454e324b  nt.__USE_XOPEN2K
 3020 005f5f4c 45414620 2c205f5f 6c656166  .__LEAF , __leaf
 3030 5f5f006d 61696e00 5f5f4445 43313238  __.main.__DEC128
 3040 5f4d4158 5f455850 5f5f2036 31343500  _MAX_EXP__ 6145.
 3050 5f494f5f 4c454654 20303200 5f5f666f  _IO_LEFT 02.__fo
 3060 72746966 795f6675 6e637469 6f6e205f  rtify_function _
 3070 5f657874 65726e5f 616c7761 79735f69  _extern_always_i
 3080 6e6c696e 65205f5f 61747472 69627574  nline __attribut
 3090 655f6172 74696669 6369616c 5f5f005f  e_artificial__._
 30a0 494f5f42 4f4f4c41 4c504841 20303230  IO_BOOLALPHA 020
 30b0 30303030 005f5f53 49475f41 544f4d49  0000.__SIG_ATOMI
 30c0 435f5749 4454485f 5f203332 005f5f43  C_WIDTH__ 32.__C
 30d0 4f4e4341 5428782c 79292078 20232320  ONCAT(x,y) x ## 
 30e0 79005f5f 61747472 69627574 655f6465  y.__attribute_de
 30f0 70726563 61746564 5f6d7367 5f5f286d  precated_msg__(m
 3100 73672920 5f5f6174 74726962 7574655f  sg) __attribute_
 3110 5f202828 5f5f6465 70726563 61746564  _ ((__deprecated
 3120 5f5f2028 6d736729 2929005f 5f534852  __ (msg))).__SHR
 3130 545f4d41 585f5f20 30783766 6666005f  T_MAX__ 0x7fff._
 3140 5f474343 5f41544f 4d49435f 57434841  _GCC_ATOMIC_WCHA
 3150 525f545f 4c4f434b 5f465245 45203200  R_T_LOCK_FREE 2.
 3160 5f494f5f 50454e44 494e475f 4f555450  _IO_PENDING_OUTP
 3170 55545f43 4f554e54 285f6670 29202828  UT_COUNT(_fp) ((
 3180 5f667029 2d3e5f49 4f5f7772 6974655f  _fp)->_IO_write_
 3190 70747220 2d20285f 6670292d 3e5f494f  ptr - (_fp)->_IO
 31a0 5f777269 74655f62 61736529 005f494f  _write_base)._IO
 31b0 5f555345 525f4c4f 434b2030 78383030  _USER_LOCK 0x800
 31c0 30005f5f 4f524445 525f5044 505f454e  0.__ORDER_PDP_EN
 31d0 4449414e 5f5f2033 34313200 5f494f5f  DIAN__ 3412._IO_
 31e0 554e4946 4945445f 4a554d50 5441424c  UNIFIED_JUMPTABL
 31f0 45532031 00544d50 5f4d4158 20323338  ES 1.TMP_MAX 238
 3200 33323800 5f494f5f 6e656564 5f6c6f63  328._IO_need_loc
 3210 6b285f66 70292028 28285f66 70292d3e  k(_fp) (((_fp)->
 3220 5f666c61 67733220 26205f49 4f5f464c  _flags2 & _IO_FL
 3230 41475332 5f4e4545 445f4c4f 434b2920  AGS2_NEED_LOCK) 
 3240 213d2030 29005f5f 464c545f 44454349  != 0).__FLT_DECI
 3250 4d414c5f 4449475f 5f203900 5f5f7761  MAL_DIG__ 9.__wa
 3260 726e6465 636c286e 616d652c 6d736729  rndecl(name,msg)
 3270 20657874 65726e20 766f6964 206e616d   extern void nam
 3280 65202876 6f696429 205f5f61 74747269  e (void) __attri
 3290 62757465 5f5f2828 5f5f7761 726e696e  bute__((__warnin
 32a0 675f5f20 286d7367 29292900 5f5f464c  g__ (msg))).__FL
 32b0 5436345f 4d41585f 31305f45 58505f5f  T64_MAX_10_EXP__
 32c0 20333038 005f5f53 5452494e 47287829   308.__STRING(x)
 32d0 20237800 5f5f4c44 424c5f4d 494e5f45   #x.__LDBL_MIN_E
 32e0 58505f5f 20282d31 36333831 29005f5f  XP__ (-16381).__
 32f0 57494e54 5f574944 54485f5f 20333200  WINT_WIDTH__ 32.
 3300 5f494f5f 53484f57 504f5320 30323030  _IO_SHOWPOS 0200
 3310 30005f49 4f5f7265 61645f65 6e64005f  0._IO_read_end._
 3320 5f464c54 3634585f 4d494e5f 5f20332e  _FLT64X_MIN__ 3.
 3330 33363231 30333134 33313132 30393335  3621031431120935
 3340 30363236 32363737 38313733 32313735  0626267781732175
 3350 32363065 2d343933 32463634 78005f49  260e-4932F64x._I
 3360 4f535f4f 55545055 54203200 5f5f494e  OS_OUTPUT 2.__IN
 3370 545f4641 5354385f 4d41585f 5f203078  T_FAST8_MAX__ 0x
 3380 3766005f 5f524547 49535445 525f5052  7f.__REGISTER_PR
 3390 45464958 5f5f2000 5f5f464c 5433325f  EFIX__ .__FLT32_
 33a0 45505349 4c4f4e5f 5f20312e 31393230  EPSILON__ 1.1920
 33b0 39323839 35353037 38313235 30303030  9289550781250000
 33c0 30303030 30303030 30303030 30303065  000000000000000e
 33d0 2d374633 32005f5f 474c4942 435f494e  -7F32.__GLIBC_IN
 33e0 5445524e 414c5f53 54415254 494e475f  TERNAL_STARTING_
 33f0 48454144 45525f49 4d504c45 4d454e54  HEADER_IMPLEMENT
 3400 4154494f 4e20005f 5f53574f 52445f54  ATION .__SWORD_T
 3410 59504520 6c6f6e67 20696e74 005f5f4c  YPE long int.__L
 3420 4f4e475f 4d41585f 5f203078 37666666  ONG_MAX__ 0x7fff
 3430 66666666 66666666 66666666 4c005f5f  ffffffffffffL.__
 3440 73747562 5f676574 6d736720 005f5f44  stub_getmsg .__D
 3450 45433634 5f4d4158 5f455850 5f5f2033  EC64_MAX_EXP__ 3
 3460 3835005f 5f464c54 3332585f 4d494e5f  85.__FLT32X_MIN_
 3470 31305f45 58505f5f 20282d33 30372900  10_EXP__ (-307).
 3480 5f5f5553 455f504f 53495832 005f494f  __USE_POSIX2._IO
 3490 5f554e49 54425546 20303230 30303000  _UNITBUF 020000.
 34a0 5f5f4f46 465f545f 54595045 205f5f53  __OFF_T_TYPE __S
 34b0 59534341 4c4c5f53 4c4f4e47 5f545950  YSCALL_SLONG_TYP
 34c0 45005f5f 55494e54 4d41585f 43286329  E.__UINTMAX_C(c)
 34d0 20632023 2320554c 005f5f43 48415233   c ## UL.__CHAR3
 34e0 325f5459 50455f5f 20756e73 69676e65  2_TYPE__ unsigne
 34f0 6420696e 74005f5f 464c5436 34585f48  d int.__FLT64X_H
 3500 41535f49 4e46494e 4954595f 5f203100  AS_INFINITY__ 1.
 3510 5f424954 535f475f 434f4e46 49475f48  _BITS_G_CONFIG_H
 3520 2031005f 5f444543 3132385f 4d494e5f   1.__DEC128_MIN_
 3530 5f203145 2d363134 33444c00 5f5f464c  _ 1E-6143DL.__FL
 3540 54333258 5f4d494e 5f455850 5f5f2028  T32X_MIN_EXP__ (
 3550 2d313032 3129005f 494f5f67 6574635f  -1021)._IO_getc_
 3560 756e6c6f 636b6564 285f6670 2920285f  unlocked(_fp) (_
 3570 494f5f42 45202828 5f667029 2d3e5f49  IO_BE ((_fp)->_I
 3580 4f5f7265 61645f70 7472203e 3d20285f  O_read_ptr >= (_
 3590 6670292d 3e5f494f 5f726561 645f656e  fp)->_IO_read_en
 35a0 642c2030 29203f20 5f5f7566 6c6f7720  d, 0) ? __uflow 
 35b0 285f6670 29203a20 2a28756e 7369676e  (_fp) : *(unsign
 35c0 65642063 68617220 2a292028 5f667029  ed char *) (_fp)
 35d0 2d3e5f49 4f5f7265 61645f70 74722b2b  ->_IO_read_ptr++
 35e0 29005f5f 494e5450 54525f57 49445448  ).__INTPTR_WIDTH
 35f0 5f5f2036 34005f5f 494e4f5f 545f5459  __ 64.__INO_T_TY
 3600 5045205f 5f535953 43414c4c 5f554c4f  PE __SYSCALL_ULO
 3610 4e475f54 59504500 5f5f5549 4e545f46  NG_TYPE.__UINT_F
 3620 41535438 5f545950 455f5f20 756e7369  AST8_TYPE__ unsi
 3630 676e6564 20636861 72005f5f 494e5433  gned char.__INT3
 3640 325f4328 63292063 005f5f46 5346494c  2_C(c) c.__FSFIL
 3650 434e5436 345f545f 54595045 205f5f55  CNT64_T_TYPE __U
 3660 51554144 5f545950 45005f5f 4c44424c  QUAD_TYPE.__LDBL
 3670 5f484153 5f515549 45545f4e 414e5f5f  _HAS_QUIET_NAN__
 3680 2031005f 5f474e55 435f5041 5443484c   1.__GNUC_PATCHL
 3690 4556454c 5f5f2030 005f5f57 494e545f  EVEL__ 0.__WINT_
 36a0 4d41585f 5f203078 66666666 66666666  MAX__ 0xffffffff
 36b0 55005f5f 61747472 69627574 655f6e6f  U.__attribute_no
 36c0 6e737472 696e675f 5f20005f 494f5f4d  nstring__ ._IO_M
 36d0 41474943 5f4d4153 4b203078 46464646  AGIC_MASK 0xFFFF
 36e0 30303030 005f5f6c 696e7578 2031005f  0000.__linux 1._
 36f0 5f474c49 42435f55 53455f49 45435f36  _GLIBC_USE_IEC_6
 3700 30353539 5f46554e 43535f45 5854005f  0559_FUNCS_EXT._
 3710 494f5f76 615f6c69 7374205f 5f676e75  IO_va_list __gnu
 3720 635f7661 5f6c6973 74005f47 5f425546  c_va_list._G_BUF
 3730 53495a20 38313932 005f5f4c 44424c5f  SIZ 8192.__LDBL_
 3740 52454449 5231286e 616d652c 70726f74  REDIR1(name,prot
 3750 6f2c616c 69617329 206e616d 65207072  o,alias) name pr
 3760 6f746f00 5f5f6174 74726962 7574655f  oto.__attribute_
 3770 6d616c6c 6f635f5f 205f5f61 74747269  malloc__ __attri
 3780 62757465 5f5f2028 285f5f6d 616c6c6f  bute__ ((__mallo
 3790 635f5f29 29005f5f 55494e54 33325f54  c__)).__UINT32_T
 37a0 5950455f 5f20756e 7369676e 65642069  YPE__ unsigned i
 37b0 6e74005f 5f4c4442 4c5f5245 4449525f  nt.__LDBL_REDIR_
 37c0 4e544828 6e616d65 2c70726f 746f2920  NTH(name,proto) 
 37d0 6e616d65 2070726f 746f205f 5f544852  name proto __THR
 37e0 4f57005f 5f555345 5f584f50 454e324b  OW.__USE_XOPEN2K
 37f0 38005f49 4f5f5550 50455243 41534520  8._IO_UPPERCASE 
 3800 30313030 3000505f 746d7064 69722022  01000.P_tmpdir "
 3810 2f746d70 22005f5f 52454449 52454354  /tmp".__REDIRECT
 3820 5f4e5448 286e616d 652c7072 6f746f2c  _NTH(name,proto,
 3830 616c6961 7329206e 616d6520 70726f74  alias) name prot
 3840 6f205f5f 61736d5f 5f20285f 5f41534d  o __asm__ (__ASM
 3850 4e414d45 20282361 6c696173 2929205f  NAME (#alias)) _
 3860 5f544852 4f57005f 5f555345 5f584f50  _THROW.__USE_XOP
 3870 454e005f 5f464c54 3132385f 45505349  EN.__FLT128_EPSI
 3880 4c4f4e5f 5f20312e 39323539 32393934  LON__ 1.92592994
 3890 34333837 32333538 35333035 35393737  4387235853055977
 38a0 39343235 38343932 37333265 2d333446  94258492732e-34F
 38b0 31323800 464f5045 4e5f4d41 58203136  128.FOPEN_MAX 16
 38c0 005f494f 5f46494c 455f706c 7573005f  ._IO_FILE_plus._
 38d0 504f5349 585f435f 534f5552 4345005f  POSIX_C_SOURCE._
 38e0 5f544852 4f57205f 5f617474 72696275  _THROW __attribu
 38f0 74655f5f 2028285f 5f6e6f74 68726f77  te__ ((__nothrow
 3900 5f5f205f 5f4c4541 46292900 5f5f5349  __ __LEAF)).__SI
 3910 5a454f46 5f4c4f4e 475f4c4f 4e475f5f  ZEOF_LONG_LONG__
 3920 2038005f 56415f4c 4953545f 44454649   8._VA_LIST_DEFI
 3930 4e454420 005f5f55 494e545f 46415354  NED .__UINT_FAST
 3940 33325f54 5950455f 5f206c6f 6e672075  32_TYPE__ long u
 3950 6e736967 6e656420 696e7400 5f5f5348  nsigned int.__SH
 3960 52545f57 49445448 5f5f2031 36005f5f  RT_WIDTH__ 16.__
 3970 53534532 5f4d4154 485f5f20 31005f5f  SSE2_MATH__ 1.__
 3980 5353495a 455f545f 54595045 205f5f53  SSIZE_T_TYPE __S
 3990 574f5244 5f545950 45005f5f 5336345f  WORD_TYPE.__S64_
 39a0 54595045 206c6f6e 6720696e 74005f5f  TYPE long int.__
 39b0 61747472 69627574 655f7075 72655f5f  attribute_pure__
 39c0 205f5f61 74747269 62757465 5f5f2028   __attribute__ (
 39d0 285f5f70 7572655f 5f292900 5f5f494e  (__pure__)).__IN
 39e0 544d4158 5f432863 29206320 2323204c  TMAX_C(c) c ## L
 39f0 005f494f 5f69636f 6e765f74 205f475f  ._IO_iconv_t _G_
 3a00 69636f6e 765f7400 5f5f494e 545f4641  iconv_t.__INT_FA
 3a10 53543332 5f574944 54485f5f 20363400  ST32_WIDTH__ 64.
 3a20 5f5f5553 455f584f 50454e32 4b382031  __USE_XOPEN2K8 1
 3a30 005f5f49 4e545f4c 45415354 36345f57  .__INT_LEAST64_W
 3a40 49445448 5f5f2036 34005f5f 474c4942  IDTH__ 64.__GLIB
 3a50 435f5553 455f4945 435f3630 3535395f  C_USE_IEC_60559_
 3a60 54595045 535f4558 54203000 5f5f494e  TYPES_EXT 0.__IN
 3a70 54385f43 28632920 63005f5f 53495a45  T8_C(c) c.__SIZE
 3a80 4f465f50 4f494e54 45525f5f 2038005f  OF_POINTER__ 8._
 3a90 5f464c54 36345f45 5053494c 4f4e5f5f  _FLT64_EPSILON__
 3aa0 20322e32 32303434 36303439 32353033   2.2204460492503
 3ab0 31333038 30383437 32363333 33363138  1308084726333618
 3ac0 31363430 3632652d 31364636 34005f49  164062e-16F64._I
 3ad0 4f5f7661 5f6c6973 74205f47 5f76615f  O_va_list _G_va_
 3ae0 6c697374 005f5f46 4c543634 585f4d41  list.__FLT64X_MA
 3af0 4e545f44 49475f5f 20363400 5f444546  NT_DIG__ 64._DEF
 3b00 41554c54 5f534f55 52434500 5f5f5743  AULT_SOURCE.__WC
 3b10 4841525f 4d41585f 5f203078 37666666  HAR_MAX__ 0x7fff
 3b20 66666666 005f494f 5f425546 53495a20  ffff._IO_BUFSIZ 
 3b30 5f475f42 55465349 5a005f5f 46534649  _G_BUFSIZ.__FSFI
 3b40 4c434e54 5f545f54 59504520 5f5f5359  LCNT_T_TYPE __SY
 3b50 5343414c 4c5f554c 4f4e475f 54595045  SCALL_ULONG_TYPE
 3b60 005f494f 5f424144 5f534545 4e203078  ._IO_BAD_SEEN 0x
 3b70 34303030 005f5f77 61726e61 74747228  4000.__warnattr(
 3b80 6d736729 205f5f61 74747269 62757465  msg) __attribute
 3b90 5f5f2828 5f5f7761 726e696e 675f5f20  __((__warning__ 
 3ba0 286d7367 29292900 5f5f494e 545f5749  (msg))).__INT_WI
 3bb0 4454485f 5f203332 005f5f4c 44424c5f  DTH__ 32.__LDBL_
 3bc0 44454349 4d414c5f 4449475f 5f203231  DECIMAL_DIG__ 21
 3bd0 005f5f47 43435f41 544f4d49 435f504f  .__GCC_ATOMIC_PO
 3be0 494e5445 525f4c4f 434b5f46 52454520  INTER_LOCK_FREE 
 3bf0 32005f5f 73747562 5f5f5f63 6f6d7061  2.__stub___compa
 3c00 745f6264 666c7573 68200046 4f50454e  t_bdflush .FOPEN
 3c10 5f4d4158 005f6c6f 636b005f 5f534547  _MAX._lock.__SEG
 3c20 5f465320 31005f5f 50286172 67732920  _FS 1.__P(args) 
 3c30 61726773 005f5f54 494d455f 545f5459  args.__TIME_T_TY
 3c40 5045205f 5f535953 43414c4c 5f534c4f  PE __SYSCALL_SLO
 3c50 4e475f54 59504500 5f5f5549 4e545f46  NG_TYPE.__UINT_F
 3c60 41535431 365f5459 50455f5f 206c6f6e  AST16_TYPE__ lon
 3c70 6720756e 7369676e 65642069 6e74005f  g unsigned int._
 3c80 5f474c49 42435f5f 2032005f 494f5f73  _GLIBC__ 2._IO_s
 3c90 74646f75 74202828 5f494f5f 46494c45  tdout ((_IO_FILE
 3ca0 2a292826 5f494f5f 325f315f 7374646f  *)(&_IO_2_1_stdo
 3cb0 75745f29 29005f5f 55534552 5f4c4142  ut_)).__USER_LAB
 3cc0 454c5f50 52454649 585f5f20 005f494f  EL_PREFIX__ ._IO
 3cd0 5f706964 5f74205f 5f706964 5f74005f  _pid_t __pid_t._
 3ce0 5f676c69 62635f6d 6163726f 5f776172  _glibc_macro_war
 3cf0 6e696e67 31286d65 73736167 6529205f  ning1(message) _
 3d00 50726167 6d612028 236d6573 73616765  Pragma (#message
 3d10 29005f5f 4743435f 41544f4d 49435f43  ).__GCC_ATOMIC_C
 3d20 48415233 325f545f 4c4f434b 5f465245  HAR32_T_LOCK_FRE
 3d30 45203200 5f6f6c64 5f6f6666 73657400  E 2._old_offset.
 3d40 5f494f5f 46494c45 005f494f 5f554e42  _IO_FILE._IO_UNB
 3d50 55464645 52454420 32005f5f 43484152  UFFERED 2.__CHAR
 3d60 5f424954 5f5f2038 005f5f43 4c4f434b  _BIT__ 8.__CLOCK
 3d70 5f545f54 59504520 5f5f5359 5343414c  _T_TYPE __SYSCAL
 3d80 4c5f534c 4f4e475f 54595045 005f5f41  L_SLONG_TYPE.__A
 3d90 544f4d49 435f5245 4c415845 44203000  TOMIC_RELAXED 0.
 3da0 5f494f5f 7373697a 655f7420 5f5f7373  _IO_ssize_t __ss
 3db0 697a655f 74005f5f 53544443 5f484f53  ize_t.__STDC_HOS
 3dc0 5445445f 5f203100 5f5f5349 5a455f57  TED__ 1.__SIZE_W
 3dd0 49445448 5f5f2036 34005f5f 52454449  IDTH__ 64.__REDI
 3de0 52454354 5f4c4442 4c286e61 6d652c70  RECT_LDBL(name,p
 3df0 726f746f 2c616c69 61732920 5f5f5245  roto,alias) __RE
 3e00 44495245 43542028 6e616d65 2c207072  DIRECT (name, pr
 3e10 6f746f2c 20616c69 61732900 5f5f616c  oto, alias).__al
 3e20 77617973 5f696e6c 696e6500 5f5f6861  ways_inline.__ha
 3e30 735f696e 636c7564 65285354 5229205f  s_include(STR) _
 3e40 5f686173 5f696e63 6c756465 5f5f2853  _has_include__(S
 3e50 54522900 5f5f6e65 65645f5f 5f76615f  TR).__need___va_
 3e60 6c697374 20005f5f 41534d4e 414d4532  list .__ASMNAME2
 3e70 28707265 6669782c 636e616d 6529205f  (prefix,cname) _
 3e80 5f535452 494e4720 28707265 66697829  _STRING (prefix)
 3e90 20636e61 6d65005f 494f5f53 4349454e   cname._IO_SCIEN
 3ea0 54494649 43203034 30303000 5f494f5f  TIFIC 04000._IO_
 3eb0 7065656b 635f756e 6c6f636b 6564285f  peekc_unlocked(_
 3ec0 66702920 285f494f 5f424520 28285f66  fp) (_IO_BE ((_f
 3ed0 70292d3e 5f494f5f 72656164 5f707472  p)->_IO_read_ptr
 3ee0 203e3d20 285f6670 292d3e5f 494f5f72   >= (_fp)->_IO_r
 3ef0 6561645f 656e642c 20302920 2626205f  ead_end, 0) && _
 3f00 5f756e64 6572666c 6f772028 5f667029  _underflow (_fp)
 3f10 203d3d20 454f4620 3f20454f 46203a20   == EOF ? EOF : 
 3f20 2a28756e 7369676e 65642063 68617220  *(unsigned char 
 3f30 2a292028 5f667029 2d3e5f49 4f5f7265  *) (_fp)->_IO_re
 3f40 61645f70 74722900 5f5f4c4f 4e475f57  ad_ptr).__LONG_W
 3f50 49445448 5f5f2036 34005f5f 55494e54  IDTH__ 64.__UINT
 3f60 36345f4d 41585f5f 20307866 66666666  64_MAX__ 0xfffff
 3f70 66666666 66666666 66666655 4c005f5f  fffffffffffUL.__
 3f80 53515541 445f5459 5045206c 6f6e6720  SQUAD_TYPE long 
 3f90 696e7400 5f5f5553 455f584f 50454e32  int.__USE_XOPEN2
 3fa0 4b585349 005f5f61 74747269 62757465  KXSI.__attribute
 3fb0 5f616c6c 6f635f73 697a655f 5f287061  _alloc_size__(pa
 3fc0 72616d73 29205f5f 61747472 69627574  rams) __attribut
 3fd0 655f5f20 28285f5f 616c6c6f 635f7369  e__ ((__alloc_si
 3fe0 7a655f5f 20706172 616d7329 29005f49  ze__ params))._I
 3ff0 4f5f7769 6e745f74 2077696e 745f7400  O_wint_t wint_t.
 4000 5f5f6b38 2031005f 5f474343 5f41544f  __k8 1.__GCC_ATO
 4010 4d49435f 4c4c4f4e 475f4c4f 434b5f46  MIC_LLONG_LOCK_F
 4020 52454520 32005f5f 44454336 345f4d49  REE 2.__DEC64_MI
 4030 4e5f4558 505f5f20 282d3338 3229005f  N_EXP__ (-382)._
 4040 5f726573 74726963 745f6172 72205f5f  _restrict_arr __
 4050 72657374 72696374 005f5f41 544f4d49  restrict.__ATOMI
 4060 435f4143 515f5245 4c203400 5f494f5f  C_ACQ_REL 4._IO_
 4070 66706f73 5f74205f 475f6670 6f735f74  fpos_t _G_fpos_t
 4080 005f5f61 74747269 62757465 5f666f72  .__attribute_for
 4090 6d61745f 73747266 6d6f6e5f 5f28612c  mat_strfmon__(a,
 40a0 6229205f 5f617474 72696275 74655f5f  b) __attribute__
 40b0 2028285f 5f666f72 6d61745f 5f20285f   ((__format__ (_
 40c0 5f737472 666d6f6e 5f5f2c20 612c2062  _strfmon__, a, b
 40d0 29292900 5f5f4445 4333325f 4d494e5f  ))).__DEC32_MIN_
 40e0 4558505f 5f20282d 39342900 5f494f5f  EXP__ (-94)._IO_
 40f0 46495845 44203031 30303030 005f5f49  FIXED 010000.__I
 4100 4e543634 5f545950 455f5f20 6c6f6e67  NT64_TYPE__ long
 4110 20696e74 005f5f46 4c545f4d 494e5f5f   int.__FLT_MIN__
 4120 20312e31 37353439 34333530 38323232   1.1754943508222
 4130 38373530 37393638 37333635 33373232  8750796873653722
 4140 32323435 3638652d 33384600 5f5f5536  224568e-38F.__U6
 4150 345f5459 50452075 6e736967 6e656420  4_TYPE unsigned 
 4160 6c6f6e67 20696e74 005f7362 7566005f  long int._sbuf._
 4170 494f5f76 615f6c69 73740073 74646f75  IO_va_list.stdou
 4180 74207374 646f7574 005f5f55 53455f47  t stdout.__USE_G
 4190 4e55005f 5f54494d 45525f54 5f545950  NU.__TIMER_T_TYP
 41a0 4520766f 6964202a 005f494f 5f777269  E void *._IO_wri
 41b0 74655f70 7472005f 5f465853 525f5f20  te_ptr.__FXSR__ 
 41c0 31005f5f 4c454146 5f415454 52205f5f  1.__LEAF_ATTR __
 41d0 61747472 69627574 655f5f20 28285f5f  attribute__ ((__
 41e0 6c656166 5f5f2929 005f5f49 4e54385f  leaf__)).__INT8_
 41f0 54595045 5f5f2073 69676e65 64206368  TYPE__ signed ch
 4200 6172005f 5f494e54 5f4c4541 53543332  ar.__INT_LEAST32
 4210 5f574944 54485f5f 20333200 5f5f5359  _WIDTH__ 32.__SY
 4220 5343414c 4c5f534c 4f4e475f 54595045  SCALL_SLONG_TYPE
 4230 205f5f53 4c4f4e47 574f5244 5f545950   __SLONGWORD_TYP
 4240 45005f5f 55494e54 4d41585f 4d41585f  E.__UINTMAX_MAX_
 4250 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 4260 66666666 554c005f 5f676c69 62635f63  ffffUL.__glibc_c
 4270 6c616e67 5f707265 72657128 6d616a2c  lang_prereq(maj,
 4280 6d696e29 2030005f 494f5f62 61636b75  min) 0._IO_backu
 4290 705f6261 7365005f 5f6c696e 75785f5f  p_base.__linux__
 42a0 2031005f 5f504943 5f5f2032 005f5f49   1.__PIC__ 2.__I
 42b0 4e545f4c 45415354 33325f54 5950455f  NT_LEAST32_TYPE_
 42c0 5f20696e 74005f5f 55494e54 5f4c4541  _ int.__UINT_LEA
 42d0 53543634 5f545950 455f5f20 6c6f6e67  ST64_TYPE__ long
 42e0 20756e73 69676e65 6420696e 74005f49   unsigned int._I
 42f0 4f5f7075 74635f75 6e6c6f63 6b656428  O_putc_unlocked(
 4300 5f63682c 5f667029 20285f49 4f5f4245  _ch,_fp) (_IO_BE
 4310 2028285f 6670292d 3e5f494f 5f777269   ((_fp)->_IO_wri
 4320 74655f70 7472203e 3d20285f 6670292d  te_ptr >= (_fp)-
 4330 3e5f494f 5f777269 74655f65 6e642c20  >_IO_write_end, 
 4340 3029203f 205f5f6f 76657266 6c6f7720  0) ? __overflow 
 4350 285f6670 2c202875 6e736967 6e656420  (_fp, (unsigned 
 4360 63686172 2920285f 63682929 203a2028  char) (_ch)) : (
 4370 756e7369 676e6564 20636861 72292028  unsigned char) (
 4380 2a285f66 70292d3e 5f494f5f 77726974  *(_fp)->_IO_writ
 4390 655f7074 722b2b20 3d20285f 63682929  e_ptr++ = (_ch))
 43a0 29005f50 4f534958 5f534f55 52434520  )._POSIX_SOURCE 
 43b0 31005f49 4f5f444f 4e545f43 4c4f5345  1._IO_DONT_CLOSE
 43c0 20303130 30303030 005f5f47 4c494243   0100000.__GLIBC
 43d0 5f555345 5f494543 5f363035 35395f42  _USE_IEC_60559_B
 43e0 46505f45 5854005f 5f53495a 455f4d41  FP_EXT.__SIZE_MA
 43f0 585f5f20 30786666 66666666 66666666  X__ 0xffffffffff
 4400 66666666 6666554c 005f5f55 49445f54  ffffffUL.__UID_T
 4410 5f545950 45205f5f 5533325f 54595045  _TYPE __U32_TYPE
 4420 005f5f55 4c4f4e47 574f5244 5f545950  .__ULONGWORD_TYP
 4430 4520756e 7369676e 6564206c 6f6e6720  E unsigned long 
 4440 696e7400 5f5f4743 435f4154 4f4d4943  int.__GCC_ATOMIC
 4450 5f53484f 52545f4c 4f434b5f 46524545  _SHORT_LOCK_FREE
 4460 2032005f 5f464c54 3634585f 44454349   2.__FLT64X_DECI
 4470 4d414c5f 4449475f 5f203231 00534545  MAL_DIG__ 21.SEE
 4480 4b5f5345 54203000 5f5f5553 455f584f  K_SET 0.__USE_XO
 4490 50454e5f 45585445 4e444544 005f5f49  PEN_EXTENDED.__I
 44a0 4e545f46 41535431 365f4d41 585f5f20  NT_FAST16_MAX__ 
 44b0 30783766 66666666 66666666 66666666  0x7fffffffffffff
 44c0 66664c00 5f5f464c 545f4550 53494c4f  ffL.__FLT_EPSILO
 44d0 4e5f5f20 312e3139 32303932 38393535  N__ 1.1920928955
 44e0 30373831 32353030 30303030 30303030  0781250000000000
 44f0 30303030 30303030 30652d37 46005f5f  000000000e-7F.__
 4500 464c5436 345f4d49 4e5f4558 505f5f20  FLT64_MIN_EXP__ 
 4510 282d3130 32312900 5f494f53 5f415050  (-1021)._IOS_APP
 4520 454e4420 38005f5f 474c4942 435f494e  END 8.__GLIBC_IN
 4530 5445524e 414c5f53 54415254 494e475f  TERNAL_STARTING_
 4540 48454144 45525f49 4d504c45 4d454e54  HEADER_IMPLEMENT
 4550 4154494f 4e005f5f 464c545f 4556414c  ATION.__FLT_EVAL
 4560 5f4d4554 484f445f 54535f31 38363631  _METHOD_TS_18661
 4570 5f335f5f 2030005f 5f44424c 5f484153  _3__ 0.__DBL_HAS
 4580 5f494e46 494e4954 595f5f20 31005f5f  _INFINITY__ 1.__
 4590 61747472 69627574 655f7761 726e5f75  attribute_warn_u
 45a0 6e757365 645f7265 73756c74 5f5f205f  nused_result__ _
 45b0 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 45c0 5f776172 6e5f756e 75736564 5f726573  _warn_unused_res
 45d0 756c745f 5f292900 5f5f494e 5436345f  ult__)).__INT64_
 45e0 43286329 20632023 23204c00 5f5f454e  C(c) c ## L.__EN
 45f0 445f4445 434c5320 005f5f46 4c545f48  D_DECLS .__FLT_H
 4600 41535f51 55494554 5f4e414e 5f5f2031  AS_QUIET_NAN__ 1
 4610 005f5f53 495a454f 465f494e 545f5f20  .__SIZEOF_INT__ 
 4620 34005f5f 434c4f43 4b49445f 545f5459  4.__CLOCKID_T_TY
 4630 5045205f 5f533332 5f545950 45005f5f  PE __S32_TYPE.__
 4640 494e545f 46415354 31365f54 5950455f  INT_FAST16_TYPE_
 4650 5f206c6f 6e672069 6e74005f 5f535444  _ long int.__STD
 4660 435f4945 435f3535 395f5f20 31005f5f  C_IEC_559__ 1.__
 4670 44454331 32385f53 55424e4f 524d414c  DEC128_SUBNORMAL
 4680 5f4d494e 5f5f2030 2e303030 30303030  _MIN__ 0.0000000
 4690 30303030 30303030 30303030 30303030  0000000000000000
 46a0 30303030 30303030 3031452d 36313433  0000000001E-6143
 46b0 444c005f 5f555345 5f4c4152 47454649  DL.__USE_LARGEFI
 46c0 4c45005f 5f53495a 454f465f 464c4f41  LE.__SIZEOF_FLOA
 46d0 5438305f 5f203136 005f5f46 4c543332  T80__ 16.__FLT32
 46e0 585f4841 535f5155 4945545f 4e414e5f  X_HAS_QUIET_NAN_
 46f0 5f203100 5f5f4442 4c5f4d41 585f3130  _ 1.__DBL_MAX_10
 4700 5f455850 5f5f2033 3038005f 5f555345  _EXP__ 308.__USE
 4710 5f4d4953 43203100 5f5f4758 585f4142  _MISC 1.__GXX_AB
 4720 495f5645 5253494f 4e203130 3131005f  I_VERSION 1011._
 4730 5f706963 5f5f2032 005f5f41 544f4d49  _pic__ 2.__ATOMI
 4740 435f5245 4c454153 45203300 5f5f5353  C_RELEASE 3.__SS
 4750 455f5f20 31005f49 4f5f4e4f 5f524541  E__ 1._IO_NO_REA
 4760 44532034 005f5f47 4c494243 5f555345  DS 4.__GLIBC_USE
 4770 5f494543 5f363035 35395f46 554e4353  _IEC_60559_FUNCS
 4780 5f455854 2030005f 5f424947 47455354  _EXT 0.__BIGGEST
 4790 5f414c49 474e4d45 4e545f5f 20313600  _ALIGNMENT__ 16.
 47a0 5f53495a 45545f20 005f5f46 4c543132  _SIZET_ .__FLT12
 47b0 385f4445 4e4f524d 5f4d494e 5f5f2036  8_DENORM_MIN__ 6
 47c0 2e343735 31373531 31393433 38303235  .475175119438025
 47d0 31313039 32343433 38393538 32323736  1109244389582276
 47e0 34363535 652d3439 36364631 3238005f  4655e-4966F128._
 47f0 5f474c49 42435f55 53455f49 45435f36  _GLIBC_USE_IEC_6
 4800 30353539 5f424650 5f455854 2030005f  0559_BFP_EXT 0._
 4810 5f737475 625f7265 766f6b65 20005f5f  _stub_revoke .__
 4820 494e544d 41585f54 5950455f 5f206c6f  INTMAX_TYPE__ lo
 4830 6e672069 6e74005f 5f464c54 5f4d494e  ng int.__FLT_MIN
 4840 5f455850 5f5f2028 2d313235 29005f5f  _EXP__ (-125).__
 4850 5353505f 5354524f 4e475f5f 2033005f  SSP_STRONG__ 3._
 4860 5f657272 6f726465 636c286e 616d652c  _errordecl(name,
 4870 6d736729 20657874 65726e20 766f6964  msg) extern void
 4880 206e616d 65202876 6f696429 205f5f61   name (void) __a
 4890 74747269 62757465 5f5f2828 5f5f6572  ttribute__((__er
 48a0 726f725f 5f20286d 73672929 29005f5f  ror__ (msg))).__
 48b0 44454331 32385f4d 41585f5f 20392e39  DEC128_MAX__ 9.9
 48c0 39393939 39393939 39393939 39393939  9999999999999999
 48d0 39393939 39393939 39393939 39393939  9999999999999999
 48e0 45363134 34444c00 5f5f464c 545f4d41  E6144DL.__FLT_MA
 48f0 585f4558 505f5f20 31323800 5f5f4154  X_EXP__ 128.__AT
 4900 4f4d4943 5f484c45 5f414351 55495245  OMIC_HLE_ACQUIRE
 4910 20363535 3336005f 5f4f4646 36345f54   65536.__OFF64_T
 4920 5f545950 45205f5f 53515541 445f5459  _TYPE __SQUAD_TY
 4930 5045005f 5f555345 5f49534f 43313100  PE.__USE_ISOC11.
 4940 5f494f5f 53544449 4f203034 30303030  _IO_STDIO 040000
 4950 005f5f44 45565f54 5f545950 45205f5f  .__DEV_T_TYPE __
 4960 55515541 445f5459 5045005f 5f435055  UQUAD_TYPE.__CPU
 4970 5f4d4153 4b5f5459 5045205f 5f535953  _MASK_TYPE __SYS
 4980 43414c4c 5f554c4f 4e475f54 59504500  CALL_ULONG_TYPE.
 4990 5f5f5549 4e545f4c 45415354 33325f4d  __UINT_LEAST32_M
 49a0 41585f5f 20307866 66666666 66666655  AX__ 0xffffffffU
 49b0 005f494f 5f424528 65787072 2c726573  ._IO_BE(expr,res
 49c0 29205f5f 6275696c 74696e5f 65787065  ) __builtin_expe
 49d0 63742028 28657870 72292c20 72657329  ct ((expr), res)
 49e0 005f5f41 534d4e41 4d452863 6e616d65  .__ASMNAME(cname
 49f0 29205f5f 41534d4e 414d4532 20285f5f  ) __ASMNAME2 (__
 4a00 55534552 5f4c4142 454c5f50 52454649  USER_LABEL_PREFI
 4a10 585f5f2c 20636e61 6d652900 5f5f464c  X__, cname).__FL
 4a20 54333258 5f4d4158 5f31305f 4558505f  T32X_MAX_10_EXP_
 4a30 5f203330 38005f5f 616d6436 34203100  _ 308.__amd64 1.
 4a40 5f5f574f 52445349 5a452036 34005f5f  __WORDSIZE 64.__
 4a50 756e6978 2031005f 63686169 6e005f5f  unix 1._chain.__
 4a60 464c5436 345f4445 4e4f524d 5f4d494e  FLT64_DENORM_MIN
 4a70 5f5f2034 2e393430 36353634 35383431  __ 4.94065645841
 4a80 32343635 34343137 36353638 37393238  2465441765687928
 4a90 36383232 31333732 652d3332 34463634  68221372e-324F64
 4aa0 004c5f63 7465726d 69642039 005f5f50  .L_ctermid 9.__P
 4ab0 54524449 46465f54 5950455f 5f206c6f  TRDIFF_TYPE__ lo
 4ac0 6e672069 6e74005f 5f464c54 33325f4d  ng int.__FLT32_M
 4ad0 41585f31 305f4558 505f5f20 3338005f  AX_10_EXP__ 38._
 4ae0 5f574f52 4453495a 455f5449 4d453634  _WORDSIZE_TIME64
 4af0 5f434f4d 50415433 32203100 5f5f464c  _COMPAT32 1.__FL
 4b00 54313238 5f444543 494d414c 5f444947  T128_DECIMAL_DIG
 4b10 5f5f2033 36005f5f 50545244 4946465f  __ 36.__PTRDIFF_
 4b20 57494454 485f5f20 3634005f 5f44424c  WIDTH__ 64.__DBL
 4b30 5f444543 494d414c 5f444947 5f5f2031  _DECIMAL_DIG__ 1
 4b40 37005f5f 55494e54 5f464153 5436345f  7.__UINT_FAST64_
 4b50 54595045 5f5f206c 6f6e6720 756e7369  TYPE__ long unsi
 4b60 676e6564 20696e74 005f5f73 7475625f  gned int.__stub_
 4b70 7373746b 20005f49 4f5f6670 6f733634  sstk ._IO_fpos64
 4b80 5f74205f 475f6670 6f733634 5f74005f  _t _G_fpos64_t._
 4b90 5f544852 4f574e4c 205f5f61 74747269  _THROWNL __attri
 4ba0 62757465 5f5f2028 285f5f6e 6f746872  bute__ ((__nothr
 4bb0 6f775f5f 2929005f 5f4c4442 4c5f4d41  ow__)).__LDBL_MA
 4bc0 585f3130 5f455850 5f5f2034 39333200  X_10_EXP__ 4932.
 4bd0 5f5f4445 4336345f 4d494e5f 5f203145  __DEC64_MIN__ 1E
 4be0 2d333833 4444005f 5f464c54 33325f4d  -383DD.__FLT32_M
 4bf0 41585f5f 20332e34 30323832 33343636  AX__ 3.402823466
 4c00 33383532 38383539 38313137 30343138  3852885981170418
 4c10 33343834 35313639 3235652b 33384633  3484516925e+38F3
 4c20 32005f5f 44424c5f 45505349 4c4f4e5f  2.__DBL_EPSILON_
 4c30 5f202828 646f7562 6c652932 2e323230  _ ((double)2.220
 4c40 34343630 34393235 30333133 30383038  4460492503130808
 4c50 34373236 33333336 31383136 34303632  4726333618164062
 4c60 652d3136 4c29005f 6375725f 636f6c75  e-16L)._cur_colu
 4c70 6d6e005f 5f505241 474d415f 52454445  mn.__PRAGMA_REDE
 4c80 46494e45 5f455854 4e414d45 2031005f  FINE_EXTNAME 1._
 4c90 5f534947 5f41544f 4d49435f 54595045  _SIG_ATOMIC_TYPE
 4ca0 5f5f2069 6e74005f 5f464c54 3634585f  __ int.__FLT64X_
 4cb0 44454e4f 524d5f4d 494e5f5f 20332e36  DENORM_MIN__ 3.6
 4cc0 34353139 39353331 38383234 37343630  4519953188247460
 4cd0 32353238 34303539 33333631 39343139  2528405933619419
 4ce0 3832652d 34393531 46363478 005f5f55  82e-4951F64x.__U
 4cf0 53455f50 4f534958 005f5f46 4c543132  SE_POSIX.__FLT12
 4d00 385f4841 535f4445 4e4f524d 5f5f2031  8_HAS_DENORM__ 1
 4d10 005f494f 5f435552 52454e54 4c595f50  ._IO_CURRENTLY_P
 4d20 55545449 4e472030 78383030 005f5f4c  UTTING 0x800.__L
 4d30 44424c5f 4841535f 44454e4f 524d5f5f  DBL_HAS_DENORM__
 4d40 2031005f 756e7573 65643200 5f494f5f   1._unused2._IO_
 4d50 6275665f 62617365 005f5f73 7475625f  buf_base.__stub_
 4d60 6c63686d 6f642000 5f5f464c 5436345f  lchmod .__FLT64_
 4d70 4d414e54 5f444947 5f5f2035 33005f5f  MANT_DIG__ 53.__
 4d80 44454336 345f4d41 4e545f44 49475f5f  DEC64_MANT_DIG__
 4d90 20313600 5f5f464c 545f4841 535f4445   16.__FLT_HAS_DE
 4da0 4e4f524d 5f5f2031 005f5f49 4e545f46  NORM__ 1.__INT_F
 4db0 41535436 345f5749 4454485f 5f203634  AST64_WIDTH__ 64
 4dc0 005f5f44 4543494d 414c5f44 49475f5f  .__DECIMAL_DIG__
 4dd0 20323100                              21.            
Contents of section .debug_macro:
 0000 04000200 00000007 0f010000 03000103  ................
 0010 1f070717 09000004 03010507 39090000  ............9...
 0020 031b0806 1f264500 00032109 07490900  .....&E...!..I..
 0030 0003a803 0a07e70a 000003ab 030b074f  ...............O
 0040 0c000004 03ac030c 0407650c 00000403  ..........e.....
 0050 c0030d03 0a0e07af 0c000004 04040707  ................
 0060 0d000004 073b0d00 00032102 074b0d00  .....;....!..K..
 0070 00040323 030518b9 14000003 1b0b074f  ...#...........O
 0080 0c000004 07e20d00 00038201 0f07400e  ..............@.
 0090 00000406 cc01a828 00000403 24100502  .......(....$...
 00a0 252c0000 04032511 0502272c 00000405  %,....%...',....
 00b0 27a02a00 00032904 051d9d10 00000323  '.*...)........#
 00c0 12072e0f 00000313 0207440f 00000403  ..........D.....
 00d0 15130502 f81a0000 0407640f 00000407  ..........d.....
 00e0 8c0f0000 03351407 e40f0000 0407f40f  .....5..........
 00f0 00000407 c0110000 03830115 07061200  ................
 0100 00040734 12000003 8d060604 04040004  ...4............
 0110 00000500 07290000 0500d622 00000500  .....)....."....
 0120 781b0000 05003a0b 00000500 b63d0000  x.....:......=..
 0130 05005207 00000500 81050000 05008336  ..R............6
 0140 00000500 1d200000 05008d3d 00000500  ..... .....=....
 0150 0a090000 0500d52e 00000500 39470000  ............9G..
 0160 05005940 00000500 77290000 05002f47  ..Y@....w)..../G
 0170 00000500 a3420000 05004f10 00000500  .....B....O.....
 0180 830c0000 0500ed25 00000500 d9240000  .......%.....$..
 0190 05006224 00000500 11460000 05006529  ..b$.....F....e)
 01a0 00000500 0c390000 05003b09 00000500  .....9....;.....
 01b0 12280000 0500b62a 00000500 80140000  .(.....*........
 01c0 05001f07 00000500 5a3d0000 05008747  ........Z=.....G
 01d0 00000500 31170000 05003807 00000500  ....1.....8.....
 01e0 c2310000 0500440a 00000500 662d0000  .1....D.....f-..
 01f0 05007a3a 00000500 3a1e0000 0500ad4a  ..z:....:......J
 0200 00000500 b0120000 0500eb29 00000500  ...........)....
 0210 1e480000 0500f02f 00000500 fc060000  .H...../........
 0220 0500d934 00000500 8f4c0000 0500e941  ...4.....L.....A
 0230 00000500 82080000 0500a917 00000500  ................
 0240 fd400000 05008126 00000500 551b0000  .@.....&....U...
 0250 05009637 00000500 68090000 0500b109  ...7....h.......
 0260 00000500 65230000 0500ad42 00000500  ....e#.....B....
 0270 d50a0000 05001c0d 00000500 551c0000  ............U...
 0280 0500db09 00000500 c6420000 0500640c  .........B....d.
 0290 00000500 3e460000 0500c626 00000500  ....>F.....&....
 02a0 77220000 05001836 00000500 583c0000  w".....6....X<..
 02b0 05003539 00000500 424b0000 05001716  ..59....BK......
 02c0 00000500 c4270000 05002c3e 00000500  .....'....,>....
 02d0 89030000 05001847 00000500 f10b0000  .......G........
 02e0 05002b31 00000500 23080000 05001d34  ..+1....#......4
 02f0 00000500 121c0000 05000c3b 00000500  ...........;....
 0300 f30a0000 05009936 00000500 212b0000  .......6....!+..
 0310 05002f23 00000500 e7430000 05005d2a  ../#.....C....]*
 0320 00000500 5c390000 0500a83b 00000500  ....\9.....;....
 0330 483f0000 05009906 00000500 b71b0000  H?..............
 0340 0500ee32 00000500 164b0000 0500c83d  ...2.....K.....=
 0350 00000500 7a100000 0500dc39 00000500  ....z......9....
 0360 42420000 0500c234 00000500 ef220000  BB.....4....."..
 0370 05000c00 00000500 a42c0000 0500b530  .........,.....0
 0380 00000500 c3120000 0500302a 00000500  ..........0*....
 0390 682e0000 05000f2f 00000500 c4210000  h....../.....!..
 03a0 05002b22 00000500 1d1f0000 05005a3f  ..+"..........Z?
 03b0 00000500 35240000 05006c3a 00000500  ....5$....l:....
 03c0 76210000 0500720b 00000500 e7270000  v!....r......'..
 03d0 0500790e 00000500 f31b0000 05003a36  ..y...........:6
 03e0 00000500 03420000 05004e21 00000500  .....B....N!....
 03f0 d8450000 0500313a 00000500 df110000  .E....1:........
 0400 0500ca2a 00000500 09110000 0500e82e  ...*............
 0410 00000500 90490000 05006f2a 00000500  .....I....o*....
 0420 2d270000 0500c507 00000500 6c330000  -'..........l3..
 0430 0500341a 00000500 9d440000 05000710  ..4......D......
 0440 00000500 8a090000 0500083a 00000500  ...........:....
 0450 62030000 0500a94d 00000500 66150000  b......M....f...
 0460 05002e2e 00000500 c4250000 05002511  .........%....%.
 0470 00000500 1a020000 0500e235 00000500  ...........5....
 0480 c0040000 0500ad10 00000500 8c2c0000  .............,..
 0490 0500a21f 00000500 56450000 0500941e  ........VE......
 04a0 00000500 df130000 0500b51d 00000500  ................
 04b0 f90f0000 05003748 00000500 cc000000  ......7H........
 04c0 0500e848 00000500 7e1c0000 05004632  ...H....~.....F2
 04d0 00000500 aa1e0000 05001541 00000500  ...........A....
 04e0 c4440000 0500be06 00000500 944d0000  .D...........M..
 04f0 05007f28 00000500 f9450000 0500eb07  ...(.....E......
 0500 00000500 04240000 05004a03 00000500  .....$....J.....
 0510 f31e0000 05005029 00000500 f4460000  ......P).....F..
 0520 05002b4b 00000500 7c1a0000 05007225  ..+K....|.....r%
 0530 00000500 224c0000 0500c601 00000500  ...."L..........
 0540 c00a0000 05007745 00000500 9a140000  ......wE........
 0550 0500312b 00000500 f1080000 0500d432  ..1+...........2
 0560 00000500 842a0000 05009a15 00000500  .....*..........
 0570 b74b0000 0500c14d 00000500 b93b0000  .K.....M.....;..
 0580 05005a1e 00000500 6b0a0000 0500742b  ..Z.....k.....t+
 0590 00000500 d8140000 05002d4d 00000500  ..........-M....
 05a0 4c2c0000 05006a36 00000500 7b020000  L,....j6....{...
 05b0 0500ef24 00000500 211e0000 0500a50a  ...$....!.......
 05c0 00000500 84230000 0500c74a 00000500  .....#.....J....
 05d0 2b1b0000 0500e74b 00000500 b0290000  +......K.....)..
 05e0 05009833 00000500 de2d0000 05006a0f  ...3.....-....j.
 05f0 00000500 9c000000 0500d910 00000500  ................
 0600 684d0000 0500530c 00000500 fe440000  hM....S......D..
 0610 05004a1a 00000500 b5000000 0500ac32  ..J............2
 0620 00000500 e31d0000 05003926 00000500  ..........9&....
 0630 5d060000 05008f3a 00000500 5e4a0000  ]......:....^J..
 0640 05008b1f 00000500 4d150000 05002a00  ........M.....*.
 0650 00000500 19170000 0500431b 00000500  ..........C.....
 0660 bd100000 0500482d 00000500 c6130000  ......H-........
 0670 0500a719 00000500 fc4a0000 0500050e  .........J......
 0680 00000500 c2190000 05007338 00000500  ..........s8....
 0690 a9470000 0500f94c 00000500 441f0000  .G.....L....D...
 06a0 0500e10d 00000500 b3240000 0500a124  .........$.....$
 06b0 00000500 3c350000 05006334 00000500  ....<5....c4....
 06c0 4c010000 05001c4a 00000500 27030000  L......J....'...
 06d0 0500e603 00000500 86270000 0500a21c  .........'......
 06e0 00000500 ef130000 0500df1f 00000500  ................
 06f0 c30c0000 0500d946 00000500 e53a0000  .......F.....:..
 0700 0500670e 00000500 be0f0000 05001919  ..g.............
 0710 00000500 04200000 05005725 00000500  ..... ....W%....
 0720 63440000 0500a720 00000500 1f330000  cD..... .....3..
 0730 05000b01 00000500 a74c0000 05000e18  .........L......
 0740 00000500 f6340000 05006428 00000500  .....4....d(....
 0750 c92d0000 0500d440 00000500 26180000  .-.....@....&...
 0760 05006410 00000500 03230000 0500b408  ..d......#......
 0770 00000500 25280000 05007e4d 00000500  ....%(....~M....
 0780 26400000 05004d34 00000500 d04b0000  &@....M4.....K..
 0790 05003016 00000500 ac010000 05006b00  ..0...........k.
 07a0 00000500 83170000 05000f12 00000500  ................
 07b0 38300000 05002335 00000500 ae480000  80....#5.....H..
 07c0 0500ee12 00000500 6e460000 05008333  ........nF.....3
 07d0 00000500 b63c0000 0500ed23 00000500  .....<.....#....
 07e0 511d0000 05008c0f 00000500 932d0000  Q............-..
 07f0 0500fc1d 00000500 91020000 05001f10  ................
 0800 00000500 ca1b0000 05001324 00000500  ...........$....
 0810 123d0000 05003f31 00000500 44440000  .=....?1....DD..
 0820 05005f16 00000500 83240000 05000740  .._......$.....@
 0830 00000500 6e010000 0500d13b 00000500  ....n......;....
 0840 f6270000 0500734c 00000500 4e480000  .'....sL....NH..
 0850 05003f0d 00000500 f92c0000 05005804  ..?......,....X.
 0860 00000500 5e170000 0500364a 00000500  ....^.....6J....
 0870 ec1a0000 0500692b 00000500 f71f0000  ......i+........
 0880 0500c346 00000500 d6230000 0500fc48  ...F.....#.....H
 0890 00000500 7e150000 0500f026 00000500  ....~......&....
 08a0 00400000 05004103 00000500 ea170000  .@....A.........
 08b0 05008b16 00000500 4c470000 05003229  ........LG....2)
 08c0 00000500 b7410000 0500bd2f 00000500  .....A...../....
 08d0 6e390000 05001b3c 00000500 b22f0000  n9.....<...../..
 08e0 05009a23 00000500 e5360000 05009742  ...#.....6.....B
 08f0 00000500 e7360000 05004e4a 00000500  .....6....NJ....
 0900 810f0000 0500504a 00000500 7c270000  ......PJ....|'..
 0910 05009b08 00000004 00000513 d5020000  ................
 0920 05265b46 0000052e d3180000 053a5419  .&[F.........:T.
 0930 0000053d 2e0a0000 00040000 05185910  ...=..........Y.
 0940 0000051a d6330000 00040000 0513e124  .....3.........$
 0950 00000677 33490000 06784418 00000679  ...w3I...xD....y
 0960 01180000 067a7007 0000067b ed4c0000  .....zp....{.L..
 0970 067c8034 0000067d 53230000 067e0913  .|.4...}S#...~..
 0980 0000067f 67380000 06800188 44000006  ....g8......D...
 0990 8101dd0c 00000682 01133000 00068301  ..........0.....
 09a0 943f0000 068401e3 37000006 8501b426  .?......7......&
 09b0 00000686 01b34600 00068701 92050000  ......F.........
 09c0 0688018a 29000006 8901062a 0000068a  ....)......*....
 09d0 010f0d00 00068b01 89410000 068c01f8  .........A......
 09e0 2a000006 8d01bc17 0000068e 01550500  *............U..
 09f0 00059301 99120000 059e016c 04000005  ...........l....
 0a00 ac016742 000005b0 01562200 0006dc01  ..gB.....V".....
 0a10 fc3a0000 05dd01be 1a000005 e301e602  .:..............
 0a20 000005e9 019a1700 0005ef01 2c090000  ............,...
 0a30 058402f9 1c000006 8602b006 00000587  ................
 0a40 02a24300 00068802 cf380000 05890245  ..C......8.....E
 0a50 2a000005 ac02642c 000005b0 021d0900  *.....d,........
 0a60 0005b402 b3280000 05b802ff 07000005  .....(..........
 0a70 bc024e17 000006bd 02011800 0005be02  ..N.............
 0a80 2c090000 06bf0244 18000005 c0029a17  ,......D........
 0a90 000005c4 02203a00 0006c502 000d0000  ..... :.........
 0aa0 05c60256 0e000005 f0020b47 000005f4  ...V.......G....
 0ab0 027f0700 00058303 ea0c0000 058b03ee  ................
 0ac0 18000006 9a03db07 0000059b 03f52800  ..............(.
 0ad0 00059f03 7f3c0000 05a0039f 2f000005  .....<....../...
 0ae0 a203f905 00000004 00000513 d7030000  ................
 0af0 02225f5f 50000623 57270000 052a2130  ."__P..#W'...*!0
 0b00 0000052b c2410000 0537df38 00000538  ...+.A...7.8...8
 0b10 8f4b0000 0539540d 0000053a 42080000  .K...9T....:B...
 0b20 05593414 0000055e 263c0000 055f5714  .Y4....^&<..._W.
 0b30 00000564 cd300000 0565c532 00000568  ...d.0...e.2...h
 0b40 100a0000 05706f19 00000571 ec450000  .....po....q.E..
 0b50 0576402f 00000577 b02b0000 057a5c32  .v@/...w.+...z\2
 0b60 0000057c 753b0000 057d5f48 0000058a  ...|u;...}_H....
 0b70 016e0200 00058b01 12290000 05a90141  .n.......).....A
 0b80 20000005 b0011638 000005b2 01711300   ......8.....q..
 0b90 0005b501 e1490000 05b60166 3e000005  .....I.....f>...
 0ba0 cb016437 000005d3 01a53f00 0005dd01  ..d7......?.....
 0bb0 ae390000 05e40125 05000005 ed016011  .9.....%......`.
 0bc0 000005ee 01a02200 0005f601 0e2d0000  ......"......-..
 0bd0 058002e2 30000005 8d02e42b 00000597  ....0......+....
 0be0 02814000 0005a002 8e070000 05a8028e  ..@.............
 0bf0 45000005 b102b214 000006b9 021c3e00  E.............>.
 0c00 0005ba02 ee210000 05c3028e 11000005  .....!..........
 0c10 d5021c0f 000005d6 02040c00 0005df02  ................
 0c20 5c300000 05e5028c 1d000005 e602e504  \0..............
 0c30 000005fa 023f4000 00058903 24040000  .....?@.....$...
 0c40 058a03a3 2e000005 a003b236 00000004  ...........6....
 0c50 00000504 404a0000 050cdf4a 0000050e  ....@J.....J....
 0c60 6d240000 00040000 05c20339 37000005  m$.........97...
 0c70 c303c705 000005c4 038d2100 0005c503  ..........!.....
 0c80 b3370000 05c6038d 0b000005 c803da3d  .7.............=
 0c90 000005c9 03271300 0005d403 df3c0000  .....'.......<..
 0ca0 05d50395 0d000005 e703e116 00000004  ................
 0cb0 0000050a f23b0000 050b1308 0000050c  .....;..........
 0cc0 31150000 050d7108 0000050e 661a0000  1.....q.....f...
 0cd0 050f3e34 00000510 b1150000 0511594d  ..>4..........YM
 0ce0 00000512 37190000 05130f48 00000514  ....7......H....
 0cf0 e80f0000 0515fe09 00000516 694b0000  ............iK..
 0d00 0517cc16 00000004 00000625 0c2b0000  ...........%.+..
 0d10 052af811 0000062f c9430000 0533ef47  .*...../.C...3.G
 0d20 00000638 ef360000 053c6547 00000641  ...8.6...<eG...A
 0d30 a30c0000 05454a3a 00000004 0000051f  .....EJ:........
 0d40 312f0000 05205006 00000004 000005bb  1/... P.........
 0d50 01752600 0005bc01 14210000 05bd0161  .u&......!.....a
 0d60 0f000005 be017c16 000005bf 01cc0e00  ......|.........
 0d70 0005c001 fc0d0000 05c101f3 20000005  ............ ...
 0d80 c201de0f 000005c3 01da0f00 0005c401  ................
 0d90 f7100000 05c50144 00000005 c601f310  .......D........
 0da0 000005c7 01cd0800 0005c801 922e0000  ................
 0db0 05c9015d 0f000005 ca01a047 000005d2  ...].......G....
 0dc0 01d10900 0006ee01 202e0000 06910322  ........ ......"
 0dd0 13000005 9603e31c 0000069c 031b1300  ................
 0de0 00000400 0005624d 24000005 63122600  ......bM$...c.&.
 0df0 0005641f 0a000005 65d21700 00056624  ..d.....e.....f$
 0e00 25000005 67214400 0005757e 3f000005  %...g!D...u~?...
 0e10 765d2700 00057707 34000005 78802f00  v]'...w.4...x./.
 0e20 0005793d 29000005 7a391c00 00057b9a  ..y=)...z9....{.
 0e30 39000005 7c4c4100 00057eaa 23000000  9...|LA...~.#...
 0e40 04000005 18be1500 0005221c 42000005  ..........".B...
 0e50 23e50000 00052651 49000005 27094400  #.....&QI...'.D.
 0e60 00052868 14000005 29f63500 00052ad9  ..(h....).5...*.
 0e70 28000005 2bbd2300 00052dcc 2f000005  (...+.#...-./...
 0e80 2eff2400 000533a0 34000005 34174900  ..$...3.4...4.I.
 0e90 00053519 15000005 36a40500 000537fc  ..5.....6.....7.
 0ea0 16000005 38951600 000539d9 2a000005  ....8.....9.*...
 0eb0 3ab81f00 00053b86 20000005 3c3a3b00  :.....;. ...<:;.
 0ec0 00053d49 36000005 3efd2000 00053f69  ..=I6...>. ...?i
 0ed0 3d000005 40353c00 000541d2 15000005  =...@5<...A.....
 0ee0 42011a00 000543c9 1d000005 44362100  B.....C.....D6!.
 0ef0 00054522 46000005 46934100 0005474c  ..E"F...F.A...GL
 0f00 0b000005 48920e00 0005497e 39000005  ....H.....I~9...
 0f10 4a6b4900 00055092 01000005 53722c00  JkI...P.....Sr,.
 0f20 000556d0 1a000005 5cdf0800 00000400  ..V.....\.......
 0f30 00050510 35000005 0e312f00 00051250  ....5....1/....P
 0f40 06000000 04000006 ee01202e 00000691  .......... .....
 0f50 03221300 00059603 e31c0000 069c031b  ."..............
 0f60 13000000 04000005 334e0900 00053516  ........3N....5.
 0f70 05000005 36b82d00 0005386e 18000005  ....6.-...8n....
 0f80 3b3d0200 00053d2a 37000000 04000005  ;=....=*7.......
 0f90 256c4000 00052676 4b000005 27c72800  %l@...&vK...'.(.
 0fa0 000528a0 3d000005 293d1000 00052a8d  ..(.=...)=....*.
 0fb0 0c000005 2bcd3c00 00052ce1 1e000005  ....+.<...,.....
 0fc0 2df13900 00052e64 1f000005 2f253b00  -.9....d..../%;.
 0fd0 000530ce 3a000005 31ee3f00 00053454  ..0.:...1.?...4T
 0fe0 3e000000 04000006 22572e00 0005271f  >......."W....'.
 0ff0 23000000 04000006 376f4100 0005380f  #.......7oA...8.
 1000 37000005 3fdc3100 00054230 26000005  7...?.1...B0&...
 1010 51e32600 0005525e 33000005 53880d00  Q.&...R^3...S...
 1020 00055418 45000005 55751700 000556a6  ..T.E...Uu....V.
 1030 1b000005 57962800 000558b6 02000005  ....W.(...X.....
 1040 60412200 0005618a 1b000005 62cb3600  `A"...a.....b.6.
 1050 000563c8 03000005 64493d00 00056556  ..c.....dI=...eV
 1060 47000005 66710500 0005670a 03000005  G...fq....g.....
 1070 684e1100 00056910 1b000005 6a312000  hN....i.....j1 .
 1080 00056bd1 2c000005 6c5d0700 00056d8c  ..k.,...l]....m.
 1090 18000005 6e114d00 00056f4c 28000005  ....n.M...oL(...
 10a0 70550000 00057161 3b000005 72ad3100  pU....qa;...r.1.
 10b0 0005749e 29000005 75d72100 000579f8  ..t.)...u.!...y.
 10c0 2e000005 8201941c 00000583 01503000  .............P0.
 10d0 00058401 bb030000 05850181 2e000005  ................
 10e0 86010000 00000587 01381f00 00058801  .........8......
 10f0 0c190000 058901ba 16000005 8a01160b  ................
 1100 0000058b 01f23700 00058c01 00330000  ......7......3..
 1110 058d0197 3e000005 8e01ec40 0000058f  ....>......@....
 1120 018d3400 00059001 40490000 059101b2  ..4.....@I......
 1130 43000005 92019f30 000005f7 019e2600  C......0......&.
 1140 00059402 c9140000 05c3027e 19000005  ...........~....
 1150 c4028b3c 000005c5 02611d00 00058f03  ...<.....a......
 1160 b1490000 05940357 35000005 9703ac3e  .I.....W5......>
 1170 0000059b 03ee4200 0005ae03 121d0000  ......B.........
 1180 05af03db 0e000005 b9036031 000005c0  ..........`1....
 1190 03ef1500 0005c103 e52c0000 05c20320  .........,..... 
 11a0 21000005 c303c811 000005c5 03af1800  !...............
 11b0 0005c803 112a0000 05cb0304 32000000  .....*......2...
 11c0 04000005 2f233900 00053d29 0b000005  ..../#9...=)....
 11d0 48b90e00 000557f5 02000005 58db2b00  H.....W.....X.+.
 11e0 0005593b 18000005 5e440e00 00056b7d  ..Y;....^D....k}
 11f0 44000005 6c1c0300 00056d29 1a000005  D...l.....m)....
 1200 76063800 00000400 00051338 2c000005  v.8........8,...
 1210 19a31800 00051af5 31000005 1bc30200  ........1.......
 1220 00051ea1 4a000006 240b3c00 000525b4  ....J...$.<...%.
 1230 38000000 04000005 8b019422 0000058c  8.........."....
 1240 017b4100 00058d01 51180000 05e803d5  .{A.....Q.......
 1250 12000005 90040b27 000000             .......'...     

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x243>
 248:	78 38                	js     282 <_init-0x236>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 ca                	add    dl,cl
 285:	9a                   	(bad)  
 286:	17                   	(bad)  
 287:	ac                   	lods   al,BYTE PTR ds:[rsi]
 288:	8e 8b e2 bd 89 19    	mov    cs,WORD PTR [rbx+0x1989bde2]
 28e:	0e                   	(bad)  
 28f:	09 fc                	or     esp,edi
 291:	92                   	xchg   edx,eax
 292:	74 2d                	je     2c1 <_init-0x1f7>
 294:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 295:	79 48                	jns    2df <_init-0x1d9>
 297:	65                   	gs

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	38 00                	cmp    BYTE PTR [rax],al
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	20 00                	and    BYTE PTR [rax],al
	...
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	1a 00                	sbb    al,BYTE PTR [rax]
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 2fe:	00 00                	add    BYTE PTR [rax],al
 300:	54                   	push   rsp
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 20                	add    BYTE PTR [rax],ah
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	0b 00                	or     eax,DWORD PTR [rax]
 332:	00 00                	add    BYTE PTR [rax],al
 334:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000348 <.dynstr>:
 348:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 34c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 34e:	73 6f                	jae    3bf <_init-0xf9>
 350:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 355:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 358:	5f                   	pop    rdi
 359:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 35f:	7a 65                	jp     3c6 <_init-0xf2>
 361:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 364:	6c                   	ins    BYTE PTR es:[rdi],dx
 365:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 36c:	72 74                	jb     3e2 <_init-0xd6>
 36e:	5f                   	pop    rdi
 36f:	6d                   	ins    DWORD PTR es:[rdi],dx
 370:	61                   	(bad)  
 371:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 378:	43 5f                	rex.XB pop r15
 37a:	32 2e                	xor    ch,BYTE PTR [rsi]
 37c:	32 2e                	xor    ch,BYTE PTR [rsi]
 37e:	35 00 5f 49 54       	xor    eax,0x54495f00
 383:	4d 5f                	rex.WRB pop r15
 385:	64 65 72 65          	fs gs jb 3ee <_init-0xca>
 389:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 390:	4d 
 391:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 393:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 394:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 395:	65 54                	gs push rsp
 397:	61                   	(bad)  
 398:	62                   	(bad)  
 399:	6c                   	ins    BYTE PTR es:[rdi],dx
 39a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 39e:	67 6d                	ins    DWORD PTR es:[edi],dx
 3a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3a2:	5f                   	pop    rdi
 3a3:	73 74                	jae    419 <_init-0x9f>
 3a5:	61                   	(bad)  
 3a6:	72 74                	jb     41c <_init-0x9c>
 3a8:	5f                   	pop    rdi
 3a9:	5f                   	pop    rdi
 3aa:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3ad:	54                   	push   rsp
 3ae:	4d 5f                	rex.WRB pop r15
 3b0:	72 65                	jb     417 <_init-0xa1>
 3b2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3b9:	4d 
 3ba:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3be:	65 54                	gs push rsp
 3c0:	61                   	(bad)  
 3c1:	62                   	.byte 0x62
 3c2:	6c                   	ins    BYTE PTR es:[rdi],dx
 3c3:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003c6 <.gnu.version>:
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	00 00                	add    BYTE PTR [rax],al
 3ca:	02 00                	add    al,BYTE PTR [rax]
 3cc:	00 00                	add    BYTE PTR [rax],al
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000000003d8 <.gnu.version_r>:
 3d8:	01 00                	add    DWORD PTR [rax],eax
 3da:	01 00                	add    DWORD PTR [rax],eax
 3dc:	01 00                	add    DWORD PTR [rax],eax
 3de:	00 00                	add    BYTE PTR [rax],al
 3e0:	10 00                	adc    BYTE PTR [rax],al
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	00 00                	add    BYTE PTR [rax],al
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	75 1a                	jne    404 <_init-0xb4>
 3ea:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 3f0:	2c 00                	sub    al,0x0
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000003f8 <.rela.dyn>:
 3f8:	f0 0d 20 00 00 00    	lock or eax,0x20
 3fe:	00 00                	add    BYTE PTR [rax],al
 400:	08 00                	or     BYTE PTR [rax],al
 402:	00 00                	add    BYTE PTR [rax],al
 404:	00 00                	add    BYTE PTR [rax],al
 406:	00 00                	add    BYTE PTR [rax],al
 408:	f0 05 00 00 00 00    	lock add eax,0x0
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	f8                   	clc    
 411:	0d 20 00 00 00       	or     eax,0x20
 416:	00 00                	add    BYTE PTR [rax],al
 418:	08 00                	or     BYTE PTR [rax],al
 41a:	00 00                	add    BYTE PTR [rax],al
 41c:	00 00                	add    BYTE PTR [rax],al
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	b0 05                	mov    al,0x5
 422:	00 00                	add    BYTE PTR [rax],al
 424:	00 00                	add    BYTE PTR [rax],al
 426:	00 00                	add    BYTE PTR [rax],al
 428:	08 10                	or     BYTE PTR [rax],dl
 42a:	20 00                	and    BYTE PTR [rax],al
 42c:	00 00                	add    BYTE PTR [rax],al
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	08 00                	or     BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	00 00                	add    BYTE PTR [rax],al
 436:	00 00                	add    BYTE PTR [rax],al
 438:	08 10                	or     BYTE PTR [rax],dl
 43a:	20 00                	and    BYTE PTR [rax],al
 43c:	00 00                	add    BYTE PTR [rax],al
 43e:	00 00                	add    BYTE PTR [rax],al
 440:	d8 0f                	fmul   DWORD PTR [rdi]
 442:	20 00                	and    BYTE PTR [rax],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	00 00                	add    BYTE PTR [rax],al
 448:	06                   	(bad)  
 449:	00 00                	add    BYTE PTR [rax],al
 44b:	00 01                	add    BYTE PTR [rcx],al
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 e0                	add    al,ah
 459:	0f 20 00             	mov    rax,cr0
 45c:	00 00                	add    BYTE PTR [rax],al
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	06                   	(bad)  
 461:	00 00                	add    BYTE PTR [rax],al
 463:	00 02                	add    BYTE PTR [rdx],al
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 e8                	add    al,ch
 471:	0f 20 00             	mov    rax,cr0
 474:	00 00                	add    BYTE PTR [rax],al
 476:	00 00                	add    BYTE PTR [rax],al
 478:	06                   	(bad)  
 479:	00 00                	add    BYTE PTR [rax],al
 47b:	00 03                	add    BYTE PTR [rbx],al
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 f0                	add    al,dh
 489:	0f 20 00             	mov    rax,cr0
 48c:	00 00                	add    BYTE PTR [rax],al
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	06                   	(bad)  
 491:	00 00                	add    BYTE PTR [rax],al
 493:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	f8                   	clc    
 4a1:	0f 20 00             	mov    rax,cr0
 4a4:	00 00                	add    BYTE PTR [rax],al
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    BYTE PTR [rax],al
 4ab:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4b1 <_init-0x7>
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 00                	add    BYTE PTR [rax],al
 4b5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

00000000000004b8 <_init>:
 4b8:	48 83 ec 08          	sub    rsp,0x8
 4bc:	48 8b 05 25 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b25]        # 200fe8 <__gmon_start__>
 4c3:	48 85 c0             	test   rax,rax
 4c6:	74 02                	je     4ca <_init+0x12>
 4c8:	ff d0                	call   rax
 4ca:	48 83 c4 08          	add    rsp,0x8
 4ce:	c3                   	ret    

Disassembly of section .plt:

00000000000004d0 <.plt>:
 4d0:	ff 35 f2 0a 20 00    	push   QWORD PTR [rip+0x200af2]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
 4d6:	ff 25 f4 0a 20 00    	jmp    QWORD PTR [rip+0x200af4]        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
 4dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

00000000000004e0 <__cxa_finalize@plt>:
 4e0:	ff 25 12 0b 20 00    	jmp    QWORD PTR [rip+0x200b12]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 4e6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000004f0 <_start>:
 4f0:	31 ed                	xor    ebp,ebp
 4f2:	49 89 d1             	mov    r9,rdx
 4f5:	5e                   	pop    rsi
 4f6:	48 89 e2             	mov    rdx,rsp
 4f9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 4fd:	50                   	push   rax
 4fe:	54                   	push   rsp
 4ff:	4c 8d 05 9a 01 00 00 	lea    r8,[rip+0x19a]        # 6a0 <__libc_csu_fini>
 506:	48 8d 0d 23 01 00 00 	lea    rcx,[rip+0x123]        # 630 <__libc_csu_init>
 50d:	48 8d 3d e6 00 00 00 	lea    rdi,[rip+0xe6]        # 5fa <main>
 514:	ff 15 c6 0a 20 00    	call   QWORD PTR [rip+0x200ac6]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 51a:	f4                   	hlt    
 51b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000520 <deregister_tm_clones>:
 520:	48 8d 3d e9 0a 20 00 	lea    rdi,[rip+0x200ae9]        # 201010 <__TMC_END__>
 527:	55                   	push   rbp
 528:	48 8d 05 e1 0a 20 00 	lea    rax,[rip+0x200ae1]        # 201010 <__TMC_END__>
 52f:	48 39 f8             	cmp    rax,rdi
 532:	48 89 e5             	mov    rbp,rsp
 535:	74 19                	je     550 <deregister_tm_clones+0x30>
 537:	48 8b 05 9a 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a9a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 53e:	48 85 c0             	test   rax,rax
 541:	74 0d                	je     550 <deregister_tm_clones+0x30>
 543:	5d                   	pop    rbp
 544:	ff e0                	jmp    rax
 546:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 54d:	00 00 00 
 550:	5d                   	pop    rbp
 551:	c3                   	ret    
 552:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 55d:	00 00 00 

0000000000000560 <register_tm_clones>:
 560:	48 8d 3d a9 0a 20 00 	lea    rdi,[rip+0x200aa9]        # 201010 <__TMC_END__>
 567:	48 8d 35 a2 0a 20 00 	lea    rsi,[rip+0x200aa2]        # 201010 <__TMC_END__>
 56e:	55                   	push   rbp
 56f:	48 29 fe             	sub    rsi,rdi
 572:	48 89 e5             	mov    rbp,rsp
 575:	48 c1 fe 03          	sar    rsi,0x3
 579:	48 89 f0             	mov    rax,rsi
 57c:	48 c1 e8 3f          	shr    rax,0x3f
 580:	48 01 c6             	add    rsi,rax
 583:	48 d1 fe             	sar    rsi,1
 586:	74 18                	je     5a0 <register_tm_clones+0x40>
 588:	48 8b 05 61 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a61]        # 200ff0 <_ITM_registerTMCloneTable>
 58f:	48 85 c0             	test   rax,rax
 592:	74 0c                	je     5a0 <register_tm_clones+0x40>
 594:	5d                   	pop    rbp
 595:	ff e0                	jmp    rax
 597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 59e:	00 00 
 5a0:	5d                   	pop    rbp
 5a1:	c3                   	ret    
 5a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5ad:	00 00 00 

00000000000005b0 <__do_global_dtors_aux>:
 5b0:	80 3d 59 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a59],0x0        # 201010 <__TMC_END__>
 5b7:	75 2f                	jne    5e8 <__do_global_dtors_aux+0x38>
 5b9:	48 83 3d 37 0a 20 00 	cmp    QWORD PTR [rip+0x200a37],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c0:	00 
 5c1:	55                   	push   rbp
 5c2:	48 89 e5             	mov    rbp,rsp
 5c5:	74 0c                	je     5d3 <__do_global_dtors_aux+0x23>
 5c7:	48 8b 3d 3a 0a 20 00 	mov    rdi,QWORD PTR [rip+0x200a3a]        # 201008 <__dso_handle>
 5ce:	e8 0d ff ff ff       	call   4e0 <__cxa_finalize@plt>
 5d3:	e8 48 ff ff ff       	call   520 <deregister_tm_clones>
 5d8:	c6 05 31 0a 20 00 01 	mov    BYTE PTR [rip+0x200a31],0x1        # 201010 <__TMC_END__>
 5df:	5d                   	pop    rbp
 5e0:	c3                   	ret    
 5e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 5e8:	f3 c3                	repz ret 
 5ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000005f0 <frame_dummy>:
 5f0:	55                   	push   rbp
 5f1:	48 89 e5             	mov    rbp,rsp
 5f4:	5d                   	pop    rbp
 5f5:	e9 66 ff ff ff       	jmp    560 <register_tm_clones>

00000000000005fa <main>:
#include <stdio.h>

int main(int argc, char * argv[])
{
 5fa:	55                   	push   rbp
 5fb:	48 89 e5             	mov    rbp,rsp
 5fe:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 601:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
	int a, b, c;
	
	a = 1;
 605:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [rbp-0xc],0x1
	b = 9;
 60c:	c7 45 f8 09 00 00 00 	mov    DWORD PTR [rbp-0x8],0x9

	c = a + b;
 613:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
 616:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
 619:	01 d0                	add    eax,edx
 61b:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
 61e:	b8 00 00 00 00       	mov    eax,0x0
}
 623:	5d                   	pop    rbp
 624:	c3                   	ret    
 625:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 62c:	00 00 00 
 62f:	90                   	nop

0000000000000630 <__libc_csu_init>:
 630:	41 57                	push   r15
 632:	41 56                	push   r14
 634:	49 89 d7             	mov    r15,rdx
 637:	41 55                	push   r13
 639:	41 54                	push   r12
 63b:	4c 8d 25 ae 07 20 00 	lea    r12,[rip+0x2007ae]        # 200df0 <__frame_dummy_init_array_entry>
 642:	55                   	push   rbp
 643:	48 8d 2d ae 07 20 00 	lea    rbp,[rip+0x2007ae]        # 200df8 <__init_array_end>
 64a:	53                   	push   rbx
 64b:	41 89 fd             	mov    r13d,edi
 64e:	49 89 f6             	mov    r14,rsi
 651:	4c 29 e5             	sub    rbp,r12
 654:	48 83 ec 08          	sub    rsp,0x8
 658:	48 c1 fd 03          	sar    rbp,0x3
 65c:	e8 57 fe ff ff       	call   4b8 <_init>
 661:	48 85 ed             	test   rbp,rbp
 664:	74 20                	je     686 <__libc_csu_init+0x56>
 666:	31 db                	xor    ebx,ebx
 668:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 66f:	00 
 670:	4c 89 fa             	mov    rdx,r15
 673:	4c 89 f6             	mov    rsi,r14
 676:	44 89 ef             	mov    edi,r13d
 679:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 67d:	48 83 c3 01          	add    rbx,0x1
 681:	48 39 dd             	cmp    rbp,rbx
 684:	75 ea                	jne    670 <__libc_csu_init+0x40>
 686:	48 83 c4 08          	add    rsp,0x8
 68a:	5b                   	pop    rbx
 68b:	5d                   	pop    rbp
 68c:	41 5c                	pop    r12
 68e:	41 5d                	pop    r13
 690:	41 5e                	pop    r14
 692:	41 5f                	pop    r15
 694:	c3                   	ret    
 695:	90                   	nop
 696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 69d:	00 00 00 

00000000000006a0 <__libc_csu_fini>:
 6a0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000006a4 <_fini>:
 6a4:	48 83 ec 08          	sub    rsp,0x8
 6a8:	48 83 c4 08          	add    rsp,0x8
 6ac:	c3                   	ret    

Disassembly of section .rodata:

00000000000006b0 <_IO_stdin_used>:
 6b0:	01 00                	add    DWORD PTR [rax],eax
 6b2:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

00000000000006b4 <__GNU_EH_FRAME_HDR>:
 6b4:	01 1b                	add    DWORD PTR [rbx],ebx
 6b6:	03 3b                	add    edi,DWORD PTR [rbx]
 6b8:	38 00                	cmp    BYTE PTR [rax],al
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	06                   	(bad)  
 6bd:	00 00                	add    BYTE PTR [rax],al
 6bf:	00 1c fe             	add    BYTE PTR [rsi+rdi*8],bl
 6c2:	ff                   	(bad)  
 6c3:	ff 84 00 00 00 2c fe 	inc    DWORD PTR [rax+rax*1-0x1d40000]
 6ca:	ff                   	(bad)  
 6cb:	ff ac 00 00 00 3c fe 	jmp    FWORD PTR [rax+rax*1-0x1c40000]
 6d2:	ff                   	(bad)  
 6d3:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
 6d7:	00 46 ff             	add    BYTE PTR [rsi-0x1],al
 6da:	ff                   	(bad)  
 6db:	ff c4                	inc    esp
 6dd:	00 00                	add    BYTE PTR [rax],al
 6df:	00 7c ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],bh
 6e3:	ff e4                	jmp    rsp
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	00 ec                	add    ah,ch
 6e9:	ff                   	(bad)  
 6ea:	ff                   	(bad)  
 6eb:	ff 2c 01             	jmp    FWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000000006f0 <__FRAME_END__-0x104>:
 6f0:	14 00                	adc    al,0x0
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	00 00                	add    BYTE PTR [rax],al
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 6fb:	00 01                	add    BYTE PTR [rcx],al
 6fd:	78 10                	js     70f <__GNU_EH_FRAME_HDR+0x5b>
 6ff:	01 1b                	add    DWORD PTR [rbx],ebx
 701:	0c 07                	or     al,0x7
 703:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 709:	00 00                	add    BYTE PTR [rax],al
 70b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 70e:	00 00                	add    BYTE PTR [rax],al
 710:	e0 fd                	loopne 70f <__GNU_EH_FRAME_HDR+0x5b>
 712:	ff                   	(bad)  
 713:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 722:	00 00                	add    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 72b:	00 01                	add    BYTE PTR [rcx],al
 72d:	78 10                	js     73f <__GNU_EH_FRAME_HDR+0x8b>
 72f:	01 1b                	add    DWORD PTR [rbx],ebx
 731:	0c 07                	or     al,0x7
 733:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 739:	00 00                	add    BYTE PTR [rax],al
 73b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 73e:	00 00                	add    BYTE PTR [rax],al
 740:	90                   	nop
 741:	fd                   	std    
 742:	ff                   	(bad)  
 743:	ff 10                	call   QWORD PTR [rax]
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 00                	add    BYTE PTR [rax],al
 749:	0e                   	(bad)  
 74a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 74d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 750:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 753:	80 00 3f             	add    BYTE PTR [rax],0x3f
 756:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 758:	2a 33                	sub    dh,BYTE PTR [rbx]
 75a:	24 22                	and    al,0x22
 75c:	00 00                	add    BYTE PTR [rax],al
 75e:	00 00                	add    BYTE PTR [rax],al
 760:	14 00                	adc    al,0x0
 762:	00 00                	add    BYTE PTR [rax],al
 764:	44 00 00             	add    BYTE PTR [rax],r8b
 767:	00 78 fd             	add    BYTE PTR [rax-0x3],bh
 76a:	ff                   	(bad)  
 76b:	ff 08                	dec    DWORD PTR [rax]
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	5c                   	pop    rsp
 77d:	00 00                	add    BYTE PTR [rax],al
 77f:	00 7a fe             	add    BYTE PTR [rdx-0x2],bh
 782:	ff                   	(bad)  
 783:	ff 2b                	jmp    FWORD PTR [rbx]
 785:	00 00                	add    BYTE PTR [rax],al
 787:	00 00                	add    BYTE PTR [rax],al
 789:	41 0e                	rex.B (bad) 
 78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 791:	66 0c 07             	data16 or al,0x7
 794:	08 00                	or     BYTE PTR [rax],al
 796:	00 00                	add    BYTE PTR [rax],al
 798:	44 00 00             	add    BYTE PTR [rax],r8b
 79b:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
 79f:	00 90 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],dl
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 00                	add    BYTE PTR [rax],al
 7a9:	42 0e                	rex.X (bad) 
 7ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 7b1:	8e 03                	mov    es,WORD PTR [rbx]
 7b3:	45 0e                	rex.RB (bad) 
 7b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 7bb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301609 <_end+0xffffffff861005f1>
 7c1:	06                   	(bad)  
 7c2:	48 0e                	rex.W (bad) 
 7c4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 7ca:	72 0e                	jb     7da <__GNU_EH_FRAME_HDR+0x126>
 7cc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 7cf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 7d2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 7d5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 7d8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 7db:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 7de:	08 00                	or     BYTE PTR [rax],al
 7e0:	10 00                	adc    BYTE PTR [rax],al
 7e2:	00 00                	add    BYTE PTR [rax],al
 7e4:	c4                   	(bad)  
 7e5:	00 00                	add    BYTE PTR [rax],al
 7e7:	00 b8 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],bh
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 00                	add    BYTE PTR [rax],al
 7f1:	00 00                	add    BYTE PTR [rax],al
	...

00000000000007f4 <__FRAME_END__>:
 7f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200df0 <__frame_dummy_init_array_entry>:
  200df0:	f0 05 00 00 00 00    	lock add eax,0x0
	...

Disassembly of section .fini_array:

0000000000200df8 <__do_global_dtors_aux_fini_array_entry>:
  200df8:	b0 05                	mov    al,0x5
  200dfa:	00 00                	add    BYTE PTR [rax],al
  200dfc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200e00 <_DYNAMIC>:
  200e00:	01 00                	add    DWORD PTR [rax],eax
  200e02:	00 00                	add    BYTE PTR [rax],al
  200e04:	00 00                	add    BYTE PTR [rax],al
  200e06:	00 00                	add    BYTE PTR [rax],al
  200e08:	01 00                	add    DWORD PTR [rax],eax
  200e0a:	00 00                	add    BYTE PTR [rax],al
  200e0c:	00 00                	add    BYTE PTR [rax],al
  200e0e:	00 00                	add    BYTE PTR [rax],al
  200e10:	0c 00                	or     al,0x0
  200e12:	00 00                	add    BYTE PTR [rax],al
  200e14:	00 00                	add    BYTE PTR [rax],al
  200e16:	00 00                	add    BYTE PTR [rax],al
  200e18:	b8 04 00 00 00       	mov    eax,0x4
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 200e25 <_DYNAMIC+0x25>
  200e25:	00 00                	add    BYTE PTR [rax],al
  200e27:	00 a4 06 00 00 00 00 	add    BYTE PTR [rsi+rax*1+0x0],ah
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	19 00                	sbb    DWORD PTR [rax],eax
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f0 0d 20 00 00 00    	lock or eax,0x20
  200e3e:	00 00                	add    BYTE PTR [rax],al
  200e40:	1b 00                	sbb    eax,DWORD PTR [rax]
  200e42:	00 00                	add    BYTE PTR [rax],al
  200e44:	00 00                	add    BYTE PTR [rax],al
  200e46:	00 00                	add    BYTE PTR [rax],al
  200e48:	08 00                	or     BYTE PTR [rax],al
  200e4a:	00 00                	add    BYTE PTR [rax],al
  200e4c:	00 00                	add    BYTE PTR [rax],al
  200e4e:	00 00                	add    BYTE PTR [rax],al
  200e50:	1a 00                	sbb    al,BYTE PTR [rax]
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	f8                   	clc    
  200e59:	0d 20 00 00 00       	or     eax,0x20
  200e5e:	00 00                	add    BYTE PTR [rax],al
  200e60:	1c 00                	sbb    al,0x0
  200e62:	00 00                	add    BYTE PTR [rax],al
  200e64:	00 00                	add    BYTE PTR [rax],al
  200e66:	00 00                	add    BYTE PTR [rax],al
  200e68:	08 00                	or     BYTE PTR [rax],al
  200e6a:	00 00                	add    BYTE PTR [rax],al
  200e6c:	00 00                	add    BYTE PTR [rax],al
  200e6e:	00 00                	add    BYTE PTR [rax],al
  200e70:	f5                   	cmc    
  200e71:	fe                   	(bad)  
  200e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e85 <_DYNAMIC+0x85>
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 48 03             	add    BYTE PTR [rax+0x3],cl
  200e8a:	00 00                	add    BYTE PTR [rax],al
  200e8c:	00 00                	add    BYTE PTR [rax],al
  200e8e:	00 00                	add    BYTE PTR [rax],al
  200e90:	06                   	(bad)  
  200e91:	00 00                	add    BYTE PTR [rax],al
  200e93:	00 00                	add    BYTE PTR [rax],al
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 0a                	add    BYTE PTR [rdx],cl
  200ea1:	00 00                	add    BYTE PTR [rax],al
  200ea3:	00 00                	add    BYTE PTR [rax],al
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
  200eaa:	00 00                	add    BYTE PTR [rax],al
  200eac:	00 00                	add    BYTE PTR [rax],al
  200eae:	00 00                	add    BYTE PTR [rax],al
  200eb0:	0b 00                	or     eax,DWORD PTR [rax]
  200eb2:	00 00                	add    BYTE PTR [rax],al
  200eb4:	00 00                	add    BYTE PTR [rax],al
  200eb6:	00 00                	add    BYTE PTR [rax],al
  200eb8:	18 00                	sbb    BYTE PTR [rax],al
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	15 00 00 00 00       	adc    eax,0x0
	...
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 03                	add    BYTE PTR [rbx],al
  200ed1:	00 00                	add    BYTE PTR [rax],al
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 c0                	add    al,al
  200ed9:	0f 20 00             	mov    rax,cr0
  200edc:	00 00                	add    BYTE PTR [rax],al
  200ede:	00 00                	add    BYTE PTR [rax],al
  200ee0:	07                   	(bad)  
  200ee1:	00 00                	add    BYTE PTR [rax],al
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 f8                	add    al,bh
  200ee9:	03 00                	add    eax,DWORD PTR [rax]
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 08                	add    BYTE PTR [rax],cl
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 c0                	add    al,al
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 09                	add    BYTE PTR [rcx],cl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 18                	add    BYTE PTR [rax],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 1e                	add    BYTE PTR [rsi],bl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 08                	add    BYTE PTR [rax],cl
  200f19:	00 00                	add    BYTE PTR [rax],al
  200f1b:	00 00                	add    BYTE PTR [rax],al
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 fb                	add    bl,bh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 01                	add    BYTE PTR [rcx],al
  200f29:	00 00                	add    BYTE PTR [rax],al
  200f2b:	08 00                	or     BYTE PTR [rax],al
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 fe                	add    dh,bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 d8                	add    al,bl
  200f39:	03 00                	add    eax,DWORD PTR [rax]
  200f3b:	00 00                	add    BYTE PTR [rax],al
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 ff                	add    bh,bh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 01                	add    BYTE PTR [rcx],al
  200f49:	00 00                	add    BYTE PTR [rax],al
  200f4b:	00 00                	add    BYTE PTR [rax],al
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 f0                	add    al,dh
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 c6                	add    dh,al
  200f59:	03 00                	add    eax,DWORD PTR [rax]
  200f5b:	00 00                	add    BYTE PTR [rax],al
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 f9                	add    cl,bh
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f65:	00 00                	add    BYTE PTR [rax],al
  200f67:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fc0 <_GLOBAL_OFFSET_TABLE_>:
  200fc0:	00 0e                	add    BYTE PTR [rsi],cl
  200fc2:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x440>
   a:	74 75                	je     81 <_init-0x437>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x431>
  19:	74 75                	je     90 <_init-0x428>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	fa                   	cli    
  11:	05 00 00 00 00       	add    eax,0x0
  16:	00 00                	add    BYTE PTR [rax],al
  18:	2b 00                	sub    eax,DWORD PTR [rax]
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	68 03 00 00 04       	push   0x4000003
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 08                	add    BYTE PTR [rax],cl
   b:	01 a6 0b 00 00 0c    	add    DWORD PTR [rsi+0xc00000b],esp
  11:	4d 25 00 00 2a 12    	rex.WRB and rax,0x122a0000
  17:	00 00                	add    BYTE PTR [rax],al
  19:	fa                   	cli    
  1a:	05 00 00 00 00       	add    eax,0x0
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	2b 00                	sub    eax,DWORD PTR [rax]
	...
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	02 d2                	add    dl,dl
  33:	28 00                	sub    BYTE PTR [rax],al
  35:	00 02                	add    BYTE PTR [rdx],al
  37:	d8 3c 00             	fdivr  DWORD PTR [rax+rax*1]
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	03 08                	add    ecx,DWORD PTR [rax]
  3e:	07                   	(bad)  
  3f:	4a 39 00             	rex.WX cmp QWORD PTR [rax],rax
  42:	00 03                	add    BYTE PTR [rbx],al
  44:	01 08                	add    DWORD PTR [rax],ecx
  46:	90                   	nop
  47:	26 00 00             	add    BYTE PTR es:[rax],al
  4a:	03 02                	add    eax,DWORD PTR [rdx]
  4c:	07                   	(bad)  
  4d:	0c 07                	or     al,0x7
  4f:	00 00                	add    BYTE PTR [rax],al
  51:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
  54:	48 1c 00             	rex.W sbb al,0x0
  57:	00 03                	add    BYTE PTR [rbx],al
  59:	01 06                	add    DWORD PTR [rsi],eax
  5b:	f7 41 00 00 03 02 05 	test   DWORD PTR [rcx+0x0],0x5020300
  62:	58                   	pop    rax
  63:	24 00                	and    al,0x0
  65:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
  68:	05 69 6e 74 00       	add    eax,0x746e69
  6d:	03 08                	add    ecx,DWORD PTR [rax]
  6f:	05 a5 39 00 00       	add    eax,0x39a5
  74:	02 47 10             	add    al,BYTE PTR [rdi+0x10]
  77:	00 00                	add    BYTE PTR [rax],al
  79:	03 8c 6d 00 00 00 02 	add    ecx,DWORD PTR [rbp+rbp*2+0x2000000]
  80:	99                   	cdq    
  81:	0c 00                	or     al,0x0
  83:	00 03                	add    BYTE PTR [rbx],al
  85:	8d 6d 00             	lea    ebp,[rbp+0x0]
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	05 08 06 08 92       	add    eax,0x92080608
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	00 03                	add    BYTE PTR [rbx],al
  93:	01 06                	add    DWORD PTR [rsi],eax
  95:	fe 41 00             	inc    BYTE PTR [rcx+0x0]
  98:	00 07                	add    BYTE PTR [rdi],al
  9a:	92                   	xchg   edx,eax
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 08                	add    BYTE PTR [rax],cl
  9f:	40 3d 00 00 d8 04    	rex cmp eax,0x4d80000
  a5:	f5                   	cmc    
  a6:	1e                   	(bad)  
  a7:	02 00                	add    al,BYTE PTR [rax]
  a9:	00 09                	add    BYTE PTR [rcx],cl
  ab:	ad                   	lods   eax,DWORD PTR ds:[rsi]
  ac:	26 00 00             	add    BYTE PTR es:[rax],al
  af:	04 f6                	add    al,0xf6
  b1:	66 00 00             	data16 add BYTE PTR [rax],al
  b4:	00 00                	add    BYTE PTR [rax],al
  b6:	09 e6                	or     esi,esp
  b8:	20 00                	and    BYTE PTR [rax],al
  ba:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
  bd:	8c 00                	mov    WORD PTR [rax],es
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	08 09                	or     BYTE PTR [rcx],cl
  c3:	12 33                	adc    dh,BYTE PTR [rbx]
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	04 fc                	add    al,0xfc
  c9:	8c 00                	mov    WORD PTR [rax],es
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	10 09                	adc    BYTE PTR [rcx],cl
  cf:	46 19 00             	rex.RX sbb DWORD PTR [rax],r8d
  d2:	00 04 fd 8c 00 00 00 	add    BYTE PTR [rdi*8+0x8c],al
  d9:	18 09                	sbb    BYTE PTR [rcx],cl
  db:	ca 24 00             	retf   0x24
  de:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
  e1:	8c 00                	mov    WORD PTR [rax],es
  e3:	00 00                	add    BYTE PTR [rax],al
  e5:	20 09                	and    BYTE PTR [rcx],cl
  e7:	a9 41 00 00 04       	test   eax,0x4000041
  ec:	ff 8c 00 00 00 28 0a 	dec    DWORD PTR [rax+rax*1+0xa280000]
  f3:	eb 05                	jmp    fa <_init-0x3be>
  f5:	00 00                	add    BYTE PTR [rax],al
  f7:	04 00                	add    al,0x0
  f9:	01 8c 00 00 00 30 0a 	add    DWORD PTR [rax+rax*1+0xa300000],ecx
 100:	4c                   	rex.WR
 101:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 104:	04 01                	add    al,0x1
 106:	01 8c 00 00 00 38 0a 	add    DWORD PTR [rax+rax*1+0xa380000],ecx
 10d:	fe 02                	inc    BYTE PTR [rdx]
 10f:	00 00                	add    BYTE PTR [rax],al
 111:	04 02                	add    al,0x2
 113:	01 8c 00 00 00 40 0a 	add    DWORD PTR [rax+rax*1+0xa400000],ecx
 11a:	04 26                	add    al,0x26
 11c:	00 00                	add    BYTE PTR [rax],al
 11e:	04 04                	add    al,0x4
 120:	01 8c 00 00 00 48 0a 	add    DWORD PTR [rax+rax*1+0xa480000],ecx
 127:	87 42 00             	xchg   DWORD PTR [rdx+0x0],eax
 12a:	00 04 05 01 8c 00 00 	add    BYTE PTR [rax*1+0x8c01],al
 131:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
 134:	b1 0f                	mov    cl,0xf
 136:	00 00                	add    BYTE PTR [rax],al
 138:	04 06                	add    al,0x6
 13a:	01 8c 00 00 00 58 0a 	add    DWORD PTR [rax+rax*1+0xa580000],ecx
 141:	01 09                	add    DWORD PTR [rcx],ecx
 143:	00 00                	add    BYTE PTR [rax],al
 145:	04 08                	add    al,0x8
 147:	01 56 02             	add    DWORD PTR [rsi+0x2],edx
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	60                   	(bad)  
 14d:	0a 57 4a             	or     dl,BYTE PTR [rdi+0x4a]
 150:	00 00                	add    BYTE PTR [rax],al
 152:	04 0a                	add    al,0xa
 154:	01 5c 02 00          	add    DWORD PTR [rdx+rax*1+0x0],ebx
 158:	00 68 0a             	add    BYTE PTR [rax+0xa],ch
 15b:	d9 16                	fst    DWORD PTR [rsi]
 15d:	00 00                	add    BYTE PTR [rax],al
 15f:	04 0c                	add    al,0xc
 161:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 164:	00 00                	add    BYTE PTR [rax],al
 166:	70 0a                	jo     172 <_init-0x346>
 168:	3a 08                	cmp    cl,BYTE PTR [rax]
 16a:	00 00                	add    BYTE PTR [rax],al
 16c:	04 10                	add    al,0x10
 16e:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 171:	00 00                	add    BYTE PTR [rax],al
 173:	74 0a                	je     17f <_init-0x339>
 175:	34 3d                	xor    al,0x3d
 177:	00 00                	add    BYTE PTR [rax],al
 179:	04 12                	add    al,0x12
 17b:	01 74 00 00          	add    DWORD PTR [rax+rax*1+0x0],esi
 17f:	00 78 0a             	add    BYTE PTR [rax+0xa],bh
 182:	67 4c 00 00          	rex.WR add BYTE PTR [eax],r8b
 186:	04 16                	add    al,0x16
 188:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
 18b:	00 00                	add    BYTE PTR [rax],al
 18d:	80 0a 5f             	or     BYTE PTR [rdx],0x5f
 190:	18 00                	sbb    BYTE PTR [rax],al
 192:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
 195:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
 198:	00 00                	add    BYTE PTR [rax],al
 19a:	82                   	(bad)  
 19b:	0a 64 01 00          	or     ah,BYTE PTR [rcx+rax*1+0x0]
 19f:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
 1a2:	01 62 02             	add    DWORD PTR [rdx+0x2],esp
 1a5:	00 00                	add    BYTE PTR [rax],al
 1a7:	83 0a 15             	or     DWORD PTR [rdx],0x15
 1aa:	3c 00                	cmp    al,0x0
 1ac:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
 1af:	01 72 02             	add    DWORD PTR [rdx+0x2],esi
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	88 0a                	mov    BYTE PTR [rdx],cl
 1b6:	38 3d 00 00 04 25    	cmp    BYTE PTR [rip+0x25040000],bh        # 250401bc <_end+0x24e3f1a4>
 1bc:	01 7f 00             	add    DWORD PTR [rdi+0x0],edi
 1bf:	00 00                	add    BYTE PTR [rax],al
 1c1:	90                   	nop
 1c2:	0a 46 2b             	or     al,BYTE PTR [rsi+0x2b]
 1c5:	00 00                	add    BYTE PTR [rax],al
 1c7:	04 2d                	add    al,0x2d
 1c9:	01 8a 00 00 00 98    	add    DWORD PTR [rdx-0x68000000],ecx
 1cf:	0a 4d 2b             	or     cl,BYTE PTR [rbp+0x2b]
 1d2:	00 00                	add    BYTE PTR [rax],al
 1d4:	04 2e                	add    al,0x2e
 1d6:	01 8a 00 00 00 a0    	add    DWORD PTR [rdx-0x60000000],ecx
 1dc:	0a 54 2b 00          	or     dl,BYTE PTR [rbx+rbp*1+0x0]
 1e0:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
 1e3:	01 8a 00 00 00 a8    	add    DWORD PTR [rdx-0x58000000],ecx
 1e9:	0a 5b 2b             	or     bl,BYTE PTR [rbx+0x2b]
 1ec:	00 00                	add    BYTE PTR [rax],al
 1ee:	04 30                	add    al,0x30
 1f0:	01 8a 00 00 00 b0    	add    DWORD PTR [rdx-0x50000000],ecx
 1f6:	0a 62 2b             	or     ah,BYTE PTR [rdx+0x2b]
 1f9:	00 00                	add    BYTE PTR [rax],al
 1fb:	04 32                	add    al,0x32
 1fd:	01 31                	add    DWORD PTR [rcx],esi
 1ff:	00 00                	add    BYTE PTR [rax],al
 201:	00 b8 0a 5e 1f 00    	add    BYTE PTR [rax+0x1f5e0a],bh
 207:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
 20a:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	c0 0a 43             	ror    BYTE PTR [rdx],0x43
 212:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 215:	04 35                	add    al,0x35
 217:	01 78 02             	add    DWORD PTR [rax+0x2],edi
 21a:	00 00                	add    BYTE PTR [rax],al
 21c:	c4                   	(bad)  
 21d:	00 0b                	add    BYTE PTR [rbx],cl
 21f:	0f 02 00             	lar    eax,WORD PTR [rax]
 222:	00 04 9a             	add    BYTE PTR [rdx+rbx*4],al
 225:	08 e8                	or     al,ch
 227:	1b 00                	sbb    eax,DWORD PTR [rax]
 229:	00 18                	add    BYTE PTR [rax],bl
 22b:	04 a0                	add    al,0xa0
 22d:	56                   	push   rsi
 22e:	02 00                	add    al,BYTE PTR [rax]
 230:	00 09                	add    BYTE PTR [rcx],cl
 232:	76 1a                	jbe    24e <_init-0x26a>
 234:	00 00                	add    BYTE PTR [rax],al
 236:	04 a1                	add    al,0xa1
 238:	56                   	push   rsi
 239:	02 00                	add    al,BYTE PTR [rax]
 23b:	00 00                	add    BYTE PTR [rax],al
 23d:	09 69 41             	or     DWORD PTR [rcx+0x41],ebp
 240:	00 00                	add    BYTE PTR [rax],al
 242:	04 a2                	add    al,0xa2
 244:	5c                   	pop    rsp
 245:	02 00                	add    al,BYTE PTR [rax]
 247:	00 08                	add    BYTE PTR [rax],cl
 249:	09 d6                	or     esi,edx
 24b:	0e                   	(bad)  
 24c:	00 00                	add    BYTE PTR [rax],al
 24e:	04 a6                	add    al,0xa6
 250:	66 00 00             	data16 add BYTE PTR [rax],al
 253:	00 10                	add    BYTE PTR [rax],dl
 255:	00 06                	add    BYTE PTR [rsi],al
 257:	08 25 02 00 00 06    	or     BYTE PTR [rip+0x6000002],ah        # 600025f <_end+0x5dff247>
 25d:	08 9e 00 00 00 0c    	or     BYTE PTR [rsi+0xc000000],bl
 263:	92                   	xchg   edx,eax
 264:	00 00                	add    BYTE PTR [rax],al
 266:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	0d 3c 00 00 00       	or     eax,0x3c
 270:	00 00                	add    BYTE PTR [rax],al
 272:	06                   	(bad)  
 273:	08 1e                	or     BYTE PTR [rsi],bl
 275:	02 00                	add    al,BYTE PTR [rax]
 277:	00 0c 92             	add    BYTE PTR [rdx+rdx*4],cl
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	00 88 02 00 00 0d    	add    BYTE PTR [rax+0xd000002],cl
 282:	3c 00                	cmp    al,0x0
 284:	00 00                	add    BYTE PTR [rax],al
 286:	13 00                	adc    eax,DWORD PTR [rax]
 288:	0e                   	(bad)  
 289:	c1 38 00             	sar    DWORD PTR [rax],0x0
 28c:	00 0f                	add    BYTE PTR [rdi],cl
 28e:	3e 25 00 00 04 3f    	ds and eax,0x3f040000
 294:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 29a:	b4 25                	mov    ah,0x25
 29c:	00 00                	add    BYTE PTR [rax],al
 29e:	04 40                	add    al,0x40
 2a0:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 2a6:	0d 1f 00 00 04       	or     eax,0x400001f
 2ab:	41 01 88 02 00 00 06 	add    DWORD PTR [r8+0x6000002],ecx
 2b2:	08 99 00 00 00 07    	or     BYTE PTR [rcx+0x7000000],bl
 2b8:	b1 02                	mov    cl,0x2
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	10 9a 22 00 00 05    	adc    BYTE PTR [rdx+0x5000022],bl
 2c2:	87 5c 02 00          	xchg   DWORD PTR [rdx+rax*1+0x0],ebx
 2c6:	00 10                	add    BYTE PTR [rax],dl
 2c8:	82                   	(bad)  
 2c9:	41 00 00             	add    BYTE PTR [r8],al
 2cc:	05 88 5c 02 00       	add    eax,0x25c88
 2d1:	00 10                	add    BYTE PTR [rax],dl
 2d3:	58                   	pop    rax
 2d4:	18 00                	sbb    BYTE PTR [rax],al
 2d6:	00 05 89 5c 02 00    	add    BYTE PTR [rip+0x25c89],al        # 25f65 <__FRAME_END__+0x25771>
 2dc:	00 10                	add    BYTE PTR [rax],dl
 2de:	56                   	push   rsi
 2df:	16                   	(bad)  
 2e0:	00 00                	add    BYTE PTR [rax],al
 2e2:	06                   	(bad)  
 2e3:	1a 66 00             	sbb    ah,BYTE PTR [rsi+0x0]
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	0c b7                	or     al,0xb7
 2ea:	02 00                	add    al,BYTE PTR [rax]
 2ec:	00 f3                	add    bl,dh
 2ee:	02 00                	add    al,BYTE PTR [rax]
 2f0:	00 11                	add    BYTE PTR [rcx],dl
 2f2:	00 07                	add    BYTE PTR [rdi],al
 2f4:	e8 02 00 00 10       	call   100002fb <_end+0xfdff2e3>
 2f9:	41 15 00 00 06 1b    	rex.B adc eax,0x1b060000
 2ff:	f3 02 00             	repz add al,BYTE PTR [rax]
 302:	00 12                	add    BYTE PTR [rdx],dl
 304:	33 30                	xor    esi,DWORD PTR [rax]
 306:	00 00                	add    BYTE PTR [rax],al
 308:	01 03                	add    DWORD PTR [rbx],eax
 30a:	66 00 00             	data16 add BYTE PTR [rax],al
 30d:	00 fa                	add    dl,bh
 30f:	05 00 00 00 00       	add    eax,0x0
 314:	00 00                	add    BYTE PTR [rax],al
 316:	2b 00                	sub    eax,DWORD PTR [rax]
 318:	00 00                	add    BYTE PTR [rax],al
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	00 00                	add    BYTE PTR [rax],al
 31e:	01 9c 65 03 00 00 13 	add    DWORD PTR [rbp+riz*2+0x13000003],ebx
 325:	33 07                	xor    eax,DWORD PTR [rdi]
 327:	00 00                	add    BYTE PTR [rax],al
 329:	01 03                	add    DWORD PTR [rbx],eax
 32b:	66 00 00             	data16 add BYTE PTR [rax],al
 32e:	00 02                	add    BYTE PTR [rdx],al
 330:	91                   	xchg   ecx,eax
 331:	5c                   	pop    rsp
 332:	13 f4                	adc    esi,esp
 334:	1c 00                	sbb    al,0x0
 336:	00 01                	add    BYTE PTR [rcx],al
 338:	03 65 03             	add    esp,DWORD PTR [rbp+0x3]
 33b:	00 00                	add    BYTE PTR [rax],al
 33d:	02 91 50 14 61 00    	add    dl,BYTE PTR [rcx+0x611450]
 343:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3af <_init-0x109>
 349:	02 91 64 14 62 00    	add    dl,BYTE PTR [rcx+0x621464]
 34f:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3bb <_init-0xfd>
 355:	02 91 68 14 63 00    	add    dl,BYTE PTR [rcx+0x631468]
 35b:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3c7 <_init-0xf1>
 361:	02 91 6c 00 06 08    	add    dl,BYTE PTR [rcx+0x806006c]
 367:	8c 00                	mov    WORD PTR [rax],es
 369:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2eb02fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	99                   	cdq    
  12:	42 17                	rex.X (bad) 
  14:	00 00                	add    BYTE PTR [rax],al
  16:	02 16                	add    dl,BYTE PTR [rsi]
  18:	00 03                	add    BYTE PTR [rbx],al
  1a:	0e                   	(bad)  
  1b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  1f:	49 13 00             	adc    rax,QWORD PTR [r8]
  22:	00 03                	add    BYTE PTR [rbx],al
  24:	24 00                	and    al,0x0
  26:	0b 0b                	or     ecx,DWORD PTR [rbx]
  28:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  2b:	0e                   	(bad)  
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	04 24                	add    al,0x24
  30:	00 0b                	add    BYTE PTR [rbx],cl
  32:	0b 3e                	or     edi,DWORD PTR [rsi]
  34:	0b 03                	or     eax,DWORD PTR [rbx]
  36:	08 00                	or     BYTE PTR [rax],al
  38:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b004d <_end+0xaeaf035>
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	06                   	(bad)  
  41:	0f 00 0b             	str    WORD PTR [rbx]
  44:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  47:	00 00                	add    BYTE PTR [rax],al
  49:	07                   	(bad)  
  4a:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	08 13                	or     BYTE PTR [rbx],dl
  52:	01 03                	add    DWORD PTR [rbx],eax
  54:	0e                   	(bad)  
  55:	0b 0b                	or     ecx,DWORD PTR [rbx]
  57:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  59:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5b:	01 13                	add    DWORD PTR [rbx],edx
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0365 <_end+0x39edf34d>
  65:	0b 3b                	or     edi,DWORD PTR [rbx]
  67:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  6a:	38 0b                	cmp    BYTE PTR [rbx],cl
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0374 <_end+0x39edf35c>
  74:	0b 3b                	or     edi,DWORD PTR [rbx]
  76:	05 49 13 38 0b       	add    eax,0xb381349
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	0b 16                	or     edx,DWORD PTR [rsi]
  7f:	00 03                	add    BYTE PTR [rbx],al
  81:	0e                   	(bad)  
  82:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  84:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  86:	00 00                	add    BYTE PTR [rax],al
  88:	0c 01                	or     al,0x1
  8a:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
  8d:	01 13                	add    DWORD PTR [rbx],edx
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	0d 21 00 49 13       	or     eax,0x13490021
  96:	2f                   	(bad)  
  97:	0b 00                	or     eax,DWORD PTR [rax]
  99:	00 0e                	add    BYTE PTR [rsi],cl
  9b:	13 00                	adc    eax,DWORD PTR [rax]
  9d:	03 0e                	add    ecx,DWORD PTR [rsi]
  9f:	3c 19                	cmp    al,0x19
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	0f 34                	sysenter 
  a5:	00 03                	add    BYTE PTR [rbx],al
  a7:	0e                   	(bad)  
  a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  aa:	3b 05 49 13 3f 19    	cmp    eax,DWORD PTR [rip+0x193f1349]        # 193f13f9 <_end+0x191f03e1>
  b0:	3c 19                	cmp    al,0x19
  b2:	00 00                	add    BYTE PTR [rax],al
  b4:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
  b7:	03 0e                	add    ecx,DWORD PTR [rsi]
  b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  bd:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  c0:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	11 21                	adc    DWORD PTR [rcx],esp
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 12                	add    BYTE PTR [rdx],dl
  cb:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  ce:	19 03                	sbb    DWORD PTR [rbx],eax
  d0:	0e                   	(bad)  
  d1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  d3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  d5:	27                   	(bad)  
  d6:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  d9:	11 01                	adc    DWORD PTR [rcx],eax
  db:	12 07                	adc    al,BYTE PTR [rdi]
  dd:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e03ec <_end+0x39edf3d4>
  ec:	0b 3b                	or     edi,DWORD PTR [rbx]
  ee:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  f1:	02 18                	add    bl,BYTE PTR [rax]
  f3:	00 00                	add    BYTE PTR [rax],al
  f5:	14 34                	adc    al,0x34
  f7:	00 03                	add    BYTE PTR [rbx],al
  f9:	08 3a                	or     BYTE PTR [rdx],bh
  fb:	0b 3b                	or     edi,DWORD PTR [rbx]
  fd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 100:	02 18                	add    bl,BYTE PTR [rax]
 102:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	28 02                	sub    BYTE PTR [rdx],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	0d 02 00 00 01       	or     eax,0x1000002
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0x427>
  1e:	72 2f                	jb     4f <_init-0x469>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0x456>
  2a:	36 5f                	ss pop rdi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[rdi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0x450>
  39:	37                   	(bad)  
  3a:	2f                   	(bad)  
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [rdi],ch
  44:	75 73                	jne    b9 <_init-0x3ff>
  46:	72 2f                	jb     77 <_init-0x441>
  48:	78 38                	js     82 <_init-0x436>
  4a:	36 5f                	ss pop rdi
  4c:	36 34 2d             	ss xor al,0x2d
  4f:	6c                   	ins    BYTE PTR es:[rdi],dx
  50:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  57:	75 2f                	jne    88 <_init-0x430>
  59:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  60:	2f                   	(bad)  
  61:	62                   	(bad)  
  62:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
  69:	72 
  6a:	2f                   	(bad)  
  6b:	78 38                	js     a5 <_init-0x413>
  6d:	36 5f                	ss pop rdi
  6f:	36 34 2d             	ss xor al,0x2d
  72:	6c                   	ins    BYTE PTR es:[rdi],dx
  73:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  7a:	75 2f                	jne    ab <_init-0x40d>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	00 2f                	add    BYTE PTR [rdi],ch
  85:	75 73                	jne    fa <_init-0x3be>
  87:	72 2f                	jb     b8 <_init-0x400>
  89:	78 38                	js     c3 <_init-0x3f5>
  8b:	36 5f                	ss pop rdi
  8d:	36 34 2d             	ss xor al,0x2d
  90:	6c                   	ins    BYTE PTR es:[rdi],dx
  91:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  98:	75 2f                	jne    c9 <_init-0x3ef>
  9a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a1:	2f                   	(bad)  
  a2:	73 79                	jae    11d <_init-0x39b>
  a4:	73 00                	jae    a6 <_init-0x412>
  a6:	2f                   	(bad)  
  a7:	75 73                	jne    11c <_init-0x39c>
  a9:	72 2f                	jb     da <_init-0x3de>
  ab:	78 38                	js     e5 <_init-0x3d3>
  ad:	36 5f                	ss pop rdi
  af:	36 34 2d             	ss xor al,0x2d
  b2:	6c                   	ins    BYTE PTR es:[rdi],dx
  b3:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  ba:	75 2f                	jne    eb <_init-0x3cd>
  bc:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  c3:	2f                   	(bad)  
  c4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  c6:	75 00                	jne    c8 <_init-0x3f0>
  c8:	2f                   	(bad)  
  c9:	75 73                	jne    13e <_init-0x37a>
  cb:	72 2f                	jb     fc <_init-0x3bc>
  cd:	78 38                	js     107 <_init-0x3b1>
  cf:	36 5f                	ss pop rdi
  d1:	36 34 2d             	ss xor al,0x2d
  d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  d5:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  dc:	75 2f                	jne    10d <_init-0x3ab>
  de:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e5:	2f                   	(bad)  
  e6:	62                   	(bad)  
  e7:	69 74 73 2f 74 79 70 	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65707974
  ee:	65 
  ef:	73 00                	jae    f1 <_init-0x3c7>
  f1:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
  f4:	64 5f                	fs pop rdi
  f6:	69 6e 74 2e 63 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x632e
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	73 74                	jae    175 <_init-0x343>
 101:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
 108:	01 
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	74 79                	je     186 <_init-0x332>
 10d:	70 65                	jo     174 <_init-0x344>
 10f:	73 2e                	jae    13f <_init-0x379>
 111:	68 00 02 00 00       	push   0x200
 116:	6c                   	ins    BYTE PTR es:[rdi],dx
 117:	69 62 69 6f 2e 68 00 	imul   esp,DWORD PTR [rdx+0x69],0x682e6f
 11e:	02 00                	add    al,BYTE PTR [rax]
 120:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 123:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x30068
 12a:	00 
 12b:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 12e:	73 5f                	jae    18f <_init-0x329>
 130:	65 72 72             	gs jb  1a5 <_init-0x313>
 133:	6c                   	ins    BYTE PTR es:[rdi],dx
 134:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
 13b:	00 00                	add    BYTE PTR [rax],al
 13d:	73 74                	jae    1b3 <_init-0x305>
 13f:	64 63 2d 70 72 65 64 	movsxd ebp,DWORD PTR fs:[rip+0x64657270]        # 646573b6 <_end+0x6445639e>
 146:	65 66 2e 68 00 03    	gs cs pushw 0x300
 14c:	00 00                	add    BYTE PTR [rax],al
 14e:	6c                   	ins    BYTE PTR es:[rdi],dx
 14f:	69 62 63 2d 68 65 61 	imul   esp,DWORD PTR [rdx+0x63],0x6165682d
 156:	64 65 72 2d          	fs gs jb 187 <_init-0x331>
 15a:	73 74                	jae    1d0 <_init-0x2e8>
 15c:	61                   	(bad)  
 15d:	72 74                	jb     1d3 <_init-0x2e5>
 15f:	2e 68 00 02 00 00    	cs push 0x200
 165:	66 65 61             	data16 gs (bad) 
 168:	74 75                	je     1df <_init-0x2d9>
 16a:	72 65                	jb     1d1 <_init-0x2e7>
 16c:	73 2e                	jae    19c <_init-0x31c>
 16e:	68 00 03 00 00       	push   0x300
 173:	63 64 65 66          	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
 177:	73 2e                	jae    1a7 <_init-0x311>
 179:	68 00 04 00 00       	push   0x400
 17e:	77 6f                	ja     1ef <_init-0x2c9>
 180:	72 64                	jb     1e6 <_init-0x2d2>
 182:	73 69                	jae    1ed <_init-0x2cb>
 184:	7a 65                	jp     1eb <_init-0x2cd>
 186:	2e 68 00 02 00 00    	cs push 0x200
 18c:	6c                   	ins    BYTE PTR es:[rdi],dx
 18d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 18e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 18f:	67 2d 64 6f 75 62    	addr32 sub eax,0x62756f64
 195:	6c                   	ins    BYTE PTR es:[rdi],dx
 196:	65 2e 68 00 02 00 00 	gs cs push 0x200
 19d:	73 74                	jae    213 <_init-0x2a5>
 19f:	75 62                	jne    203 <_init-0x2b5>
 1a1:	73 2e                	jae    1d1 <_init-0x2e7>
 1a3:	68 00 05 00 00       	push   0x500
 1a8:	73 74                	jae    21e <_init-0x29a>
 1aa:	75 62                	jne    20e <_init-0x2aa>
 1ac:	73 2d                	jae    1db <_init-0x2dd>
 1ae:	36 34 2e             	ss xor al,0x2e
 1b1:	68 00 05 00 00       	push   0x500
 1b6:	74 79                	je     231 <_init-0x287>
 1b8:	70 65                	jo     21f <_init-0x299>
 1ba:	73 69                	jae    225 <_init-0x293>
 1bc:	7a 65                	jp     223 <_init-0x295>
 1be:	73 2e                	jae    1ee <_init-0x2ca>
 1c0:	68 00 02 00 00       	push   0x200
 1c5:	5f                   	pop    rdi
 1c6:	5f                   	pop    rdi
 1c7:	46                   	rex.RX
 1c8:	49                   	rex.WB
 1c9:	4c                   	rex.WR
 1ca:	45                   	rex.RB
 1cb:	2e 68 00 06 00 00    	cs push 0x600
 1d1:	46                   	rex.RX
 1d2:	49                   	rex.WB
 1d3:	4c                   	rex.WR
 1d4:	45                   	rex.RB
 1d5:	2e 68 00 06 00 00    	cs push 0x600
 1db:	5f                   	pop    rdi
 1dc:	47 5f                	rex.RXB pop r15
 1de:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 1e1:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 1e7:	02 00                	add    al,BYTE PTR [rax]
 1e9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 1ec:	6d                   	ins    DWORD PTR es:[rdi],dx
 1ed:	62 73 74 61 74       	(bad)  {k1}
 1f2:	65 5f                	gs pop rdi
 1f4:	74 2e                	je     224 <_init-0x294>
 1f6:	68 00 06 00 00       	push   0x600
 1fb:	73 74                	jae    271 <_init-0x247>
 1fd:	64 61                	fs (bad) 
 1ff:	72 67                	jb     268 <_init-0x250>
 201:	2e 68 00 01 00 00    	cs push 0x100
 207:	73 74                	jae    27d <_init-0x23b>
 209:	64 69 6f 5f 6c 69 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x2e6d696c
 210:	2e 
 211:	68 00 02 00 00       	push   0x200
 216:	00 00                	add    BYTE PTR [rax],al
 218:	09 02                	or     DWORD PTR [rdx],eax
 21a:	fa                   	cli    
 21b:	05 00 00 00 00       	add    eax,0x0
 220:	00 00                	add    BYTE PTR [rax],al
 222:	15 af 75 76 f3       	adc    eax,0xf37675af
 227:	02 02                	add    al,BYTE PTR [rdx]
 229:	00 01                	add    BYTE PTR [rcx],al
 22b:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	49                   	rex.WB
       2:	4f 5f                	rex.WRXB pop r15
       4:	44                   	rex.R
       5:	45                   	rex.RB
       6:	43 20 30             	rex.XB and BYTE PTR [r8],sil
       9:	32 30                	xor    dh,BYTE PTR [rax]
       b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
       e:	53                   	push   rbx
       f:	49                   	rex.WB
      10:	47 5f                	rex.RXB pop r15
      12:	41 54                	push   r12
      14:	4f                   	rex.WRXB
      15:	4d                   	rex.WRB
      16:	49                   	rex.WB
      17:	43 5f                	rex.XB pop r15
      19:	4d                   	rex.WRB
      1a:	41 58                	pop    r8
      1c:	5f                   	pop    rdi
      1d:	5f                   	pop    rdi
      1e:	20 30                	and    BYTE PTR [rax],dh
      20:	78 37                	js     59 <_init-0x45f>
      22:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
      29:	00 5f 5f 
      2c:	46                   	rex.RX
      2d:	4c 54                	rex.WR push rsp
      2f:	36 34 5f             	ss xor al,0x5f
      32:	48                   	rex.W
      33:	41 53                	push   r11
      35:	5f                   	pop    rdi
      36:	51                   	push   rcx
      37:	55                   	push   rbp
      38:	49                   	rex.WB
      39:	45 54                	rex.RB push r12
      3b:	5f                   	pop    rdi
      3c:	4e                   	rex.WRX
      3d:	41                   	rex.B
      3e:	4e 5f                	rex.WRX pop rdi
      40:	5f                   	pop    rdi
      41:	20 31                	and    BYTE PTR [rcx],dh
      43:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
      46:	49 5a                	rex.WB pop r10
      48:	45 5f                	rex.RB pop r15
      4a:	54                   	push   rsp
      4b:	5f                   	pop    rdi
      4c:	44                   	rex.R
      4d:	45                   	rex.RB
      4e:	46                   	rex.RX
      4f:	49                   	rex.WB
      50:	4e                   	rex.WRX
      51:	45                   	rex.RB
      52:	44 20 00             	and    BYTE PTR [rax],r8b
      55:	5f                   	pop    rdi
      56:	49                   	rex.WB
      57:	4f 5f                	rex.WRXB pop r15
      59:	49 53                	rex.WB push r11
      5b:	5f                   	pop    rdi
      5c:	46                   	rex.RX
      5d:	49                   	rex.WB
      5e:	4c                   	rex.WR
      5f:	45                   	rex.RB
      60:	42 55                	rex.X push rbp
      62:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
      65:	78 32                	js     99 <_init-0x41f>
      67:	30 30                	xor    BYTE PTR [rax],dh
      69:	30 00                	xor    BYTE PTR [rax],al
      6b:	5f                   	pop    rdi
      6c:	5f                   	pop    rdi
      6d:	44                   	rex.R
      6e:	45                   	rex.RB
      6f:	43                   	rex.XB
      70:	36 34 5f             	ss xor al,0x5f
      73:	53                   	push   rbx
      74:	55                   	push   rbp
      75:	42                   	rex.X
      76:	4e                   	rex.WRX
      77:	4f 52                	rex.WRXB push r10
      79:	4d                   	rex.WRB
      7a:	41                   	rex.B
      7b:	4c 5f                	rex.WR pop rdi
      7d:	4d                   	rex.WRB
      7e:	49                   	rex.WB
      7f:	4e 5f                	rex.WRX pop rdi
      81:	5f                   	pop    rdi
      82:	20 30                	and    BYTE PTR [rax],dh
      84:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
      87:	30 30                	xor    BYTE PTR [rax],dh
      89:	30 30                	xor    BYTE PTR [rax],dh
      8b:	30 30                	xor    BYTE PTR [rax],dh
      8d:	30 30                	xor    BYTE PTR [rax],dh
      8f:	30 30                	xor    BYTE PTR [rax],dh
      91:	30 30                	xor    BYTE PTR [rax],dh
      93:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
      96:	33 38                	xor    edi,DWORD PTR [rax]
      98:	33 44 44 00          	xor    eax,DWORD PTR [rsp+rax*2+0x0]
      9c:	5f                   	pop    rdi
      9d:	5f                   	pop    rdi
      9e:	46                   	rex.RX
      9f:	4c 54                	rex.WR push rsp
      a1:	33 32                	xor    esi,DWORD PTR [rdx]
      a3:	5f                   	pop    rdi
      a4:	48                   	rex.W
      a5:	41 53                	push   r11
      a7:	5f                   	pop    rdi
      a8:	49                   	rex.WB
      a9:	4e                   	rex.WRX
      aa:	46                   	rex.RX
      ab:	49                   	rex.WB
      ac:	4e                   	rex.WRX
      ad:	49 54                	rex.WB push r12
      af:	59                   	pop    rcx
      b0:	5f                   	pop    rdi
      b1:	5f                   	pop    rdi
      b2:	20 31                	and    BYTE PTR [rcx],dh
      b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      b7:	46                   	rex.RX
      b8:	4c 54                	rex.WR push rsp
      ba:	36 34 5f             	ss xor al,0x5f
      bd:	4d                   	rex.WRB
      be:	41 58                	pop    r8
      c0:	5f                   	pop    rdi
      c1:	45 58                	rex.RB pop r8
      c3:	50                   	push   rax
      c4:	5f                   	pop    rdi
      c5:	5f                   	pop    rdi
      c6:	20 31                	and    BYTE PTR [rcx],dh
      c8:	30 32                	xor    BYTE PTR [rdx],dh
      ca:	34 00                	xor    al,0x0
      cc:	5f                   	pop    rdi
      cd:	5f                   	pop    rdi
      ce:	46                   	rex.RX
      cf:	4c 54                	rex.WR push rsp
      d1:	5f                   	pop    rdi
      d2:	4d                   	rex.WRB
      d3:	49                   	rex.WB
      d4:	4e 5f                	rex.WRX pop rdi
      d6:	31 30                	xor    DWORD PTR [rax],esi
      d8:	5f                   	pop    rdi
      d9:	45 58                	rex.RB pop r8
      db:	50                   	push   rax
      dc:	5f                   	pop    rdi
      dd:	5f                   	pop    rdi
      de:	20 28                	and    BYTE PTR [rax],ch
      e0:	2d 33 37 29 00       	sub    eax,0x293733
      e5:	5f                   	pop    rdi
      e6:	5f                   	pop    rdi
      e7:	53                   	push   rbx
      e8:	59                   	pop    rcx
      e9:	53                   	push   rbx
      ea:	43                   	rex.XB
      eb:	41                   	rex.B
      ec:	4c                   	rex.WR
      ed:	4c 5f                	rex.WR pop rdi
      ef:	55                   	push   rbp
      f0:	4c                   	rex.WR
      f1:	4f                   	rex.WRXB
      f2:	4e                   	rex.WRX
      f3:	47 5f                	rex.RXB pop r15
      f5:	54                   	push   rsp
      f6:	59                   	pop    rcx
      f7:	50                   	push   rax
      f8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
      fc:	55                   	push   rbp
      fd:	4c                   	rex.WR
      fe:	4f                   	rex.WRXB
      ff:	4e                   	rex.WRX
     100:	47 57                	rex.RXB push r15
     102:	4f 52                	rex.WRXB push r10
     104:	44 5f                	rex.R pop rdi
     106:	54                   	push   rsp
     107:	59                   	pop    rcx
     108:	50                   	push   rax
     109:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     10d:	46                   	rex.RX
     10e:	4c 54                	rex.WR push rsp
     110:	36 34 58             	ss xor al,0x58
     113:	5f                   	pop    rdi
     114:	45 50                	rex.RB push r8
     116:	53                   	push   rbx
     117:	49                   	rex.WB
     118:	4c                   	rex.WR
     119:	4f                   	rex.WRXB
     11a:	4e 5f                	rex.WRX pop rdi
     11c:	5f                   	pop    rdi
     11d:	20 31                	and    BYTE PTR [rcx],dh
     11f:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
     122:	34 32                	xor    al,0x32
     124:	30 32                	xor    BYTE PTR [rdx],dh
     126:	31 37                	xor    DWORD PTR [rdi],esi
     128:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     12b:	35 35 30 34 34       	xor    eax,0x34343035
     130:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
     133:	30 37                	xor    BYTE PTR [rdi],dh
     135:	34 35                	xor    al,0x35
     137:	32 38                	xor    bh,BYTE PTR [rax]
     139:	30 30                	xor    BYTE PTR [rax],dh
     13b:	38 36                	cmp    BYTE PTR [rsi],dh
     13d:	39 39                	cmp    DWORD PTR [rcx],edi
     13f:	34 31                	xor    al,0x31
     141:	37                   	(bad)  
     142:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
     145:	31 39                	xor    DWORD PTR [rcx],edi
     147:	46                   	rex.RX
     148:	36 34 78             	ss xor al,0x78
     14b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     14e:	46                   	rex.RX
     14f:	4c 54                	rex.WR push rsp
     151:	33 32                	xor    esi,DWORD PTR [rdx]
     153:	58                   	pop    rax
     154:	5f                   	pop    rdi
     155:	4d                   	rex.WRB
     156:	41 58                	pop    r8
     158:	5f                   	pop    rdi
     159:	45 58                	rex.RB pop r8
     15b:	50                   	push   rax
     15c:	5f                   	pop    rdi
     15d:	5f                   	pop    rdi
     15e:	20 31                	and    BYTE PTR [rcx],dh
     160:	30 32                	xor    BYTE PTR [rdx],dh
     162:	34 00                	xor    al,0x0
     164:	5f                   	pop    rdi
     165:	73 68                	jae    1cf <_init-0x2e9>
     167:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     168:	72 74                	jb     1de <_init-0x2da>
     16a:	62                   	(bad)  
     16b:	75 66                	jne    1d3 <_init-0x2e5>
     16d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     170:	47                   	rex.RXB
     171:	43                   	rex.XB
     172:	43 5f                	rex.XB pop r15
     174:	41 54                	push   r12
     176:	4f                   	rex.WRXB
     177:	4d                   	rex.WRB
     178:	49                   	rex.WB
     179:	43 5f                	rex.XB pop r15
     17b:	54                   	push   rsp
     17c:	45 53                	rex.RB push r11
     17e:	54                   	push   rsp
     17f:	5f                   	pop    rdi
     180:	41                   	rex.B
     181:	4e                   	rex.WRX
     182:	44 5f                	rex.R pop rdi
     184:	53                   	push   rbx
     185:	45 54                	rex.RB push r12
     187:	5f                   	pop    rdi
     188:	54                   	push   rsp
     189:	52                   	push   rdx
     18a:	55                   	push   rbp
     18b:	45 56                	rex.RB push r14
     18d:	41                   	rex.B
     18e:	4c 20 31             	rex.WR and BYTE PTR [rcx],r14b
     191:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     194:	4f                   	rex.WRXB
     195:	46                   	rex.RX
     196:	46 5f                	rex.RX pop rdi
     198:	54                   	push   rsp
     199:	5f                   	pop    rdi
     19a:	4d                   	rex.WRB
     19b:	41 54                	push   r12
     19d:	43                   	rex.XB
     19e:	48                   	rex.W
     19f:	45 53                	rex.RB push r11
     1a1:	5f                   	pop    rdi
     1a2:	4f                   	rex.WRXB
     1a3:	46                   	rex.RX
     1a4:	46                   	rex.RX
     1a5:	36 34 5f             	ss xor al,0x5f
     1a8:	54                   	push   rsp
     1a9:	20 31                	and    BYTE PTR [rcx],dh
     1ab:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1ae:	44                   	rex.R
     1af:	45                   	rex.RB
     1b0:	43                   	rex.XB
     1b1:	36 34 5f             	ss xor al,0x5f
     1b4:	45 50                	rex.RB push r8
     1b6:	53                   	push   rbx
     1b7:	49                   	rex.WB
     1b8:	4c                   	rex.WR
     1b9:	4f                   	rex.WRXB
     1ba:	4e 5f                	rex.WRX pop rdi
     1bc:	5f                   	pop    rdi
     1bd:	20 31                	and    BYTE PTR [rcx],dh
     1bf:	45 2d 31 35 44 44    	rex.RB sub eax,0x44443531
     1c5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1c8:	44                   	rex.R
     1c9:	42                   	rex.X
     1ca:	4c 5f                	rex.WR pop rdi
     1cc:	44                   	rex.R
     1cd:	45                   	rex.RB
     1ce:	4e                   	rex.WRX
     1cf:	4f 52                	rex.WRXB push r10
     1d1:	4d 5f                	rex.WRB pop r15
     1d3:	4d                   	rex.WRB
     1d4:	49                   	rex.WB
     1d5:	4e 5f                	rex.WRX pop rdi
     1d7:	5f                   	pop    rdi
     1d8:	20 28                	and    BYTE PTR [rax],ch
     1da:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     1de:	62                   	(bad)  
     1df:	6c                   	ins    BYTE PTR es:[rdi],dx
     1e0:	65 29 34 2e          	sub    DWORD PTR gs:[rsi+rbp*1],esi
     1e4:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
     1e7:	36 35 36 34 35 38    	ss xor eax,0x38353436
     1ed:	34 31                	xor    al,0x31
     1ef:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
     1f2:	35 34 34 31 37       	xor    eax,0x37313434
     1f7:	36 35 36 38 37 39    	ss xor eax,0x39373836
     1fd:	32 38                	xor    bh,BYTE PTR [rax]
     1ff:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
     202:	32 31                	xor    dh,BYTE PTR [rcx]
     204:	33 37                	xor    esi,DWORD PTR [rdi]
     206:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     209:	33 32                	xor    esi,DWORD PTR [rdx]
     20b:	34 4c                	xor    al,0x4c
     20d:	29 00                	sub    DWORD PTR [rax],eax
     20f:	5f                   	pop    rdi
     210:	49                   	rex.WB
     211:	4f 5f                	rex.WRXB pop r15
     213:	6c                   	ins    BYTE PTR es:[rdi],dx
     214:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     215:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     218:	74 00                	je     21a <_init-0x29e>
     21a:	5f                   	pop    rdi
     21b:	5f                   	pop    rdi
     21c:	49                   	rex.WB
     21d:	4e 54                	rex.WRX push rsp
     21f:	50                   	push   rax
     220:	54                   	push   rsp
     221:	52                   	push   rdx
     222:	5f                   	pop    rdi
     223:	4d                   	rex.WRB
     224:	41 58                	pop    r8
     226:	5f                   	pop    rdi
     227:	5f                   	pop    rdi
     228:	20 30                	and    BYTE PTR [rax],dh
     22a:	78 37                	js     263 <_init-0x255>
     22c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     233:	66 66 66 66 66 66 66 
     23a:	66 4c 00 5f 47       	data16 rex.WR add BYTE PTR [rdi+0x47],r11b
     23f:	5f                   	pop    rdi
     240:	48                   	rex.W
     241:	41 56                	push   r14
     243:	45 5f                	rex.RB pop r15
     245:	53                   	push   rbx
     246:	54                   	push   rsp
     247:	5f                   	pop    rdi
     248:	42                   	rex.X
     249:	4c                   	rex.WR
     24a:	4b 53                	rex.WXB push r11
     24c:	49 5a                	rex.WB pop r10
     24e:	45 20 64 65 66       	and    BYTE PTR [r13+riz*2+0x66],r12b
     253:	69 6e 65 64 20 28 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f282064
     25a:	53                   	push   rbx
     25b:	54                   	push   rsp
     25c:	41 54                	push   r12
     25e:	42 55                	rex.X push rbp
     260:	46 5f                	rex.RX pop rdi
     262:	53                   	push   rbx
     263:	54                   	push   rsp
     264:	5f                   	pop    rdi
     265:	42                   	rex.X
     266:	4c                   	rex.WR
     267:	4b 53                	rex.WXB push r11
     269:	49 5a                	rex.WB pop r10
     26b:	45 29 00             	sub    DWORD PTR [r8],r8d
     26e:	5f                   	pop    rdi
     26f:	5f                   	pop    rdi
     270:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     272:	65 78 61             	gs js  2d6 <_init-0x1e2>
     275:	72 72                	jb     2e9 <_init-0x1cf>
     277:	20 5b 5d             	and    BYTE PTR [rbx+0x5d],bl
     27a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     27d:	46                   	rex.RX
     27e:	4c 54                	rex.WR push rsp
     280:	33 32                	xor    esi,DWORD PTR [rdx]
     282:	5f                   	pop    rdi
     283:	4d                   	rex.WRB
     284:	41                   	rex.B
     285:	4e 54                	rex.WRX push rsp
     287:	5f                   	pop    rdi
     288:	44                   	rex.R
     289:	49                   	rex.WB
     28a:	47 5f                	rex.RXB pop r15
     28c:	5f                   	pop    rdi
     28d:	20 32                	and    BYTE PTR [rdx],dh
     28f:	34 00                	xor    al,0x0
     291:	5f                   	pop    rdi
     292:	5f                   	pop    rdi
     293:	47                   	rex.RXB
     294:	43                   	rex.XB
     295:	43 5f                	rex.XB pop r15
     297:	48                   	rex.W
     298:	41 56                	push   r14
     29a:	45 5f                	rex.RB pop r15
     29c:	53                   	push   rbx
     29d:	59                   	pop    rcx
     29e:	4e                   	rex.WRX
     29f:	43 5f                	rex.XB pop r15
     2a1:	43                   	rex.XB
     2a2:	4f                   	rex.WRXB
     2a3:	4d 50                	rex.WRB push r8
     2a5:	41 52                	push   r10
     2a7:	45 5f                	rex.RB pop r15
     2a9:	41                   	rex.B
     2aa:	4e                   	rex.WRX
     2ab:	44 5f                	rex.R pop rdi
     2ad:	53                   	push   rbx
     2ae:	57                   	push   rdi
     2af:	41 50                	push   r8
     2b1:	5f                   	pop    rdi
     2b2:	38 20                	cmp    BYTE PTR [rax],ah
     2b4:	31 00                	xor    DWORD PTR [rax],eax
     2b6:	5f                   	pop    rdi
     2b7:	49                   	rex.WB
     2b8:	4f 53                	rex.WRXB push r11
     2ba:	5f                   	pop    rdi
     2bb:	42                   	rex.X
     2bc:	49                   	rex.WB
     2bd:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
     2c0:	32 38                	xor    bh,BYTE PTR [rax]
     2c2:	00 46 49             	add    BYTE PTR [rsi+0x49],al
     2c5:	4c                   	rex.WR
     2c6:	45                   	rex.RB
     2c7:	4e                   	rex.WRX
     2c8:	41                   	rex.B
     2c9:	4d                   	rex.WRB
     2ca:	45 5f                	rex.RB pop r15
     2cc:	4d                   	rex.WRB
     2cd:	41 58                	pop    r8
     2cf:	20 34 30             	and    BYTE PTR [rax+rsi*1],dh
     2d2:	39 36                	cmp    DWORD PTR [rsi],esi
     2d4:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     2d7:	54                   	push   rsp
     2d8:	44                   	rex.R
     2d9:	43 5f                	rex.XB pop r15
     2db:	50                   	push   rax
     2dc:	52                   	push   rdx
     2dd:	45                   	rex.RB
     2de:	44                   	rex.R
     2df:	45                   	rex.RB
     2e0:	46 5f                	rex.RX pop rdi
     2e2:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     2e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2e8:	55                   	push   rbp
     2e9:	53                   	push   rbx
     2ea:	45 5f                	rex.RB pop r15
     2ec:	49 53                	rex.WB push r11
     2ee:	4f                   	rex.WRXB
     2ef:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
     2f2:	20 31                	and    BYTE PTR [rcx],dh
     2f4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     2f7:	4f                   	rex.WRXB
     2f8:	46                   	rex.RX
     2f9:	42                   	rex.X
     2fa:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     2fd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     300:	4f 5f                	rex.WRXB pop r15
     302:	62                   	(bad)  
     303:	75 66                	jne    36b <_init-0x14d>
     305:	5f                   	pop    rdi
     306:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     308:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
     30c:	4f 5f                	rex.WRXB pop r15
     30e:	45                   	rex.RB
     30f:	4f                   	rex.WRXB
     310:	46 5f                	rex.RX pop rdi
     312:	53                   	push   rbx
     313:	45                   	rex.RB
     314:	45                   	rex.RB
     315:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
     318:	78 31                	js     34b <_init-0x16d>
     31a:	30 00                	xor    BYTE PTR [rax],al
     31c:	53                   	push   rbx
     31d:	45                   	rex.RB
     31e:	45                   	rex.RB
     31f:	4b 5f                	rex.WXB pop r15
     321:	43 55                	rex.XB push r13
     323:	52                   	push   rdx
     324:	20 31                	and    BYTE PTR [rcx],dh
     326:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     329:	46                   	rex.RX
     32a:	4c 54                	rex.WR push rsp
     32c:	33 32                	xor    esi,DWORD PTR [rdx]
     32e:	58                   	pop    rax
     32f:	5f                   	pop    rdi
     330:	44                   	rex.R
     331:	45                   	rex.RB
     332:	43                   	rex.XB
     333:	49                   	rex.WB
     334:	4d                   	rex.WRB
     335:	41                   	rex.B
     336:	4c 5f                	rex.WR pop rdi
     338:	44                   	rex.R
     339:	49                   	rex.WB
     33a:	47 5f                	rex.RXB pop r15
     33c:	5f                   	pop    rdi
     33d:	20 31                	and    BYTE PTR [rcx],dh
     33f:	37                   	(bad)  
     340:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     343:	6b 38 5f             	imul   edi,DWORD PTR [rax],0x5f
     346:	5f                   	pop    rdi
     347:	20 31                	and    BYTE PTR [rcx],dh
     349:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     34c:	44                   	rex.R
     34d:	42                   	rex.X
     34e:	4c 5f                	rex.WR pop rdi
     350:	4d                   	rex.WRB
     351:	49                   	rex.WB
     352:	4e 5f                	rex.WRX pop rdi
     354:	45 58                	rex.RB pop r8
     356:	50                   	push   rax
     357:	5f                   	pop    rdi
     358:	5f                   	pop    rdi
     359:	20 28                	and    BYTE PTR [rax],ch
     35b:	2d 31 30 32 31       	sub    eax,0x31323031
     360:	29 00                	sub    DWORD PTR [rax],eax
     362:	5f                   	pop    rdi
     363:	5f                   	pop    rdi
     364:	49                   	rex.WB
     365:	4e 54                	rex.WRX push rsp
     367:	5f                   	pop    rdi
     368:	46                   	rex.RX
     369:	41 53                	push   r11
     36b:	54                   	push   rsp
     36c:	36 34 5f             	ss xor al,0x5f
     36f:	4d                   	rex.WRB
     370:	41 58                	pop    r8
     372:	5f                   	pop    rdi
     373:	5f                   	pop    rdi
     374:	20 30                	and    BYTE PTR [rax],dh
     376:	78 37                	js     3af <_init-0x109>
     378:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     37f:	66 66 66 66 66 66 66 
     386:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     38b:	68 61 73 5f 69       	push   0x695f7361
     390:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     391:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     395:	65 5f                	gs pop rdi
     397:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     398:	65 78 74             	gs js  40f <_init-0xa9>
     39b:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     39e:	52                   	push   rdx
     39f:	29 20                	sub    DWORD PTR [rax],esp
     3a1:	5f                   	pop    rdi
     3a2:	5f                   	pop    rdi
     3a3:	68 61 73 5f 69       	push   0x695f7361
     3a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3a9:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     3ad:	65 5f                	gs pop rdi
     3af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3b0:	65 78 74             	gs js  427 <_init-0x91>
     3b3:	5f                   	pop    rdi
     3b4:	5f                   	pop    rdi
     3b5:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     3b8:	52                   	push   rdx
     3b9:	29 00                	sub    DWORD PTR [rax],eax
     3bb:	5f                   	pop    rdi
     3bc:	49                   	rex.WB
     3bd:	4f 5f                	rex.WRXB pop r15
     3bf:	52                   	push   rdx
     3c0:	49                   	rex.WB
     3c1:	47                   	rex.RXB
     3c2:	48 54                	rex.W push rsp
     3c4:	20 30                	and    BYTE PTR [rax],dh
     3c6:	34 00                	xor    al,0x0
     3c8:	5f                   	pop    rdi
     3c9:	49                   	rex.WB
     3ca:	4f 5f                	rex.WRXB pop r15
     3cc:	55                   	push   rbp
     3cd:	53                   	push   rbx
     3ce:	45 52                	rex.RB push r10
     3d0:	5f                   	pop    rdi
     3d1:	42 55                	rex.X push rbp
     3d3:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
     3d6:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     3d9:	59                   	pop    rcx
     3da:	53                   	push   rbx
     3db:	5f                   	pop    rdi
     3dc:	43                   	rex.XB
     3dd:	44                   	rex.R
     3de:	45                   	rex.RB
     3df:	46 53                	rex.RX push rbx
     3e1:	5f                   	pop    rdi
     3e2:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     3e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3e8:	46                   	rex.RX
     3e9:	4c 54                	rex.WR push rsp
     3eb:	33 32                	xor    esi,DWORD PTR [rdx]
     3ed:	58                   	pop    rax
     3ee:	5f                   	pop    rdi
     3ef:	4d                   	rex.WRB
     3f0:	41 58                	pop    r8
     3f2:	5f                   	pop    rdi
     3f3:	5f                   	pop    rdi
     3f4:	20 31                	and    BYTE PTR [rcx],dh
     3f6:	2e 37                	cs (bad) 
     3f8:	39 37                	cmp    DWORD PTR [rdi],esi
     3fa:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     3fd:	31 33                	xor    DWORD PTR [rbx],esi
     3ff:	34 38                	xor    al,0x38
     401:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     404:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31383441 <_end+0x31182429>
     40a:	34 35                	xor    al,0x35
     40c:	32 37                	xor    dh,BYTE PTR [rdi]
     40e:	34 32                	xor    al,0x32
     410:	33 37                	xor    esi,DWORD PTR [rdi]
     412:	33 31                	xor    esi,DWORD PTR [rcx]
     414:	37                   	(bad)  
     415:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     418:	35 37 65 2b 33       	xor    eax,0x332b6537
     41d:	30 38                	xor    BYTE PTR [rax],bh
     41f:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     422:	78 00                	js     424 <_init-0x94>
     424:	5f                   	pop    rdi
     425:	5f                   	pop    rdi
     426:	67 6c                	ins    BYTE PTR es:[edi],dx
     428:	69 62 63 5f 75 6e 6c 	imul   esp,DWORD PTR [rdx+0x63],0x6c6e755f
     42f:	69 6b 65 6c 79 28 63 	imul   ebp,DWORD PTR [rbx+0x65],0x6328796c
     436:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     438:	64 29 20             	sub    DWORD PTR fs:[rax],esp
     43b:	5f                   	pop    rdi
     43c:	5f                   	pop    rdi
     43d:	62                   	(bad)  
     43e:	75 69                	jne    4a9 <_init-0xf>
     440:	6c                   	ins    BYTE PTR es:[rdi],dx
     441:	74 69                	je     4ac <_init-0xc>
     443:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     444:	5f                   	pop    rdi
     445:	65 78 70             	gs js  4b8 <_init>
     448:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
     44d:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
     450:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     451:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
     455:	30 29                	xor    BYTE PTR [rcx],ch
     457:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     45a:	53                   	push   rbx
     45b:	49 5a                	rex.WB pop r10
     45d:	45                   	rex.RB
     45e:	4f                   	rex.WRXB
     45f:	46 5f                	rex.RX pop rdi
     461:	57                   	push   rdi
     462:	49                   	rex.WB
     463:	4e 54                	rex.WRX push rsp
     465:	5f                   	pop    rdi
     466:	54                   	push   rsp
     467:	5f                   	pop    rdi
     468:	5f                   	pop    rdi
     469:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     46c:	5f                   	pop    rdi
     46d:	5f                   	pop    rdi
     46e:	47                   	rex.RXB
     46f:	4e 55                	rex.WRX push rbp
     471:	43 5f                	rex.XB pop r15
     473:	50                   	push   rax
     474:	52                   	push   rdx
     475:	45 52                	rex.RB push r10
     477:	45 51                	rex.RB push r9
     479:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     47c:	6a 2c                	push   0x2c
     47e:	6d                   	ins    DWORD PTR es:[rdi],dx
     47f:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
     486:	5f                   	pop    rdi
     487:	47                   	rex.RXB
     488:	4e 55                	rex.WRX push rbp
     48a:	43 5f                	rex.XB pop r15
     48c:	5f                   	pop    rdi
     48d:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     490:	20 31                	and    BYTE PTR [rcx],dh
     492:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     495:	2b 20                	sub    esp,DWORD PTR [rax]
     497:	5f                   	pop    rdi
     498:	5f                   	pop    rdi
     499:	47                   	rex.RXB
     49a:	4e 55                	rex.WRX push rbp
     49c:	43 5f                	rex.XB pop r15
     49e:	4d                   	rex.WRB
     49f:	49                   	rex.WB
     4a0:	4e                   	rex.WRX
     4a1:	4f 52                	rex.WRXB push r10
     4a3:	5f                   	pop    rdi
     4a4:	5f                   	pop    rdi
     4a5:	20 3e                	and    BYTE PTR [rsi],bh
     4a7:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     4ac:	61                   	(bad)  
     4ad:	6a 29                	push   0x29
     4af:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     4b2:	20 31                	and    BYTE PTR [rcx],dh
     4b4:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     4b7:	2b 20                	sub    esp,DWORD PTR [rax]
     4b9:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     4bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4bd:	29 29                	sub    DWORD PTR [rcx],ebp
     4bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4c2:	55                   	push   rbp
     4c3:	49                   	rex.WB
     4c4:	4e 54                	rex.WRX push rsp
     4c6:	50                   	push   rax
     4c7:	54                   	push   rsp
     4c8:	52                   	push   rdx
     4c9:	5f                   	pop    rdi
     4ca:	4d                   	rex.WRB
     4cb:	41 58                	pop    r8
     4cd:	5f                   	pop    rdi
     4ce:	5f                   	pop    rdi
     4cf:	20 30                	and    BYTE PTR [rax],dh
     4d1:	78 66                	js     539 <deregister_tm_clones+0x19>
     4d3:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     4da:	66 66 66 66 66 66 66 
     4e1:	66 55                	push   bp
     4e3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     4e7:	76 61                	jbe    54a <deregister_tm_clones+0x2a>
     4e9:	5f                   	pop    rdi
     4ea:	61                   	(bad)  
     4eb:	72 67                	jb     554 <deregister_tm_clones+0x34>
     4ed:	5f                   	pop    rdi
     4ee:	70 61                	jo     551 <deregister_tm_clones+0x31>
     4f0:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     4f3:	6c                   	ins    BYTE PTR es:[rdi],dx
     4f4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     4f6:	28 29                	sub    BYTE PTR [rcx],ch
     4f8:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     4fb:	62                   	(bad)  
     4fc:	75 69                	jne    567 <register_tm_clones+0x7>
     4fe:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ff:	74 69                	je     56a <register_tm_clones+0xa>
     501:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     502:	5f                   	pop    rdi
     503:	76 61                	jbe    566 <register_tm_clones+0x6>
     505:	5f                   	pop    rdi
     506:	61                   	(bad)  
     507:	72 67                	jb     570 <register_tm_clones+0x10>
     509:	5f                   	pop    rdi
     50a:	70 61                	jo     56d <register_tm_clones+0xd>
     50c:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     50f:	6c                   	ins    BYTE PTR es:[rdi],dx
     510:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     512:	20 28                	and    BYTE PTR [rax],ch
     514:	29 00                	sub    DWORD PTR [rax],eax
     516:	5f                   	pop    rdi
     517:	47 5f                	rex.RXB pop r15
     519:	48                   	rex.W
     51a:	41 56                	push   r14
     51c:	45 5f                	rex.RB pop r15
     51e:	4d                   	rex.WRB
     51f:	4d                   	rex.WRB
     520:	41 50                	push   r8
     522:	20 31                	and    BYTE PTR [rcx],dh
     524:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     527:	61                   	(bad)  
     528:	74 74                	je     59e <register_tm_clones+0x3e>
     52a:	72 69                	jb     595 <register_tm_clones+0x35>
     52c:	62                   	(bad)  
     52d:	75 74                	jne    5a3 <register_tm_clones+0x43>
     52f:	65 5f                	gs pop rdi
     531:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     534:	73 74                	jae    5aa <register_tm_clones+0x4a>
     536:	5f                   	pop    rdi
     537:	5f                   	pop    rdi
     538:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     53b:	61                   	(bad)  
     53c:	74 74                	je     5b2 <__do_global_dtors_aux+0x2>
     53e:	72 69                	jb     5a9 <register_tm_clones+0x49>
     540:	62                   	(bad)  
     541:	75 74                	jne    5b7 <__do_global_dtors_aux+0x7>
     543:	65 5f                	gs pop rdi
     545:	5f                   	pop    rdi
     546:	20 28                	and    BYTE PTR [rax],ch
     548:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     54b:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     54e:	73 74                	jae    5c4 <__do_global_dtors_aux+0x14>
     550:	5f                   	pop    rdi
     551:	5f                   	pop    rdi
     552:	29 29                	sub    DWORD PTR [rcx],ebp
     554:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     557:	47                   	rex.RXB
     558:	4c                   	rex.WR
     559:	49                   	rex.WB
     55a:	42                   	rex.X
     55b:	43 5f                	rex.XB pop r15
     55d:	55                   	push   rbp
     55e:	53                   	push   rbx
     55f:	45 5f                	rex.RB pop r15
     561:	44                   	rex.R
     562:	45 50                	rex.RB push r8
     564:	52                   	push   rdx
     565:	45                   	rex.RB
     566:	43                   	rex.XB
     567:	41 54                	push   r12
     569:	45                   	rex.RB
     56a:	44 5f                	rex.R pop rdi
     56c:	47                   	rex.RXB
     56d:	45 54                	rex.RB push r12
     56f:	53                   	push   rbx
     570:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     573:	4f 5f                	rex.WRXB pop r15
     575:	4e                   	rex.WRX
     576:	4f 5f                	rex.WRXB pop r15
     578:	57                   	push   rdi
     579:	52                   	push   rdx
     57a:	49 54                	rex.WB push r12
     57c:	45 53                	rex.RB push r11
     57e:	20 38                	and    BYTE PTR [rax],bh
     580:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     583:	47                   	rex.RXB
     584:	4e 55                	rex.WRX push rbp
     586:	43 5f                	rex.XB pop r15
     588:	4d                   	rex.WRB
     589:	49                   	rex.WB
     58a:	4e                   	rex.WRX
     58b:	4f 52                	rex.WRXB push r10
     58d:	5f                   	pop    rdi
     58e:	5f                   	pop    rdi
     58f:	20 33                	and    BYTE PTR [rbx],dh
     591:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     594:	55                   	push   rbp
     595:	53                   	push   rbx
     596:	45 5f                	rex.RB pop r15
     598:	4c                   	rex.WR
     599:	41 52                	push   r10
     59b:	47                   	rex.RXB
     59c:	45                   	rex.RB
     59d:	46                   	rex.RX
     59e:	49                   	rex.WB
     59f:	4c                   	rex.WR
     5a0:	45                   	rex.RB
     5a1:	36 34 00             	ss xor al,0x0
     5a4:	5f                   	pop    rdi
     5a5:	5f                   	pop    rdi
     5a6:	52                   	push   rdx
     5a7:	4c                   	rex.WR
     5a8:	49                   	rex.WB
     5a9:	4d 5f                	rex.WRB pop r15
     5ab:	54                   	push   rsp
     5ac:	5f                   	pop    rdi
     5ad:	54                   	push   rsp
     5ae:	59                   	pop    rcx
     5af:	50                   	push   rax
     5b0:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     5b4:	53                   	push   rbx
     5b5:	59                   	pop    rcx
     5b6:	53                   	push   rbx
     5b7:	43                   	rex.XB
     5b8:	41                   	rex.B
     5b9:	4c                   	rex.WR
     5ba:	4c 5f                	rex.WR pop rdi
     5bc:	55                   	push   rbp
     5bd:	4c                   	rex.WR
     5be:	4f                   	rex.WRXB
     5bf:	4e                   	rex.WRX
     5c0:	47 5f                	rex.RXB pop r15
     5c2:	54                   	push   rsp
     5c3:	59                   	pop    rcx
     5c4:	50                   	push   rax
     5c5:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     5c9:	4c                   	rex.WR
     5ca:	44                   	rex.R
     5cb:	42                   	rex.X
     5cc:	4c 5f                	rex.WR pop rdi
     5ce:	52                   	push   rdx
     5cf:	45                   	rex.RB
     5d0:	44                   	rex.R
     5d1:	49 52                	rex.WB push r10
     5d3:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
     5d6:	6d                   	ins    DWORD PTR es:[rdi],dx
     5d7:	65 2c 70             	gs sub al,0x70
     5da:	72 6f                	jb     64b <__libc_csu_init+0x1b>
     5dc:	74 6f                	je     64d <__libc_csu_init+0x1d>
     5de:	29 20                	sub    DWORD PTR [rax],esp
     5e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5e1:	61                   	(bad)  
     5e2:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e3:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
     5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5e8:	74 6f                	je     659 <__libc_csu_init+0x29>
     5ea:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     5ed:	4f 5f                	rex.WRXB pop r15
     5ef:	77 72                	ja     663 <__libc_csu_init+0x33>
     5f1:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
     5f8:	00 
     5f9:	5f                   	pop    rdi
{
     5fa:	5f                   	pop    rdi
     5fb:	47                   	rex.RXB
     5fc:	4c                   	rex.WR
     5fd:	49                   	rex.WB
     5fe:	42                   	rex.X
     5ff:	43 5f                	rex.XB pop r15
     601:	50                   	push   rax
     602:	52                   	push   rdx
     603:	45 52                	rex.RB push r10
	a = 1;
     605:	45 51                	rex.RB push r9
     607:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     60a:	6a 2c                	push   0x2c
	b = 9;
     60c:	6d                   	ins    DWORD PTR es:[rdi],dx
     60d:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
	c = a + b;
     614:	5f                   	pop    rdi
     615:	47                   	rex.RXB
     616:	4c                   	rex.WR
     617:	49                   	rex.WB
     618:	42                   	rex.X
     619:	43 5f                	rex.XB pop r15
     61b:	5f                   	pop    rdi
     61c:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     61f:	20 31                	and    BYTE PTR [rcx],dh
     621:	36 29 20             	sub    DWORD PTR ss:[rax],esp
}
     624:	2b 20                	sub    esp,DWORD PTR [rax]
     626:	5f                   	pop    rdi
     627:	5f                   	pop    rdi
     628:	47                   	rex.RXB
     629:	4c                   	rex.WR
     62a:	49                   	rex.WB
     62b:	42                   	rex.X
     62c:	43 5f                	rex.XB pop r15
     62e:	4d                   	rex.WRB
     62f:	49                   	rex.WB
     630:	4e                   	rex.WRX
     631:	4f 52                	rex.WRXB push r10
     633:	5f                   	pop    rdi
     634:	5f                   	pop    rdi
     635:	20 3e                	and    BYTE PTR [rsi],bh
     637:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     63c:	61                   	(bad)  
     63d:	6a 29                	push   0x29
     63f:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     642:	20 31                	and    BYTE PTR [rcx],dh
     644:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     647:	2b 20                	sub    esp,DWORD PTR [rax]
     649:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     64c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     64d:	29 29                	sub    DWORD PTR [rcx],ebp
     64f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     652:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     653:	65 65 64 5f          	gs gs fs pop rdi
     657:	4e 55                	rex.WRX push rbp
     659:	4c                   	rex.WR
     65a:	4c 20 00             	rex.WR and BYTE PTR [rax],r8b
     65d:	5f                   	pop    rdi
     65e:	5f                   	pop    rdi
     65f:	46                   	rex.RX
     660:	4c 54                	rex.WR push rsp
     662:	36 34 5f             	ss xor al,0x5f
     665:	4d                   	rex.WRB
     666:	49                   	rex.WB
     667:	4e 5f                	rex.WRX pop rdi
     669:	5f                   	pop    rdi
     66a:	20 32                	and    BYTE PTR [rdx],dh
     66c:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     66f:	35 30 37 33 38       	xor    eax,0x38333730
     674:	35 38 35 30 37       	xor    eax,0x37303538
     679:	32 30                	xor    dh,BYTE PTR [rax]
     67b:	31 33                	xor    DWORD PTR [rbx],esi
     67d:	38 33                	cmp    BYTE PTR [rbx],dh
     67f:	30 39                	xor    BYTE PTR [rcx],bh
     681:	30 32                	xor    BYTE PTR [rdx],dh
     683:	33 32                	xor    esi,DWORD PTR [rdx]
     685:	37                   	(bad)  
     686:	31 37                	xor    DWORD PTR [rdi],esi
     688:	33 33                	xor    esi,DWORD PTR [rbx]
     68a:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     68d:	34 30                	xor    al,0x30
     68f:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
     696:	36 34 00             	ss xor al,0x0
     699:	5f                   	pop    rdi
     69a:	5f                   	pop    rdi
     69b:	4c                   	rex.WR
     69c:	4f                   	rex.WRXB
     69d:	4e                   	rex.WRX
     69e:	47 5f                	rex.RXB pop r15
     6a0:	4c                   	rex.WR
     6a1:	4f                   	rex.WRXB
     6a2:	4e                   	rex.WRX
     6a3:	47 5f                	rex.RXB pop r15
     6a5:	57                   	push   rdi
     6a6:	49                   	rex.WB
     6a7:	44 54                	rex.R push rsp
     6a9:	48 5f                	rex.W pop rdi
     6ab:	5f                   	pop    rdi
     6ac:	20 36                	and    BYTE PTR [rsi],dh
     6ae:	34 00                	xor    al,0x0
     6b0:	5f                   	pop    rdi
     6b1:	50                   	push   rax
     6b2:	4f 53                	rex.WRXB push r11
     6b4:	49 58                	rex.WB pop r8
     6b6:	5f                   	pop    rdi
     6b7:	53                   	push   rbx
     6b8:	4f 55                	rex.WRXB push r13
     6ba:	52                   	push   rdx
     6bb:	43                   	rex.XB
     6bc:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     6c0:	46                   	rex.RX
     6c1:	4c 54                	rex.WR push rsp
     6c3:	5f                   	pop    rdi
     6c4:	44                   	rex.R
     6c5:	45                   	rex.RB
     6c6:	4e                   	rex.WRX
     6c7:	4f 52                	rex.WRXB push r10
     6c9:	4d 5f                	rex.WRB pop r15
     6cb:	4d                   	rex.WRB
     6cc:	49                   	rex.WB
     6cd:	4e 5f                	rex.WRX pop rdi
     6cf:	5f                   	pop    rdi
     6d0:	20 31                	and    BYTE PTR [rcx],dh
     6d2:	2e 34 30             	cs xor al,0x30
     6d5:	31 32                	xor    DWORD PTR [rdx],esi
     6d7:	39 38                	cmp    DWORD PTR [rax],edi
     6d9:	34 36                	xor    al,0x36
     6db:	34 33                	xor    al,0x33
     6dd:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     6e0:	31 37                	xor    DWORD PTR [rdi],esi
     6e2:	30 37                	xor    BYTE PTR [rdi],dh
     6e4:	30 39                	xor    BYTE PTR [rcx],bh
     6e6:	32 33                	xor    dh,BYTE PTR [rbx]
     6e8:	37                   	(bad)  
     6e9:	32 39                	xor    bh,BYTE PTR [rcx]
     6eb:	35 38 33 32 38       	xor    eax,0x38323338
     6f0:	39 39                	cmp    DWORD PTR [rcx],edi
     6f2:	31 36                	xor    DWORD PTR [rsi],esi
     6f4:	31 33                	xor    DWORD PTR [rbx],esi
     6f6:	65 2d 34 35 46 00    	gs sub eax,0x463534
     6fc:	5f                   	pop    rdi
     6fd:	5f                   	pop    rdi
     6fe:	43                   	rex.XB
     6ff:	48                   	rex.W
     700:	41 52                	push   r10
     702:	31 36                	xor    DWORD PTR [rsi],esi
     704:	5f                   	pop    rdi
     705:	54                   	push   rsp
     706:	59                   	pop    rcx
     707:	50                   	push   rax
     708:	45 5f                	rex.RB pop r15
     70a:	5f                   	pop    rdi
     70b:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     70e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     70f:	72 74                	jb     785 <__GNU_EH_FRAME_HDR+0xd1>
     711:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     714:	73 69                	jae    77f <__GNU_EH_FRAME_HDR+0xcb>
     716:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     718:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     71d:	74 00                	je     71f <__GNU_EH_FRAME_HDR+0x6b>
     71f:	5f                   	pop    rdi
     720:	5f                   	pop    rdi
     721:	53                   	push   rbx
     722:	49 5a                	rex.WB pop r10
     724:	45                   	rex.RB
     725:	4f                   	rex.WRXB
     726:	46 5f                	rex.RX pop rdi
     728:	53                   	push   rbx
     729:	49 5a                	rex.WB pop r10
     72b:	45 5f                	rex.RB pop r15
     72d:	54                   	push   rsp
     72e:	5f                   	pop    rdi
     72f:	5f                   	pop    rdi
     730:	20 38                	and    BYTE PTR [rax],bh
     732:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
     735:	67 63 00             	movsxd eax,DWORD PTR [eax]
     738:	5f                   	pop    rdi
     739:	5f                   	pop    rdi
     73a:	4f 52                	rex.WRXB push r10
     73c:	44                   	rex.R
     73d:	45 52                	rex.RB push r10
     73f:	5f                   	pop    rdi
     740:	42                   	rex.X
     741:	49                   	rex.WB
     742:	47 5f                	rex.RXB pop r15
     744:	45                   	rex.RB
     745:	4e                   	rex.WRX
     746:	44                   	rex.R
     747:	49                   	rex.WB
     748:	41                   	rex.B
     749:	4e 5f                	rex.WRX pop rdi
     74b:	5f                   	pop    rdi
     74c:	20 34 33             	and    BYTE PTR [rbx+rsi*1],dh
     74f:	32 31                	xor    dh,BYTE PTR [rcx]
     751:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     754:	47                   	rex.RXB
     755:	4e 55                	rex.WRX push rbp
     757:	43 5f                	rex.XB pop r15
     759:	5f                   	pop    rdi
     75a:	20 37                	and    BYTE PTR [rdi],dh
     75c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     75f:	4f 5f                	rex.WRXB pop r15
     761:	4c                   	rex.WR
     762:	49                   	rex.WB
     763:	4e                   	rex.WRX
     764:	45 5f                	rex.RB pop r15
     766:	42 55                	rex.X push rbp
     768:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     76b:	78 32                	js     79f <__GNU_EH_FRAME_HDR+0xeb>
     76d:	30 30                	xor    BYTE PTR [rax],dh
     76f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     772:	55                   	push   rbp
     773:	53                   	push   rbx
     774:	45 5f                	rex.RB pop r15
     776:	49 53                	rex.WB push r11
     778:	4f                   	rex.WRXB
     779:	43 58                	rex.XB pop r8
     77b:	58                   	pop    rax
     77c:	31 31                	xor    DWORD PTR [rcx],esi
     77e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     781:	55                   	push   rbp
     782:	53                   	push   rbx
     783:	45 5f                	rex.RB pop r15
     785:	41 54                	push   r12
     787:	46                   	rex.RX
     788:	49                   	rex.WB
     789:	4c                   	rex.WR
     78a:	45 20 31             	and    BYTE PTR [r9],r14b
     78d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     790:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     791:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     792:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     793:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     794:	75 6c                	jne    802 <__FRAME_END__+0xe>
     796:	6c                   	ins    BYTE PTR es:[rdi],dx
     797:	28 70 61             	sub    BYTE PTR [rax+0x61],dh
     79a:	72 61                	jb     7fd <__FRAME_END__+0x9>
     79c:	6d                   	ins    DWORD PTR es:[rdi],dx
     79d:	73 29                	jae    7c8 <__GNU_EH_FRAME_HDR+0x114>
     79f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     7a2:	61                   	(bad)  
     7a3:	74 74                	je     819 <__FRAME_END__+0x25>
     7a5:	72 69                	jb     810 <__FRAME_END__+0x1c>
     7a7:	62                   	(bad)  
     7a8:	75 74                	jne    81e <__FRAME_END__+0x2a>
     7aa:	65 5f                	gs pop rdi
     7ac:	5f                   	pop    rdi
     7ad:	20 28                	and    BYTE PTR [rax],ch
     7af:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     7b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b6:	75 6c                	jne    824 <__FRAME_END__+0x30>
     7b8:	6c                   	ins    BYTE PTR es:[rdi],dx
     7b9:	5f                   	pop    rdi
     7ba:	5f                   	pop    rdi
     7bb:	20 70 61             	and    BYTE PTR [rax+0x61],dh
     7be:	72 61                	jb     821 <__FRAME_END__+0x2d>
     7c0:	6d                   	ins    DWORD PTR es:[rdi],dx
     7c1:	73 29                	jae    7ec <__GNU_EH_FRAME_HDR+0x138>
     7c3:	29 00                	sub    DWORD PTR [rax],eax
     7c5:	5f                   	pop    rdi
     7c6:	5f                   	pop    rdi
     7c7:	55                   	push   rbp
     7c8:	49                   	rex.WB
     7c9:	4e 54                	rex.WRX push rsp
     7cb:	36 34 5f             	ss xor al,0x5f
     7ce:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     7d2:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     7d5:	23 23                	and    esp,DWORD PTR [rbx]
     7d7:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
     7da:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7dd:	47                   	rex.RXB
     7de:	4e 55                	rex.WRX push rbp
     7e0:	5f                   	pop    rdi
     7e1:	4c                   	rex.WR
     7e2:	49                   	rex.WB
     7e3:	42 52                	rex.X push rdx
     7e5:	41 52                	push   r10
     7e7:	59                   	pop    rcx
     7e8:	5f                   	pop    rdi
     7e9:	5f                   	pop    rdi
     7ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7ed:	44                   	rex.R
     7ee:	42                   	rex.X
     7ef:	4c 5f                	rex.WR pop rdi
     7f1:	4d                   	rex.WRB
     7f2:	41                   	rex.B
     7f3:	4e 54                	rex.WRX push rsp
     7f5:	5f                   	pop    rdi
     7f6:	44                   	rex.R
     7f7:	49                   	rex.WB
     7f8:	47 5f                	rex.RXB pop r15
     7fa:	5f                   	pop    rdi
     7fb:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f0834 <_end+0x5f3ef81c>
     801:	55                   	push   rbp
     802:	53                   	push   rbx
     803:	45 5f                	rex.RB pop r15
     805:	50                   	push   rax
     806:	4f 53                	rex.WRXB push r11
     808:	49 58                	rex.WB pop r8
     80a:	31 39                	xor    DWORD PTR [rcx],edi
     80c:	39 35 30 36 20 31    	cmp    DWORD PTR [rip+0x31203630],esi        # 31203e42 <_end+0x31002e2a>
     812:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     815:	73 74                	jae    88b <__FRAME_END__+0x97>
     817:	75 62                	jne    87b <__FRAME_END__+0x87>
     819:	5f                   	pop    rdi
     81a:	63 68 66             	movsxd ebp,DWORD PTR [rax+0x66]
     81d:	6c                   	ins    BYTE PTR es:[rdi],dx
     81e:	61                   	(bad)  
     81f:	67 73 20             	addr32 jae 842 <__FRAME_END__+0x4e>
     822:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     825:	49                   	rex.WB
     826:	4e 54                	rex.WRX push rsp
     828:	5f                   	pop    rdi
     829:	4d                   	rex.WRB
     82a:	41 58                	pop    r8
     82c:	5f                   	pop    rdi
     82d:	5f                   	pop    rdi
     82e:	20 30                	and    BYTE PTR [rax],dh
     830:	78 37                	js     869 <__FRAME_END__+0x75>
     832:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x66],bl
     839:	00 5f 66 
     83c:	6c                   	ins    BYTE PTR es:[rdi],dx
     83d:	61                   	(bad)  
     83e:	67 73 32             	addr32 jae 873 <__FRAME_END__+0x7f>
     841:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     844:	4e 54                	rex.WRX push rsp
     846:	48                   	rex.W
     847:	4e                   	rex.WRX
     848:	4c 28 66 63          	rex.WR sub BYTE PTR [rsi+0x63],r12b
     84c:	74 29                	je     877 <__FRAME_END__+0x83>
     84e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     851:	61                   	(bad)  
     852:	74 74                	je     8c8 <__FRAME_END__+0xd4>
     854:	72 69                	jb     8bf <__FRAME_END__+0xcb>
     856:	62                   	(bad)  
     857:	75 74                	jne    8cd <__FRAME_END__+0xd9>
     859:	65 5f                	gs pop rdi
     85b:	5f                   	pop    rdi
     85c:	20 28                	and    BYTE PTR [rax],ch
     85e:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     862:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     863:	74 68                	je     8cd <__FRAME_END__+0xd9>
     865:	72 6f                	jb     8d6 <__FRAME_END__+0xe2>
     867:	77 5f                	ja     8c8 <__FRAME_END__+0xd4>
     869:	5f                   	pop    rdi
     86a:	29 29                	sub    DWORD PTR [rcx],ebp
     86c:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     86f:	74 00                	je     871 <__FRAME_END__+0x7d>
     871:	5f                   	pop    rdi
     872:	5f                   	pop    rdi
     873:	73 74                	jae    8e9 <__FRAME_END__+0xf5>
     875:	75 62                	jne    8d9 <__FRAME_END__+0xe5>
     877:	5f                   	pop    rdi
     878:	66 63 68 66          	movsxd bp,DWORD PTR [rax+0x66]
     87c:	6c                   	ins    BYTE PTR es:[rdi],dx
     87d:	61                   	(bad)  
     87e:	67 73 20             	addr32 jae 8a1 <__FRAME_END__+0xad>
     881:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     884:	49                   	rex.WB
     885:	4e 54                	rex.WRX push rsp
     887:	31 36                	xor    DWORD PTR [rsi],esi
     889:	5f                   	pop    rdi
     88a:	54                   	push   rsp
     88b:	59                   	pop    rcx
     88c:	50                   	push   rax
     88d:	45 5f                	rex.RB pop r15
     88f:	5f                   	pop    rdi
     890:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     893:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     894:	72 74                	jb     90a <__FRAME_END__+0x116>
     896:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     899:	74 00                	je     89b <__FRAME_END__+0xa7>
     89b:	5f                   	pop    rdi
     89c:	5f                   	pop    rdi
     89d:	44                   	rex.R
     89e:	45                   	rex.RB
     89f:	43                   	rex.XB
     8a0:	49                   	rex.WB
     8a1:	4d                   	rex.WRB
     8a2:	41                   	rex.B
     8a3:	4c 5f                	rex.WR pop rdi
     8a5:	42                   	rex.X
     8a6:	49                   	rex.WB
     8a7:	44 5f                	rex.R pop rdi
     8a9:	46                   	rex.RX
     8aa:	4f 52                	rex.WRXB push r10
     8ac:	4d                   	rex.WRB
     8ad:	41 54                	push   r12
     8af:	5f                   	pop    rdi
     8b0:	5f                   	pop    rdi
     8b1:	20 31                	and    BYTE PTR [rcx],dh
     8b3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8b6:	44                   	rex.R
     8b7:	45                   	rex.RB
     8b8:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     8bb:	5f                   	pop    rdi
     8bc:	45 50                	rex.RB push r8
     8be:	53                   	push   rbx
     8bf:	49                   	rex.WB
     8c0:	4c                   	rex.WR
     8c1:	4f                   	rex.WRXB
     8c2:	4e 5f                	rex.WRX pop rdi
     8c4:	5f                   	pop    rdi
     8c5:	20 31                	and    BYTE PTR [rcx],dh
     8c7:	45 2d 36 44 46 00    	rex.RB sub eax,0x464436
     8cd:	5f                   	pop    rdi
     8ce:	53                   	push   rbx
     8cf:	49 5a                	rex.WB pop r10
     8d1:	45 5f                	rex.RB pop r15
     8d3:	54                   	push   rsp
     8d4:	5f                   	pop    rdi
     8d5:	44                   	rex.R
     8d6:	45                   	rex.RB
     8d7:	43                   	rex.XB
     8d8:	4c                   	rex.WR
     8d9:	41 52                	push   r10
     8db:	45                   	rex.RB
     8dc:	44 20 00             	and    BYTE PTR [rax],r8b
     8df:	5f                   	pop    rdi
     8e0:	5f                   	pop    rdi
     8e1:	46                   	rex.RX
     8e2:	44 5f                	rex.R pop rdi
     8e4:	53                   	push   rbx
     8e5:	45 54                	rex.RB push r12
     8e7:	53                   	push   rbx
     8e8:	49 5a                	rex.WB pop r10
     8ea:	45 20 31             	and    BYTE PTR [r9],r14b
     8ed:	30 32                	xor    BYTE PTR [rdx],dh
     8ef:	34 00                	xor    al,0x0
     8f1:	5f                   	pop    rdi
     8f2:	5f                   	pop    rdi
     8f3:	4c                   	rex.WR
     8f4:	44                   	rex.R
     8f5:	42                   	rex.X
     8f6:	4c 5f                	rex.WR pop rdi
     8f8:	44                   	rex.R
     8f9:	49                   	rex.WB
     8fa:	47 5f                	rex.RXB pop r15
     8fc:	5f                   	pop    rdi
     8fd:	20 31                	and    BYTE PTR [rcx],dh
     8ff:	38 00                	cmp    BYTE PTR [rax],al
     901:	5f                   	pop    rdi
     902:	6d                   	ins    DWORD PTR es:[rdi],dx
     903:	61                   	(bad)  
     904:	72 6b                	jb     971 <__FRAME_END__+0x17d>
     906:	65 72 73             	gs jb  97c <__FRAME_END__+0x188>
     909:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     90c:	41 54                	push   r12
     90e:	4f                   	rex.WRXB
     90f:	4d                   	rex.WRB
     910:	49                   	rex.WB
     911:	43 5f                	rex.XB pop r15
     913:	53                   	push   rbx
     914:	45 51                	rex.RB push r9
     916:	5f                   	pop    rdi
     917:	43 53                	rex.XB push r11
     919:	54                   	push   rsp
     91a:	20 35 00 5f 5f 55    	and    BYTE PTR [rip+0x555f5f00],dh        # 555f6820 <_end+0x553f5808>
     920:	53                   	push   rbx
     921:	45 5f                	rex.RB pop r15
     923:	50                   	push   rax
     924:	4f 53                	rex.WRXB push r11
     926:	49 58                	rex.WB pop r8
     928:	32 20                	xor    ah,BYTE PTR [rax]
     92a:	31 00                	xor    DWORD PTR [rax],eax
     92c:	5f                   	pop    rdi
     92d:	5f                   	pop    rdi
     92e:	55                   	push   rbp
     92f:	53                   	push   rbx
     930:	45 5f                	rex.RB pop r15
     932:	49 53                	rex.WB push r11
     934:	4f                   	rex.WRXB
     935:	43 39 35 20 31 00 5f 	rex.XB cmp DWORD PTR [rip+0x5f003120],esi        # 5f003a5c <_end+0x5ee02a44>
     93c:	5f                   	pop    rdi
     93d:	53                   	push   rbx
     93e:	49 5a                	rex.WB pop r10
     940:	45                   	rex.RB
     941:	4f                   	rex.WRXB
     942:	46 5f                	rex.RX pop rdi
     944:	53                   	push   rbx
     945:	48                   	rex.W
     946:	4f 52                	rex.WRXB push r10
     948:	54                   	push   rsp
     949:	5f                   	pop    rdi
     94a:	5f                   	pop    rdi
     94b:	20 32                	and    BYTE PTR [rdx],dh
     94d:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     950:	5f                   	pop    rdi
     951:	76 61                	jbe    9b4 <__FRAME_END__+0x1c0>
     953:	5f                   	pop    rdi
     954:	6c                   	ins    BYTE PTR es:[rdi],dx
     955:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
     95c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     95d:	75 63                	jne    9c2 <__FRAME_END__+0x1ce>
     95f:	5f                   	pop    rdi
     960:	76 61                	jbe    9c3 <__FRAME_END__+0x1cf>
     962:	5f                   	pop    rdi
     963:	6c                   	ins    BYTE PTR es:[rdi],dx
     964:	69 73 74 00 5f 5f 55 	imul   esi,DWORD PTR [rbx+0x74],0x555f5f00
     96b:	49                   	rex.WB
     96c:	4e 54                	rex.WRX push rsp
     96e:	36 34 5f             	ss xor al,0x5f
     971:	54                   	push   rsp
     972:	59                   	pop    rcx
     973:	50                   	push   rax
     974:	45 5f                	rex.RB pop r15
     976:	5f                   	pop    rdi
     977:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     97b:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     97f:	73 69                	jae    9ea <__FRAME_END__+0x1f6>
     981:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     983:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     988:	74 00                	je     98a <__FRAME_END__+0x196>
     98a:	5f                   	pop    rdi
     98b:	5f                   	pop    rdi
     98c:	49                   	rex.WB
     98d:	4e 54                	rex.WRX push rsp
     98f:	5f                   	pop    rdi
     990:	46                   	rex.RX
     991:	41 53                	push   r11
     993:	54                   	push   rsp
     994:	33 32                	xor    esi,DWORD PTR [rdx]
     996:	5f                   	pop    rdi
     997:	4d                   	rex.WRB
     998:	41 58                	pop    r8
     99a:	5f                   	pop    rdi
     99b:	5f                   	pop    rdi
     99c:	20 30                	and    BYTE PTR [rax],dh
     99e:	78 37                	js     9d7 <__FRAME_END__+0x1e3>
     9a0:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     9a7:	66 66 66 66 66 66 66 
     9ae:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     9b3:	49                   	rex.WB
     9b4:	4e 54                	rex.WRX push rsp
     9b6:	5f                   	pop    rdi
     9b7:	4c                   	rex.WR
     9b8:	45                   	rex.RB
     9b9:	41 53                	push   r11
     9bb:	54                   	push   rsp
     9bc:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     9bf:	59                   	pop    rcx
     9c0:	50                   	push   rax
     9c1:	45 5f                	rex.RB pop r15
     9c3:	5f                   	pop    rdi
     9c4:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     9c7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9c9:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     9ce:	61                   	(bad)  
     9cf:	72 00                	jb     9d1 <__FRAME_END__+0x1dd>
     9d1:	5f                   	pop    rdi
     9d2:	5f                   	pop    rdi
     9d3:	73 69                	jae    a3e <__FRAME_END__+0x24a>
     9d5:	7a 65                	jp     a3c <__FRAME_END__+0x248>
     9d7:	5f                   	pop    rdi
     9d8:	74 20                	je     9fa <__FRAME_END__+0x206>
     9da:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9dd:	55                   	push   rbp
     9de:	49                   	rex.WB
     9df:	4e 54                	rex.WRX push rsp
     9e1:	5f                   	pop    rdi
     9e2:	4c                   	rex.WR
     9e3:	45                   	rex.RB
     9e4:	41 53                	push   r11
     9e6:	54                   	push   rsp
     9e7:	33 32                	xor    esi,DWORD PTR [rdx]
     9e9:	5f                   	pop    rdi
     9ea:	54                   	push   rsp
     9eb:	59                   	pop    rcx
     9ec:	50                   	push   rax
     9ed:	45 5f                	rex.RB pop r15
     9ef:	5f                   	pop    rdi
     9f0:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     9f3:	73 69                	jae    a5e <__FRAME_END__+0x26a>
     9f5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9f7:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     9fc:	74 00                	je     9fe <__FRAME_END__+0x20a>
     9fe:	5f                   	pop    rdi
     9ff:	5f                   	pop    rdi
     a00:	73 74                	jae    a76 <__FRAME_END__+0x282>
     a02:	75 62                	jne    a66 <__FRAME_END__+0x272>
     a04:	5f                   	pop    rdi
     a05:	73 69                	jae    a70 <__FRAME_END__+0x27c>
     a07:	67 72 65             	addr32 jb a6f <__FRAME_END__+0x27b>
     a0a:	74 75                	je     a81 <__FRAME_END__+0x28d>
     a0c:	72 6e                	jb     a7c <__FRAME_END__+0x288>
     a0e:	20 00                	and    BYTE PTR [rax],al
     a10:	5f                   	pop    rdi
     a11:	5f                   	pop    rdi
     a12:	70 74                	jo     a88 <__FRAME_END__+0x294>
     a14:	72 5f                	jb     a75 <__FRAME_END__+0x281>
     a16:	74 20                	je     a38 <__FRAME_END__+0x244>
     a18:	76 6f                	jbe    a89 <__FRAME_END__+0x295>
     a1a:	69 64 20 2a 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x535f5f00
     a21:	53 
     a22:	33 32                	xor    esi,DWORD PTR [rdx]
     a24:	5f                   	pop    rdi
     a25:	54                   	push   rsp
     a26:	59                   	pop    rcx
     a27:	50                   	push   rax
     a28:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
     a2c:	74 00                	je     a2e <__FRAME_END__+0x23a>
     a2e:	5f                   	pop    rdi
     a2f:	5f                   	pop    rdi
     a30:	53                   	push   rbx
     a31:	54                   	push   rsp
     a32:	44                   	rex.R
     a33:	43 5f                	rex.XB pop r15
     a35:	4e                   	rex.WRX
     a36:	4f 5f                	rex.WRXB pop r15
     a38:	54                   	push   rsp
     a39:	48 52                	rex.W push rdx
     a3b:	45                   	rex.RB
     a3c:	41                   	rex.B
     a3d:	44 53                	rex.R push rbx
     a3f:	5f                   	pop    rdi
     a40:	5f                   	pop    rdi
     a41:	20 31                	and    BYTE PTR [rcx],dh
     a43:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a46:	42 59                	rex.X pop rcx
     a48:	54                   	push   rsp
     a49:	45 5f                	rex.RB pop r15
     a4b:	4f 52                	rex.WRXB push r10
     a4d:	44                   	rex.R
     a4e:	45 52                	rex.RB push r10
     a50:	5f                   	pop    rdi
     a51:	5f                   	pop    rdi
     a52:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a55:	4f 52                	rex.WRXB push r10
     a57:	44                   	rex.R
     a58:	45 52                	rex.RB push r10
     a5a:	5f                   	pop    rdi
     a5b:	4c                   	rex.WR
     a5c:	49 54                	rex.WB push r12
     a5e:	54                   	push   rsp
     a5f:	4c                   	rex.WR
     a60:	45 5f                	rex.RB pop r15
     a62:	45                   	rex.RB
     a63:	4e                   	rex.WRX
     a64:	44                   	rex.R
     a65:	49                   	rex.WB
     a66:	41                   	rex.B
     a67:	4e 5f                	rex.WRX pop rdi
     a69:	5f                   	pop    rdi
     a6a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a6d:	4c                   	rex.WR
     a6e:	44                   	rex.R
     a6f:	42                   	rex.X
     a70:	4c 5f                	rex.WR pop rdi
     a72:	4d                   	rex.WRB
     a73:	49                   	rex.WB
     a74:	4e 5f                	rex.WRX pop rdi
     a76:	5f                   	pop    rdi
     a77:	20 33                	and    BYTE PTR [rbx],dh
     a79:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     a7c:	32 31                	xor    dh,BYTE PTR [rcx]
     a7e:	30 33                	xor    BYTE PTR [rbx],dh
     a80:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     a83:	31 31                	xor    DWORD PTR [rcx],esi
     a85:	32 30                	xor    dh,BYTE PTR [rax]
     a87:	39 33                	cmp    DWORD PTR [rbx],esi
     a89:	35 30 36 32 36       	xor    eax,0x36323630
     a8e:	32 36                	xor    dh,BYTE PTR [rsi]
     a90:	37                   	(bad)  
     a91:	37                   	(bad)  
     a92:	38 31                	cmp    BYTE PTR [rcx],dh
     a94:	37                   	(bad)  
     a95:	33 32                	xor    esi,DWORD PTR [rdx]
     a97:	31 37                	xor    DWORD PTR [rdi],esi
     a99:	35 32 36 30 65       	xor    eax,0x65303632
     a9e:	2d 34 39 33 32       	sub    eax,0x32333934
     aa3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     aa7:	46                   	rex.RX
     aa8:	4c 54                	rex.WR push rsp
     aaa:	33 32                	xor    esi,DWORD PTR [rdx]
     aac:	5f                   	pop    rdi
     aad:	4d                   	rex.WRB
     aae:	49                   	rex.WB
     aaf:	4e 5f                	rex.WRX pop rdi
     ab1:	31 30                	xor    DWORD PTR [rax],esi
     ab3:	5f                   	pop    rdi
     ab4:	45 58                	rex.RB pop r8
     ab6:	50                   	push   rax
     ab7:	5f                   	pop    rdi
     ab8:	5f                   	pop    rdi
     ab9:	20 28                	and    BYTE PTR [rax],ch
     abb:	2d 33 37 29 00       	sub    eax,0x293733
     ac0:	5f                   	pop    rdi
     ac1:	5f                   	pop    rdi
     ac2:	44                   	rex.R
     ac3:	42                   	rex.X
     ac4:	4c 5f                	rex.WR pop rdi
     ac6:	48                   	rex.W
     ac7:	41 53                	push   r11
     ac9:	5f                   	pop    rdi
     aca:	44                   	rex.R
     acb:	45                   	rex.RB
     acc:	4e                   	rex.WRX
     acd:	4f 52                	rex.WRXB push r10
     acf:	4d 5f                	rex.WRB pop r15
     ad1:	5f                   	pop    rdi
     ad2:	20 31                	and    BYTE PTR [rcx],dh
     ad4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ad7:	49                   	rex.WB
     ad8:	4e 54                	rex.WRX push rsp
     ada:	5f                   	pop    rdi
     adb:	4c                   	rex.WR
     adc:	45                   	rex.RB
     add:	41 53                	push   r11
     adf:	54                   	push   rsp
     ae0:	36 34 5f             	ss xor al,0x5f
     ae3:	54                   	push   rsp
     ae4:	59                   	pop    rcx
     ae5:	50                   	push   rax
     ae6:	45 5f                	rex.RB pop r15
     ae8:	5f                   	pop    rdi
     ae9:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     aed:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     af1:	74 00                	je     af3 <__FRAME_END__+0x2ff>
     af3:	5f                   	pop    rdi
     af4:	5f                   	pop    rdi
     af5:	57                   	push   rdi
     af6:	43                   	rex.XB
     af7:	48                   	rex.W
     af8:	41 52                	push   r10
     afa:	5f                   	pop    rdi
     afb:	4d                   	rex.WRB
     afc:	49                   	rex.WB
     afd:	4e 5f                	rex.WRX pop rdi
     aff:	5f                   	pop    rdi
     b00:	20 28                	and    BYTE PTR [rax],ch
     b02:	2d 5f 5f 57 43       	sub    eax,0x43575f5f
     b07:	48                   	rex.W
     b08:	41 52                	push   r10
     b0a:	5f                   	pop    rdi
     b0b:	4d                   	rex.WRB
     b0c:	41 58                	pop    r8
     b0e:	5f                   	pop    rdi
     b0f:	5f                   	pop    rdi
     b10:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 293c36 <_end+0x92c1e>
     b16:	5f                   	pop    rdi
     b17:	49                   	rex.WB
     b18:	4f 5f                	rex.WRXB pop r15
     b1a:	53                   	push   rbx
     b1b:	48                   	rex.W
     b1c:	4f 57                	rex.WRXB push r15
     b1e:	50                   	push   rax
     b1f:	4f                   	rex.WRXB
     b20:	49                   	rex.WB
     b21:	4e 54                	rex.WRX push rsp
     b23:	20 30                	and    BYTE PTR [rax],dh
     b25:	34 30                	xor    al,0x30
     b27:	30 00                	xor    BYTE PTR [rax],al
     b29:	5f                   	pop    rdi
     b2a:	5f                   	pop    rdi
     b2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b2c:	66 66 5f             	data16 pop di
     b2f:	74 5f                	je     b90 <__FRAME_END__+0x39c>
     b31:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
     b38:	20 
     b39:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b3c:	53                   	push   rbx
     b3d:	54                   	push   rsp
     b3e:	44                   	rex.R
     b3f:	43 5f                	rex.XB pop r15
     b41:	55                   	push   rbp
     b42:	54                   	push   rsp
     b43:	46 5f                	rex.RX pop rdi
     b45:	33 32                	xor    esi,DWORD PTR [rdx]
     b47:	5f                   	pop    rdi
     b48:	5f                   	pop    rdi
     b49:	20 31                	and    BYTE PTR [rcx],dh
     b4b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b4e:	42                   	rex.X
     b4f:	4c                   	rex.WR
     b50:	4b 53                	rex.WXB push r11
     b52:	49 5a                	rex.WB pop r10
     b54:	45 5f                	rex.RB pop r15
     b56:	54                   	push   rsp
     b57:	5f                   	pop    rdi
     b58:	54                   	push   rsp
     b59:	59                   	pop    rcx
     b5a:	50                   	push   rax
     b5b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     b5f:	53                   	push   rbx
     b60:	59                   	pop    rcx
     b61:	53                   	push   rbx
     b62:	43                   	rex.XB
     b63:	41                   	rex.B
     b64:	4c                   	rex.WR
     b65:	4c 5f                	rex.WR pop rdi
     b67:	53                   	push   rbx
     b68:	4c                   	rex.WR
     b69:	4f                   	rex.WRXB
     b6a:	4e                   	rex.WRX
     b6b:	47 5f                	rex.RXB pop r15
     b6d:	54                   	push   rsp
     b6e:	59                   	pop    rcx
     b6f:	50                   	push   rax
     b70:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     b74:	49                   	rex.WB
     b75:	4e 54                	rex.WRX push rsp
     b77:	5f                   	pop    rdi
     b78:	4c                   	rex.WR
     b79:	45                   	rex.RB
     b7a:	41 53                	push   r11
     b7c:	54                   	push   rsp
     b7d:	31 36                	xor    DWORD PTR [rsi],esi
     b7f:	5f                   	pop    rdi
     b80:	4d                   	rex.WRB
     b81:	41 58                	pop    r8
     b83:	5f                   	pop    rdi
     b84:	5f                   	pop    rdi
     b85:	20 30                	and    BYTE PTR [rax],dh
     b87:	78 37                	js     bc0 <__FRAME_END__+0x3cc>
     b89:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     b8f:	4c                   	rex.WR
     b90:	44                   	rex.R
     b91:	42                   	rex.X
     b92:	4c 5f                	rex.WR pop rdi
     b94:	52                   	push   rdx
     b95:	45                   	rex.RB
     b96:	44                   	rex.R
     b97:	49 52                	rex.WB push r10
     b99:	5f                   	pop    rdi
     b9a:	44                   	rex.R
     b9b:	45                   	rex.RB
     b9c:	43                   	rex.XB
     b9d:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
     ba1:	6d                   	ins    DWORD PTR es:[rdi],dx
     ba2:	65 29 20             	sub    DWORD PTR gs:[rax],esp
     ba5:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     ba8:	55                   	push   rbp
     ba9:	20 43 31             	and    BYTE PTR [rbx+0x31],al
     bac:	31 20                	xor    DWORD PTR [rax],esp
     bae:	37                   	(bad)  
     baf:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
     bb2:	30 20                	xor    BYTE PTR [rax],ah
     bb4:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     bb9:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     bbf:	72 69                	jb     c2a <__FRAME_END__+0x436>
     bc1:	63 20                	movsxd esp,DWORD PTR [rax]
     bc3:	2d 6d 61 72 63       	sub    eax,0x6372616d
     bc8:	68 3d 78 38 36       	push   0x3638783d
     bcd:	2d 36 34 20 2d       	sub    eax,0x2d203436
     bd2:	67 67 64 62 33       	addr32 addr32 fs (bad) 
     bd7:	20 2d 66 73 74 61    	and    BYTE PTR [rip+0x61747366],ch        # 61747f43 <_end+0x61546f2b>
     bdd:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     be0:	70 72                	jo     c54 <__FRAME_END__+0x460>
     be2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     be3:	74 65                	je     c4a <__FRAME_END__+0x456>
     be5:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     be9:	2d 73 74 72 6f       	sub    eax,0x6f727473
     bee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bef:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     bf3:	53                   	push   rbx
     bf4:	43                   	rex.XB
     bf5:	48                   	rex.W
     bf6:	41 52                	push   r10
     bf8:	5f                   	pop    rdi
     bf9:	4d                   	rex.WRB
     bfa:	41 58                	pop    r8
     bfc:	5f                   	pop    rdi
     bfd:	5f                   	pop    rdi
     bfe:	20 30                	and    BYTE PTR [rax],dh
     c00:	78 37                	js     c39 <__FRAME_END__+0x445>
     c02:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     c06:	65 78 74             	gs js  c7d <__FRAME_END__+0x489>
     c09:	65 72 6e             	gs jb  c7a <__FRAME_END__+0x486>
     c0c:	5f                   	pop    rdi
     c0d:	61                   	(bad)  
     c0e:	6c                   	ins    BYTE PTR es:[rdi],dx
     c0f:	77 61                	ja     c72 <__FRAME_END__+0x47e>
     c11:	79 73                	jns    c86 <__FRAME_END__+0x492>
     c13:	5f                   	pop    rdi
     c14:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c1b:	65 78 74             	gs js  c92 <__FRAME_END__+0x49e>
     c1e:	65 72 6e             	gs jb  c8f <__FRAME_END__+0x49b>
     c21:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     c24:	61                   	(bad)  
     c25:	6c                   	ins    BYTE PTR es:[rdi],dx
     c26:	77 61                	ja     c89 <__FRAME_END__+0x495>
     c28:	79 73                	jns    c9d <__FRAME_END__+0x4a9>
     c2a:	5f                   	pop    rdi
     c2b:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c32:	5f                   	pop    rdi
     c33:	5f                   	pop    rdi
     c34:	61                   	(bad)  
     c35:	74 74                	je     cab <__FRAME_END__+0x4b7>
     c37:	72 69                	jb     ca2 <__FRAME_END__+0x4ae>
     c39:	62                   	(bad)  
     c3a:	75 74                	jne    cb0 <__FRAME_END__+0x4bc>
     c3c:	65 5f                	gs pop rdi
     c3e:	5f                   	pop    rdi
     c3f:	20 28                	and    BYTE PTR [rax],ch
     c41:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     c44:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c46:	75 5f                	jne    ca7 <__FRAME_END__+0x4b3>
     c48:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     c4f:	5f                   	pop    rdi
     c50:	29 29                	sub    DWORD PTR [rcx],ebp
     c52:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     c55:	46                   	rex.RX
     c56:	4c 54                	rex.WR push rsp
     c58:	36 34 5f             	ss xor al,0x5f
     c5b:	44                   	rex.R
     c5c:	49                   	rex.WB
     c5d:	47 5f                	rex.RXB pop r15
     c5f:	5f                   	pop    rdi
     c60:	20 31                	and    BYTE PTR [rcx],dh
     c62:	35 00 5f 5f 49       	xor    eax,0x495f5f00
     c67:	4e 54                	rex.WRX push rsp
     c69:	5f                   	pop    rdi
     c6a:	46                   	rex.RX
     c6b:	41 53                	push   r11
     c6d:	54                   	push   rsp
     c6e:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     c71:	59                   	pop    rcx
     c72:	50                   	push   rax
     c73:	45 5f                	rex.RB pop r15
     c75:	5f                   	pop    rdi
     c76:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     c79:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c7b:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     c80:	61                   	(bad)  
     c81:	72 00                	jb     c83 <__FRAME_END__+0x48f>
     c83:	5f                   	pop    rdi
     c84:	5f                   	pop    rdi
     c85:	50                   	push   rax
     c86:	49                   	rex.WB
     c87:	45 5f                	rex.RB pop r15
     c89:	5f                   	pop    rdi
     c8a:	20 32                	and    BYTE PTR [rdx],dh
     c8c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     c8f:	4f 5f                	rex.WRXB pop r15
     c91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c92:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     c97:	74 20                	je     cb9 <__FRAME_END__+0x4c5>
     c99:	5f                   	pop    rdi
     c9a:	5f                   	pop    rdi
     c9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c9c:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     ca1:	74 00                	je     ca3 <__FRAME_END__+0x4af>
     ca3:	5f                   	pop    rdi
     ca4:	5f                   	pop    rdi
     ca5:	47                   	rex.RXB
     ca6:	4c                   	rex.WR
     ca7:	49                   	rex.WB
     ca8:	42                   	rex.X
     ca9:	43 5f                	rex.XB pop r15
     cab:	55                   	push   rbp
     cac:	53                   	push   rbx
     cad:	45 5f                	rex.RB pop r15
     caf:	49                   	rex.WB
     cb0:	45                   	rex.RB
     cb1:	43 5f                	rex.XB pop r15
     cb3:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f45ef <_end+0x543f35d7>
     cba:	59                   	pop    rcx
     cbb:	50                   	push   rax
     cbc:	45 53                	rex.RB push r11
     cbe:	5f                   	pop    rdi
     cbf:	45 58                	rex.RB pop r8
     cc1:	54                   	push   rsp
     cc2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cc5:	46                   	rex.RX
     cc6:	4c 54                	rex.WR push rsp
     cc8:	33 32                	xor    esi,DWORD PTR [rdx]
     cca:	58                   	pop    rax
     ccb:	5f                   	pop    rdi
     ccc:	48                   	rex.W
     ccd:	41 53                	push   r11
     ccf:	5f                   	pop    rdi
     cd0:	49                   	rex.WB
     cd1:	4e                   	rex.WRX
     cd2:	46                   	rex.RX
     cd3:	49                   	rex.WB
     cd4:	4e                   	rex.WRX
     cd5:	49 54                	rex.WB push r12
     cd7:	59                   	pop    rcx
     cd8:	5f                   	pop    rdi
     cd9:	5f                   	pop    rdi
     cda:	20 31                	and    BYTE PTR [rcx],dh
     cdc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cdf:	55                   	push   rbp
     ce0:	53                   	push   rbx
     ce1:	45 5f                	rex.RB pop r15
     ce3:	55                   	push   rbp
     ce4:	4e                   	rex.WRX
     ce5:	49 58                	rex.WB pop r8
     ce7:	39 38                	cmp    DWORD PTR [rax],edi
     ce9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cec:	55                   	push   rbp
     ced:	53                   	push   rbx
     cee:	45 5f                	rex.RB pop r15
     cf0:	46                   	rex.RX
     cf1:	4f 52                	rex.WRXB push r10
     cf3:	54                   	push   rsp
     cf4:	49                   	rex.WB
     cf5:	46 59                	rex.RX pop rcx
     cf7:	5f                   	pop    rdi
     cf8:	4c                   	rex.WR
     cf9:	45 56                	rex.RB push r14
     cfb:	45                   	rex.RB
     cfc:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
     cff:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     d02:	54                   	push   rsp
     d03:	46                   	rex.RX
     d04:	49                   	rex.WB
     d05:	4c                   	rex.WR
     d06:	45 5f                	rex.RB pop r15
     d08:	53                   	push   rbx
     d09:	4f 55                	rex.WRXB push r13
     d0b:	52                   	push   rdx
     d0c:	43                   	rex.XB
     d0d:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d11:	55                   	push   rbp
     d12:	53                   	push   rbx
     d13:	45 5f                	rex.RB pop r15
     d15:	41 54                	push   r12
     d17:	46                   	rex.RX
     d18:	49                   	rex.WB
     d19:	4c                   	rex.WR
     d1a:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d1e:	55                   	push   rbp
     d1f:	49                   	rex.WB
     d20:	4e 54                	rex.WRX push rsp
     d22:	5f                   	pop    rdi
     d23:	4c                   	rex.WR
     d24:	45                   	rex.RB
     d25:	41 53                	push   r11
     d27:	54                   	push   rsp
     d28:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     d2b:	59                   	pop    rcx
     d2c:	50                   	push   rax
     d2d:	45 5f                	rex.RB pop r15
     d2f:	5f                   	pop    rdi
     d30:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     d33:	73 69                	jae    d9e <__FRAME_END__+0x5aa>
     d35:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     d37:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     d3c:	61                   	(bad)  
     d3d:	72 00                	jb     d3f <__FRAME_END__+0x54b>
     d3f:	5f                   	pop    rdi
     d40:	5f                   	pop    rdi
     d41:	53                   	push   rbx
     d42:	49 5a                	rex.WB pop r10
     d44:	45                   	rex.RB
     d45:	4f                   	rex.WRXB
     d46:	46 5f                	rex.RX pop rdi
     d48:	49                   	rex.WB
     d49:	4e 54                	rex.WRX push rsp
     d4b:	31 32                	xor    DWORD PTR [rdx],esi
     d4d:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
     d50:	20 31                	and    BYTE PTR [rcx],dh
     d52:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     d56:	4e 54                	rex.WRX push rsp
     d58:	48 28 66 63          	rex.W sub BYTE PTR [rsi+0x63],spl
     d5c:	74 29                	je     d87 <__FRAME_END__+0x593>
     d5e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     d61:	61                   	(bad)  
     d62:	74 74                	je     dd8 <__FRAME_END__+0x5e4>
     d64:	72 69                	jb     dcf <__FRAME_END__+0x5db>
     d66:	62                   	(bad)  
     d67:	75 74                	jne    ddd <__FRAME_END__+0x5e9>
     d69:	65 5f                	gs pop rdi
     d6b:	5f                   	pop    rdi
     d6c:	20 28                	and    BYTE PTR [rax],ch
     d6e:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     d71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d72:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d73:	74 68                	je     ddd <__FRAME_END__+0x5e9>
     d75:	72 6f                	jb     de6 <__FRAME_END__+0x5f2>
     d77:	77 5f                	ja     dd8 <__FRAME_END__+0x5e4>
     d79:	5f                   	pop    rdi
     d7a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     d7d:	4c                   	rex.WR
     d7e:	45                   	rex.RB
     d7f:	41                   	rex.B
     d80:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
     d83:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     d86:	74 00                	je     d88 <__FRAME_END__+0x594>
     d88:	5f                   	pop    rdi
     d89:	49                   	rex.WB
     d8a:	4f 53                	rex.WRXB push r11
     d8c:	5f                   	pop    rdi
     d8d:	41 54                	push   r12
     d8f:	45                   	rex.RB
     d90:	4e                   	rex.WRX
     d91:	44 20 34 00          	and    BYTE PTR [rax+rax*1],r14b
     d95:	5f                   	pop    rdi
     d96:	5f                   	pop    rdi
     d97:	67 6c                	ins    BYTE PTR es:[edi],dx
     d99:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     da0:	72 6f                	jb     e11 <__FRAME_END__+0x61d>
     da2:	5f                   	pop    rdi
     da3:	77 61                	ja     e06 <__FRAME_END__+0x612>
     da5:	72 6e                	jb     e15 <__FRAME_END__+0x621>
     da7:	69 6e 67 28 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d28
     dae:	73 61                	jae    e11 <__FRAME_END__+0x61d>
     db0:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
     db4:	5f                   	pop    rdi
     db5:	5f                   	pop    rdi
     db6:	67 6c                	ins    BYTE PTR es:[edi],dx
     db8:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     dbf:	72 6f                	jb     e30 <__FRAME_END__+0x63c>
     dc1:	5f                   	pop    rdi
     dc2:	77 61                	ja     e25 <__FRAME_END__+0x631>
     dc4:	72 6e                	jb     e34 <__FRAME_END__+0x640>
     dc6:	69 6e 67 31 20 28 47 	imul   ebp,DWORD PTR [rsi+0x67],0x47282031
     dcd:	43                   	rex.XB
     dce:	43 20 77 61          	rex.XB and BYTE PTR [r15+0x61],sil
     dd2:	72 6e                	jb     e42 <__FRAME_END__+0x64e>
     dd4:	69 6e 67 20 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
     ddb:	73 61                	jae    e3e <__FRAME_END__+0x64a>
     ddd:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
     de1:	5f                   	pop    rdi
     de2:	5f                   	pop    rdi
     de3:	46                   	rex.RX
     de4:	4c 54                	rex.WR push rsp
     de6:	31 32                	xor    DWORD PTR [rdx],esi
     de8:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     deb:	41 53                	push   r11
     ded:	5f                   	pop    rdi
     dee:	51                   	push   rcx
     def:	55                   	push   rbp
     df0:	49                   	rex.WB
     df1:	45 54                	rex.RB push r12
     df3:	5f                   	pop    rdi
     df4:	4e                   	rex.WRX
     df5:	41                   	rex.B
     df6:	4e 5f                	rex.WRX pop rdi
     df8:	5f                   	pop    rdi
     df9:	20 31                	and    BYTE PTR [rcx],dh
     dfb:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     dfe:	5f                   	pop    rdi
     dff:	53                   	push   rbx
     e00:	49 5a                	rex.WB pop r10
     e02:	45 20 00             	and    BYTE PTR [r8],r8b
     e05:	5f                   	pop    rdi
     e06:	5f                   	pop    rdi
     e07:	46                   	rex.RX
     e08:	4c 54                	rex.WR push rsp
     e0a:	31 32                	xor    DWORD PTR [rdx],esi
     e0c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     e0f:	41 58                	pop    r8
     e11:	5f                   	pop    rdi
     e12:	5f                   	pop    rdi
     e13:	20 31                	and    BYTE PTR [rcx],dh
     e15:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
     e18:	39 37                	cmp    DWORD PTR [rdi],esi
     e1a:	33 31                	xor    esi,DWORD PTR [rcx]
     e1c:	34 39                	xor    al,0x39
     e1e:	35 33 35 37 32       	xor    eax,0x32373533
     e23:	33 31                	xor    esi,DWORD PTR [rcx]
     e25:	37                   	(bad)  
     e26:	36 35 30 38 35 37    	ss xor eax,0x37353830
     e2c:	35 39 33 32 36       	xor    eax,0x36323339
     e31:	36 32 38             	xor    bh,BYTE PTR ss:[rax]
     e34:	30 30                	xor    BYTE PTR [rax],dh
     e36:	37                   	(bad)  
     e37:	30 32                	xor    BYTE PTR [rdx],dh
     e39:	65 2b 34 39          	sub    esi,DWORD PTR gs:[rcx+rdi*1]
     e3d:	33 32                	xor    esi,DWORD PTR [rdx]
     e3f:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
     e42:	38 00                	cmp    BYTE PTR [rax],al
     e44:	42 55                	rex.X push rbp
     e46:	46 53                	rex.RX push rbx
     e48:	49 5a                	rex.WB pop r10
     e4a:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
     e4d:	4f 5f                	rex.WRXB pop r15
     e4f:	42 55                	rex.X push rbp
     e51:	46 53                	rex.RX push rbx
     e53:	49 5a                	rex.WB pop r10
     e55:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     e58:	54                   	push   rsp
     e59:	46                   	rex.RX
     e5a:	49                   	rex.WB
     e5b:	4c                   	rex.WR
     e5c:	45 5f                	rex.RB pop r15
     e5e:	53                   	push   rbx
     e5f:	4f 55                	rex.WRXB push r13
     e61:	52                   	push   rdx
     e62:	43                   	rex.XB
     e63:	45 20 31             	and    BYTE PTR [r9],r14b
     e66:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     e69:	46                   	rex.RX
     e6a:	4c 54                	rex.WR push rsp
     e6c:	36 34 58             	ss xor al,0x58
     e6f:	5f                   	pop    rdi
     e70:	44                   	rex.R
     e71:	49                   	rex.WB
     e72:	47 5f                	rex.RXB pop r15
     e74:	5f                   	pop    rdi
     e75:	20 31                	and    BYTE PTR [rcx],dh
     e77:	38 00                	cmp    BYTE PTR [rax],al
     e79:	5f                   	pop    rdi
     e7a:	5f                   	pop    rdi
     e7b:	49                   	rex.WB
     e7c:	4e 54                	rex.WRX push rsp
     e7e:	5f                   	pop    rdi
     e7f:	4c                   	rex.WR
     e80:	45                   	rex.RB
     e81:	41 53                	push   r11
     e83:	54                   	push   rsp
     e84:	31 36                	xor    DWORD PTR [rsi],esi
     e86:	5f                   	pop    rdi
     e87:	57                   	push   rdi
     e88:	49                   	rex.WB
     e89:	44 54                	rex.R push rsp
     e8b:	48 5f                	rex.W pop rdi
     e8d:	5f                   	pop    rdi
     e8e:	20 31                	and    BYTE PTR [rcx],dh
     e90:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     e94:	46 53                	rex.RX push rbx
     e96:	49                   	rex.WB
     e97:	44 5f                	rex.R pop rdi
     e99:	54                   	push   rsp
     e9a:	5f                   	pop    rdi
     e9b:	54                   	push   rsp
     e9c:	59                   	pop    rcx
     e9d:	50                   	push   rax
     e9e:	45 20 73 74          	and    BYTE PTR [r11+0x74],r14b
     ea2:	72 75                	jb     f19 <__FRAME_END__+0x725>
     ea4:	63 74 20 7b          	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
     ea8:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     eab:	74 20                	je     ecd <__FRAME_END__+0x6d9>
     ead:	5f                   	pop    rdi
     eae:	5f                   	pop    rdi
     eaf:	76 61                	jbe    f12 <__FRAME_END__+0x71e>
     eb1:	6c                   	ins    BYTE PTR es:[rdi],dx
     eb2:	5b                   	pop    rbx
     eb3:	32 5d 3b             	xor    bl,BYTE PTR [rbp+0x3b]
     eb6:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     eb9:	5f                   	pop    rdi
     eba:	5f                   	pop    rdi
     ebb:	73 73                	jae    f30 <__FRAME_END__+0x73c>
     ebd:	69 7a 65 5f 74 5f 64 	imul   edi,DWORD PTR [rdx+0x65],0x645f745f
     ec4:	65 66 69 6e 65 64 20 	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
     ecb:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     ece:	5f                   	pop    rdi
     ecf:	53                   	push   rbx
     ed0:	49 5a                	rex.WB pop r10
     ed2:	45 5f                	rex.RB pop r15
     ed4:	20 00                	and    BYTE PTR [rax],al
     ed6:	5f                   	pop    rdi
     ed7:	70 6f                	jo     f48 <__FRAME_END__+0x754>
     ed9:	73 00                	jae    edb <__FRAME_END__+0x6e7>
     edb:	5f                   	pop    rdi
     edc:	49                   	rex.WB
     edd:	4f 5f                	rex.WRXB pop r15
     edf:	66 65 72 72          	data16 gs jb f55 <__FRAME_END__+0x761>
     ee3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ee4:	72 5f                	jb     f45 <__FRAME_END__+0x751>
     ee6:	75 6e                	jne    f56 <__FRAME_END__+0x762>
     ee8:	6c                   	ins    BYTE PTR es:[rdi],dx
     ee9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     eea:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     eed:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
     ef1:	66 70 29             	data16 jo f1d <__FRAME_END__+0x729>
     ef4:	20 28                	and    BYTE PTR [rax],ch
     ef6:	28 28                	sub    BYTE PTR [rax],ch
     ef8:	5f                   	pop    rdi
     ef9:	5f                   	pop    rdi
     efa:	66 70 29             	data16 jo f26 <__FRAME_END__+0x732>
     efd:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
     f02:	61                   	(bad)  
     f03:	67 73 20             	addr32 jae f26 <__FRAME_END__+0x732>
     f06:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
     f0a:	4f 5f                	rex.WRXB pop r15
     f0c:	45 52                	rex.RB push r10
     f0e:	52                   	push   rdx
     f0f:	5f                   	pop    rdi
     f10:	53                   	push   rbx
     f11:	45                   	rex.RB
     f12:	45                   	rex.RB
     f13:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
     f16:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 293f3c <_end+0x92f24>
     f1c:	5f                   	pop    rdi
     f1d:	5f                   	pop    rdi
     f1e:	65 78 74             	gs js  f95 <__FRAME_END__+0x7a1>
     f21:	65 72 6e             	gs jb  f92 <__FRAME_END__+0x79e>
     f24:	5f                   	pop    rdi
     f25:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f2c:	65 78 74             	gs js  fa3 <__FRAME_END__+0x7af>
     f2f:	65 72 6e             	gs jb  fa0 <__FRAME_END__+0x7ac>
     f32:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     f35:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f3c:	5f                   	pop    rdi
     f3d:	5f                   	pop    rdi
     f3e:	61                   	(bad)  
     f3f:	74 74                	je     fb5 <__FRAME_END__+0x7c1>
     f41:	72 69                	jb     fac <__FRAME_END__+0x7b8>
     f43:	62                   	(bad)  
     f44:	75 74                	jne    fba <__FRAME_END__+0x7c6>
     f46:	65 5f                	gs pop rdi
     f48:	5f                   	pop    rdi
     f49:	20 28                	and    BYTE PTR [rax],ch
     f4b:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     f4e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     f50:	75 5f                	jne    fb1 <__FRAME_END__+0x7bd>
     f52:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     f59:	5f                   	pop    rdi
     f5a:	29 29                	sub    DWORD PTR [rcx],ebp
     f5c:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     f5f:	43                   	rex.XB
     f60:	43 5f                	rex.XB pop r15
     f62:	53                   	push   rbx
     f63:	49 5a                	rex.WB pop r10
     f65:	45 5f                	rex.RB pop r15
     f67:	54                   	push   rsp
     f68:	20 00                	and    BYTE PTR [rax],al
     f6a:	5f                   	pop    rdi
     f6b:	5f                   	pop    rdi
     f6c:	46                   	rex.RX
     f6d:	4c 54                	rex.WR push rsp
     f6f:	33 32                	xor    esi,DWORD PTR [rdx]
     f71:	5f                   	pop    rdi
     f72:	48                   	rex.W
     f73:	41 53                	push   r11
     f75:	5f                   	pop    rdi
     f76:	44                   	rex.R
     f77:	45                   	rex.RB
     f78:	4e                   	rex.WRX
     f79:	4f 52                	rex.WRXB push r10
     f7b:	4d 5f                	rex.WRB pop r15
     f7d:	5f                   	pop    rdi
     f7e:	20 31                	and    BYTE PTR [rcx],dh
     f80:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f83:	75 6e                	jne    ff3 <__FRAME_END__+0x7ff>
     f85:	69 78 5f 5f 20 31 00 	imul   edi,DWORD PTR [rax+0x5f],0x31205f
     f8c:	5f                   	pop    rdi
     f8d:	5f                   	pop    rdi
     f8e:	47                   	rex.RXB
     f8f:	43                   	rex.XB
     f90:	43 5f                	rex.XB pop r15
     f92:	48                   	rex.W
     f93:	41 56                	push   r14
     f95:	45 5f                	rex.RB pop r15
     f97:	53                   	push   rbx
     f98:	59                   	pop    rcx
     f99:	4e                   	rex.WRX
     f9a:	43 5f                	rex.XB pop r15
     f9c:	43                   	rex.XB
     f9d:	4f                   	rex.WRXB
     f9e:	4d 50                	rex.WRB push r8
     fa0:	41 52                	push   r10
     fa2:	45 5f                	rex.RB pop r15
     fa4:	41                   	rex.B
     fa5:	4e                   	rex.WRX
     fa6:	44 5f                	rex.R pop rdi
     fa8:	53                   	push   rbx
     fa9:	57                   	push   rdi
     faa:	41 50                	push   r8
     fac:	5f                   	pop    rdi
     fad:	31 20                	xor    DWORD PTR [rax],esp
     faf:	31 00                	xor    DWORD PTR [rax],eax
     fb1:	5f                   	pop    rdi
     fb2:	49                   	rex.WB
     fb3:	4f 5f                	rex.WRXB pop r15
     fb5:	73 61                	jae    1018 <__FRAME_END__+0x824>
     fb7:	76 65                	jbe    101e <__FRAME_END__+0x82a>
     fb9:	5f                   	pop    rdi
     fba:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     fbc:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     fc0:	46                   	rex.RX
     fc1:	4c 54                	rex.WR push rsp
     fc3:	36 34 58             	ss xor al,0x58
     fc6:	5f                   	pop    rdi
     fc7:	4d                   	rex.WRB
     fc8:	49                   	rex.WB
     fc9:	4e 5f                	rex.WRX pop rdi
     fcb:	45 58                	rex.RB pop r8
     fcd:	50                   	push   rax
     fce:	5f                   	pop    rdi
     fcf:	5f                   	pop    rdi
     fd0:	20 28                	and    BYTE PTR [rax],ch
     fd2:	2d 31 36 33 38       	sub    eax,0x38333631
     fd7:	31 29                	xor    DWORD PTR [rcx],ebp
     fd9:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
     fdc:	53                   	push   rbx
     fdd:	44 5f                	rex.R pop rdi
     fdf:	53                   	push   rbx
     fe0:	49 5a                	rex.WB pop r10
     fe2:	45 5f                	rex.RB pop r15
     fe4:	54                   	push   rsp
     fe5:	5f                   	pop    rdi
     fe6:	20 00                	and    BYTE PTR [rax],al
     fe8:	5f                   	pop    rdi
     fe9:	5f                   	pop    rdi
     fea:	73 74                	jae    1060 <__FRAME_END__+0x86c>
     fec:	75 62                	jne    1050 <__FRAME_END__+0x85c>
     fee:	5f                   	pop    rdi
     fef:	73 65                	jae    1056 <__FRAME_END__+0x862>
     ff1:	74 6c                	je     105f <__FRAME_END__+0x86b>
     ff3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ff4:	67 69 6e 20 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x20],0x465f5f00
     ffb:	46 
     ffc:	4c 54                	rex.WR push rsp
     ffe:	5f                   	pop    rdi
     fff:	44                   	rex.R
    1000:	49                   	rex.WB
    1001:	47 5f                	rex.RXB pop r15
    1003:	5f                   	pop    rdi
    1004:	20 36                	and    BYTE PTR [rsi],dh
    1006:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1009:	49                   	rex.WB
    100a:	4e 54                	rex.WRX push rsp
    100c:	5f                   	pop    rdi
    100d:	46                   	rex.RX
    100e:	41 53                	push   r11
    1010:	54                   	push   rsp
    1011:	31 36                	xor    DWORD PTR [rsi],esi
    1013:	5f                   	pop    rdi
    1014:	57                   	push   rdi
    1015:	49                   	rex.WB
    1016:	44 54                	rex.R push rsp
    1018:	48 5f                	rex.W pop rdi
    101a:	5f                   	pop    rdi
    101b:	20 36                	and    BYTE PTR [rsi],dh
    101d:	34 00                	xor    al,0x0
    101f:	5f                   	pop    rdi
    1020:	5f                   	pop    rdi
    1021:	47                   	rex.RXB
    1022:	43                   	rex.XB
    1023:	43 5f                	rex.XB pop r15
    1025:	41 54                	push   r12
    1027:	4f                   	rex.WRXB
    1028:	4d                   	rex.WRB
    1029:	49                   	rex.WB
    102a:	43 5f                	rex.XB pop r15
    102c:	42                   	rex.X
    102d:	4f                   	rex.WRXB
    102e:	4f                   	rex.WRXB
    102f:	4c 5f                	rex.WR pop rdi
    1031:	4c                   	rex.WR
    1032:	4f                   	rex.WRXB
    1033:	43                   	rex.XB
    1034:	4b 5f                	rex.WXB pop r15
    1036:	46 52                	rex.RX push rdx
    1038:	45                   	rex.RB
    1039:	45 20 32             	and    BYTE PTR [r10],r14b
    103c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    103f:	4f 5f                	rex.WRXB pop r15
    1041:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1042:	66 66 5f             	data16 pop di
    1045:	74 20                	je     1067 <__FRAME_END__+0x873>
    1047:	5f                   	pop    rdi
    1048:	5f                   	pop    rdi
    1049:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    104a:	66 66 5f             	data16 pop di
    104d:	74 00                	je     104f <__FRAME_END__+0x85b>
    104f:	5f                   	pop    rdi
    1050:	5f                   	pop    rdi
    1051:	70 69                	jo     10bc <__FRAME_END__+0x8c8>
    1053:	65 5f                	gs pop rdi
    1055:	5f                   	pop    rdi
    1056:	20 32                	and    BYTE PTR [rdx],dh
    1058:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    105b:	54                   	push   rsp
    105c:	44                   	rex.R
    105d:	49                   	rex.WB
    105e:	4f 5f                	rex.WRXB pop r15
    1060:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    1063:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1066:	44                   	rex.R
    1067:	45                   	rex.RB
    1068:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    106b:	5f                   	pop    rdi
    106c:	4d                   	rex.WRB
    106d:	49                   	rex.WB
    106e:	4e 5f                	rex.WRX pop rdi
    1070:	5f                   	pop    rdi
    1071:	20 31                	and    BYTE PTR [rcx],dh
    1073:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    1079:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    107c:	49                   	rex.WB
    107d:	4e 54                	rex.WRX push rsp
    107f:	4d                   	rex.WRB
    1080:	41 58                	pop    r8
    1082:	5f                   	pop    rdi
    1083:	4d                   	rex.WRB
    1084:	41 58                	pop    r8
    1086:	5f                   	pop    rdi
    1087:	5f                   	pop    rdi
    1088:	20 30                	and    BYTE PTR [rax],dh
    108a:	78 37                	js     10c3 <__FRAME_END__+0x8cf>
    108c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1093:	66 66 66 66 66 66 66 
    109a:	66 4c 00 5f 42       	data16 rex.WR add BYTE PTR [rdi+0x42],r11b
    109f:	49 54                	rex.WB push r12
    10a1:	53                   	push   rbx
    10a2:	5f                   	pop    rdi
    10a3:	4c                   	rex.WR
    10a4:	49                   	rex.WB
    10a5:	42                   	rex.X
    10a6:	49                   	rex.WB
    10a7:	4f 5f                	rex.WRXB pop r15
    10a9:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    10ac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10af:	47                   	rex.RXB
    10b0:	43                   	rex.XB
    10b1:	43 5f                	rex.XB pop r15
    10b3:	49                   	rex.WB
    10b4:	45                   	rex.RB
    10b5:	43 5f                	rex.XB pop r15
    10b7:	35 35 39 20 32       	xor    eax,0x32203935
    10bc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10bf:	46                   	rex.RX
    10c0:	4c 54                	rex.WR push rsp
    10c2:	31 32                	xor    DWORD PTR [rdx],esi
    10c4:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    10c7:	49                   	rex.WB
    10c8:	4e 5f                	rex.WRX pop rdi
    10ca:	45 58                	rex.RB pop r8
    10cc:	50                   	push   rax
    10cd:	5f                   	pop    rdi
    10ce:	5f                   	pop    rdi
    10cf:	20 28                	and    BYTE PTR [rax],ch
    10d1:	2d 31 36 33 38       	sub    eax,0x38333631
    10d6:	31 29                	xor    DWORD PTR [rcx],ebp
    10d8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10db:	46                   	rex.RX
    10dc:	4c 54                	rex.WR push rsp
    10de:	33 32                	xor    esi,DWORD PTR [rdx]
    10e0:	5f                   	pop    rdi
    10e1:	48                   	rex.W
    10e2:	41 53                	push   r11
    10e4:	5f                   	pop    rdi
    10e5:	51                   	push   rcx
    10e6:	55                   	push   rbp
    10e7:	49                   	rex.WB
    10e8:	45 54                	rex.RB push r12
    10ea:	5f                   	pop    rdi
    10eb:	4e                   	rex.WRX
    10ec:	41                   	rex.B
    10ed:	4e 5f                	rex.WRX pop rdi
    10ef:	5f                   	pop    rdi
    10f0:	20 31                	and    BYTE PTR [rcx],dh
    10f2:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    10f5:	53                   	push   rbx
    10f6:	44 5f                	rex.R pop rdi
    10f8:	53                   	push   rbx
    10f9:	49 5a                	rex.WB pop r10
    10fb:	45 5f                	rex.RB pop r15
    10fd:	54                   	push   rsp
    10fe:	5f                   	pop    rdi
    10ff:	44                   	rex.R
    1100:	45                   	rex.RB
    1101:	46                   	rex.RX
    1102:	49                   	rex.WB
    1103:	4e                   	rex.WRX
    1104:	45                   	rex.RB
    1105:	44 5f                	rex.R pop rdi
    1107:	20 00                	and    BYTE PTR [rax],al
    1109:	5f                   	pop    rdi
    110a:	5f                   	pop    rdi
    110b:	55                   	push   rbp
    110c:	49                   	rex.WB
    110d:	4e 54                	rex.WRX push rsp
    110f:	5f                   	pop    rdi
    1110:	4c                   	rex.WR
    1111:	45                   	rex.RB
    1112:	41 53                	push   r11
    1114:	54                   	push   rsp
    1115:	31 36                	xor    DWORD PTR [rsi],esi
    1117:	5f                   	pop    rdi
    1118:	4d                   	rex.WRB
    1119:	41 58                	pop    r8
    111b:	5f                   	pop    rdi
    111c:	5f                   	pop    rdi
    111d:	20 30                	and    BYTE PTR [rax],dh
    111f:	78 66                	js     1187 <__FRAME_END__+0x993>
    1121:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1127:	55                   	push   rbp
    1128:	49                   	rex.WB
    1129:	4e 54                	rex.WRX push rsp
    112b:	5f                   	pop    rdi
    112c:	46                   	rex.RX
    112d:	41 53                	push   r11
    112f:	54                   	push   rsp
    1130:	36 34 5f             	ss xor al,0x5f
    1133:	4d                   	rex.WRB
    1134:	41 58                	pop    r8
    1136:	5f                   	pop    rdi
    1137:	5f                   	pop    rdi
    1138:	20 30                	and    BYTE PTR [rax],dh
    113a:	78 66                	js     11a2 <__FRAME_END__+0x9ae>
    113c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1143:	66 66 66 66 66 66 66 
    114a:	66 55                	push   bp
    114c:	4c 00 5f 49          	rex.WR add BYTE PTR [rdi+0x49],r11b
    1150:	4f 5f                	rex.WRXB pop r15
    1152:	45 52                	rex.RB push r10
    1154:	52                   	push   rdx
    1155:	5f                   	pop    rdi
    1156:	53                   	push   rbx
    1157:	45                   	rex.RB
    1158:	45                   	rex.RB
    1159:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    115c:	78 32                	js     1190 <__FRAME_END__+0x99c>
    115e:	30 00                	xor    BYTE PTR [rax],al
    1160:	5f                   	pop    rdi
    1161:	5f                   	pop    rdi
    1162:	61                   	(bad)  
    1163:	74 74                	je     11d9 <__FRAME_END__+0x9e5>
    1165:	72 69                	jb     11d0 <__FRAME_END__+0x9dc>
    1167:	62                   	(bad)  
    1168:	75 74                	jne    11de <__FRAME_END__+0x9ea>
    116a:	65 5f                	gs pop rdi
    116c:	75 73                	jne    11e1 <__FRAME_END__+0x9ed>
    116e:	65 64 5f             	gs fs pop rdi
    1171:	5f                   	pop    rdi
    1172:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    1175:	61                   	(bad)  
    1176:	74 74                	je     11ec <__FRAME_END__+0x9f8>
    1178:	72 69                	jb     11e3 <__FRAME_END__+0x9ef>
    117a:	62                   	(bad)  
    117b:	75 74                	jne    11f1 <__FRAME_END__+0x9fd>
    117d:	65 5f                	gs pop rdi
    117f:	5f                   	pop    rdi
    1180:	20 28                	and    BYTE PTR [rax],ch
    1182:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    1185:	75 73                	jne    11fa <__FRAME_END__+0xa06>
    1187:	65 64 5f             	gs fs pop rdi
    118a:	5f                   	pop    rdi
    118b:	29 29                	sub    DWORD PTR [rcx],ebp
    118d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1190:	61                   	(bad)  
    1191:	74 74                	je     1207 <__FRAME_END__+0xa13>
    1193:	72 69                	jb     11fe <__FRAME_END__+0xa0a>
    1195:	62                   	(bad)  
    1196:	75 74                	jne    120c <__FRAME_END__+0xa18>
    1198:	65 5f                	gs pop rdi
    119a:	61                   	(bad)  
    119b:	72 74                	jb     1211 <__FRAME_END__+0xa1d>
    119d:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    11a4:	5f                   	pop    rdi
    11a5:	5f                   	pop    rdi
    11a6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    11a9:	61                   	(bad)  
    11aa:	74 74                	je     1220 <__FRAME_END__+0xa2c>
    11ac:	72 69                	jb     1217 <__FRAME_END__+0xa23>
    11ae:	62                   	(bad)  
    11af:	75 74                	jne    1225 <__FRAME_END__+0xa31>
    11b1:	65 5f                	gs pop rdi
    11b3:	5f                   	pop    rdi
    11b4:	20 28                	and    BYTE PTR [rax],ch
    11b6:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    11b9:	61                   	(bad)  
    11ba:	72 74                	jb     1230 <__FRAME_END__+0xa3c>
    11bc:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    11c3:	5f                   	pop    rdi
    11c4:	5f                   	pop    rdi
    11c5:	29 29                	sub    DWORD PTR [rcx],ebp
    11c7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    11ca:	4f 5f                	rex.WRXB pop r15
    11cc:	66 74 72             	data16 je 1241 <__FRAME_END__+0xa4d>
    11cf:	79 6c                	jns    123d <__FRAME_END__+0xa49>
    11d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d2:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    11d5:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    11dc:	29 
    11dd:	20 00                	and    BYTE PTR [rax],al
    11df:	5f                   	pop    rdi
    11e0:	5f                   	pop    rdi
    11e1:	55                   	push   rbp
    11e2:	49                   	rex.WB
    11e3:	4e 54                	rex.WRX push rsp
    11e5:	5f                   	pop    rdi
    11e6:	4c                   	rex.WR
    11e7:	45                   	rex.RB
    11e8:	41 53                	push   r11
    11ea:	54                   	push   rsp
    11eb:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    11ee:	41 58                	pop    r8
    11f0:	5f                   	pop    rdi
    11f1:	5f                   	pop    rdi
    11f2:	20 30                	and    BYTE PTR [rax],dh
    11f4:	78 66                	js     125c <__FRAME_END__+0xa68>
    11f6:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    11fa:	47                   	rex.RXB
    11fb:	4c                   	rex.WR
    11fc:	49                   	rex.WB
    11fd:	42                   	rex.X
    11fe:	43 5f                	rex.XB pop r15
    1200:	55                   	push   rbp
    1201:	53                   	push   rbx
    1202:	45 5f                	rex.RB pop r15
    1204:	4c                   	rex.WR
    1205:	49                   	rex.WB
    1206:	42 5f                	rex.X pop rdi
    1208:	45 58                	rex.RB pop r8
    120a:	54                   	push   rsp
    120b:	32 20                	xor    ah,BYTE PTR [rax]
    120d:	30 00                	xor    BYTE PTR [rax],al
    120f:	5f                   	pop    rdi
    1210:	5f                   	pop    rdi
    1211:	44                   	rex.R
    1212:	45                   	rex.RB
    1213:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1216:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1219:	49                   	rex.WB
    121a:	4e 5f                	rex.WRX pop rdi
    121c:	45 58                	rex.RB pop r8
    121e:	50                   	push   rax
    121f:	5f                   	pop    rdi
    1220:	5f                   	pop    rdi
    1221:	20 28                	and    BYTE PTR [rax],ch
    1223:	2d 36 31 34 32       	sub    eax,0x32343136
    1228:	29 00                	sub    DWORD PTR [rax],eax
    122a:	2f                   	(bad)  
    122b:	68 6f 6d 65 2f       	push   0x2f656d6f
    1230:	75 62                	jne    1294 <__FRAME_END__+0xaa0>
    1232:	75 6e                	jne    12a2 <__FRAME_END__+0xaae>
    1234:	74 75                	je     12ab <__FRAME_END__+0xab7>
    1236:	2f                   	(bad)  
    1237:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1239:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
    1240:	6e 
    1241:	67 2f                	addr32 (bad) 
    1243:	50                   	push   rax
    1244:	72 6f                	jb     12b5 <__FRAME_END__+0xac1>
    1246:	67 72 61             	addr32 jb 12aa <__FRAME_END__+0xab6>
    1249:	6d                   	ins    DWORD PTR es:[rdi],dx
    124a:	6d                   	ins    DWORD PTR es:[rdi],dx
    124b:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
    1252:	61                   	(bad)  
    1253:	73 73                	jae    12c8 <__FRAME_END__+0xad4>
    1255:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1257:	62                   	(bad)  
    1258:	6c                   	ins    BYTE PTR es:[rdi],dx
    1259:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
    1260:	61                   	(bad)  
    1261:	72 69                	jb     12cc <__FRAME_END__+0xad8>
    1263:	65 73 2f             	gs jae 1295 <__FRAME_END__+0xaa1>
    1266:	43 2f                	rex.XB (bad) 
    1268:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    126a:	74 65                	je     12d1 <__FRAME_END__+0xadd>
    126c:	6c                   	ins    BYTE PTR es:[rdi],dx
    126d:	5f                   	pop    rdi
    126e:	61                   	(bad)  
    126f:	72 63                	jb     12d4 <__FRAME_END__+0xae0>
    1271:	68 69 74 65 63       	push   0x63657469
    1276:	74 75                	je     12ed <__FRAME_END__+0xaf9>
    1278:	72 65                	jb     12df <__FRAME_END__+0xaeb>
    127a:	2f                   	(bad)  
    127b:	41                   	rex.B
    127c:	4d                   	rex.WRB
    127d:	44                   	rex.R
    127e:	36 34 2f             	ss xor al,0x2f
    1281:	41                   	rex.B
    1282:	64 64 5f             	fs fs pop rdi
    1285:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1287:	74 2f                	je     12b8 <__FRAME_END__+0xac4>
    1289:	57                   	push   rdi
    128a:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
    1291:	75 
    1292:	67 5f                	addr32 pop rdi
    1294:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1296:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1298:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    129b:	4b                   	rex.WXB
    129c:	45 52                	rex.RB push r10
    129e:	4e                   	rex.WRX
    129f:	45                   	rex.RB
    12a0:	4c 5f                	rex.WR pop rdi
    12a2:	53                   	push   rbx
    12a3:	54                   	push   rsp
    12a4:	52                   	push   rdx
    12a5:	49                   	rex.WB
    12a6:	43 54                	rex.XB push r12
    12a8:	5f                   	pop    rdi
    12a9:	4e                   	rex.WRX
    12aa:	41                   	rex.B
    12ab:	4d                   	rex.WRB
    12ac:	45 53                	rex.RB push r11
    12ae:	20 00                	and    BYTE PTR [rax],al
    12b0:	5f                   	pop    rdi
    12b1:	5f                   	pop    rdi
    12b2:	57                   	push   rdi
    12b3:	43                   	rex.XB
    12b4:	48                   	rex.W
    12b5:	41 52                	push   r10
    12b7:	5f                   	pop    rdi
    12b8:	54                   	push   rsp
    12b9:	59                   	pop    rcx
    12ba:	50                   	push   rax
    12bb:	45 5f                	rex.RB pop r15
    12bd:	5f                   	pop    rdi
    12be:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    12c1:	74 00                	je     12c3 <__FRAME_END__+0xacf>
    12c3:	5f                   	pop    rdi
    12c4:	5f                   	pop    rdi
    12c5:	49                   	rex.WB
    12c6:	4e 54                	rex.WRX push rsp
    12c8:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    12cb:	41 58                	pop    r8
    12cd:	5f                   	pop    rdi
    12ce:	5f                   	pop    rdi
    12cf:	20 30                	and    BYTE PTR [rax],dh
    12d1:	78 37                	js     130a <__FRAME_END__+0xb16>
    12d3:	66 00 67 65          	data16 add BYTE PTR [rdi+0x65],ah
    12d7:	74 63                	je     133c <__FRAME_END__+0xb48>
    12d9:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    12dc:	70 29                	jo     1307 <__FRAME_END__+0xb13>
    12de:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    12e1:	4f 5f                	rex.WRXB pop r15
    12e3:	67 65 74 63          	addr32 gs je 134a <__FRAME_END__+0xb56>
    12e7:	20 28                	and    BYTE PTR [rax],ch
    12e9:	5f                   	pop    rdi
    12ea:	66 70 29             	data16 jo 1316 <__FRAME_END__+0xb22>
    12ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12f0:	44                   	rex.R
    12f1:	45                   	rex.RB
    12f2:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    12f5:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    12f8:	50                   	push   rax
    12f9:	53                   	push   rbx
    12fa:	49                   	rex.WB
    12fb:	4c                   	rex.WR
    12fc:	4f                   	rex.WRXB
    12fd:	4e 5f                	rex.WRX pop rdi
    12ff:	5f                   	pop    rdi
    1300:	20 31                	and    BYTE PTR [rcx],dh
    1302:	45 2d 33 33 44 4c    	rex.RB sub eax,0x4c443333
    1308:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    130b:	55                   	push   rbp
    130c:	53                   	push   rbx
    130d:	45 5f                	rex.RB pop r15
    130f:	50                   	push   rax
    1310:	4f 53                	rex.WRXB push r11
    1312:	49 58                	rex.WB pop r8
    1314:	31 39                	xor    DWORD PTR [rcx],edi
    1316:	39 35 30 36 00 5f    	cmp    DWORD PTR [rip+0x5f003630],esi        # 5f00494c <_end+0x5ee03934>
    131c:	5f                   	pop    rdi
    131d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    131e:	65 65 64 5f          	gs gs fs pop rdi
    1322:	4e 55                	rex.WRX push rbp
    1324:	4c                   	rex.WR
    1325:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1329:	52                   	push   rdx
    132a:	45                   	rex.RB
    132b:	44                   	rex.R
    132c:	49 52                	rex.WB push r10
    132e:	45                   	rex.RB
    132f:	43 54                	rex.XB push r12
    1331:	5f                   	pop    rdi
    1332:	4e 54                	rex.WRX push rsp
    1334:	48 5f                	rex.W pop rdi
    1336:	4c                   	rex.WR
    1337:	44                   	rex.R
    1338:	42                   	rex.X
    1339:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    133d:	6d                   	ins    DWORD PTR es:[rdi],dx
    133e:	65 2c 70             	gs sub al,0x70
    1341:	72 6f                	jb     13b2 <__FRAME_END__+0xbbe>
    1343:	74 6f                	je     13b4 <__FRAME_END__+0xbc0>
    1345:	2c 61                	sub    al,0x61
    1347:	6c                   	ins    BYTE PTR es:[rdi],dx
    1348:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    134f:	52                   	push   rdx
    1350:	45                   	rex.RB
    1351:	44                   	rex.R
    1352:	49 52                	rex.WB push r10
    1354:	45                   	rex.RB
    1355:	43 54                	rex.XB push r12
    1357:	5f                   	pop    rdi
    1358:	4e 54                	rex.WRX push rsp
    135a:	48 20 28             	rex.W and BYTE PTR [rax],bpl
    135d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    135e:	61                   	(bad)  
    135f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1360:	65 2c 20             	gs sub al,0x20
    1363:	70 72                	jo     13d7 <__FRAME_END__+0xbe3>
    1365:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1366:	74 6f                	je     13d7 <__FRAME_END__+0xbe3>
    1368:	2c 20                	sub    al,0x20
    136a:	61                   	(bad)  
    136b:	6c                   	ins    BYTE PTR es:[rdi],dx
    136c:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    1373:	52                   	push   rdx
    1374:	45                   	rex.RB
    1375:	44                   	rex.R
    1376:	49 52                	rex.WB push r10
    1378:	45                   	rex.RB
    1379:	43 54                	rex.XB push r12
    137b:	5f                   	pop    rdi
    137c:	4e 54                	rex.WRX push rsp
    137e:	48                   	rex.W
    137f:	4e                   	rex.WRX
    1380:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    1384:	6d                   	ins    DWORD PTR es:[rdi],dx
    1385:	65 2c 70             	gs sub al,0x70
    1388:	72 6f                	jb     13f9 <__FRAME_END__+0xc05>
    138a:	74 6f                	je     13fb <__FRAME_END__+0xc07>
    138c:	2c 61                	sub    al,0x61
    138e:	6c                   	ins    BYTE PTR es:[rdi],dx
    138f:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    1396:	6d                   	ins    DWORD PTR es:[rdi],dx
    1397:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    139b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    139c:	74 6f                	je     140d <__FRAME_END__+0xc19>
    139e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    13a1:	61                   	(bad)  
    13a2:	73 6d                	jae    1411 <__FRAME_END__+0xc1d>
    13a4:	5f                   	pop    rdi
    13a5:	5f                   	pop    rdi
    13a6:	20 28                	and    BYTE PTR [rax],ch
    13a8:	5f                   	pop    rdi
    13a9:	5f                   	pop    rdi
    13aa:	41 53                	push   r11
    13ac:	4d                   	rex.WRB
    13ad:	4e                   	rex.WRX
    13ae:	41                   	rex.B
    13af:	4d                   	rex.WRB
    13b0:	45 20 28             	and    BYTE PTR [r8],r13b
    13b3:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    13b6:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    13bd:	5f                   	pop    rdi
    13be:	54                   	push   rsp
    13bf:	48 52                	rex.W push rdx
    13c1:	4f 57                	rex.WRXB push r15
    13c3:	4e                   	rex.WRX
    13c4:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    13c8:	46                   	rex.RX
    13c9:	4c 54                	rex.WR push rsp
    13cb:	31 32                	xor    DWORD PTR [rdx],esi
    13cd:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    13d0:	41 58                	pop    r8
    13d2:	5f                   	pop    rdi
    13d3:	45 58                	rex.RB pop r8
    13d5:	50                   	push   rax
    13d6:	5f                   	pop    rdi
    13d7:	5f                   	pop    rdi
    13d8:	20 31                	and    BYTE PTR [rcx],dh
    13da:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    13dd:	34 00                	xor    al,0x0
    13df:	5f                   	pop    rdi
    13e0:	5f                   	pop    rdi
    13e1:	46                   	rex.RX
    13e2:	4c 54                	rex.WR push rsp
    13e4:	5f                   	pop    rdi
    13e5:	52                   	push   rdx
    13e6:	41                   	rex.B
    13e7:	44                   	rex.R
    13e8:	49 58                	rex.WB pop r8
    13ea:	5f                   	pop    rdi
    13eb:	5f                   	pop    rdi
    13ec:	20 32                	and    BYTE PTR [rdx],dh
    13ee:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    13f1:	46                   	rex.RX
    13f2:	4c 54                	rex.WR push rsp
    13f4:	33 32                	xor    esi,DWORD PTR [rdx]
    13f6:	58                   	pop    rax
    13f7:	5f                   	pop    rdi
    13f8:	44                   	rex.R
    13f9:	45                   	rex.RB
    13fa:	4e                   	rex.WRX
    13fb:	4f 52                	rex.WRXB push r10
    13fd:	4d 5f                	rex.WRB pop r15
    13ff:	4d                   	rex.WRB
    1400:	49                   	rex.WB
    1401:	4e 5f                	rex.WRX pop rdi
    1403:	5f                   	pop    rdi
    1404:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    1407:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    140a:	36 35 36 34 35 38    	ss xor eax,0x38353436
    1410:	34 31                	xor    al,0x31
    1412:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    1415:	35 34 34 31 37       	xor    eax,0x37313434
    141a:	36 35 36 38 37 39    	ss xor eax,0x39373836
    1420:	32 38                	xor    bh,BYTE PTR [rax]
    1422:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    1425:	32 31                	xor    dh,BYTE PTR [rcx]
    1427:	33 37                	xor    esi,DWORD PTR [rdi]
    1429:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    142c:	33 32                	xor    esi,DWORD PTR [rdx]
    142e:	34 46                	xor    al,0x46
    1430:	33 32                	xor    esi,DWORD PTR [rdx]
    1432:	78 00                	js     1434 <__FRAME_END__+0xc40>
    1434:	5f                   	pop    rdi
    1435:	5f                   	pop    rdi
    1436:	67 6c                	ins    BYTE PTR es:[edi],dx
    1438:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    143f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1440:	67 5f                	addr32 pop rdi
    1442:	68 61 73 5f 65       	push   0x655f7361
    1447:	78 74                	js     14bd <__FRAME_END__+0xcc9>
    1449:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    144b:	73 69                	jae    14b6 <__FRAME_END__+0xcc2>
    144d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    144e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    144f:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    1452:	74 29                	je     147d <__FRAME_END__+0xc89>
    1454:	20 30                	and    BYTE PTR [rax],dh
    1456:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1459:	50                   	push   rax
    145a:	4d 54                	rex.WRB push r12
    145c:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    145f:	67 73 29             	addr32 jae 148b <__FRAME_END__+0xc97>
    1462:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    1465:	67 73 00             	addr32 jae 1468 <__FRAME_END__+0xc74>
    1468:	5f                   	pop    rdi
    1469:	5f                   	pop    rdi
    146a:	47                   	rex.RXB
    146b:	49                   	rex.WB
    146c:	44 5f                	rex.R pop rdi
    146e:	54                   	push   rsp
    146f:	5f                   	pop    rdi
    1470:	54                   	push   rsp
    1471:	59                   	pop    rcx
    1472:	50                   	push   rax
    1473:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1477:	55                   	push   rbp
    1478:	33 32                	xor    esi,DWORD PTR [rdx]
    147a:	5f                   	pop    rdi
    147b:	54                   	push   rsp
    147c:	59                   	pop    rcx
    147d:	50                   	push   rax
    147e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1482:	53                   	push   rbx
    1483:	49 5a                	rex.WB pop r10
    1485:	45                   	rex.RB
    1486:	4f                   	rex.WRXB
    1487:	46 5f                	rex.RX pop rdi
    1489:	4c                   	rex.WR
    148a:	4f                   	rex.WRXB
    148b:	4e                   	rex.WRX
    148c:	47 5f                	rex.RXB pop r15
    148e:	44                   	rex.R
    148f:	4f 55                	rex.WRXB push r13
    1491:	42                   	rex.X
    1492:	4c                   	rex.WR
    1493:	45 5f                	rex.RB pop r15
    1495:	5f                   	pop    rdi
    1496:	20 31                	and    BYTE PTR [rcx],dh
    1498:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    149c:	44                   	rex.R
    149d:	42                   	rex.X
    149e:	4c 5f                	rex.WR pop rdi
    14a0:	48                   	rex.W
    14a1:	41 53                	push   r11
    14a3:	5f                   	pop    rdi
    14a4:	51                   	push   rcx
    14a5:	55                   	push   rbp
    14a6:	49                   	rex.WB
    14a7:	45 54                	rex.RB push r12
    14a9:	5f                   	pop    rdi
    14aa:	4e                   	rex.WRX
    14ab:	41                   	rex.B
    14ac:	4e 5f                	rex.WRX pop rdi
    14ae:	5f                   	pop    rdi
    14af:	20 31                	and    BYTE PTR [rcx],dh
    14b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14b4:	77 75                	ja     152b <__FRAME_END__+0xd37>
    14b6:	72 20                	jb     14d8 <__FRAME_END__+0xce4>
    14b8:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    14bb:	49 54                	rex.WB push r12
    14bd:	53                   	push   rbx
    14be:	5f                   	pop    rdi
    14bf:	54                   	push   rsp
    14c0:	59                   	pop    rcx
    14c1:	50                   	push   rax
    14c2:	45 53                	rex.RB push r11
    14c4:	5f                   	pop    rdi
    14c5:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    14c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14cb:	48                   	rex.W
    14cc:	41 56                	push   r14
    14ce:	45 5f                	rex.RB pop r15
    14d0:	43                   	rex.XB
    14d1:	4f                   	rex.WRXB
    14d2:	4c 55                	rex.WR push rbp
    14d4:	4d                   	rex.WRB
    14d5:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    14d8:	5f                   	pop    rdi
    14d9:	5f                   	pop    rdi
    14da:	4c                   	rex.WR
    14db:	44                   	rex.R
    14dc:	42                   	rex.X
    14dd:	4c 5f                	rex.WR pop rdi
    14df:	44                   	rex.R
    14e0:	45                   	rex.RB
    14e1:	4e                   	rex.WRX
    14e2:	4f 52                	rex.WRXB push r10
    14e4:	4d 5f                	rex.WRB pop r15
    14e6:	4d                   	rex.WRB
    14e7:	49                   	rex.WB
    14e8:	4e 5f                	rex.WRX pop rdi
    14ea:	5f                   	pop    rdi
    14eb:	20 33                	and    BYTE PTR [rbx],dh
    14ed:	2e 36 34 35          	cs ss xor al,0x35
    14f1:	31 39                	xor    DWORD PTR [rcx],edi
    14f3:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 3838462c <_end+0x38183614>
    14f9:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    14fc:	34 36                	xor    al,0x36
    14fe:	30 32                	xor    BYTE PTR [rdx],dh
    1500:	35 32 38 34 30       	xor    eax,0x30343832
    1505:	35 39 33 33 36       	xor    eax,0x36333339
    150a:	31 39                	xor    DWORD PTR [rcx],edi
    150c:	34 31                	xor    al,0x31
    150e:	39 38                	cmp    DWORD PTR [rax],edi
    1510:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1513:	34 39                	xor    al,0x39
    1515:	35 31 4c 00 5f       	xor    eax,0x5f004c31
    151a:	5f                   	pop    rdi
    151b:	50                   	push   rax
    151c:	49                   	rex.WB
    151d:	44 5f                	rex.R pop rdi
    151f:	54                   	push   rsp
    1520:	5f                   	pop    rdi
    1521:	54                   	push   rsp
    1522:	59                   	pop    rcx
    1523:	50                   	push   rax
    1524:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1528:	53                   	push   rbx
    1529:	33 32                	xor    esi,DWORD PTR [rdx]
    152b:	5f                   	pop    rdi
    152c:	54                   	push   rsp
    152d:	59                   	pop    rcx
    152e:	50                   	push   rax
    152f:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1533:	73 74                	jae    15a9 <__FRAME_END__+0xdb5>
    1535:	75 62                	jne    1599 <__FRAME_END__+0xda5>
    1537:	5f                   	pop    rdi
    1538:	66 61                	data16 (bad) 
    153a:	74 74                	je     15b0 <__FRAME_END__+0xdbc>
    153c:	61                   	(bad)  
    153d:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1540:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
    1543:	73 5f                	jae    15a4 <__FRAME_END__+0xdb0>
    1545:	65 72 72             	gs jb  15ba <__FRAME_END__+0xdc6>
    1548:	6c                   	ins    BYTE PTR es:[rdi],dx
    1549:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    1550:	4c 54                	rex.WR push rsp
    1552:	36 34 5f             	ss xor al,0x5f
    1555:	48                   	rex.W
    1556:	41 53                	push   r11
    1558:	5f                   	pop    rdi
    1559:	49                   	rex.WB
    155a:	4e                   	rex.WRX
    155b:	46                   	rex.RX
    155c:	49                   	rex.WB
    155d:	4e                   	rex.WRX
    155e:	49 54                	rex.WB push r12
    1560:	59                   	pop    rcx
    1561:	5f                   	pop    rdi
    1562:	5f                   	pop    rdi
    1563:	20 31                	and    BYTE PTR [rcx],dh
    1565:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1568:	55                   	push   rbp
    1569:	49                   	rex.WB
    156a:	4e 54                	rex.WRX push rsp
    156c:	5f                   	pop    rdi
    156d:	46                   	rex.RX
    156e:	41 53                	push   r11
    1570:	54                   	push   rsp
    1571:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1574:	41 58                	pop    r8
    1576:	5f                   	pop    rdi
    1577:	5f                   	pop    rdi
    1578:	20 30                	and    BYTE PTR [rax],dh
    157a:	78 66                	js     15e2 <__FRAME_END__+0xdee>
    157c:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1580:	41 54                	push   r12
    1582:	4f                   	rex.WRXB
    1583:	4d                   	rex.WRB
    1584:	49                   	rex.WB
    1585:	43 5f                	rex.XB pop r15
    1587:	48                   	rex.W
    1588:	4c                   	rex.WR
    1589:	45 5f                	rex.RB pop r15
    158b:	52                   	push   rdx
    158c:	45                   	rex.RB
    158d:	4c                   	rex.WR
    158e:	45                   	rex.RB
    158f:	41 53                	push   r11
    1591:	45 20 31             	and    BYTE PTR [r9],r14b
    1594:	33 31                	xor    esi,DWORD PTR [rcx]
    1596:	30 37                	xor    BYTE PTR [rdi],dh
    1598:	32 00                	xor    al,BYTE PTR [rax]
    159a:	5f                   	pop    rdi
    159b:	5f                   	pop    rdi
    159c:	4c                   	rex.WR
    159d:	44                   	rex.R
    159e:	42                   	rex.X
    159f:	4c 5f                	rex.WR pop rdi
    15a1:	4d                   	rex.WRB
    15a2:	41 58                	pop    r8
    15a4:	5f                   	pop    rdi
    15a5:	45 58                	rex.RB pop r8
    15a7:	50                   	push   rax
    15a8:	5f                   	pop    rdi
    15a9:	5f                   	pop    rdi
    15aa:	20 31                	and    BYTE PTR [rcx],dh
    15ac:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    15af:	34 00                	xor    al,0x0
    15b1:	5f                   	pop    rdi
    15b2:	5f                   	pop    rdi
    15b3:	73 74                	jae    1629 <__FRAME_END__+0xe35>
    15b5:	75 62                	jne    1619 <__FRAME_END__+0xe25>
    15b7:	5f                   	pop    rdi
    15b8:	67 74 74             	addr32 je 162f <__FRAME_END__+0xe3b>
    15bb:	79 20                	jns    15dd <__FRAME_END__+0xde9>
    15bd:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    15c0:	49 54                	rex.WB push r12
    15c2:	53                   	push   rbx
    15c3:	5f                   	pop    rdi
    15c4:	54                   	push   rsp
    15c5:	59                   	pop    rcx
    15c6:	50                   	push   rax
    15c7:	45 53                	rex.RB push r11
    15c9:	49 5a                	rex.WB pop r10
    15cb:	45 53                	rex.RB push r11
    15cd:	5f                   	pop    rdi
    15ce:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    15d1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    15d4:	55                   	push   rbp
    15d5:	53                   	push   rbx
    15d6:	45                   	rex.RB
    15d7:	43                   	rex.XB
    15d8:	4f                   	rex.WRXB
    15d9:	4e                   	rex.WRX
    15da:	44 53                	rex.R push rbx
    15dc:	5f                   	pop    rdi
    15dd:	54                   	push   rsp
    15de:	5f                   	pop    rdi
    15df:	54                   	push   rsp
    15e0:	59                   	pop    rcx
    15e1:	50                   	push   rax
    15e2:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    15e6:	55                   	push   rbp
    15e7:	33 32                	xor    esi,DWORD PTR [rdx]
    15e9:	5f                   	pop    rdi
    15ea:	54                   	push   rsp
    15eb:	59                   	pop    rcx
    15ec:	50                   	push   rax
    15ed:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    15f1:	4f 5f                	rex.WRXB pop r15
    15f3:	70 65                	jo     165a <__FRAME_END__+0xe66>
    15f5:	65 6b 63 28 5f       	imul   esp,DWORD PTR gs:[rbx+0x28],0x5f
    15fa:	66 70 29             	data16 jo 1626 <__FRAME_END__+0xe32>
    15fd:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    1600:	4f 5f                	rex.WRXB pop r15
    1602:	70 65                	jo     1669 <__FRAME_END__+0xe75>
    1604:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    1609:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    160a:	6c                   	ins    BYTE PTR es:[rdi],dx
    160b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    160c:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    160f:	64 20 28             	and    BYTE PTR fs:[rax],ch
    1612:	5f                   	pop    rdi
    1613:	66 70 29             	data16 jo 163f <__FRAME_END__+0xe4b>
    1616:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1619:	49                   	rex.WB
    161a:	4e 54                	rex.WRX push rsp
    161c:	50                   	push   rax
    161d:	54                   	push   rsp
    161e:	52                   	push   rdx
    161f:	5f                   	pop    rdi
    1620:	54                   	push   rsp
    1621:	59                   	pop    rcx
    1622:	50                   	push   rax
    1623:	45 5f                	rex.RB pop r15
    1625:	5f                   	pop    rdi
    1626:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    162a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    162e:	74 00                	je     1630 <__FRAME_END__+0xe3c>
    1630:	5f                   	pop    rdi
    1631:	5f                   	pop    rdi
    1632:	44                   	rex.R
    1633:	45                   	rex.RB
    1634:	43                   	rex.XB
    1635:	36 34 5f             	ss xor al,0x5f
    1638:	4d                   	rex.WRB
    1639:	41 58                	pop    r8
    163b:	5f                   	pop    rdi
    163c:	5f                   	pop    rdi
    163d:	20 39                	and    BYTE PTR [rcx],bh
    163f:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    1642:	39 39                	cmp    DWORD PTR [rcx],edi
    1644:	39 39                	cmp    DWORD PTR [rcx],edi
    1646:	39 39                	cmp    DWORD PTR [rcx],edi
    1648:	39 39                	cmp    DWORD PTR [rcx],edi
    164a:	39 39                	cmp    DWORD PTR [rcx],edi
    164c:	39 39                	cmp    DWORD PTR [rcx],edi
    164e:	39 45 33             	cmp    DWORD PTR [rbp+0x33],eax
    1651:	38 34 44             	cmp    BYTE PTR [rsp+rax*2],dh
    1654:	44 00 73 79          	add    BYTE PTR [rbx+0x79],r14b
    1658:	73 5f                	jae    16b9 <__FRAME_END__+0xec5>
    165a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    165b:	65 72 72             	gs jb  16d0 <__FRAME_END__+0xedc>
    165e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1661:	47                   	rex.RXB
    1662:	43                   	rex.XB
    1663:	43 5f                	rex.XB pop r15
    1665:	41 54                	push   r12
    1667:	4f                   	rex.WRXB
    1668:	4d                   	rex.WRB
    1669:	49                   	rex.WB
    166a:	43 5f                	rex.XB pop r15
    166c:	49                   	rex.WB
    166d:	4e 54                	rex.WRX push rsp
    166f:	5f                   	pop    rdi
    1670:	4c                   	rex.WR
    1671:	4f                   	rex.WRXB
    1672:	43                   	rex.XB
    1673:	4b 5f                	rex.WXB pop r15
    1675:	46 52                	rex.RX push rdx
    1677:	45                   	rex.RB
    1678:	45 20 32             	and    BYTE PTR [r10],r14b
    167b:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    167e:	59                   	pop    rcx
    167f:	53                   	push   rbx
    1680:	5f                   	pop    rdi
    1681:	53                   	push   rbx
    1682:	49 5a                	rex.WB pop r10
    1684:	45 5f                	rex.RB pop r15
    1686:	54                   	push   rsp
    1687:	5f                   	pop    rdi
    1688:	48 20 00             	rex.W and BYTE PTR [rax],al
    168b:	5f                   	pop    rdi
    168c:	5f                   	pop    rdi
    168d:	4d                   	rex.WRB
    168e:	4d 58                	rex.WRB pop r8
    1690:	5f                   	pop    rdi
    1691:	5f                   	pop    rdi
    1692:	20 31                	and    BYTE PTR [rcx],dh
    1694:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1697:	42                   	rex.X
    1698:	4c                   	rex.WR
    1699:	4b                   	rex.WXB
    169a:	43                   	rex.XB
    169b:	4e 54                	rex.WRX push rsp
    169d:	5f                   	pop    rdi
    169e:	54                   	push   rsp
    169f:	5f                   	pop    rdi
    16a0:	54                   	push   rsp
    16a1:	59                   	pop    rcx
    16a2:	50                   	push   rax
    16a3:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    16a7:	53                   	push   rbx
    16a8:	59                   	pop    rcx
    16a9:	53                   	push   rbx
    16aa:	43                   	rex.XB
    16ab:	41                   	rex.B
    16ac:	4c                   	rex.WR
    16ad:	4c 5f                	rex.WR pop rdi
    16af:	53                   	push   rbx
    16b0:	4c                   	rex.WR
    16b1:	4f                   	rex.WRXB
    16b2:	4e                   	rex.WRX
    16b3:	47 5f                	rex.RXB pop r15
    16b5:	54                   	push   rsp
    16b6:	59                   	pop    rcx
    16b7:	50                   	push   rax
    16b8:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    16bc:	4f 5f                	rex.WRXB pop r15
    16be:	53                   	push   rbx
    16bf:	48                   	rex.W
    16c0:	4f 57                	rex.WRXB push r15
    16c2:	42                   	rex.X
    16c3:	41 53                	push   r11
    16c5:	45 20 30             	and    BYTE PTR [r8],r14b
    16c8:	32 30                	xor    dh,BYTE PTR [rax]
    16ca:	30 00                	xor    BYTE PTR [rax],al
    16cc:	5f                   	pop    rdi
    16cd:	5f                   	pop    rdi
    16ce:	73 74                	jae    1744 <__FRAME_END__+0xf50>
    16d0:	75 62                	jne    1734 <__FRAME_END__+0xf40>
    16d2:	5f                   	pop    rdi
    16d3:	73 74                	jae    1749 <__FRAME_END__+0xf55>
    16d5:	74 79                	je     1750 <__FRAME_END__+0xf5c>
    16d7:	20 00                	and    BYTE PTR [rax],al
    16d9:	5f                   	pop    rdi
    16da:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
    16e1:	5f                   	pop    rdi
    16e2:	5f                   	pop    rdi
    16e3:	48                   	rex.W
    16e4:	41 56                	push   r14
    16e6:	45 5f                	rex.RB pop r15
    16e8:	47                   	rex.RXB
    16e9:	45                   	rex.RB
    16ea:	4e                   	rex.WRX
    16eb:	45 52                	rex.RB push r10
    16ed:	49                   	rex.WB
    16ee:	43 5f                	rex.XB pop r15
    16f0:	53                   	push   rbx
    16f1:	45                   	rex.RB
    16f2:	4c                   	rex.WR
    16f3:	45                   	rex.RB
    16f4:	43 54                	rex.XB push r12
    16f6:	49                   	rex.WB
    16f7:	4f                   	rex.WRXB
    16f8:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    16fb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16fe:	52                   	push   rdx
    16ff:	4c                   	rex.WR
    1700:	49                   	rex.WB
    1701:	4d                   	rex.WRB
    1702:	36 34 5f             	ss xor al,0x5f
    1705:	54                   	push   rsp
    1706:	5f                   	pop    rdi
    1707:	54                   	push   rsp
    1708:	59                   	pop    rcx
    1709:	50                   	push   rax
    170a:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    170e:	55                   	push   rbp
    170f:	51                   	push   rcx
    1710:	55                   	push   rbp
    1711:	41                   	rex.B
    1712:	44 5f                	rex.R pop rdi
    1714:	54                   	push   rsp
    1715:	59                   	pop    rcx
    1716:	50                   	push   rax
    1717:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    171b:	46                   	rex.RX
    171c:	4c 54                	rex.WR push rsp
    171e:	31 32                	xor    DWORD PTR [rdx],esi
    1720:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1723:	41                   	rex.B
    1724:	4e 54                	rex.WRX push rsp
    1726:	5f                   	pop    rdi
    1727:	44                   	rex.R
    1728:	49                   	rex.WB
    1729:	47 5f                	rex.RXB pop r15
    172b:	5f                   	pop    rdi
    172c:	20 31                	and    BYTE PTR [rcx],dh
    172e:	31 33                	xor    DWORD PTR [rbx],esi
    1730:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1733:	4f 52                	rex.WRXB push r10
    1735:	44                   	rex.R
    1736:	45 52                	rex.RB push r10
    1738:	5f                   	pop    rdi
    1739:	4c                   	rex.WR
    173a:	49 54                	rex.WB push r12
    173c:	54                   	push   rsp
    173d:	4c                   	rex.WR
    173e:	45 5f                	rex.RB pop r15
    1740:	45                   	rex.RB
    1741:	4e                   	rex.WRX
    1742:	44                   	rex.R
    1743:	49                   	rex.WB
    1744:	41                   	rex.B
    1745:	4e 5f                	rex.WRX pop rdi
    1747:	5f                   	pop    rdi
    1748:	20 31                	and    BYTE PTR [rcx],dh
    174a:	32 33                	xor    dh,BYTE PTR [rbx]
    174c:	34 00                	xor    al,0x0
    174e:	5f                   	pop    rdi
    174f:	5f                   	pop    rdi
    1750:	55                   	push   rbp
    1751:	53                   	push   rbx
    1752:	45 5f                	rex.RB pop r15
    1754:	58                   	pop    rax
    1755:	4f 50                	rex.WRXB push r8
    1757:	45                   	rex.RB
    1758:	4e 32 4b 20          	rex.WRX xor r9b,BYTE PTR [rbx+0x20]
    175c:	31 00                	xor    DWORD PTR [rax],eax
    175e:	5f                   	pop    rdi
    175f:	5f                   	pop    rdi
    1760:	53                   	push   rbx
    1761:	49 5a                	rex.WB pop r10
    1763:	45                   	rex.RB
    1764:	4f                   	rex.WRXB
    1765:	46 5f                	rex.RX pop rdi
    1767:	50                   	push   rax
    1768:	54                   	push   rsp
    1769:	52                   	push   rdx
    176a:	44                   	rex.R
    176b:	49                   	rex.WB
    176c:	46                   	rex.RX
    176d:	46 5f                	rex.RX pop rdi
    176f:	54                   	push   rsp
    1770:	5f                   	pop    rdi
    1771:	5f                   	pop    rdi
    1772:	20 38                	and    BYTE PTR [rax],bh
    1774:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1777:	4f 53                	rex.WRXB push r11
    1779:	5f                   	pop    rdi
    177a:	54                   	push   rsp
    177b:	52                   	push   rdx
    177c:	55                   	push   rbp
    177d:	4e                   	rex.WRX
    177e:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    1781:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1785:	44                   	rex.R
    1786:	45                   	rex.RB
    1787:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    178a:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    178d:	41                   	rex.B
    178e:	4e 54                	rex.WRX push rsp
    1790:	5f                   	pop    rdi
    1791:	44                   	rex.R
    1792:	49                   	rex.WB
    1793:	47 5f                	rex.RXB pop r15
    1795:	5f                   	pop    rdi
    1796:	20 33                	and    BYTE PTR [rbx],dh
    1798:	34 00                	xor    al,0x0
    179a:	5f                   	pop    rdi
    179b:	5f                   	pop    rdi
    179c:	55                   	push   rbp
    179d:	53                   	push   rbx
    179e:	45 5f                	rex.RB pop r15
    17a0:	49 53                	rex.WB push r11
    17a2:	4f                   	rex.WRXB
    17a3:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    17a6:	20 31                	and    BYTE PTR [rcx],dh
    17a8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17ab:	49                   	rex.WB
    17ac:	4e 54                	rex.WRX push rsp
    17ae:	33 32                	xor    esi,DWORD PTR [rdx]
    17b0:	5f                   	pop    rdi
    17b1:	54                   	push   rsp
    17b2:	59                   	pop    rcx
    17b3:	50                   	push   rax
    17b4:	45 5f                	rex.RB pop r15
    17b6:	5f                   	pop    rdi
    17b7:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    17ba:	74 00                	je     17bc <__FRAME_END__+0xfc8>
    17bc:	5f                   	pop    rdi
    17bd:	5f                   	pop    rdi
    17be:	4b                   	rex.WXB
    17bf:	45 52                	rex.RB push r10
    17c1:	4e                   	rex.WRX
    17c2:	45                   	rex.RB
    17c3:	4c 5f                	rex.WR pop rdi
    17c5:	53                   	push   rbx
    17c6:	54                   	push   rsp
    17c7:	52                   	push   rdx
    17c8:	49                   	rex.WB
    17c9:	43 54                	rex.XB push r12
    17cb:	5f                   	pop    rdi
    17cc:	4e                   	rex.WRX
    17cd:	41                   	rex.B
    17ce:	4d                   	rex.WRB
    17cf:	45 53                	rex.RB push r11
    17d1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17d4:	55                   	push   rbp
    17d5:	33 32                	xor    esi,DWORD PTR [rdx]
    17d7:	5f                   	pop    rdi
    17d8:	54                   	push   rsp
    17d9:	59                   	pop    rcx
    17da:	50                   	push   rax
    17db:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    17df:	73 69                	jae    184a <__FRAME_END__+0x1056>
    17e1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17e3:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    17e8:	74 00                	je     17ea <__FRAME_END__+0xff6>
    17ea:	5f                   	pop    rdi
    17eb:	5f                   	pop    rdi
    17ec:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    17ef:	65 5f                	gs pop rdi
    17f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    17f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17f3:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    17f6:	5f                   	pop    rdi
    17f7:	73 6d                	jae    1866 <__FRAME_END__+0x1072>
    17f9:	61                   	(bad)  
    17fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    17fb:	6c                   	ins    BYTE PTR es:[rdi],dx
    17fc:	5f                   	pop    rdi
    17fd:	5f                   	pop    rdi
    17fe:	20 31                	and    BYTE PTR [rcx],dh
    1800:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1803:	55                   	push   rbp
    1804:	53                   	push   rbx
    1805:	45 5f                	rex.RB pop r15
    1807:	49 53                	rex.WB push r11
    1809:	4f                   	rex.WRXB
    180a:	43 39 35 00 5f 5f 46 	rex.XB cmp DWORD PTR [rip+0x465f5f00],esi        # 465f7711 <_end+0x463f66f9>
    1811:	4c 54                	rex.WR push rsp
    1813:	36 34 58             	ss xor al,0x58
    1816:	5f                   	pop    rdi
    1817:	48                   	rex.W
    1818:	41 53                	push   r11
    181a:	5f                   	pop    rdi
    181b:	44                   	rex.R
    181c:	45                   	rex.RB
    181d:	4e                   	rex.WRX
    181e:	4f 52                	rex.WRXB push r10
    1820:	4d 5f                	rex.WRB pop r15
    1822:	5f                   	pop    rdi
    1823:	20 31                	and    BYTE PTR [rcx],dh
    1825:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1828:	44                   	rex.R
    1829:	45                   	rex.RB
    182a:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    182d:	5f                   	pop    rdi
    182e:	4d                   	rex.WRB
    182f:	41 58                	pop    r8
    1831:	5f                   	pop    rdi
    1832:	45 58                	rex.RB pop r8
    1834:	50                   	push   rax
    1835:	5f                   	pop    rdi
    1836:	5f                   	pop    rdi
    1837:	20 39                	and    BYTE PTR [rcx],bh
    1839:	37                   	(bad)  
    183a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    183d:	4f                   	rex.WRXB
    183e:	4e                   	rex.WRX
    183f:	42                   	rex.X
    1840:	46 20 32             	rex.RX and BYTE PTR [rdx],r14b
    1843:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1846:	55                   	push   rbp
    1847:	53                   	push   rbx
    1848:	45 5f                	rex.RB pop r15
    184a:	49 53                	rex.WB push r11
    184c:	4f                   	rex.WRXB
    184d:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    1850:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    1853:	64 65 72 72          	fs gs jb 18c9 <__FRAME_END__+0x10d5>
    1857:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    185a:	64 65 72 72          	fs gs jb 18d0 <__FRAME_END__+0x10dc>
    185e:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    1861:	74 61                	je     18c4 <__FRAME_END__+0x10d0>
    1863:	62                   	(bad)  
    1864:	6c                   	ins    BYTE PTR es:[rdi],dx
    1865:	65 5f                	gs pop rdi
    1867:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1868:	66 66 73 65          	data16 data16 jae 18d1 <__FRAME_END__+0x10dd>
    186c:	74 00                	je     186e <__FRAME_END__+0x107a>
    186e:	5f                   	pop    rdi
    186f:	47 5f                	rex.RXB pop r15
    1871:	49                   	rex.WB
    1872:	4f 5f                	rex.WRXB pop r15
    1874:	49                   	rex.WB
    1875:	4f 5f                	rex.WRXB pop r15
    1877:	46                   	rex.RX
    1878:	49                   	rex.WB
    1879:	4c                   	rex.WR
    187a:	45 5f                	rex.RB pop r15
    187c:	56                   	push   rsi
    187d:	45 52                	rex.RB push r10
    187f:	53                   	push   rbx
    1880:	49                   	rex.WB
    1881:	4f                   	rex.WRXB
    1882:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    1885:	78 32                	js     18b9 <__FRAME_END__+0x10c5>
    1887:	30 30                	xor    BYTE PTR [rax],dh
    1889:	30 31                	xor    BYTE PTR [rcx],dh
    188b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    188e:	4f 5f                	rex.WRXB pop r15
    1890:	54                   	push   rsp
    1891:	49                   	rex.WB
    1892:	45                   	rex.RB
    1893:	44 5f                	rex.R pop rdi
    1895:	50                   	push   rax
    1896:	55                   	push   rbp
    1897:	54                   	push   rsp
    1898:	5f                   	pop    rdi
    1899:	47                   	rex.RXB
    189a:	45 54                	rex.RB push r12
    189c:	20 30                	and    BYTE PTR [rax],dh
    189e:	78 34                	js     18d4 <__FRAME_END__+0x10e0>
    18a0:	30 30                	xor    BYTE PTR [rax],dh
    18a2:	00 4c 5f 74          	add    BYTE PTR [rdi+rbx*2+0x74],cl
    18a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    18a7:	70 6e                	jo     1917 <__FRAME_END__+0x1123>
    18a9:	61                   	(bad)  
    18aa:	6d                   	ins    DWORD PTR es:[rdi],dx
    18ab:	20 32                	and    BYTE PTR [rdx],dh
    18ad:	30 00                	xor    BYTE PTR [rax],al
    18af:	5f                   	pop    rdi
    18b0:	49                   	rex.WB
    18b1:	4f 5f                	rex.WRXB pop r15
    18b3:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    18b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18b8:	75 70                	jne    192a <__FRAME_END__+0x1136>
    18ba:	5f                   	pop    rdi
    18bb:	72 65                	jb     1922 <__FRAME_END__+0x112e>
    18bd:	67 69 6f 6e 5f 73 74 	imul   ebp,DWORD PTR [edi+0x6e],0x6174735f
    18c4:	61 
    18c5:	72 74                	jb     193b <__FRAME_END__+0x1147>
    18c7:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    18ca:	63 74 2c 5f          	movsxd esi,DWORD PTR [rsp+rbp*1+0x5f]
    18ce:	66 70 29             	data16 jo 18fa <__FRAME_END__+0x1106>
    18d1:	20 00                	and    BYTE PTR [rax],al
    18d3:	5f                   	pop    rdi
    18d4:	5f                   	pop    rdi
    18d5:	53                   	push   rbx
    18d6:	54                   	push   rsp
    18d7:	44                   	rex.R
    18d8:	43 5f                	rex.XB pop r15
    18da:	49                   	rex.WB
    18db:	45                   	rex.RB
    18dc:	43 5f                	rex.XB pop r15
    18de:	35 35 39 5f 43       	xor    eax,0x435f3935
    18e3:	4f                   	rex.WRXB
    18e4:	4d 50                	rex.WRB push r8
    18e6:	4c                   	rex.WR
    18e7:	45 58                	rex.RB pop r8
    18e9:	5f                   	pop    rdi
    18ea:	5f                   	pop    rdi
    18eb:	20 31                	and    BYTE PTR [rcx],dh
    18ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18f0:	47                   	rex.RXB
    18f1:	4c                   	rex.WR
    18f2:	49                   	rex.WB
    18f3:	42                   	rex.X
    18f4:	43 5f                	rex.XB pop r15
    18f6:	55                   	push   rbp
    18f7:	53                   	push   rbx
    18f8:	45 5f                	rex.RB pop r15
    18fa:	44                   	rex.R
    18fb:	45 50                	rex.RB push r8
    18fd:	52                   	push   rdx
    18fe:	45                   	rex.RB
    18ff:	43                   	rex.XB
    1900:	41 54                	push   r12
    1902:	45                   	rex.RB
    1903:	44 5f                	rex.R pop rdi
    1905:	47                   	rex.RXB
    1906:	45 54                	rex.RB push r12
    1908:	53                   	push   rbx
    1909:	20 30                	and    BYTE PTR [rax],dh
    190b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    190e:	4f 5f                	rex.WRXB pop r15
    1910:	48                   	rex.W
    1911:	45 58                	rex.RB pop r8
    1913:	20 30                	and    BYTE PTR [rax],dh
    1915:	31 30                	xor    DWORD PTR [rax],esi
    1917:	30 00                	xor    BYTE PTR [rax],al
    1919:	5f                   	pop    rdi
    191a:	5f                   	pop    rdi
    191b:	46                   	rex.RX
    191c:	4c 54                	rex.WR push rsp
    191e:	36 34 58             	ss xor al,0x58
    1921:	5f                   	pop    rdi
    1922:	4d                   	rex.WRB
    1923:	49                   	rex.WB
    1924:	4e 5f                	rex.WRX pop rdi
    1926:	31 30                	xor    DWORD PTR [rax],esi
    1928:	5f                   	pop    rdi
    1929:	45 58                	rex.RB pop r8
    192b:	50                   	push   rax
    192c:	5f                   	pop    rdi
    192d:	5f                   	pop    rdi
    192e:	20 28                	and    BYTE PTR [rax],ch
    1930:	2d 34 39 33 31       	sub    eax,0x31333934
    1935:	29 00                	sub    DWORD PTR [rax],eax
    1937:	5f                   	pop    rdi
    1938:	5f                   	pop    rdi
    1939:	73 74                	jae    19af <__FRAME_END__+0x11bb>
    193b:	75 62                	jne    199f <__FRAME_END__+0x11ab>
    193d:	5f                   	pop    rdi
    193e:	70 75                	jo     19b5 <__FRAME_END__+0x11c1>
    1940:	74 6d                	je     19af <__FRAME_END__+0x11bb>
    1942:	73 67                	jae    19ab <__FRAME_END__+0x11b7>
    1944:	20 00                	and    BYTE PTR [rax],al
    1946:	5f                   	pop    rdi
    1947:	49                   	rex.WB
    1948:	4f 5f                	rex.WRXB pop r15
    194a:	72 65                	jb     19b1 <__FRAME_END__+0x11bd>
    194c:	61                   	(bad)  
    194d:	64 5f                	fs pop rdi
    194f:	62 61                	(bad)  
    1951:	73 65                	jae    19b8 <__FRAME_END__+0x11c4>
    1953:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1956:	53                   	push   rbx
    1957:	54                   	push   rsp
    1958:	44                   	rex.R
    1959:	43 5f                	rex.XB pop r15
    195b:	49 53                	rex.WB push r11
    195d:	4f 5f                	rex.WRXB pop r15
    195f:	31 30                	xor    DWORD PTR [rax],esi
    1961:	36 34 36             	ss xor al,0x36
    1964:	5f                   	pop    rdi
    1965:	5f                   	pop    rdi
    1966:	20 32                	and    BYTE PTR [rdx],dh
    1968:	30 31                	xor    BYTE PTR [rcx],dh
    196a:	37                   	(bad)  
    196b:	30 36                	xor    BYTE PTR [rsi],dh
    196d:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1971:	42                   	rex.X
    1972:	45                   	rex.RB
    1973:	47                   	rex.RXB
    1974:	49                   	rex.WB
    1975:	4e 5f                	rex.WRX pop rdi
    1977:	44                   	rex.R
    1978:	45                   	rex.RB
    1979:	43                   	rex.XB
    197a:	4c 53                	rex.WR push rbx
    197c:	20 00                	and    BYTE PTR [rax],al
    197e:	5f                   	pop    rdi
    197f:	49                   	rex.WB
    1980:	4f 5f                	rex.WRXB pop r15
    1982:	73 74                	jae    19f8 <__FRAME_END__+0x1204>
    1984:	64 69 6e 20 28 28 5f 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x495f2828
    198b:	49 
    198c:	4f 5f                	rex.WRXB pop r15
    198e:	46                   	rex.RX
    198f:	49                   	rex.WB
    1990:	4c                   	rex.WR
    1991:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1994:	28 26                	sub    BYTE PTR [rsi],ah
    1996:	5f                   	pop    rdi
    1997:	49                   	rex.WB
    1998:	4f 5f                	rex.WRXB pop r15
    199a:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    199d:	5f                   	pop    rdi
    199e:	73 74                	jae    1a14 <__FRAME_END__+0x1220>
    19a0:	64 69 6e 5f 29 29 00 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x5f002929
    19a7:	5f 
    19a8:	5f                   	pop    rdi
    19a9:	46                   	rex.RX
    19aa:	4c 54                	rex.WR push rsp
    19ac:	31 32                	xor    DWORD PTR [rdx],esi
    19ae:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    19b1:	41 58                	pop    r8
    19b3:	5f                   	pop    rdi
    19b4:	31 30                	xor    DWORD PTR [rax],esi
    19b6:	5f                   	pop    rdi
    19b7:	45 58                	rex.RB pop r8
    19b9:	50                   	push   rax
    19ba:	5f                   	pop    rdi
    19bb:	5f                   	pop    rdi
    19bc:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    19bf:	33 32                	xor    esi,DWORD PTR [rdx]
    19c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19c4:	46                   	rex.RX
    19c5:	4c 54                	rex.WR push rsp
    19c7:	31 32                	xor    DWORD PTR [rdx],esi
    19c9:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    19cc:	49                   	rex.WB
    19cd:	4e 5f                	rex.WRX pop rdi
    19cf:	5f                   	pop    rdi
    19d0:	20 33                	and    BYTE PTR [rbx],dh
    19d2:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    19d5:	32 31                	xor    dh,BYTE PTR [rcx]
    19d7:	30 33                	xor    BYTE PTR [rbx],dh
    19d9:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    19dc:	31 31                	xor    DWORD PTR [rcx],esi
    19de:	32 30                	xor    dh,BYTE PTR [rax]
    19e0:	39 33                	cmp    DWORD PTR [rbx],esi
    19e2:	35 30 36 32 36       	xor    eax,0x36323630
    19e7:	32 36                	xor    dh,BYTE PTR [rsi]
    19e9:	37                   	(bad)  
    19ea:	37                   	(bad)  
    19eb:	38 31                	cmp    BYTE PTR [rcx],dh
    19ed:	37                   	(bad)  
    19ee:	33 32                	xor    esi,DWORD PTR [rdx]
    19f0:	31 37                	xor    DWORD PTR [rdi],esi
    19f2:	35 32 36 30 65       	xor    eax,0x65303632
    19f7:	2d 34 39 33 32       	sub    eax,0x32333934
    19fc:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    19ff:	38 00                	cmp    BYTE PTR [rax],al
    1a01:	5f                   	pop    rdi
    1a02:	5f                   	pop    rdi
    1a03:	53                   	push   rbx
    1a04:	55                   	push   rbp
    1a05:	53                   	push   rbx
    1a06:	45                   	rex.RB
    1a07:	43                   	rex.XB
    1a08:	4f                   	rex.WRXB
    1a09:	4e                   	rex.WRX
    1a0a:	44 53                	rex.R push rbx
    1a0c:	5f                   	pop    rdi
    1a0d:	54                   	push   rsp
    1a0e:	5f                   	pop    rdi
    1a0f:	54                   	push   rsp
    1a10:	59                   	pop    rcx
    1a11:	50                   	push   rax
    1a12:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1a16:	53                   	push   rbx
    1a17:	59                   	pop    rcx
    1a18:	53                   	push   rbx
    1a19:	43                   	rex.XB
    1a1a:	41                   	rex.B
    1a1b:	4c                   	rex.WR
    1a1c:	4c 5f                	rex.WR pop rdi
    1a1e:	53                   	push   rbx
    1a1f:	4c                   	rex.WR
    1a20:	4f                   	rex.WRXB
    1a21:	4e                   	rex.WRX
    1a22:	47 5f                	rex.RXB pop r15
    1a24:	54                   	push   rsp
    1a25:	59                   	pop    rcx
    1a26:	50                   	push   rax
    1a27:	45 00 53 45          	add    BYTE PTR [r11+0x45],r10b
    1a2b:	45                   	rex.RB
    1a2c:	4b 5f                	rex.WXB pop r15
    1a2e:	45                   	rex.RB
    1a2f:	4e                   	rex.WRX
    1a30:	44 20 32             	and    BYTE PTR [rdx],r14b
    1a33:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a36:	49                   	rex.WB
    1a37:	4e 54                	rex.WRX push rsp
    1a39:	5f                   	pop    rdi
    1a3a:	46                   	rex.RX
    1a3b:	41 53                	push   r11
    1a3d:	54                   	push   rsp
    1a3e:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    1a41:	49                   	rex.WB
    1a42:	44 54                	rex.R push rsp
    1a44:	48 5f                	rex.W pop rdi
    1a46:	5f                   	pop    rdi
    1a47:	20 38                	and    BYTE PTR [rax],bh
    1a49:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a4c:	46                   	rex.RX
    1a4d:	4c 54                	rex.WR push rsp
    1a4f:	36 34 5f             	ss xor al,0x5f
    1a52:	4d                   	rex.WRB
    1a53:	49                   	rex.WB
    1a54:	4e 5f                	rex.WRX pop rdi
    1a56:	31 30                	xor    DWORD PTR [rax],esi
    1a58:	5f                   	pop    rdi
    1a59:	45 58                	rex.RB pop r8
    1a5b:	50                   	push   rax
    1a5c:	5f                   	pop    rdi
    1a5d:	5f                   	pop    rdi
    1a5e:	20 28                	and    BYTE PTR [rax],ch
    1a60:	2d 33 30 37 29       	sub    eax,0x29373033
    1a65:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a68:	73 74                	jae    1ade <__FRAME_END__+0x12ea>
    1a6a:	75 62                	jne    1ace <__FRAME_END__+0x12da>
    1a6c:	5f                   	pop    rdi
    1a6d:	66 64 65 74 61       	data16 fs gs je 1ad3 <__FRAME_END__+0x12df>
    1a72:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1a75:	00 5f 6e             	add    BYTE PTR [rdi+0x6e],bl
    1a78:	65 78 74             	gs js  1aef <__FRAME_END__+0x12fb>
    1a7b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a7e:	44                   	rex.R
    1a7f:	42                   	rex.X
    1a80:	4c 5f                	rex.WR pop rdi
    1a82:	4d                   	rex.WRB
    1a83:	41 58                	pop    r8
    1a85:	5f                   	pop    rdi
    1a86:	5f                   	pop    rdi
    1a87:	20 28                	and    BYTE PTR [rax],ch
    1a89:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    1a8d:	62                   	(bad)  
    1a8e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a8f:	65 29 31             	sub    DWORD PTR gs:[rcx],esi
    1a92:	2e 37                	cs (bad) 
    1a94:	39 37                	cmp    DWORD PTR [rdi],esi
    1a96:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    1a99:	31 33                	xor    DWORD PTR [rbx],esi
    1a9b:	34 38                	xor    al,0x38
    1a9d:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    1aa0:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31384add <_end+0x31183ac5>
    1aa6:	34 35                	xor    al,0x35
    1aa8:	32 37                	xor    dh,BYTE PTR [rdi]
    1aaa:	34 32                	xor    al,0x32
    1aac:	33 37                	xor    esi,DWORD PTR [rdi]
    1aae:	33 31                	xor    esi,DWORD PTR [rcx]
    1ab0:	37                   	(bad)  
    1ab1:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    1ab4:	35 37 65 2b 33       	xor    eax,0x332b6537
    1ab9:	30 38                	xor    BYTE PTR [rax],bh
    1abb:	4c 29 00             	sub    QWORD PTR [rax],r8
    1abe:	5f                   	pop    rdi
    1abf:	44                   	rex.R
    1ac0:	45                   	rex.RB
    1ac1:	46                   	rex.RX
    1ac2:	41 55                	push   r13
    1ac4:	4c 54                	rex.WR push rsp
    1ac6:	5f                   	pop    rdi
    1ac7:	53                   	push   rbx
    1ac8:	4f 55                	rex.WRXB push r13
    1aca:	52                   	push   rdx
    1acb:	43                   	rex.XB
    1acc:	45 20 31             	and    BYTE PTR [r9],r14b
    1acf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ad2:	52                   	push   rdx
    1ad3:	4c                   	rex.WR
    1ad4:	49                   	rex.WB
    1ad5:	4d 5f                	rex.WRB pop r15
    1ad7:	54                   	push   rsp
    1ad8:	5f                   	pop    rdi
    1ad9:	4d                   	rex.WRB
    1ada:	41 54                	push   r12
    1adc:	43                   	rex.XB
    1add:	48                   	rex.W
    1ade:	45 53                	rex.RB push r11
    1ae0:	5f                   	pop    rdi
    1ae1:	52                   	push   rdx
    1ae2:	4c                   	rex.WR
    1ae3:	49                   	rex.WB
    1ae4:	4d                   	rex.WRB
    1ae5:	36 34 5f             	ss xor al,0x5f
    1ae8:	54                   	push   rsp
    1ae9:	20 31                	and    BYTE PTR [rcx],dh
    1aeb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1aee:	61                   	(bad)  
    1aef:	6d                   	ins    DWORD PTR es:[rdi],dx
    1af0:	64 36 34 5f          	fs ss xor al,0x5f
    1af4:	5f                   	pop    rdi
    1af5:	20 31                	and    BYTE PTR [rcx],dh
    1af7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1afa:	5f                   	pop    rdi
    1afb:	5f                   	pop    rdi
    1afc:	6d                   	ins    DWORD PTR es:[rdi],dx
    1afd:	62 73 74 61 74       	(bad)  {k1}
    1b02:	65 5f                	gs pop rdi
    1b04:	74 5f                	je     1b65 <__FRAME_END__+0x1371>
    1b06:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    1b0d:	20 
    1b0e:	31 00                	xor    DWORD PTR [rax],eax
    1b10:	5f                   	pop    rdi
    1b11:	49                   	rex.WB
    1b12:	4f 5f                	rex.WRXB pop r15
    1b14:	44                   	rex.R
    1b15:	45                   	rex.RB
    1b16:	4c                   	rex.WR
    1b17:	45 54                	rex.RB push r12
    1b19:	45 5f                	rex.RB pop r15
    1b1b:	44                   	rex.R
    1b1c:	4f                   	rex.WRXB
    1b1d:	4e 54                	rex.WRX push rsp
    1b1f:	5f                   	pop    rdi
    1b20:	43                   	rex.XB
    1b21:	4c                   	rex.WR
    1b22:	4f 53                	rex.WRXB push r11
    1b24:	45 20 30             	and    BYTE PTR [r8],r14b
    1b27:	78 34                	js     1b5d <__FRAME_END__+0x1369>
    1b29:	30 00                	xor    BYTE PTR [rax],al
    1b2b:	5f                   	pop    rdi
    1b2c:	5f                   	pop    rdi
    1b2d:	46                   	rex.RX
    1b2e:	4c 54                	rex.WR push rsp
    1b30:	33 32                	xor    esi,DWORD PTR [rdx]
    1b32:	5f                   	pop    rdi
    1b33:	44                   	rex.R
    1b34:	45                   	rex.RB
    1b35:	43                   	rex.XB
    1b36:	49                   	rex.WB
    1b37:	4d                   	rex.WRB
    1b38:	41                   	rex.B
    1b39:	4c 5f                	rex.WR pop rdi
    1b3b:	44                   	rex.R
    1b3c:	49                   	rex.WB
    1b3d:	47 5f                	rex.RXB pop r15
    1b3f:	5f                   	pop    rdi
    1b40:	20 39                	and    BYTE PTR [rcx],bh
    1b42:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1b45:	46                   	rex.RX
    1b46:	4c 54                	rex.WR push rsp
    1b48:	31 32                	xor    DWORD PTR [rdx],esi
    1b4a:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    1b4d:	49                   	rex.WB
    1b4e:	47 5f                	rex.RXB pop r15
    1b50:	5f                   	pop    rdi
    1b51:	20 33                	and    BYTE PTR [rbx],dh
    1b53:	33 00                	xor    eax,DWORD PTR [rax]
    1b55:	5f                   	pop    rdi
    1b56:	5f                   	pop    rdi
    1b57:	55                   	push   rbp
    1b58:	49                   	rex.WB
    1b59:	4e 54                	rex.WRX push rsp
    1b5b:	31 36                	xor    DWORD PTR [rsi],esi
    1b5d:	5f                   	pop    rdi
    1b5e:	54                   	push   rsp
    1b5f:	59                   	pop    rcx
    1b60:	50                   	push   rax
    1b61:	45 5f                	rex.RB pop r15
    1b63:	5f                   	pop    rdi
    1b64:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1b67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b68:	72 74                	jb     1bde <__FRAME_END__+0x13ea>
    1b6a:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1b6d:	73 69                	jae    1bd8 <__FRAME_END__+0x13e4>
    1b6f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1b71:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1b76:	74 00                	je     1b78 <__FRAME_END__+0x1384>
    1b78:	5f                   	pop    rdi
    1b79:	5f                   	pop    rdi
    1b7a:	53                   	push   rbx
    1b7b:	54                   	push   rsp
    1b7c:	44                   	rex.R
    1b7d:	43 5f                	rex.XB pop r15
    1b7f:	55                   	push   rbp
    1b80:	54                   	push   rsp
    1b81:	46 5f                	rex.RX pop rdi
    1b83:	31 36                	xor    DWORD PTR [rsi],esi
    1b85:	5f                   	pop    rdi
    1b86:	5f                   	pop    rdi
    1b87:	20 31                	and    BYTE PTR [rcx],dh
    1b89:	00 5f 4f             	add    BYTE PTR [rdi+0x4f],bl
    1b8c:	4c                   	rex.WR
    1b8d:	44 5f                	rex.R pop rdi
    1b8f:	53                   	push   rbx
    1b90:	54                   	push   rsp
    1b91:	44                   	rex.R
    1b92:	49                   	rex.WB
    1b93:	4f 5f                	rex.WRXB pop r15
    1b95:	4d                   	rex.WRB
    1b96:	41                   	rex.B
    1b97:	47                   	rex.RXB
    1b98:	49                   	rex.WB
    1b99:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    1b9c:	78 46                	js     1be4 <__FRAME_END__+0x13f0>
    1b9e:	41                   	rex.B
    1b9f:	42                   	rex.X
    1ba0:	43 30 30             	rex.XB xor BYTE PTR [r8],sil
    1ba3:	30 30                	xor    BYTE PTR [rax],dh
    1ba5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1ba8:	4f 53                	rex.WRXB push r11
    1baa:	5f                   	pop    rdi
    1bab:	4e                   	rex.WRX
    1bac:	4f                   	rex.WRXB
    1bad:	43 52                	rex.XB push r10
    1baf:	45                   	rex.RB
    1bb0:	41 54                	push   r12
    1bb2:	45 20 33             	and    BYTE PTR [r11],r14b
    1bb5:	32 00                	xor    al,BYTE PTR [rax]
    1bb7:	5f                   	pop    rdi
    1bb8:	5f                   	pop    rdi
    1bb9:	57                   	push   rdi
    1bba:	43                   	rex.XB
    1bbb:	48                   	rex.W
    1bbc:	41 52                	push   r10
    1bbe:	5f                   	pop    rdi
    1bbf:	57                   	push   rdi
    1bc0:	49                   	rex.WB
    1bc1:	44 54                	rex.R push rsp
    1bc3:	48 5f                	rex.W pop rdi
    1bc5:	5f                   	pop    rdi
    1bc6:	20 33                	and    BYTE PTR [rbx],dh
    1bc8:	32 00                	xor    al,BYTE PTR [rax]
    1bca:	5f                   	pop    rdi
    1bcb:	5f                   	pop    rdi
    1bcc:	47                   	rex.RXB
    1bcd:	43                   	rex.XB
    1bce:	43 5f                	rex.XB pop r15
    1bd0:	41 54                	push   r12
    1bd2:	4f                   	rex.WRXB
    1bd3:	4d                   	rex.WRB
    1bd4:	49                   	rex.WB
    1bd5:	43 5f                	rex.XB pop r15
    1bd7:	43                   	rex.XB
    1bd8:	48                   	rex.W
    1bd9:	41 52                	push   r10
    1bdb:	5f                   	pop    rdi
    1bdc:	4c                   	rex.WR
    1bdd:	4f                   	rex.WRXB
    1bde:	43                   	rex.XB
    1bdf:	4b 5f                	rex.WXB pop r15
    1be1:	46 52                	rex.RX push rdx
    1be3:	45                   	rex.RB
    1be4:	45 20 32             	and    BYTE PTR [r10],r14b
    1be7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1bea:	4f 5f                	rex.WRXB pop r15
    1bec:	6d                   	ins    DWORD PTR es:[rdi],dx
    1bed:	61                   	(bad)  
    1bee:	72 6b                	jb     1c5b <__FRAME_END__+0x1467>
    1bf0:	65 72 00             	gs jb  1bf3 <__FRAME_END__+0x13ff>
    1bf3:	5f                   	pop    rdi
    1bf4:	5f                   	pop    rdi
    1bf5:	49                   	rex.WB
    1bf6:	4e 54                	rex.WRX push rsp
    1bf8:	5f                   	pop    rdi
    1bf9:	4c                   	rex.WR
    1bfa:	45                   	rex.RB
    1bfb:	41 53                	push   r11
    1bfd:	54                   	push   rsp
    1bfe:	33 32                	xor    esi,DWORD PTR [rdx]
    1c00:	5f                   	pop    rdi
    1c01:	4d                   	rex.WRB
    1c02:	41 58                	pop    r8
    1c04:	5f                   	pop    rdi
    1c05:	5f                   	pop    rdi
    1c06:	20 30                	and    BYTE PTR [rax],dh
    1c08:	78 37                	js     1c41 <__FRAME_END__+0x144d>
    1c0a:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    1c11:	00 5f 5f 
    1c14:	4c                   	rex.WR
    1c15:	4f                   	rex.WRXB
    1c16:	4e                   	rex.WRX
    1c17:	47 5f                	rex.RXB pop r15
    1c19:	4c                   	rex.WR
    1c1a:	4f                   	rex.WRXB
    1c1b:	4e                   	rex.WRX
    1c1c:	47 5f                	rex.RXB pop r15
    1c1e:	4d                   	rex.WRB
    1c1f:	41 58                	pop    r8
    1c21:	5f                   	pop    rdi
    1c22:	5f                   	pop    rdi
    1c23:	20 30                	and    BYTE PTR [rax],dh
    1c25:	78 37                	js     1c5e <__FRAME_END__+0x146a>
    1c27:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1c2e:	66 66 66 66 66 66 66 
    1c35:	66 4c                	data16 rex.WR
    1c37:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1c3b:	55                   	push   rbp
    1c3c:	4c                   	rex.WR
    1c3d:	4f                   	rex.WRXB
    1c3e:	4e                   	rex.WRX
    1c3f:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    1c42:	5f                   	pop    rdi
    1c43:	54                   	push   rsp
    1c44:	59                   	pop    rcx
    1c45:	50                   	push   rax
    1c46:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    1c4a:	73 69                	jae    1cb5 <__FRAME_END__+0x14c1>
    1c4c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c4e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c53:	74 00                	je     1c55 <__FRAME_END__+0x1461>
    1c55:	5f                   	pop    rdi
    1c56:	5f                   	pop    rdi
    1c57:	55                   	push   rbp
    1c58:	49                   	rex.WB
    1c59:	4e 54                	rex.WRX push rsp
    1c5b:	5f                   	pop    rdi
    1c5c:	4c                   	rex.WR
    1c5d:	45                   	rex.RB
    1c5e:	41 53                	push   r11
    1c60:	54                   	push   rsp
    1c61:	31 36                	xor    DWORD PTR [rsi],esi
    1c63:	5f                   	pop    rdi
    1c64:	54                   	push   rsp
    1c65:	59                   	pop    rcx
    1c66:	50                   	push   rax
    1c67:	45 5f                	rex.RB pop r15
    1c69:	5f                   	pop    rdi
    1c6a:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1c6d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c6e:	72 74                	jb     1ce4 <__FRAME_END__+0x14f0>
    1c70:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1c73:	73 69                	jae    1cde <__FRAME_END__+0x14ea>
    1c75:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c77:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c7c:	74 00                	je     1c7e <__FRAME_END__+0x148a>
    1c7e:	5f                   	pop    rdi
    1c7f:	5f                   	pop    rdi
    1c80:	46                   	rex.RX
    1c81:	4c 54                	rex.WR push rsp
    1c83:	5f                   	pop    rdi
    1c84:	4d                   	rex.WRB
    1c85:	41 58                	pop    r8
    1c87:	5f                   	pop    rdi
    1c88:	31 30                	xor    DWORD PTR [rax],esi
    1c8a:	5f                   	pop    rdi
    1c8b:	45 58                	rex.RB pop r8
    1c8d:	50                   	push   rax
    1c8e:	5f                   	pop    rdi
    1c8f:	5f                   	pop    rdi
    1c90:	20 33                	and    BYTE PTR [rbx],dh
    1c92:	38 00                	cmp    BYTE PTR [rax],al
    1c94:	5f                   	pop    rdi
    1c95:	49                   	rex.WB
    1c96:	4f 5f                	rex.WRXB pop r15
    1c98:	53                   	push   rbx
    1c99:	4b                   	rex.WXB
    1c9a:	49 50                	rex.WB push r8
    1c9c:	57                   	push   rdi
    1c9d:	53                   	push   rbx
    1c9e:	20 30                	and    BYTE PTR [rax],dh
    1ca0:	31 00                	xor    DWORD PTR [rax],eax
    1ca2:	5f                   	pop    rdi
    1ca3:	5f                   	pop    rdi
    1ca4:	46                   	rex.RX
    1ca5:	4c 54                	rex.WR push rsp
    1ca7:	33 32                	xor    esi,DWORD PTR [rdx]
    1ca9:	58                   	pop    rax
    1caa:	5f                   	pop    rdi
    1cab:	45 50                	rex.RB push r8
    1cad:	53                   	push   rbx
    1cae:	49                   	rex.WB
    1caf:	4c                   	rex.WR
    1cb0:	4f                   	rex.WRXB
    1cb1:	4e 5f                	rex.WRX pop rdi
    1cb3:	5f                   	pop    rdi
    1cb4:	20 32                	and    BYTE PTR [rdx],dh
    1cb6:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    1cb9:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    1cbc:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    1cc0:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33314ff6 <_end+0x33113fde>
    1cc6:	30 38                	xor    BYTE PTR [rax],bh
    1cc8:	30 38                	xor    BYTE PTR [rax],bh
    1cca:	34 37                	xor    al,0x37
    1ccc:	32 36                	xor    dh,BYTE PTR [rsi]
    1cce:	33 33                	xor    esi,DWORD PTR [rbx]
    1cd0:	33 36                	xor    esi,DWORD PTR [rsi]
    1cd2:	31 38                	xor    DWORD PTR [rax],edi
    1cd4:	31 36                	xor    DWORD PTR [rsi],esi
    1cd6:	34 30                	xor    al,0x30
    1cd8:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    1cdc:	31 36                	xor    DWORD PTR [rsi],esi
    1cde:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    1ce1:	78 00                	js     1ce3 <__FRAME_END__+0x14ef>
    1ce3:	4e 55                	rex.WRX push rbp
    1ce5:	4c                   	rex.WR
    1ce6:	4c 20 28             	rex.WR and BYTE PTR [rax],r13b
    1ce9:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    1cec:	69 64 20 2a 29 30 29 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x293029
    1cf3:	00 
    1cf4:	61                   	(bad)  
    1cf5:	72 67                	jb     1d5e <__FRAME_END__+0x156a>
    1cf7:	76 00                	jbe    1cf9 <__FRAME_END__+0x1505>
    1cf9:	5f                   	pop    rdi
    1cfa:	5f                   	pop    rdi
    1cfb:	55                   	push   rbp
    1cfc:	53                   	push   rbx
    1cfd:	45 5f                	rex.RB pop r15
    1cff:	50                   	push   rax
    1d00:	4f 53                	rex.WRXB push r11
    1d02:	49 58                	rex.WB pop r8
    1d04:	5f                   	pop    rdi
    1d05:	49                   	rex.WB
    1d06:	4d 50                	rex.WRB push r8
    1d08:	4c                   	rex.WR
    1d09:	49                   	rex.WB
    1d0a:	43                   	rex.XB
    1d0b:	49 54                	rex.WB push r12
    1d0d:	4c 59                	rex.WR pop rcx
    1d0f:	20 31                	and    BYTE PTR [rcx],dh
    1d11:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d14:	4f 5f                	rex.WRXB pop r15
    1d16:	66 65 6f             	outs   dx,WORD PTR gs:[rsi]
    1d19:	66 5f                	pop    di
    1d1b:	75 6e                	jne    1d8b <__FRAME_END__+0x1597>
    1d1d:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d1f:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1d22:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
    1d26:	66 70 29             	data16 jo 1d52 <__FRAME_END__+0x155e>
    1d29:	20 28                	and    BYTE PTR [rax],ch
    1d2b:	28 28                	sub    BYTE PTR [rax],ch
    1d2d:	5f                   	pop    rdi
    1d2e:	5f                   	pop    rdi
    1d2f:	66 70 29             	data16 jo 1d5b <__FRAME_END__+0x1567>
    1d32:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    1d37:	61                   	(bad)  
    1d38:	67 73 20             	addr32 jae 1d5b <__FRAME_END__+0x1567>
    1d3b:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
    1d3f:	4f 5f                	rex.WRXB pop r15
    1d41:	45                   	rex.RB
    1d42:	4f                   	rex.WRXB
    1d43:	46 5f                	rex.RX pop rdi
    1d45:	53                   	push   rbx
    1d46:	45                   	rex.RB
    1d47:	45                   	rex.RB
    1d48:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
    1d4b:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 294d71 <_end+0x93d59>
    1d51:	5f                   	pop    rdi
    1d52:	5f                   	pop    rdi
    1d53:	4e                   	rex.WRX
    1d54:	4f 5f                	rex.WRXB pop r15
    1d56:	49                   	rex.WB
    1d57:	4e                   	rex.WRX
    1d58:	4c                   	rex.WR
    1d59:	49                   	rex.WB
    1d5a:	4e                   	rex.WRX
    1d5b:	45 5f                	rex.RB pop r15
    1d5d:	5f                   	pop    rdi
    1d5e:	20 31                	and    BYTE PTR [rcx],dh
    1d60:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d63:	4f 5f                	rex.WRXB pop r15
    1d65:	73 74                	jae    1ddb <__FRAME_END__+0x15e7>
    1d67:	64 65 72 72          	fs gs jb 1ddd <__FRAME_END__+0x15e9>
    1d6b:	20 28                	and    BYTE PTR [rax],ch
    1d6d:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    1d70:	4f 5f                	rex.WRXB pop r15
    1d72:	46                   	rex.RX
    1d73:	49                   	rex.WB
    1d74:	4c                   	rex.WR
    1d75:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1d78:	28 26                	sub    BYTE PTR [rsi],ah
    1d7a:	5f                   	pop    rdi
    1d7b:	49                   	rex.WB
    1d7c:	4f 5f                	rex.WRXB pop r15
    1d7e:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1d81:	5f                   	pop    rdi
    1d82:	73 74                	jae    1df8 <__FRAME_END__+0x1604>
    1d84:	64 65 72 72          	fs gs jb 1dfa <__FRAME_END__+0x1606>
    1d88:	5f                   	pop    rdi
    1d89:	29 29                	sub    DWORD PTR [rcx],ebp
    1d8b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d8e:	76 61                	jbe    1df1 <__FRAME_END__+0x15fd>
    1d90:	5f                   	pop    rdi
    1d91:	61                   	(bad)  
    1d92:	72 67                	jb     1dfb <__FRAME_END__+0x1607>
    1d94:	5f                   	pop    rdi
    1d95:	70 61                	jo     1df8 <__FRAME_END__+0x1604>
    1d97:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    1d9a:	29 20                	sub    DWORD PTR [rax],esp
    1d9c:	5f                   	pop    rdi
    1d9d:	5f                   	pop    rdi
    1d9e:	62                   	(bad)  
    1d9f:	75 69                	jne    1e0a <__FRAME_END__+0x1616>
    1da1:	6c                   	ins    BYTE PTR es:[rdi],dx
    1da2:	74 69                	je     1e0d <__FRAME_END__+0x1619>
    1da4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1da5:	5f                   	pop    rdi
    1da6:	76 61                	jbe    1e09 <__FRAME_END__+0x1615>
    1da8:	5f                   	pop    rdi
    1da9:	61                   	(bad)  
    1daa:	72 67                	jb     1e13 <__FRAME_END__+0x161f>
    1dac:	5f                   	pop    rdi
    1dad:	70 61                	jo     1e10 <__FRAME_END__+0x161c>
    1daf:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    1db2:	28 29                	sub    BYTE PTR [rcx],ch
    1db4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1db7:	46                   	rex.RX
    1db8:	4c 54                	rex.WR push rsp
    1dba:	5f                   	pop    rdi
    1dbb:	4d                   	rex.WRB
    1dbc:	41                   	rex.B
    1dbd:	4e 54                	rex.WRX push rsp
    1dbf:	5f                   	pop    rdi
    1dc0:	44                   	rex.R
    1dc1:	49                   	rex.WB
    1dc2:	47 5f                	rex.RXB pop r15
    1dc4:	5f                   	pop    rdi
    1dc5:	20 32                	and    BYTE PTR [rdx],dh
    1dc7:	34 00                	xor    al,0x0
    1dc9:	5f                   	pop    rdi
    1dca:	5f                   	pop    rdi
    1dcb:	44                   	rex.R
    1dcc:	41                   	rex.B
    1dcd:	44                   	rex.R
    1dce:	44 52                	rex.R push rdx
    1dd0:	5f                   	pop    rdi
    1dd1:	54                   	push   rsp
    1dd2:	5f                   	pop    rdi
    1dd3:	54                   	push   rsp
    1dd4:	59                   	pop    rcx
    1dd5:	50                   	push   rax
    1dd6:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1dda:	53                   	push   rbx
    1ddb:	33 32                	xor    esi,DWORD PTR [rdx]
    1ddd:	5f                   	pop    rdi
    1dde:	54                   	push   rsp
    1ddf:	59                   	pop    rcx
    1de0:	50                   	push   rax
    1de1:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1de5:	46                   	rex.RX
    1de6:	4c 54                	rex.WR push rsp
    1de8:	36 34 5f             	ss xor al,0x5f
    1deb:	44                   	rex.R
    1dec:	45                   	rex.RB
    1ded:	43                   	rex.XB
    1dee:	49                   	rex.WB
    1def:	4d                   	rex.WRB
    1df0:	41                   	rex.B
    1df1:	4c 5f                	rex.WR pop rdi
    1df3:	44                   	rex.R
    1df4:	49                   	rex.WB
    1df5:	47 5f                	rex.RXB pop r15
    1df7:	5f                   	pop    rdi
    1df8:	20 31                	and    BYTE PTR [rcx],dh
    1dfa:	37                   	(bad)  
    1dfb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dfe:	47                   	rex.RXB
    1dff:	43                   	rex.XB
    1e00:	43 5f                	rex.XB pop r15
    1e02:	48                   	rex.W
    1e03:	41 56                	push   r14
    1e05:	45 5f                	rex.RB pop r15
    1e07:	53                   	push   rbx
    1e08:	59                   	pop    rcx
    1e09:	4e                   	rex.WRX
    1e0a:	43 5f                	rex.XB pop r15
    1e0c:	43                   	rex.XB
    1e0d:	4f                   	rex.WRXB
    1e0e:	4d 50                	rex.WRB push r8
    1e10:	41 52                	push   r10
    1e12:	45 5f                	rex.RB pop r15
    1e14:	41                   	rex.B
    1e15:	4e                   	rex.WRX
    1e16:	44 5f                	rex.R pop rdi
    1e18:	53                   	push   rbx
    1e19:	57                   	push   rdi
    1e1a:	41 50                	push   r8
    1e1c:	5f                   	pop    rdi
    1e1d:	34 20                	xor    al,0x20
    1e1f:	31 00                	xor    DWORD PTR [rax],eax
    1e21:	5f                   	pop    rdi
    1e22:	5f                   	pop    rdi
    1e23:	46                   	rex.RX
    1e24:	4c 54                	rex.WR push rsp
    1e26:	33 32                	xor    esi,DWORD PTR [rdx]
    1e28:	5f                   	pop    rdi
    1e29:	4d                   	rex.WRB
    1e2a:	49                   	rex.WB
    1e2b:	4e 5f                	rex.WRX pop rdi
    1e2d:	45 58                	rex.RB pop r8
    1e2f:	50                   	push   rax
    1e30:	5f                   	pop    rdi
    1e31:	5f                   	pop    rdi
    1e32:	20 28                	and    BYTE PTR [rax],ch
    1e34:	2d 31 32 35 29       	sub    eax,0x29353231
    1e39:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e3c:	53                   	push   rbx
    1e3d:	49 5a                	rex.WB pop r10
    1e3f:	45 5f                	rex.RB pop r15
    1e41:	54                   	push   rsp
    1e42:	59                   	pop    rcx
    1e43:	50                   	push   rax
    1e44:	45 5f                	rex.RB pop r15
    1e46:	5f                   	pop    rdi
    1e47:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1e4b:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1e4f:	73 69                	jae    1eba <__FRAME_END__+0x16c6>
    1e51:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1e53:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1e58:	74 00                	je     1e5a <__FRAME_END__+0x1666>
    1e5a:	5f                   	pop    rdi
    1e5b:	5f                   	pop    rdi
    1e5c:	4c                   	rex.WR
    1e5d:	44                   	rex.R
    1e5e:	42                   	rex.X
    1e5f:	4c 5f                	rex.WR pop rdi
    1e61:	4d                   	rex.WRB
    1e62:	41 58                	pop    r8
    1e64:	5f                   	pop    rdi
    1e65:	5f                   	pop    rdi
    1e66:	20 31                	and    BYTE PTR [rcx],dh
    1e68:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1e6b:	39 37                	cmp    DWORD PTR [rdi],esi
    1e6d:	33 31                	xor    esi,DWORD PTR [rcx]
    1e6f:	34 39                	xor    al,0x39
    1e71:	35 33 35 37 32       	xor    eax,0x32373533
    1e76:	33 31                	xor    esi,DWORD PTR [rcx]
    1e78:	37                   	(bad)  
    1e79:	36 35 30 32 31 32    	ss xor eax,0x32313230
    1e7f:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1e82:	35 33 30 33 30       	xor    eax,0x30333033
    1e87:	39 37                	cmp    DWORD PTR [rdi],esi
    1e89:	30 32                	xor    BYTE PTR [rdx],dh
    1e8b:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    1e8e:	34 39                	xor    al,0x39
    1e90:	33 32                	xor    esi,DWORD PTR [rdx]
    1e92:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1e96:	44                   	rex.R
    1e97:	45                   	rex.RB
    1e98:	43 5f                	rex.XB pop r15
    1e9a:	45 56                	rex.RB push r14
    1e9c:	41                   	rex.B
    1e9d:	4c 5f                	rex.WR pop rdi
    1e9f:	4d                   	rex.WRB
    1ea0:	45 54                	rex.RB push r12
    1ea2:	48                   	rex.W
    1ea3:	4f                   	rex.WRXB
    1ea4:	44 5f                	rex.R pop rdi
    1ea6:	5f                   	pop    rdi
    1ea7:	20 32                	and    BYTE PTR [rdx],dh
    1ea9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1eac:	46                   	rex.RX
    1ead:	4c 54                	rex.WR push rsp
    1eaf:	5f                   	pop    rdi
    1eb0:	4d                   	rex.WRB
    1eb1:	41 58                	pop    r8
    1eb3:	5f                   	pop    rdi
    1eb4:	5f                   	pop    rdi
    1eb5:	20 33                	and    BYTE PTR [rbx],dh
    1eb7:	2e 34 30             	cs xor al,0x30
    1eba:	32 38                	xor    bh,BYTE PTR [rax]
    1ebc:	32 33                	xor    dh,BYTE PTR [rbx]
    1ebe:	34 36                	xor    al,0x36
    1ec0:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1ec3:	35 32 38 38 35       	xor    eax,0x35383832
    1ec8:	39 38                	cmp    DWORD PTR [rax],edi
    1eca:	31 31                	xor    DWORD PTR [rcx],esi
    1ecc:	37                   	(bad)  
    1ecd:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    1ed0:	38 33                	cmp    BYTE PTR [rbx],dh
    1ed2:	34 38                	xor    al,0x38
    1ed4:	34 35                	xor    al,0x35
    1ed6:	31 36                	xor    DWORD PTR [rsi],esi
    1ed8:	39 32                	cmp    DWORD PTR [rdx],esi
    1eda:	35 65 2b 33 38       	xor    eax,0x38332b65
    1edf:	46 00 5f 49          	rex.RX add BYTE PTR [rdi+0x49],r11b
    1ee3:	4f 5f                	rex.WRXB pop r15
    1ee5:	75 69                	jne    1f50 <__FRAME_END__+0x175c>
    1ee7:	64 5f                	fs pop rdi
    1ee9:	74 20                	je     1f0b <__FRAME_END__+0x1717>
    1eeb:	5f                   	pop    rdi
    1eec:	5f                   	pop    rdi
    1eed:	75 69                	jne    1f58 <__FRAME_END__+0x1764>
    1eef:	64 5f                	fs pop rdi
    1ef1:	74 00                	je     1ef3 <__FRAME_END__+0x16ff>
    1ef3:	5f                   	pop    rdi
    1ef4:	5f                   	pop    rdi
    1ef5:	44                   	rex.R
    1ef6:	42                   	rex.X
    1ef7:	4c 5f                	rex.WR pop rdi
    1ef9:	4d                   	rex.WRB
    1efa:	49                   	rex.WB
    1efb:	4e 5f                	rex.WRX pop rdi
    1efd:	31 30                	xor    DWORD PTR [rax],esi
    1eff:	5f                   	pop    rdi
    1f00:	45 58                	rex.RB pop r8
    1f02:	50                   	push   rax
    1f03:	5f                   	pop    rdi
    1f04:	5f                   	pop    rdi
    1f05:	20 28                	and    BYTE PTR [rax],ch
    1f07:	2d 33 30 37 29       	sub    eax,0x29373033
    1f0c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f0f:	4f 5f                	rex.WRXB pop r15
    1f11:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1f14:	5f                   	pop    rdi
    1f15:	73 74                	jae    1f8b <__FRAME_END__+0x1797>
    1f17:	64 65 72 72          	fs gs jb 1f8d <__FRAME_END__+0x1799>
    1f1b:	5f                   	pop    rdi
    1f1c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f1f:	55                   	push   rbp
    1f20:	49                   	rex.WB
    1f21:	4e 54                	rex.WRX push rsp
    1f23:	33 32                	xor    esi,DWORD PTR [rdx]
    1f25:	5f                   	pop    rdi
    1f26:	4d                   	rex.WRB
    1f27:	41 58                	pop    r8
    1f29:	5f                   	pop    rdi
    1f2a:	5f                   	pop    rdi
    1f2b:	20 30                	and    BYTE PTR [rax],dh
    1f2d:	78 66                	js     1f95 <__FRAME_END__+0x17a1>
    1f2f:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    1f36:	55 
    1f37:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f3a:	4f 5f                	rex.WRXB pop r15
    1f3c:	4f                   	rex.WRXB
    1f3d:	43 54                	rex.XB push r12
    1f3f:	20 30                	and    BYTE PTR [rax],dh
    1f41:	34 30                	xor    al,0x30
    1f43:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f46:	46                   	rex.RX
    1f47:	4c 54                	rex.WR push rsp
    1f49:	31 32                	xor    DWORD PTR [rdx],esi
    1f4b:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    1f4e:	41 53                	push   r11
    1f50:	5f                   	pop    rdi
    1f51:	49                   	rex.WB
    1f52:	4e                   	rex.WRX
    1f53:	46                   	rex.RX
    1f54:	49                   	rex.WB
    1f55:	4e                   	rex.WRX
    1f56:	49 54                	rex.WB push r12
    1f58:	59                   	pop    rcx
    1f59:	5f                   	pop    rdi
    1f5a:	5f                   	pop    rdi
    1f5b:	20 31                	and    BYTE PTR [rcx],dh
    1f5d:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    1f60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f61:	64 65 00 5f 49       	fs add BYTE PTR gs:[rdi+0x49],bl
    1f66:	4f 5f                	rex.WRXB pop r15
    1f68:	48                   	rex.W
    1f69:	41 56                	push   r14
    1f6b:	45 5f                	rex.RB pop r15
    1f6d:	53                   	push   rbx
    1f6e:	54                   	push   rsp
    1f6f:	5f                   	pop    rdi
    1f70:	42                   	rex.X
    1f71:	4c                   	rex.WR
    1f72:	4b 53                	rex.WXB push r11
    1f74:	49 5a                	rex.WB pop r10
    1f76:	45 20 5f 47          	and    BYTE PTR [r15+0x47],r11b
    1f7a:	5f                   	pop    rdi
    1f7b:	48                   	rex.W
    1f7c:	41 56                	push   r14
    1f7e:	45 5f                	rex.RB pop r15
    1f80:	53                   	push   rbx
    1f81:	54                   	push   rsp
    1f82:	5f                   	pop    rdi
    1f83:	42                   	rex.X
    1f84:	4c                   	rex.WR
    1f85:	4b 53                	rex.WXB push r11
    1f87:	49 5a                	rex.WB pop r10
    1f89:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1f8d:	46                   	rex.RX
    1f8e:	4c 54                	rex.WR push rsp
    1f90:	36 34 5f             	ss xor al,0x5f
    1f93:	48                   	rex.W
    1f94:	41 53                	push   r11
    1f96:	5f                   	pop    rdi
    1f97:	44                   	rex.R
    1f98:	45                   	rex.RB
    1f99:	4e                   	rex.WRX
    1f9a:	4f 52                	rex.WRXB push r10
    1f9c:	4d 5f                	rex.WRB pop r15
    1f9e:	5f                   	pop    rdi
    1f9f:	20 31                	and    BYTE PTR [rcx],dh
    1fa1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fa4:	46                   	rex.RX
    1fa5:	4c 54                	rex.WR push rsp
    1fa7:	5f                   	pop    rdi
    1fa8:	45 56                	rex.RB push r14
    1faa:	41                   	rex.B
    1fab:	4c 5f                	rex.WR pop rdi
    1fad:	4d                   	rex.WRB
    1fae:	45 54                	rex.RB push r12
    1fb0:	48                   	rex.W
    1fb1:	4f                   	rex.WRXB
    1fb2:	44 5f                	rex.R pop rdi
    1fb4:	5f                   	pop    rdi
    1fb5:	20 30                	and    BYTE PTR [rax],dh
    1fb7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fba:	46 53                	rex.RX push rbx
    1fbc:	42                   	rex.X
    1fbd:	4c                   	rex.WR
    1fbe:	4b                   	rex.WXB
    1fbf:	43                   	rex.XB
    1fc0:	4e 54                	rex.WRX push rsp
    1fc2:	5f                   	pop    rdi
    1fc3:	54                   	push   rsp
    1fc4:	5f                   	pop    rdi
    1fc5:	54                   	push   rsp
    1fc6:	59                   	pop    rcx
    1fc7:	50                   	push   rax
    1fc8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1fcc:	53                   	push   rbx
    1fcd:	59                   	pop    rcx
    1fce:	53                   	push   rbx
    1fcf:	43                   	rex.XB
    1fd0:	41                   	rex.B
    1fd1:	4c                   	rex.WR
    1fd2:	4c 5f                	rex.WR pop rdi
    1fd4:	55                   	push   rbp
    1fd5:	4c                   	rex.WR
    1fd6:	4f                   	rex.WRXB
    1fd7:	4e                   	rex.WRX
    1fd8:	47 5f                	rex.RXB pop r15
    1fda:	54                   	push   rsp
    1fdb:	59                   	pop    rcx
    1fdc:	50                   	push   rax
    1fdd:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1fe1:	46                   	rex.RX
    1fe2:	4c 54                	rex.WR push rsp
    1fe4:	33 32                	xor    esi,DWORD PTR [rdx]
    1fe6:	58                   	pop    rax
    1fe7:	5f                   	pop    rdi
    1fe8:	48                   	rex.W
    1fe9:	41 53                	push   r11
    1feb:	5f                   	pop    rdi
    1fec:	44                   	rex.R
    1fed:	45                   	rex.RB
    1fee:	4e                   	rex.WRX
    1fef:	4f 52                	rex.WRXB push r10
    1ff1:	4d 5f                	rex.WRB pop r15
    1ff3:	5f                   	pop    rdi
    1ff4:	20 31                	and    BYTE PTR [rcx],dh
    1ff6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ff9:	78 38                	js     2033 <__FRAME_END__+0x183f>
    1ffb:	36 5f                	ss pop rdi
    1ffd:	36 34 5f             	ss xor al,0x5f
    2000:	5f                   	pop    rdi
    2001:	20 31                	and    BYTE PTR [rcx],dh
    2003:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2006:	46                   	rex.RX
    2007:	4c 54                	rex.WR push rsp
    2009:	36 34 58             	ss xor al,0x58
    200c:	5f                   	pop    rdi
    200d:	4d                   	rex.WRB
    200e:	41 58                	pop    r8
    2010:	5f                   	pop    rdi
    2011:	45 58                	rex.RB pop r8
    2013:	50                   	push   rax
    2014:	5f                   	pop    rdi
    2015:	5f                   	pop    rdi
    2016:	20 31                	and    BYTE PTR [rcx],dh
    2018:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    201b:	34 00                	xor    al,0x0
    201d:	5f                   	pop    rdi
    201e:	5f                   	pop    rdi
    201f:	56                   	push   rsi
    2020:	45 52                	rex.RB push r10
    2022:	53                   	push   rbx
    2023:	49                   	rex.WB
    2024:	4f                   	rex.WRXB
    2025:	4e 5f                	rex.WRX pop rdi
    2027:	5f                   	pop    rdi
    2028:	20 22                	and    BYTE PTR [rdx],ah
    202a:	37                   	(bad)  
    202b:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
    202e:	30 22                	xor    BYTE PTR [rdx],ah
    2030:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2033:	4f 5f                	rex.WRXB pop r15
    2035:	4c                   	rex.WR
    2036:	49                   	rex.WB
    2037:	4e                   	rex.WRX
    2038:	4b                   	rex.WXB
    2039:	45                   	rex.RB
    203a:	44 20 30             	and    BYTE PTR [rax],r14b
    203d:	78 38                	js     2077 <__FRAME_END__+0x1883>
    203f:	30 00                	xor    BYTE PTR [rax],al
    2041:	5f                   	pop    rdi
    2042:	5f                   	pop    rdi
    2043:	52                   	push   rdx
    2044:	45                   	rex.RB
    2045:	44                   	rex.R
    2046:	49 52                	rex.WB push r10
    2048:	45                   	rex.RB
    2049:	43 54                	rex.XB push r12
    204b:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
    204e:	6d                   	ins    DWORD PTR es:[rdi],dx
    204f:	65 2c 70             	gs sub al,0x70
    2052:	72 6f                	jb     20c3 <__FRAME_END__+0x18cf>
    2054:	74 6f                	je     20c5 <__FRAME_END__+0x18d1>
    2056:	2c 61                	sub    al,0x61
    2058:	6c                   	ins    BYTE PTR es:[rdi],dx
    2059:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    2060:	6d                   	ins    DWORD PTR es:[rdi],dx
    2061:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    2065:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2066:	74 6f                	je     20d7 <__FRAME_END__+0x18e3>
    2068:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    206b:	61                   	(bad)  
    206c:	73 6d                	jae    20db <__FRAME_END__+0x18e7>
    206e:	5f                   	pop    rdi
    206f:	5f                   	pop    rdi
    2070:	20 28                	and    BYTE PTR [rax],ch
    2072:	5f                   	pop    rdi
    2073:	5f                   	pop    rdi
    2074:	41 53                	push   r11
    2076:	4d                   	rex.WRB
    2077:	4e                   	rex.WRX
    2078:	41                   	rex.B
    2079:	4d                   	rex.WRB
    207a:	45 20 28             	and    BYTE PTR [r8],r13b
    207d:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    2080:	69 61 73 29 29 00 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f002929
    2087:	5f                   	pop    rdi
    2088:	46 53                	rex.RX push rbx
    208a:	42                   	rex.X
    208b:	4c                   	rex.WR
    208c:	4b                   	rex.WXB
    208d:	43                   	rex.XB
    208e:	4e 54                	rex.WRX push rsp
    2090:	36 34 5f             	ss xor al,0x5f
    2093:	54                   	push   rsp
    2094:	5f                   	pop    rdi
    2095:	54                   	push   rsp
    2096:	59                   	pop    rcx
    2097:	50                   	push   rax
    2098:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    209c:	55                   	push   rbp
    209d:	51                   	push   rcx
    209e:	55                   	push   rbp
    209f:	41                   	rex.B
    20a0:	44 5f                	rex.R pop rdi
    20a2:	54                   	push   rsp
    20a3:	59                   	pop    rcx
    20a4:	50                   	push   rax
    20a5:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    20a9:	46                   	rex.RX
    20aa:	4c 54                	rex.WR push rsp
    20ac:	36 34 58             	ss xor al,0x58
    20af:	5f                   	pop    rdi
    20b0:	4d                   	rex.WRB
    20b1:	41 58                	pop    r8
    20b3:	5f                   	pop    rdi
    20b4:	5f                   	pop    rdi
    20b5:	20 31                	and    BYTE PTR [rcx],dh
    20b7:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    20ba:	39 37                	cmp    DWORD PTR [rdi],esi
    20bc:	33 31                	xor    esi,DWORD PTR [rcx]
    20be:	34 39                	xor    al,0x39
    20c0:	35 33 35 37 32       	xor    eax,0x32373533
    20c5:	33 31                	xor    esi,DWORD PTR [rcx]
    20c7:	37                   	(bad)  
    20c8:	36 35 30 32 31 32    	ss xor eax,0x32313230
    20ce:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    20d1:	35 33 30 33 30       	xor    eax,0x30333033
    20d6:	39 37                	cmp    DWORD PTR [rdi],esi
    20d8:	30 32                	xor    BYTE PTR [rdx],dh
    20da:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    20dd:	34 39                	xor    al,0x39
    20df:	33 32                	xor    esi,DWORD PTR [rdx]
    20e1:	46                   	rex.RX
    20e2:	36 34 78             	ss xor al,0x78
    20e5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    20e8:	4f 5f                	rex.WRXB pop r15
    20ea:	72 65                	jb     2151 <__FRAME_END__+0x195d>
    20ec:	61                   	(bad)  
    20ed:	64 5f                	fs pop rdi
    20ef:	70 74                	jo     2165 <__FRAME_END__+0x1971>
    20f1:	72 00                	jb     20f3 <__FRAME_END__+0x18ff>
    20f3:	5f                   	pop    rdi
    20f4:	5f                   	pop    rdi
    20f5:	53                   	push   rbx
    20f6:	49 5a                	rex.WB pop r10
    20f8:	45 5f                	rex.RB pop r15
    20fa:	54                   	push   rsp
    20fb:	20 00                	and    BYTE PTR [rax],al
    20fd:	5f                   	pop    rdi
    20fe:	5f                   	pop    rdi
    20ff:	49                   	rex.WB
    2100:	44 5f                	rex.R pop rdi
    2102:	54                   	push   rsp
    2103:	5f                   	pop    rdi
    2104:	54                   	push   rsp
    2105:	59                   	pop    rcx
    2106:	50                   	push   rax
    2107:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    210b:	55                   	push   rbp
    210c:	33 32                	xor    esi,DWORD PTR [rdx]
    210e:	5f                   	pop    rdi
    210f:	54                   	push   rsp
    2110:	59                   	pop    rcx
    2111:	50                   	push   rax
    2112:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2116:	53                   	push   rbx
    2117:	49 5a                	rex.WB pop r10
    2119:	45 5f                	rex.RB pop r15
    211b:	54                   	push   rsp
    211c:	5f                   	pop    rdi
    211d:	5f                   	pop    rdi
    211e:	20 00                	and    BYTE PTR [rax],al
    2120:	5f                   	pop    rdi
    2121:	49                   	rex.WB
    2122:	4f 5f                	rex.WRXB pop r15
    2124:	66 75 6e             	data16 jne 2195 <__FRAME_END__+0x19a1>
    2127:	6c                   	ins    BYTE PTR es:[rdi],dx
    2128:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2129:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    212c:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2133:	29 
    2134:	20 00                	and    BYTE PTR [rax],al
    2136:	5f                   	pop    rdi
    2137:	5f                   	pop    rdi
    2138:	4b                   	rex.WXB
    2139:	45 59                	rex.RB pop r9
    213b:	5f                   	pop    rdi
    213c:	54                   	push   rsp
    213d:	5f                   	pop    rdi
    213e:	54                   	push   rsp
    213f:	59                   	pop    rcx
    2140:	50                   	push   rax
    2141:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2145:	53                   	push   rbx
    2146:	33 32                	xor    esi,DWORD PTR [rdx]
    2148:	5f                   	pop    rdi
    2149:	54                   	push   rsp
    214a:	59                   	pop    rcx
    214b:	50                   	push   rax
    214c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2150:	49                   	rex.WB
    2151:	4e 54                	rex.WRX push rsp
    2153:	5f                   	pop    rdi
    2154:	4c                   	rex.WR
    2155:	45                   	rex.RB
    2156:	41 53                	push   r11
    2158:	54                   	push   rsp
    2159:	36 34 5f             	ss xor al,0x5f
    215c:	4d                   	rex.WRB
    215d:	41 58                	pop    r8
    215f:	5f                   	pop    rdi
    2160:	5f                   	pop    rdi
    2161:	20 30                	and    BYTE PTR [rax],dh
    2163:	78 37                	js     219c <__FRAME_END__+0x19a8>
    2165:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    216c:	66 66 66 66 66 66 66 
    2173:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2178:	49                   	rex.WB
    2179:	4e 54                	rex.WRX push rsp
    217b:	5f                   	pop    rdi
    217c:	4c                   	rex.WR
    217d:	45                   	rex.RB
    217e:	41 53                	push   r11
    2180:	54                   	push   rsp
    2181:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    2184:	49                   	rex.WB
    2185:	44 54                	rex.R push rsp
    2187:	48 5f                	rex.W pop rdi
    2189:	5f                   	pop    rdi
    218a:	20 38                	and    BYTE PTR [rax],bh
    218c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    218f:	4c                   	rex.WR
    2190:	44                   	rex.R
    2191:	42                   	rex.X
    2192:	4c 5f                	rex.WR pop rdi
    2194:	52                   	push   rdx
    2195:	45                   	rex.RB
    2196:	44                   	rex.R
    2197:	49 52                	rex.WB push r10
    2199:	31 5f 4e             	xor    DWORD PTR [rdi+0x4e],ebx
    219c:	54                   	push   rsp
    219d:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    21a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    21a2:	65 2c 70             	gs sub al,0x70
    21a5:	72 6f                	jb     2216 <__FRAME_END__+0x1a22>
    21a7:	74 6f                	je     2218 <__FRAME_END__+0x1a24>
    21a9:	2c 61                	sub    al,0x61
    21ab:	6c                   	ins    BYTE PTR es:[rdi],dx
    21ac:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    21b3:	6d                   	ins    DWORD PTR es:[rdi],dx
    21b4:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    21b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21b9:	74 6f                	je     222a <__FRAME_END__+0x1a36>
    21bb:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    21be:	54                   	push   rsp
    21bf:	48 52                	rex.W push rdx
    21c1:	4f 57                	rex.WRXB push r15
    21c3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21c6:	55                   	push   rbp
    21c7:	49                   	rex.WB
    21c8:	4e 54                	rex.WRX push rsp
    21ca:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    21cd:	41 58                	pop    r8
    21cf:	5f                   	pop    rdi
    21d0:	5f                   	pop    rdi
    21d1:	20 30                	and    BYTE PTR [rax],dh
    21d3:	78 66                	js     223b <__FRAME_END__+0x1a47>
    21d5:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    21d9:	4f 5f                	rex.WRXB pop r15
    21db:	46                   	rex.RX
    21dc:	4c                   	rex.WR
    21dd:	41                   	rex.B
    21de:	47 53                	rex.RXB push r11
    21e0:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    21e3:	4f 54                	rex.WRXB push r12
    21e5:	43                   	rex.XB
    21e6:	41                   	rex.B
    21e7:	4e                   	rex.WRX
    21e8:	43                   	rex.XB
    21e9:	45                   	rex.RB
    21ea:	4c 20 32             	rex.WR and BYTE PTR [rdx],r14b
    21ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21f0:	61                   	(bad)  
    21f1:	6c                   	ins    BYTE PTR es:[rdi],dx
    21f2:	77 61                	ja     2255 <__FRAME_END__+0x1a61>
    21f4:	79 73                	jns    2269 <__FRAME_END__+0x1a75>
    21f6:	5f                   	pop    rdi
    21f7:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    21fe:	5f                   	pop    rdi
    21ff:	5f                   	pop    rdi
    2200:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    2207:	5f                   	pop    rdi
    2208:	5f                   	pop    rdi
    2209:	61                   	(bad)  
    220a:	74 74                	je     2280 <__FRAME_END__+0x1a8c>
    220c:	72 69                	jb     2277 <__FRAME_END__+0x1a83>
    220e:	62                   	(bad)  
    220f:	75 74                	jne    2285 <__FRAME_END__+0x1a91>
    2211:	65 5f                	gs pop rdi
    2213:	5f                   	pop    rdi
    2214:	20 28                	and    BYTE PTR [rax],ch
    2216:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2219:	61                   	(bad)  
    221a:	6c                   	ins    BYTE PTR es:[rdi],dx
    221b:	77 61                	ja     227e <__FRAME_END__+0x1a8a>
    221d:	79 73                	jns    2292 <__FRAME_END__+0x1a9e>
    221f:	5f                   	pop    rdi
    2220:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    2227:	5f                   	pop    rdi
    2228:	29 29                	sub    DWORD PTR [rcx],ebp
    222a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    222d:	55                   	push   rbp
    222e:	49                   	rex.WB
    222f:	4e 54                	rex.WRX push rsp
    2231:	31 36                	xor    DWORD PTR [rsi],esi
    2233:	5f                   	pop    rdi
    2234:	4d                   	rex.WRB
    2235:	41 58                	pop    r8
    2237:	5f                   	pop    rdi
    2238:	5f                   	pop    rdi
    2239:	20 30                	and    BYTE PTR [rax],dh
    223b:	78 66                	js     22a3 <__FRAME_END__+0x1aaf>
    223d:	66 66 66 00 5f 49    	data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2243:	4f 5f                	rex.WRXB pop r15
    2245:	4d                   	rex.WRB
    2246:	41                   	rex.B
    2247:	47                   	rex.RXB
    2248:	49                   	rex.WB
    2249:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    224c:	78 46                	js     2294 <__FRAME_END__+0x1aa0>
    224e:	42                   	rex.X
    224f:	41                   	rex.B
    2250:	44 30 30             	xor    BYTE PTR [rax],r14b
    2253:	30 30                	xor    BYTE PTR [rax],dh
    2255:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2258:	47                   	rex.RXB
    2259:	4c                   	rex.WR
    225a:	49                   	rex.WB
    225b:	42                   	rex.X
    225c:	43 5f                	rex.XB pop r15
    225e:	55                   	push   rbp
    225f:	53                   	push   rbx
    2260:	45 28 46 29          	sub    BYTE PTR [r14+0x29],r8b
    2264:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2267:	47                   	rex.RXB
    2268:	4c                   	rex.WR
    2269:	49                   	rex.WB
    226a:	42                   	rex.X
    226b:	43 5f                	rex.XB pop r15
    226d:	55                   	push   rbp
    226e:	53                   	push   rbx
    226f:	45 5f                	rex.RB pop r15
    2271:	20 23                	and    BYTE PTR [rbx],ah
    2273:	23 20                	and    esp,DWORD PTR [rax]
    2275:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    2279:	49                   	rex.WB
    227a:	4e 54                	rex.WRX push rsp
    227c:	5f                   	pop    rdi
    227d:	46                   	rex.RX
    227e:	41 53                	push   r11
    2280:	54                   	push   rsp
    2281:	36 34 5f             	ss xor al,0x5f
    2284:	54                   	push   rsp
    2285:	59                   	pop    rcx
    2286:	50                   	push   rax
    2287:	45 5f                	rex.RB pop r15
    2289:	5f                   	pop    rdi
    228a:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    228e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2292:	74 00                	je     2294 <__FRAME_END__+0x1aa0>
    2294:	73 74                	jae    230a <__FRAME_END__+0x1b16>
    2296:	64 69 6e 20 73 74 64 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x69647473
    229d:	69 
    229e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    229f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22a2:	61                   	(bad)  
    22a3:	74 74                	je     2319 <__FRAME_END__+0x1b25>
    22a5:	72 69                	jb     2310 <__FRAME_END__+0x1b1c>
    22a7:	62                   	(bad)  
    22a8:	75 74                	jne    231e <__FRAME_END__+0x1b2a>
    22aa:	65 5f                	gs pop rdi
    22ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22ae:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22b5:	5f                   	pop    rdi
    22b6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    22b9:	61                   	(bad)  
    22ba:	74 74                	je     2330 <__FRAME_END__+0x1b3c>
    22bc:	72 69                	jb     2327 <__FRAME_END__+0x1b33>
    22be:	62                   	(bad)  
    22bf:	75 74                	jne    2335 <__FRAME_END__+0x1b41>
    22c1:	65 5f                	gs pop rdi
    22c3:	5f                   	pop    rdi
    22c4:	20 28                	and    BYTE PTR [rax],ch
    22c6:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    22c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22cb:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22d2:	5f                   	pop    rdi
    22d3:	29 29                	sub    DWORD PTR [rcx],ebp
    22d5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22d8:	53                   	push   rbx
    22d9:	54                   	push   rsp
    22da:	44                   	rex.R
    22db:	43 5f                	rex.XB pop r15
    22dd:	56                   	push   rsi
    22de:	45 52                	rex.RB push r10
    22e0:	53                   	push   rbx
    22e1:	49                   	rex.WB
    22e2:	4f                   	rex.WRXB
    22e3:	4e 5f                	rex.WRX pop rdi
    22e5:	5f                   	pop    rdi
    22e6:	20 32                	and    BYTE PTR [rdx],dh
    22e8:	30 31                	xor    BYTE PTR [rcx],dh
    22ea:	31 31                	xor    DWORD PTR [rcx],esi
    22ec:	32 4c 00 5f          	xor    cl,BYTE PTR [rax+rax*1+0x5f]
    22f0:	5f                   	pop    rdi
    22f1:	49                   	rex.WB
    22f2:	4e 54                	rex.WRX push rsp
    22f4:	4d                   	rex.WRB
    22f5:	41 58                	pop    r8
    22f7:	5f                   	pop    rdi
    22f8:	57                   	push   rdi
    22f9:	49                   	rex.WB
    22fa:	44 54                	rex.R push rsp
    22fc:	48 5f                	rex.W pop rdi
    22fe:	5f                   	pop    rdi
    22ff:	20 36                	and    BYTE PTR [rsi],dh
    2301:	34 00                	xor    al,0x0
    2303:	5f                   	pop    rdi
    2304:	5f                   	pop    rdi
    2305:	44                   	rex.R
    2306:	45                   	rex.RB
    2307:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    230a:	5f                   	pop    rdi
    230b:	4d                   	rex.WRB
    230c:	41 58                	pop    r8
    230e:	5f                   	pop    rdi
    230f:	5f                   	pop    rdi
    2310:	20 39                	and    BYTE PTR [rcx],bh
    2312:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    2315:	39 39                	cmp    DWORD PTR [rcx],edi
    2317:	39 39                	cmp    DWORD PTR [rcx],edi
    2319:	45 39 36             	cmp    DWORD PTR [r14],r14d
    231c:	44                   	rex.R
    231d:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    2321:	47                   	rex.RXB
    2322:	4e 55                	rex.WRX push rbp
    2324:	43 5f                	rex.XB pop r15
    2326:	56                   	push   rsi
    2327:	41 5f                	pop    r15
    2329:	4c                   	rex.WR
    232a:	49 53                	rex.WB push r11
    232c:	54                   	push   rsp
    232d:	20 00                	and    BYTE PTR [rax],al
    232f:	5f                   	pop    rdi
    2330:	5f                   	pop    rdi
    2331:	50                   	push   rax
    2332:	54                   	push   rsp
    2333:	52                   	push   rdx
    2334:	44                   	rex.R
    2335:	49                   	rex.WB
    2336:	46                   	rex.RX
    2337:	46 5f                	rex.RX pop rdi
    2339:	4d                   	rex.WRB
    233a:	41 58                	pop    r8
    233c:	5f                   	pop    rdi
    233d:	5f                   	pop    rdi
    233e:	20 30                	and    BYTE PTR [rax],dh
    2340:	78 37                	js     2379 <__FRAME_END__+0x1b85>
    2342:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2349:	66 66 66 66 66 66 66 
    2350:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2355:	55                   	push   rbp
    2356:	53                   	push   rbx
    2357:	45 5f                	rex.RB pop r15
    2359:	50                   	push   rax
    235a:	4f 53                	rex.WRXB push r11
    235c:	49 58                	rex.WB pop r8
    235e:	31 39                	xor    DWORD PTR [rcx],edi
    2360:	39 33                	cmp    DWORD PTR [rbx],esi
    2362:	30 39                	xor    BYTE PTR [rcx],bh
    2364:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2367:	49                   	rex.WB
    2368:	4e 54                	rex.WRX push rsp
    236a:	5f                   	pop    rdi
    236b:	4c                   	rex.WR
    236c:	45                   	rex.RB
    236d:	41 53                	push   r11
    236f:	54                   	push   rsp
    2370:	31 36                	xor    DWORD PTR [rsi],esi
    2372:	5f                   	pop    rdi
    2373:	54                   	push   rsp
    2374:	59                   	pop    rcx
    2375:	50                   	push   rax
    2376:	45 5f                	rex.RB pop r15
    2378:	5f                   	pop    rdi
    2379:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    237c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    237d:	72 74                	jb     23f3 <__FRAME_END__+0x1bff>
    237f:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    2382:	74 00                	je     2384 <__FRAME_END__+0x1b90>
    2384:	5f                   	pop    rdi
    2385:	5f                   	pop    rdi
    2386:	46                   	rex.RX
    2387:	4c 54                	rex.WR push rsp
    2389:	33 32                	xor    esi,DWORD PTR [rdx]
    238b:	5f                   	pop    rdi
    238c:	4d                   	rex.WRB
    238d:	41 58                	pop    r8
    238f:	5f                   	pop    rdi
    2390:	45 58                	rex.RB pop r8
    2392:	50                   	push   rax
    2393:	5f                   	pop    rdi
    2394:	5f                   	pop    rdi
    2395:	20 31                	and    BYTE PTR [rcx],dh
    2397:	32 38                	xor    bh,BYTE PTR [rax]
    2399:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    239c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    239e:	75 5f                	jne    23ff <__FRAME_END__+0x1c0b>
    23a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    23a1:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    23a8:	31 00                	xor    DWORD PTR [rax],eax
    23aa:	5f                   	pop    rdi
    23ab:	5f                   	pop    rdi
    23ac:	53                   	push   rbx
    23ad:	54                   	push   rsp
    23ae:	44 5f                	rex.R pop rdi
    23b0:	54                   	push   rsp
    23b1:	59                   	pop    rcx
    23b2:	50                   	push   rax
    23b3:	45 20 74 79 70       	and    BYTE PTR [r9+rdi*2+0x70],r14b
    23b8:	65 64 65 66 00 5f 5f 	gs fs data16 add BYTE PTR gs:[rdi+0x5f],bl
    23bf:	4d                   	rex.WRB
    23c0:	4f                   	rex.WRXB
    23c1:	44                   	rex.R
    23c2:	45 5f                	rex.RB pop r15
    23c4:	54                   	push   rsp
    23c5:	5f                   	pop    rdi
    23c6:	54                   	push   rsp
    23c7:	59                   	pop    rcx
    23c8:	50                   	push   rax
    23c9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    23cd:	55                   	push   rbp
    23ce:	33 32                	xor    esi,DWORD PTR [rdx]
    23d0:	5f                   	pop    rdi
    23d1:	54                   	push   rsp
    23d2:	59                   	pop    rcx
    23d3:	50                   	push   rax
    23d4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    23d8:	53                   	push   rbx
    23d9:	49 5a                	rex.WB pop r10
    23db:	45                   	rex.RB
    23dc:	4f                   	rex.WRXB
    23dd:	46 5f                	rex.RX pop rdi
    23df:	46                   	rex.RX
    23e0:	4c                   	rex.WR
    23e1:	4f                   	rex.WRXB
    23e2:	41 54                	push   r12
    23e4:	31 32                	xor    DWORD PTR [rdx],esi
    23e6:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    23e9:	20 31                	and    BYTE PTR [rcx],dh
    23eb:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    23ef:	47                   	rex.RXB
    23f0:	4e 55                	rex.WRX push rbp
    23f2:	43 5f                	rex.XB pop r15
    23f4:	53                   	push   rbx
    23f5:	54                   	push   rsp
    23f6:	44                   	rex.R
    23f7:	43 5f                	rex.XB pop r15
    23f9:	49                   	rex.WB
    23fa:	4e                   	rex.WRX
    23fb:	4c                   	rex.WR
    23fc:	49                   	rex.WB
    23fd:	4e                   	rex.WRX
    23fe:	45 5f                	rex.RB pop r15
    2400:	5f                   	pop    rdi
    2401:	20 31                	and    BYTE PTR [rcx],dh
    2403:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2406:	44                   	rex.R
    2407:	42                   	rex.X
    2408:	4c 5f                	rex.WR pop rdi
    240a:	44                   	rex.R
    240b:	49                   	rex.WB
    240c:	47 5f                	rex.RXB pop r15
    240e:	5f                   	pop    rdi
    240f:	20 31                	and    BYTE PTR [rcx],dh
    2411:	35 00 5f 5f 47       	xor    eax,0x475f5f00
    2416:	43                   	rex.XB
    2417:	43 5f                	rex.XB pop r15
    2419:	41 54                	push   r12
    241b:	4f                   	rex.WRXB
    241c:	4d                   	rex.WRB
    241d:	49                   	rex.WB
    241e:	43 5f                	rex.XB pop r15
    2420:	43                   	rex.XB
    2421:	48                   	rex.W
    2422:	41 52                	push   r10
    2424:	31 36                	xor    DWORD PTR [rsi],esi
    2426:	5f                   	pop    rdi
    2427:	54                   	push   rsp
    2428:	5f                   	pop    rdi
    2429:	4c                   	rex.WR
    242a:	4f                   	rex.WRXB
    242b:	43                   	rex.XB
    242c:	4b 5f                	rex.WXB pop r15
    242e:	46 52                	rex.RX push rdx
    2430:	45                   	rex.RB
    2431:	45 20 32             	and    BYTE PTR [r10],r14b
    2434:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2437:	49                   	rex.WB
    2438:	4e 54                	rex.WRX push rsp
    243a:	5f                   	pop    rdi
    243b:	4c                   	rex.WR
    243c:	45                   	rex.RB
    243d:	41 53                	push   r11
    243f:	54                   	push   rsp
    2440:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2443:	41 58                	pop    r8
    2445:	5f                   	pop    rdi
    2446:	5f                   	pop    rdi
    2447:	20 30                	and    BYTE PTR [rax],dh
    2449:	78 37                	js     2482 <__FRAME_END__+0x1c8e>
    244b:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    244f:	53                   	push   rbx
    2450:	31 36                	xor    DWORD PTR [rsi],esi
    2452:	5f                   	pop    rdi
    2453:	54                   	push   rsp
    2454:	59                   	pop    rcx
    2455:	50                   	push   rax
    2456:	45 20 73 68          	and    BYTE PTR [r11+0x68],r14b
    245a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    245b:	72 74                	jb     24d1 <__FRAME_END__+0x1cdd>
    245d:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    2460:	74 00                	je     2462 <__FRAME_END__+0x1c6e>
    2462:	5f                   	pop    rdi
    2463:	5f                   	pop    rdi
    2464:	4c 50                	rex.WR push rax
    2466:	36 34 5f             	ss xor al,0x5f
    2469:	5f                   	pop    rdi
    246a:	20 31                	and    BYTE PTR [rcx],dh
    246c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    246f:	53                   	push   rbx
    2470:	59                   	pop    rcx
    2471:	53                   	push   rbx
    2472:	43                   	rex.XB
    2473:	41                   	rex.B
    2474:	4c                   	rex.WR
    2475:	4c 5f                	rex.WR pop rdi
    2477:	57                   	push   rdi
    2478:	4f 52                	rex.WRXB push r10
    247a:	44 53                	rex.R push rbx
    247c:	49 5a                	rex.WB pop r10
    247e:	45 20 36             	and    BYTE PTR [r14],r14b
    2481:	34 00                	xor    al,0x0
    2483:	5f                   	pop    rdi
    2484:	5f                   	pop    rdi
    2485:	47                   	rex.RXB
    2486:	43                   	rex.XB
    2487:	43 5f                	rex.XB pop r15
    2489:	41 54                	push   r12
    248b:	4f                   	rex.WRXB
    248c:	4d                   	rex.WRB
    248d:	49                   	rex.WB
    248e:	43 5f                	rex.XB pop r15
    2490:	4c                   	rex.WR
    2491:	4f                   	rex.WRXB
    2492:	4e                   	rex.WRX
    2493:	47 5f                	rex.RXB pop r15
    2495:	4c                   	rex.WR
    2496:	4f                   	rex.WRXB
    2497:	43                   	rex.XB
    2498:	4b 5f                	rex.WXB pop r15
    249a:	46 52                	rex.RX push rdx
    249c:	45                   	rex.RB
    249d:	45 20 32             	and    BYTE PTR [r10],r14b
    24a0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24a3:	46                   	rex.RX
    24a4:	4c 54                	rex.WR push rsp
    24a6:	33 32                	xor    esi,DWORD PTR [rdx]
    24a8:	58                   	pop    rax
    24a9:	5f                   	pop    rdi
    24aa:	44                   	rex.R
    24ab:	49                   	rex.WB
    24ac:	47 5f                	rex.RXB pop r15
    24ae:	5f                   	pop    rdi
    24af:	20 31                	and    BYTE PTR [rcx],dh
    24b1:	35 00 5f 5f 46       	xor    eax,0x465f5f00
    24b6:	4c 54                	rex.WR push rsp
    24b8:	33 32                	xor    esi,DWORD PTR [rdx]
    24ba:	58                   	pop    rax
    24bb:	5f                   	pop    rdi
    24bc:	4d                   	rex.WRB
    24bd:	41                   	rex.B
    24be:	4e 54                	rex.WRX push rsp
    24c0:	5f                   	pop    rdi
    24c1:	44                   	rex.R
    24c2:	49                   	rex.WB
    24c3:	47 5f                	rex.RXB pop r15
    24c5:	5f                   	pop    rdi
    24c6:	20 35 33 00 5f 49    	and    BYTE PTR [rip+0x495f0033],dh        # 495f24ff <_end+0x493f14e7>
    24cc:	4f 5f                	rex.WRXB pop r15
    24ce:	77 72                	ja     2542 <__FRAME_END__+0x1d4e>
    24d0:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    24d7:	65 
    24d8:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
    24db:	50                   	push   rax
    24dc:	36 34 20             	ss xor al,0x20
    24df:	31 00                	xor    DWORD PTR [rax],eax
    24e1:	5f                   	pop    rdi
    24e2:	46                   	rex.RX
    24e3:	45                   	rex.RB
    24e4:	41 54                	push   r12
    24e6:	55                   	push   rbp
    24e7:	52                   	push   rdx
    24e8:	45 53                	rex.RB push r11
    24ea:	5f                   	pop    rdi
    24eb:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    24ee:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24f1:	46                   	rex.RX
    24f2:	4c 54                	rex.WR push rsp
    24f4:	33 32                	xor    esi,DWORD PTR [rdx]
    24f6:	5f                   	pop    rdi
    24f7:	44                   	rex.R
    24f8:	49                   	rex.WB
    24f9:	47 5f                	rex.RXB pop r15
    24fb:	5f                   	pop    rdi
    24fc:	20 36                	and    BYTE PTR [rsi],dh
    24fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2501:	46 53                	rex.RX push rbx
    2503:	57                   	push   rdi
    2504:	4f 52                	rex.WRXB push r10
    2506:	44 5f                	rex.R pop rdi
    2508:	54                   	push   rsp
    2509:	5f                   	pop    rdi
    250a:	54                   	push   rsp
    250b:	59                   	pop    rcx
    250c:	50                   	push   rax
    250d:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2511:	53                   	push   rbx
    2512:	59                   	pop    rcx
    2513:	53                   	push   rbx
    2514:	43                   	rex.XB
    2515:	41                   	rex.B
    2516:	4c                   	rex.WR
    2517:	4c 5f                	rex.WR pop rdi
    2519:	53                   	push   rbx
    251a:	4c                   	rex.WR
    251b:	4f                   	rex.WRXB
    251c:	4e                   	rex.WRX
    251d:	47 5f                	rex.RXB pop r15
    251f:	54                   	push   rsp
    2520:	59                   	pop    rcx
    2521:	50                   	push   rax
    2522:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2526:	53                   	push   rbx
    2527:	4c                   	rex.WR
    2528:	4f                   	rex.WRXB
    2529:	4e                   	rex.WRX
    252a:	47 57                	rex.RXB push r15
    252c:	4f 52                	rex.WRXB push r10
    252e:	44 5f                	rex.R pop rdi
    2530:	54                   	push   rsp
    2531:	59                   	pop    rcx
    2532:	50                   	push   rax
    2533:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    2538:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    253c:	74 00                	je     253e <__FRAME_END__+0x1d4a>
    253e:	5f                   	pop    rdi
    253f:	49                   	rex.WB
    2540:	4f 5f                	rex.WRXB pop r15
    2542:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    2545:	5f                   	pop    rdi
    2546:	73 74                	jae    25bc <__FRAME_END__+0x1dc8>
    2548:	64 69 6e 5f 00 61 64 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x64646100
    254f:	64 
    2550:	5f                   	pop    rdi
    2551:	69 6e 74 2e 63 00 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f00632e
    2558:	5f                   	pop    rdi
    2559:	46                   	rex.RX
    255a:	4c 54                	rex.WR push rsp
    255c:	36 34 58             	ss xor al,0x58
    255f:	5f                   	pop    rdi
    2560:	4d                   	rex.WRB
    2561:	41 58                	pop    r8
    2563:	5f                   	pop    rdi
    2564:	31 30                	xor    DWORD PTR [rax],esi
    2566:	5f                   	pop    rdi
    2567:	45 58                	rex.RB pop r8
    2569:	50                   	push   rax
    256a:	5f                   	pop    rdi
    256b:	5f                   	pop    rdi
    256c:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    256f:	33 32                	xor    esi,DWORD PTR [rdx]
    2571:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2574:	44                   	rex.R
    2575:	42                   	rex.X
    2576:	4c 5f                	rex.WR pop rdi
    2578:	4d                   	rex.WRB
    2579:	49                   	rex.WB
    257a:	4e 5f                	rex.WRX pop rdi
    257c:	5f                   	pop    rdi
    257d:	20 28                	and    BYTE PTR [rax],ch
    257f:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    2583:	62                   	(bad)  
    2584:	6c                   	ins    BYTE PTR es:[rdi],dx
    2585:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    2588:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    258b:	35 30 37 33 38       	xor    eax,0x38333730
    2590:	35 38 35 30 37       	xor    eax,0x37303538
    2595:	32 30                	xor    dh,BYTE PTR [rax]
    2597:	31 33                	xor    DWORD PTR [rbx],esi
    2599:	38 33                	cmp    BYTE PTR [rbx],dh
    259b:	30 39                	xor    BYTE PTR [rcx],bh
    259d:	30 32                	xor    BYTE PTR [rdx],dh
    259f:	33 32                	xor    esi,DWORD PTR [rdx]
    25a1:	37                   	(bad)  
    25a2:	31 37                	xor    DWORD PTR [rdi],esi
    25a4:	33 33                	xor    esi,DWORD PTR [rbx]
    25a6:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    25a9:	34 30                	xor    al,0x30
    25ab:	36 65 2d 33 30 38 4c 	ss gs sub eax,0x4c383033
    25b2:	29 00                	sub    DWORD PTR [rax],eax
    25b4:	5f                   	pop    rdi
    25b5:	49                   	rex.WB
    25b6:	4f 5f                	rex.WRXB pop r15
    25b8:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    25bb:	5f                   	pop    rdi
    25bc:	73 74                	jae    2632 <__FRAME_END__+0x1e3e>
    25be:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    25c0:	75 74                	jne    2636 <__FRAME_END__+0x1e42>
    25c2:	5f                   	pop    rdi
    25c3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25c6:	55                   	push   rbp
    25c7:	49                   	rex.WB
    25c8:	4e 54                	rex.WRX push rsp
    25ca:	5f                   	pop    rdi
    25cb:	46                   	rex.RX
    25cc:	41 53                	push   r11
    25ce:	54                   	push   rsp
    25cf:	33 32                	xor    esi,DWORD PTR [rdx]
    25d1:	5f                   	pop    rdi
    25d2:	4d                   	rex.WRB
    25d3:	41 58                	pop    r8
    25d5:	5f                   	pop    rdi
    25d6:	5f                   	pop    rdi
    25d7:	20 30                	and    BYTE PTR [rax],dh
    25d9:	78 66                	js     2641 <__FRAME_END__+0x1e4d>
    25db:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    25e2:	66 66 66 66 66 66 66 
    25e9:	66 55                	push   bp
    25eb:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    25ef:	46                   	rex.RX
    25f0:	49                   	rex.WB
    25f1:	4e                   	rex.WRX
    25f2:	49 54                	rex.WB push r12
    25f4:	45 5f                	rex.RB pop r15
    25f6:	4d                   	rex.WRB
    25f7:	41 54                	push   r12
    25f9:	48 5f                	rex.W pop rdi
    25fb:	4f                   	rex.WRXB
    25fc:	4e                   	rex.WRX
    25fd:	4c 59                	rex.WR pop rcx
    25ff:	5f                   	pop    rdi
    2600:	5f                   	pop    rdi
    2601:	20 30                	and    BYTE PTR [rax],dh
    2603:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2606:	4f 5f                	rex.WRXB pop r15
    2608:	73 61                	jae    266b <__FRAME_END__+0x1e77>
    260a:	76 65                	jbe    2671 <__FRAME_END__+0x1e7d>
    260c:	5f                   	pop    rdi
    260d:	62 61                	(bad)  
    260f:	73 65                	jae    2676 <__FRAME_END__+0x1e82>
    2611:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2614:	55                   	push   rbp
    2615:	31 36                	xor    DWORD PTR [rsi],esi
    2617:	5f                   	pop    rdi
    2618:	54                   	push   rsp
    2619:	59                   	pop    rcx
    261a:	50                   	push   rax
    261b:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    261f:	73 69                	jae    268a <__FRAME_END__+0x1e96>
    2621:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2623:	65 64 20 73 68       	gs and BYTE PTR fs:[rbx+0x68],dh
    2628:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2629:	72 74                	jb     269f <__FRAME_END__+0x1eab>
    262b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    262e:	74 00                	je     2630 <__FRAME_END__+0x1e3c>
    2630:	45                   	rex.RB
    2631:	4f                   	rex.WRXB
    2632:	46 20 28             	rex.RX and BYTE PTR [rax],r13b
    2635:	2d 31 29 00 5f       	sub    eax,0x5f002931
    263a:	5f                   	pop    rdi
    263b:	46                   	rex.RX
    263c:	4c 54                	rex.WR push rsp
    263e:	36 34 5f             	ss xor al,0x5f
    2641:	4d                   	rex.WRB
    2642:	41 58                	pop    r8
    2644:	5f                   	pop    rdi
    2645:	5f                   	pop    rdi
    2646:	20 31                	and    BYTE PTR [rcx],dh
    2648:	2e 37                	cs (bad) 
    264a:	39 37                	cmp    DWORD PTR [rdi],esi
    264c:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    264f:	31 33                	xor    DWORD PTR [rbx],esi
    2651:	34 38                	xor    al,0x38
    2653:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    2656:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31385693 <_end+0x3118467b>
    265c:	34 35                	xor    al,0x35
    265e:	32 37                	xor    dh,BYTE PTR [rdi]
    2660:	34 32                	xor    al,0x32
    2662:	33 37                	xor    esi,DWORD PTR [rdi]
    2664:	33 31                	xor    esi,DWORD PTR [rcx]
    2666:	37                   	(bad)  
    2667:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    266a:	35 37 65 2b 33       	xor    eax,0x332b6537
    266f:	30 38                	xor    BYTE PTR [rax],bh
    2671:	46                   	rex.RX
    2672:	36 34 00             	ss xor al,0x0
    2675:	5f                   	pop    rdi
    2676:	5f                   	pop    rdi
    2677:	73 69                	jae    26e2 <__FRAME_END__+0x1eee>
    2679:	7a 65                	jp     26e0 <__FRAME_END__+0x1eec>
    267b:	5f                   	pop    rdi
    267c:	74 5f                	je     26dd <__FRAME_END__+0x1ee9>
    267e:	5f                   	pop    rdi
    267f:	20 00                	and    BYTE PTR [rax],al
    2681:	5f                   	pop    rdi
    2682:	5f                   	pop    rdi
    2683:	55                   	push   rbp
    2684:	49                   	rex.WB
    2685:	4e 54                	rex.WRX push rsp
    2687:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    268a:	59                   	pop    rcx
    268b:	50                   	push   rax
    268c:	45 5f                	rex.RB pop r15
    268e:	5f                   	pop    rdi
    268f:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    2692:	73 69                	jae    26fd <__FRAME_END__+0x1f09>
    2694:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2696:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    269b:	61                   	(bad)  
    269c:	72 00                	jb     269e <__FRAME_END__+0x1eaa>
    269e:	5f                   	pop    rdi
    269f:	49                   	rex.WB
    26a0:	4f 5f                	rex.WRXB pop r15
    26a2:	66 69 6c 65 5f 66 6c 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6c66
    26a9:	61                   	(bad)  
    26aa:	67 73 20             	addr32 jae 26cd <__FRAME_END__+0x1ed9>
    26ad:	5f                   	pop    rdi
    26ae:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    26b0:	61                   	(bad)  
    26b1:	67 73 00             	addr32 jae 26b4 <__FRAME_END__+0x1ec0>
    26b4:	5f                   	pop    rdi
    26b5:	5f                   	pop    rdi
    26b6:	55                   	push   rbp
    26b7:	53                   	push   rbx
    26b8:	45 5f                	rex.RB pop r15
    26ba:	58                   	pop    rax
    26bb:	4f 50                	rex.WRXB push r8
    26bd:	45                   	rex.RB
    26be:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    26c2:	58                   	pop    rax
    26c3:	53                   	push   rbx
    26c4:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    26c8:	49                   	rex.WB
    26c9:	4e 54                	rex.WRX push rsp
    26cb:	5f                   	pop    rdi
    26cc:	46                   	rex.RX
    26cd:	41 53                	push   r11
    26cf:	54                   	push   rsp
    26d0:	33 32                	xor    esi,DWORD PTR [rdx]
    26d2:	5f                   	pop    rdi
    26d3:	54                   	push   rsp
    26d4:	59                   	pop    rcx
    26d5:	50                   	push   rax
    26d6:	45 5f                	rex.RB pop r15
    26d8:	5f                   	pop    rdi
    26d9:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    26dd:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    26e1:	74 00                	je     26e3 <__FRAME_END__+0x1eef>
    26e3:	5f                   	pop    rdi
    26e4:	49                   	rex.WB
    26e5:	4f 53                	rex.WRXB push r11
    26e7:	5f                   	pop    rdi
    26e8:	49                   	rex.WB
    26e9:	4e 50                	rex.WRX push rax
    26eb:	55                   	push   rbp
    26ec:	54                   	push   rsp
    26ed:	20 31                	and    BYTE PTR [rcx],dh
    26ef:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26f2:	47                   	rex.RXB
    26f3:	43                   	rex.XB
    26f4:	43 5f                	rex.XB pop r15
    26f6:	41 53                	push   r11
    26f8:	4d 5f                	rex.WRB pop r15
    26fa:	46                   	rex.RX
    26fb:	4c                   	rex.WR
    26fc:	41                   	rex.B
    26fd:	47 5f                	rex.RXB pop r15
    26ff:	4f 55                	rex.WRXB push r13
    2701:	54                   	push   rsp
    2702:	50                   	push   rax
    2703:	55                   	push   rbp
    2704:	54                   	push   rsp
    2705:	53                   	push   rbx
    2706:	5f                   	pop    rdi
    2707:	5f                   	pop    rdi
    2708:	20 31                	and    BYTE PTR [rcx],dh
    270a:	00 70 75             	add    BYTE PTR [rax+0x75],dh
    270d:	74 63                	je     2772 <__FRAME_END__+0x1f7e>
    270f:	28 5f 63             	sub    BYTE PTR [rdi+0x63],bl
    2712:	68 2c 5f 66 70       	push   0x70665f2c
    2717:	29 20                	sub    DWORD PTR [rax],esp
    2719:	5f                   	pop    rdi
    271a:	49                   	rex.WB
    271b:	4f 5f                	rex.WRXB pop r15
    271d:	70 75                	jo     2794 <__FRAME_END__+0x1fa0>
    271f:	74 63                	je     2784 <__FRAME_END__+0x1f90>
    2721:	20 28                	and    BYTE PTR [rax],ch
    2723:	5f                   	pop    rdi
    2724:	63 68 2c             	movsxd ebp,DWORD PTR [rax+0x2c]
    2727:	20 5f 66             	and    BYTE PTR [rdi+0x66],bl
    272a:	70 29                	jo     2755 <__FRAME_END__+0x1f61>
    272c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    272f:	55                   	push   rbp
    2730:	49                   	rex.WB
    2731:	4e 54                	rex.WRX push rsp
    2733:	5f                   	pop    rdi
    2734:	4c                   	rex.WR
    2735:	45                   	rex.RB
    2736:	41 53                	push   r11
    2738:	54                   	push   rsp
    2739:	36 34 5f             	ss xor al,0x5f
    273c:	4d                   	rex.WRB
    273d:	41 58                	pop    r8
    273f:	5f                   	pop    rdi
    2740:	5f                   	pop    rdi
    2741:	20 30                	and    BYTE PTR [rax],dh
    2743:	78 66                	js     27ab <__FRAME_END__+0x1fb7>
    2745:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    274c:	66 66 66 66 66 66 66 
    2753:	66 55                	push   bp
    2755:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2759:	50                   	push   rax
    275a:	4d 54                	rex.WRB push r12
    275c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    275f:	55                   	push   rbp
    2760:	51                   	push   rcx
    2761:	55                   	push   rbp
    2762:	41                   	rex.B
    2763:	44 5f                	rex.R pop rdi
    2765:	54                   	push   rsp
    2766:	59                   	pop    rcx
    2767:	50                   	push   rax
    2768:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    276c:	73 69                	jae    27d7 <__FRAME_END__+0x1fe3>
    276e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2770:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2776:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    277a:	74 00                	je     277c <__FRAME_END__+0x1f88>
    277c:	5f                   	pop    rdi
    277d:	5f                   	pop    rdi
    277e:	45                   	rex.RB
    277f:	4c                   	rex.WR
    2780:	46 5f                	rex.RX pop rdi
    2782:	5f                   	pop    rdi
    2783:	20 31                	and    BYTE PTR [rcx],dh
    2785:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2788:	46                   	rex.RX
    2789:	4c 54                	rex.WR push rsp
    278b:	33 32                	xor    esi,DWORD PTR [rdx]
    278d:	58                   	pop    rax
    278e:	5f                   	pop    rdi
    278f:	4d                   	rex.WRB
    2790:	49                   	rex.WB
    2791:	4e 5f                	rex.WRX pop rdi
    2793:	5f                   	pop    rdi
    2794:	20 32                	and    BYTE PTR [rdx],dh
    2796:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    2799:	35 30 37 33 38       	xor    eax,0x38333730
    279e:	35 38 35 30 37       	xor    eax,0x37303538
    27a3:	32 30                	xor    dh,BYTE PTR [rax]
    27a5:	31 33                	xor    DWORD PTR [rbx],esi
    27a7:	38 33                	cmp    BYTE PTR [rbx],dh
    27a9:	30 39                	xor    BYTE PTR [rcx],bh
    27ab:	30 32                	xor    BYTE PTR [rdx],dh
    27ad:	33 32                	xor    esi,DWORD PTR [rdx]
    27af:	37                   	(bad)  
    27b0:	31 37                	xor    DWORD PTR [rdi],esi
    27b2:	33 33                	xor    esi,DWORD PTR [rbx]
    27b4:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    27b7:	34 30                	xor    al,0x30
    27b9:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
    27c0:	33 32                	xor    esi,DWORD PTR [rdx]
    27c2:	78 00                	js     27c4 <__FRAME_END__+0x1fd0>
    27c4:	5f                   	pop    rdi
    27c5:	5f                   	pop    rdi
    27c6:	55                   	push   rbp
    27c7:	49                   	rex.WB
    27c8:	4e 54                	rex.WRX push rsp
    27ca:	50                   	push   rax
    27cb:	54                   	push   rsp
    27cc:	52                   	push   rdx
    27cd:	5f                   	pop    rdi
    27ce:	54                   	push   rsp
    27cf:	59                   	pop    rcx
    27d0:	50                   	push   rax
    27d1:	45 5f                	rex.RB pop r15
    27d3:	5f                   	pop    rdi
    27d4:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    27d8:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    27dc:	73 69                	jae    2847 <__FRAME_END__+0x2053>
    27de:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    27e0:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    27e5:	74 00                	je     27e7 <__FRAME_END__+0x1ff3>
    27e7:	5f                   	pop    rdi
    27e8:	5f                   	pop    rdi
    27e9:	49                   	rex.WB
    27ea:	4e 54                	rex.WRX push rsp
    27ec:	31 36                	xor    DWORD PTR [rsi],esi
    27ee:	5f                   	pop    rdi
    27ef:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    27f3:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    27f6:	5f                   	pop    rdi
    27f7:	5f                   	pop    rdi
    27f8:	47                   	rex.RXB
    27f9:	43                   	rex.XB
    27fa:	43 5f                	rex.XB pop r15
    27fc:	48                   	rex.W
    27fd:	41 56                	push   r14
    27ff:	45 5f                	rex.RB pop r15
    2801:	44 57                	rex.R push rdi
    2803:	41 52                	push   r10
    2805:	46 32 5f 43          	rex.RX xor r11b,BYTE PTR [rdi+0x43]
    2809:	46                   	rex.RX
    280a:	49 5f                	rex.WB pop r15
    280c:	41 53                	push   r11
    280e:	4d 20 31             	rex.WRB and BYTE PTR [r9],r14b
    2811:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2814:	53                   	push   rbx
    2815:	49 5a                	rex.WB pop r10
    2817:	45                   	rex.RB
    2818:	4f                   	rex.WRXB
    2819:	46 5f                	rex.RX pop rdi
    281b:	46                   	rex.RX
    281c:	4c                   	rex.WR
    281d:	4f                   	rex.WRXB
    281e:	41 54                	push   r12
    2820:	5f                   	pop    rdi
    2821:	5f                   	pop    rdi
    2822:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2825:	5f                   	pop    rdi
    2826:	5f                   	pop    rdi
    2827:	44                   	rex.R
    2828:	45                   	rex.RB
    2829:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    282c:	5f                   	pop    rdi
    282d:	53                   	push   rbx
    282e:	55                   	push   rbp
    282f:	42                   	rex.X
    2830:	4e                   	rex.WRX
    2831:	4f 52                	rex.WRXB push r10
    2833:	4d                   	rex.WRB
    2834:	41                   	rex.B
    2835:	4c 5f                	rex.WR pop rdi
    2837:	4d                   	rex.WRB
    2838:	49                   	rex.WB
    2839:	4e 5f                	rex.WRX pop rdi
    283b:	5f                   	pop    rdi
    283c:	20 30                	and    BYTE PTR [rax],dh
    283e:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    2841:	30 30                	xor    BYTE PTR [rax],dh
    2843:	30 31                	xor    BYTE PTR [rcx],dh
    2845:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    284b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    284e:	4f 5f                	rex.WRXB pop r15
    2850:	49 53                	rex.WB push r11
    2852:	5f                   	pop    rdi
    2853:	41 50                	push   r8
    2855:	50                   	push   rax
    2856:	45                   	rex.RB
    2857:	4e                   	rex.WRX
    2858:	44                   	rex.R
    2859:	49                   	rex.WB
    285a:	4e                   	rex.WRX
    285b:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    285e:	78 31                	js     2891 <__FRAME_END__+0x209d>
    2860:	30 30                	xor    BYTE PTR [rax],dh
    2862:	30 00                	xor    BYTE PTR [rax],al
    2864:	5f                   	pop    rdi
    2865:	5f                   	pop    rdi
    2866:	46                   	rex.RX
    2867:	4c 54                	rex.WR push rsp
    2869:	36 34 58             	ss xor al,0x58
    286c:	5f                   	pop    rdi
    286d:	48                   	rex.W
    286e:	41 53                	push   r11
    2870:	5f                   	pop    rdi
    2871:	51                   	push   rcx
    2872:	55                   	push   rbp
    2873:	49                   	rex.WB
    2874:	45 54                	rex.RB push r12
    2876:	5f                   	pop    rdi
    2877:	4e                   	rex.WRX
    2878:	41                   	rex.B
    2879:	4e 5f                	rex.WRX pop rdi
    287b:	5f                   	pop    rdi
    287c:	20 31                	and    BYTE PTR [rcx],dh
    287e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2881:	46                   	rex.RX
    2882:	4c 54                	rex.WR push rsp
    2884:	5f                   	pop    rdi
    2885:	48                   	rex.W
    2886:	41 53                	push   r11
    2888:	5f                   	pop    rdi
    2889:	49                   	rex.WB
    288a:	4e                   	rex.WRX
    288b:	46                   	rex.RX
    288c:	49                   	rex.WB
    288d:	4e                   	rex.WRX
    288e:	49 54                	rex.WB push r12
    2890:	59                   	pop    rcx
    2891:	5f                   	pop    rdi
    2892:	5f                   	pop    rdi
    2893:	20 31                	and    BYTE PTR [rcx],dh
    2895:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2898:	4f 53                	rex.WRXB push r11
    289a:	5f                   	pop    rdi
    289b:	4e                   	rex.WRX
    289c:	4f 52                	rex.WRXB push r10
    289e:	45 50                	rex.RB push r8
    28a0:	4c                   	rex.WR
    28a1:	41                   	rex.B
    28a2:	43                   	rex.XB
    28a3:	45 20 36             	and    BYTE PTR [r14],r14b
    28a6:	34 00                	xor    al,0x0
    28a8:	5f                   	pop    rdi
    28a9:	5f                   	pop    rdi
    28aa:	53                   	push   rbx
    28ab:	54                   	push   rsp
    28ac:	44 5f                	rex.R pop rdi
    28ae:	54                   	push   rsp
    28af:	59                   	pop    rcx
    28b0:	50                   	push   rax
    28b1:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    28b5:	55                   	push   rbp
    28b6:	53                   	push   rbx
    28b7:	45 5f                	rex.RB pop r15
    28b9:	50                   	push   rax
    28ba:	4f 53                	rex.WRXB push r11
    28bc:	49 58                	rex.WB pop r8
    28be:	31 39                	xor    DWORD PTR [rcx],edi
    28c0:	39 33                	cmp    DWORD PTR [rbx],esi
    28c2:	30 39                	xor    BYTE PTR [rcx],bh
    28c4:	20 31                	and    BYTE PTR [rcx],dh
    28c6:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    28c9:	4f 5f                	rex.WRXB pop r15
    28cb:	73 69                	jae    2936 <__FRAME_END__+0x2142>
    28cd:	7a 65                	jp     2934 <__FRAME_END__+0x2140>
    28cf:	5f                   	pop    rdi
    28d0:	74 20                	je     28f2 <__FRAME_END__+0x20fe>
    28d2:	73 69                	jae    293d <__FRAME_END__+0x2149>
    28d4:	7a 65                	jp     293b <__FRAME_END__+0x2147>
    28d6:	5f                   	pop    rdi
    28d7:	74 00                	je     28d9 <__FRAME_END__+0x20e5>
    28d9:	5f                   	pop    rdi
    28da:	5f                   	pop    rdi
    28db:	49                   	rex.WB
    28dc:	4e                   	rex.WRX
    28dd:	4f                   	rex.WRXB
    28de:	36 34 5f             	ss xor al,0x5f
    28e1:	54                   	push   rsp
    28e2:	5f                   	pop    rdi
    28e3:	54                   	push   rsp
    28e4:	59                   	pop    rcx
    28e5:	50                   	push   rax
    28e6:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    28ea:	55                   	push   rbp
    28eb:	51                   	push   rcx
    28ec:	55                   	push   rbp
    28ed:	41                   	rex.B
    28ee:	44 5f                	rex.R pop rdi
    28f0:	54                   	push   rsp
    28f1:	59                   	pop    rcx
    28f2:	50                   	push   rax
    28f3:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    28f7:	47                   	rex.RXB
    28f8:	4e 55                	rex.WRX push rbp
    28fa:	5f                   	pop    rdi
    28fb:	4c                   	rex.WR
    28fc:	49                   	rex.WB
    28fd:	42 52                	rex.X push rdx
    28ff:	41 52                	push   r10
    2901:	59                   	pop    rcx
    2902:	5f                   	pop    rdi
    2903:	5f                   	pop    rdi
    2904:	20 36                	and    BYTE PTR [rsi],dh
    2906:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2909:	53                   	push   rbx
    290a:	54                   	push   rsp
    290b:	44                   	rex.R
    290c:	43 5f                	rex.XB pop r15
    290e:	5f                   	pop    rdi
    290f:	20 31                	and    BYTE PTR [rcx],dh
    2911:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2914:	67 6c                	ins    BYTE PTR es:[edi],dx
    2916:	69 62 63 5f 63 39 39 	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
    291d:	5f                   	pop    rdi
    291e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2920:	65 78 61             	gs js  2984 <__FRAME_END__+0x2190>
    2923:	72 72                	jb     2997 <__FRAME_END__+0x21a3>
    2925:	5f                   	pop    rdi
    2926:	61                   	(bad)  
    2927:	76 61                	jbe    298a <__FRAME_END__+0x2196>
    2929:	69 6c 61 62 6c 65 20 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x3120656c
    2930:	31 
    2931:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2934:	53                   	push   rbx
    2935:	53                   	push   rbx
    2936:	45 32 5f 5f          	xor    r11b,BYTE PTR [r15+0x5f]
    293a:	20 31                	and    BYTE PTR [rcx],dh
    293c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    293f:	53                   	push   rbx
    2940:	4c                   	rex.WR
    2941:	4f                   	rex.WRXB
    2942:	4e                   	rex.WRX
    2943:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    2946:	5f                   	pop    rdi
    2947:	54                   	push   rsp
    2948:	59                   	pop    rcx
    2949:	50                   	push   rax
    294a:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
    294e:	74 00                	je     2950 <__FRAME_END__+0x215c>
    2950:	5f                   	pop    rdi
    2951:	5f                   	pop    rdi
    2952:	44                   	rex.R
    2953:	42                   	rex.X
    2954:	4c 5f                	rex.WR pop rdi
    2956:	4d                   	rex.WRB
    2957:	41 58                	pop    r8
    2959:	5f                   	pop    rdi
    295a:	45 58                	rex.RB pop r8
    295c:	50                   	push   rax
    295d:	5f                   	pop    rdi
    295e:	5f                   	pop    rdi
    295f:	20 31                	and    BYTE PTR [rcx],dh
    2961:	30 32                	xor    BYTE PTR [rdx],dh
    2963:	34 00                	xor    al,0x0
    2965:	5f                   	pop    rdi
    2966:	5f                   	pop    rdi
    2967:	53                   	push   rbx
    2968:	49 5a                	rex.WB pop r10
    296a:	45                   	rex.RB
    296b:	4f                   	rex.WRXB
    296c:	46 5f                	rex.RX pop rdi
    296e:	4c                   	rex.WR
    296f:	4f                   	rex.WRXB
    2970:	4e                   	rex.WRX
    2971:	47 5f                	rex.RXB pop r15
    2973:	5f                   	pop    rdi
    2974:	20 38                	and    BYTE PTR [rax],bh
    2976:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2979:	41 54                	push   r12
    297b:	4f                   	rex.WRXB
    297c:	4d                   	rex.WRB
    297d:	49                   	rex.WB
    297e:	43 5f                	rex.XB pop r15
    2980:	43                   	rex.XB
    2981:	4f                   	rex.WRXB
    2982:	4e 53                	rex.WRX push rbx
    2984:	55                   	push   rbp
    2985:	4d                   	rex.WRB
    2986:	45 20 31             	and    BYTE PTR [r9],r14b
    2989:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    298c:	55                   	push   rbp
    298d:	53                   	push   rbx
    298e:	45 5f                	rex.RB pop r15
    2990:	46                   	rex.RX
    2991:	49                   	rex.WB
    2992:	4c                   	rex.WR
    2993:	45 5f                	rex.RB pop r15
    2995:	4f                   	rex.WRXB
    2996:	46                   	rex.RX
    2997:	46 53                	rex.RX push rbx
    2999:	45 54                	rex.RB push r12
    299b:	36 34 00             	ss xor al,0x0
    299e:	5f                   	pop    rdi
    299f:	49                   	rex.WB
    29a0:	4f 5f                	rex.WRXB pop r15
    29a2:	46                   	rex.RX
    29a3:	4c                   	rex.WR
    29a4:	41                   	rex.B
    29a5:	47 53                	rex.RXB push r11
    29a7:	32 5f 4d             	xor    bl,BYTE PTR [rdi+0x4d]
    29aa:	4d                   	rex.WRB
    29ab:	41 50                	push   r8
    29ad:	20 31                	and    BYTE PTR [rcx],dh
    29af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29b2:	46                   	rex.RX
    29b3:	4c 54                	rex.WR push rsp
    29b5:	33 32                	xor    esi,DWORD PTR [rdx]
    29b7:	5f                   	pop    rdi
    29b8:	4d                   	rex.WRB
    29b9:	49                   	rex.WB
    29ba:	4e 5f                	rex.WRX pop rdi
    29bc:	5f                   	pop    rdi
    29bd:	20 31                	and    BYTE PTR [rcx],dh
    29bf:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    29c2:	35 34 39 34 33       	xor    eax,0x33343934
    29c7:	35 30 38 32 32       	xor    eax,0x32323830
    29cc:	32 38                	xor    bh,BYTE PTR [rax]
    29ce:	37                   	(bad)  
    29cf:	35 30 37 39 36       	xor    eax,0x36393730
    29d4:	38 37                	cmp    BYTE PTR [rdi],dh
    29d6:	33 36                	xor    esi,DWORD PTR [rsi]
    29d8:	35 33 37 32 32       	xor    eax,0x32323733
    29dd:	32 32                	xor    dh,BYTE PTR [rdx]
    29df:	34 35                	xor    al,0x35
    29e1:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    29e5:	33 38                	xor    edi,DWORD PTR [rax]
    29e7:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    29ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29ed:	57                   	push   rdi
    29ee:	49                   	rex.WB
    29ef:	4e 54                	rex.WRX push rsp
    29f1:	5f                   	pop    rdi
    29f2:	54                   	push   rsp
    29f3:	59                   	pop    rcx
    29f4:	50                   	push   rax
    29f5:	45 5f                	rex.RB pop r15
    29f7:	5f                   	pop    rdi
    29f8:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    29fb:	73 69                	jae    2a66 <__FRAME_END__+0x2272>
    29fd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    29ff:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    2a04:	74 00                	je     2a06 <__FRAME_END__+0x2212>
    2a06:	5f                   	pop    rdi
    2a07:	5f                   	pop    rdi
    2a08:	55                   	push   rbp
    2a09:	53                   	push   rbx
    2a0a:	45 5f                	rex.RB pop r15
    2a0c:	4d                   	rex.WRB
    2a0d:	49 53                	rex.WB push r11
    2a0f:	43 00 5f 49          	rex.XB add BYTE PTR [r15+0x49],bl
    2a13:	4f 5f                	rex.WRXB pop r15
    2a15:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    2a19:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a1a:	75 70                	jne    2a8c <__FRAME_END__+0x2298>
    2a1c:	5f                   	pop    rdi
    2a1d:	72 65                	jb     2a84 <__FRAME_END__+0x2290>
    2a1f:	67 69 6f 6e 5f 65 6e 	imul   ebp,DWORD PTR [edi+0x6e],0x646e655f
    2a26:	64 
    2a27:	28 5f 44             	sub    BYTE PTR [rdi+0x44],bl
    2a2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a2b:	69 74 29 20 00 5f 5f 	imul   esi,DWORD PTR [rcx+rbp*1+0x20],0x495f5f00
    2a32:	49 
    2a33:	4e 54                	rex.WRX push rsp
    2a35:	31 36                	xor    DWORD PTR [rsi],esi
    2a37:	5f                   	pop    rdi
    2a38:	4d                   	rex.WRB
    2a39:	41 58                	pop    r8
    2a3b:	5f                   	pop    rdi
    2a3c:	5f                   	pop    rdi
    2a3d:	20 30                	and    BYTE PTR [rax],dh
    2a3f:	78 37                	js     2a78 <__FRAME_END__+0x2284>
    2a41:	66 66 66 00 5f 50    	data16 data16 data16 add BYTE PTR [rdi+0x50],bl
    2a47:	4f 53                	rex.WRXB push r11
    2a49:	49 58                	rex.WB pop r8
    2a4b:	5f                   	pop    rdi
    2a4c:	43 5f                	rex.XB pop r15
    2a4e:	53                   	push   rbx
    2a4f:	4f 55                	rex.WRXB push r13
    2a51:	52                   	push   rdx
    2a52:	43                   	rex.XB
    2a53:	45 20 32             	and    BYTE PTR [r10],r14b
    2a56:	30 30                	xor    BYTE PTR [rax],dh
    2a58:	38 30                	cmp    BYTE PTR [rax],dh
    2a5a:	39 4c 00 5f          	cmp    DWORD PTR [rax+rax*1+0x5f],ecx
    2a5e:	5f                   	pop    rdi
    2a5f:	53                   	push   rbx
    2a60:	43                   	rex.XB
    2a61:	48                   	rex.W
    2a62:	41 52                	push   r10
    2a64:	5f                   	pop    rdi
    2a65:	57                   	push   rdi
    2a66:	49                   	rex.WB
    2a67:	44 54                	rex.R push rsp
    2a69:	48 5f                	rex.W pop rdi
    2a6b:	5f                   	pop    rdi
    2a6c:	20 38                	and    BYTE PTR [rax],bh
    2a6e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2a71:	55                   	push   rbp
    2a72:	49                   	rex.WB
    2a73:	4e 54                	rex.WRX push rsp
    2a75:	33 32                	xor    esi,DWORD PTR [rdx]
    2a77:	5f                   	pop    rdi
    2a78:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2a7c:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    2a7f:	23 23                	and    esp,DWORD PTR [rbx]
    2a81:	20 55 00             	and    BYTE PTR [rbp+0x0],dl
    2a84:	5f                   	pop    rdi
    2a85:	5f                   	pop    rdi
    2a86:	4c                   	rex.WR
    2a87:	44                   	rex.R
    2a88:	42                   	rex.X
    2a89:	4c 5f                	rex.WR pop rdi
    2a8b:	4d                   	rex.WRB
    2a8c:	49                   	rex.WB
    2a8d:	4e 5f                	rex.WRX pop rdi
    2a8f:	31 30                	xor    DWORD PTR [rax],esi
    2a91:	5f                   	pop    rdi
    2a92:	45 58                	rex.RB pop r8
    2a94:	50                   	push   rax
    2a95:	5f                   	pop    rdi
    2a96:	5f                   	pop    rdi
    2a97:	20 28                	and    BYTE PTR [rax],ch
    2a99:	2d 34 39 33 31       	sub    eax,0x31333934
    2a9e:	29 00                	sub    DWORD PTR [rax],eax
    2aa0:	5f                   	pop    rdi
    2aa1:	53                   	push   rbx
    2aa2:	54                   	push   rsp
    2aa3:	44                   	rex.R
    2aa4:	49                   	rex.WB
    2aa5:	4f 5f                	rex.WRXB pop r15
    2aa7:	55                   	push   rbp
    2aa8:	53                   	push   rbx
    2aa9:	45 53                	rex.RB push r11
    2aab:	5f                   	pop    rdi
    2aac:	49                   	rex.WB
    2aad:	4f 53                	rex.WRXB push r11
    2aaf:	54                   	push   rsp
    2ab0:	52                   	push   rdx
    2ab1:	45                   	rex.RB
    2ab2:	41                   	rex.B
    2ab3:	4d 20 00             	rex.WRB and BYTE PTR [r8],r8b
    2ab6:	5f                   	pop    rdi
    2ab7:	5f                   	pop    rdi
    2ab8:	53                   	push   rbx
    2ab9:	49 5a                	rex.WB pop r10
    2abb:	45                   	rex.RB
    2abc:	4f                   	rex.WRXB
    2abd:	46 5f                	rex.RX pop rdi
    2abf:	44                   	rex.R
    2ac0:	4f 55                	rex.WRXB push r13
    2ac2:	42                   	rex.X
    2ac3:	4c                   	rex.WR
    2ac4:	45 5f                	rex.RB pop r15
    2ac6:	5f                   	pop    rdi
    2ac7:	20 38                	and    BYTE PTR [rax],bh
    2ac9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2acc:	55                   	push   rbp
    2acd:	49                   	rex.WB
    2ace:	4e 54                	rex.WRX push rsp
    2ad0:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    2ad3:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    2ad6:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2ad9:	5f                   	pop    rdi
    2ada:	5f                   	pop    rdi
    2adb:	42                   	rex.X
    2adc:	4c                   	rex.WR
    2add:	4b                   	rex.WXB
    2ade:	43                   	rex.XB
    2adf:	4e 54                	rex.WRX push rsp
    2ae1:	36 34 5f             	ss xor al,0x5f
    2ae4:	54                   	push   rsp
    2ae5:	5f                   	pop    rdi
    2ae6:	54                   	push   rsp
    2ae7:	59                   	pop    rcx
    2ae8:	50                   	push   rax
    2ae9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2aed:	53                   	push   rbx
    2aee:	51                   	push   rcx
    2aef:	55                   	push   rbp
    2af0:	41                   	rex.B
    2af1:	44 5f                	rex.R pop rdi
    2af3:	54                   	push   rsp
    2af4:	59                   	pop    rcx
    2af5:	50                   	push   rax
    2af6:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2afa:	55                   	push   rbp
    2afb:	53                   	push   rbx
    2afc:	45 5f                	rex.RB pop r15
    2afe:	46                   	rex.RX
    2aff:	4f 52                	rex.WRXB push r10
    2b01:	54                   	push   rsp
    2b02:	49                   	rex.WB
    2b03:	46 59                	rex.RX pop rcx
    2b05:	5f                   	pop    rdi
    2b06:	4c                   	rex.WR
    2b07:	45 56                	rex.RB push r14
    2b09:	45                   	rex.RB
    2b0a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2b0e:	47                   	rex.RXB
    2b0f:	4c                   	rex.WR
    2b10:	49                   	rex.WB
    2b11:	42                   	rex.X
    2b12:	43 5f                	rex.XB pop r15
    2b14:	55                   	push   rbp
    2b15:	53                   	push   rbx
    2b16:	45 5f                	rex.RB pop r15
    2b18:	4c                   	rex.WR
    2b19:	49                   	rex.WB
    2b1a:	42 5f                	rex.X pop rdi
    2b1c:	45 58                	rex.RB pop r8
    2b1e:	54                   	push   rsp
    2b1f:	32 00                	xor    al,BYTE PTR [rax]
    2b21:	5f                   	pop    rdi
    2b22:	5f                   	pop    rdi
    2b23:	57                   	push   rdi
    2b24:	49                   	rex.WB
    2b25:	4e 54                	rex.WRX push rsp
    2b27:	5f                   	pop    rdi
    2b28:	4d                   	rex.WRB
    2b29:	49                   	rex.WB
    2b2a:	4e 5f                	rex.WRX pop rdi
    2b2c:	5f                   	pop    rdi
    2b2d:	20 30                	and    BYTE PTR [rax],dh
    2b2f:	55                   	push   rbp
    2b30:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b33:	4c                   	rex.WR
    2b34:	44                   	rex.R
    2b35:	42                   	rex.X
    2b36:	4c 5f                	rex.WR pop rdi
    2b38:	4d                   	rex.WRB
    2b39:	41                   	rex.B
    2b3a:	4e 54                	rex.WRX push rsp
    2b3c:	5f                   	pop    rdi
    2b3d:	44                   	rex.R
    2b3e:	49                   	rex.WB
    2b3f:	47 5f                	rex.RXB pop r15
    2b41:	5f                   	pop    rdi
    2b42:	20 36                	and    BYTE PTR [rsi],dh
    2b44:	34 00                	xor    al,0x0
    2b46:	5f                   	pop    rdi
    2b47:	5f                   	pop    rdi
    2b48:	70 61                	jo     2bab <__FRAME_END__+0x23b7>
    2b4a:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    2b4d:	5f                   	pop    rdi
    2b4e:	5f                   	pop    rdi
    2b4f:	70 61                	jo     2bb2 <__FRAME_END__+0x23be>
    2b51:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2b54:	5f                   	pop    rdi
    2b55:	5f                   	pop    rdi
    2b56:	70 61                	jo     2bb9 <__FRAME_END__+0x23c5>
    2b58:	64 33 00             	xor    eax,DWORD PTR fs:[rax]
    2b5b:	5f                   	pop    rdi
    2b5c:	5f                   	pop    rdi
    2b5d:	70 61                	jo     2bc0 <__FRAME_END__+0x23cc>
    2b5f:	64 34 00             	fs xor al,0x0
    2b62:	5f                   	pop    rdi
    2b63:	5f                   	pop    rdi
    2b64:	70 61                	jo     2bc7 <__FRAME_END__+0x23d3>
    2b66:	64 35 00 5f 5f 78    	fs xor eax,0x785f5f00
    2b6c:	38 36                	cmp    BYTE PTR [rsi],dh
    2b6e:	5f                   	pop    rdi
    2b6f:	36 34 20             	ss xor al,0x20
    2b72:	31 00                	xor    DWORD PTR [rax],eax
    2b74:	5f                   	pop    rdi
    2b75:	5f                   	pop    rdi
    2b76:	4c                   	rex.WR
    2b77:	44                   	rex.R
    2b78:	42                   	rex.X
    2b79:	4c 5f                	rex.WR pop rdi
    2b7b:	45 50                	rex.RB push r8
    2b7d:	53                   	push   rbx
    2b7e:	49                   	rex.WB
    2b7f:	4c                   	rex.WR
    2b80:	4f                   	rex.WRXB
    2b81:	4e 5f                	rex.WRX pop rdi
    2b83:	5f                   	pop    rdi
    2b84:	20 31                	and    BYTE PTR [rcx],dh
    2b86:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
    2b89:	34 32                	xor    al,0x32
    2b8b:	30 32                	xor    BYTE PTR [rdx],dh
    2b8d:	31 37                	xor    DWORD PTR [rdi],esi
    2b8f:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2b92:	35 35 30 34 34       	xor    eax,0x34343035
    2b97:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
    2b9a:	30 37                	xor    BYTE PTR [rdi],dh
    2b9c:	34 35                	xor    al,0x35
    2b9e:	32 38                	xor    bh,BYTE PTR [rax]
    2ba0:	30 30                	xor    BYTE PTR [rax],dh
    2ba2:	38 36                	cmp    BYTE PTR [rsi],dh
    2ba4:	39 39                	cmp    DWORD PTR [rcx],edi
    2ba6:	34 31                	xor    al,0x31
    2ba8:	37                   	(bad)  
    2ba9:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
    2bac:	31 39                	xor    DWORD PTR [rcx],edi
    2bae:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2bb2:	62                   	(bad)  
    2bb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bb4:	73 30                	jae    2be6 <__FRAME_END__+0x23f2>
    2bb6:	28 70 74             	sub    BYTE PTR [rax+0x74],dh
    2bb9:	72 29                	jb     2be4 <__FRAME_END__+0x23f0>
    2bbb:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2bbe:	62                   	(bad)  
    2bbf:	75 69                	jne    2c2a <__FRAME_END__+0x2436>
    2bc1:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc2:	74 69                	je     2c2d <__FRAME_END__+0x2439>
    2bc4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bc5:	5f                   	pop    rdi
    2bc6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bc7:	62                   	(bad)  
    2bc8:	6a 65                	push   0x65
    2bca:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2bce:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2bd5:	72 2c                	jb     2c03 <__FRAME_END__+0x240f>
    2bd7:	20 30                	and    BYTE PTR [rax],dh
    2bd9:	29 00                	sub    DWORD PTR [rax],eax
    2bdb:	5f                   	pop    rdi
    2bdc:	49                   	rex.WB
    2bdd:	4f                   	rex.WRXB
    2bde:	4c                   	rex.WR
    2bdf:	42                   	rex.X
    2be0:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
    2be3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2be6:	61                   	(bad)  
    2be7:	74 74                	je     2c5d <__FRAME_END__+0x2469>
    2be9:	72 69                	jb     2c54 <__FRAME_END__+0x2460>
    2beb:	62                   	(bad)  
    2bec:	75 74                	jne    2c62 <__FRAME_END__+0x246e>
    2bee:	65 5f                	gs pop rdi
    2bf0:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2bf2:	72 6d                	jb     2c61 <__FRAME_END__+0x246d>
    2bf4:	61                   	(bad)  
    2bf5:	74 5f                	je     2c56 <__FRAME_END__+0x2462>
    2bf7:	61                   	(bad)  
    2bf8:	72 67                	jb     2c61 <__FRAME_END__+0x246d>
    2bfa:	5f                   	pop    rdi
    2bfb:	5f                   	pop    rdi
    2bfc:	28 78 29             	sub    BYTE PTR [rax+0x29],bh
    2bff:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2c02:	61                   	(bad)  
    2c03:	74 74                	je     2c79 <__FRAME_END__+0x2485>
    2c05:	72 69                	jb     2c70 <__FRAME_END__+0x247c>
    2c07:	62                   	(bad)  
    2c08:	75 74                	jne    2c7e <__FRAME_END__+0x248a>
    2c0a:	65 5f                	gs pop rdi
    2c0c:	5f                   	pop    rdi
    2c0d:	20 28                	and    BYTE PTR [rax],ch
    2c0f:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2c12:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2c14:	72 6d                	jb     2c83 <__FRAME_END__+0x248f>
    2c16:	61                   	(bad)  
    2c17:	74 5f                	je     2c78 <__FRAME_END__+0x2484>
    2c19:	61                   	(bad)  
    2c1a:	72 67                	jb     2c83 <__FRAME_END__+0x248f>
    2c1c:	5f                   	pop    rdi
    2c1d:	5f                   	pop    rdi
    2c1e:	20 28                	and    BYTE PTR [rax],ch
    2c20:	78 29                	js     2c4b <__FRAME_END__+0x2457>
    2c22:	29 29                	sub    DWORD PTR [rcx],ebp
    2c24:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c27:	5f                   	pop    rdi
    2c28:	5f                   	pop    rdi
    2c29:	46                   	rex.RX
    2c2a:	49                   	rex.WB
    2c2b:	4c                   	rex.WR
    2c2c:	45 5f                	rex.RB pop r15
    2c2e:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    2c35:	20 
    2c36:	31 00                	xor    DWORD PTR [rax],eax
    2c38:	5f                   	pop    rdi
    2c39:	42                   	rex.X
    2c3a:	49 54                	rex.WB push r12
    2c3c:	53                   	push   rbx
    2c3d:	5f                   	pop    rdi
    2c3e:	53                   	push   rbx
    2c3f:	54                   	push   rsp
    2c40:	44                   	rex.R
    2c41:	49                   	rex.WB
    2c42:	4f 5f                	rex.WRXB pop r15
    2c44:	4c                   	rex.WR
    2c45:	49                   	rex.WB
    2c46:	4d 5f                	rex.WRB pop r15
    2c48:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    2c4b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c4e:	4c                   	rex.WR
    2c4f:	44                   	rex.R
    2c50:	42                   	rex.X
    2c51:	4c 5f                	rex.WR pop rdi
    2c53:	48                   	rex.W
    2c54:	41 53                	push   r11
    2c56:	5f                   	pop    rdi
    2c57:	49                   	rex.WB
    2c58:	4e                   	rex.WRX
    2c59:	46                   	rex.RX
    2c5a:	49                   	rex.WB
    2c5b:	4e                   	rex.WRX
    2c5c:	49 54                	rex.WB push r12
    2c5e:	59                   	pop    rcx
    2c5f:	5f                   	pop    rdi
    2c60:	5f                   	pop    rdi
    2c61:	20 31                	and    BYTE PTR [rcx],dh
    2c63:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c66:	55                   	push   rbp
    2c67:	53                   	push   rbx
    2c68:	45 5f                	rex.RB pop r15
    2c6a:	50                   	push   rax
    2c6b:	4f 53                	rex.WRXB push r11
    2c6d:	49 58                	rex.WB pop r8
    2c6f:	20 31                	and    BYTE PTR [rcx],dh
    2c71:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c74:	49                   	rex.WB
    2c75:	4e                   	rex.WRX
    2c76:	4f 5f                	rex.WRXB pop r15
    2c78:	54                   	push   rsp
    2c79:	5f                   	pop    rdi
    2c7a:	4d                   	rex.WRB
    2c7b:	41 54                	push   r12
    2c7d:	43                   	rex.XB
    2c7e:	48                   	rex.W
    2c7f:	45 53                	rex.RB push r11
    2c81:	5f                   	pop    rdi
    2c82:	49                   	rex.WB
    2c83:	4e                   	rex.WRX
    2c84:	4f                   	rex.WRXB
    2c85:	36 34 5f             	ss xor al,0x5f
    2c88:	54                   	push   rsp
    2c89:	20 31                	and    BYTE PTR [rcx],dh
    2c8b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c8e:	47                   	rex.RXB
    2c8f:	43                   	rex.XB
    2c90:	43 5f                	rex.XB pop r15
    2c92:	49                   	rex.WB
    2c93:	45                   	rex.RB
    2c94:	43 5f                	rex.XB pop r15
    2c96:	35 35 39 5f 43       	xor    eax,0x435f3935
    2c9b:	4f                   	rex.WRXB
    2c9c:	4d 50                	rex.WRB push r8
    2c9e:	4c                   	rex.WR
    2c9f:	45 58                	rex.RB pop r8
    2ca1:	20 32                	and    BYTE PTR [rdx],dh
    2ca3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ca6:	53                   	push   rbx
    2ca7:	49                   	rex.WB
    2ca8:	47 5f                	rex.RXB pop r15
    2caa:	41 54                	push   r12
    2cac:	4f                   	rex.WRXB
    2cad:	4d                   	rex.WRB
    2cae:	49                   	rex.WB
    2caf:	43 5f                	rex.XB pop r15
    2cb1:	4d                   	rex.WRB
    2cb2:	49                   	rex.WB
    2cb3:	4e 5f                	rex.WRX pop rdi
    2cb5:	5f                   	pop    rdi
    2cb6:	20 28                	and    BYTE PTR [rax],ch
    2cb8:	2d 5f 5f 53 49       	sub    eax,0x49535f5f
    2cbd:	47 5f                	rex.RXB pop r15
    2cbf:	41 54                	push   r12
    2cc1:	4f                   	rex.WRXB
    2cc2:	4d                   	rex.WRB
    2cc3:	49                   	rex.WB
    2cc4:	43 5f                	rex.XB pop r15
    2cc6:	4d                   	rex.WRB
    2cc7:	41 58                	pop    r8
    2cc9:	5f                   	pop    rdi
    2cca:	5f                   	pop    rdi
    2ccb:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 295df1 <_end+0x94dd9>
    2cd1:	5f                   	pop    rdi
    2cd2:	49                   	rex.WB
    2cd3:	4f 5f                	rex.WRXB pop r15
    2cd5:	49                   	rex.WB
    2cd6:	4e 5f                	rex.WRX pop rdi
    2cd8:	42                   	rex.X
    2cd9:	41                   	rex.B
    2cda:	43                   	rex.XB
    2cdb:	4b 55                	rex.WXB push r13
    2cdd:	50                   	push   rax
    2cde:	20 30                	and    BYTE PTR [rax],dh
    2ce0:	78 31                	js     2d13 <__FRAME_END__+0x251f>
    2ce2:	30 30                	xor    BYTE PTR [rax],dh
    2ce4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2ce7:	4f 5f                	rex.WRXB pop r15
    2ce9:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2ceb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cec:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    2cef:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2cf6:	29 
    2cf7:	20 00                	and    BYTE PTR [rax],al
    2cf9:	5f                   	pop    rdi
    2cfa:	5f                   	pop    rdi
    2cfb:	53                   	push   rbx
    2cfc:	49 5a                	rex.WB pop r10
    2cfe:	45                   	rex.RB
    2cff:	4f                   	rex.WRXB
    2d00:	46 5f                	rex.RX pop rdi
    2d02:	57                   	push   rdi
    2d03:	43                   	rex.XB
    2d04:	48                   	rex.W
    2d05:	41 52                	push   r10
    2d07:	5f                   	pop    rdi
    2d08:	54                   	push   rsp
    2d09:	5f                   	pop    rdi
    2d0a:	5f                   	pop    rdi
    2d0b:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2d0e:	5f                   	pop    rdi
    2d0f:	5f                   	pop    rdi
    2d10:	61                   	(bad)  
    2d11:	74 74                	je     2d87 <__FRAME_END__+0x2593>
    2d13:	72 69                	jb     2d7e <__FRAME_END__+0x258a>
    2d15:	62                   	(bad)  
    2d16:	75 74                	jne    2d8c <__FRAME_END__+0x2598>
    2d18:	65 5f                	gs pop rdi
    2d1a:	64 65 70 72          	fs gs jo 2d90 <__FRAME_END__+0x259c>
    2d1e:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d22:	65 64 5f             	gs fs pop rdi
    2d25:	5f                   	pop    rdi
    2d26:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2d29:	61                   	(bad)  
    2d2a:	74 74                	je     2da0 <__FRAME_END__+0x25ac>
    2d2c:	72 69                	jb     2d97 <__FRAME_END__+0x25a3>
    2d2e:	62                   	(bad)  
    2d2f:	75 74                	jne    2da5 <__FRAME_END__+0x25b1>
    2d31:	65 5f                	gs pop rdi
    2d33:	5f                   	pop    rdi
    2d34:	20 28                	and    BYTE PTR [rax],ch
    2d36:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2d39:	64 65 70 72          	fs gs jo 2daf <__FRAME_END__+0x25bb>
    2d3d:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d41:	65 64 5f             	gs fs pop rdi
    2d44:	5f                   	pop    rdi
    2d45:	29 29                	sub    DWORD PTR [rcx],ebp
    2d47:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d4a:	46                   	rex.RX
    2d4b:	4c 54                	rex.WR push rsp
    2d4d:	31 32                	xor    DWORD PTR [rdx],esi
    2d4f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2d52:	49                   	rex.WB
    2d53:	4e 5f                	rex.WRX pop rdi
    2d55:	31 30                	xor    DWORD PTR [rax],esi
    2d57:	5f                   	pop    rdi
    2d58:	45 58                	rex.RB pop r8
    2d5a:	50                   	push   rax
    2d5b:	5f                   	pop    rdi
    2d5c:	5f                   	pop    rdi
    2d5d:	20 28                	and    BYTE PTR [rax],ch
    2d5f:	2d 34 39 33 31       	sub    eax,0x31333934
    2d64:	29 00                	sub    DWORD PTR [rax],eax
    2d66:	5f                   	pop    rdi
    2d67:	5f                   	pop    rdi
    2d68:	46                   	rex.RX
    2d69:	4c                   	rex.WR
    2d6a:	4f                   	rex.WRXB
    2d6b:	41 54                	push   r12
    2d6d:	5f                   	pop    rdi
    2d6e:	57                   	push   rdi
    2d6f:	4f 52                	rex.WRXB push r10
    2d71:	44 5f                	rex.R pop rdi
    2d73:	4f 52                	rex.WRXB push r10
    2d75:	44                   	rex.R
    2d76:	45 52                	rex.RB push r10
    2d78:	5f                   	pop    rdi
    2d79:	5f                   	pop    rdi
    2d7a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2d7d:	4f 52                	rex.WRXB push r10
    2d7f:	44                   	rex.R
    2d80:	45 52                	rex.RB push r10
    2d82:	5f                   	pop    rdi
    2d83:	4c                   	rex.WR
    2d84:	49 54                	rex.WB push r12
    2d86:	54                   	push   rsp
    2d87:	4c                   	rex.WR
    2d88:	45 5f                	rex.RB pop r15
    2d8a:	45                   	rex.RB
    2d8b:	4e                   	rex.WRX
    2d8c:	44                   	rex.R
    2d8d:	49                   	rex.WB
    2d8e:	41                   	rex.B
    2d8f:	4e 5f                	rex.WRX pop rdi
    2d91:	5f                   	pop    rdi
    2d92:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d95:	47                   	rex.RXB
    2d96:	43                   	rex.XB
    2d97:	43 5f                	rex.XB pop r15
    2d99:	48                   	rex.W
    2d9a:	41 56                	push   r14
    2d9c:	45 5f                	rex.RB pop r15
    2d9e:	53                   	push   rbx
    2d9f:	59                   	pop    rcx
    2da0:	4e                   	rex.WRX
    2da1:	43 5f                	rex.XB pop r15
    2da3:	43                   	rex.XB
    2da4:	4f                   	rex.WRXB
    2da5:	4d 50                	rex.WRB push r8
    2da7:	41 52                	push   r10
    2da9:	45 5f                	rex.RB pop r15
    2dab:	41                   	rex.B
    2dac:	4e                   	rex.WRX
    2dad:	44 5f                	rex.R pop rdi
    2daf:	53                   	push   rbx
    2db0:	57                   	push   rdi
    2db1:	41 50                	push   r8
    2db3:	5f                   	pop    rdi
    2db4:	32 20                	xor    ah,BYTE PTR [rax]
    2db6:	31 00                	xor    DWORD PTR [rax],eax
    2db8:	5f                   	pop    rdi
    2db9:	47 5f                	rex.RXB pop r15
    2dbb:	48                   	rex.W
    2dbc:	41 56                	push   r14
    2dbe:	45 5f                	rex.RB pop r15
    2dc0:	4d 52                	rex.WRB push r10
    2dc2:	45                   	rex.RB
    2dc3:	4d                   	rex.WRB
    2dc4:	41 50                	push   r8
    2dc6:	20 31                	and    BYTE PTR [rcx],dh
    2dc8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dcb:	44                   	rex.R
    2dcc:	45                   	rex.RB
    2dcd:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2dd0:	5f                   	pop    rdi
    2dd1:	4d                   	rex.WRB
    2dd2:	41                   	rex.B
    2dd3:	4e 54                	rex.WRX push rsp
    2dd5:	5f                   	pop    rdi
    2dd6:	44                   	rex.R
    2dd7:	49                   	rex.WB
    2dd8:	47 5f                	rex.RXB pop r15
    2dda:	5f                   	pop    rdi
    2ddb:	20 37                	and    BYTE PTR [rdi],dh
    2ddd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2de0:	46                   	rex.RX
    2de1:	4c 54                	rex.WR push rsp
    2de3:	33 32                	xor    esi,DWORD PTR [rdx]
    2de5:	5f                   	pop    rdi
    2de6:	44                   	rex.R
    2de7:	45                   	rex.RB
    2de8:	4e                   	rex.WRX
    2de9:	4f 52                	rex.WRXB push r10
    2deb:	4d 5f                	rex.WRB pop r15
    2ded:	4d                   	rex.WRB
    2dee:	49                   	rex.WB
    2def:	4e 5f                	rex.WRX pop rdi
    2df1:	5f                   	pop    rdi
    2df2:	20 31                	and    BYTE PTR [rcx],dh
    2df4:	2e 34 30             	cs xor al,0x30
    2df7:	31 32                	xor    DWORD PTR [rdx],esi
    2df9:	39 38                	cmp    DWORD PTR [rax],edi
    2dfb:	34 36                	xor    al,0x36
    2dfd:	34 33                	xor    al,0x33
    2dff:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2e02:	31 37                	xor    DWORD PTR [rdi],esi
    2e04:	30 37                	xor    BYTE PTR [rdi],dh
    2e06:	30 39                	xor    BYTE PTR [rcx],bh
    2e08:	32 33                	xor    dh,BYTE PTR [rbx]
    2e0a:	37                   	(bad)  
    2e0b:	32 39                	xor    bh,BYTE PTR [rcx]
    2e0d:	35 38 33 32 38       	xor    eax,0x38323338
    2e12:	39 39                	cmp    DWORD PTR [rcx],edi
    2e14:	31 36                	xor    DWORD PTR [rsi],esi
    2e16:	31 33                	xor    DWORD PTR [rbx],esi
    2e18:	65 2d 34 35 46 33    	gs sub eax,0x33463534
    2e1e:	32 00                	xor    al,BYTE PTR [rax]
    2e20:	5f                   	pop    rdi
    2e21:	5f                   	pop    rdi
    2e22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e23:	65 65 64 5f          	gs gs fs pop rdi
    2e27:	73 69                	jae    2e92 <__FRAME_END__+0x269e>
    2e29:	7a 65                	jp     2e90 <__FRAME_END__+0x269c>
    2e2b:	5f                   	pop    rdi
    2e2c:	74 00                	je     2e2e <__FRAME_END__+0x263a>
    2e2e:	5f                   	pop    rdi
    2e2f:	5f                   	pop    rdi
    2e30:	55                   	push   rbp
    2e31:	49                   	rex.WB
    2e32:	4e 54                	rex.WRX push rsp
    2e34:	5f                   	pop    rdi
    2e35:	46                   	rex.RX
    2e36:	41 53                	push   r11
    2e38:	54                   	push   rsp
    2e39:	31 36                	xor    DWORD PTR [rsi],esi
    2e3b:	5f                   	pop    rdi
    2e3c:	4d                   	rex.WRB
    2e3d:	41 58                	pop    r8
    2e3f:	5f                   	pop    rdi
    2e40:	5f                   	pop    rdi
    2e41:	20 30                	and    BYTE PTR [rax],dh
    2e43:	78 66                	js     2eab <__FRAME_END__+0x26b7>
    2e45:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2e4c:	66 66 66 66 66 66 66 
    2e53:	66 55                	push   bp
    2e55:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2e59:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e5a:	65 65 64 5f          	gs gs fs pop rdi
    2e5e:	5f                   	pop    rdi
    2e5f:	5f                   	pop    rdi
    2e60:	76 61                	jbe    2ec3 <__FRAME_END__+0x26cf>
    2e62:	5f                   	pop    rdi
    2e63:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e64:	69 73 74 00 5f 5f 49 	imul   esi,DWORD PTR [rbx+0x74],0x495f5f00
    2e6b:	4e 54                	rex.WRX push rsp
    2e6d:	33 32                	xor    esi,DWORD PTR [rdx]
    2e6f:	5f                   	pop    rdi
    2e70:	4d                   	rex.WRB
    2e71:	41 58                	pop    r8
    2e73:	5f                   	pop    rdi
    2e74:	5f                   	pop    rdi
    2e75:	20 30                	and    BYTE PTR [rax],dh
    2e77:	78 37                	js     2eb0 <__FRAME_END__+0x26bc>
    2e79:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2e80:	00 5f 49 
    2e83:	4f 5f                	rex.WRXB pop r15
    2e85:	49                   	rex.WB
    2e86:	4e 54                	rex.WRX push rsp
    2e88:	45 52                	rex.RB push r10
    2e8a:	4e                   	rex.WRX
    2e8b:	41                   	rex.B
    2e8c:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
    2e8f:	31 30                	xor    DWORD PTR [rax],esi
    2e91:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e94:	5f                   	pop    rdi
    2e95:	69 6e 74 5f 73 69 7a 	imul   ebp,DWORD PTR [rsi+0x74],0x7a69735f
    2e9c:	65 5f                	gs pop rdi
    2e9e:	74 5f                	je     2eff <__FRAME_END__+0x270b>
    2ea0:	68 20 00 5f 5f       	push   0x5f5f0020
    2ea5:	67 6c                	ins    BYTE PTR es:[edi],dx
    2ea7:	69 62 63 5f 6c 69 6b 	imul   esp,DWORD PTR [rdx+0x63],0x6b696c5f
    2eae:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2eb0:	79 28                	jns    2eda <__FRAME_END__+0x26e6>
    2eb2:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2eb5:	64 29 20             	sub    DWORD PTR fs:[rax],esp
    2eb8:	5f                   	pop    rdi
    2eb9:	5f                   	pop    rdi
    2eba:	62                   	(bad)  
    2ebb:	75 69                	jne    2f26 <__FRAME_END__+0x2732>
    2ebd:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ebe:	74 69                	je     2f29 <__FRAME_END__+0x2735>
    2ec0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ec1:	5f                   	pop    rdi
    2ec2:	65 78 70             	gs js  2f35 <__FRAME_END__+0x2741>
    2ec5:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    2eca:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    2ecd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ece:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
    2ed2:	31 29                	xor    DWORD PTR [rcx],ebp
    2ed4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ed7:	41 54                	push   r12
    2ed9:	4f                   	rex.WRXB
    2eda:	4d                   	rex.WRB
    2edb:	49                   	rex.WB
    2edc:	43 5f                	rex.XB pop r15
    2ede:	41                   	rex.B
    2edf:	43 51                	rex.XB push r9
    2ee1:	55                   	push   rbp
    2ee2:	49 52                	rex.WB push r10
    2ee4:	45 20 32             	and    BYTE PTR [r10],r14b
    2ee7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eea:	55                   	push   rbp
    2eeb:	49                   	rex.WB
    2eec:	4e 54                	rex.WRX push rsp
    2eee:	31 36                	xor    DWORD PTR [rsi],esi
    2ef0:	5f                   	pop    rdi
    2ef1:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2ef5:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2ef8:	5f                   	pop    rdi
    2ef9:	49                   	rex.WB
    2efa:	4f 5f                	rex.WRXB pop r15
    2efc:	46                   	rex.RX
    2efd:	4c                   	rex.WR
    2efe:	41                   	rex.B
    2eff:	47 53                	rex.RXB push r11
    2f01:	32 5f 55             	xor    bl,BYTE PTR [rdi+0x55]
    2f04:	53                   	push   rbx
    2f05:	45 52                	rex.RB push r10
    2f07:	5f                   	pop    rdi
    2f08:	57                   	push   rdi
    2f09:	42 55                	rex.X push rbp
    2f0b:	46 20 38             	rex.RX and BYTE PTR [rax],r15b
    2f0e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f11:	49                   	rex.WB
    2f12:	4e 54                	rex.WRX push rsp
    2f14:	36 34 5f             	ss xor al,0x5f
    2f17:	4d                   	rex.WRB
    2f18:	41 58                	pop    r8
    2f1a:	5f                   	pop    rdi
    2f1b:	5f                   	pop    rdi
    2f1c:	20 30                	and    BYTE PTR [rax],dh
    2f1e:	78 37                	js     2f57 <__FRAME_END__+0x2763>
    2f20:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2f27:	66 66 66 66 66 66 66 
    2f2e:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2f33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f34:	65 65 64 5f          	gs gs fs pop rdi
    2f38:	73 69                	jae    2fa3 <__FRAME_END__+0x27af>
    2f3a:	7a 65                	jp     2fa1 <__FRAME_END__+0x27ad>
    2f3c:	5f                   	pop    rdi
    2f3d:	74 20                	je     2f5f <__FRAME_END__+0x276b>
    2f3f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f42:	62                   	(bad)  
    2f43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f44:	73 28                	jae    2f6e <__FRAME_END__+0x277a>
    2f46:	70 74                	jo     2fbc <__FRAME_END__+0x27c8>
    2f48:	72 29                	jb     2f73 <__FRAME_END__+0x277f>
    2f4a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f4d:	62                   	(bad)  
    2f4e:	75 69                	jne    2fb9 <__FRAME_END__+0x27c5>
    2f50:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f51:	74 69                	je     2fbc <__FRAME_END__+0x27c8>
    2f53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f54:	5f                   	pop    rdi
    2f55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f56:	62                   	(bad)  
    2f57:	6a 65                	push   0x65
    2f59:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2f5d:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2f64:	72 2c                	jb     2f92 <__FRAME_END__+0x279e>
    2f66:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f69:	55                   	push   rbp
    2f6a:	53                   	push   rbx
    2f6b:	45 5f                	rex.RB pop r15
    2f6d:	46                   	rex.RX
    2f6e:	4f 52                	rex.WRXB push r10
    2f70:	54                   	push   rsp
    2f71:	49                   	rex.WB
    2f72:	46 59                	rex.RX pop rcx
    2f74:	5f                   	pop    rdi
    2f75:	4c                   	rex.WR
    2f76:	45 56                	rex.RB push r14
    2f78:	45                   	rex.RB
    2f79:	4c 20 3e             	rex.WR and BYTE PTR [rsi],r15b
    2f7c:	20 31                	and    BYTE PTR [rcx],dh
    2f7e:	29 00                	sub    DWORD PTR [rax],eax
    2f80:	5f                   	pop    rdi
    2f81:	5f                   	pop    rdi
    2f82:	55                   	push   rbp
    2f83:	57                   	push   rdi
    2f84:	4f 52                	rex.WRXB push r10
    2f86:	44 5f                	rex.R pop rdi
    2f88:	54                   	push   rsp
    2f89:	59                   	pop    rcx
    2f8a:	50                   	push   rax
    2f8b:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    2f8f:	73 69                	jae    2ffa <__FRAME_END__+0x2806>
    2f91:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2f93:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2f99:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2f9d:	74 00                	je     2f9f <__FRAME_END__+0x27ab>
    2f9f:	5f                   	pop    rdi
    2fa0:	5f                   	pop    rdi
    2fa1:	47                   	rex.RXB
    2fa2:	4c                   	rex.WR
    2fa3:	49                   	rex.WB
    2fa4:	42                   	rex.X
    2fa5:	43 5f                	rex.XB pop r15
    2fa7:	4d                   	rex.WRB
    2fa8:	49                   	rex.WB
    2fa9:	4e                   	rex.WRX
    2faa:	4f 52                	rex.WRXB push r10
    2fac:	5f                   	pop    rdi
    2fad:	5f                   	pop    rdi
    2fae:	20 32                	and    BYTE PTR [rdx],dh
    2fb0:	37                   	(bad)  
    2fb1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fb4:	53                   	push   rbx
    2fb5:	45                   	rex.RB
    2fb6:	47 5f                	rex.RXB pop r15
    2fb8:	47 53                	rex.RXB push r11
    2fba:	20 31                	and    BYTE PTR [rcx],dh
    2fbc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fbf:	53                   	push   rbx
    2fc0:	53                   	push   rbx
    2fc1:	45 5f                	rex.RB pop r15
    2fc3:	4d                   	rex.WRB
    2fc4:	41 54                	push   r12
    2fc6:	48 5f                	rex.W pop rdi
    2fc8:	5f                   	pop    rdi
    2fc9:	20 31                	and    BYTE PTR [rcx],dh
    2fcb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fce:	4e                   	rex.WRX
    2fcf:	4c                   	rex.WR
    2fd0:	49                   	rex.WB
    2fd1:	4e                   	rex.WRX
    2fd2:	4b 5f                	rex.WXB pop r15
    2fd4:	54                   	push   rsp
    2fd5:	5f                   	pop    rdi
    2fd6:	54                   	push   rsp
    2fd7:	59                   	pop    rcx
    2fd8:	50                   	push   rax
    2fd9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2fdd:	53                   	push   rbx
    2fde:	59                   	pop    rcx
    2fdf:	53                   	push   rbx
    2fe0:	43                   	rex.XB
    2fe1:	41                   	rex.B
    2fe2:	4c                   	rex.WR
    2fe3:	4c 5f                	rex.WR pop rdi
    2fe5:	55                   	push   rbp
    2fe6:	4c                   	rex.WR
    2fe7:	4f                   	rex.WRXB
    2fe8:	4e                   	rex.WRX
    2fe9:	47 5f                	rex.RXB pop r15
    2feb:	54                   	push   rsp
    2fec:	59                   	pop    rcx
    2fed:	50                   	push   rax
    2fee:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2ff2:	55                   	push   rbp
    2ff3:	49                   	rex.WB
    2ff4:	4e 54                	rex.WRX push rsp
    2ff6:	4d                   	rex.WRB
    2ff7:	41 58                	pop    r8
    2ff9:	5f                   	pop    rdi
    2ffa:	54                   	push   rsp
    2ffb:	59                   	pop    rcx
    2ffc:	50                   	push   rax
    2ffd:	45 5f                	rex.RB pop r15
    2fff:	5f                   	pop    rdi
    3000:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3004:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3008:	73 69                	jae    3073 <__FRAME_END__+0x287f>
    300a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    300c:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3011:	74 00                	je     3013 <__FRAME_END__+0x281f>
    3013:	5f                   	pop    rdi
    3014:	5f                   	pop    rdi
    3015:	55                   	push   rbp
    3016:	53                   	push   rbx
    3017:	45 5f                	rex.RB pop r15
    3019:	58                   	pop    rax
    301a:	4f 50                	rex.WRXB push r8
    301c:	45                   	rex.RB
    301d:	4e 32 4b 00          	rex.WRX xor r9b,BYTE PTR [rbx+0x0]
    3021:	5f                   	pop    rdi
    3022:	5f                   	pop    rdi
    3023:	4c                   	rex.WR
    3024:	45                   	rex.RB
    3025:	41                   	rex.B
    3026:	46 20 2c 20          	and    BYTE PTR [rax+r12*1],r13b
    302a:	5f                   	pop    rdi
    302b:	5f                   	pop    rdi
    302c:	6c                   	ins    BYTE PTR es:[rdi],dx
    302d:	65 61                	gs (bad) 
    302f:	66 5f                	pop    di
    3031:	5f                   	pop    rdi
    3032:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
    3035:	69 6e 00 5f 5f 44 45 	imul   ebp,DWORD PTR [rsi+0x0],0x45445f5f
    303c:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    303f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    3042:	41 58                	pop    r8
    3044:	5f                   	pop    rdi
    3045:	45 58                	rex.RB pop r8
    3047:	50                   	push   rax
    3048:	5f                   	pop    rdi
    3049:	5f                   	pop    rdi
    304a:	20 36                	and    BYTE PTR [rsi],dh
    304c:	31 34 35 00 5f 49 4f 	xor    DWORD PTR [rsi*1+0x4f495f00],esi
    3053:	5f                   	pop    rdi
    3054:	4c                   	rex.WR
    3055:	45                   	rex.RB
    3056:	46 54                	rex.RX push rsp
    3058:	20 30                	and    BYTE PTR [rax],dh
    305a:	32 00                	xor    al,BYTE PTR [rax]
    305c:	5f                   	pop    rdi
    305d:	5f                   	pop    rdi
    305e:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    3060:	72 74                	jb     30d6 <__FRAME_END__+0x28e2>
    3062:	69 66 79 5f 66 75 6e 	imul   esp,DWORD PTR [rsi+0x79],0x6e75665f
    3069:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    306d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    306e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3071:	65 78 74             	gs js  30e8 <__FRAME_END__+0x28f4>
    3074:	65 72 6e             	gs jb  30e5 <__FRAME_END__+0x28f1>
    3077:	5f                   	pop    rdi
    3078:	61                   	(bad)  
    3079:	6c                   	ins    BYTE PTR es:[rdi],dx
    307a:	77 61                	ja     30dd <__FRAME_END__+0x28e9>
    307c:	79 73                	jns    30f1 <__FRAME_END__+0x28fd>
    307e:	5f                   	pop    rdi
    307f:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    3086:	5f                   	pop    rdi
    3087:	5f                   	pop    rdi
    3088:	61                   	(bad)  
    3089:	74 74                	je     30ff <__FRAME_END__+0x290b>
    308b:	72 69                	jb     30f6 <__FRAME_END__+0x2902>
    308d:	62                   	(bad)  
    308e:	75 74                	jne    3104 <__FRAME_END__+0x2910>
    3090:	65 5f                	gs pop rdi
    3092:	61                   	(bad)  
    3093:	72 74                	jb     3109 <__FRAME_END__+0x2915>
    3095:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    309c:	5f                   	pop    rdi
    309d:	5f                   	pop    rdi
    309e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    30a1:	4f 5f                	rex.WRXB pop r15
    30a3:	42                   	rex.X
    30a4:	4f                   	rex.WRXB
    30a5:	4f                   	rex.WRXB
    30a6:	4c                   	rex.WR
    30a7:	41                   	rex.B
    30a8:	4c 50                	rex.WR push rax
    30aa:	48                   	rex.W
    30ab:	41 20 30             	and    BYTE PTR [r8],sil
    30ae:	32 30                	xor    dh,BYTE PTR [rax]
    30b0:	30 30                	xor    BYTE PTR [rax],dh
    30b2:	30 30                	xor    BYTE PTR [rax],dh
    30b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    30b7:	53                   	push   rbx
    30b8:	49                   	rex.WB
    30b9:	47 5f                	rex.RXB pop r15
    30bb:	41 54                	push   r12
    30bd:	4f                   	rex.WRXB
    30be:	4d                   	rex.WRB
    30bf:	49                   	rex.WB
    30c0:	43 5f                	rex.XB pop r15
    30c2:	57                   	push   rdi
    30c3:	49                   	rex.WB
    30c4:	44 54                	rex.R push rsp
    30c6:	48 5f                	rex.W pop rdi
    30c8:	5f                   	pop    rdi
    30c9:	20 33                	and    BYTE PTR [rbx],dh
    30cb:	32 00                	xor    al,BYTE PTR [rax]
    30cd:	5f                   	pop    rdi
    30ce:	5f                   	pop    rdi
    30cf:	43                   	rex.XB
    30d0:	4f                   	rex.WRXB
    30d1:	4e                   	rex.WRX
    30d2:	43                   	rex.XB
    30d3:	41 54                	push   r12
    30d5:	28 78 2c             	sub    BYTE PTR [rax+0x2c],bh
    30d8:	79 29                	jns    3103 <__FRAME_END__+0x290f>
    30da:	20 78 20             	and    BYTE PTR [rax+0x20],bh
    30dd:	23 23                	and    esp,DWORD PTR [rbx]
    30df:	20 79 00             	and    BYTE PTR [rcx+0x0],bh
    30e2:	5f                   	pop    rdi
    30e3:	5f                   	pop    rdi
    30e4:	61                   	(bad)  
    30e5:	74 74                	je     315b <__FRAME_END__+0x2967>
    30e7:	72 69                	jb     3152 <__FRAME_END__+0x295e>
    30e9:	62                   	(bad)  
    30ea:	75 74                	jne    3160 <__FRAME_END__+0x296c>
    30ec:	65 5f                	gs pop rdi
    30ee:	64 65 70 72          	fs gs jo 3164 <__FRAME_END__+0x2970>
    30f2:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    30f6:	65 64 5f             	gs fs pop rdi
    30f9:	6d                   	ins    DWORD PTR es:[rdi],dx
    30fa:	73 67                	jae    3163 <__FRAME_END__+0x296f>
    30fc:	5f                   	pop    rdi
    30fd:	5f                   	pop    rdi
    30fe:	28 6d 73             	sub    BYTE PTR [rbp+0x73],ch
    3101:	67 29 20             	sub    DWORD PTR [eax],esp
    3104:	5f                   	pop    rdi
    3105:	5f                   	pop    rdi
    3106:	61                   	(bad)  
    3107:	74 74                	je     317d <__FRAME_END__+0x2989>
    3109:	72 69                	jb     3174 <__FRAME_END__+0x2980>
    310b:	62                   	(bad)  
    310c:	75 74                	jne    3182 <__FRAME_END__+0x298e>
    310e:	65 5f                	gs pop rdi
    3110:	5f                   	pop    rdi
    3111:	20 28                	and    BYTE PTR [rax],ch
    3113:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3116:	64 65 70 72          	fs gs jo 318c <__FRAME_END__+0x2998>
    311a:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    311e:	65 64 5f             	gs fs pop rdi
    3121:	5f                   	pop    rdi
    3122:	20 28                	and    BYTE PTR [rax],ch
    3124:	6d                   	ins    DWORD PTR es:[rdi],dx
    3125:	73 67                	jae    318e <__FRAME_END__+0x299a>
    3127:	29 29                	sub    DWORD PTR [rcx],ebp
    3129:	29 00                	sub    DWORD PTR [rax],eax
    312b:	5f                   	pop    rdi
    312c:	5f                   	pop    rdi
    312d:	53                   	push   rbx
    312e:	48 52                	rex.W push rdx
    3130:	54                   	push   rsp
    3131:	5f                   	pop    rdi
    3132:	4d                   	rex.WRB
    3133:	41 58                	pop    r8
    3135:	5f                   	pop    rdi
    3136:	5f                   	pop    rdi
    3137:	20 30                	and    BYTE PTR [rax],dh
    3139:	78 37                	js     3172 <__FRAME_END__+0x297e>
    313b:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    3141:	47                   	rex.RXB
    3142:	43                   	rex.XB
    3143:	43 5f                	rex.XB pop r15
    3145:	41 54                	push   r12
    3147:	4f                   	rex.WRXB
    3148:	4d                   	rex.WRB
    3149:	49                   	rex.WB
    314a:	43 5f                	rex.XB pop r15
    314c:	57                   	push   rdi
    314d:	43                   	rex.XB
    314e:	48                   	rex.W
    314f:	41 52                	push   r10
    3151:	5f                   	pop    rdi
    3152:	54                   	push   rsp
    3153:	5f                   	pop    rdi
    3154:	4c                   	rex.WR
    3155:	4f                   	rex.WRXB
    3156:	43                   	rex.XB
    3157:	4b 5f                	rex.WXB pop r15
    3159:	46 52                	rex.RX push rdx
    315b:	45                   	rex.RB
    315c:	45 20 32             	and    BYTE PTR [r10],r14b
    315f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3162:	4f 5f                	rex.WRXB pop r15
    3164:	50                   	push   rax
    3165:	45                   	rex.RB
    3166:	4e                   	rex.WRX
    3167:	44                   	rex.R
    3168:	49                   	rex.WB
    3169:	4e                   	rex.WRX
    316a:	47 5f                	rex.RXB pop r15
    316c:	4f 55                	rex.WRXB push r13
    316e:	54                   	push   rsp
    316f:	50                   	push   rax
    3170:	55                   	push   rbp
    3171:	54                   	push   rsp
    3172:	5f                   	pop    rdi
    3173:	43                   	rex.XB
    3174:	4f 55                	rex.WRXB push r13
    3176:	4e 54                	rex.WRX push rsp
    3178:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    317b:	70 29                	jo     31a6 <__FRAME_END__+0x29b2>
    317d:	20 28                	and    BYTE PTR [rax],ch
    317f:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3182:	70 29                	jo     31ad <__FRAME_END__+0x29b9>
    3184:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3189:	5f                   	pop    rdi
    318a:	77 72                	ja     31fe <__FRAME_END__+0x2a0a>
    318c:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    3193:	20 
    3194:	2d 20 28 5f 66       	sub    eax,0x665f2820
    3199:	70 29                	jo     31c4 <__FRAME_END__+0x29d0>
    319b:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    31a0:	5f                   	pop    rdi
    31a1:	77 72                	ja     3215 <__FRAME_END__+0x2a21>
    31a3:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    31aa:	65 
    31ab:	29 00                	sub    DWORD PTR [rax],eax
    31ad:	5f                   	pop    rdi
    31ae:	49                   	rex.WB
    31af:	4f 5f                	rex.WRXB pop r15
    31b1:	55                   	push   rbp
    31b2:	53                   	push   rbx
    31b3:	45 52                	rex.RB push r10
    31b5:	5f                   	pop    rdi
    31b6:	4c                   	rex.WR
    31b7:	4f                   	rex.WRXB
    31b8:	43                   	rex.XB
    31b9:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    31bc:	78 38                	js     31f6 <__FRAME_END__+0x2a02>
    31be:	30 30                	xor    BYTE PTR [rax],dh
    31c0:	30 00                	xor    BYTE PTR [rax],al
    31c2:	5f                   	pop    rdi
    31c3:	5f                   	pop    rdi
    31c4:	4f 52                	rex.WRXB push r10
    31c6:	44                   	rex.R
    31c7:	45 52                	rex.RB push r10
    31c9:	5f                   	pop    rdi
    31ca:	50                   	push   rax
    31cb:	44 50                	rex.R push rax
    31cd:	5f                   	pop    rdi
    31ce:	45                   	rex.RB
    31cf:	4e                   	rex.WRX
    31d0:	44                   	rex.R
    31d1:	49                   	rex.WB
    31d2:	41                   	rex.B
    31d3:	4e 5f                	rex.WRX pop rdi
    31d5:	5f                   	pop    rdi
    31d6:	20 33                	and    BYTE PTR [rbx],dh
    31d8:	34 31                	xor    al,0x31
    31da:	32 00                	xor    al,BYTE PTR [rax]
    31dc:	5f                   	pop    rdi
    31dd:	49                   	rex.WB
    31de:	4f 5f                	rex.WRXB pop r15
    31e0:	55                   	push   rbp
    31e1:	4e                   	rex.WRX
    31e2:	49                   	rex.WB
    31e3:	46                   	rex.RX
    31e4:	49                   	rex.WB
    31e5:	45                   	rex.RB
    31e6:	44 5f                	rex.R pop rdi
    31e8:	4a 55                	rex.WX push rbp
    31ea:	4d 50                	rex.WRB push r8
    31ec:	54                   	push   rsp
    31ed:	41                   	rex.B
    31ee:	42                   	rex.X
    31ef:	4c                   	rex.WR
    31f0:	45 53                	rex.RB push r11
    31f2:	20 31                	and    BYTE PTR [rcx],dh
    31f4:	00 54 4d 50          	add    BYTE PTR [rbp+rcx*2+0x50],dl
    31f8:	5f                   	pop    rdi
    31f9:	4d                   	rex.WRB
    31fa:	41 58                	pop    r8
    31fc:	20 32                	and    BYTE PTR [rdx],dh
    31fe:	33 38                	xor    edi,DWORD PTR [rax]
    3200:	33 32                	xor    esi,DWORD PTR [rdx]
    3202:	38 00                	cmp    BYTE PTR [rax],al
    3204:	5f                   	pop    rdi
    3205:	49                   	rex.WB
    3206:	4f 5f                	rex.WRXB pop r15
    3208:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3209:	65 65 64 5f          	gs gs fs pop rdi
    320d:	6c                   	ins    BYTE PTR es:[rdi],dx
    320e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    320f:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    3212:	5f                   	pop    rdi
    3213:	66 70 29             	data16 jo 323f <__FRAME_END__+0x2a4b>
    3216:	20 28                	and    BYTE PTR [rax],ch
    3218:	28 28                	sub    BYTE PTR [rax],ch
    321a:	5f                   	pop    rdi
    321b:	66 70 29             	data16 jo 3247 <__FRAME_END__+0x2a53>
    321e:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    3223:	61                   	(bad)  
    3224:	67 73 32             	addr32 jae 3259 <__FRAME_END__+0x2a65>
    3227:	20 26                	and    BYTE PTR [rsi],ah
    3229:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    322c:	4f 5f                	rex.WRXB pop r15
    322e:	46                   	rex.RX
    322f:	4c                   	rex.WR
    3230:	41                   	rex.B
    3231:	47 53                	rex.RXB push r11
    3233:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    3236:	45                   	rex.RB
    3237:	45                   	rex.RB
    3238:	44 5f                	rex.R pop rdi
    323a:	4c                   	rex.WR
    323b:	4f                   	rex.WRXB
    323c:	43                   	rex.XB
    323d:	4b 29 20             	rex.WXB sub QWORD PTR [r8],rsp
    3240:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 296266 <_end+0x9524e>
    3246:	5f                   	pop    rdi
    3247:	5f                   	pop    rdi
    3248:	46                   	rex.RX
    3249:	4c 54                	rex.WR push rsp
    324b:	5f                   	pop    rdi
    324c:	44                   	rex.R
    324d:	45                   	rex.RB
    324e:	43                   	rex.XB
    324f:	49                   	rex.WB
    3250:	4d                   	rex.WRB
    3251:	41                   	rex.B
    3252:	4c 5f                	rex.WR pop rdi
    3254:	44                   	rex.R
    3255:	49                   	rex.WB
    3256:	47 5f                	rex.RXB pop r15
    3258:	5f                   	pop    rdi
    3259:	20 39                	and    BYTE PTR [rcx],bh
    325b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    325e:	77 61                	ja     32c1 <__FRAME_END__+0x2acd>
    3260:	72 6e                	jb     32d0 <__FRAME_END__+0x2adc>
    3262:	64 65 63 6c 28 6e    	fs movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    3268:	61                   	(bad)  
    3269:	6d                   	ins    DWORD PTR es:[rdi],dx
    326a:	65 2c 6d             	gs sub al,0x6d
    326d:	73 67                	jae    32d6 <__FRAME_END__+0x2ae2>
    326f:	29 20                	sub    DWORD PTR [rax],esp
    3271:	65 78 74             	gs js  32e8 <__FRAME_END__+0x2af4>
    3274:	65 72 6e             	gs jb  32e5 <__FRAME_END__+0x2af1>
    3277:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    327a:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    3281:	20 
    3282:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    3285:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    328c:	74 
    328d:	74 72                	je     3301 <__FRAME_END__+0x2b0d>
    328f:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    3296:	28 28                	sub    BYTE PTR [rax],ch
    3298:	5f                   	pop    rdi
    3299:	5f                   	pop    rdi
    329a:	77 61                	ja     32fd <__FRAME_END__+0x2b09>
    329c:	72 6e                	jb     330c <__FRAME_END__+0x2b18>
    329e:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    32a5:	6d                   	ins    DWORD PTR es:[rdi],dx
    32a6:	73 67                	jae    330f <__FRAME_END__+0x2b1b>
    32a8:	29 29                	sub    DWORD PTR [rcx],ebp
    32aa:	29 00                	sub    DWORD PTR [rax],eax
    32ac:	5f                   	pop    rdi
    32ad:	5f                   	pop    rdi
    32ae:	46                   	rex.RX
    32af:	4c 54                	rex.WR push rsp
    32b1:	36 34 5f             	ss xor al,0x5f
    32b4:	4d                   	rex.WRB
    32b5:	41 58                	pop    r8
    32b7:	5f                   	pop    rdi
    32b8:	31 30                	xor    DWORD PTR [rax],esi
    32ba:	5f                   	pop    rdi
    32bb:	45 58                	rex.RB pop r8
    32bd:	50                   	push   rax
    32be:	5f                   	pop    rdi
    32bf:	5f                   	pop    rdi
    32c0:	20 33                	and    BYTE PTR [rbx],dh
    32c2:	30 38                	xor    BYTE PTR [rax],bh
    32c4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32c7:	53                   	push   rbx
    32c8:	54                   	push   rsp
    32c9:	52                   	push   rdx
    32ca:	49                   	rex.WB
    32cb:	4e                   	rex.WRX
    32cc:	47 28 78 29          	rex.RXB sub BYTE PTR [r8+0x29],r15b
    32d0:	20 23                	and    BYTE PTR [rbx],ah
    32d2:	78 00                	js     32d4 <__FRAME_END__+0x2ae0>
    32d4:	5f                   	pop    rdi
    32d5:	5f                   	pop    rdi
    32d6:	4c                   	rex.WR
    32d7:	44                   	rex.R
    32d8:	42                   	rex.X
    32d9:	4c 5f                	rex.WR pop rdi
    32db:	4d                   	rex.WRB
    32dc:	49                   	rex.WB
    32dd:	4e 5f                	rex.WRX pop rdi
    32df:	45 58                	rex.RB pop r8
    32e1:	50                   	push   rax
    32e2:	5f                   	pop    rdi
    32e3:	5f                   	pop    rdi
    32e4:	20 28                	and    BYTE PTR [rax],ch
    32e6:	2d 31 36 33 38       	sub    eax,0x38333631
    32eb:	31 29                	xor    DWORD PTR [rcx],ebp
    32ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32f0:	57                   	push   rdi
    32f1:	49                   	rex.WB
    32f2:	4e 54                	rex.WRX push rsp
    32f4:	5f                   	pop    rdi
    32f5:	57                   	push   rdi
    32f6:	49                   	rex.WB
    32f7:	44 54                	rex.R push rsp
    32f9:	48 5f                	rex.W pop rdi
    32fb:	5f                   	pop    rdi
    32fc:	20 33                	and    BYTE PTR [rbx],dh
    32fe:	32 00                	xor    al,BYTE PTR [rax]
    3300:	5f                   	pop    rdi
    3301:	49                   	rex.WB
    3302:	4f 5f                	rex.WRXB pop r15
    3304:	53                   	push   rbx
    3305:	48                   	rex.W
    3306:	4f 57                	rex.WRXB push r15
    3308:	50                   	push   rax
    3309:	4f 53                	rex.WRXB push r11
    330b:	20 30                	and    BYTE PTR [rax],dh
    330d:	32 30                	xor    dh,BYTE PTR [rax]
    330f:	30 30                	xor    BYTE PTR [rax],dh
    3311:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3314:	4f 5f                	rex.WRXB pop r15
    3316:	72 65                	jb     337d <__FRAME_END__+0x2b89>
    3318:	61                   	(bad)  
    3319:	64 5f                	fs pop rdi
    331b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    331d:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    3321:	46                   	rex.RX
    3322:	4c 54                	rex.WR push rsp
    3324:	36 34 58             	ss xor al,0x58
    3327:	5f                   	pop    rdi
    3328:	4d                   	rex.WRB
    3329:	49                   	rex.WB
    332a:	4e 5f                	rex.WRX pop rdi
    332c:	5f                   	pop    rdi
    332d:	20 33                	and    BYTE PTR [rbx],dh
    332f:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    3332:	32 31                	xor    dh,BYTE PTR [rcx]
    3334:	30 33                	xor    BYTE PTR [rbx],dh
    3336:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    3339:	31 31                	xor    DWORD PTR [rcx],esi
    333b:	32 30                	xor    dh,BYTE PTR [rax]
    333d:	39 33                	cmp    DWORD PTR [rbx],esi
    333f:	35 30 36 32 36       	xor    eax,0x36323630
    3344:	32 36                	xor    dh,BYTE PTR [rsi]
    3346:	37                   	(bad)  
    3347:	37                   	(bad)  
    3348:	38 31                	cmp    BYTE PTR [rcx],dh
    334a:	37                   	(bad)  
    334b:	33 32                	xor    esi,DWORD PTR [rdx]
    334d:	31 37                	xor    DWORD PTR [rdi],esi
    334f:	35 32 36 30 65       	xor    eax,0x65303632
    3354:	2d 34 39 33 32       	sub    eax,0x32333934
    3359:	46                   	rex.RX
    335a:	36 34 78             	ss xor al,0x78
    335d:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3360:	4f 53                	rex.WRXB push r11
    3362:	5f                   	pop    rdi
    3363:	4f 55                	rex.WRXB push r13
    3365:	54                   	push   rsp
    3366:	50                   	push   rax
    3367:	55                   	push   rbp
    3368:	54                   	push   rsp
    3369:	20 32                	and    BYTE PTR [rdx],dh
    336b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    336e:	49                   	rex.WB
    336f:	4e 54                	rex.WRX push rsp
    3371:	5f                   	pop    rdi
    3372:	46                   	rex.RX
    3373:	41 53                	push   r11
    3375:	54                   	push   rsp
    3376:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    3379:	41 58                	pop    r8
    337b:	5f                   	pop    rdi
    337c:	5f                   	pop    rdi
    337d:	20 30                	and    BYTE PTR [rax],dh
    337f:	78 37                	js     33b8 <__FRAME_END__+0x2bc4>
    3381:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    3385:	52                   	push   rdx
    3386:	45                   	rex.RB
    3387:	47                   	rex.RXB
    3388:	49 53                	rex.WB push r11
    338a:	54                   	push   rsp
    338b:	45 52                	rex.RB push r10
    338d:	5f                   	pop    rdi
    338e:	50                   	push   rax
    338f:	52                   	push   rdx
    3390:	45                   	rex.RB
    3391:	46                   	rex.RX
    3392:	49 58                	rex.WB pop r8
    3394:	5f                   	pop    rdi
    3395:	5f                   	pop    rdi
    3396:	20 00                	and    BYTE PTR [rax],al
    3398:	5f                   	pop    rdi
    3399:	5f                   	pop    rdi
    339a:	46                   	rex.RX
    339b:	4c 54                	rex.WR push rsp
    339d:	33 32                	xor    esi,DWORD PTR [rdx]
    339f:	5f                   	pop    rdi
    33a0:	45 50                	rex.RB push r8
    33a2:	53                   	push   rbx
    33a3:	49                   	rex.WB
    33a4:	4c                   	rex.WR
    33a5:	4f                   	rex.WRXB
    33a6:	4e 5f                	rex.WRX pop rdi
    33a8:	5f                   	pop    rdi
    33a9:	20 31                	and    BYTE PTR [rcx],dh
    33ab:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    33ae:	32 30                	xor    dh,BYTE PTR [rax]
    33b0:	39 32                	cmp    DWORD PTR [rdx],esi
    33b2:	38 39                	cmp    BYTE PTR [rcx],bh
    33b4:	35 35 30 37 38       	xor    eax,0x38373035
    33b9:	31 32                	xor    DWORD PTR [rdx],esi
    33bb:	35 30 30 30 30       	xor    eax,0x30303030
    33c0:	30 30                	xor    BYTE PTR [rax],dh
    33c2:	30 30                	xor    BYTE PTR [rax],dh
    33c4:	30 30                	xor    BYTE PTR [rax],dh
    33c6:	30 30                	xor    BYTE PTR [rax],dh
    33c8:	30 30                	xor    BYTE PTR [rax],dh
    33ca:	30 30                	xor    BYTE PTR [rax],dh
    33cc:	30 30                	xor    BYTE PTR [rax],dh
    33ce:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    33d1:	37                   	(bad)  
    33d2:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    33d5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    33d8:	47                   	rex.RXB
    33d9:	4c                   	rex.WR
    33da:	49                   	rex.WB
    33db:	42                   	rex.X
    33dc:	43 5f                	rex.XB pop r15
    33de:	49                   	rex.WB
    33df:	4e 54                	rex.WRX push rsp
    33e1:	45 52                	rex.RB push r10
    33e3:	4e                   	rex.WRX
    33e4:	41                   	rex.B
    33e5:	4c 5f                	rex.WR pop rdi
    33e7:	53                   	push   rbx
    33e8:	54                   	push   rsp
    33e9:	41 52                	push   r10
    33eb:	54                   	push   rsp
    33ec:	49                   	rex.WB
    33ed:	4e                   	rex.WRX
    33ee:	47 5f                	rex.RXB pop r15
    33f0:	48                   	rex.W
    33f1:	45                   	rex.RB
    33f2:	41                   	rex.B
    33f3:	44                   	rex.R
    33f4:	45 52                	rex.RB push r10
    33f6:	5f                   	pop    rdi
    33f7:	49                   	rex.WB
    33f8:	4d 50                	rex.WRB push r8
    33fa:	4c                   	rex.WR
    33fb:	45                   	rex.RB
    33fc:	4d                   	rex.WRB
    33fd:	45                   	rex.RB
    33fe:	4e 54                	rex.WRX push rsp
    3400:	41 54                	push   r12
    3402:	49                   	rex.WB
    3403:	4f                   	rex.WRXB
    3404:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    3407:	5f                   	pop    rdi
    3408:	5f                   	pop    rdi
    3409:	53                   	push   rbx
    340a:	57                   	push   rdi
    340b:	4f 52                	rex.WRXB push r10
    340d:	44 5f                	rex.R pop rdi
    340f:	54                   	push   rsp
    3410:	59                   	pop    rcx
    3411:	50                   	push   rax
    3412:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3417:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    341b:	74 00                	je     341d <__FRAME_END__+0x2c29>
    341d:	5f                   	pop    rdi
    341e:	5f                   	pop    rdi
    341f:	4c                   	rex.WR
    3420:	4f                   	rex.WRXB
    3421:	4e                   	rex.WRX
    3422:	47 5f                	rex.RXB pop r15
    3424:	4d                   	rex.WRB
    3425:	41 58                	pop    r8
    3427:	5f                   	pop    rdi
    3428:	5f                   	pop    rdi
    3429:	20 30                	and    BYTE PTR [rax],dh
    342b:	78 37                	js     3464 <__FRAME_END__+0x2c70>
    342d:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3434:	66 66 66 66 66 66 66 
    343b:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    3440:	73 74                	jae    34b6 <__FRAME_END__+0x2cc2>
    3442:	75 62                	jne    34a6 <__FRAME_END__+0x2cb2>
    3444:	5f                   	pop    rdi
    3445:	67 65 74 6d          	addr32 gs je 34b6 <__FRAME_END__+0x2cc2>
    3449:	73 67                	jae    34b2 <__FRAME_END__+0x2cbe>
    344b:	20 00                	and    BYTE PTR [rax],al
    344d:	5f                   	pop    rdi
    344e:	5f                   	pop    rdi
    344f:	44                   	rex.R
    3450:	45                   	rex.RB
    3451:	43                   	rex.XB
    3452:	36 34 5f             	ss xor al,0x5f
    3455:	4d                   	rex.WRB
    3456:	41 58                	pop    r8
    3458:	5f                   	pop    rdi
    3459:	45 58                	rex.RB pop r8
    345b:	50                   	push   rax
    345c:	5f                   	pop    rdi
    345d:	5f                   	pop    rdi
    345e:	20 33                	and    BYTE PTR [rbx],dh
    3460:	38 35 00 5f 5f 46    	cmp    BYTE PTR [rip+0x465f5f00],dh        # 465f9366 <_end+0x463f834e>
    3466:	4c 54                	rex.WR push rsp
    3468:	33 32                	xor    esi,DWORD PTR [rdx]
    346a:	58                   	pop    rax
    346b:	5f                   	pop    rdi
    346c:	4d                   	rex.WRB
    346d:	49                   	rex.WB
    346e:	4e 5f                	rex.WRX pop rdi
    3470:	31 30                	xor    DWORD PTR [rax],esi
    3472:	5f                   	pop    rdi
    3473:	45 58                	rex.RB pop r8
    3475:	50                   	push   rax
    3476:	5f                   	pop    rdi
    3477:	5f                   	pop    rdi
    3478:	20 28                	and    BYTE PTR [rax],ch
    347a:	2d 33 30 37 29       	sub    eax,0x29373033
    347f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3482:	55                   	push   rbp
    3483:	53                   	push   rbx
    3484:	45 5f                	rex.RB pop r15
    3486:	50                   	push   rax
    3487:	4f 53                	rex.WRXB push r11
    3489:	49 58                	rex.WB pop r8
    348b:	32 00                	xor    al,BYTE PTR [rax]
    348d:	5f                   	pop    rdi
    348e:	49                   	rex.WB
    348f:	4f 5f                	rex.WRXB pop r15
    3491:	55                   	push   rbp
    3492:	4e                   	rex.WRX
    3493:	49 54                	rex.WB push r12
    3495:	42 55                	rex.X push rbp
    3497:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
    349a:	32 30                	xor    dh,BYTE PTR [rax]
    349c:	30 30                	xor    BYTE PTR [rax],dh
    349e:	30 00                	xor    BYTE PTR [rax],al
    34a0:	5f                   	pop    rdi
    34a1:	5f                   	pop    rdi
    34a2:	4f                   	rex.WRXB
    34a3:	46                   	rex.RX
    34a4:	46 5f                	rex.RX pop rdi
    34a6:	54                   	push   rsp
    34a7:	5f                   	pop    rdi
    34a8:	54                   	push   rsp
    34a9:	59                   	pop    rcx
    34aa:	50                   	push   rax
    34ab:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    34af:	53                   	push   rbx
    34b0:	59                   	pop    rcx
    34b1:	53                   	push   rbx
    34b2:	43                   	rex.XB
    34b3:	41                   	rex.B
    34b4:	4c                   	rex.WR
    34b5:	4c 5f                	rex.WR pop rdi
    34b7:	53                   	push   rbx
    34b8:	4c                   	rex.WR
    34b9:	4f                   	rex.WRXB
    34ba:	4e                   	rex.WRX
    34bb:	47 5f                	rex.RXB pop r15
    34bd:	54                   	push   rsp
    34be:	59                   	pop    rcx
    34bf:	50                   	push   rax
    34c0:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    34c4:	55                   	push   rbp
    34c5:	49                   	rex.WB
    34c6:	4e 54                	rex.WRX push rsp
    34c8:	4d                   	rex.WRB
    34c9:	41 58                	pop    r8
    34cb:	5f                   	pop    rdi
    34cc:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    34d0:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    34d3:	23 23                	and    esp,DWORD PTR [rbx]
    34d5:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
    34d8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    34db:	43                   	rex.XB
    34dc:	48                   	rex.W
    34dd:	41 52                	push   r10
    34df:	33 32                	xor    esi,DWORD PTR [rdx]
    34e1:	5f                   	pop    rdi
    34e2:	54                   	push   rsp
    34e3:	59                   	pop    rcx
    34e4:	50                   	push   rax
    34e5:	45 5f                	rex.RB pop r15
    34e7:	5f                   	pop    rdi
    34e8:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    34eb:	73 69                	jae    3556 <__FRAME_END__+0x2d62>
    34ed:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    34ef:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    34f4:	74 00                	je     34f6 <__FRAME_END__+0x2d02>
    34f6:	5f                   	pop    rdi
    34f7:	5f                   	pop    rdi
    34f8:	46                   	rex.RX
    34f9:	4c 54                	rex.WR push rsp
    34fb:	36 34 58             	ss xor al,0x58
    34fe:	5f                   	pop    rdi
    34ff:	48                   	rex.W
    3500:	41 53                	push   r11
    3502:	5f                   	pop    rdi
    3503:	49                   	rex.WB
    3504:	4e                   	rex.WRX
    3505:	46                   	rex.RX
    3506:	49                   	rex.WB
    3507:	4e                   	rex.WRX
    3508:	49 54                	rex.WB push r12
    350a:	59                   	pop    rcx
    350b:	5f                   	pop    rdi
    350c:	5f                   	pop    rdi
    350d:	20 31                	and    BYTE PTR [rcx],dh
    350f:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    3512:	49 54                	rex.WB push r12
    3514:	53                   	push   rbx
    3515:	5f                   	pop    rdi
    3516:	47 5f                	rex.RXB pop r15
    3518:	43                   	rex.XB
    3519:	4f                   	rex.WRXB
    351a:	4e                   	rex.WRX
    351b:	46                   	rex.RX
    351c:	49                   	rex.WB
    351d:	47 5f                	rex.RXB pop r15
    351f:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    3522:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3525:	44                   	rex.R
    3526:	45                   	rex.RB
    3527:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    352a:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    352d:	49                   	rex.WB
    352e:	4e 5f                	rex.WRX pop rdi
    3530:	5f                   	pop    rdi
    3531:	20 31                	and    BYTE PTR [rcx],dh
    3533:	45 2d 36 31 34 33    	rex.RB sub eax,0x33343136
    3539:	44                   	rex.R
    353a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    353e:	46                   	rex.RX
    353f:	4c 54                	rex.WR push rsp
    3541:	33 32                	xor    esi,DWORD PTR [rdx]
    3543:	58                   	pop    rax
    3544:	5f                   	pop    rdi
    3545:	4d                   	rex.WRB
    3546:	49                   	rex.WB
    3547:	4e 5f                	rex.WRX pop rdi
    3549:	45 58                	rex.RB pop r8
    354b:	50                   	push   rax
    354c:	5f                   	pop    rdi
    354d:	5f                   	pop    rdi
    354e:	20 28                	and    BYTE PTR [rax],ch
    3550:	2d 31 30 32 31       	sub    eax,0x31323031
    3555:	29 00                	sub    DWORD PTR [rax],eax
    3557:	5f                   	pop    rdi
    3558:	49                   	rex.WB
    3559:	4f 5f                	rex.WRXB pop r15
    355b:	67 65 74 63          	addr32 gs je 35c2 <__FRAME_END__+0x2dce>
    355f:	5f                   	pop    rdi
    3560:	75 6e                	jne    35d0 <__FRAME_END__+0x2ddc>
    3562:	6c                   	ins    BYTE PTR es:[rdi],dx
    3563:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3564:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3567:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    356b:	70 29                	jo     3596 <__FRAME_END__+0x2da2>
    356d:	20 28                	and    BYTE PTR [rax],ch
    356f:	5f                   	pop    rdi
    3570:	49                   	rex.WB
    3571:	4f 5f                	rex.WRXB pop r15
    3573:	42                   	rex.X
    3574:	45 20 28             	and    BYTE PTR [r8],r13b
    3577:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    357a:	70 29                	jo     35a5 <__FRAME_END__+0x2db1>
    357c:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3581:	5f                   	pop    rdi
    3582:	72 65                	jb     35e9 <__FRAME_END__+0x2df5>
    3584:	61                   	(bad)  
    3585:	64 5f                	fs pop rdi
    3587:	70 74                	jo     35fd <__FRAME_END__+0x2e09>
    3589:	72 20                	jb     35ab <__FRAME_END__+0x2db7>
    358b:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    3591:	70 29                	jo     35bc <__FRAME_END__+0x2dc8>
    3593:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3598:	5f                   	pop    rdi
    3599:	72 65                	jb     3600 <__FRAME_END__+0x2e0c>
    359b:	61                   	(bad)  
    359c:	64 5f                	fs pop rdi
    359e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    35a0:	64 2c 20             	fs sub al,0x20
    35a3:	30 29                	xor    BYTE PTR [rcx],ch
    35a5:	20 3f                	and    BYTE PTR [rdi],bh
    35a7:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    35aa:	75 66                	jne    3612 <__FRAME_END__+0x2e1e>
    35ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    35ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35ae:	77 20                	ja     35d0 <__FRAME_END__+0x2ddc>
    35b0:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    35b3:	70 29                	jo     35de <__FRAME_END__+0x2dea>
    35b5:	20 3a                	and    BYTE PTR [rdx],bh
    35b7:	20 2a                	and    BYTE PTR [rdx],ch
    35b9:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    35bc:	73 69                	jae    3627 <__FRAME_END__+0x2e33>
    35be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    35c0:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    35c5:	61                   	(bad)  
    35c6:	72 20                	jb     35e8 <__FRAME_END__+0x2df4>
    35c8:	2a 29                	sub    ch,BYTE PTR [rcx]
    35ca:	20 28                	and    BYTE PTR [rax],ch
    35cc:	5f                   	pop    rdi
    35cd:	66 70 29             	data16 jo 35f9 <__FRAME_END__+0x2e05>
    35d0:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35d5:	5f                   	pop    rdi
    35d6:	72 65                	jb     363d <__FRAME_END__+0x2e49>
    35d8:	61                   	(bad)  
    35d9:	64 5f                	fs pop rdi
    35db:	70 74                	jo     3651 <__FRAME_END__+0x2e5d>
    35dd:	72 2b                	jb     360a <__FRAME_END__+0x2e16>
    35df:	2b 29                	sub    ebp,DWORD PTR [rcx]
    35e1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    35e4:	49                   	rex.WB
    35e5:	4e 54                	rex.WRX push rsp
    35e7:	50                   	push   rax
    35e8:	54                   	push   rsp
    35e9:	52                   	push   rdx
    35ea:	5f                   	pop    rdi
    35eb:	57                   	push   rdi
    35ec:	49                   	rex.WB
    35ed:	44 54                	rex.R push rsp
    35ef:	48 5f                	rex.W pop rdi
    35f1:	5f                   	pop    rdi
    35f2:	20 36                	and    BYTE PTR [rsi],dh
    35f4:	34 00                	xor    al,0x0
    35f6:	5f                   	pop    rdi
    35f7:	5f                   	pop    rdi
    35f8:	49                   	rex.WB
    35f9:	4e                   	rex.WRX
    35fa:	4f 5f                	rex.WRXB pop r15
    35fc:	54                   	push   rsp
    35fd:	5f                   	pop    rdi
    35fe:	54                   	push   rsp
    35ff:	59                   	pop    rcx
    3600:	50                   	push   rax
    3601:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3605:	53                   	push   rbx
    3606:	59                   	pop    rcx
    3607:	53                   	push   rbx
    3608:	43                   	rex.XB
    3609:	41                   	rex.B
    360a:	4c                   	rex.WR
    360b:	4c 5f                	rex.WR pop rdi
    360d:	55                   	push   rbp
    360e:	4c                   	rex.WR
    360f:	4f                   	rex.WRXB
    3610:	4e                   	rex.WRX
    3611:	47 5f                	rex.RXB pop r15
    3613:	54                   	push   rsp
    3614:	59                   	pop    rcx
    3615:	50                   	push   rax
    3616:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    361a:	55                   	push   rbp
    361b:	49                   	rex.WB
    361c:	4e 54                	rex.WRX push rsp
    361e:	5f                   	pop    rdi
    361f:	46                   	rex.RX
    3620:	41 53                	push   r11
    3622:	54                   	push   rsp
    3623:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    3626:	59                   	pop    rcx
    3627:	50                   	push   rax
    3628:	45 5f                	rex.RB pop r15
    362a:	5f                   	pop    rdi
    362b:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    362e:	73 69                	jae    3699 <__FRAME_END__+0x2ea5>
    3630:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3632:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3637:	61                   	(bad)  
    3638:	72 00                	jb     363a <__FRAME_END__+0x2e46>
    363a:	5f                   	pop    rdi
    363b:	5f                   	pop    rdi
    363c:	49                   	rex.WB
    363d:	4e 54                	rex.WRX push rsp
    363f:	33 32                	xor    esi,DWORD PTR [rdx]
    3641:	5f                   	pop    rdi
    3642:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    3646:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3649:	5f                   	pop    rdi
    364a:	5f                   	pop    rdi
    364b:	46 53                	rex.RX push rbx
    364d:	46                   	rex.RX
    364e:	49                   	rex.WB
    364f:	4c                   	rex.WR
    3650:	43                   	rex.XB
    3651:	4e 54                	rex.WRX push rsp
    3653:	36 34 5f             	ss xor al,0x5f
    3656:	54                   	push   rsp
    3657:	5f                   	pop    rdi
    3658:	54                   	push   rsp
    3659:	59                   	pop    rcx
    365a:	50                   	push   rax
    365b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    365f:	55                   	push   rbp
    3660:	51                   	push   rcx
    3661:	55                   	push   rbp
    3662:	41                   	rex.B
    3663:	44 5f                	rex.R pop rdi
    3665:	54                   	push   rsp
    3666:	59                   	pop    rcx
    3667:	50                   	push   rax
    3668:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    366c:	4c                   	rex.WR
    366d:	44                   	rex.R
    366e:	42                   	rex.X
    366f:	4c 5f                	rex.WR pop rdi
    3671:	48                   	rex.W
    3672:	41 53                	push   r11
    3674:	5f                   	pop    rdi
    3675:	51                   	push   rcx
    3676:	55                   	push   rbp
    3677:	49                   	rex.WB
    3678:	45 54                	rex.RB push r12
    367a:	5f                   	pop    rdi
    367b:	4e                   	rex.WRX
    367c:	41                   	rex.B
    367d:	4e 5f                	rex.WRX pop rdi
    367f:	5f                   	pop    rdi
    3680:	20 31                	and    BYTE PTR [rcx],dh
    3682:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3685:	47                   	rex.RXB
    3686:	4e 55                	rex.WRX push rbp
    3688:	43 5f                	rex.XB pop r15
    368a:	50                   	push   rax
    368b:	41 54                	push   r12
    368d:	43                   	rex.XB
    368e:	48                   	rex.W
    368f:	4c                   	rex.WR
    3690:	45 56                	rex.RB push r14
    3692:	45                   	rex.RB
    3693:	4c 5f                	rex.WR pop rdi
    3695:	5f                   	pop    rdi
    3696:	20 30                	and    BYTE PTR [rax],dh
    3698:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    369b:	57                   	push   rdi
    369c:	49                   	rex.WB
    369d:	4e 54                	rex.WRX push rsp
    369f:	5f                   	pop    rdi
    36a0:	4d                   	rex.WRB
    36a1:	41 58                	pop    r8
    36a3:	5f                   	pop    rdi
    36a4:	5f                   	pop    rdi
    36a5:	20 30                	and    BYTE PTR [rax],dh
    36a7:	78 66                	js     370f <__FRAME_END__+0x2f1b>
    36a9:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    36b0:	55 
    36b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36b4:	61                   	(bad)  
    36b5:	74 74                	je     372b <__FRAME_END__+0x2f37>
    36b7:	72 69                	jb     3722 <__FRAME_END__+0x2f2e>
    36b9:	62                   	(bad)  
    36ba:	75 74                	jne    3730 <__FRAME_END__+0x2f3c>
    36bc:	65 5f                	gs pop rdi
    36be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    36c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36c1:	73 74                	jae    3737 <__FRAME_END__+0x2f43>
    36c3:	72 69                	jb     372e <__FRAME_END__+0x2f3a>
    36c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36c6:	67 5f                	addr32 pop rdi
    36c8:	5f                   	pop    rdi
    36c9:	20 00                	and    BYTE PTR [rax],al
    36cb:	5f                   	pop    rdi
    36cc:	49                   	rex.WB
    36cd:	4f 5f                	rex.WRXB pop r15
    36cf:	4d                   	rex.WRB
    36d0:	41                   	rex.B
    36d1:	47                   	rex.RXB
    36d2:	49                   	rex.WB
    36d3:	43 5f                	rex.XB pop r15
    36d5:	4d                   	rex.WRB
    36d6:	41 53                	push   r11
    36d8:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    36db:	78 46                	js     3723 <__FRAME_END__+0x2f2f>
    36dd:	46                   	rex.RX
    36de:	46                   	rex.RX
    36df:	46 30 30             	rex.RX xor BYTE PTR [rax],r14b
    36e2:	30 30                	xor    BYTE PTR [rax],dh
    36e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    36e8:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    36ef:	5f                   	pop    rdi
    36f0:	5f                   	pop    rdi
    36f1:	47                   	rex.RXB
    36f2:	4c                   	rex.WR
    36f3:	49                   	rex.WB
    36f4:	42                   	rex.X
    36f5:	43 5f                	rex.XB pop r15
    36f7:	55                   	push   rbp
    36f8:	53                   	push   rbx
    36f9:	45 5f                	rex.RB pop r15
    36fb:	49                   	rex.WB
    36fc:	45                   	rex.RB
    36fd:	43 5f                	rex.XB pop r15
    36ff:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f703b <_end+0x463f6023>
    3706:	55                   	push   rbp
    3707:	4e                   	rex.WRX
    3708:	43 53                	rex.XB push r11
    370a:	5f                   	pop    rdi
    370b:	45 58                	rex.RB pop r8
    370d:	54                   	push   rsp
    370e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3711:	4f 5f                	rex.WRXB pop r15
    3713:	76 61                	jbe    3776 <__FRAME_END__+0x2f82>
    3715:	5f                   	pop    rdi
    3716:	6c                   	ins    BYTE PTR es:[rdi],dx
    3717:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
    371e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    371f:	75 63                	jne    3784 <__FRAME_END__+0x2f90>
    3721:	5f                   	pop    rdi
    3722:	76 61                	jbe    3785 <__FRAME_END__+0x2f91>
    3724:	5f                   	pop    rdi
    3725:	6c                   	ins    BYTE PTR es:[rdi],dx
    3726:	69 73 74 00 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f00
    372d:	42 55                	rex.X push rbp
    372f:	46 53                	rex.RX push rbx
    3731:	49 5a                	rex.WB pop r10
    3733:	20 38                	and    BYTE PTR [rax],bh
    3735:	31 39                	xor    DWORD PTR [rcx],edi
    3737:	32 00                	xor    al,BYTE PTR [rax]
    3739:	5f                   	pop    rdi
    373a:	5f                   	pop    rdi
    373b:	4c                   	rex.WR
    373c:	44                   	rex.R
    373d:	42                   	rex.X
    373e:	4c 5f                	rex.WR pop rdi
    3740:	52                   	push   rdx
    3741:	45                   	rex.RB
    3742:	44                   	rex.R
    3743:	49 52                	rex.WB push r10
    3745:	31 28                	xor    DWORD PTR [rax],ebp
    3747:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3748:	61                   	(bad)  
    3749:	6d                   	ins    DWORD PTR es:[rdi],dx
    374a:	65 2c 70             	gs sub al,0x70
    374d:	72 6f                	jb     37be <__FRAME_END__+0x2fca>
    374f:	74 6f                	je     37c0 <__FRAME_END__+0x2fcc>
    3751:	2c 61                	sub    al,0x61
    3753:	6c                   	ins    BYTE PTR es:[rdi],dx
    3754:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    375b:	6d                   	ins    DWORD PTR es:[rdi],dx
    375c:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    3760:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3761:	74 6f                	je     37d2 <__FRAME_END__+0x2fde>
    3763:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3766:	61                   	(bad)  
    3767:	74 74                	je     37dd <__FRAME_END__+0x2fe9>
    3769:	72 69                	jb     37d4 <__FRAME_END__+0x2fe0>
    376b:	62                   	(bad)  
    376c:	75 74                	jne    37e2 <__FRAME_END__+0x2fee>
    376e:	65 5f                	gs pop rdi
    3770:	6d                   	ins    DWORD PTR es:[rdi],dx
    3771:	61                   	(bad)  
    3772:	6c                   	ins    BYTE PTR es:[rdi],dx
    3773:	6c                   	ins    BYTE PTR es:[rdi],dx
    3774:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3775:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    3778:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    377b:	61                   	(bad)  
    377c:	74 74                	je     37f2 <__FRAME_END__+0x2ffe>
    377e:	72 69                	jb     37e9 <__FRAME_END__+0x2ff5>
    3780:	62                   	(bad)  
    3781:	75 74                	jne    37f7 <__FRAME_END__+0x3003>
    3783:	65 5f                	gs pop rdi
    3785:	5f                   	pop    rdi
    3786:	20 28                	and    BYTE PTR [rax],ch
    3788:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    378b:	6d                   	ins    DWORD PTR es:[rdi],dx
    378c:	61                   	(bad)  
    378d:	6c                   	ins    BYTE PTR es:[rdi],dx
    378e:	6c                   	ins    BYTE PTR es:[rdi],dx
    378f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3790:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    3793:	29 29                	sub    DWORD PTR [rcx],ebp
    3795:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3798:	55                   	push   rbp
    3799:	49                   	rex.WB
    379a:	4e 54                	rex.WRX push rsp
    379c:	33 32                	xor    esi,DWORD PTR [rdx]
    379e:	5f                   	pop    rdi
    379f:	54                   	push   rsp
    37a0:	59                   	pop    rcx
    37a1:	50                   	push   rax
    37a2:	45 5f                	rex.RB pop r15
    37a4:	5f                   	pop    rdi
    37a5:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    37a8:	73 69                	jae    3813 <__FRAME_END__+0x301f>
    37aa:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    37ac:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    37b1:	74 00                	je     37b3 <__FRAME_END__+0x2fbf>
    37b3:	5f                   	pop    rdi
    37b4:	5f                   	pop    rdi
    37b5:	4c                   	rex.WR
    37b6:	44                   	rex.R
    37b7:	42                   	rex.X
    37b8:	4c 5f                	rex.WR pop rdi
    37ba:	52                   	push   rdx
    37bb:	45                   	rex.RB
    37bc:	44                   	rex.R
    37bd:	49 52                	rex.WB push r10
    37bf:	5f                   	pop    rdi
    37c0:	4e 54                	rex.WRX push rsp
    37c2:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    37c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    37c7:	65 2c 70             	gs sub al,0x70
    37ca:	72 6f                	jb     383b <__FRAME_END__+0x3047>
    37cc:	74 6f                	je     383d <__FRAME_END__+0x3049>
    37ce:	29 20                	sub    DWORD PTR [rax],esp
    37d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    37d1:	61                   	(bad)  
    37d2:	6d                   	ins    DWORD PTR es:[rdi],dx
    37d3:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    37d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37d8:	74 6f                	je     3849 <__FRAME_END__+0x3055>
    37da:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    37dd:	54                   	push   rsp
    37de:	48 52                	rex.W push rdx
    37e0:	4f 57                	rex.WRXB push r15
    37e2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    37e5:	55                   	push   rbp
    37e6:	53                   	push   rbx
    37e7:	45 5f                	rex.RB pop r15
    37e9:	58                   	pop    rax
    37ea:	4f 50                	rex.WRXB push r8
    37ec:	45                   	rex.RB
    37ed:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    37f1:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    37f4:	4f 5f                	rex.WRXB pop r15
    37f6:	55                   	push   rbp
    37f7:	50                   	push   rax
    37f8:	50                   	push   rax
    37f9:	45 52                	rex.RB push r10
    37fb:	43                   	rex.XB
    37fc:	41 53                	push   r11
    37fe:	45 20 30             	and    BYTE PTR [r8],r14b
    3801:	31 30                	xor    DWORD PTR [rax],esi
    3803:	30 30                	xor    BYTE PTR [rax],dh
    3805:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
    3808:	74 6d                	je     3877 <__FRAME_END__+0x3083>
    380a:	70 64                	jo     3870 <__FRAME_END__+0x307c>
    380c:	69 72 20 22 2f 74 6d 	imul   esi,DWORD PTR [rdx+0x20],0x6d742f22
    3813:	70 22                	jo     3837 <__FRAME_END__+0x3043>
    3815:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3818:	52                   	push   rdx
    3819:	45                   	rex.RB
    381a:	44                   	rex.R
    381b:	49 52                	rex.WB push r10
    381d:	45                   	rex.RB
    381e:	43 54                	rex.XB push r12
    3820:	5f                   	pop    rdi
    3821:	4e 54                	rex.WRX push rsp
    3823:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    3827:	6d                   	ins    DWORD PTR es:[rdi],dx
    3828:	65 2c 70             	gs sub al,0x70
    382b:	72 6f                	jb     389c <__FRAME_END__+0x30a8>
    382d:	74 6f                	je     389e <__FRAME_END__+0x30aa>
    382f:	2c 61                	sub    al,0x61
    3831:	6c                   	ins    BYTE PTR es:[rdi],dx
    3832:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    3839:	6d                   	ins    DWORD PTR es:[rdi],dx
    383a:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    383e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    383f:	74 6f                	je     38b0 <__FRAME_END__+0x30bc>
    3841:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3844:	61                   	(bad)  
    3845:	73 6d                	jae    38b4 <__FRAME_END__+0x30c0>
    3847:	5f                   	pop    rdi
    3848:	5f                   	pop    rdi
    3849:	20 28                	and    BYTE PTR [rax],ch
    384b:	5f                   	pop    rdi
    384c:	5f                   	pop    rdi
    384d:	41 53                	push   r11
    384f:	4d                   	rex.WRB
    3850:	4e                   	rex.WRX
    3851:	41                   	rex.B
    3852:	4d                   	rex.WRB
    3853:	45 20 28             	and    BYTE PTR [r8],r13b
    3856:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    3859:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    3860:	5f                   	pop    rdi
    3861:	54                   	push   rsp
    3862:	48 52                	rex.W push rdx
    3864:	4f 57                	rex.WRXB push r15
    3866:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3869:	55                   	push   rbp
    386a:	53                   	push   rbx
    386b:	45 5f                	rex.RB pop r15
    386d:	58                   	pop    rax
    386e:	4f 50                	rex.WRXB push r8
    3870:	45                   	rex.RB
    3871:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    3875:	46                   	rex.RX
    3876:	4c 54                	rex.WR push rsp
    3878:	31 32                	xor    DWORD PTR [rdx],esi
    387a:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    387d:	50                   	push   rax
    387e:	53                   	push   rbx
    387f:	49                   	rex.WB
    3880:	4c                   	rex.WR
    3881:	4f                   	rex.WRXB
    3882:	4e 5f                	rex.WRX pop rdi
    3884:	5f                   	pop    rdi
    3885:	20 31                	and    BYTE PTR [rcx],dh
    3887:	2e 39 32             	cmp    DWORD PTR cs:[rdx],esi
    388a:	35 39 32 39 39       	xor    eax,0x39393239
    388f:	34 34                	xor    al,0x34
    3891:	33 38                	xor    edi,DWORD PTR [rax]
    3893:	37                   	(bad)  
    3894:	32 33                	xor    dh,BYTE PTR [rbx]
    3896:	35 38 35 33 30       	xor    eax,0x30333538
    389b:	35 35 39 37 37       	xor    eax,0x37373935
    38a0:	39 34 32             	cmp    DWORD PTR [rdx+rsi*1],esi
    38a3:	35 38 34 39 32       	xor    eax,0x32393438
    38a8:	37                   	(bad)  
    38a9:	33 32                	xor    esi,DWORD PTR [rdx]
    38ab:	65 2d 33 34 46 31    	gs sub eax,0x31463433
    38b1:	32 38                	xor    bh,BYTE PTR [rax]
    38b3:	00 46 4f             	add    BYTE PTR [rsi+0x4f],al
    38b6:	50                   	push   rax
    38b7:	45                   	rex.RB
    38b8:	4e 5f                	rex.WRX pop rdi
    38ba:	4d                   	rex.WRB
    38bb:	41 58                	pop    r8
    38bd:	20 31                	and    BYTE PTR [rcx],dh
    38bf:	36 00 5f 49          	add    BYTE PTR ss:[rdi+0x49],bl
    38c3:	4f 5f                	rex.WRXB pop r15
    38c5:	46                   	rex.RX
    38c6:	49                   	rex.WB
    38c7:	4c                   	rex.WR
    38c8:	45 5f                	rex.RB pop r15
    38ca:	70 6c                	jo     3938 <__FRAME_END__+0x3144>
    38cc:	75 73                	jne    3941 <__FRAME_END__+0x314d>
    38ce:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    38d1:	4f 53                	rex.WRXB push r11
    38d3:	49 58                	rex.WB pop r8
    38d5:	5f                   	pop    rdi
    38d6:	43 5f                	rex.XB pop r15
    38d8:	53                   	push   rbx
    38d9:	4f 55                	rex.WRXB push r13
    38db:	52                   	push   rdx
    38dc:	43                   	rex.XB
    38dd:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    38e1:	54                   	push   rsp
    38e2:	48 52                	rex.W push rdx
    38e4:	4f 57                	rex.WRXB push r15
    38e6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    38e9:	61                   	(bad)  
    38ea:	74 74                	je     3960 <__FRAME_END__+0x316c>
    38ec:	72 69                	jb     3957 <__FRAME_END__+0x3163>
    38ee:	62                   	(bad)  
    38ef:	75 74                	jne    3965 <__FRAME_END__+0x3171>
    38f1:	65 5f                	gs pop rdi
    38f3:	5f                   	pop    rdi
    38f4:	20 28                	and    BYTE PTR [rax],ch
    38f6:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    38f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    38fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    38fb:	74 68                	je     3965 <__FRAME_END__+0x3171>
    38fd:	72 6f                	jb     396e <__FRAME_END__+0x317a>
    38ff:	77 5f                	ja     3960 <__FRAME_END__+0x316c>
    3901:	5f                   	pop    rdi
    3902:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3905:	4c                   	rex.WR
    3906:	45                   	rex.RB
    3907:	41                   	rex.B
    3908:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
    390b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    390e:	53                   	push   rbx
    390f:	49 5a                	rex.WB pop r10
    3911:	45                   	rex.RB
    3912:	4f                   	rex.WRXB
    3913:	46 5f                	rex.RX pop rdi
    3915:	4c                   	rex.WR
    3916:	4f                   	rex.WRXB
    3917:	4e                   	rex.WRX
    3918:	47 5f                	rex.RXB pop r15
    391a:	4c                   	rex.WR
    391b:	4f                   	rex.WRXB
    391c:	4e                   	rex.WRX
    391d:	47 5f                	rex.RXB pop r15
    391f:	5f                   	pop    rdi
    3920:	20 38                	and    BYTE PTR [rax],bh
    3922:	00 5f 56             	add    BYTE PTR [rdi+0x56],bl
    3925:	41 5f                	pop    r15
    3927:	4c                   	rex.WR
    3928:	49 53                	rex.WB push r11
    392a:	54                   	push   rsp
    392b:	5f                   	pop    rdi
    392c:	44                   	rex.R
    392d:	45                   	rex.RB
    392e:	46                   	rex.RX
    392f:	49                   	rex.WB
    3930:	4e                   	rex.WRX
    3931:	45                   	rex.RB
    3932:	44 20 00             	and    BYTE PTR [rax],r8b
    3935:	5f                   	pop    rdi
    3936:	5f                   	pop    rdi
    3937:	55                   	push   rbp
    3938:	49                   	rex.WB
    3939:	4e 54                	rex.WRX push rsp
    393b:	5f                   	pop    rdi
    393c:	46                   	rex.RX
    393d:	41 53                	push   r11
    393f:	54                   	push   rsp
    3940:	33 32                	xor    esi,DWORD PTR [rdx]
    3942:	5f                   	pop    rdi
    3943:	54                   	push   rsp
    3944:	59                   	pop    rcx
    3945:	50                   	push   rax
    3946:	45 5f                	rex.RB pop r15
    3948:	5f                   	pop    rdi
    3949:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    394d:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3951:	73 69                	jae    39bc <__FRAME_END__+0x31c8>
    3953:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3955:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    395a:	74 00                	je     395c <__FRAME_END__+0x3168>
    395c:	5f                   	pop    rdi
    395d:	5f                   	pop    rdi
    395e:	53                   	push   rbx
    395f:	48 52                	rex.W push rdx
    3961:	54                   	push   rsp
    3962:	5f                   	pop    rdi
    3963:	57                   	push   rdi
    3964:	49                   	rex.WB
    3965:	44 54                	rex.R push rsp
    3967:	48 5f                	rex.W pop rdi
    3969:	5f                   	pop    rdi
    396a:	20 31                	and    BYTE PTR [rcx],dh
    396c:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    3970:	53                   	push   rbx
    3971:	53                   	push   rbx
    3972:	45 32 5f 4d          	xor    r11b,BYTE PTR [r15+0x4d]
    3976:	41 54                	push   r12
    3978:	48 5f                	rex.W pop rdi
    397a:	5f                   	pop    rdi
    397b:	20 31                	and    BYTE PTR [rcx],dh
    397d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3980:	53                   	push   rbx
    3981:	53                   	push   rbx
    3982:	49 5a                	rex.WB pop r10
    3984:	45 5f                	rex.RB pop r15
    3986:	54                   	push   rsp
    3987:	5f                   	pop    rdi
    3988:	54                   	push   rsp
    3989:	59                   	pop    rcx
    398a:	50                   	push   rax
    398b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    398f:	53                   	push   rbx
    3990:	57                   	push   rdi
    3991:	4f 52                	rex.WRXB push r10
    3993:	44 5f                	rex.R pop rdi
    3995:	54                   	push   rsp
    3996:	59                   	pop    rcx
    3997:	50                   	push   rax
    3998:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    399c:	53                   	push   rbx
    399d:	36 34 5f             	ss xor al,0x5f
    39a0:	54                   	push   rsp
    39a1:	59                   	pop    rcx
    39a2:	50                   	push   rax
    39a3:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    39a8:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    39ac:	74 00                	je     39ae <__FRAME_END__+0x31ba>
    39ae:	5f                   	pop    rdi
    39af:	5f                   	pop    rdi
    39b0:	61                   	(bad)  
    39b1:	74 74                	je     3a27 <__FRAME_END__+0x3233>
    39b3:	72 69                	jb     3a1e <__FRAME_END__+0x322a>
    39b5:	62                   	(bad)  
    39b6:	75 74                	jne    3a2c <__FRAME_END__+0x3238>
    39b8:	65 5f                	gs pop rdi
    39ba:	70 75                	jo     3a31 <__FRAME_END__+0x323d>
    39bc:	72 65                	jb     3a23 <__FRAME_END__+0x322f>
    39be:	5f                   	pop    rdi
    39bf:	5f                   	pop    rdi
    39c0:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    39c3:	61                   	(bad)  
    39c4:	74 74                	je     3a3a <__FRAME_END__+0x3246>
    39c6:	72 69                	jb     3a31 <__FRAME_END__+0x323d>
    39c8:	62                   	(bad)  
    39c9:	75 74                	jne    3a3f <__FRAME_END__+0x324b>
    39cb:	65 5f                	gs pop rdi
    39cd:	5f                   	pop    rdi
    39ce:	20 28                	and    BYTE PTR [rax],ch
    39d0:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    39d3:	70 75                	jo     3a4a <__FRAME_END__+0x3256>
    39d5:	72 65                	jb     3a3c <__FRAME_END__+0x3248>
    39d7:	5f                   	pop    rdi
    39d8:	5f                   	pop    rdi
    39d9:	29 29                	sub    DWORD PTR [rcx],ebp
    39db:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    39de:	49                   	rex.WB
    39df:	4e 54                	rex.WRX push rsp
    39e1:	4d                   	rex.WRB
    39e2:	41 58                	pop    r8
    39e4:	5f                   	pop    rdi
    39e5:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    39e9:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    39ec:	23 23                	and    esp,DWORD PTR [rbx]
    39ee:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    39f2:	49                   	rex.WB
    39f3:	4f 5f                	rex.WRXB pop r15
    39f5:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    39fc:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    39ff:	5f                   	pop    rdi
    3a00:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    3a07:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a0a:	49                   	rex.WB
    3a0b:	4e 54                	rex.WRX push rsp
    3a0d:	5f                   	pop    rdi
    3a0e:	46                   	rex.RX
    3a0f:	41 53                	push   r11
    3a11:	54                   	push   rsp
    3a12:	33 32                	xor    esi,DWORD PTR [rdx]
    3a14:	5f                   	pop    rdi
    3a15:	57                   	push   rdi
    3a16:	49                   	rex.WB
    3a17:	44 54                	rex.R push rsp
    3a19:	48 5f                	rex.W pop rdi
    3a1b:	5f                   	pop    rdi
    3a1c:	20 36                	and    BYTE PTR [rsi],dh
    3a1e:	34 00                	xor    al,0x0
    3a20:	5f                   	pop    rdi
    3a21:	5f                   	pop    rdi
    3a22:	55                   	push   rbp
    3a23:	53                   	push   rbx
    3a24:	45 5f                	rex.RB pop r15
    3a26:	58                   	pop    rax
    3a27:	4f 50                	rex.WRXB push r8
    3a29:	45                   	rex.RB
    3a2a:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    3a2e:	20 31                	and    BYTE PTR [rcx],dh
    3a30:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a33:	49                   	rex.WB
    3a34:	4e 54                	rex.WRX push rsp
    3a36:	5f                   	pop    rdi
    3a37:	4c                   	rex.WR
    3a38:	45                   	rex.RB
    3a39:	41 53                	push   r11
    3a3b:	54                   	push   rsp
    3a3c:	36 34 5f             	ss xor al,0x5f
    3a3f:	57                   	push   rdi
    3a40:	49                   	rex.WB
    3a41:	44 54                	rex.R push rsp
    3a43:	48 5f                	rex.W pop rdi
    3a45:	5f                   	pop    rdi
    3a46:	20 36                	and    BYTE PTR [rsi],dh
    3a48:	34 00                	xor    al,0x0
    3a4a:	5f                   	pop    rdi
    3a4b:	5f                   	pop    rdi
    3a4c:	47                   	rex.RXB
    3a4d:	4c                   	rex.WR
    3a4e:	49                   	rex.WB
    3a4f:	42                   	rex.X
    3a50:	43 5f                	rex.XB pop r15
    3a52:	55                   	push   rbp
    3a53:	53                   	push   rbx
    3a54:	45 5f                	rex.RB pop r15
    3a56:	49                   	rex.WB
    3a57:	45                   	rex.RB
    3a58:	43 5f                	rex.XB pop r15
    3a5a:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f7396 <_end+0x543f637e>
    3a61:	59                   	pop    rcx
    3a62:	50                   	push   rax
    3a63:	45 53                	rex.RB push r11
    3a65:	5f                   	pop    rdi
    3a66:	45 58                	rex.RB pop r8
    3a68:	54                   	push   rsp
    3a69:	20 30                	and    BYTE PTR [rax],dh
    3a6b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a6e:	49                   	rex.WB
    3a6f:	4e 54                	rex.WRX push rsp
    3a71:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    3a74:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    3a77:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3a7a:	5f                   	pop    rdi
    3a7b:	5f                   	pop    rdi
    3a7c:	53                   	push   rbx
    3a7d:	49 5a                	rex.WB pop r10
    3a7f:	45                   	rex.RB
    3a80:	4f                   	rex.WRXB
    3a81:	46 5f                	rex.RX pop rdi
    3a83:	50                   	push   rax
    3a84:	4f                   	rex.WRXB
    3a85:	49                   	rex.WB
    3a86:	4e 54                	rex.WRX push rsp
    3a88:	45 52                	rex.RB push r10
    3a8a:	5f                   	pop    rdi
    3a8b:	5f                   	pop    rdi
    3a8c:	20 38                	and    BYTE PTR [rax],bh
    3a8e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a91:	46                   	rex.RX
    3a92:	4c 54                	rex.WR push rsp
    3a94:	36 34 5f             	ss xor al,0x5f
    3a97:	45 50                	rex.RB push r8
    3a99:	53                   	push   rbx
    3a9a:	49                   	rex.WB
    3a9b:	4c                   	rex.WR
    3a9c:	4f                   	rex.WRXB
    3a9d:	4e 5f                	rex.WRX pop rdi
    3a9f:	5f                   	pop    rdi
    3aa0:	20 32                	and    BYTE PTR [rdx],dh
    3aa2:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    3aa5:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    3aa8:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    3aac:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33316de2 <_end+0x33115dca>
    3ab2:	30 38                	xor    BYTE PTR [rax],bh
    3ab4:	30 38                	xor    BYTE PTR [rax],bh
    3ab6:	34 37                	xor    al,0x37
    3ab8:	32 36                	xor    dh,BYTE PTR [rsi]
    3aba:	33 33                	xor    esi,DWORD PTR [rbx]
    3abc:	33 36                	xor    esi,DWORD PTR [rsi]
    3abe:	31 38                	xor    DWORD PTR [rax],edi
    3ac0:	31 36                	xor    DWORD PTR [rsi],esi
    3ac2:	34 30                	xor    al,0x30
    3ac4:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    3ac8:	31 36                	xor    DWORD PTR [rsi],esi
    3aca:	46                   	rex.RX
    3acb:	36 34 00             	ss xor al,0x0
    3ace:	5f                   	pop    rdi
    3acf:	49                   	rex.WB
    3ad0:	4f 5f                	rex.WRXB pop r15
    3ad2:	76 61                	jbe    3b35 <__FRAME_END__+0x3341>
    3ad4:	5f                   	pop    rdi
    3ad5:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ad6:	69 73 74 20 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f20
    3add:	76 61                	jbe    3b40 <__FRAME_END__+0x334c>
    3adf:	5f                   	pop    rdi
    3ae0:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ae1:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    3ae8:	4c 54                	rex.WR push rsp
    3aea:	36 34 58             	ss xor al,0x58
    3aed:	5f                   	pop    rdi
    3aee:	4d                   	rex.WRB
    3aef:	41                   	rex.B
    3af0:	4e 54                	rex.WRX push rsp
    3af2:	5f                   	pop    rdi
    3af3:	44                   	rex.R
    3af4:	49                   	rex.WB
    3af5:	47 5f                	rex.RXB pop r15
    3af7:	5f                   	pop    rdi
    3af8:	20 36                	and    BYTE PTR [rsi],dh
    3afa:	34 00                	xor    al,0x0
    3afc:	5f                   	pop    rdi
    3afd:	44                   	rex.R
    3afe:	45                   	rex.RB
    3aff:	46                   	rex.RX
    3b00:	41 55                	push   r13
    3b02:	4c 54                	rex.WR push rsp
    3b04:	5f                   	pop    rdi
    3b05:	53                   	push   rbx
    3b06:	4f 55                	rex.WRXB push r13
    3b08:	52                   	push   rdx
    3b09:	43                   	rex.XB
    3b0a:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3b0e:	57                   	push   rdi
    3b0f:	43                   	rex.XB
    3b10:	48                   	rex.W
    3b11:	41 52                	push   r10
    3b13:	5f                   	pop    rdi
    3b14:	4d                   	rex.WRB
    3b15:	41 58                	pop    r8
    3b17:	5f                   	pop    rdi
    3b18:	5f                   	pop    rdi
    3b19:	20 30                	and    BYTE PTR [rax],dh
    3b1b:	78 37                	js     3b54 <__FRAME_END__+0x3360>
    3b1d:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    3b24:	00 5f 49 
    3b27:	4f 5f                	rex.WRXB pop r15
    3b29:	42 55                	rex.X push rbp
    3b2b:	46 53                	rex.RX push rbx
    3b2d:	49 5a                	rex.WB pop r10
    3b2f:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    3b32:	5f                   	pop    rdi
    3b33:	42 55                	rex.X push rbp
    3b35:	46 53                	rex.RX push rbx
    3b37:	49 5a                	rex.WB pop r10
    3b39:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3b3c:	46 53                	rex.RX push rbx
    3b3e:	46                   	rex.RX
    3b3f:	49                   	rex.WB
    3b40:	4c                   	rex.WR
    3b41:	43                   	rex.XB
    3b42:	4e 54                	rex.WRX push rsp
    3b44:	5f                   	pop    rdi
    3b45:	54                   	push   rsp
    3b46:	5f                   	pop    rdi
    3b47:	54                   	push   rsp
    3b48:	59                   	pop    rcx
    3b49:	50                   	push   rax
    3b4a:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3b4e:	53                   	push   rbx
    3b4f:	59                   	pop    rcx
    3b50:	53                   	push   rbx
    3b51:	43                   	rex.XB
    3b52:	41                   	rex.B
    3b53:	4c                   	rex.WR
    3b54:	4c 5f                	rex.WR pop rdi
    3b56:	55                   	push   rbp
    3b57:	4c                   	rex.WR
    3b58:	4f                   	rex.WRXB
    3b59:	4e                   	rex.WRX
    3b5a:	47 5f                	rex.RXB pop r15
    3b5c:	54                   	push   rsp
    3b5d:	59                   	pop    rcx
    3b5e:	50                   	push   rax
    3b5f:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3b63:	4f 5f                	rex.WRXB pop r15
    3b65:	42                   	rex.X
    3b66:	41                   	rex.B
    3b67:	44 5f                	rex.R pop rdi
    3b69:	53                   	push   rbx
    3b6a:	45                   	rex.RB
    3b6b:	45                   	rex.RB
    3b6c:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    3b6f:	78 34                	js     3ba5 <__FRAME_END__+0x33b1>
    3b71:	30 30                	xor    BYTE PTR [rax],dh
    3b73:	30 00                	xor    BYTE PTR [rax],al
    3b75:	5f                   	pop    rdi
    3b76:	5f                   	pop    rdi
    3b77:	77 61                	ja     3bda <__FRAME_END__+0x33e6>
    3b79:	72 6e                	jb     3be9 <__FRAME_END__+0x33f5>
    3b7b:	61                   	(bad)  
    3b7c:	74 74                	je     3bf2 <__FRAME_END__+0x33fe>
    3b7e:	72 28                	jb     3ba8 <__FRAME_END__+0x33b4>
    3b80:	6d                   	ins    DWORD PTR es:[rdi],dx
    3b81:	73 67                	jae    3bea <__FRAME_END__+0x33f6>
    3b83:	29 20                	sub    DWORD PTR [rax],esp
    3b85:	5f                   	pop    rdi
    3b86:	5f                   	pop    rdi
    3b87:	61                   	(bad)  
    3b88:	74 74                	je     3bfe <__FRAME_END__+0x340a>
    3b8a:	72 69                	jb     3bf5 <__FRAME_END__+0x3401>
    3b8c:	62                   	(bad)  
    3b8d:	75 74                	jne    3c03 <__FRAME_END__+0x340f>
    3b8f:	65 5f                	gs pop rdi
    3b91:	5f                   	pop    rdi
    3b92:	28 28                	sub    BYTE PTR [rax],ch
    3b94:	5f                   	pop    rdi
    3b95:	5f                   	pop    rdi
    3b96:	77 61                	ja     3bf9 <__FRAME_END__+0x3405>
    3b98:	72 6e                	jb     3c08 <__FRAME_END__+0x3414>
    3b9a:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    3ba1:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ba2:	73 67                	jae    3c0b <__FRAME_END__+0x3417>
    3ba4:	29 29                	sub    DWORD PTR [rcx],ebp
    3ba6:	29 00                	sub    DWORD PTR [rax],eax
    3ba8:	5f                   	pop    rdi
    3ba9:	5f                   	pop    rdi
    3baa:	49                   	rex.WB
    3bab:	4e 54                	rex.WRX push rsp
    3bad:	5f                   	pop    rdi
    3bae:	57                   	push   rdi
    3baf:	49                   	rex.WB
    3bb0:	44 54                	rex.R push rsp
    3bb2:	48 5f                	rex.W pop rdi
    3bb4:	5f                   	pop    rdi
    3bb5:	20 33                	and    BYTE PTR [rbx],dh
    3bb7:	32 00                	xor    al,BYTE PTR [rax]
    3bb9:	5f                   	pop    rdi
    3bba:	5f                   	pop    rdi
    3bbb:	4c                   	rex.WR
    3bbc:	44                   	rex.R
    3bbd:	42                   	rex.X
    3bbe:	4c 5f                	rex.WR pop rdi
    3bc0:	44                   	rex.R
    3bc1:	45                   	rex.RB
    3bc2:	43                   	rex.XB
    3bc3:	49                   	rex.WB
    3bc4:	4d                   	rex.WRB
    3bc5:	41                   	rex.B
    3bc6:	4c 5f                	rex.WR pop rdi
    3bc8:	44                   	rex.R
    3bc9:	49                   	rex.WB
    3bca:	47 5f                	rex.RXB pop r15
    3bcc:	5f                   	pop    rdi
    3bcd:	20 32                	and    BYTE PTR [rdx],dh
    3bcf:	31 00                	xor    DWORD PTR [rax],eax
    3bd1:	5f                   	pop    rdi
    3bd2:	5f                   	pop    rdi
    3bd3:	47                   	rex.RXB
    3bd4:	43                   	rex.XB
    3bd5:	43 5f                	rex.XB pop r15
    3bd7:	41 54                	push   r12
    3bd9:	4f                   	rex.WRXB
    3bda:	4d                   	rex.WRB
    3bdb:	49                   	rex.WB
    3bdc:	43 5f                	rex.XB pop r15
    3bde:	50                   	push   rax
    3bdf:	4f                   	rex.WRXB
    3be0:	49                   	rex.WB
    3be1:	4e 54                	rex.WRX push rsp
    3be3:	45 52                	rex.RB push r10
    3be5:	5f                   	pop    rdi
    3be6:	4c                   	rex.WR
    3be7:	4f                   	rex.WRXB
    3be8:	43                   	rex.XB
    3be9:	4b 5f                	rex.WXB pop r15
    3beb:	46 52                	rex.RX push rdx
    3bed:	45                   	rex.RB
    3bee:	45 20 32             	and    BYTE PTR [r10],r14b
    3bf1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3bf4:	73 74                	jae    3c6a <__FRAME_END__+0x3476>
    3bf6:	75 62                	jne    3c5a <__FRAME_END__+0x3466>
    3bf8:	5f                   	pop    rdi
    3bf9:	5f                   	pop    rdi
    3bfa:	5f                   	pop    rdi
    3bfb:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3bfe:	70 61                	jo     3c61 <__FRAME_END__+0x346d>
    3c00:	74 5f                	je     3c61 <__FRAME_END__+0x346d>
    3c02:	62                   	(bad)  
    3c03:	64 66 6c             	fs data16 ins BYTE PTR es:[rdi],dx
    3c06:	75 73                	jne    3c7b <__FRAME_END__+0x3487>
    3c08:	68 20 00 46 4f       	push   0x4f460020
    3c0d:	50                   	push   rax
    3c0e:	45                   	rex.RB
    3c0f:	4e 5f                	rex.WRX pop rdi
    3c11:	4d                   	rex.WRB
    3c12:	41 58                	pop    r8
    3c14:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
    3c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c18:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    3c1b:	5f                   	pop    rdi
    3c1c:	5f                   	pop    rdi
    3c1d:	53                   	push   rbx
    3c1e:	45                   	rex.RB
    3c1f:	47 5f                	rex.RXB pop r15
    3c21:	46 53                	rex.RX push rbx
    3c23:	20 31                	and    BYTE PTR [rcx],dh
    3c25:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3c28:	50                   	push   rax
    3c29:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    3c2c:	67 73 29             	addr32 jae 3c58 <__FRAME_END__+0x3464>
    3c2f:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    3c32:	67 73 00             	addr32 jae 3c35 <__FRAME_END__+0x3441>
    3c35:	5f                   	pop    rdi
    3c36:	5f                   	pop    rdi
    3c37:	54                   	push   rsp
    3c38:	49                   	rex.WB
    3c39:	4d                   	rex.WRB
    3c3a:	45 5f                	rex.RB pop r15
    3c3c:	54                   	push   rsp
    3c3d:	5f                   	pop    rdi
    3c3e:	54                   	push   rsp
    3c3f:	59                   	pop    rcx
    3c40:	50                   	push   rax
    3c41:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3c45:	53                   	push   rbx
    3c46:	59                   	pop    rcx
    3c47:	53                   	push   rbx
    3c48:	43                   	rex.XB
    3c49:	41                   	rex.B
    3c4a:	4c                   	rex.WR
    3c4b:	4c 5f                	rex.WR pop rdi
    3c4d:	53                   	push   rbx
    3c4e:	4c                   	rex.WR
    3c4f:	4f                   	rex.WRXB
    3c50:	4e                   	rex.WRX
    3c51:	47 5f                	rex.RXB pop r15
    3c53:	54                   	push   rsp
    3c54:	59                   	pop    rcx
    3c55:	50                   	push   rax
    3c56:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3c5a:	55                   	push   rbp
    3c5b:	49                   	rex.WB
    3c5c:	4e 54                	rex.WRX push rsp
    3c5e:	5f                   	pop    rdi
    3c5f:	46                   	rex.RX
    3c60:	41 53                	push   r11
    3c62:	54                   	push   rsp
    3c63:	31 36                	xor    DWORD PTR [rsi],esi
    3c65:	5f                   	pop    rdi
    3c66:	54                   	push   rsp
    3c67:	59                   	pop    rcx
    3c68:	50                   	push   rax
    3c69:	45 5f                	rex.RB pop r15
    3c6b:	5f                   	pop    rdi
    3c6c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3c70:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3c74:	73 69                	jae    3cdf <__FRAME_END__+0x34eb>
    3c76:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3c78:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3c7d:	74 00                	je     3c7f <__FRAME_END__+0x348b>
    3c7f:	5f                   	pop    rdi
    3c80:	5f                   	pop    rdi
    3c81:	47                   	rex.RXB
    3c82:	4c                   	rex.WR
    3c83:	49                   	rex.WB
    3c84:	42                   	rex.X
    3c85:	43 5f                	rex.XB pop r15
    3c87:	5f                   	pop    rdi
    3c88:	20 32                	and    BYTE PTR [rdx],dh
    3c8a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3c8d:	4f 5f                	rex.WRXB pop r15
    3c8f:	73 74                	jae    3d05 <__FRAME_END__+0x3511>
    3c91:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3c93:	75 74                	jne    3d09 <__FRAME_END__+0x3515>
    3c95:	20 28                	and    BYTE PTR [rax],ch
    3c97:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    3c9a:	4f 5f                	rex.WRXB pop r15
    3c9c:	46                   	rex.RX
    3c9d:	49                   	rex.WB
    3c9e:	4c                   	rex.WR
    3c9f:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    3ca2:	28 26                	sub    BYTE PTR [rsi],ah
    3ca4:	5f                   	pop    rdi
    3ca5:	49                   	rex.WB
    3ca6:	4f 5f                	rex.WRXB pop r15
    3ca8:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    3cab:	5f                   	pop    rdi
    3cac:	73 74                	jae    3d22 <__FRAME_END__+0x352e>
    3cae:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3cb0:	75 74                	jne    3d26 <__FRAME_END__+0x3532>
    3cb2:	5f                   	pop    rdi
    3cb3:	29 29                	sub    DWORD PTR [rcx],ebp
    3cb5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3cb8:	55                   	push   rbp
    3cb9:	53                   	push   rbx
    3cba:	45 52                	rex.RB push r10
    3cbc:	5f                   	pop    rdi
    3cbd:	4c                   	rex.WR
    3cbe:	41                   	rex.B
    3cbf:	42                   	rex.X
    3cc0:	45                   	rex.RB
    3cc1:	4c 5f                	rex.WR pop rdi
    3cc3:	50                   	push   rax
    3cc4:	52                   	push   rdx
    3cc5:	45                   	rex.RB
    3cc6:	46                   	rex.RX
    3cc7:	49 58                	rex.WB pop r8
    3cc9:	5f                   	pop    rdi
    3cca:	5f                   	pop    rdi
    3ccb:	20 00                	and    BYTE PTR [rax],al
    3ccd:	5f                   	pop    rdi
    3cce:	49                   	rex.WB
    3ccf:	4f 5f                	rex.WRXB pop r15
    3cd1:	70 69                	jo     3d3c <__FRAME_END__+0x3548>
    3cd3:	64 5f                	fs pop rdi
    3cd5:	74 20                	je     3cf7 <__FRAME_END__+0x3503>
    3cd7:	5f                   	pop    rdi
    3cd8:	5f                   	pop    rdi
    3cd9:	70 69                	jo     3d44 <__FRAME_END__+0x3550>
    3cdb:	64 5f                	fs pop rdi
    3cdd:	74 00                	je     3cdf <__FRAME_END__+0x34eb>
    3cdf:	5f                   	pop    rdi
    3ce0:	5f                   	pop    rdi
    3ce1:	67 6c                	ins    BYTE PTR es:[edi],dx
    3ce3:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
    3cea:	72 6f                	jb     3d5b <__FRAME_END__+0x3567>
    3cec:	5f                   	pop    rdi
    3ced:	77 61                	ja     3d50 <__FRAME_END__+0x355c>
    3cef:	72 6e                	jb     3d5f <__FRAME_END__+0x356b>
    3cf1:	69 6e 67 31 28 6d 65 	imul   ebp,DWORD PTR [rsi+0x67],0x656d2831
    3cf8:	73 73                	jae    3d6d <__FRAME_END__+0x3579>
    3cfa:	61                   	(bad)  
    3cfb:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
    3cff:	5f                   	pop    rdi
    3d00:	50                   	push   rax
    3d01:	72 61                	jb     3d64 <__FRAME_END__+0x3570>
    3d03:	67 6d                	ins    DWORD PTR es:[edi],dx
    3d05:	61                   	(bad)  
    3d06:	20 28                	and    BYTE PTR [rax],ch
    3d08:	23 6d 65             	and    ebp,DWORD PTR [rbp+0x65]
    3d0b:	73 73                	jae    3d80 <__FRAME_END__+0x358c>
    3d0d:	61                   	(bad)  
    3d0e:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
    3d12:	5f                   	pop    rdi
    3d13:	5f                   	pop    rdi
    3d14:	47                   	rex.RXB
    3d15:	43                   	rex.XB
    3d16:	43 5f                	rex.XB pop r15
    3d18:	41 54                	push   r12
    3d1a:	4f                   	rex.WRXB
    3d1b:	4d                   	rex.WRB
    3d1c:	49                   	rex.WB
    3d1d:	43 5f                	rex.XB pop r15
    3d1f:	43                   	rex.XB
    3d20:	48                   	rex.W
    3d21:	41 52                	push   r10
    3d23:	33 32                	xor    esi,DWORD PTR [rdx]
    3d25:	5f                   	pop    rdi
    3d26:	54                   	push   rsp
    3d27:	5f                   	pop    rdi
    3d28:	4c                   	rex.WR
    3d29:	4f                   	rex.WRXB
    3d2a:	43                   	rex.XB
    3d2b:	4b 5f                	rex.WXB pop r15
    3d2d:	46 52                	rex.RX push rdx
    3d2f:	45                   	rex.RB
    3d30:	45 20 32             	and    BYTE PTR [r10],r14b
    3d33:	00 5f 6f             	add    BYTE PTR [rdi+0x6f],bl
    3d36:	6c                   	ins    BYTE PTR es:[rdi],dx
    3d37:	64 5f                	fs pop rdi
    3d39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d3a:	66 66 73 65          	data16 data16 jae 3da3 <__FRAME_END__+0x35af>
    3d3e:	74 00                	je     3d40 <__FRAME_END__+0x354c>
    3d40:	5f                   	pop    rdi
    3d41:	49                   	rex.WB
    3d42:	4f 5f                	rex.WRXB pop r15
    3d44:	46                   	rex.RX
    3d45:	49                   	rex.WB
    3d46:	4c                   	rex.WR
    3d47:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3d4b:	4f 5f                	rex.WRXB pop r15
    3d4d:	55                   	push   rbp
    3d4e:	4e                   	rex.WRX
    3d4f:	42 55                	rex.X push rbp
    3d51:	46                   	rex.RX
    3d52:	46                   	rex.RX
    3d53:	45 52                	rex.RB push r10
    3d55:	45                   	rex.RB
    3d56:	44 20 32             	and    BYTE PTR [rdx],r14b
    3d59:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d5c:	43                   	rex.XB
    3d5d:	48                   	rex.W
    3d5e:	41 52                	push   r10
    3d60:	5f                   	pop    rdi
    3d61:	42                   	rex.X
    3d62:	49 54                	rex.WB push r12
    3d64:	5f                   	pop    rdi
    3d65:	5f                   	pop    rdi
    3d66:	20 38                	and    BYTE PTR [rax],bh
    3d68:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d6b:	43                   	rex.XB
    3d6c:	4c                   	rex.WR
    3d6d:	4f                   	rex.WRXB
    3d6e:	43                   	rex.XB
    3d6f:	4b 5f                	rex.WXB pop r15
    3d71:	54                   	push   rsp
    3d72:	5f                   	pop    rdi
    3d73:	54                   	push   rsp
    3d74:	59                   	pop    rcx
    3d75:	50                   	push   rax
    3d76:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3d7a:	53                   	push   rbx
    3d7b:	59                   	pop    rcx
    3d7c:	53                   	push   rbx
    3d7d:	43                   	rex.XB
    3d7e:	41                   	rex.B
    3d7f:	4c                   	rex.WR
    3d80:	4c 5f                	rex.WR pop rdi
    3d82:	53                   	push   rbx
    3d83:	4c                   	rex.WR
    3d84:	4f                   	rex.WRXB
    3d85:	4e                   	rex.WRX
    3d86:	47 5f                	rex.RXB pop r15
    3d88:	54                   	push   rsp
    3d89:	59                   	pop    rcx
    3d8a:	50                   	push   rax
    3d8b:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3d8f:	41 54                	push   r12
    3d91:	4f                   	rex.WRXB
    3d92:	4d                   	rex.WRB
    3d93:	49                   	rex.WB
    3d94:	43 5f                	rex.XB pop r15
    3d96:	52                   	push   rdx
    3d97:	45                   	rex.RB
    3d98:	4c                   	rex.WR
    3d99:	41 58                	pop    r8
    3d9b:	45                   	rex.RB
    3d9c:	44 20 30             	and    BYTE PTR [rax],r14b
    3d9f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3da2:	4f 5f                	rex.WRXB pop r15
    3da4:	73 73                	jae    3e19 <__FRAME_END__+0x3625>
    3da6:	69 7a 65 5f 74 20 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f20745f
    3dad:	5f                   	pop    rdi
    3dae:	73 73                	jae    3e23 <__FRAME_END__+0x362f>
    3db0:	69 7a 65 5f 74 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f00745f
    3db7:	5f                   	pop    rdi
    3db8:	53                   	push   rbx
    3db9:	54                   	push   rsp
    3dba:	44                   	rex.R
    3dbb:	43 5f                	rex.XB pop r15
    3dbd:	48                   	rex.W
    3dbe:	4f 53                	rex.WRXB push r11
    3dc0:	54                   	push   rsp
    3dc1:	45                   	rex.RB
    3dc2:	44 5f                	rex.R pop rdi
    3dc4:	5f                   	pop    rdi
    3dc5:	20 31                	and    BYTE PTR [rcx],dh
    3dc7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3dca:	53                   	push   rbx
    3dcb:	49 5a                	rex.WB pop r10
    3dcd:	45 5f                	rex.RB pop r15
    3dcf:	57                   	push   rdi
    3dd0:	49                   	rex.WB
    3dd1:	44 54                	rex.R push rsp
    3dd3:	48 5f                	rex.W pop rdi
    3dd5:	5f                   	pop    rdi
    3dd6:	20 36                	and    BYTE PTR [rsi],dh
    3dd8:	34 00                	xor    al,0x0
    3dda:	5f                   	pop    rdi
    3ddb:	5f                   	pop    rdi
    3ddc:	52                   	push   rdx
    3ddd:	45                   	rex.RB
    3dde:	44                   	rex.R
    3ddf:	49 52                	rex.WB push r10
    3de1:	45                   	rex.RB
    3de2:	43 54                	rex.XB push r12
    3de4:	5f                   	pop    rdi
    3de5:	4c                   	rex.WR
    3de6:	44                   	rex.R
    3de7:	42                   	rex.X
    3de8:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    3dec:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ded:	65 2c 70             	gs sub al,0x70
    3df0:	72 6f                	jb     3e61 <__FRAME_END__+0x366d>
    3df2:	74 6f                	je     3e63 <__FRAME_END__+0x366f>
    3df4:	2c 61                	sub    al,0x61
    3df6:	6c                   	ins    BYTE PTR es:[rdi],dx
    3df7:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    3dfe:	52                   	push   rdx
    3dff:	45                   	rex.RB
    3e00:	44                   	rex.R
    3e01:	49 52                	rex.WB push r10
    3e03:	45                   	rex.RB
    3e04:	43 54                	rex.XB push r12
    3e06:	20 28                	and    BYTE PTR [rax],ch
    3e08:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e09:	61                   	(bad)  
    3e0a:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e0b:	65 2c 20             	gs sub al,0x20
    3e0e:	70 72                	jo     3e82 <__FRAME_END__+0x368e>
    3e10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e11:	74 6f                	je     3e82 <__FRAME_END__+0x368e>
    3e13:	2c 20                	sub    al,0x20
    3e15:	61                   	(bad)  
    3e16:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e17:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    3e1e:	61                   	(bad)  
    3e1f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e20:	77 61                	ja     3e83 <__FRAME_END__+0x368f>
    3e22:	79 73                	jns    3e97 <__FRAME_END__+0x36a3>
    3e24:	5f                   	pop    rdi
    3e25:	69 6e 6c 69 6e 65 00 	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
    3e2c:	5f                   	pop    rdi
    3e2d:	5f                   	pop    rdi
    3e2e:	68 61 73 5f 69       	push   0x695f7361
    3e33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e34:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e38:	65 28 53 54          	sub    BYTE PTR gs:[rbx+0x54],dl
    3e3c:	52                   	push   rdx
    3e3d:	29 20                	sub    DWORD PTR [rax],esp
    3e3f:	5f                   	pop    rdi
    3e40:	5f                   	pop    rdi
    3e41:	68 61 73 5f 69       	push   0x695f7361
    3e46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e47:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e4b:	65 5f                	gs pop rdi
    3e4d:	5f                   	pop    rdi
    3e4e:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
    3e51:	52                   	push   rdx
    3e52:	29 00                	sub    DWORD PTR [rax],eax
    3e54:	5f                   	pop    rdi
    3e55:	5f                   	pop    rdi
    3e56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e57:	65 65 64 5f          	gs gs fs pop rdi
    3e5b:	5f                   	pop    rdi
    3e5c:	5f                   	pop    rdi
    3e5d:	76 61                	jbe    3ec0 <__FRAME_END__+0x36cc>
    3e5f:	5f                   	pop    rdi
    3e60:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e61:	69 73 74 20 00 5f 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f5f0020
    3e68:	41 53                	push   r11
    3e6a:	4d                   	rex.WRB
    3e6b:	4e                   	rex.WRX
    3e6c:	41                   	rex.B
    3e6d:	4d                   	rex.WRB
    3e6e:	45 32 28             	xor    r13b,BYTE PTR [r8]
    3e71:	70 72                	jo     3ee5 <__FRAME_END__+0x36f1>
    3e73:	65 66 69 78 2c 63 6e 	imul   di,WORD PTR gs:[rax+0x2c],0x6e63
    3e7a:	61                   	(bad)  
    3e7b:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e7c:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    3e7f:	5f                   	pop    rdi
    3e80:	5f                   	pop    rdi
    3e81:	53                   	push   rbx
    3e82:	54                   	push   rsp
    3e83:	52                   	push   rdx
    3e84:	49                   	rex.WB
    3e85:	4e                   	rex.WRX
    3e86:	47 20 28             	rex.RXB and BYTE PTR [r8],r13b
    3e89:	70 72                	jo     3efd <__FRAME_END__+0x3709>
    3e8b:	65 66 69 78 29 20 63 	imul   di,WORD PTR gs:[rax+0x29],0x6320
    3e92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e93:	61                   	(bad)  
    3e94:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e95:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
    3e99:	4f 5f                	rex.WRXB pop r15
    3e9b:	53                   	push   rbx
    3e9c:	43                   	rex.XB
    3e9d:	49                   	rex.WB
    3e9e:	45                   	rex.RB
    3e9f:	4e 54                	rex.WRX push rsp
    3ea1:	49                   	rex.WB
    3ea2:	46                   	rex.RX
    3ea3:	49                   	rex.WB
    3ea4:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    3ea7:	34 30                	xor    al,0x30
    3ea9:	30 30                	xor    BYTE PTR [rax],dh
    3eab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3eae:	4f 5f                	rex.WRXB pop r15
    3eb0:	70 65                	jo     3f17 <__FRAME_END__+0x3723>
    3eb2:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    3eb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3eb8:	6c                   	ins    BYTE PTR es:[rdi],dx
    3eb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3eba:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3ebd:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    3ec1:	70 29                	jo     3eec <__FRAME_END__+0x36f8>
    3ec3:	20 28                	and    BYTE PTR [rax],ch
    3ec5:	5f                   	pop    rdi
    3ec6:	49                   	rex.WB
    3ec7:	4f 5f                	rex.WRXB pop r15
    3ec9:	42                   	rex.X
    3eca:	45 20 28             	and    BYTE PTR [r8],r13b
    3ecd:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3ed0:	70 29                	jo     3efb <__FRAME_END__+0x3707>
    3ed2:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3ed7:	5f                   	pop    rdi
    3ed8:	72 65                	jb     3f3f <__FRAME_END__+0x374b>
    3eda:	61                   	(bad)  
    3edb:	64 5f                	fs pop rdi
    3edd:	70 74                	jo     3f53 <__FRAME_END__+0x375f>
    3edf:	72 20                	jb     3f01 <__FRAME_END__+0x370d>
    3ee1:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    3ee7:	70 29                	jo     3f12 <__FRAME_END__+0x371e>
    3ee9:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3eee:	5f                   	pop    rdi
    3eef:	72 65                	jb     3f56 <__FRAME_END__+0x3762>
    3ef1:	61                   	(bad)  
    3ef2:	64 5f                	fs pop rdi
    3ef4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3ef6:	64 2c 20             	fs sub al,0x20
    3ef9:	30 29                	xor    BYTE PTR [rcx],ch
    3efb:	20 26                	and    BYTE PTR [rsi],ah
    3efd:	26 20 5f 5f          	and    BYTE PTR es:[rdi+0x5f],bl
    3f01:	75 6e                	jne    3f71 <__FRAME_END__+0x377d>
    3f03:	64 65 72 66          	fs gs jb 3f6d <__FRAME_END__+0x3779>
    3f07:	6c                   	ins    BYTE PTR es:[rdi],dx
    3f08:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f09:	77 20                	ja     3f2b <__FRAME_END__+0x3737>
    3f0b:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3f0e:	70 29                	jo     3f39 <__FRAME_END__+0x3745>
    3f10:	20 3d 3d 20 45 4f    	and    BYTE PTR [rip+0x4f45203d],bh        # 4f455f53 <_end+0x4f254f3b>
    3f16:	46 20 3f             	rex.RX and BYTE PTR [rdi],r15b
    3f19:	20 45 4f             	and    BYTE PTR [rbp+0x4f],al
    3f1c:	46 20 3a             	rex.RX and BYTE PTR [rdx],r15b
    3f1f:	20 2a                	and    BYTE PTR [rdx],ch
    3f21:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    3f24:	73 69                	jae    3f8f <__FRAME_END__+0x379b>
    3f26:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3f28:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3f2d:	61                   	(bad)  
    3f2e:	72 20                	jb     3f50 <__FRAME_END__+0x375c>
    3f30:	2a 29                	sub    ch,BYTE PTR [rcx]
    3f32:	20 28                	and    BYTE PTR [rax],ch
    3f34:	5f                   	pop    rdi
    3f35:	66 70 29             	data16 jo 3f61 <__FRAME_END__+0x376d>
    3f38:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f3d:	5f                   	pop    rdi
    3f3e:	72 65                	jb     3fa5 <__FRAME_END__+0x37b1>
    3f40:	61                   	(bad)  
    3f41:	64 5f                	fs pop rdi
    3f43:	70 74                	jo     3fb9 <__FRAME_END__+0x37c5>
    3f45:	72 29                	jb     3f70 <__FRAME_END__+0x377c>
    3f47:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3f4a:	4c                   	rex.WR
    3f4b:	4f                   	rex.WRXB
    3f4c:	4e                   	rex.WRX
    3f4d:	47 5f                	rex.RXB pop r15
    3f4f:	57                   	push   rdi
    3f50:	49                   	rex.WB
    3f51:	44 54                	rex.R push rsp
    3f53:	48 5f                	rex.W pop rdi
    3f55:	5f                   	pop    rdi
    3f56:	20 36                	and    BYTE PTR [rsi],dh
    3f58:	34 00                	xor    al,0x0
    3f5a:	5f                   	pop    rdi
    3f5b:	5f                   	pop    rdi
    3f5c:	55                   	push   rbp
    3f5d:	49                   	rex.WB
    3f5e:	4e 54                	rex.WRX push rsp
    3f60:	36 34 5f             	ss xor al,0x5f
    3f63:	4d                   	rex.WRB
    3f64:	41 58                	pop    r8
    3f66:	5f                   	pop    rdi
    3f67:	5f                   	pop    rdi
    3f68:	20 30                	and    BYTE PTR [rax],dh
    3f6a:	78 66                	js     3fd2 <__FRAME_END__+0x37de>
    3f6c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3f73:	66 66 66 66 66 66 66 
    3f7a:	66 55                	push   bp
    3f7c:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    3f80:	53                   	push   rbx
    3f81:	51                   	push   rcx
    3f82:	55                   	push   rbp
    3f83:	41                   	rex.B
    3f84:	44 5f                	rex.R pop rdi
    3f86:	54                   	push   rsp
    3f87:	59                   	pop    rcx
    3f88:	50                   	push   rax
    3f89:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3f8e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3f92:	74 00                	je     3f94 <__FRAME_END__+0x37a0>
    3f94:	5f                   	pop    rdi
    3f95:	5f                   	pop    rdi
    3f96:	55                   	push   rbp
    3f97:	53                   	push   rbx
    3f98:	45 5f                	rex.RB pop r15
    3f9a:	58                   	pop    rax
    3f9b:	4f 50                	rex.WRXB push r8
    3f9d:	45                   	rex.RB
    3f9e:	4e 32 4b 58          	rex.WRX xor r9b,BYTE PTR [rbx+0x58]
    3fa2:	53                   	push   rbx
    3fa3:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    3fa7:	61                   	(bad)  
    3fa8:	74 74                	je     401e <__FRAME_END__+0x382a>
    3faa:	72 69                	jb     4015 <__FRAME_END__+0x3821>
    3fac:	62                   	(bad)  
    3fad:	75 74                	jne    4023 <__FRAME_END__+0x382f>
    3faf:	65 5f                	gs pop rdi
    3fb1:	61                   	(bad)  
    3fb2:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fb4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fb5:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    3fb8:	69 7a 65 5f 5f 28 70 	imul   edi,DWORD PTR [rdx+0x65],0x70285f5f
    3fbf:	61                   	(bad)  
    3fc0:	72 61                	jb     4023 <__FRAME_END__+0x382f>
    3fc2:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fc3:	73 29                	jae    3fee <__FRAME_END__+0x37fa>
    3fc5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3fc8:	61                   	(bad)  
    3fc9:	74 74                	je     403f <__FRAME_END__+0x384b>
    3fcb:	72 69                	jb     4036 <__FRAME_END__+0x3842>
    3fcd:	62                   	(bad)  
    3fce:	75 74                	jne    4044 <__FRAME_END__+0x3850>
    3fd0:	65 5f                	gs pop rdi
    3fd2:	5f                   	pop    rdi
    3fd3:	20 28                	and    BYTE PTR [rax],ch
    3fd5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3fd8:	61                   	(bad)  
    3fd9:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fda:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fdc:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    3fdf:	69 7a 65 5f 5f 20 70 	imul   edi,DWORD PTR [rdx+0x65],0x70205f5f
    3fe6:	61                   	(bad)  
    3fe7:	72 61                	jb     404a <__FRAME_END__+0x3856>
    3fe9:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fea:	73 29                	jae    4015 <__FRAME_END__+0x3821>
    3fec:	29 00                	sub    DWORD PTR [rax],eax
    3fee:	5f                   	pop    rdi
    3fef:	49                   	rex.WB
    3ff0:	4f 5f                	rex.WRXB pop r15
    3ff2:	77 69                	ja     405d <__FRAME_END__+0x3869>
    3ff4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ff5:	74 5f                	je     4056 <__FRAME_END__+0x3862>
    3ff7:	74 20                	je     4019 <__FRAME_END__+0x3825>
    3ff9:	77 69                	ja     4064 <__FRAME_END__+0x3870>
    3ffb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ffc:	74 5f                	je     405d <__FRAME_END__+0x3869>
    3ffe:	74 00                	je     4000 <__FRAME_END__+0x380c>
    4000:	5f                   	pop    rdi
    4001:	5f                   	pop    rdi
    4002:	6b 38 20             	imul   edi,DWORD PTR [rax],0x20
    4005:	31 00                	xor    DWORD PTR [rax],eax
    4007:	5f                   	pop    rdi
    4008:	5f                   	pop    rdi
    4009:	47                   	rex.RXB
    400a:	43                   	rex.XB
    400b:	43 5f                	rex.XB pop r15
    400d:	41 54                	push   r12
    400f:	4f                   	rex.WRXB
    4010:	4d                   	rex.WRB
    4011:	49                   	rex.WB
    4012:	43 5f                	rex.XB pop r15
    4014:	4c                   	rex.WR
    4015:	4c                   	rex.WR
    4016:	4f                   	rex.WRXB
    4017:	4e                   	rex.WRX
    4018:	47 5f                	rex.RXB pop r15
    401a:	4c                   	rex.WR
    401b:	4f                   	rex.WRXB
    401c:	43                   	rex.XB
    401d:	4b 5f                	rex.WXB pop r15
    401f:	46 52                	rex.RX push rdx
    4021:	45                   	rex.RB
    4022:	45 20 32             	and    BYTE PTR [r10],r14b
    4025:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4028:	44                   	rex.R
    4029:	45                   	rex.RB
    402a:	43                   	rex.XB
    402b:	36 34 5f             	ss xor al,0x5f
    402e:	4d                   	rex.WRB
    402f:	49                   	rex.WB
    4030:	4e 5f                	rex.WRX pop rdi
    4032:	45 58                	rex.RB pop r8
    4034:	50                   	push   rax
    4035:	5f                   	pop    rdi
    4036:	5f                   	pop    rdi
    4037:	20 28                	and    BYTE PTR [rax],ch
    4039:	2d 33 38 32 29       	sub    eax,0x29323833
    403e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4041:	72 65                	jb     40a8 <__FRAME_END__+0x38b4>
    4043:	73 74                	jae    40b9 <__FRAME_END__+0x38c5>
    4045:	72 69                	jb     40b0 <__FRAME_END__+0x38bc>
    4047:	63 74 5f 61          	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
    404b:	72 72                	jb     40bf <__FRAME_END__+0x38cb>
    404d:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    4050:	72 65                	jb     40b7 <__FRAME_END__+0x38c3>
    4052:	73 74                	jae    40c8 <__FRAME_END__+0x38d4>
    4054:	72 69                	jb     40bf <__FRAME_END__+0x38cb>
    4056:	63 74 00 5f          	movsxd esi,DWORD PTR [rax+rax*1+0x5f]
    405a:	5f                   	pop    rdi
    405b:	41 54                	push   r12
    405d:	4f                   	rex.WRXB
    405e:	4d                   	rex.WRB
    405f:	49                   	rex.WB
    4060:	43 5f                	rex.XB pop r15
    4062:	41                   	rex.B
    4063:	43 51                	rex.XB push r9
    4065:	5f                   	pop    rdi
    4066:	52                   	push   rdx
    4067:	45                   	rex.RB
    4068:	4c 20 34 00          	rex.WR and BYTE PTR [rax+rax*1],r14b
    406c:	5f                   	pop    rdi
    406d:	49                   	rex.WB
    406e:	4f 5f                	rex.WRXB pop r15
    4070:	66 70 6f             	data16 jo 40e2 <__FRAME_END__+0x38ee>
    4073:	73 5f                	jae    40d4 <__FRAME_END__+0x38e0>
    4075:	74 20                	je     4097 <__FRAME_END__+0x38a3>
    4077:	5f                   	pop    rdi
    4078:	47 5f                	rex.RXB pop r15
    407a:	66 70 6f             	data16 jo 40ec <__FRAME_END__+0x38f8>
    407d:	73 5f                	jae    40de <__FRAME_END__+0x38ea>
    407f:	74 00                	je     4081 <__FRAME_END__+0x388d>
    4081:	5f                   	pop    rdi
    4082:	5f                   	pop    rdi
    4083:	61                   	(bad)  
    4084:	74 74                	je     40fa <__FRAME_END__+0x3906>
    4086:	72 69                	jb     40f1 <__FRAME_END__+0x38fd>
    4088:	62                   	(bad)  
    4089:	75 74                	jne    40ff <__FRAME_END__+0x390b>
    408b:	65 5f                	gs pop rdi
    408d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    408f:	72 6d                	jb     40fe <__FRAME_END__+0x390a>
    4091:	61                   	(bad)  
    4092:	74 5f                	je     40f3 <__FRAME_END__+0x38ff>
    4094:	73 74                	jae    410a <__FRAME_END__+0x3916>
    4096:	72 66                	jb     40fe <__FRAME_END__+0x390a>
    4098:	6d                   	ins    DWORD PTR es:[rdi],dx
    4099:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    409a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    409b:	5f                   	pop    rdi
    409c:	5f                   	pop    rdi
    409d:	28 61 2c             	sub    BYTE PTR [rcx+0x2c],ah
    40a0:	62                   	(bad)  
    40a1:	29 20                	sub    DWORD PTR [rax],esp
    40a3:	5f                   	pop    rdi
    40a4:	5f                   	pop    rdi
    40a5:	61                   	(bad)  
    40a6:	74 74                	je     411c <__FRAME_END__+0x3928>
    40a8:	72 69                	jb     4113 <__FRAME_END__+0x391f>
    40aa:	62                   	(bad)  
    40ab:	75 74                	jne    4121 <__FRAME_END__+0x392d>
    40ad:	65 5f                	gs pop rdi
    40af:	5f                   	pop    rdi
    40b0:	20 28                	and    BYTE PTR [rax],ch
    40b2:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    40b5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    40b7:	72 6d                	jb     4126 <__FRAME_END__+0x3932>
    40b9:	61                   	(bad)  
    40ba:	74 5f                	je     411b <__FRAME_END__+0x3927>
    40bc:	5f                   	pop    rdi
    40bd:	20 28                	and    BYTE PTR [rax],ch
    40bf:	5f                   	pop    rdi
    40c0:	5f                   	pop    rdi
    40c1:	73 74                	jae    4137 <__FRAME_END__+0x3943>
    40c3:	72 66                	jb     412b <__FRAME_END__+0x3937>
    40c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    40c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40c8:	5f                   	pop    rdi
    40c9:	5f                   	pop    rdi
    40ca:	2c 20                	sub    al,0x20
    40cc:	61                   	(bad)  
    40cd:	2c 20                	sub    al,0x20
    40cf:	62                   	(bad)  
    40d0:	29 29                	sub    DWORD PTR [rcx],ebp
    40d2:	29 00                	sub    DWORD PTR [rax],eax
    40d4:	5f                   	pop    rdi
    40d5:	5f                   	pop    rdi
    40d6:	44                   	rex.R
    40d7:	45                   	rex.RB
    40d8:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    40db:	5f                   	pop    rdi
    40dc:	4d                   	rex.WRB
    40dd:	49                   	rex.WB
    40de:	4e 5f                	rex.WRX pop rdi
    40e0:	45 58                	rex.RB pop r8
    40e2:	50                   	push   rax
    40e3:	5f                   	pop    rdi
    40e4:	5f                   	pop    rdi
    40e5:	20 28                	and    BYTE PTR [rax],ch
    40e7:	2d 39 34 29 00       	sub    eax,0x293439
    40ec:	5f                   	pop    rdi
    40ed:	49                   	rex.WB
    40ee:	4f 5f                	rex.WRXB pop r15
    40f0:	46                   	rex.RX
    40f1:	49 58                	rex.WB pop r8
    40f3:	45                   	rex.RB
    40f4:	44 20 30             	and    BYTE PTR [rax],r14b
    40f7:	31 30                	xor    DWORD PTR [rax],esi
    40f9:	30 30                	xor    BYTE PTR [rax],dh
    40fb:	30 00                	xor    BYTE PTR [rax],al
    40fd:	5f                   	pop    rdi
    40fe:	5f                   	pop    rdi
    40ff:	49                   	rex.WB
    4100:	4e 54                	rex.WRX push rsp
    4102:	36 34 5f             	ss xor al,0x5f
    4105:	54                   	push   rsp
    4106:	59                   	pop    rcx
    4107:	50                   	push   rax
    4108:	45 5f                	rex.RB pop r15
    410a:	5f                   	pop    rdi
    410b:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    410f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4113:	74 00                	je     4115 <__FRAME_END__+0x3921>
    4115:	5f                   	pop    rdi
    4116:	5f                   	pop    rdi
    4117:	46                   	rex.RX
    4118:	4c 54                	rex.WR push rsp
    411a:	5f                   	pop    rdi
    411b:	4d                   	rex.WRB
    411c:	49                   	rex.WB
    411d:	4e 5f                	rex.WRX pop rdi
    411f:	5f                   	pop    rdi
    4120:	20 31                	and    BYTE PTR [rcx],dh
    4122:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    4125:	35 34 39 34 33       	xor    eax,0x33343934
    412a:	35 30 38 32 32       	xor    eax,0x32323830
    412f:	32 38                	xor    bh,BYTE PTR [rax]
    4131:	37                   	(bad)  
    4132:	35 30 37 39 36       	xor    eax,0x36393730
    4137:	38 37                	cmp    BYTE PTR [rdi],dh
    4139:	33 36                	xor    esi,DWORD PTR [rsi]
    413b:	35 33 37 32 32       	xor    eax,0x32323733
    4140:	32 32                	xor    dh,BYTE PTR [rdx]
    4142:	34 35                	xor    al,0x35
    4144:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    4148:	33 38                	xor    edi,DWORD PTR [rax]
    414a:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    414e:	55                   	push   rbp
    414f:	36 34 5f             	ss xor al,0x5f
    4152:	54                   	push   rsp
    4153:	59                   	pop    rcx
    4154:	50                   	push   rax
    4155:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    4159:	73 69                	jae    41c4 <__FRAME_END__+0x39d0>
    415b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    415d:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    4163:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4167:	74 00                	je     4169 <__FRAME_END__+0x3975>
    4169:	5f                   	pop    rdi
    416a:	73 62                	jae    41ce <__FRAME_END__+0x39da>
    416c:	75 66                	jne    41d4 <__FRAME_END__+0x39e0>
    416e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4171:	4f 5f                	rex.WRXB pop r15
    4173:	76 61                	jbe    41d6 <__FRAME_END__+0x39e2>
    4175:	5f                   	pop    rdi
    4176:	6c                   	ins    BYTE PTR es:[rdi],dx
    4177:	69 73 74 00 73 74 64 	imul   esi,DWORD PTR [rbx+0x74],0x64747300
    417e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    417f:	75 74                	jne    41f5 <__FRAME_END__+0x3a01>
    4181:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    4184:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    4186:	75 74                	jne    41fc <__FRAME_END__+0x3a08>
    4188:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    418b:	55                   	push   rbp
    418c:	53                   	push   rbx
    418d:	45 5f                	rex.RB pop r15
    418f:	47                   	rex.RXB
    4190:	4e 55                	rex.WRX push rbp
    4192:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4195:	54                   	push   rsp
    4196:	49                   	rex.WB
    4197:	4d                   	rex.WRB
    4198:	45 52                	rex.RB push r10
    419a:	5f                   	pop    rdi
    419b:	54                   	push   rsp
    419c:	5f                   	pop    rdi
    419d:	54                   	push   rsp
    419e:	59                   	pop    rcx
    419f:	50                   	push   rax
    41a0:	45 20 76 6f          	and    BYTE PTR [r14+0x6f],r14b
    41a4:	69 64 20 2a 00 5f 49 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x4f495f00
    41ab:	4f 
    41ac:	5f                   	pop    rdi
    41ad:	77 72                	ja     4221 <__FRAME_END__+0x3a2d>
    41af:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
    41b6:	00 
    41b7:	5f                   	pop    rdi
    41b8:	5f                   	pop    rdi
    41b9:	46 58                	rex.RX pop rax
    41bb:	53                   	push   rbx
    41bc:	52                   	push   rdx
    41bd:	5f                   	pop    rdi
    41be:	5f                   	pop    rdi
    41bf:	20 31                	and    BYTE PTR [rcx],dh
    41c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41c4:	4c                   	rex.WR
    41c5:	45                   	rex.RB
    41c6:	41                   	rex.B
    41c7:	46 5f                	rex.RX pop rdi
    41c9:	41 54                	push   r12
    41cb:	54                   	push   rsp
    41cc:	52                   	push   rdx
    41cd:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    41d0:	61                   	(bad)  
    41d1:	74 74                	je     4247 <__FRAME_END__+0x3a53>
    41d3:	72 69                	jb     423e <__FRAME_END__+0x3a4a>
    41d5:	62                   	(bad)  
    41d6:	75 74                	jne    424c <__FRAME_END__+0x3a58>
    41d8:	65 5f                	gs pop rdi
    41da:	5f                   	pop    rdi
    41db:	20 28                	and    BYTE PTR [rax],ch
    41dd:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    41e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    41e1:	65 61                	gs (bad) 
    41e3:	66 5f                	pop    di
    41e5:	5f                   	pop    rdi
    41e6:	29 29                	sub    DWORD PTR [rcx],ebp
    41e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41eb:	49                   	rex.WB
    41ec:	4e 54                	rex.WRX push rsp
    41ee:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    41f1:	59                   	pop    rcx
    41f2:	50                   	push   rax
    41f3:	45 5f                	rex.RB pop r15
    41f5:	5f                   	pop    rdi
    41f6:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    41f9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    41fb:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    4200:	61                   	(bad)  
    4201:	72 00                	jb     4203 <__FRAME_END__+0x3a0f>
    4203:	5f                   	pop    rdi
    4204:	5f                   	pop    rdi
    4205:	49                   	rex.WB
    4206:	4e 54                	rex.WRX push rsp
    4208:	5f                   	pop    rdi
    4209:	4c                   	rex.WR
    420a:	45                   	rex.RB
    420b:	41 53                	push   r11
    420d:	54                   	push   rsp
    420e:	33 32                	xor    esi,DWORD PTR [rdx]
    4210:	5f                   	pop    rdi
    4211:	57                   	push   rdi
    4212:	49                   	rex.WB
    4213:	44 54                	rex.R push rsp
    4215:	48 5f                	rex.W pop rdi
    4217:	5f                   	pop    rdi
    4218:	20 33                	and    BYTE PTR [rbx],dh
    421a:	32 00                	xor    al,BYTE PTR [rax]
    421c:	5f                   	pop    rdi
    421d:	5f                   	pop    rdi
    421e:	53                   	push   rbx
    421f:	59                   	pop    rcx
    4220:	53                   	push   rbx
    4221:	43                   	rex.XB
    4222:	41                   	rex.B
    4223:	4c                   	rex.WR
    4224:	4c 5f                	rex.WR pop rdi
    4226:	53                   	push   rbx
    4227:	4c                   	rex.WR
    4228:	4f                   	rex.WRXB
    4229:	4e                   	rex.WRX
    422a:	47 5f                	rex.RXB pop r15
    422c:	54                   	push   rsp
    422d:	59                   	pop    rcx
    422e:	50                   	push   rax
    422f:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4233:	53                   	push   rbx
    4234:	4c                   	rex.WR
    4235:	4f                   	rex.WRXB
    4236:	4e                   	rex.WRX
    4237:	47 57                	rex.RXB push r15
    4239:	4f 52                	rex.WRXB push r10
    423b:	44 5f                	rex.R pop rdi
    423d:	54                   	push   rsp
    423e:	59                   	pop    rcx
    423f:	50                   	push   rax
    4240:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4244:	55                   	push   rbp
    4245:	49                   	rex.WB
    4246:	4e 54                	rex.WRX push rsp
    4248:	4d                   	rex.WRB
    4249:	41 58                	pop    r8
    424b:	5f                   	pop    rdi
    424c:	4d                   	rex.WRB
    424d:	41 58                	pop    r8
    424f:	5f                   	pop    rdi
    4250:	5f                   	pop    rdi
    4251:	20 30                	and    BYTE PTR [rax],dh
    4253:	78 66                	js     42bb <__FRAME_END__+0x3ac7>
    4255:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    425c:	66 66 66 66 66 66 66 
    4263:	66 55                	push   bp
    4265:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    4269:	67 6c                	ins    BYTE PTR es:[edi],dx
    426b:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    4272:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4273:	67 5f                	addr32 pop rdi
    4275:	70 72                	jo     42e9 <__FRAME_END__+0x3af5>
    4277:	65 72 65             	gs jb  42df <__FRAME_END__+0x3aeb>
    427a:	71 28                	jno    42a4 <__FRAME_END__+0x3ab0>
    427c:	6d                   	ins    DWORD PTR es:[rdi],dx
    427d:	61                   	(bad)  
    427e:	6a 2c                	push   0x2c
    4280:	6d                   	ins    DWORD PTR es:[rdi],dx
    4281:	69 6e 29 20 30 00 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f003020
    4288:	49                   	rex.WB
    4289:	4f 5f                	rex.WRXB pop r15
    428b:	62 61                	(bad)  
    428d:	63 6b 75             	movsxd ebp,DWORD PTR [rbx+0x75]
    4290:	70 5f                	jo     42f1 <__FRAME_END__+0x3afd>
    4292:	62 61                	(bad)  
    4294:	73 65                	jae    42fb <__FRAME_END__+0x3b07>
    4296:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4299:	6c                   	ins    BYTE PTR es:[rdi],dx
    429a:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    42a1:	31 00                	xor    DWORD PTR [rax],eax
    42a3:	5f                   	pop    rdi
    42a4:	5f                   	pop    rdi
    42a5:	50                   	push   rax
    42a6:	49                   	rex.WB
    42a7:	43 5f                	rex.XB pop r15
    42a9:	5f                   	pop    rdi
    42aa:	20 32                	and    BYTE PTR [rdx],dh
    42ac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42af:	49                   	rex.WB
    42b0:	4e 54                	rex.WRX push rsp
    42b2:	5f                   	pop    rdi
    42b3:	4c                   	rex.WR
    42b4:	45                   	rex.RB
    42b5:	41 53                	push   r11
    42b7:	54                   	push   rsp
    42b8:	33 32                	xor    esi,DWORD PTR [rdx]
    42ba:	5f                   	pop    rdi
    42bb:	54                   	push   rsp
    42bc:	59                   	pop    rcx
    42bd:	50                   	push   rax
    42be:	45 5f                	rex.RB pop r15
    42c0:	5f                   	pop    rdi
    42c1:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    42c4:	74 00                	je     42c6 <__FRAME_END__+0x3ad2>
    42c6:	5f                   	pop    rdi
    42c7:	5f                   	pop    rdi
    42c8:	55                   	push   rbp
    42c9:	49                   	rex.WB
    42ca:	4e 54                	rex.WRX push rsp
    42cc:	5f                   	pop    rdi
    42cd:	4c                   	rex.WR
    42ce:	45                   	rex.RB
    42cf:	41 53                	push   r11
    42d1:	54                   	push   rsp
    42d2:	36 34 5f             	ss xor al,0x5f
    42d5:	54                   	push   rsp
    42d6:	59                   	pop    rcx
    42d7:	50                   	push   rax
    42d8:	45 5f                	rex.RB pop r15
    42da:	5f                   	pop    rdi
    42db:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    42df:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    42e3:	73 69                	jae    434e <__FRAME_END__+0x3b5a>
    42e5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    42e7:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    42ec:	74 00                	je     42ee <__FRAME_END__+0x3afa>
    42ee:	5f                   	pop    rdi
    42ef:	49                   	rex.WB
    42f0:	4f 5f                	rex.WRXB pop r15
    42f2:	70 75                	jo     4369 <__FRAME_END__+0x3b75>
    42f4:	74 63                	je     4359 <__FRAME_END__+0x3b65>
    42f6:	5f                   	pop    rdi
    42f7:	75 6e                	jne    4367 <__FRAME_END__+0x3b73>
    42f9:	6c                   	ins    BYTE PTR es:[rdi],dx
    42fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42fb:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    42fe:	64 28 5f 63          	sub    BYTE PTR fs:[rdi+0x63],bl
    4302:	68 2c 5f 66 70       	push   0x70665f2c
    4307:	29 20                	sub    DWORD PTR [rax],esp
    4309:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    430c:	4f 5f                	rex.WRXB pop r15
    430e:	42                   	rex.X
    430f:	45 20 28             	and    BYTE PTR [r8],r13b
    4312:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    4315:	70 29                	jo     4340 <__FRAME_END__+0x3b4c>
    4317:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    431c:	5f                   	pop    rdi
    431d:	77 72                	ja     4391 <__FRAME_END__+0x3b9d>
    431f:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    4326:	20 
    4327:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    432d:	70 29                	jo     4358 <__FRAME_END__+0x3b64>
    432f:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    4334:	5f                   	pop    rdi
    4335:	77 72                	ja     43a9 <__FRAME_END__+0x3bb5>
    4337:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2c646e65
    433e:	2c 
    433f:	20 30                	and    BYTE PTR [rax],dh
    4341:	29 20                	sub    DWORD PTR [rax],esp
    4343:	3f                   	(bad)  
    4344:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    4347:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4348:	76 65                	jbe    43af <__FRAME_END__+0x3bbb>
    434a:	72 66                	jb     43b2 <__FRAME_END__+0x3bbe>
    434c:	6c                   	ins    BYTE PTR es:[rdi],dx
    434d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    434e:	77 20                	ja     4370 <__FRAME_END__+0x3b7c>
    4350:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    4353:	70 2c                	jo     4381 <__FRAME_END__+0x3b8d>
    4355:	20 28                	and    BYTE PTR [rax],ch
    4357:	75 6e                	jne    43c7 <__FRAME_END__+0x3bd3>
    4359:	73 69                	jae    43c4 <__FRAME_END__+0x3bd0>
    435b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    435d:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    4362:	61                   	(bad)  
    4363:	72 29                	jb     438e <__FRAME_END__+0x3b9a>
    4365:	20 28                	and    BYTE PTR [rax],ch
    4367:	5f                   	pop    rdi
    4368:	63 68 29             	movsxd ebp,DWORD PTR [rax+0x29]
    436b:	29 20                	sub    DWORD PTR [rax],esp
    436d:	3a 20                	cmp    ah,BYTE PTR [rax]
    436f:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    4372:	73 69                	jae    43dd <__FRAME_END__+0x3be9>
    4374:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4376:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    437b:	61                   	(bad)  
    437c:	72 29                	jb     43a7 <__FRAME_END__+0x3bb3>
    437e:	20 28                	and    BYTE PTR [rax],ch
    4380:	2a 28                	sub    ch,BYTE PTR [rax]
    4382:	5f                   	pop    rdi
    4383:	66 70 29             	data16 jo 43af <__FRAME_END__+0x3bbb>
    4386:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    438b:	5f                   	pop    rdi
    438c:	77 72                	ja     4400 <__FRAME_END__+0x3c0c>
    438e:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2b727470
    4395:	2b 
    4396:	2b 20                	sub    esp,DWORD PTR [rax]
    4398:	3d 20 28 5f 63       	cmp    eax,0x635f2820
    439d:	68 29 29 29 00       	push   0x292929
    43a2:	5f                   	pop    rdi
    43a3:	50                   	push   rax
    43a4:	4f 53                	rex.WRXB push r11
    43a6:	49 58                	rex.WB pop r8
    43a8:	5f                   	pop    rdi
    43a9:	53                   	push   rbx
    43aa:	4f 55                	rex.WRXB push r13
    43ac:	52                   	push   rdx
    43ad:	43                   	rex.XB
    43ae:	45 20 31             	and    BYTE PTR [r9],r14b
    43b1:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    43b4:	4f 5f                	rex.WRXB pop r15
    43b6:	44                   	rex.R
    43b7:	4f                   	rex.WRXB
    43b8:	4e 54                	rex.WRX push rsp
    43ba:	5f                   	pop    rdi
    43bb:	43                   	rex.XB
    43bc:	4c                   	rex.WR
    43bd:	4f 53                	rex.WRXB push r11
    43bf:	45 20 30             	and    BYTE PTR [r8],r14b
    43c2:	31 30                	xor    DWORD PTR [rax],esi
    43c4:	30 30                	xor    BYTE PTR [rax],dh
    43c6:	30 30                	xor    BYTE PTR [rax],dh
    43c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    43cb:	47                   	rex.RXB
    43cc:	4c                   	rex.WR
    43cd:	49                   	rex.WB
    43ce:	42                   	rex.X
    43cf:	43 5f                	rex.XB pop r15
    43d1:	55                   	push   rbp
    43d2:	53                   	push   rbx
    43d3:	45 5f                	rex.RB pop r15
    43d5:	49                   	rex.WB
    43d6:	45                   	rex.RB
    43d7:	43 5f                	rex.XB pop r15
    43d9:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f7d15 <_end+0x423f6cfd>
    43e0:	46 50                	rex.RX push rax
    43e2:	5f                   	pop    rdi
    43e3:	45 58                	rex.RB pop r8
    43e5:	54                   	push   rsp
    43e6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    43e9:	53                   	push   rbx
    43ea:	49 5a                	rex.WB pop r10
    43ec:	45 5f                	rex.RB pop r15
    43ee:	4d                   	rex.WRB
    43ef:	41 58                	pop    r8
    43f1:	5f                   	pop    rdi
    43f2:	5f                   	pop    rdi
    43f3:	20 30                	and    BYTE PTR [rax],dh
    43f5:	78 66                	js     445d <__FRAME_END__+0x3c69>
    43f7:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    43fe:	66 66 66 66 66 66 66 
    4405:	66 55                	push   bp
    4407:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    440b:	55                   	push   rbp
    440c:	49                   	rex.WB
    440d:	44 5f                	rex.R pop rdi
    440f:	54                   	push   rsp
    4410:	5f                   	pop    rdi
    4411:	54                   	push   rsp
    4412:	59                   	pop    rcx
    4413:	50                   	push   rax
    4414:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4418:	55                   	push   rbp
    4419:	33 32                	xor    esi,DWORD PTR [rdx]
    441b:	5f                   	pop    rdi
    441c:	54                   	push   rsp
    441d:	59                   	pop    rcx
    441e:	50                   	push   rax
    441f:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4423:	55                   	push   rbp
    4424:	4c                   	rex.WR
    4425:	4f                   	rex.WRXB
    4426:	4e                   	rex.WRX
    4427:	47 57                	rex.RXB push r15
    4429:	4f 52                	rex.WRXB push r10
    442b:	44 5f                	rex.R pop rdi
    442d:	54                   	push   rsp
    442e:	59                   	pop    rcx
    442f:	50                   	push   rax
    4430:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    4434:	73 69                	jae    449f <__FRAME_END__+0x3cab>
    4436:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4438:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    443e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4442:	74 00                	je     4444 <__FRAME_END__+0x3c50>
    4444:	5f                   	pop    rdi
    4445:	5f                   	pop    rdi
    4446:	47                   	rex.RXB
    4447:	43                   	rex.XB
    4448:	43 5f                	rex.XB pop r15
    444a:	41 54                	push   r12
    444c:	4f                   	rex.WRXB
    444d:	4d                   	rex.WRB
    444e:	49                   	rex.WB
    444f:	43 5f                	rex.XB pop r15
    4451:	53                   	push   rbx
    4452:	48                   	rex.W
    4453:	4f 52                	rex.WRXB push r10
    4455:	54                   	push   rsp
    4456:	5f                   	pop    rdi
    4457:	4c                   	rex.WR
    4458:	4f                   	rex.WRXB
    4459:	43                   	rex.XB
    445a:	4b 5f                	rex.WXB pop r15
    445c:	46 52                	rex.RX push rdx
    445e:	45                   	rex.RB
    445f:	45 20 32             	and    BYTE PTR [r10],r14b
    4462:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4465:	46                   	rex.RX
    4466:	4c 54                	rex.WR push rsp
    4468:	36 34 58             	ss xor al,0x58
    446b:	5f                   	pop    rdi
    446c:	44                   	rex.R
    446d:	45                   	rex.RB
    446e:	43                   	rex.XB
    446f:	49                   	rex.WB
    4470:	4d                   	rex.WRB
    4471:	41                   	rex.B
    4472:	4c 5f                	rex.WR pop rdi
    4474:	44                   	rex.R
    4475:	49                   	rex.WB
    4476:	47 5f                	rex.RXB pop r15
    4478:	5f                   	pop    rdi
    4479:	20 32                	and    BYTE PTR [rdx],dh
    447b:	31 00                	xor    DWORD PTR [rax],eax
    447d:	53                   	push   rbx
    447e:	45                   	rex.RB
    447f:	45                   	rex.RB
    4480:	4b 5f                	rex.WXB pop r15
    4482:	53                   	push   rbx
    4483:	45 54                	rex.RB push r12
    4485:	20 30                	and    BYTE PTR [rax],dh
    4487:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    448a:	55                   	push   rbp
    448b:	53                   	push   rbx
    448c:	45 5f                	rex.RB pop r15
    448e:	58                   	pop    rax
    448f:	4f 50                	rex.WRXB push r8
    4491:	45                   	rex.RB
    4492:	4e 5f                	rex.WRX pop rdi
    4494:	45 58                	rex.RB pop r8
    4496:	54                   	push   rsp
    4497:	45                   	rex.RB
    4498:	4e                   	rex.WRX
    4499:	44                   	rex.R
    449a:	45                   	rex.RB
    449b:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    449f:	49                   	rex.WB
    44a0:	4e 54                	rex.WRX push rsp
    44a2:	5f                   	pop    rdi
    44a3:	46                   	rex.RX
    44a4:	41 53                	push   r11
    44a6:	54                   	push   rsp
    44a7:	31 36                	xor    DWORD PTR [rsi],esi
    44a9:	5f                   	pop    rdi
    44aa:	4d                   	rex.WRB
    44ab:	41 58                	pop    r8
    44ad:	5f                   	pop    rdi
    44ae:	5f                   	pop    rdi
    44af:	20 30                	and    BYTE PTR [rax],dh
    44b1:	78 37                	js     44ea <__FRAME_END__+0x3cf6>
    44b3:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    44ba:	66 66 66 66 66 66 66 
    44c1:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    44c6:	46                   	rex.RX
    44c7:	4c 54                	rex.WR push rsp
    44c9:	5f                   	pop    rdi
    44ca:	45 50                	rex.RB push r8
    44cc:	53                   	push   rbx
    44cd:	49                   	rex.WB
    44ce:	4c                   	rex.WR
    44cf:	4f                   	rex.WRXB
    44d0:	4e 5f                	rex.WRX pop rdi
    44d2:	5f                   	pop    rdi
    44d3:	20 31                	and    BYTE PTR [rcx],dh
    44d5:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    44d8:	32 30                	xor    dh,BYTE PTR [rax]
    44da:	39 32                	cmp    DWORD PTR [rdx],esi
    44dc:	38 39                	cmp    BYTE PTR [rcx],bh
    44de:	35 35 30 37 38       	xor    eax,0x38373035
    44e3:	31 32                	xor    DWORD PTR [rdx],esi
    44e5:	35 30 30 30 30       	xor    eax,0x30303030
    44ea:	30 30                	xor    BYTE PTR [rax],dh
    44ec:	30 30                	xor    BYTE PTR [rax],dh
    44ee:	30 30                	xor    BYTE PTR [rax],dh
    44f0:	30 30                	xor    BYTE PTR [rax],dh
    44f2:	30 30                	xor    BYTE PTR [rax],dh
    44f4:	30 30                	xor    BYTE PTR [rax],dh
    44f6:	30 30                	xor    BYTE PTR [rax],dh
    44f8:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    44fb:	37                   	(bad)  
    44fc:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    4500:	46                   	rex.RX
    4501:	4c 54                	rex.WR push rsp
    4503:	36 34 5f             	ss xor al,0x5f
    4506:	4d                   	rex.WRB
    4507:	49                   	rex.WB
    4508:	4e 5f                	rex.WRX pop rdi
    450a:	45 58                	rex.RB pop r8
    450c:	50                   	push   rax
    450d:	5f                   	pop    rdi
    450e:	5f                   	pop    rdi
    450f:	20 28                	and    BYTE PTR [rax],ch
    4511:	2d 31 30 32 31       	sub    eax,0x31323031
    4516:	29 00                	sub    DWORD PTR [rax],eax
    4518:	5f                   	pop    rdi
    4519:	49                   	rex.WB
    451a:	4f 53                	rex.WRXB push r11
    451c:	5f                   	pop    rdi
    451d:	41 50                	push   r8
    451f:	50                   	push   rax
    4520:	45                   	rex.RB
    4521:	4e                   	rex.WRX
    4522:	44 20 38             	and    BYTE PTR [rax],r15b
    4525:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4528:	47                   	rex.RXB
    4529:	4c                   	rex.WR
    452a:	49                   	rex.WB
    452b:	42                   	rex.X
    452c:	43 5f                	rex.XB pop r15
    452e:	49                   	rex.WB
    452f:	4e 54                	rex.WRX push rsp
    4531:	45 52                	rex.RB push r10
    4533:	4e                   	rex.WRX
    4534:	41                   	rex.B
    4535:	4c 5f                	rex.WR pop rdi
    4537:	53                   	push   rbx
    4538:	54                   	push   rsp
    4539:	41 52                	push   r10
    453b:	54                   	push   rsp
    453c:	49                   	rex.WB
    453d:	4e                   	rex.WRX
    453e:	47 5f                	rex.RXB pop r15
    4540:	48                   	rex.W
    4541:	45                   	rex.RB
    4542:	41                   	rex.B
    4543:	44                   	rex.R
    4544:	45 52                	rex.RB push r10
    4546:	5f                   	pop    rdi
    4547:	49                   	rex.WB
    4548:	4d 50                	rex.WRB push r8
    454a:	4c                   	rex.WR
    454b:	45                   	rex.RB
    454c:	4d                   	rex.WRB
    454d:	45                   	rex.RB
    454e:	4e 54                	rex.WRX push rsp
    4550:	41 54                	push   r12
    4552:	49                   	rex.WB
    4553:	4f                   	rex.WRXB
    4554:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    4558:	46                   	rex.RX
    4559:	4c 54                	rex.WR push rsp
    455b:	5f                   	pop    rdi
    455c:	45 56                	rex.RB push r14
    455e:	41                   	rex.B
    455f:	4c 5f                	rex.WR pop rdi
    4561:	4d                   	rex.WRB
    4562:	45 54                	rex.RB push r12
    4564:	48                   	rex.W
    4565:	4f                   	rex.WRXB
    4566:	44 5f                	rex.R pop rdi
    4568:	54                   	push   rsp
    4569:	53                   	push   rbx
    456a:	5f                   	pop    rdi
    456b:	31 38                	xor    DWORD PTR [rax],edi
    456d:	36 36 31 5f 33       	ss xor DWORD PTR ss:[rdi+0x33],ebx
    4572:	5f                   	pop    rdi
    4573:	5f                   	pop    rdi
    4574:	20 30                	and    BYTE PTR [rax],dh
    4576:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4579:	44                   	rex.R
    457a:	42                   	rex.X
    457b:	4c 5f                	rex.WR pop rdi
    457d:	48                   	rex.W
    457e:	41 53                	push   r11
    4580:	5f                   	pop    rdi
    4581:	49                   	rex.WB
    4582:	4e                   	rex.WRX
    4583:	46                   	rex.RX
    4584:	49                   	rex.WB
    4585:	4e                   	rex.WRX
    4586:	49 54                	rex.WB push r12
    4588:	59                   	pop    rcx
    4589:	5f                   	pop    rdi
    458a:	5f                   	pop    rdi
    458b:	20 31                	and    BYTE PTR [rcx],dh
    458d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4590:	61                   	(bad)  
    4591:	74 74                	je     4607 <__FRAME_END__+0x3e13>
    4593:	72 69                	jb     45fe <__FRAME_END__+0x3e0a>
    4595:	62                   	(bad)  
    4596:	75 74                	jne    460c <__FRAME_END__+0x3e18>
    4598:	65 5f                	gs pop rdi
    459a:	77 61                	ja     45fd <__FRAME_END__+0x3e09>
    459c:	72 6e                	jb     460c <__FRAME_END__+0x3e18>
    459e:	5f                   	pop    rdi
    459f:	75 6e                	jne    460f <__FRAME_END__+0x3e1b>
    45a1:	75 73                	jne    4616 <__FRAME_END__+0x3e22>
    45a3:	65 64 5f             	gs fs pop rdi
    45a6:	72 65                	jb     460d <__FRAME_END__+0x3e19>
    45a8:	73 75                	jae    461f <__FRAME_END__+0x3e2b>
    45aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    45ab:	74 5f                	je     460c <__FRAME_END__+0x3e18>
    45ad:	5f                   	pop    rdi
    45ae:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    45b1:	61                   	(bad)  
    45b2:	74 74                	je     4628 <__FRAME_END__+0x3e34>
    45b4:	72 69                	jb     461f <__FRAME_END__+0x3e2b>
    45b6:	62                   	(bad)  
    45b7:	75 74                	jne    462d <__FRAME_END__+0x3e39>
    45b9:	65 5f                	gs pop rdi
    45bb:	5f                   	pop    rdi
    45bc:	20 28                	and    BYTE PTR [rax],ch
    45be:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    45c1:	77 61                	ja     4624 <__FRAME_END__+0x3e30>
    45c3:	72 6e                	jb     4633 <__FRAME_END__+0x3e3f>
    45c5:	5f                   	pop    rdi
    45c6:	75 6e                	jne    4636 <__FRAME_END__+0x3e42>
    45c8:	75 73                	jne    463d <__FRAME_END__+0x3e49>
    45ca:	65 64 5f             	gs fs pop rdi
    45cd:	72 65                	jb     4634 <__FRAME_END__+0x3e40>
    45cf:	73 75                	jae    4646 <__FRAME_END__+0x3e52>
    45d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    45d2:	74 5f                	je     4633 <__FRAME_END__+0x3e3f>
    45d4:	5f                   	pop    rdi
    45d5:	29 29                	sub    DWORD PTR [rcx],ebp
    45d7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45da:	49                   	rex.WB
    45db:	4e 54                	rex.WRX push rsp
    45dd:	36 34 5f             	ss xor al,0x5f
    45e0:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    45e4:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    45e7:	23 23                	and    esp,DWORD PTR [rbx]
    45e9:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    45ed:	5f                   	pop    rdi
    45ee:	45                   	rex.RB
    45ef:	4e                   	rex.WRX
    45f0:	44 5f                	rex.R pop rdi
    45f2:	44                   	rex.R
    45f3:	45                   	rex.RB
    45f4:	43                   	rex.XB
    45f5:	4c 53                	rex.WR push rbx
    45f7:	20 00                	and    BYTE PTR [rax],al
    45f9:	5f                   	pop    rdi
    45fa:	5f                   	pop    rdi
    45fb:	46                   	rex.RX
    45fc:	4c 54                	rex.WR push rsp
    45fe:	5f                   	pop    rdi
    45ff:	48                   	rex.W
    4600:	41 53                	push   r11
    4602:	5f                   	pop    rdi
    4603:	51                   	push   rcx
    4604:	55                   	push   rbp
    4605:	49                   	rex.WB
    4606:	45 54                	rex.RB push r12
    4608:	5f                   	pop    rdi
    4609:	4e                   	rex.WRX
    460a:	41                   	rex.B
    460b:	4e 5f                	rex.WRX pop rdi
    460d:	5f                   	pop    rdi
    460e:	20 31                	and    BYTE PTR [rcx],dh
    4610:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4613:	53                   	push   rbx
    4614:	49 5a                	rex.WB pop r10
    4616:	45                   	rex.RB
    4617:	4f                   	rex.WRXB
    4618:	46 5f                	rex.RX pop rdi
    461a:	49                   	rex.WB
    461b:	4e 54                	rex.WRX push rsp
    461d:	5f                   	pop    rdi
    461e:	5f                   	pop    rdi
    461f:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    4622:	5f                   	pop    rdi
    4623:	5f                   	pop    rdi
    4624:	43                   	rex.XB
    4625:	4c                   	rex.WR
    4626:	4f                   	rex.WRXB
    4627:	43                   	rex.XB
    4628:	4b                   	rex.WXB
    4629:	49                   	rex.WB
    462a:	44 5f                	rex.R pop rdi
    462c:	54                   	push   rsp
    462d:	5f                   	pop    rdi
    462e:	54                   	push   rsp
    462f:	59                   	pop    rcx
    4630:	50                   	push   rax
    4631:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4635:	53                   	push   rbx
    4636:	33 32                	xor    esi,DWORD PTR [rdx]
    4638:	5f                   	pop    rdi
    4639:	54                   	push   rsp
    463a:	59                   	pop    rcx
    463b:	50                   	push   rax
    463c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4640:	49                   	rex.WB
    4641:	4e 54                	rex.WRX push rsp
    4643:	5f                   	pop    rdi
    4644:	46                   	rex.RX
    4645:	41 53                	push   r11
    4647:	54                   	push   rsp
    4648:	31 36                	xor    DWORD PTR [rsi],esi
    464a:	5f                   	pop    rdi
    464b:	54                   	push   rsp
    464c:	59                   	pop    rcx
    464d:	50                   	push   rax
    464e:	45 5f                	rex.RB pop r15
    4650:	5f                   	pop    rdi
    4651:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4655:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4659:	74 00                	je     465b <__FRAME_END__+0x3e67>
    465b:	5f                   	pop    rdi
    465c:	5f                   	pop    rdi
    465d:	53                   	push   rbx
    465e:	54                   	push   rsp
    465f:	44                   	rex.R
    4660:	43 5f                	rex.XB pop r15
    4662:	49                   	rex.WB
    4663:	45                   	rex.RB
    4664:	43 5f                	rex.XB pop r15
    4666:	35 35 39 5f 5f       	xor    eax,0x5f5f3935
    466b:	20 31                	and    BYTE PTR [rcx],dh
    466d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4670:	44                   	rex.R
    4671:	45                   	rex.RB
    4672:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    4675:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    4678:	55                   	push   rbp
    4679:	42                   	rex.X
    467a:	4e                   	rex.WRX
    467b:	4f 52                	rex.WRXB push r10
    467d:	4d                   	rex.WRB
    467e:	41                   	rex.B
    467f:	4c 5f                	rex.WR pop rdi
    4681:	4d                   	rex.WRB
    4682:	49                   	rex.WB
    4683:	4e 5f                	rex.WRX pop rdi
    4685:	5f                   	pop    rdi
    4686:	20 30                	and    BYTE PTR [rax],dh
    4688:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    468b:	30 30                	xor    BYTE PTR [rax],dh
    468d:	30 30                	xor    BYTE PTR [rax],dh
    468f:	30 30                	xor    BYTE PTR [rax],dh
    4691:	30 30                	xor    BYTE PTR [rax],dh
    4693:	30 30                	xor    BYTE PTR [rax],dh
    4695:	30 30                	xor    BYTE PTR [rax],dh
    4697:	30 30                	xor    BYTE PTR [rax],dh
    4699:	30 30                	xor    BYTE PTR [rax],dh
    469b:	30 30                	xor    BYTE PTR [rax],dh
    469d:	30 30                	xor    BYTE PTR [rax],dh
    469f:	30 30                	xor    BYTE PTR [rax],dh
    46a1:	30 30                	xor    BYTE PTR [rax],dh
    46a3:	30 30                	xor    BYTE PTR [rax],dh
    46a5:	30 30                	xor    BYTE PTR [rax],dh
    46a7:	30 30                	xor    BYTE PTR [rax],dh
    46a9:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
    46ac:	36 31 34 33          	xor    DWORD PTR ss:[rbx+rsi*1],esi
    46b0:	44                   	rex.R
    46b1:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    46b5:	55                   	push   rbp
    46b6:	53                   	push   rbx
    46b7:	45 5f                	rex.RB pop r15
    46b9:	4c                   	rex.WR
    46ba:	41 52                	push   r10
    46bc:	47                   	rex.RXB
    46bd:	45                   	rex.RB
    46be:	46                   	rex.RX
    46bf:	49                   	rex.WB
    46c0:	4c                   	rex.WR
    46c1:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    46c5:	53                   	push   rbx
    46c6:	49 5a                	rex.WB pop r10
    46c8:	45                   	rex.RB
    46c9:	4f                   	rex.WRXB
    46ca:	46 5f                	rex.RX pop rdi
    46cc:	46                   	rex.RX
    46cd:	4c                   	rex.WR
    46ce:	4f                   	rex.WRXB
    46cf:	41 54                	push   r12
    46d1:	38 30                	cmp    BYTE PTR [rax],dh
    46d3:	5f                   	pop    rdi
    46d4:	5f                   	pop    rdi
    46d5:	20 31                	and    BYTE PTR [rcx],dh
    46d7:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    46db:	46                   	rex.RX
    46dc:	4c 54                	rex.WR push rsp
    46de:	33 32                	xor    esi,DWORD PTR [rdx]
    46e0:	58                   	pop    rax
    46e1:	5f                   	pop    rdi
    46e2:	48                   	rex.W
    46e3:	41 53                	push   r11
    46e5:	5f                   	pop    rdi
    46e6:	51                   	push   rcx
    46e7:	55                   	push   rbp
    46e8:	49                   	rex.WB
    46e9:	45 54                	rex.RB push r12
    46eb:	5f                   	pop    rdi
    46ec:	4e                   	rex.WRX
    46ed:	41                   	rex.B
    46ee:	4e 5f                	rex.WRX pop rdi
    46f0:	5f                   	pop    rdi
    46f1:	20 31                	and    BYTE PTR [rcx],dh
    46f3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    46f6:	44                   	rex.R
    46f7:	42                   	rex.X
    46f8:	4c 5f                	rex.WR pop rdi
    46fa:	4d                   	rex.WRB
    46fb:	41 58                	pop    r8
    46fd:	5f                   	pop    rdi
    46fe:	31 30                	xor    DWORD PTR [rax],esi
    4700:	5f                   	pop    rdi
    4701:	45 58                	rex.RB pop r8
    4703:	50                   	push   rax
    4704:	5f                   	pop    rdi
    4705:	5f                   	pop    rdi
    4706:	20 33                	and    BYTE PTR [rbx],dh
    4708:	30 38                	xor    BYTE PTR [rax],bh
    470a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    470d:	55                   	push   rbp
    470e:	53                   	push   rbx
    470f:	45 5f                	rex.RB pop r15
    4711:	4d                   	rex.WRB
    4712:	49 53                	rex.WB push r11
    4714:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    4717:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    471a:	47 58                	rex.RXB pop r8
    471c:	58                   	pop    rax
    471d:	5f                   	pop    rdi
    471e:	41                   	rex.B
    471f:	42                   	rex.X
    4720:	49 5f                	rex.WB pop r15
    4722:	56                   	push   rsi
    4723:	45 52                	rex.RB push r10
    4725:	53                   	push   rbx
    4726:	49                   	rex.WB
    4727:	4f                   	rex.WRXB
    4728:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    472b:	30 31                	xor    BYTE PTR [rcx],dh
    472d:	31 00                	xor    DWORD PTR [rax],eax
    472f:	5f                   	pop    rdi
    4730:	5f                   	pop    rdi
    4731:	70 69                	jo     479c <__FRAME_END__+0x3fa8>
    4733:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    4736:	20 32                	and    BYTE PTR [rdx],dh
    4738:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    473b:	41 54                	push   r12
    473d:	4f                   	rex.WRXB
    473e:	4d                   	rex.WRB
    473f:	49                   	rex.WB
    4740:	43 5f                	rex.XB pop r15
    4742:	52                   	push   rdx
    4743:	45                   	rex.RB
    4744:	4c                   	rex.WR
    4745:	45                   	rex.RB
    4746:	41 53                	push   r11
    4748:	45 20 33             	and    BYTE PTR [r11],r14b
    474b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    474e:	53                   	push   rbx
    474f:	53                   	push   rbx
    4750:	45 5f                	rex.RB pop r15
    4752:	5f                   	pop    rdi
    4753:	20 31                	and    BYTE PTR [rcx],dh
    4755:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4758:	4f 5f                	rex.WRXB pop r15
    475a:	4e                   	rex.WRX
    475b:	4f 5f                	rex.WRXB pop r15
    475d:	52                   	push   rdx
    475e:	45                   	rex.RB
    475f:	41                   	rex.B
    4760:	44 53                	rex.R push rbx
    4762:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    4765:	5f                   	pop    rdi
    4766:	5f                   	pop    rdi
    4767:	47                   	rex.RXB
    4768:	4c                   	rex.WR
    4769:	49                   	rex.WB
    476a:	42                   	rex.X
    476b:	43 5f                	rex.XB pop r15
    476d:	55                   	push   rbp
    476e:	53                   	push   rbx
    476f:	45 5f                	rex.RB pop r15
    4771:	49                   	rex.WB
    4772:	45                   	rex.RB
    4773:	43 5f                	rex.XB pop r15
    4775:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f80b1 <_end+0x463f7099>
    477c:	55                   	push   rbp
    477d:	4e                   	rex.WRX
    477e:	43 53                	rex.XB push r11
    4780:	5f                   	pop    rdi
    4781:	45 58                	rex.RB pop r8
    4783:	54                   	push   rsp
    4784:	20 30                	and    BYTE PTR [rax],dh
    4786:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4789:	42                   	rex.X
    478a:	49                   	rex.WB
    478b:	47                   	rex.RXB
    478c:	47                   	rex.RXB
    478d:	45 53                	rex.RB push r11
    478f:	54                   	push   rsp
    4790:	5f                   	pop    rdi
    4791:	41                   	rex.B
    4792:	4c                   	rex.WR
    4793:	49                   	rex.WB
    4794:	47                   	rex.RXB
    4795:	4e                   	rex.WRX
    4796:	4d                   	rex.WRB
    4797:	45                   	rex.RB
    4798:	4e 54                	rex.WRX push rsp
    479a:	5f                   	pop    rdi
    479b:	5f                   	pop    rdi
    479c:	20 31                	and    BYTE PTR [rcx],dh
    479e:	36 00 5f 53          	add    BYTE PTR ss:[rdi+0x53],bl
    47a2:	49 5a                	rex.WB pop r10
    47a4:	45 54                	rex.RB push r12
    47a6:	5f                   	pop    rdi
    47a7:	20 00                	and    BYTE PTR [rax],al
    47a9:	5f                   	pop    rdi
    47aa:	5f                   	pop    rdi
    47ab:	46                   	rex.RX
    47ac:	4c 54                	rex.WR push rsp
    47ae:	31 32                	xor    DWORD PTR [rdx],esi
    47b0:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    47b3:	45                   	rex.RB
    47b4:	4e                   	rex.WRX
    47b5:	4f 52                	rex.WRXB push r10
    47b7:	4d 5f                	rex.WRB pop r15
    47b9:	4d                   	rex.WRB
    47ba:	49                   	rex.WB
    47bb:	4e 5f                	rex.WRX pop rdi
    47bd:	5f                   	pop    rdi
    47be:	20 36                	and    BYTE PTR [rsi],dh
    47c0:	2e 34 37             	cs xor al,0x37
    47c3:	35 31 37 35 31       	xor    eax,0x31353731
    47c8:	31 39                	xor    DWORD PTR [rcx],edi
    47ca:	34 33                	xor    al,0x33
    47cc:	38 30                	cmp    BYTE PTR [rax],dh
    47ce:	32 35 31 31 30 39    	xor    dh,BYTE PTR [rip+0x39303131]        # 39307905 <_end+0x391068ed>
    47d4:	32 34 34             	xor    dh,BYTE PTR [rsp+rsi*1]
    47d7:	33 38                	xor    edi,DWORD PTR [rax]
    47d9:	39 35 38 32 32 37    	cmp    DWORD PTR [rip+0x37323238],esi        # 37327a17 <_end+0x371269ff>
    47df:	36 34 36             	ss xor al,0x36
    47e2:	35 35 65 2d 34       	xor    eax,0x342d6535
    47e7:	39 36                	cmp    DWORD PTR [rsi],esi
    47e9:	36 46 31 32          	rex.RX xor DWORD PTR ss:[rdx],r14d
    47ed:	38 00                	cmp    BYTE PTR [rax],al
    47ef:	5f                   	pop    rdi
    47f0:	5f                   	pop    rdi
    47f1:	47                   	rex.RXB
    47f2:	4c                   	rex.WR
    47f3:	49                   	rex.WB
    47f4:	42                   	rex.X
    47f5:	43 5f                	rex.XB pop r15
    47f7:	55                   	push   rbp
    47f8:	53                   	push   rbx
    47f9:	45 5f                	rex.RB pop r15
    47fb:	49                   	rex.WB
    47fc:	45                   	rex.RB
    47fd:	43 5f                	rex.XB pop r15
    47ff:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f813b <_end+0x423f7123>
    4806:	46 50                	rex.RX push rax
    4808:	5f                   	pop    rdi
    4809:	45 58                	rex.RB pop r8
    480b:	54                   	push   rsp
    480c:	20 30                	and    BYTE PTR [rax],dh
    480e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4811:	73 74                	jae    4887 <__FRAME_END__+0x4093>
    4813:	75 62                	jne    4877 <__FRAME_END__+0x4083>
    4815:	5f                   	pop    rdi
    4816:	72 65                	jb     487d <__FRAME_END__+0x4089>
    4818:	76 6f                	jbe    4889 <__FRAME_END__+0x4095>
    481a:	6b 65 20 00          	imul   esp,DWORD PTR [rbp+0x20],0x0
    481e:	5f                   	pop    rdi
    481f:	5f                   	pop    rdi
    4820:	49                   	rex.WB
    4821:	4e 54                	rex.WRX push rsp
    4823:	4d                   	rex.WRB
    4824:	41 58                	pop    r8
    4826:	5f                   	pop    rdi
    4827:	54                   	push   rsp
    4828:	59                   	pop    rcx
    4829:	50                   	push   rax
    482a:	45 5f                	rex.RB pop r15
    482c:	5f                   	pop    rdi
    482d:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4831:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4835:	74 00                	je     4837 <__FRAME_END__+0x4043>
    4837:	5f                   	pop    rdi
    4838:	5f                   	pop    rdi
    4839:	46                   	rex.RX
    483a:	4c 54                	rex.WR push rsp
    483c:	5f                   	pop    rdi
    483d:	4d                   	rex.WRB
    483e:	49                   	rex.WB
    483f:	4e 5f                	rex.WRX pop rdi
    4841:	45 58                	rex.RB pop r8
    4843:	50                   	push   rax
    4844:	5f                   	pop    rdi
    4845:	5f                   	pop    rdi
    4846:	20 28                	and    BYTE PTR [rax],ch
    4848:	2d 31 32 35 29       	sub    eax,0x29353231
    484d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4850:	53                   	push   rbx
    4851:	53                   	push   rbx
    4852:	50                   	push   rax
    4853:	5f                   	pop    rdi
    4854:	53                   	push   rbx
    4855:	54                   	push   rsp
    4856:	52                   	push   rdx
    4857:	4f                   	rex.WRXB
    4858:	4e                   	rex.WRX
    4859:	47 5f                	rex.RXB pop r15
    485b:	5f                   	pop    rdi
    485c:	20 33                	and    BYTE PTR [rbx],dh
    485e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4861:	65 72 72             	gs jb  48d6 <__FRAME_END__+0x40e2>
    4864:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4865:	72 64                	jb     48cb <__FRAME_END__+0x40d7>
    4867:	65 63 6c 28 6e       	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    486c:	61                   	(bad)  
    486d:	6d                   	ins    DWORD PTR es:[rdi],dx
    486e:	65 2c 6d             	gs sub al,0x6d
    4871:	73 67                	jae    48da <__FRAME_END__+0x40e6>
    4873:	29 20                	sub    DWORD PTR [rax],esp
    4875:	65 78 74             	gs js  48ec <__FRAME_END__+0x40f8>
    4878:	65 72 6e             	gs jb  48e9 <__FRAME_END__+0x40f5>
    487b:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    487e:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    4885:	20 
    4886:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    4889:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    4890:	74 
    4891:	74 72                	je     4905 <__FRAME_END__+0x4111>
    4893:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    489a:	28 28                	sub    BYTE PTR [rax],ch
    489c:	5f                   	pop    rdi
    489d:	5f                   	pop    rdi
    489e:	65 72 72             	gs jb  4913 <__FRAME_END__+0x411f>
    48a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    48a2:	72 5f                	jb     4903 <__FRAME_END__+0x410f>
    48a4:	5f                   	pop    rdi
    48a5:	20 28                	and    BYTE PTR [rax],ch
    48a7:	6d                   	ins    DWORD PTR es:[rdi],dx
    48a8:	73 67                	jae    4911 <__FRAME_END__+0x411d>
    48aa:	29 29                	sub    DWORD PTR [rcx],ebp
    48ac:	29 00                	sub    DWORD PTR [rax],eax
    48ae:	5f                   	pop    rdi
    48af:	5f                   	pop    rdi
    48b0:	44                   	rex.R
    48b1:	45                   	rex.RB
    48b2:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    48b5:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    48b8:	41 58                	pop    r8
    48ba:	5f                   	pop    rdi
    48bb:	5f                   	pop    rdi
    48bc:	20 39                	and    BYTE PTR [rcx],bh
    48be:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    48c1:	39 39                	cmp    DWORD PTR [rcx],edi
    48c3:	39 39                	cmp    DWORD PTR [rcx],edi
    48c5:	39 39                	cmp    DWORD PTR [rcx],edi
    48c7:	39 39                	cmp    DWORD PTR [rcx],edi
    48c9:	39 39                	cmp    DWORD PTR [rcx],edi
    48cb:	39 39                	cmp    DWORD PTR [rcx],edi
    48cd:	39 39                	cmp    DWORD PTR [rcx],edi
    48cf:	39 39                	cmp    DWORD PTR [rcx],edi
    48d1:	39 39                	cmp    DWORD PTR [rcx],edi
    48d3:	39 39                	cmp    DWORD PTR [rcx],edi
    48d5:	39 39                	cmp    DWORD PTR [rcx],edi
    48d7:	39 39                	cmp    DWORD PTR [rcx],edi
    48d9:	39 39                	cmp    DWORD PTR [rcx],edi
    48db:	39 39                	cmp    DWORD PTR [rcx],edi
    48dd:	39 39                	cmp    DWORD PTR [rcx],edi
    48df:	39 45 36             	cmp    DWORD PTR [rbp+0x36],eax
    48e2:	31 34 34             	xor    DWORD PTR [rsp+rsi*1],esi
    48e5:	44                   	rex.R
    48e6:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    48ea:	46                   	rex.RX
    48eb:	4c 54                	rex.WR push rsp
    48ed:	5f                   	pop    rdi
    48ee:	4d                   	rex.WRB
    48ef:	41 58                	pop    r8
    48f1:	5f                   	pop    rdi
    48f2:	45 58                	rex.RB pop r8
    48f4:	50                   	push   rax
    48f5:	5f                   	pop    rdi
    48f6:	5f                   	pop    rdi
    48f7:	20 31                	and    BYTE PTR [rcx],dh
    48f9:	32 38                	xor    bh,BYTE PTR [rax]
    48fb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    48fe:	41 54                	push   r12
    4900:	4f                   	rex.WRXB
    4901:	4d                   	rex.WRB
    4902:	49                   	rex.WB
    4903:	43 5f                	rex.XB pop r15
    4905:	48                   	rex.W
    4906:	4c                   	rex.WR
    4907:	45 5f                	rex.RB pop r15
    4909:	41                   	rex.B
    490a:	43 51                	rex.XB push r9
    490c:	55                   	push   rbp
    490d:	49 52                	rex.WB push r10
    490f:	45 20 36             	and    BYTE PTR [r14],r14b
    4912:	35 35 33 36 00       	xor    eax,0x363335
    4917:	5f                   	pop    rdi
    4918:	5f                   	pop    rdi
    4919:	4f                   	rex.WRXB
    491a:	46                   	rex.RX
    491b:	46                   	rex.RX
    491c:	36 34 5f             	ss xor al,0x5f
    491f:	54                   	push   rsp
    4920:	5f                   	pop    rdi
    4921:	54                   	push   rsp
    4922:	59                   	pop    rcx
    4923:	50                   	push   rax
    4924:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4928:	53                   	push   rbx
    4929:	51                   	push   rcx
    492a:	55                   	push   rbp
    492b:	41                   	rex.B
    492c:	44 5f                	rex.R pop rdi
    492e:	54                   	push   rsp
    492f:	59                   	pop    rcx
    4930:	50                   	push   rax
    4931:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4935:	55                   	push   rbp
    4936:	53                   	push   rbx
    4937:	45 5f                	rex.RB pop r15
    4939:	49 53                	rex.WB push r11
    493b:	4f                   	rex.WRXB
    493c:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
    493f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4942:	4f 5f                	rex.WRXB pop r15
    4944:	53                   	push   rbx
    4945:	54                   	push   rsp
    4946:	44                   	rex.R
    4947:	49                   	rex.WB
    4948:	4f 20 30             	rex.WRXB and BYTE PTR [r8],r14b
    494b:	34 30                	xor    al,0x30
    494d:	30 30                	xor    BYTE PTR [rax],dh
    494f:	30 00                	xor    BYTE PTR [rax],al
    4951:	5f                   	pop    rdi
    4952:	5f                   	pop    rdi
    4953:	44                   	rex.R
    4954:	45 56                	rex.RB push r14
    4956:	5f                   	pop    rdi
    4957:	54                   	push   rsp
    4958:	5f                   	pop    rdi
    4959:	54                   	push   rsp
    495a:	59                   	pop    rcx
    495b:	50                   	push   rax
    495c:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4960:	55                   	push   rbp
    4961:	51                   	push   rcx
    4962:	55                   	push   rbp
    4963:	41                   	rex.B
    4964:	44 5f                	rex.R pop rdi
    4966:	54                   	push   rsp
    4967:	59                   	pop    rcx
    4968:	50                   	push   rax
    4969:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    496d:	43 50                	rex.XB push r8
    496f:	55                   	push   rbp
    4970:	5f                   	pop    rdi
    4971:	4d                   	rex.WRB
    4972:	41 53                	push   r11
    4974:	4b 5f                	rex.WXB pop r15
    4976:	54                   	push   rsp
    4977:	59                   	pop    rcx
    4978:	50                   	push   rax
    4979:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    497d:	53                   	push   rbx
    497e:	59                   	pop    rcx
    497f:	53                   	push   rbx
    4980:	43                   	rex.XB
    4981:	41                   	rex.B
    4982:	4c                   	rex.WR
    4983:	4c 5f                	rex.WR pop rdi
    4985:	55                   	push   rbp
    4986:	4c                   	rex.WR
    4987:	4f                   	rex.WRXB
    4988:	4e                   	rex.WRX
    4989:	47 5f                	rex.RXB pop r15
    498b:	54                   	push   rsp
    498c:	59                   	pop    rcx
    498d:	50                   	push   rax
    498e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4992:	55                   	push   rbp
    4993:	49                   	rex.WB
    4994:	4e 54                	rex.WRX push rsp
    4996:	5f                   	pop    rdi
    4997:	4c                   	rex.WR
    4998:	45                   	rex.RB
    4999:	41 53                	push   r11
    499b:	54                   	push   rsp
    499c:	33 32                	xor    esi,DWORD PTR [rdx]
    499e:	5f                   	pop    rdi
    499f:	4d                   	rex.WRB
    49a0:	41 58                	pop    r8
    49a2:	5f                   	pop    rdi
    49a3:	5f                   	pop    rdi
    49a4:	20 30                	and    BYTE PTR [rax],dh
    49a6:	78 66                	js     4a0e <__FRAME_END__+0x421a>
    49a8:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    49af:	55 
    49b0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    49b3:	4f 5f                	rex.WRXB pop r15
    49b5:	42                   	rex.X
    49b6:	45 28 65 78          	sub    BYTE PTR [r13+0x78],r12b
    49ba:	70 72                	jo     4a2e <__FRAME_END__+0x423a>
    49bc:	2c 72                	sub    al,0x72
    49be:	65 73 29             	gs jae 49ea <__FRAME_END__+0x41f6>
    49c1:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    49c4:	62                   	(bad)  
    49c5:	75 69                	jne    4a30 <__FRAME_END__+0x423c>
    49c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    49c8:	74 69                	je     4a33 <__FRAME_END__+0x423f>
    49ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    49cb:	5f                   	pop    rdi
    49cc:	65 78 70             	gs js  4a3f <__FRAME_END__+0x424b>
    49cf:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    49d4:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    49d7:	70 72                	jo     4a4b <__FRAME_END__+0x4257>
    49d9:	29 2c 20             	sub    DWORD PTR [rax+riz*1],ebp
    49dc:	72 65                	jb     4a43 <__FRAME_END__+0x424f>
    49de:	73 29                	jae    4a09 <__FRAME_END__+0x4215>
    49e0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    49e3:	41 53                	push   r11
    49e5:	4d                   	rex.WRB
    49e6:	4e                   	rex.WRX
    49e7:	41                   	rex.B
    49e8:	4d                   	rex.WRB
    49e9:	45 28 63 6e          	sub    BYTE PTR [r11+0x6e],r12b
    49ed:	61                   	(bad)  
    49ee:	6d                   	ins    DWORD PTR es:[rdi],dx
    49ef:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    49f2:	5f                   	pop    rdi
    49f3:	5f                   	pop    rdi
    49f4:	41 53                	push   r11
    49f6:	4d                   	rex.WRB
    49f7:	4e                   	rex.WRX
    49f8:	41                   	rex.B
    49f9:	4d                   	rex.WRB
    49fa:	45 32 20             	xor    r12b,BYTE PTR [r8]
    49fd:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4a00:	55                   	push   rbp
    4a01:	53                   	push   rbx
    4a02:	45 52                	rex.RB push r10
    4a04:	5f                   	pop    rdi
    4a05:	4c                   	rex.WR
    4a06:	41                   	rex.B
    4a07:	42                   	rex.X
    4a08:	45                   	rex.RB
    4a09:	4c 5f                	rex.WR pop rdi
    4a0b:	50                   	push   rax
    4a0c:	52                   	push   rdx
    4a0d:	45                   	rex.RB
    4a0e:	46                   	rex.RX
    4a0f:	49 58                	rex.WB pop r8
    4a11:	5f                   	pop    rdi
    4a12:	5f                   	pop    rdi
    4a13:	2c 20                	sub    al,0x20
    4a15:	63 6e 61             	movsxd ebp,DWORD PTR [rsi+0x61]
    4a18:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a19:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4a1c:	5f                   	pop    rdi
    4a1d:	5f                   	pop    rdi
    4a1e:	46                   	rex.RX
    4a1f:	4c 54                	rex.WR push rsp
    4a21:	33 32                	xor    esi,DWORD PTR [rdx]
    4a23:	58                   	pop    rax
    4a24:	5f                   	pop    rdi
    4a25:	4d                   	rex.WRB
    4a26:	41 58                	pop    r8
    4a28:	5f                   	pop    rdi
    4a29:	31 30                	xor    DWORD PTR [rax],esi
    4a2b:	5f                   	pop    rdi
    4a2c:	45 58                	rex.RB pop r8
    4a2e:	50                   	push   rax
    4a2f:	5f                   	pop    rdi
    4a30:	5f                   	pop    rdi
    4a31:	20 33                	and    BYTE PTR [rbx],dh
    4a33:	30 38                	xor    BYTE PTR [rax],bh
    4a35:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4a38:	61                   	(bad)  
    4a39:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a3a:	64 36 34 20          	fs ss xor al,0x20
    4a3e:	31 00                	xor    DWORD PTR [rax],eax
    4a40:	5f                   	pop    rdi
    4a41:	5f                   	pop    rdi
    4a42:	57                   	push   rdi
    4a43:	4f 52                	rex.WRXB push r10
    4a45:	44 53                	rex.R push rbx
    4a47:	49 5a                	rex.WB pop r10
    4a49:	45 20 36             	and    BYTE PTR [r14],r14b
    4a4c:	34 00                	xor    al,0x0
    4a4e:	5f                   	pop    rdi
    4a4f:	5f                   	pop    rdi
    4a50:	75 6e                	jne    4ac0 <__FRAME_END__+0x42cc>
    4a52:	69 78 20 31 00 5f 63 	imul   edi,DWORD PTR [rax+0x20],0x635f0031
    4a59:	68 61 69 6e 00       	push   0x6e6961
    4a5e:	5f                   	pop    rdi
    4a5f:	5f                   	pop    rdi
    4a60:	46                   	rex.RX
    4a61:	4c 54                	rex.WR push rsp
    4a63:	36 34 5f             	ss xor al,0x5f
    4a66:	44                   	rex.R
    4a67:	45                   	rex.RB
    4a68:	4e                   	rex.WRX
    4a69:	4f 52                	rex.WRXB push r10
    4a6b:	4d 5f                	rex.WRB pop r15
    4a6d:	4d                   	rex.WRB
    4a6e:	49                   	rex.WB
    4a6f:	4e 5f                	rex.WRX pop rdi
    4a71:	5f                   	pop    rdi
    4a72:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    4a75:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    4a78:	36 35 36 34 35 38    	ss xor eax,0x38353436
    4a7e:	34 31                	xor    al,0x31
    4a80:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    4a83:	35 34 34 31 37       	xor    eax,0x37313434
    4a88:	36 35 36 38 37 39    	ss xor eax,0x39373836
    4a8e:	32 38                	xor    bh,BYTE PTR [rax]
    4a90:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    4a93:	32 31                	xor    dh,BYTE PTR [rcx]
    4a95:	33 37                	xor    esi,DWORD PTR [rdi]
    4a97:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4a9a:	33 32                	xor    esi,DWORD PTR [rdx]
    4a9c:	34 46                	xor    al,0x46
    4a9e:	36 34 00             	ss xor al,0x0
    4aa1:	4c 5f                	rex.WR pop rdi
    4aa3:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    4aa7:	6d                   	ins    DWORD PTR es:[rdi],dx
    4aa8:	69 64 20 39 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x39],0x505f5f00
    4aaf:	50 
    4ab0:	54                   	push   rsp
    4ab1:	52                   	push   rdx
    4ab2:	44                   	rex.R
    4ab3:	49                   	rex.WB
    4ab4:	46                   	rex.RX
    4ab5:	46 5f                	rex.RX pop rdi
    4ab7:	54                   	push   rsp
    4ab8:	59                   	pop    rcx
    4ab9:	50                   	push   rax
    4aba:	45 5f                	rex.RB pop r15
    4abc:	5f                   	pop    rdi
    4abd:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4ac1:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4ac5:	74 00                	je     4ac7 <__FRAME_END__+0x42d3>
    4ac7:	5f                   	pop    rdi
    4ac8:	5f                   	pop    rdi
    4ac9:	46                   	rex.RX
    4aca:	4c 54                	rex.WR push rsp
    4acc:	33 32                	xor    esi,DWORD PTR [rdx]
    4ace:	5f                   	pop    rdi
    4acf:	4d                   	rex.WRB
    4ad0:	41 58                	pop    r8
    4ad2:	5f                   	pop    rdi
    4ad3:	31 30                	xor    DWORD PTR [rax],esi
    4ad5:	5f                   	pop    rdi
    4ad6:	45 58                	rex.RB pop r8
    4ad8:	50                   	push   rax
    4ad9:	5f                   	pop    rdi
    4ada:	5f                   	pop    rdi
    4adb:	20 33                	and    BYTE PTR [rbx],dh
    4add:	38 00                	cmp    BYTE PTR [rax],al
    4adf:	5f                   	pop    rdi
    4ae0:	5f                   	pop    rdi
    4ae1:	57                   	push   rdi
    4ae2:	4f 52                	rex.WRXB push r10
    4ae4:	44 53                	rex.R push rbx
    4ae6:	49 5a                	rex.WB pop r10
    4ae8:	45 5f                	rex.RB pop r15
    4aea:	54                   	push   rsp
    4aeb:	49                   	rex.WB
    4aec:	4d                   	rex.WRB
    4aed:	45                   	rex.RB
    4aee:	36 34 5f             	ss xor al,0x5f
    4af1:	43                   	rex.XB
    4af2:	4f                   	rex.WRXB
    4af3:	4d 50                	rex.WRB push r8
    4af5:	41 54                	push   r12
    4af7:	33 32                	xor    esi,DWORD PTR [rdx]
    4af9:	20 31                	and    BYTE PTR [rcx],dh
    4afb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4afe:	46                   	rex.RX
    4aff:	4c 54                	rex.WR push rsp
    4b01:	31 32                	xor    DWORD PTR [rdx],esi
    4b03:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    4b06:	45                   	rex.RB
    4b07:	43                   	rex.XB
    4b08:	49                   	rex.WB
    4b09:	4d                   	rex.WRB
    4b0a:	41                   	rex.B
    4b0b:	4c 5f                	rex.WR pop rdi
    4b0d:	44                   	rex.R
    4b0e:	49                   	rex.WB
    4b0f:	47 5f                	rex.RXB pop r15
    4b11:	5f                   	pop    rdi
    4b12:	20 33                	and    BYTE PTR [rbx],dh
    4b14:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4b18:	50                   	push   rax
    4b19:	54                   	push   rsp
    4b1a:	52                   	push   rdx
    4b1b:	44                   	rex.R
    4b1c:	49                   	rex.WB
    4b1d:	46                   	rex.RX
    4b1e:	46 5f                	rex.RX pop rdi
    4b20:	57                   	push   rdi
    4b21:	49                   	rex.WB
    4b22:	44 54                	rex.R push rsp
    4b24:	48 5f                	rex.W pop rdi
    4b26:	5f                   	pop    rdi
    4b27:	20 36                	and    BYTE PTR [rsi],dh
    4b29:	34 00                	xor    al,0x0
    4b2b:	5f                   	pop    rdi
    4b2c:	5f                   	pop    rdi
    4b2d:	44                   	rex.R
    4b2e:	42                   	rex.X
    4b2f:	4c 5f                	rex.WR pop rdi
    4b31:	44                   	rex.R
    4b32:	45                   	rex.RB
    4b33:	43                   	rex.XB
    4b34:	49                   	rex.WB
    4b35:	4d                   	rex.WRB
    4b36:	41                   	rex.B
    4b37:	4c 5f                	rex.WR pop rdi
    4b39:	44                   	rex.R
    4b3a:	49                   	rex.WB
    4b3b:	47 5f                	rex.RXB pop r15
    4b3d:	5f                   	pop    rdi
    4b3e:	20 31                	and    BYTE PTR [rcx],dh
    4b40:	37                   	(bad)  
    4b41:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4b44:	55                   	push   rbp
    4b45:	49                   	rex.WB
    4b46:	4e 54                	rex.WRX push rsp
    4b48:	5f                   	pop    rdi
    4b49:	46                   	rex.RX
    4b4a:	41 53                	push   r11
    4b4c:	54                   	push   rsp
    4b4d:	36 34 5f             	ss xor al,0x5f
    4b50:	54                   	push   rsp
    4b51:	59                   	pop    rcx
    4b52:	50                   	push   rax
    4b53:	45 5f                	rex.RB pop r15
    4b55:	5f                   	pop    rdi
    4b56:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4b5a:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    4b5e:	73 69                	jae    4bc9 <__FRAME_END__+0x43d5>
    4b60:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4b62:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4b67:	74 00                	je     4b69 <__FRAME_END__+0x4375>
    4b69:	5f                   	pop    rdi
    4b6a:	5f                   	pop    rdi
    4b6b:	73 74                	jae    4be1 <__FRAME_END__+0x43ed>
    4b6d:	75 62                	jne    4bd1 <__FRAME_END__+0x43dd>
    4b6f:	5f                   	pop    rdi
    4b70:	73 73                	jae    4be5 <__FRAME_END__+0x43f1>
    4b72:	74 6b                	je     4bdf <__FRAME_END__+0x43eb>
    4b74:	20 00                	and    BYTE PTR [rax],al
    4b76:	5f                   	pop    rdi
    4b77:	49                   	rex.WB
    4b78:	4f 5f                	rex.WRXB pop r15
    4b7a:	66 70 6f             	data16 jo 4bec <__FRAME_END__+0x43f8>
    4b7d:	73 36                	jae    4bb5 <__FRAME_END__+0x43c1>
    4b7f:	34 5f                	xor    al,0x5f
    4b81:	74 20                	je     4ba3 <__FRAME_END__+0x43af>
    4b83:	5f                   	pop    rdi
    4b84:	47 5f                	rex.RXB pop r15
    4b86:	66 70 6f             	data16 jo 4bf8 <__FRAME_END__+0x4404>
    4b89:	73 36                	jae    4bc1 <__FRAME_END__+0x43cd>
    4b8b:	34 5f                	xor    al,0x5f
    4b8d:	74 00                	je     4b8f <__FRAME_END__+0x439b>
    4b8f:	5f                   	pop    rdi
    4b90:	5f                   	pop    rdi
    4b91:	54                   	push   rsp
    4b92:	48 52                	rex.W push rdx
    4b94:	4f 57                	rex.WRXB push r15
    4b96:	4e                   	rex.WRX
    4b97:	4c 20 5f 5f          	rex.WR and BYTE PTR [rdi+0x5f],r11b
    4b9b:	61                   	(bad)  
    4b9c:	74 74                	je     4c12 <__FRAME_END__+0x441e>
    4b9e:	72 69                	jb     4c09 <__FRAME_END__+0x4415>
    4ba0:	62                   	(bad)  
    4ba1:	75 74                	jne    4c17 <__FRAME_END__+0x4423>
    4ba3:	65 5f                	gs pop rdi
    4ba5:	5f                   	pop    rdi
    4ba6:	20 28                	and    BYTE PTR [rax],ch
    4ba8:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4bab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4bad:	74 68                	je     4c17 <__FRAME_END__+0x4423>
    4baf:	72 6f                	jb     4c20 <__FRAME_END__+0x442c>
    4bb1:	77 5f                	ja     4c12 <__FRAME_END__+0x441e>
    4bb3:	5f                   	pop    rdi
    4bb4:	29 29                	sub    DWORD PTR [rcx],ebp
    4bb6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bb9:	4c                   	rex.WR
    4bba:	44                   	rex.R
    4bbb:	42                   	rex.X
    4bbc:	4c 5f                	rex.WR pop rdi
    4bbe:	4d                   	rex.WRB
    4bbf:	41 58                	pop    r8
    4bc1:	5f                   	pop    rdi
    4bc2:	31 30                	xor    DWORD PTR [rax],esi
    4bc4:	5f                   	pop    rdi
    4bc5:	45 58                	rex.RB pop r8
    4bc7:	50                   	push   rax
    4bc8:	5f                   	pop    rdi
    4bc9:	5f                   	pop    rdi
    4bca:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    4bcd:	33 32                	xor    esi,DWORD PTR [rdx]
    4bcf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bd2:	44                   	rex.R
    4bd3:	45                   	rex.RB
    4bd4:	43                   	rex.XB
    4bd5:	36 34 5f             	ss xor al,0x5f
    4bd8:	4d                   	rex.WRB
    4bd9:	49                   	rex.WB
    4bda:	4e 5f                	rex.WRX pop rdi
    4bdc:	5f                   	pop    rdi
    4bdd:	20 31                	and    BYTE PTR [rcx],dh
    4bdf:	45 2d 33 38 33 44    	rex.RB sub eax,0x44333833
    4be5:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    4be9:	46                   	rex.RX
    4bea:	4c 54                	rex.WR push rsp
    4bec:	33 32                	xor    esi,DWORD PTR [rdx]
    4bee:	5f                   	pop    rdi
    4bef:	4d                   	rex.WRB
    4bf0:	41 58                	pop    r8
    4bf2:	5f                   	pop    rdi
    4bf3:	5f                   	pop    rdi
    4bf4:	20 33                	and    BYTE PTR [rbx],dh
    4bf6:	2e 34 30             	cs xor al,0x30
    4bf9:	32 38                	xor    bh,BYTE PTR [rax]
    4bfb:	32 33                	xor    dh,BYTE PTR [rbx]
    4bfd:	34 36                	xor    al,0x36
    4bff:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    4c02:	35 32 38 38 35       	xor    eax,0x35383832
    4c07:	39 38                	cmp    DWORD PTR [rax],edi
    4c09:	31 31                	xor    DWORD PTR [rcx],esi
    4c0b:	37                   	(bad)  
    4c0c:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    4c0f:	38 33                	cmp    BYTE PTR [rbx],dh
    4c11:	34 38                	xor    al,0x38
    4c13:	34 35                	xor    al,0x35
    4c15:	31 36                	xor    DWORD PTR [rsi],esi
    4c17:	39 32                	cmp    DWORD PTR [rdx],esi
    4c19:	35 65 2b 33 38       	xor    eax,0x38332b65
    4c1e:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    4c21:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c24:	44                   	rex.R
    4c25:	42                   	rex.X
    4c26:	4c 5f                	rex.WR pop rdi
    4c28:	45 50                	rex.RB push r8
    4c2a:	53                   	push   rbx
    4c2b:	49                   	rex.WB
    4c2c:	4c                   	rex.WR
    4c2d:	4f                   	rex.WRXB
    4c2e:	4e 5f                	rex.WRX pop rdi
    4c30:	5f                   	pop    rdi
    4c31:	20 28                	and    BYTE PTR [rax],ch
    4c33:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    4c37:	62                   	(bad)  
    4c38:	6c                   	ins    BYTE PTR es:[rdi],dx
    4c39:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    4c3c:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    4c3f:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    4c42:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    4c46:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33317f7c <_end+0x33116f64>
    4c4c:	30 38                	xor    BYTE PTR [rax],bh
    4c4e:	30 38                	xor    BYTE PTR [rax],bh
    4c50:	34 37                	xor    al,0x37
    4c52:	32 36                	xor    dh,BYTE PTR [rsi]
    4c54:	33 33                	xor    esi,DWORD PTR [rbx]
    4c56:	33 36                	xor    esi,DWORD PTR [rsi]
    4c58:	31 38                	xor    DWORD PTR [rax],edi
    4c5a:	31 36                	xor    DWORD PTR [rsi],esi
    4c5c:	34 30                	xor    al,0x30
    4c5e:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    4c62:	31 36                	xor    DWORD PTR [rsi],esi
    4c64:	4c 29 00             	sub    QWORD PTR [rax],r8
    4c67:	5f                   	pop    rdi
    4c68:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    4c6b:	5f                   	pop    rdi
    4c6c:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    4c6f:	75 6d                	jne    4cde <__FRAME_END__+0x44ea>
    4c71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4c72:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c75:	50                   	push   rax
    4c76:	52                   	push   rdx
    4c77:	41                   	rex.B
    4c78:	47                   	rex.RXB
    4c79:	4d                   	rex.WRB
    4c7a:	41 5f                	pop    r15
    4c7c:	52                   	push   rdx
    4c7d:	45                   	rex.RB
    4c7e:	44                   	rex.R
    4c7f:	45                   	rex.RB
    4c80:	46                   	rex.RX
    4c81:	49                   	rex.WB
    4c82:	4e                   	rex.WRX
    4c83:	45 5f                	rex.RB pop r15
    4c85:	45 58                	rex.RB pop r8
    4c87:	54                   	push   rsp
    4c88:	4e                   	rex.WRX
    4c89:	41                   	rex.B
    4c8a:	4d                   	rex.WRB
    4c8b:	45 20 31             	and    BYTE PTR [r9],r14b
    4c8e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c91:	53                   	push   rbx
    4c92:	49                   	rex.WB
    4c93:	47 5f                	rex.RXB pop r15
    4c95:	41 54                	push   r12
    4c97:	4f                   	rex.WRXB
    4c98:	4d                   	rex.WRB
    4c99:	49                   	rex.WB
    4c9a:	43 5f                	rex.XB pop r15
    4c9c:	54                   	push   rsp
    4c9d:	59                   	pop    rcx
    4c9e:	50                   	push   rax
    4c9f:	45 5f                	rex.RB pop r15
    4ca1:	5f                   	pop    rdi
    4ca2:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    4ca5:	74 00                	je     4ca7 <__FRAME_END__+0x44b3>
    4ca7:	5f                   	pop    rdi
    4ca8:	5f                   	pop    rdi
    4ca9:	46                   	rex.RX
    4caa:	4c 54                	rex.WR push rsp
    4cac:	36 34 58             	ss xor al,0x58
    4caf:	5f                   	pop    rdi
    4cb0:	44                   	rex.R
    4cb1:	45                   	rex.RB
    4cb2:	4e                   	rex.WRX
    4cb3:	4f 52                	rex.WRXB push r10
    4cb5:	4d 5f                	rex.WRB pop r15
    4cb7:	4d                   	rex.WRB
    4cb8:	49                   	rex.WB
    4cb9:	4e 5f                	rex.WRX pop rdi
    4cbb:	5f                   	pop    rdi
    4cbc:	20 33                	and    BYTE PTR [rbx],dh
    4cbe:	2e 36 34 35          	cs ss xor al,0x35
    4cc2:	31 39                	xor    DWORD PTR [rcx],edi
    4cc4:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38387dfd <_end+0x38186de5>
    4cca:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    4ccd:	34 36                	xor    al,0x36
    4ccf:	30 32                	xor    BYTE PTR [rdx],dh
    4cd1:	35 32 38 34 30       	xor    eax,0x30343832
    4cd6:	35 39 33 33 36       	xor    eax,0x36333339
    4cdb:	31 39                	xor    DWORD PTR [rcx],edi
    4cdd:	34 31                	xor    al,0x31
    4cdf:	39 38                	cmp    DWORD PTR [rax],edi
    4ce1:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4ce4:	34 39                	xor    al,0x39
    4ce6:	35 31 46 36 34       	xor    eax,0x34364631
    4ceb:	78 00                	js     4ced <__FRAME_END__+0x44f9>
    4ced:	5f                   	pop    rdi
    4cee:	5f                   	pop    rdi
    4cef:	55                   	push   rbp
    4cf0:	53                   	push   rbx
    4cf1:	45 5f                	rex.RB pop r15
    4cf3:	50                   	push   rax
    4cf4:	4f 53                	rex.WRXB push r11
    4cf6:	49 58                	rex.WB pop r8
    4cf8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4cfb:	46                   	rex.RX
    4cfc:	4c 54                	rex.WR push rsp
    4cfe:	31 32                	xor    DWORD PTR [rdx],esi
    4d00:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    4d03:	41 53                	push   r11
    4d05:	5f                   	pop    rdi
    4d06:	44                   	rex.R
    4d07:	45                   	rex.RB
    4d08:	4e                   	rex.WRX
    4d09:	4f 52                	rex.WRXB push r10
    4d0b:	4d 5f                	rex.WRB pop r15
    4d0d:	5f                   	pop    rdi
    4d0e:	20 31                	and    BYTE PTR [rcx],dh
    4d10:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4d13:	4f 5f                	rex.WRXB pop r15
    4d15:	43 55                	rex.XB push r13
    4d17:	52                   	push   rdx
    4d18:	52                   	push   rdx
    4d19:	45                   	rex.RB
    4d1a:	4e 54                	rex.WRX push rsp
    4d1c:	4c 59                	rex.WR pop rcx
    4d1e:	5f                   	pop    rdi
    4d1f:	50                   	push   rax
    4d20:	55                   	push   rbp
    4d21:	54                   	push   rsp
    4d22:	54                   	push   rsp
    4d23:	49                   	rex.WB
    4d24:	4e                   	rex.WRX
    4d25:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    4d28:	78 38                	js     4d62 <__FRAME_END__+0x456e>
    4d2a:	30 30                	xor    BYTE PTR [rax],dh
    4d2c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d2f:	4c                   	rex.WR
    4d30:	44                   	rex.R
    4d31:	42                   	rex.X
    4d32:	4c 5f                	rex.WR pop rdi
    4d34:	48                   	rex.W
    4d35:	41 53                	push   r11
    4d37:	5f                   	pop    rdi
    4d38:	44                   	rex.R
    4d39:	45                   	rex.RB
    4d3a:	4e                   	rex.WRX
    4d3b:	4f 52                	rex.WRXB push r10
    4d3d:	4d 5f                	rex.WRB pop r15
    4d3f:	5f                   	pop    rdi
    4d40:	20 31                	and    BYTE PTR [rcx],dh
    4d42:	00 5f 75             	add    BYTE PTR [rdi+0x75],bl
    4d45:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d46:	75 73                	jne    4dbb <__FRAME_END__+0x45c7>
    4d48:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    4d4c:	5f                   	pop    rdi
    4d4d:	49                   	rex.WB
    4d4e:	4f 5f                	rex.WRXB pop r15
    4d50:	62                   	(bad)  
    4d51:	75 66                	jne    4db9 <__FRAME_END__+0x45c5>
    4d53:	5f                   	pop    rdi
    4d54:	62 61                	(bad)  
    4d56:	73 65                	jae    4dbd <__FRAME_END__+0x45c9>
    4d58:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d5b:	73 74                	jae    4dd1 <__FRAME_END__+0x45dd>
    4d5d:	75 62                	jne    4dc1 <__FRAME_END__+0x45cd>
    4d5f:	5f                   	pop    rdi
    4d60:	6c                   	ins    BYTE PTR es:[rdi],dx
    4d61:	63 68 6d             	movsxd ebp,DWORD PTR [rax+0x6d]
    4d64:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d65:	64 20 00             	and    BYTE PTR fs:[rax],al
    4d68:	5f                   	pop    rdi
    4d69:	5f                   	pop    rdi
    4d6a:	46                   	rex.RX
    4d6b:	4c 54                	rex.WR push rsp
    4d6d:	36 34 5f             	ss xor al,0x5f
    4d70:	4d                   	rex.WRB
    4d71:	41                   	rex.B
    4d72:	4e 54                	rex.WRX push rsp
    4d74:	5f                   	pop    rdi
    4d75:	44                   	rex.R
    4d76:	49                   	rex.WB
    4d77:	47 5f                	rex.RXB pop r15
    4d79:	5f                   	pop    rdi
    4d7a:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f4db3 <_end+0x5f3f3d9b>
    4d80:	44                   	rex.R
    4d81:	45                   	rex.RB
    4d82:	43                   	rex.XB
    4d83:	36 34 5f             	ss xor al,0x5f
    4d86:	4d                   	rex.WRB
    4d87:	41                   	rex.B
    4d88:	4e 54                	rex.WRX push rsp
    4d8a:	5f                   	pop    rdi
    4d8b:	44                   	rex.R
    4d8c:	49                   	rex.WB
    4d8d:	47 5f                	rex.RXB pop r15
    4d8f:	5f                   	pop    rdi
    4d90:	20 31                	and    BYTE PTR [rcx],dh
    4d92:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4d96:	46                   	rex.RX
    4d97:	4c 54                	rex.WR push rsp
    4d99:	5f                   	pop    rdi
    4d9a:	48                   	rex.W
    4d9b:	41 53                	push   r11
    4d9d:	5f                   	pop    rdi
    4d9e:	44                   	rex.R
    4d9f:	45                   	rex.RB
    4da0:	4e                   	rex.WRX
    4da1:	4f 52                	rex.WRXB push r10
    4da3:	4d 5f                	rex.WRB pop r15
    4da5:	5f                   	pop    rdi
    4da6:	20 31                	and    BYTE PTR [rcx],dh
    4da8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4dab:	49                   	rex.WB
    4dac:	4e 54                	rex.WRX push rsp
    4dae:	5f                   	pop    rdi
    4daf:	46                   	rex.RX
    4db0:	41 53                	push   r11
    4db2:	54                   	push   rsp
    4db3:	36 34 5f             	ss xor al,0x5f
    4db6:	57                   	push   rdi
    4db7:	49                   	rex.WB
    4db8:	44 54                	rex.R push rsp
    4dba:	48 5f                	rex.W pop rdi
    4dbc:	5f                   	pop    rdi
    4dbd:	20 36                	and    BYTE PTR [rsi],dh
    4dbf:	34 00                	xor    al,0x0
    4dc1:	5f                   	pop    rdi
    4dc2:	5f                   	pop    rdi
    4dc3:	44                   	rex.R
    4dc4:	45                   	rex.RB
    4dc5:	43                   	rex.XB
    4dc6:	49                   	rex.WB
    4dc7:	4d                   	rex.WRB
    4dc8:	41                   	rex.B
    4dc9:	4c 5f                	rex.WR pop rdi
    4dcb:	44                   	rex.R
    4dcc:	49                   	rex.WB
    4dcd:	47 5f                	rex.RXB pop r15
    4dcf:	5f                   	pop    rdi
    4dd0:	20 32                	and    BYTE PTR [rdx],dh
    4dd2:	31 00                	xor    DWORD PTR [rax],eax

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
       0:	04 00                	add    al,0x0
       2:	02 00                	add    al,BYTE PTR [rax]
       4:	00 00                	add    BYTE PTR [rax],al
       6:	00 07                	add    BYTE PTR [rdi],al
       8:	0f 01 00             	sgdt   [rax]
       b:	00 03                	add    BYTE PTR [rbx],al
       d:	00 01                	add    BYTE PTR [rcx],al
       f:	03 1f                	add    ebx,DWORD PTR [rdi]
      11:	07                   	(bad)  
      12:	07                   	(bad)  
      13:	17                   	(bad)  
      14:	09 00                	or     DWORD PTR [rax],eax
      16:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      19:	01 05 07 39 09 00    	add    DWORD PTR [rip+0x93907],eax        # 93926 <__FRAME_END__+0x93132>
      1f:	00 03                	add    BYTE PTR [rbx],al
      21:	1b 08                	sbb    ecx,DWORD PTR [rax]
      23:	06                   	(bad)  
      24:	1f                   	(bad)  
      25:	26 45 00 00          	add    BYTE PTR es:[r8],r8b
      29:	03 21                	add    esp,DWORD PTR [rcx]
      2b:	09 07                	or     DWORD PTR [rdi],eax
      2d:	49 09 00             	or     QWORD PTR [r8],rax
      30:	00 03                	add    BYTE PTR [rbx],al
      32:	a8 03                	test   al,0x3
      34:	0a 07                	or     al,BYTE PTR [rdi]
      36:	e7 0a                	out    0xa,eax
      38:	00 00                	add    BYTE PTR [rax],al
      3a:	03 ab 03 0b 07 4f    	add    ebp,DWORD PTR [rbx+0x4f070b03]
      40:	0c 00                	or     al,0x0
      42:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      45:	ac                   	lods   al,BYTE PTR ds:[rsi]
      46:	03 0c 04             	add    ecx,DWORD PTR [rsp+rax*1]
      49:	07                   	(bad)  
      4a:	65 0c 00             	gs or  al,0x0
      4d:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      50:	c0 03 0d             	rol    BYTE PTR [rbx],0xd
      53:	03 0a                	add    ecx,DWORD PTR [rdx]
      55:	0e                   	(bad)  
      56:	07                   	(bad)  
      57:	af                   	scas   eax,DWORD PTR es:[rdi]
      58:	0c 00                	or     al,0x0
      5a:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
      5d:	04 07                	add    al,0x7
      5f:	07                   	(bad)  
      60:	0d 00 00 04 07       	or     eax,0x7040000
      65:	3b 0d 00 00 03 21    	cmp    ecx,DWORD PTR [rip+0x21030000]        # 2103006b <_end+0x20e2f053>
      6b:	02 07                	add    al,BYTE PTR [rdi]
      6d:	4b 0d 00 00 04 03    	rex.WXB or rax,0x3040000
      73:	23 03                	and    eax,DWORD PTR [rbx]
      75:	05 18 b9 14 00       	add    eax,0x14b918
      7a:	00 03                	add    BYTE PTR [rbx],al
      7c:	1b 0b                	sbb    ecx,DWORD PTR [rbx]
      7e:	07                   	(bad)  
      7f:	4f 0c 00             	rex.WRXB or al,0x0
      82:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      85:	e2 0d                	loop   94 <_init-0x424>
      87:	00 00                	add    BYTE PTR [rax],al
      89:	03 82 01 0f 07 40    	add    eax,DWORD PTR [rdx+0x40070f01]
      8f:	0e                   	(bad)  
      90:	00 00                	add    BYTE PTR [rax],al
      92:	04 06                	add    al,0x6
      94:	cc                   	int3   
      95:	01 a8 28 00 00 04    	add    DWORD PTR [rax+0x4000028],ebp
      9b:	03 24 10             	add    esp,DWORD PTR [rax+rdx*1]
      9e:	05 02 25 2c 00       	add    eax,0x2c2502
      a3:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      a6:	25 11 05 02 27       	and    eax,0x27020511
      ab:	2c 00                	sub    al,0x0
      ad:	00 04 05 27 a0 2a 00 	add    BYTE PTR [rax*1+0x2aa027],al
      b4:	00 03                	add    BYTE PTR [rbx],al
      b6:	29 04 05 1d 9d 10 00 	sub    DWORD PTR [rax*1+0x109d1d],eax
      bd:	00 03                	add    BYTE PTR [rbx],al
      bf:	23 12                	and    edx,DWORD PTR [rdx]
      c1:	07                   	(bad)  
      c2:	2e 0f 00 00          	sldt   WORD PTR cs:[rax]
      c6:	03 13                	add    edx,DWORD PTR [rbx]
      c8:	02 07                	add    al,BYTE PTR [rdi]
      ca:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
      ce:	04 03                	add    al,0x3
      d0:	15 13 05 02 f8       	adc    eax,0xf8020513
      d5:	1a 00                	sbb    al,BYTE PTR [rax]
      d7:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      da:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
      de:	04 07                	add    al,0x7
      e0:	8c 0f                	mov    WORD PTR [rdi],cs
      e2:	00 00                	add    BYTE PTR [rax],al
      e4:	03 35 14 07 e4 0f    	add    esi,DWORD PTR [rip+0xfe40714]        # fe407fe <_end+0xfc3f7e6>
      ea:	00 00                	add    BYTE PTR [rax],al
      ec:	04 07                	add    al,0x7
      ee:	f4                   	hlt    
      ef:	0f 00 00             	sldt   WORD PTR [rax]
      f2:	04 07                	add    al,0x7
      f4:	c0 11 00             	rcl    BYTE PTR [rcx],0x0
      f7:	00 03                	add    BYTE PTR [rbx],al
      f9:	83 01 15             	add    DWORD PTR [rcx],0x15
      fc:	07                   	(bad)  
      fd:	06                   	(bad)  
      fe:	12 00                	adc    al,BYTE PTR [rax]
     100:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     103:	34 12                	xor    al,0x12
     105:	00 00                	add    BYTE PTR [rax],al
     107:	03 8d 06 06 04 04    	add    ecx,DWORD PTR [rbp+0x4040606]
     10d:	04 00                	add    al,0x0
     10f:	04 00                	add    al,0x0
     111:	00 05 00 07 29 00    	add    BYTE PTR [rip+0x290700],al        # 290817 <_end+0x8f7ff>
     117:	00 05 00 d6 22 00    	add    BYTE PTR [rip+0x22d600],al        # 22d71d <_end+0x2c705>
     11d:	00 05 00 78 1b 00    	add    BYTE PTR [rip+0x1b7800],al        # 1b7923 <__FRAME_END__+0x1b712f>
     123:	00 05 00 3a 0b 00    	add    BYTE PTR [rip+0xb3a00],al        # b3b29 <__FRAME_END__+0xb3335>
     129:	00 05 00 b6 3d 00    	add    BYTE PTR [rip+0x3db600],al        # 3db72f <_end+0x1da717>
     12f:	00 05 00 52 07 00    	add    BYTE PTR [rip+0x75200],al        # 75335 <__FRAME_END__+0x74b41>
     135:	00 05 00 81 05 00    	add    BYTE PTR [rip+0x58100],al        # 5823b <__FRAME_END__+0x57a47>
     13b:	00 05 00 83 36 00    	add    BYTE PTR [rip+0x368300],al        # 368441 <_end+0x167429>
     141:	00 05 00 1d 20 00    	add    BYTE PTR [rip+0x201d00],al        # 201e47 <_end+0xe2f>
     147:	00 05 00 8d 3d 00    	add    BYTE PTR [rip+0x3d8d00],al        # 3d8e4d <_end+0x1d7e35>
     14d:	00 05 00 0a 09 00    	add    BYTE PTR [rip+0x90a00],al        # 90b53 <__FRAME_END__+0x9035f>
     153:	00 05 00 d5 2e 00    	add    BYTE PTR [rip+0x2ed500],al        # 2ed659 <_end+0xec641>
     159:	00 05 00 39 47 00    	add    BYTE PTR [rip+0x473900],al        # 473a5f <_end+0x272a47>
     15f:	00 05 00 59 40 00    	add    BYTE PTR [rip+0x405900],al        # 405a65 <_end+0x204a4d>
     165:	00 05 00 77 29 00    	add    BYTE PTR [rip+0x297700],al        # 29786b <_end+0x96853>
     16b:	00 05 00 2f 47 00    	add    BYTE PTR [rip+0x472f00],al        # 473071 <_end+0x272059>
     171:	00 05 00 a3 42 00    	add    BYTE PTR [rip+0x42a300],al        # 42a477 <_end+0x22945f>
     177:	00 05 00 4f 10 00    	add    BYTE PTR [rip+0x104f00],al        # 10507d <__FRAME_END__+0x104889>
     17d:	00 05 00 83 0c 00    	add    BYTE PTR [rip+0xc8300],al        # c8483 <__FRAME_END__+0xc7c8f>
     183:	00 05 00 ed 25 00    	add    BYTE PTR [rip+0x25ed00],al        # 25ee89 <_end+0x5de71>
     189:	00 05 00 d9 24 00    	add    BYTE PTR [rip+0x24d900],al        # 24da8f <_end+0x4ca77>
     18f:	00 05 00 62 24 00    	add    BYTE PTR [rip+0x246200],al        # 246395 <_end+0x4537d>
     195:	00 05 00 11 46 00    	add    BYTE PTR [rip+0x461100],al        # 46129b <_end+0x260283>
     19b:	00 05 00 65 29 00    	add    BYTE PTR [rip+0x296500],al        # 2966a1 <_end+0x95689>
     1a1:	00 05 00 0c 39 00    	add    BYTE PTR [rip+0x390c00],al        # 390da7 <_end+0x18fd8f>
     1a7:	00 05 00 3b 09 00    	add    BYTE PTR [rip+0x93b00],al        # 93cad <__FRAME_END__+0x934b9>
     1ad:	00 05 00 12 28 00    	add    BYTE PTR [rip+0x281200],al        # 2813b3 <_end+0x8039b>
     1b3:	00 05 00 b6 2a 00    	add    BYTE PTR [rip+0x2ab600],al        # 2ab7b9 <_end+0xaa7a1>
     1b9:	00 05 00 80 14 00    	add    BYTE PTR [rip+0x148000],al        # 1481bf <__FRAME_END__+0x1479cb>
     1bf:	00 05 00 1f 07 00    	add    BYTE PTR [rip+0x71f00],al        # 720c5 <__FRAME_END__+0x718d1>
     1c5:	00 05 00 5a 3d 00    	add    BYTE PTR [rip+0x3d5a00],al        # 3d5bcb <_end+0x1d4bb3>
     1cb:	00 05 00 87 47 00    	add    BYTE PTR [rip+0x478700],al        # 4788d1 <_end+0x2778b9>
     1d1:	00 05 00 31 17 00    	add    BYTE PTR [rip+0x173100],al        # 1732d7 <__FRAME_END__+0x172ae3>
     1d7:	00 05 00 38 07 00    	add    BYTE PTR [rip+0x73800],al        # 739dd <__FRAME_END__+0x731e9>
     1dd:	00 05 00 c2 31 00    	add    BYTE PTR [rip+0x31c200],al        # 31c3e3 <_end+0x11b3cb>
     1e3:	00 05 00 44 0a 00    	add    BYTE PTR [rip+0xa4400],al        # a45e9 <__FRAME_END__+0xa3df5>
     1e9:	00 05 00 66 2d 00    	add    BYTE PTR [rip+0x2d6600],al        # 2d67ef <_end+0xd57d7>
     1ef:	00 05 00 7a 3a 00    	add    BYTE PTR [rip+0x3a7a00],al        # 3a7bf5 <_end+0x1a6bdd>
     1f5:	00 05 00 3a 1e 00    	add    BYTE PTR [rip+0x1e3a00],al        # 1e3bfb <__FRAME_END__+0x1e3407>
     1fb:	00 05 00 ad 4a 00    	add    BYTE PTR [rip+0x4aad00],al        # 4aaf01 <_end+0x2a9ee9>
     201:	00 05 00 b0 12 00    	add    BYTE PTR [rip+0x12b000],al        # 12b207 <__FRAME_END__+0x12aa13>
     207:	00 05 00 eb 29 00    	add    BYTE PTR [rip+0x29eb00],al        # 29ed0d <_end+0x9dcf5>
     20d:	00 05 00 1e 48 00    	add    BYTE PTR [rip+0x481e00],al        # 482013 <_end+0x280ffb>
     213:	00 05 00 f0 2f 00    	add    BYTE PTR [rip+0x2ff000],al        # 2ff219 <_end+0xfe201>
     219:	00 05 00 fc 06 00    	add    BYTE PTR [rip+0x6fc00],al        # 6fe1f <__FRAME_END__+0x6f62b>
     21f:	00 05 00 d9 34 00    	add    BYTE PTR [rip+0x34d900],al        # 34db25 <_end+0x14cb0d>
     225:	00 05 00 8f 4c 00    	add    BYTE PTR [rip+0x4c8f00],al        # 4c912b <_end+0x2c8113>
     22b:	00 05 00 e9 41 00    	add    BYTE PTR [rip+0x41e900],al        # 41eb31 <_end+0x21db19>
     231:	00 05 00 82 08 00    	add    BYTE PTR [rip+0x88200],al        # 88437 <__FRAME_END__+0x87c43>
     237:	00 05 00 a9 17 00    	add    BYTE PTR [rip+0x17a900],al        # 17ab3d <__FRAME_END__+0x17a349>
     23d:	00 05 00 fd 40 00    	add    BYTE PTR [rip+0x40fd00],al        # 40ff43 <_end+0x20ef2b>
     243:	00 05 00 81 26 00    	add    BYTE PTR [rip+0x268100],al        # 268349 <_end+0x67331>
     249:	00 05 00 55 1b 00    	add    BYTE PTR [rip+0x1b5500],al        # 1b574f <__FRAME_END__+0x1b4f5b>
     24f:	00 05 00 96 37 00    	add    BYTE PTR [rip+0x379600],al        # 379855 <_end+0x17883d>
     255:	00 05 00 68 09 00    	add    BYTE PTR [rip+0x96800],al        # 96a5b <__FRAME_END__+0x96267>
     25b:	00 05 00 b1 09 00    	add    BYTE PTR [rip+0x9b100],al        # 9b361 <__FRAME_END__+0x9ab6d>
     261:	00 05 00 65 23 00    	add    BYTE PTR [rip+0x236500],al        # 236767 <_end+0x3574f>
     267:	00 05 00 ad 42 00    	add    BYTE PTR [rip+0x42ad00],al        # 42af6d <_end+0x229f55>
     26d:	00 05 00 d5 0a 00    	add    BYTE PTR [rip+0xad500],al        # ad773 <__FRAME_END__+0xacf7f>
     273:	00 05 00 1c 0d 00    	add    BYTE PTR [rip+0xd1c00],al        # d1e79 <__FRAME_END__+0xd1685>
     279:	00 05 00 55 1c 00    	add    BYTE PTR [rip+0x1c5500],al        # 1c577f <__FRAME_END__+0x1c4f8b>
     27f:	00 05 00 db 09 00    	add    BYTE PTR [rip+0x9db00],al        # 9dd85 <__FRAME_END__+0x9d591>
     285:	00 05 00 c6 42 00    	add    BYTE PTR [rip+0x42c600],al        # 42c88b <_end+0x22b873>
     28b:	00 05 00 64 0c 00    	add    BYTE PTR [rip+0xc6400],al        # c6691 <__FRAME_END__+0xc5e9d>
     291:	00 05 00 3e 46 00    	add    BYTE PTR [rip+0x463e00],al        # 464097 <_end+0x26307f>
     297:	00 05 00 c6 26 00    	add    BYTE PTR [rip+0x26c600],al        # 26c89d <_end+0x6b885>
     29d:	00 05 00 77 22 00    	add    BYTE PTR [rip+0x227700],al        # 2279a3 <_end+0x2698b>
     2a3:	00 05 00 18 36 00    	add    BYTE PTR [rip+0x361800],al        # 361aa9 <_end+0x160a91>
     2a9:	00 05 00 58 3c 00    	add    BYTE PTR [rip+0x3c5800],al        # 3c5aaf <_end+0x1c4a97>
     2af:	00 05 00 35 39 00    	add    BYTE PTR [rip+0x393500],al        # 3937b5 <_end+0x19279d>
     2b5:	00 05 00 42 4b 00    	add    BYTE PTR [rip+0x4b4200],al        # 4b44bb <_end+0x2b34a3>
     2bb:	00 05 00 17 16 00    	add    BYTE PTR [rip+0x161700],al        # 1619c1 <__FRAME_END__+0x1611cd>
     2c1:	00 05 00 c4 27 00    	add    BYTE PTR [rip+0x27c400],al        # 27c6c7 <_end+0x7b6af>
     2c7:	00 05 00 2c 3e 00    	add    BYTE PTR [rip+0x3e2c00],al        # 3e2ecd <_end+0x1e1eb5>
     2cd:	00 05 00 89 03 00    	add    BYTE PTR [rip+0x38900],al        # 38bd3 <__FRAME_END__+0x383df>
     2d3:	00 05 00 18 47 00    	add    BYTE PTR [rip+0x471800],al        # 471ad9 <_end+0x270ac1>
     2d9:	00 05 00 f1 0b 00    	add    BYTE PTR [rip+0xbf100],al        # bf3df <__FRAME_END__+0xbebeb>
     2df:	00 05 00 2b 31 00    	add    BYTE PTR [rip+0x312b00],al        # 312de5 <_end+0x111dcd>
     2e5:	00 05 00 23 08 00    	add    BYTE PTR [rip+0x82300],al        # 825eb <__FRAME_END__+0x81df7>
     2eb:	00 05 00 1d 34 00    	add    BYTE PTR [rip+0x341d00],al        # 341ff1 <_end+0x140fd9>
     2f1:	00 05 00 12 1c 00    	add    BYTE PTR [rip+0x1c1200],al        # 1c14f7 <__FRAME_END__+0x1c0d03>
     2f7:	00 05 00 0c 3b 00    	add    BYTE PTR [rip+0x3b0c00],al        # 3b0efd <_end+0x1afee5>
     2fd:	00 05 00 f3 0a 00    	add    BYTE PTR [rip+0xaf300],al        # af603 <__FRAME_END__+0xaee0f>
     303:	00 05 00 99 36 00    	add    BYTE PTR [rip+0x369900],al        # 369c09 <_end+0x168bf1>
     309:	00 05 00 21 2b 00    	add    BYTE PTR [rip+0x2b2100],al        # 2b240f <_end+0xb13f7>
     30f:	00 05 00 2f 23 00    	add    BYTE PTR [rip+0x232f00],al        # 233215 <_end+0x321fd>
     315:	00 05 00 e7 43 00    	add    BYTE PTR [rip+0x43e700],al        # 43ea1b <_end+0x23da03>
     31b:	00 05 00 5d 2a 00    	add    BYTE PTR [rip+0x2a5d00],al        # 2a6021 <_end+0xa5009>
     321:	00 05 00 5c 39 00    	add    BYTE PTR [rip+0x395c00],al        # 395f27 <_end+0x194f0f>
     327:	00 05 00 a8 3b 00    	add    BYTE PTR [rip+0x3ba800],al        # 3bab2d <_end+0x1b9b15>
     32d:	00 05 00 48 3f 00    	add    BYTE PTR [rip+0x3f4800],al        # 3f4b33 <_end+0x1f3b1b>
     333:	00 05 00 99 06 00    	add    BYTE PTR [rip+0x69900],al        # 69c39 <__FRAME_END__+0x69445>
     339:	00 05 00 b7 1b 00    	add    BYTE PTR [rip+0x1bb700],al        # 1bba3f <__FRAME_END__+0x1bb24b>
     33f:	00 05 00 ee 32 00    	add    BYTE PTR [rip+0x32ee00],al        # 32f145 <_end+0x12e12d>
     345:	00 05 00 16 4b 00    	add    BYTE PTR [rip+0x4b1600],al        # 4b194b <_end+0x2b0933>
     34b:	00 05 00 c8 3d 00    	add    BYTE PTR [rip+0x3dc800],al        # 3dcb51 <_end+0x1dbb39>
     351:	00 05 00 7a 10 00    	add    BYTE PTR [rip+0x107a00],al        # 107d57 <__FRAME_END__+0x107563>
     357:	00 05 00 dc 39 00    	add    BYTE PTR [rip+0x39dc00],al        # 39df5d <_end+0x19cf45>
     35d:	00 05 00 42 42 00    	add    BYTE PTR [rip+0x424200],al        # 424563 <_end+0x22354b>
     363:	00 05 00 c2 34 00    	add    BYTE PTR [rip+0x34c200],al        # 34c569 <_end+0x14b551>
     369:	00 05 00 ef 22 00    	add    BYTE PTR [rip+0x22ef00],al        # 22f26f <_end+0x2e257>
     36f:	00 05 00 0c 00 00    	add    BYTE PTR [rip+0xc00],al        # f75 <__FRAME_END__+0x781>
     375:	00 05 00 a4 2c 00    	add    BYTE PTR [rip+0x2ca400],al        # 2ca77b <_end+0xc9763>
     37b:	00 05 00 b5 30 00    	add    BYTE PTR [rip+0x30b500],al        # 30b881 <_end+0x10a869>
     381:	00 05 00 c3 12 00    	add    BYTE PTR [rip+0x12c300],al        # 12c687 <__FRAME_END__+0x12be93>
     387:	00 05 00 30 2a 00    	add    BYTE PTR [rip+0x2a3000],al        # 2a338d <_end+0xa2375>
     38d:	00 05 00 68 2e 00    	add    BYTE PTR [rip+0x2e6800],al        # 2e6b93 <_end+0xe5b7b>
     393:	00 05 00 0f 2f 00    	add    BYTE PTR [rip+0x2f0f00],al        # 2f1299 <_end+0xf0281>
     399:	00 05 00 c4 21 00    	add    BYTE PTR [rip+0x21c400],al        # 21c79f <_end+0x1b787>
     39f:	00 05 00 2b 22 00    	add    BYTE PTR [rip+0x222b00],al        # 222ea5 <_end+0x21e8d>
     3a5:	00 05 00 1d 1f 00    	add    BYTE PTR [rip+0x1f1d00],al        # 1f20ab <__FRAME_END__+0x1f18b7>
     3ab:	00 05 00 5a 3f 00    	add    BYTE PTR [rip+0x3f5a00],al        # 3f5db1 <_end+0x1f4d99>
     3b1:	00 05 00 35 24 00    	add    BYTE PTR [rip+0x243500],al        # 2438b7 <_end+0x4289f>
     3b7:	00 05 00 6c 3a 00    	add    BYTE PTR [rip+0x3a6c00],al        # 3a6fbd <_end+0x1a5fa5>
     3bd:	00 05 00 76 21 00    	add    BYTE PTR [rip+0x217600],al        # 2179c3 <_end+0x169ab>
     3c3:	00 05 00 72 0b 00    	add    BYTE PTR [rip+0xb7200],al        # b75c9 <__FRAME_END__+0xb6dd5>
     3c9:	00 05 00 e7 27 00    	add    BYTE PTR [rip+0x27e700],al        # 27eacf <_end+0x7dab7>
     3cf:	00 05 00 79 0e 00    	add    BYTE PTR [rip+0xe7900],al        # e7cd5 <__FRAME_END__+0xe74e1>
     3d5:	00 05 00 f3 1b 00    	add    BYTE PTR [rip+0x1bf300],al        # 1bf6db <__FRAME_END__+0x1beee7>
     3db:	00 05 00 3a 36 00    	add    BYTE PTR [rip+0x363a00],al        # 363de1 <_end+0x162dc9>
     3e1:	00 05 00 03 42 00    	add    BYTE PTR [rip+0x420300],al        # 4206e7 <_end+0x21f6cf>
     3e7:	00 05 00 4e 21 00    	add    BYTE PTR [rip+0x214e00],al        # 2151ed <_end+0x141d5>
     3ed:	00 05 00 d8 45 00    	add    BYTE PTR [rip+0x45d800],al        # 45dbf3 <_end+0x25cbdb>
     3f3:	00 05 00 31 3a 00    	add    BYTE PTR [rip+0x3a3100],al        # 3a34f9 <_end+0x1a24e1>
     3f9:	00 05 00 df 11 00    	add    BYTE PTR [rip+0x11df00],al        # 11e2ff <__FRAME_END__+0x11db0b>
     3ff:	00 05 00 ca 2a 00    	add    BYTE PTR [rip+0x2aca00],al        # 2ace05 <_end+0xabded>
     405:	00 05 00 09 11 00    	add    BYTE PTR [rip+0x110900],al        # 110d0b <__FRAME_END__+0x110517>
     40b:	00 05 00 e8 2e 00    	add    BYTE PTR [rip+0x2ee800],al        # 2eec11 <_end+0xedbf9>
     411:	00 05 00 90 49 00    	add    BYTE PTR [rip+0x499000],al        # 499417 <_end+0x2983ff>
     417:	00 05 00 6f 2a 00    	add    BYTE PTR [rip+0x2a6f00],al        # 2a731d <_end+0xa6305>
     41d:	00 05 00 2d 27 00    	add    BYTE PTR [rip+0x272d00],al        # 273123 <_end+0x7210b>
     423:	00 05 00 c5 07 00    	add    BYTE PTR [rip+0x7c500],al        # 7c929 <__FRAME_END__+0x7c135>
     429:	00 05 00 6c 33 00    	add    BYTE PTR [rip+0x336c00],al        # 33702f <_end+0x136017>
     42f:	00 05 00 34 1a 00    	add    BYTE PTR [rip+0x1a3400],al        # 1a3835 <__FRAME_END__+0x1a3041>
     435:	00 05 00 9d 44 00    	add    BYTE PTR [rip+0x449d00],al        # 44a13b <_end+0x249123>
     43b:	00 05 00 07 10 00    	add    BYTE PTR [rip+0x100700],al        # 100b41 <__FRAME_END__+0x10034d>
     441:	00 05 00 8a 09 00    	add    BYTE PTR [rip+0x98a00],al        # 98e47 <__FRAME_END__+0x98653>
     447:	00 05 00 08 3a 00    	add    BYTE PTR [rip+0x3a0800],al        # 3a0c4d <_end+0x19fc35>
     44d:	00 05 00 62 03 00    	add    BYTE PTR [rip+0x36200],al        # 36653 <__FRAME_END__+0x35e5f>
     453:	00 05 00 a9 4d 00    	add    BYTE PTR [rip+0x4da900],al        # 4dad59 <_end+0x2d9d41>
     459:	00 05 00 66 15 00    	add    BYTE PTR [rip+0x156600],al        # 156a5f <__FRAME_END__+0x15626b>
     45f:	00 05 00 2e 2e 00    	add    BYTE PTR [rip+0x2e2e00],al        # 2e3265 <_end+0xe224d>
     465:	00 05 00 c4 25 00    	add    BYTE PTR [rip+0x25c400],al        # 25c86b <_end+0x5b853>
     46b:	00 05 00 25 11 00    	add    BYTE PTR [rip+0x112500],al        # 112971 <__FRAME_END__+0x11217d>
     471:	00 05 00 1a 02 00    	add    BYTE PTR [rip+0x21a00],al        # 21e77 <__FRAME_END__+0x21683>
     477:	00 05 00 e2 35 00    	add    BYTE PTR [rip+0x35e200],al        # 35e67d <_end+0x15d665>
     47d:	00 05 00 c0 04 00    	add    BYTE PTR [rip+0x4c000],al        # 4c483 <__FRAME_END__+0x4bc8f>
     483:	00 05 00 ad 10 00    	add    BYTE PTR [rip+0x10ad00],al        # 10b189 <__FRAME_END__+0x10a995>
     489:	00 05 00 8c 2c 00    	add    BYTE PTR [rip+0x2c8c00],al        # 2c908f <_end+0xc8077>
     48f:	00 05 00 a2 1f 00    	add    BYTE PTR [rip+0x1fa200],al        # 1fa695 <__FRAME_END__+0x1f9ea1>
     495:	00 05 00 56 45 00    	add    BYTE PTR [rip+0x455600],al        # 455a9b <_end+0x254a83>
     49b:	00 05 00 94 1e 00    	add    BYTE PTR [rip+0x1e9400],al        # 1e98a1 <__FRAME_END__+0x1e90ad>
     4a1:	00 05 00 df 13 00    	add    BYTE PTR [rip+0x13df00],al        # 13e3a7 <__FRAME_END__+0x13dbb3>
     4a7:	00 05 00 b5 1d 00    	add    BYTE PTR [rip+0x1db500],al        # 1db9ad <__FRAME_END__+0x1db1b9>
     4ad:	00 05 00 f9 0f 00    	add    BYTE PTR [rip+0xff900],al        # ffdb3 <__FRAME_END__+0xff5bf>
     4b3:	00 05 00 37 48 00    	add    BYTE PTR [rip+0x483700],al        # 483bb9 <_end+0x282ba1>
     4b9:	00 05 00 cc 00 00    	add    BYTE PTR [rip+0xcc00],al        # d0bf <__FRAME_END__+0xc8cb>
     4bf:	00 05 00 e8 48 00    	add    BYTE PTR [rip+0x48e800],al        # 48ecc5 <_end+0x28dcad>
     4c5:	00 05 00 7e 1c 00    	add    BYTE PTR [rip+0x1c7e00],al        # 1c82cb <__FRAME_END__+0x1c7ad7>
     4cb:	00 05 00 46 32 00    	add    BYTE PTR [rip+0x324600],al        # 324ad1 <_end+0x123ab9>
     4d1:	00 05 00 aa 1e 00    	add    BYTE PTR [rip+0x1eaa00],al        # 1eaed7 <__FRAME_END__+0x1ea6e3>
     4d7:	00 05 00 15 41 00    	add    BYTE PTR [rip+0x411500],al        # 4119dd <_end+0x2109c5>
     4dd:	00 05 00 c4 44 00    	add    BYTE PTR [rip+0x44c400],al        # 44c8e3 <_end+0x24b8cb>
     4e3:	00 05 00 be 06 00    	add    BYTE PTR [rip+0x6be00],al        # 6c2e9 <__FRAME_END__+0x6baf5>
     4e9:	00 05 00 94 4d 00    	add    BYTE PTR [rip+0x4d9400],al        # 4d98ef <_end+0x2d88d7>
     4ef:	00 05 00 7f 28 00    	add    BYTE PTR [rip+0x287f00],al        # 2883f5 <_end+0x873dd>
     4f5:	00 05 00 f9 45 00    	add    BYTE PTR [rip+0x45f900],al        # 45fdfb <_end+0x25ede3>
     4fb:	00 05 00 eb 07 00    	add    BYTE PTR [rip+0x7eb00],al        # 7f001 <__FRAME_END__+0x7e80d>
     501:	00 05 00 04 24 00    	add    BYTE PTR [rip+0x240400],al        # 240907 <_end+0x3f8ef>
     507:	00 05 00 4a 03 00    	add    BYTE PTR [rip+0x34a00],al        # 34f0d <__FRAME_END__+0x34719>
     50d:	00 05 00 f3 1e 00    	add    BYTE PTR [rip+0x1ef300],al        # 1ef813 <__FRAME_END__+0x1ef01f>
     513:	00 05 00 50 29 00    	add    BYTE PTR [rip+0x295000],al        # 295519 <_end+0x94501>
     519:	00 05 00 f4 46 00    	add    BYTE PTR [rip+0x46f400],al        # 46f91f <_end+0x26e907>
     51f:	00 05 00 2b 4b 00    	add    BYTE PTR [rip+0x4b2b00],al        # 4b3025 <_end+0x2b200d>
     525:	00 05 00 7c 1a 00    	add    BYTE PTR [rip+0x1a7c00],al        # 1a812b <__FRAME_END__+0x1a7937>
     52b:	00 05 00 72 25 00    	add    BYTE PTR [rip+0x257200],al        # 257731 <_end+0x56719>
     531:	00 05 00 22 4c 00    	add    BYTE PTR [rip+0x4c2200],al        # 4c2737 <_end+0x2c171f>
     537:	00 05 00 c6 01 00    	add    BYTE PTR [rip+0x1c600],al        # 1cb3d <__FRAME_END__+0x1c349>
     53d:	00 05 00 c0 0a 00    	add    BYTE PTR [rip+0xac000],al        # ac543 <__FRAME_END__+0xabd4f>
     543:	00 05 00 77 45 00    	add    BYTE PTR [rip+0x457700],al        # 457c49 <_end+0x256c31>
     549:	00 05 00 9a 14 00    	add    BYTE PTR [rip+0x149a00],al        # 149f4f <__FRAME_END__+0x14975b>
     54f:	00 05 00 31 2b 00    	add    BYTE PTR [rip+0x2b3100],al        # 2b3655 <_end+0xb263d>
     555:	00 05 00 f1 08 00    	add    BYTE PTR [rip+0x8f100],al        # 8f65b <__FRAME_END__+0x8ee67>
     55b:	00 05 00 d4 32 00    	add    BYTE PTR [rip+0x32d400],al        # 32d961 <_end+0x12c949>
     561:	00 05 00 84 2a 00    	add    BYTE PTR [rip+0x2a8400],al        # 2a8967 <_end+0xa794f>
     567:	00 05 00 9a 15 00    	add    BYTE PTR [rip+0x159a00],al        # 159f6d <__FRAME_END__+0x159779>
     56d:	00 05 00 b7 4b 00    	add    BYTE PTR [rip+0x4bb700],al        # 4bbc73 <_end+0x2bac5b>
     573:	00 05 00 c1 4d 00    	add    BYTE PTR [rip+0x4dc100],al        # 4dc679 <_end+0x2db661>
     579:	00 05 00 b9 3b 00    	add    BYTE PTR [rip+0x3bb900],al        # 3bbe7f <_end+0x1bae67>
     57f:	00 05 00 5a 1e 00    	add    BYTE PTR [rip+0x1e5a00],al        # 1e5f85 <__FRAME_END__+0x1e5791>
     585:	00 05 00 6b 0a 00    	add    BYTE PTR [rip+0xa6b00],al        # a708b <__FRAME_END__+0xa6897>
     58b:	00 05 00 74 2b 00    	add    BYTE PTR [rip+0x2b7400],al        # 2b7991 <_end+0xb6979>
     591:	00 05 00 d8 14 00    	add    BYTE PTR [rip+0x14d800],al        # 14dd97 <__FRAME_END__+0x14d5a3>
     597:	00 05 00 2d 4d 00    	add    BYTE PTR [rip+0x4d2d00],al        # 4d329d <_end+0x2d2285>
     59d:	00 05 00 4c 2c 00    	add    BYTE PTR [rip+0x2c4c00],al        # 2c51a3 <_end+0xc418b>
     5a3:	00 05 00 6a 36 00    	add    BYTE PTR [rip+0x366a00],al        # 366fa9 <_end+0x165f91>
     5a9:	00 05 00 7b 02 00    	add    BYTE PTR [rip+0x27b00],al        # 280af <__FRAME_END__+0x278bb>
     5af:	00 05 00 ef 24 00    	add    BYTE PTR [rip+0x24ef00],al        # 24f4b5 <_end+0x4e49d>
     5b5:	00 05 00 21 1e 00    	add    BYTE PTR [rip+0x1e2100],al        # 1e26bb <__FRAME_END__+0x1e1ec7>
     5bb:	00 05 00 a5 0a 00    	add    BYTE PTR [rip+0xaa500],al        # aaac1 <__FRAME_END__+0xaa2cd>
     5c1:	00 05 00 84 23 00    	add    BYTE PTR [rip+0x238400],al        # 2389c7 <_end+0x379af>
     5c7:	00 05 00 c7 4a 00    	add    BYTE PTR [rip+0x4ac700],al        # 4acccd <_end+0x2abcb5>
     5cd:	00 05 00 2b 1b 00    	add    BYTE PTR [rip+0x1b2b00],al        # 1b30d3 <__FRAME_END__+0x1b28df>
     5d3:	00 05 00 e7 4b 00    	add    BYTE PTR [rip+0x4be700],al        # 4becd9 <_end+0x2bdcc1>
     5d9:	00 05 00 b0 29 00    	add    BYTE PTR [rip+0x29b000],al        # 29b5df <_end+0x9a5c7>
     5df:	00 05 00 98 33 00    	add    BYTE PTR [rip+0x339800],al        # 339de5 <_end+0x138dcd>
     5e5:	00 05 00 de 2d 00    	add    BYTE PTR [rip+0x2dde00],al        # 2de3eb <_end+0xdd3d3>
     5eb:	00 05 00 6a 0f 00    	add    BYTE PTR [rip+0xf6a00],al        # f6ff1 <__FRAME_END__+0xf67fd>
     5f1:	00 05 00 9c 00 00    	add    BYTE PTR [rip+0x9c00],al        # a1f7 <__FRAME_END__+0x9a03>
     5f7:	00 05 00 d9 10 00    	add    BYTE PTR [rip+0x10d900],al        # 10defd <__FRAME_END__+0x10d709>
{
     5fd:	00 05 00 68 4d 00    	add    BYTE PTR [rip+0x4d6800],al        # 4d6e03 <_end+0x2d5deb>
     603:	00 05 00 53 0c 00    	add    BYTE PTR [rip+0xc5300],al        # c5909 <__FRAME_END__+0xc5115>
	a = 1;
     609:	00 05 00 fe 44 00    	add    BYTE PTR [rip+0x44fe00],al        # 45040f <_end+0x24f3f7>
	b = 9;
     60f:	00 05 00 4a 1a 00    	add    BYTE PTR [rip+0x1a4a00],al        # 1a5015 <__FRAME_END__+0x1a4821>
	c = a + b;
     615:	00 05 00 b5 00 00    	add    BYTE PTR [rip+0xb500],al        # bb1b <__FRAME_END__+0xb327>
     61b:	00 05 00 ac 32 00    	add    BYTE PTR [rip+0x32ac00],al        # 32b221 <_end+0x12a209>
     621:	00 05 00 e3 1d 00    	add    BYTE PTR [rip+0x1de300],al        # 1de927 <__FRAME_END__+0x1de133>
     627:	00 05 00 39 26 00    	add    BYTE PTR [rip+0x263900],al        # 263f2d <_end+0x62f15>
     62d:	00 05 00 5d 06 00    	add    BYTE PTR [rip+0x65d00],al        # 66333 <__FRAME_END__+0x65b3f>
     633:	00 05 00 8f 3a 00    	add    BYTE PTR [rip+0x3a8f00],al        # 3a9539 <_end+0x1a8521>
     639:	00 05 00 5e 4a 00    	add    BYTE PTR [rip+0x4a5e00],al        # 4a643f <_end+0x2a5427>
     63f:	00 05 00 8b 1f 00    	add    BYTE PTR [rip+0x1f8b00],al        # 1f9145 <__FRAME_END__+0x1f8951>
     645:	00 05 00 4d 15 00    	add    BYTE PTR [rip+0x154d00],al        # 15534b <__FRAME_END__+0x154b57>
     64b:	00 05 00 2a 00 00    	add    BYTE PTR [rip+0x2a00],al        # 3051 <__FRAME_END__+0x285d>
     651:	00 05 00 19 17 00    	add    BYTE PTR [rip+0x171900],al        # 171f57 <__FRAME_END__+0x171763>
     657:	00 05 00 43 1b 00    	add    BYTE PTR [rip+0x1b4300],al        # 1b495d <__FRAME_END__+0x1b4169>
     65d:	00 05 00 bd 10 00    	add    BYTE PTR [rip+0x10bd00],al        # 10c363 <__FRAME_END__+0x10bb6f>
     663:	00 05 00 48 2d 00    	add    BYTE PTR [rip+0x2d4800],al        # 2d4e69 <_end+0xd3e51>
     669:	00 05 00 c6 13 00    	add    BYTE PTR [rip+0x13c600],al        # 13cc6f <__FRAME_END__+0x13c47b>
     66f:	00 05 00 a7 19 00    	add    BYTE PTR [rip+0x19a700],al        # 19ad75 <__FRAME_END__+0x19a581>
     675:	00 05 00 fc 4a 00    	add    BYTE PTR [rip+0x4afc00],al        # 4b027b <_end+0x2af263>
     67b:	00 05 00 05 0e 00    	add    BYTE PTR [rip+0xe0500],al        # e0b81 <__FRAME_END__+0xe038d>
     681:	00 05 00 c2 19 00    	add    BYTE PTR [rip+0x19c200],al        # 19c887 <__FRAME_END__+0x19c093>
     687:	00 05 00 73 38 00    	add    BYTE PTR [rip+0x387300],al        # 38798d <_end+0x186975>
     68d:	00 05 00 a9 47 00    	add    BYTE PTR [rip+0x47a900],al        # 47af93 <_end+0x279f7b>
     693:	00 05 00 f9 4c 00    	add    BYTE PTR [rip+0x4cf900],al        # 4cff99 <_end+0x2cef81>
     699:	00 05 00 44 1f 00    	add    BYTE PTR [rip+0x1f4400],al        # 1f4a9f <__FRAME_END__+0x1f42ab>
     69f:	00 05 00 e1 0d 00    	add    BYTE PTR [rip+0xde100],al        # de7a5 <__FRAME_END__+0xddfb1>
     6a5:	00 05 00 b3 24 00    	add    BYTE PTR [rip+0x24b300],al        # 24b9ab <_end+0x4a993>
     6ab:	00 05 00 a1 24 00    	add    BYTE PTR [rip+0x24a100],al        # 24a7b1 <_end+0x49799>
     6b1:	00 05 00 3c 35 00    	add    BYTE PTR [rip+0x353c00],al        # 3542b7 <_end+0x15329f>
     6b7:	00 05 00 63 34 00    	add    BYTE PTR [rip+0x346300],al        # 3469bd <_end+0x1459a5>
     6bd:	00 05 00 4c 01 00    	add    BYTE PTR [rip+0x14c00],al        # 152c3 <__FRAME_END__+0x14acf>
     6c3:	00 05 00 1c 4a 00    	add    BYTE PTR [rip+0x4a1c00],al        # 4a22c9 <_end+0x2a12b1>
     6c9:	00 05 00 27 03 00    	add    BYTE PTR [rip+0x32700],al        # 32dcf <__FRAME_END__+0x325db>
     6cf:	00 05 00 e6 03 00    	add    BYTE PTR [rip+0x3e600],al        # 3ecd5 <__FRAME_END__+0x3e4e1>
     6d5:	00 05 00 86 27 00    	add    BYTE PTR [rip+0x278600],al        # 278cdb <_end+0x77cc3>
     6db:	00 05 00 a2 1c 00    	add    BYTE PTR [rip+0x1ca200],al        # 1ca8e1 <__FRAME_END__+0x1ca0ed>
     6e1:	00 05 00 ef 13 00    	add    BYTE PTR [rip+0x13ef00],al        # 13f5e7 <__FRAME_END__+0x13edf3>
     6e7:	00 05 00 df 1f 00    	add    BYTE PTR [rip+0x1fdf00],al        # 1fe5ed <__FRAME_END__+0x1fddf9>
     6ed:	00 05 00 c3 0c 00    	add    BYTE PTR [rip+0xcc300],al        # cc9f3 <__FRAME_END__+0xcc1ff>
     6f3:	00 05 00 d9 46 00    	add    BYTE PTR [rip+0x46d900],al        # 46dff9 <_end+0x26cfe1>
     6f9:	00 05 00 e5 3a 00    	add    BYTE PTR [rip+0x3ae500],al        # 3aebff <_end+0x1adbe7>
     6ff:	00 05 00 67 0e 00    	add    BYTE PTR [rip+0xe6700],al        # e6e05 <__FRAME_END__+0xe6611>
     705:	00 05 00 be 0f 00    	add    BYTE PTR [rip+0xfbe00],al        # fc50b <__FRAME_END__+0xfbd17>
     70b:	00 05 00 19 19 00    	add    BYTE PTR [rip+0x191900],al        # 192011 <__FRAME_END__+0x19181d>
     711:	00 05 00 04 20 00    	add    BYTE PTR [rip+0x200400],al        # 200b17 <__FRAME_END__+0x200323>
     717:	00 05 00 57 25 00    	add    BYTE PTR [rip+0x255700],al        # 255e1d <_end+0x54e05>
     71d:	00 05 00 63 44 00    	add    BYTE PTR [rip+0x446300],al        # 446a23 <_end+0x245a0b>
     723:	00 05 00 a7 20 00    	add    BYTE PTR [rip+0x20a700],al        # 20ae29 <_end+0x9e11>
     729:	00 05 00 1f 33 00    	add    BYTE PTR [rip+0x331f00],al        # 33262f <_end+0x131617>
     72f:	00 05 00 0b 01 00    	add    BYTE PTR [rip+0x10b00],al        # 11235 <__FRAME_END__+0x10a41>
     735:	00 05 00 a7 4c 00    	add    BYTE PTR [rip+0x4ca700],al        # 4cae3b <_end+0x2c9e23>
     73b:	00 05 00 0e 18 00    	add    BYTE PTR [rip+0x180e00],al        # 181541 <__FRAME_END__+0x180d4d>
     741:	00 05 00 f6 34 00    	add    BYTE PTR [rip+0x34f600],al        # 34fd47 <_end+0x14ed2f>
     747:	00 05 00 64 28 00    	add    BYTE PTR [rip+0x286400],al        # 286b4d <_end+0x85b35>
     74d:	00 05 00 c9 2d 00    	add    BYTE PTR [rip+0x2dc900],al        # 2dd053 <_end+0xdc03b>
     753:	00 05 00 d4 40 00    	add    BYTE PTR [rip+0x40d400],al        # 40db59 <_end+0x20cb41>
     759:	00 05 00 26 18 00    	add    BYTE PTR [rip+0x182600],al        # 182d5f <__FRAME_END__+0x18256b>
     75f:	00 05 00 64 10 00    	add    BYTE PTR [rip+0x106400],al        # 106b65 <__FRAME_END__+0x106371>
     765:	00 05 00 03 23 00    	add    BYTE PTR [rip+0x230300],al        # 230a6b <_end+0x2fa53>
     76b:	00 05 00 b4 08 00    	add    BYTE PTR [rip+0x8b400],al        # 8bb71 <__FRAME_END__+0x8b37d>
     771:	00 05 00 25 28 00    	add    BYTE PTR [rip+0x282500],al        # 282c77 <_end+0x81c5f>
     777:	00 05 00 7e 4d 00    	add    BYTE PTR [rip+0x4d7e00],al        # 4d857d <_end+0x2d7565>
     77d:	00 05 00 26 40 00    	add    BYTE PTR [rip+0x402600],al        # 402d83 <_end+0x201d6b>
     783:	00 05 00 4d 34 00    	add    BYTE PTR [rip+0x344d00],al        # 345489 <_end+0x144471>
     789:	00 05 00 d0 4b 00    	add    BYTE PTR [rip+0x4bd000],al        # 4bd78f <_end+0x2bc777>
     78f:	00 05 00 30 16 00    	add    BYTE PTR [rip+0x163000],al        # 163795 <__FRAME_END__+0x162fa1>
     795:	00 05 00 ac 01 00    	add    BYTE PTR [rip+0x1ac00],al        # 1b39b <__FRAME_END__+0x1aba7>
     79b:	00 05 00 6b 00 00    	add    BYTE PTR [rip+0x6b00],al        # 72a1 <__FRAME_END__+0x6aad>
     7a1:	00 05 00 83 17 00    	add    BYTE PTR [rip+0x178300],al        # 178aa7 <__FRAME_END__+0x1782b3>
     7a7:	00 05 00 0f 12 00    	add    BYTE PTR [rip+0x120f00],al        # 1216ad <__FRAME_END__+0x120eb9>
     7ad:	00 05 00 38 30 00    	add    BYTE PTR [rip+0x303800],al        # 303fb3 <_end+0x102f9b>
     7b3:	00 05 00 23 35 00    	add    BYTE PTR [rip+0x352300],al        # 352ab9 <_end+0x151aa1>
     7b9:	00 05 00 ae 48 00    	add    BYTE PTR [rip+0x48ae00],al        # 48b5bf <_end+0x28a5a7>
     7bf:	00 05 00 ee 12 00    	add    BYTE PTR [rip+0x12ee00],al        # 12f5c5 <__FRAME_END__+0x12edd1>
     7c5:	00 05 00 6e 46 00    	add    BYTE PTR [rip+0x466e00],al        # 4675cb <_end+0x2665b3>
     7cb:	00 05 00 83 33 00    	add    BYTE PTR [rip+0x338300],al        # 338ad1 <_end+0x137ab9>
     7d1:	00 05 00 b6 3c 00    	add    BYTE PTR [rip+0x3cb600],al        # 3cbdd7 <_end+0x1cadbf>
     7d7:	00 05 00 ed 23 00    	add    BYTE PTR [rip+0x23ed00],al        # 23f4dd <_end+0x3e4c5>
     7dd:	00 05 00 51 1d 00    	add    BYTE PTR [rip+0x1d5100],al        # 1d58e3 <__FRAME_END__+0x1d50ef>
     7e3:	00 05 00 8c 0f 00    	add    BYTE PTR [rip+0xf8c00],al        # f93e9 <__FRAME_END__+0xf8bf5>
     7e9:	00 05 00 93 2d 00    	add    BYTE PTR [rip+0x2d9300],al        # 2d9aef <_end+0xd8ad7>
     7ef:	00 05 00 fc 1d 00    	add    BYTE PTR [rip+0x1dfc00],al        # 1e03f5 <__FRAME_END__+0x1dfc01>
     7f5:	00 05 00 91 02 00    	add    BYTE PTR [rip+0x29100],al        # 298fb <__FRAME_END__+0x29107>
     7fb:	00 05 00 1f 10 00    	add    BYTE PTR [rip+0x101f00],al        # 102701 <__FRAME_END__+0x101f0d>
     801:	00 05 00 ca 1b 00    	add    BYTE PTR [rip+0x1bca00],al        # 1bd207 <__FRAME_END__+0x1bca13>
     807:	00 05 00 13 24 00    	add    BYTE PTR [rip+0x241300],al        # 241b0d <_end+0x40af5>
     80d:	00 05 00 12 3d 00    	add    BYTE PTR [rip+0x3d1200],al        # 3d1a13 <_end+0x1d09fb>
     813:	00 05 00 3f 31 00    	add    BYTE PTR [rip+0x313f00],al        # 314719 <_end+0x113701>
     819:	00 05 00 44 44 00    	add    BYTE PTR [rip+0x444400],al        # 444c1f <_end+0x243c07>
     81f:	00 05 00 5f 16 00    	add    BYTE PTR [rip+0x165f00],al        # 166725 <__FRAME_END__+0x165f31>
     825:	00 05 00 83 24 00    	add    BYTE PTR [rip+0x248300],al        # 248b2b <_end+0x47b13>
     82b:	00 05 00 07 40 00    	add    BYTE PTR [rip+0x400700],al        # 400f31 <_end+0x1fff19>
     831:	00 05 00 6e 01 00    	add    BYTE PTR [rip+0x16e00],al        # 17637 <__FRAME_END__+0x16e43>
     837:	00 05 00 d1 3b 00    	add    BYTE PTR [rip+0x3bd100],al        # 3bd93d <_end+0x1bc925>
     83d:	00 05 00 f6 27 00    	add    BYTE PTR [rip+0x27f600],al        # 27fe43 <_end+0x7ee2b>
     843:	00 05 00 73 4c 00    	add    BYTE PTR [rip+0x4c7300],al        # 4c7b49 <_end+0x2c6b31>
     849:	00 05 00 4e 48 00    	add    BYTE PTR [rip+0x484e00],al        # 48564f <_end+0x284637>
     84f:	00 05 00 3f 0d 00    	add    BYTE PTR [rip+0xd3f00],al        # d4755 <__FRAME_END__+0xd3f61>
     855:	00 05 00 f9 2c 00    	add    BYTE PTR [rip+0x2cf900],al        # 2d015b <_end+0xcf143>
     85b:	00 05 00 58 04 00    	add    BYTE PTR [rip+0x45800],al        # 46061 <__FRAME_END__+0x4586d>
     861:	00 05 00 5e 17 00    	add    BYTE PTR [rip+0x175e00],al        # 176667 <__FRAME_END__+0x175e73>
     867:	00 05 00 36 4a 00    	add    BYTE PTR [rip+0x4a3600],al        # 4a3e6d <_end+0x2a2e55>
     86d:	00 05 00 ec 1a 00    	add    BYTE PTR [rip+0x1aec00],al        # 1af473 <__FRAME_END__+0x1aec7f>
     873:	00 05 00 69 2b 00    	add    BYTE PTR [rip+0x2b6900],al        # 2b7179 <_end+0xb6161>
     879:	00 05 00 f7 1f 00    	add    BYTE PTR [rip+0x1ff700],al        # 1fff7f <__FRAME_END__+0x1ff78b>
     87f:	00 05 00 c3 46 00    	add    BYTE PTR [rip+0x46c300],al        # 46cb85 <_end+0x26bb6d>
     885:	00 05 00 d6 23 00    	add    BYTE PTR [rip+0x23d600],al        # 23de8b <_end+0x3ce73>
     88b:	00 05 00 fc 48 00    	add    BYTE PTR [rip+0x48fc00],al        # 490491 <_end+0x28f479>
     891:	00 05 00 7e 15 00    	add    BYTE PTR [rip+0x157e00],al        # 158697 <__FRAME_END__+0x157ea3>
     897:	00 05 00 f0 26 00    	add    BYTE PTR [rip+0x26f000],al        # 26f89d <_end+0x6e885>
     89d:	00 05 00 00 40 00    	add    BYTE PTR [rip+0x400000],al        # 4008a3 <_end+0x1ff88b>
     8a3:	00 05 00 41 03 00    	add    BYTE PTR [rip+0x34100],al        # 349a9 <__FRAME_END__+0x341b5>
     8a9:	00 05 00 ea 17 00    	add    BYTE PTR [rip+0x17ea00],al        # 17f2af <__FRAME_END__+0x17eabb>
     8af:	00 05 00 8b 16 00    	add    BYTE PTR [rip+0x168b00],al        # 1693b5 <__FRAME_END__+0x168bc1>
     8b5:	00 05 00 4c 47 00    	add    BYTE PTR [rip+0x474c00],al        # 4754bb <_end+0x2744a3>
     8bb:	00 05 00 32 29 00    	add    BYTE PTR [rip+0x293200],al        # 293ac1 <_end+0x92aa9>
     8c1:	00 05 00 b7 41 00    	add    BYTE PTR [rip+0x41b700],al        # 41bfc7 <_end+0x21afaf>
     8c7:	00 05 00 bd 2f 00    	add    BYTE PTR [rip+0x2fbd00],al        # 2fc5cd <_end+0xfb5b5>
     8cd:	00 05 00 6e 39 00    	add    BYTE PTR [rip+0x396e00],al        # 3976d3 <_end+0x1966bb>
     8d3:	00 05 00 1b 3c 00    	add    BYTE PTR [rip+0x3c1b00],al        # 3c23d9 <_end+0x1c13c1>
     8d9:	00 05 00 b2 2f 00    	add    BYTE PTR [rip+0x2fb200],al        # 2fbadf <_end+0xfaac7>
     8df:	00 05 00 9a 23 00    	add    BYTE PTR [rip+0x239a00],al        # 23a2e5 <_end+0x392cd>
     8e5:	00 05 00 e5 36 00    	add    BYTE PTR [rip+0x36e500],al        # 36edeb <_end+0x16ddd3>
     8eb:	00 05 00 97 42 00    	add    BYTE PTR [rip+0x429700],al        # 429ff1 <_end+0x228fd9>
     8f1:	00 05 00 e7 36 00    	add    BYTE PTR [rip+0x36e700],al        # 36eff7 <_end+0x16dfdf>
     8f7:	00 05 00 4e 4a 00    	add    BYTE PTR [rip+0x4a4e00],al        # 4a56fd <_end+0x2a46e5>
     8fd:	00 05 00 81 0f 00    	add    BYTE PTR [rip+0xf8100],al        # f8a03 <__FRAME_END__+0xf820f>
     903:	00 05 00 50 4a 00    	add    BYTE PTR [rip+0x4a5000],al        # 4a5909 <_end+0x2a48f1>
     909:	00 05 00 7c 27 00    	add    BYTE PTR [rip+0x277c00],al        # 27850f <_end+0x774f7>
     90f:	00 05 00 9b 08 00    	add    BYTE PTR [rip+0x89b00],al        # 8a415 <__FRAME_END__+0x89c21>
     915:	00 00                	add    BYTE PTR [rax],al
     917:	04 00                	add    al,0x0
     919:	00 05 13 d5 02 00    	add    BYTE PTR [rip+0x2d513],al        # 2de32 <__FRAME_END__+0x2d63e>
     91f:	00 05 26 5b 46 00    	add    BYTE PTR [rip+0x465b26],al        # 46644b <_end+0x265433>
     925:	00 05 2e d3 18 00    	add    BYTE PTR [rip+0x18d32e],al        # 18dc59 <__FRAME_END__+0x18d465>
     92b:	00 05 3a 54 19 00    	add    BYTE PTR [rip+0x19543a],al        # 195d6b <__FRAME_END__+0x195577>
     931:	00 05 3d 2e 0a 00    	add    BYTE PTR [rip+0xa2e3d],al        # a3774 <__FRAME_END__+0xa2f80>
     937:	00 00                	add    BYTE PTR [rax],al
     939:	04 00                	add    al,0x0
     93b:	00 05 18 59 10 00    	add    BYTE PTR [rip+0x105918],al        # 106259 <__FRAME_END__+0x105a65>
     941:	00 05 1a d6 33 00    	add    BYTE PTR [rip+0x33d61a],al        # 33df61 <_end+0x13cf49>
     947:	00 00                	add    BYTE PTR [rax],al
     949:	04 00                	add    al,0x0
     94b:	00 05 13 e1 24 00    	add    BYTE PTR [rip+0x24e113],al        # 24ea64 <_end+0x4da4c>
     951:	00 06                	add    BYTE PTR [rsi],al
     953:	77 33                	ja     988 <__FRAME_END__+0x194>
     955:	49 00 00             	rex.WB add BYTE PTR [r8],al
     958:	06                   	(bad)  
     959:	78 44                	js     99f <__FRAME_END__+0x1ab>
     95b:	18 00                	sbb    BYTE PTR [rax],al
     95d:	00 06                	add    BYTE PTR [rsi],al
     95f:	79 01                	jns    962 <__FRAME_END__+0x16e>
     961:	18 00                	sbb    BYTE PTR [rax],al
     963:	00 06                	add    BYTE PTR [rsi],al
     965:	7a 70                	jp     9d7 <__FRAME_END__+0x1e3>
     967:	07                   	(bad)  
     968:	00 00                	add    BYTE PTR [rax],al
     96a:	06                   	(bad)  
     96b:	7b ed                	jnp    95a <__FRAME_END__+0x166>
     96d:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
     970:	06                   	(bad)  
     971:	7c 80                	jl     8f3 <__FRAME_END__+0xff>
     973:	34 00                	xor    al,0x0
     975:	00 06                	add    BYTE PTR [rsi],al
     977:	7d 53                	jge    9cc <__FRAME_END__+0x1d8>
     979:	23 00                	and    eax,DWORD PTR [rax]
     97b:	00 06                	add    BYTE PTR [rsi],al
     97d:	7e 09                	jle    988 <__FRAME_END__+0x194>
     97f:	13 00                	adc    eax,DWORD PTR [rax]
     981:	00 06                	add    BYTE PTR [rsi],al
     983:	7f 67                	jg     9ec <__FRAME_END__+0x1f8>
     985:	38 00                	cmp    BYTE PTR [rax],al
     987:	00 06                	add    BYTE PTR [rsi],al
     989:	80 01 88             	add    BYTE PTR [rcx],0x88
     98c:	44 00 00             	add    BYTE PTR [rax],r8b
     98f:	06                   	(bad)  
     990:	81 01 dd 0c 00 00    	add    DWORD PTR [rcx],0xcdd
     996:	06                   	(bad)  
     997:	82                   	(bad)  
     998:	01 13                	add    DWORD PTR [rbx],edx
     99a:	30 00                	xor    BYTE PTR [rax],al
     99c:	00 06                	add    BYTE PTR [rsi],al
     99e:	83 01 94             	add    DWORD PTR [rcx],0xffffff94
     9a1:	3f                   	(bad)  
     9a2:	00 00                	add    BYTE PTR [rax],al
     9a4:	06                   	(bad)  
     9a5:	84 01                	test   BYTE PTR [rcx],al
     9a7:	e3 37                	jrcxz  9e0 <__FRAME_END__+0x1ec>
     9a9:	00 00                	add    BYTE PTR [rax],al
     9ab:	06                   	(bad)  
     9ac:	85 01                	test   DWORD PTR [rcx],eax
     9ae:	b4 26                	mov    ah,0x26
     9b0:	00 00                	add    BYTE PTR [rax],al
     9b2:	06                   	(bad)  
     9b3:	86 01                	xchg   BYTE PTR [rcx],al
     9b5:	b3 46                	mov    bl,0x46
     9b7:	00 00                	add    BYTE PTR [rax],al
     9b9:	06                   	(bad)  
     9ba:	87 01                	xchg   DWORD PTR [rcx],eax
     9bc:	92                   	xchg   edx,eax
     9bd:	05 00 00 06 88       	add    eax,0x88060000
     9c2:	01 8a 29 00 00 06    	add    DWORD PTR [rdx+0x6000029],ecx
     9c8:	89 01                	mov    DWORD PTR [rcx],eax
     9ca:	06                   	(bad)  
     9cb:	2a 00                	sub    al,BYTE PTR [rax]
     9cd:	00 06                	add    BYTE PTR [rsi],al
     9cf:	8a 01                	mov    al,BYTE PTR [rcx]
     9d1:	0f 0d 00             	prefetch BYTE PTR [rax]
     9d4:	00 06                	add    BYTE PTR [rsi],al
     9d6:	8b 01                	mov    eax,DWORD PTR [rcx]
     9d8:	89 41 00             	mov    DWORD PTR [rcx+0x0],eax
     9db:	00 06                	add    BYTE PTR [rsi],al
     9dd:	8c 01                	mov    WORD PTR [rcx],es
     9df:	f8                   	clc    
     9e0:	2a 00                	sub    al,BYTE PTR [rax]
     9e2:	00 06                	add    BYTE PTR [rsi],al
     9e4:	8d 01                	lea    eax,[rcx]
     9e6:	bc 17 00 00 06       	mov    esp,0x6000017
     9eb:	8e 01                	mov    es,WORD PTR [rcx]
     9ed:	55                   	push   rbp
     9ee:	05 00 00 05 93       	add    eax,0x93050000
     9f3:	01 99 12 00 00 05    	add    DWORD PTR [rcx+0x5000012],ebx
     9f9:	9e                   	sahf   
     9fa:	01 6c 04 00          	add    DWORD PTR [rsp+rax*1+0x0],ebp
     9fe:	00 05 ac 01 67 42    	add    BYTE PTR [rip+0x426701ac],al        # 42670bb0 <_end+0x4246fb98>
     a04:	00 00                	add    BYTE PTR [rax],al
     a06:	05 b0 01 56 22       	add    eax,0x225601b0
     a0b:	00 00                	add    BYTE PTR [rax],al
     a0d:	06                   	(bad)  
     a0e:	dc 01                	fadd   QWORD PTR [rcx]
     a10:	fc                   	cld    
     a11:	3a 00                	cmp    al,BYTE PTR [rax]
     a13:	00 05 dd 01 be 1a    	add    BYTE PTR [rip+0x1abe01dd],al        # 1abe0bf6 <_end+0x1a9dfbde>
     a19:	00 00                	add    BYTE PTR [rax],al
     a1b:	05 e3 01 e6 02       	add    eax,0x2e601e3
     a20:	00 00                	add    BYTE PTR [rax],al
     a22:	05 e9 01 9a 17       	add    eax,0x179a01e9
     a27:	00 00                	add    BYTE PTR [rax],al
     a29:	05 ef 01 2c 09       	add    eax,0x92c01ef
     a2e:	00 00                	add    BYTE PTR [rax],al
     a30:	05 84 02 f9 1c       	add    eax,0x1cf90284
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	06                   	(bad)  
     a38:	86 02                	xchg   BYTE PTR [rdx],al
     a3a:	b0 06                	mov    al,0x6
     a3c:	00 00                	add    BYTE PTR [rax],al
     a3e:	05 87 02 a2 43       	add    eax,0x43a20287
     a43:	00 00                	add    BYTE PTR [rax],al
     a45:	06                   	(bad)  
     a46:	88 02                	mov    BYTE PTR [rdx],al
     a48:	cf                   	iret   
     a49:	38 00                	cmp    BYTE PTR [rax],al
     a4b:	00 05 89 02 45 2a    	add    BYTE PTR [rip+0x2a450289],al        # 2a450cda <_end+0x2a24fcc2>
     a51:	00 00                	add    BYTE PTR [rax],al
     a53:	05 ac 02 64 2c       	add    eax,0x2c6402ac
     a58:	00 00                	add    BYTE PTR [rax],al
     a5a:	05 b0 02 1d 09       	add    eax,0x91d02b0
     a5f:	00 00                	add    BYTE PTR [rax],al
     a61:	05 b4 02 b3 28       	add    eax,0x28b302b4
     a66:	00 00                	add    BYTE PTR [rax],al
     a68:	05 b8 02 ff 07       	add    eax,0x7ff02b8
     a6d:	00 00                	add    BYTE PTR [rax],al
     a6f:	05 bc 02 4e 17       	add    eax,0x174e02bc
     a74:	00 00                	add    BYTE PTR [rax],al
     a76:	06                   	(bad)  
     a77:	bd 02 01 18 00       	mov    ebp,0x180102
     a7c:	00 05 be 02 2c 09    	add    BYTE PTR [rip+0x92c02be],al        # 92c0d40 <_end+0x90bfd28>
     a82:	00 00                	add    BYTE PTR [rax],al
     a84:	06                   	(bad)  
     a85:	bf 02 44 18 00       	mov    edi,0x184402
     a8a:	00 05 c0 02 9a 17    	add    BYTE PTR [rip+0x179a02c0],al        # 179a0d50 <_end+0x1779fd38>
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	05 c4 02 20 3a       	add    eax,0x3a2002c4
     a97:	00 00                	add    BYTE PTR [rax],al
     a99:	06                   	(bad)  
     a9a:	c5 02 00             	(bad)  
     a9d:	0d 00 00 05 c6       	or     eax,0xc6050000
     aa2:	02 56 0e             	add    dl,BYTE PTR [rsi+0xe]
     aa5:	00 00                	add    BYTE PTR [rax],al
     aa7:	05 f0 02 0b 47       	add    eax,0x470b02f0
     aac:	00 00                	add    BYTE PTR [rax],al
     aae:	05 f4 02 7f 07       	add    eax,0x77f02f4
     ab3:	00 00                	add    BYTE PTR [rax],al
     ab5:	05 83 03 ea 0c       	add    eax,0xcea0383
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	05 8b 03 ee 18       	add    eax,0x18ee038b
     ac1:	00 00                	add    BYTE PTR [rax],al
     ac3:	06                   	(bad)  
     ac4:	9a                   	(bad)  
     ac5:	03 db                	add    ebx,ebx
     ac7:	07                   	(bad)  
     ac8:	00 00                	add    BYTE PTR [rax],al
     aca:	05 9b 03 f5 28       	add    eax,0x28f5039b
     acf:	00 00                	add    BYTE PTR [rax],al
     ad1:	05 9f 03 7f 3c       	add    eax,0x3c7f039f
     ad6:	00 00                	add    BYTE PTR [rax],al
     ad8:	05 a0 03 9f 2f       	add    eax,0x2f9f03a0
     add:	00 00                	add    BYTE PTR [rax],al
     adf:	05 a2 03 f9 05       	add    eax,0x5f903a2
     ae4:	00 00                	add    BYTE PTR [rax],al
     ae6:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     ae9:	00 05 13 d7 03 00    	add    BYTE PTR [rip+0x3d713],al        # 3e202 <__FRAME_END__+0x3da0e>
     aef:	00 02                	add    BYTE PTR [rdx],al
     af1:	22 5f 5f             	and    bl,BYTE PTR [rdi+0x5f]
     af4:	50                   	push   rax
     af5:	00 06                	add    BYTE PTR [rsi],al
     af7:	23 57 27             	and    edx,DWORD PTR [rdi+0x27]
     afa:	00 00                	add    BYTE PTR [rax],al
     afc:	05 2a 21 30 00       	add    eax,0x30212a
     b01:	00 05 2b c2 41 00    	add    BYTE PTR [rip+0x41c22b],al        # 41cd32 <_end+0x21bd1a>
     b07:	00 05 37 df 38 00    	add    BYTE PTR [rip+0x38df37],al        # 38ea44 <_end+0x18da2c>
     b0d:	00 05 38 8f 4b 00    	add    BYTE PTR [rip+0x4b8f38],al        # 4b9a4b <_end+0x2b8a33>
     b13:	00 05 39 54 0d 00    	add    BYTE PTR [rip+0xd5439],al        # d5f52 <__FRAME_END__+0xd575e>
     b19:	00 05 3a 42 08 00    	add    BYTE PTR [rip+0x8423a],al        # 84d59 <__FRAME_END__+0x84565>
     b1f:	00 05 59 34 14 00    	add    BYTE PTR [rip+0x143459],al        # 143f7e <__FRAME_END__+0x14378a>
     b25:	00 05 5e 26 3c 00    	add    BYTE PTR [rip+0x3c265e],al        # 3c3189 <_end+0x1c2171>
     b2b:	00 05 5f 57 14 00    	add    BYTE PTR [rip+0x14575f],al        # 146290 <__FRAME_END__+0x145a9c>
     b31:	00 05 64 cd 30 00    	add    BYTE PTR [rip+0x30cd64],al        # 30d89b <_end+0x10c883>
     b37:	00 05 65 c5 32 00    	add    BYTE PTR [rip+0x32c565],al        # 32d0a2 <_end+0x12c08a>
     b3d:	00 05 68 10 0a 00    	add    BYTE PTR [rip+0xa1068],al        # a1bab <__FRAME_END__+0xa13b7>
     b43:	00 05 70 6f 19 00    	add    BYTE PTR [rip+0x196f70],al        # 197ab9 <__FRAME_END__+0x1972c5>
     b49:	00 05 71 ec 45 00    	add    BYTE PTR [rip+0x45ec71],al        # 45f7c0 <_end+0x25e7a8>
     b4f:	00 05 76 40 2f 00    	add    BYTE PTR [rip+0x2f4076],al        # 2f4bcb <_end+0xf3bb3>
     b55:	00 05 77 b0 2b 00    	add    BYTE PTR [rip+0x2bb077],al        # 2bbbd2 <_end+0xbabba>
     b5b:	00 05 7a 5c 32 00    	add    BYTE PTR [rip+0x325c7a],al        # 3267db <_end+0x1257c3>
     b61:	00 05 7c 75 3b 00    	add    BYTE PTR [rip+0x3b757c],al        # 3b80e3 <_end+0x1b70cb>
     b67:	00 05 7d 5f 48 00    	add    BYTE PTR [rip+0x485f7d],al        # 486aea <_end+0x285ad2>
     b6d:	00 05 8a 01 6e 02    	add    BYTE PTR [rip+0x26e018a],al        # 26e0cfd <_end+0x24dfce5>
     b73:	00 00                	add    BYTE PTR [rax],al
     b75:	05 8b 01 12 29       	add    eax,0x2912018b
     b7a:	00 00                	add    BYTE PTR [rax],al
     b7c:	05 a9 01 41 20       	add    eax,0x204101a9
     b81:	00 00                	add    BYTE PTR [rax],al
     b83:	05 b0 01 16 38       	add    eax,0x381601b0
     b88:	00 00                	add    BYTE PTR [rax],al
     b8a:	05 b2 01 71 13       	add    eax,0x137101b2
     b8f:	00 00                	add    BYTE PTR [rax],al
     b91:	05 b5 01 e1 49       	add    eax,0x49e101b5
     b96:	00 00                	add    BYTE PTR [rax],al
     b98:	05 b6 01 66 3e       	add    eax,0x3e6601b6
     b9d:	00 00                	add    BYTE PTR [rax],al
     b9f:	05 cb 01 64 37       	add    eax,0x376401cb
     ba4:	00 00                	add    BYTE PTR [rax],al
     ba6:	05 d3 01 a5 3f       	add    eax,0x3fa501d3
     bab:	00 00                	add    BYTE PTR [rax],al
     bad:	05 dd 01 ae 39       	add    eax,0x39ae01dd
     bb2:	00 00                	add    BYTE PTR [rax],al
     bb4:	05 e4 01 25 05       	add    eax,0x52501e4
     bb9:	00 00                	add    BYTE PTR [rax],al
     bbb:	05 ed 01 60 11       	add    eax,0x116001ed
     bc0:	00 00                	add    BYTE PTR [rax],al
     bc2:	05 ee 01 a0 22       	add    eax,0x22a001ee
     bc7:	00 00                	add    BYTE PTR [rax],al
     bc9:	05 f6 01 0e 2d       	add    eax,0x2d0e01f6
     bce:	00 00                	add    BYTE PTR [rax],al
     bd0:	05 80 02 e2 30       	add    eax,0x30e20280
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	05 8d 02 e4 2b       	add    eax,0x2be4028d
     bdc:	00 00                	add    BYTE PTR [rax],al
     bde:	05 97 02 81 40       	add    eax,0x40810297
     be3:	00 00                	add    BYTE PTR [rax],al
     be5:	05 a0 02 8e 07       	add    eax,0x78e02a0
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	05 a8 02 8e 45       	add    eax,0x458e02a8
     bf1:	00 00                	add    BYTE PTR [rax],al
     bf3:	05 b1 02 b2 14       	add    eax,0x14b202b1
     bf8:	00 00                	add    BYTE PTR [rax],al
     bfa:	06                   	(bad)  
     bfb:	b9 02 1c 3e 00       	mov    ecx,0x3e1c02
     c00:	00 05 ba 02 ee 21    	add    BYTE PTR [rip+0x21ee02ba],al        # 21ee0ec0 <_end+0x21cdfea8>
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	05 c3 02 8e 11       	add    eax,0x118e02c3
     c0d:	00 00                	add    BYTE PTR [rax],al
     c0f:	05 d5 02 1c 0f       	add    eax,0xf1c02d5
     c14:	00 00                	add    BYTE PTR [rax],al
     c16:	05 d6 02 04 0c       	add    eax,0xc0402d6
     c1b:	00 00                	add    BYTE PTR [rax],al
     c1d:	05 df 02 5c 30       	add    eax,0x305c02df
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	05 e5 02 8c 1d       	add    eax,0x1d8c02e5
     c29:	00 00                	add    BYTE PTR [rax],al
     c2b:	05 e6 02 e5 04       	add    eax,0x4e502e6
     c30:	00 00                	add    BYTE PTR [rax],al
     c32:	05 fa 02 3f 40       	add    eax,0x403f02fa
     c37:	00 00                	add    BYTE PTR [rax],al
     c39:	05 89 03 24 04       	add    eax,0x4240389
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	05 8a 03 a3 2e       	add    eax,0x2ea3038a
     c45:	00 00                	add    BYTE PTR [rax],al
     c47:	05 a0 03 b2 36       	add    eax,0x36b203a0
     c4c:	00 00                	add    BYTE PTR [rax],al
     c4e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     c51:	00 05 04 40 4a 00    	add    BYTE PTR [rip+0x4a4004],al        # 4a4c5b <_end+0x2a3c43>
     c57:	00 05 0c df 4a 00    	add    BYTE PTR [rip+0x4adf0c],al        # 4aeb69 <_end+0x2adb51>
     c5d:	00 05 0e 6d 24 00    	add    BYTE PTR [rip+0x246d0e],al        # 247971 <_end+0x46959>
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	04 00                	add    al,0x0
     c67:	00 05 c2 03 39 37    	add    BYTE PTR [rip+0x373903c2],al        # 3739102f <_end+0x37190017>
     c6d:	00 00                	add    BYTE PTR [rax],al
     c6f:	05 c3 03 c7 05       	add    eax,0x5c703c3
     c74:	00 00                	add    BYTE PTR [rax],al
     c76:	05 c4 03 8d 21       	add    eax,0x218d03c4
     c7b:	00 00                	add    BYTE PTR [rax],al
     c7d:	05 c5 03 b3 37       	add    eax,0x37b303c5
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	05 c6 03 8d 0b       	add    eax,0xb8d03c6
     c89:	00 00                	add    BYTE PTR [rax],al
     c8b:	05 c8 03 da 3d       	add    eax,0x3dda03c8
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	05 c9 03 27 13       	add    eax,0x132703c9
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	05 d4 03 df 3c       	add    eax,0x3cdf03d4
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	05 d5 03 95 0d       	add    eax,0xd9503d5
     ca5:	00 00                	add    BYTE PTR [rax],al
     ca7:	05 e7 03 e1 16       	add    eax,0x16e103e7
     cac:	00 00                	add    BYTE PTR [rax],al
     cae:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     cb1:	00 05 0a f2 3b 00    	add    BYTE PTR [rip+0x3bf20a],al        # 3bfec1 <_end+0x1beea9>
     cb7:	00 05 0b 13 08 00    	add    BYTE PTR [rip+0x8130b],al        # 81fc8 <__FRAME_END__+0x817d4>
     cbd:	00 05 0c 31 15 00    	add    BYTE PTR [rip+0x15310c],al        # 153dcf <__FRAME_END__+0x1535db>
     cc3:	00 05 0d 71 08 00    	add    BYTE PTR [rip+0x8710d],al        # 87dd6 <__FRAME_END__+0x875e2>
     cc9:	00 05 0e 66 1a 00    	add    BYTE PTR [rip+0x1a660e],al        # 1a72dd <__FRAME_END__+0x1a6ae9>
     ccf:	00 05 0f 3e 34 00    	add    BYTE PTR [rip+0x343e0f],al        # 344ae4 <_end+0x143acc>
     cd5:	00 05 10 b1 15 00    	add    BYTE PTR [rip+0x15b110],al        # 15bdeb <__FRAME_END__+0x15b5f7>
     cdb:	00 05 11 59 4d 00    	add    BYTE PTR [rip+0x4d5911],al        # 4d65f2 <_end+0x2d55da>
     ce1:	00 05 12 37 19 00    	add    BYTE PTR [rip+0x193712],al        # 1943f9 <__FRAME_END__+0x193c05>
     ce7:	00 05 13 0f 48 00    	add    BYTE PTR [rip+0x480f13],al        # 481c00 <_end+0x280be8>
     ced:	00 05 14 e8 0f 00    	add    BYTE PTR [rip+0xfe814],al        # ff507 <__FRAME_END__+0xfed13>
     cf3:	00 05 15 fe 09 00    	add    BYTE PTR [rip+0x9fe15],al        # a0b0e <__FRAME_END__+0xa031a>
     cf9:	00 05 16 69 4b 00    	add    BYTE PTR [rip+0x4b6916],al        # 4b7615 <_end+0x2b65fd>
     cff:	00 05 17 cc 16 00    	add    BYTE PTR [rip+0x16cc17],al        # 16d91c <__FRAME_END__+0x16d128>
     d05:	00 00                	add    BYTE PTR [rax],al
     d07:	04 00                	add    al,0x0
     d09:	00 06                	add    BYTE PTR [rsi],al
     d0b:	25 0c 2b 00 00       	and    eax,0x2b0c
     d10:	05 2a f8 11 00       	add    eax,0x11f82a
     d15:	00 06                	add    BYTE PTR [rsi],al
     d17:	2f                   	(bad)  
     d18:	c9                   	leave  
     d19:	43 00 00             	rex.XB add BYTE PTR [r8],al
     d1c:	05 33 ef 47 00       	add    eax,0x47ef33
     d21:	00 06                	add    BYTE PTR [rsi],al
     d23:	38 ef                	cmp    bh,ch
     d25:	36 00 00             	add    BYTE PTR ss:[rax],al
     d28:	05 3c 65 47 00       	add    eax,0x47653c
     d2d:	00 06                	add    BYTE PTR [rsi],al
     d2f:	41 a3 0c 00 00 05 45 	rex.B movabs ds:0x3a4a450500000c,eax
     d36:	4a 3a 00 
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	04 00                	add    al,0x0
     d3d:	00 05 1f 31 2f 00    	add    BYTE PTR [rip+0x2f311f],al        # 2f3e62 <_end+0xf2e4a>
     d43:	00 05 20 50 06 00    	add    BYTE PTR [rip+0x65020],al        # 65d69 <__FRAME_END__+0x65575>
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	04 00                	add    al,0x0
     d4d:	00 05 bb 01 75 26    	add    BYTE PTR [rip+0x267501bb],al        # 26750f0e <_end+0x2654fef6>
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	05 bc 01 14 21       	add    eax,0x211401bc
     d5a:	00 00                	add    BYTE PTR [rax],al
     d5c:	05 bd 01 61 0f       	add    eax,0xf6101bd
     d61:	00 00                	add    BYTE PTR [rax],al
     d63:	05 be 01 7c 16       	add    eax,0x167c01be
     d68:	00 00                	add    BYTE PTR [rax],al
     d6a:	05 bf 01 cc 0e       	add    eax,0xecc01bf
     d6f:	00 00                	add    BYTE PTR [rax],al
     d71:	05 c0 01 fc 0d       	add    eax,0xdfc01c0
     d76:	00 00                	add    BYTE PTR [rax],al
     d78:	05 c1 01 f3 20       	add    eax,0x20f301c1
     d7d:	00 00                	add    BYTE PTR [rax],al
     d7f:	05 c2 01 de 0f       	add    eax,0xfde01c2
     d84:	00 00                	add    BYTE PTR [rax],al
     d86:	05 c3 01 da 0f       	add    eax,0xfda01c3
     d8b:	00 00                	add    BYTE PTR [rax],al
     d8d:	05 c4 01 f7 10       	add    eax,0x10f701c4
     d92:	00 00                	add    BYTE PTR [rax],al
     d94:	05 c5 01 44 00       	add    eax,0x4401c5
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	05 c6 01 f3 10       	add    eax,0x10f301c6
     da0:	00 00                	add    BYTE PTR [rax],al
     da2:	05 c7 01 cd 08       	add    eax,0x8cd01c7
     da7:	00 00                	add    BYTE PTR [rax],al
     da9:	05 c8 01 92 2e       	add    eax,0x2e9201c8
     dae:	00 00                	add    BYTE PTR [rax],al
     db0:	05 c9 01 5d 0f       	add    eax,0xf5d01c9
     db5:	00 00                	add    BYTE PTR [rax],al
     db7:	05 ca 01 a0 47       	add    eax,0x47a001ca
     dbc:	00 00                	add    BYTE PTR [rax],al
     dbe:	05 d2 01 d1 09       	add    eax,0x9d101d2
     dc3:	00 00                	add    BYTE PTR [rax],al
     dc5:	06                   	(bad)  
     dc6:	ee                   	out    dx,al
     dc7:	01 20                	add    DWORD PTR [rax],esp
     dc9:	2e 00 00             	add    BYTE PTR cs:[rax],al
     dcc:	06                   	(bad)  
     dcd:	91                   	xchg   ecx,eax
     dce:	03 22                	add    esp,DWORD PTR [rdx]
     dd0:	13 00                	adc    eax,DWORD PTR [rax]
     dd2:	00 05 96 03 e3 1c    	add    BYTE PTR [rip+0x1ce30396],al        # 1ce3116e <_end+0x1cc30156>
     dd8:	00 00                	add    BYTE PTR [rax],al
     dda:	06                   	(bad)  
     ddb:	9c                   	pushf  
     ddc:	03 1b                	add    ebx,DWORD PTR [rbx]
     dde:	13 00                	adc    eax,DWORD PTR [rax]
     de0:	00 00                	add    BYTE PTR [rax],al
     de2:	04 00                	add    al,0x0
     de4:	00 05 62 4d 24 00    	add    BYTE PTR [rip+0x244d62],al        # 245b4c <_end+0x44b34>
     dea:	00 05 63 12 26 00    	add    BYTE PTR [rip+0x261263],al        # 262053 <_end+0x6103b>
     df0:	00 05 64 1f 0a 00    	add    BYTE PTR [rip+0xa1f64],al        # a2d5a <__FRAME_END__+0xa2566>
     df6:	00 05 65 d2 17 00    	add    BYTE PTR [rip+0x17d265],al        # 17e061 <__FRAME_END__+0x17d86d>
     dfc:	00 05 66 24 25 00    	add    BYTE PTR [rip+0x252466],al        # 253268 <_end+0x52250>
     e02:	00 05 67 21 44 00    	add    BYTE PTR [rip+0x442167],al        # 442f6f <_end+0x241f57>
     e08:	00 05 75 7e 3f 00    	add    BYTE PTR [rip+0x3f7e75],al        # 3f8c83 <_end+0x1f7c6b>
     e0e:	00 05 76 5d 27 00    	add    BYTE PTR [rip+0x275d76],al        # 276b8a <_end+0x75b72>
     e14:	00 05 77 07 34 00    	add    BYTE PTR [rip+0x340777],al        # 341591 <_end+0x140579>
     e1a:	00 05 78 80 2f 00    	add    BYTE PTR [rip+0x2f8078],al        # 2f8e98 <_end+0xf7e80>
     e20:	00 05 79 3d 29 00    	add    BYTE PTR [rip+0x293d79],al        # 294b9f <_end+0x93b87>
     e26:	00 05 7a 39 1c 00    	add    BYTE PTR [rip+0x1c397a],al        # 1c47a6 <__FRAME_END__+0x1c3fb2>
     e2c:	00 05 7b 9a 39 00    	add    BYTE PTR [rip+0x399a7b],al        # 39a8ad <_end+0x199895>
     e32:	00 05 7c 4c 41 00    	add    BYTE PTR [rip+0x414c7c],al        # 415ab4 <_end+0x214a9c>
     e38:	00 05 7e aa 23 00    	add    BYTE PTR [rip+0x23aa7e],al        # 23b8bc <_end+0x3a8a4>
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	04 00                	add    al,0x0
     e42:	00 05 18 be 15 00    	add    BYTE PTR [rip+0x15be18],al        # 15cc60 <__FRAME_END__+0x15c46c>
     e48:	00 05 22 1c 42 00    	add    BYTE PTR [rip+0x421c22],al        # 422a70 <_end+0x221a58>
     e4e:	00 05 23 e5 00 00    	add    BYTE PTR [rip+0xe523],al        # f377 <__FRAME_END__+0xeb83>
     e54:	00 05 26 51 49 00    	add    BYTE PTR [rip+0x495126],al        # 495f80 <_end+0x294f68>
     e5a:	00 05 27 09 44 00    	add    BYTE PTR [rip+0x440927],al        # 441787 <_end+0x24076f>
     e60:	00 05 28 68 14 00    	add    BYTE PTR [rip+0x146828],al        # 14768e <__FRAME_END__+0x146e9a>
     e66:	00 05 29 f6 35 00    	add    BYTE PTR [rip+0x35f629],al        # 360495 <_end+0x15f47d>
     e6c:	00 05 2a d9 28 00    	add    BYTE PTR [rip+0x28d92a],al        # 28e79c <_end+0x8d784>
     e72:	00 05 2b bd 23 00    	add    BYTE PTR [rip+0x23bd2b],al        # 23cba3 <_end+0x3bb8b>
     e78:	00 05 2d cc 2f 00    	add    BYTE PTR [rip+0x2fcc2d],al        # 2fdaab <_end+0xfca93>
     e7e:	00 05 2e ff 24 00    	add    BYTE PTR [rip+0x24ff2e],al        # 250db2 <_end+0x4fd9a>
     e84:	00 05 33 a0 34 00    	add    BYTE PTR [rip+0x34a033],al        # 34aebd <_end+0x149ea5>
     e8a:	00 05 34 17 49 00    	add    BYTE PTR [rip+0x491734],al        # 4925c4 <_end+0x2915ac>
     e90:	00 05 35 19 15 00    	add    BYTE PTR [rip+0x151935],al        # 1527cb <__FRAME_END__+0x151fd7>
     e96:	00 05 36 a4 05 00    	add    BYTE PTR [rip+0x5a436],al        # 5b2d2 <__FRAME_END__+0x5aade>
     e9c:	00 05 37 fc 16 00    	add    BYTE PTR [rip+0x16fc37],al        # 170ad9 <__FRAME_END__+0x1702e5>
     ea2:	00 05 38 95 16 00    	add    BYTE PTR [rip+0x169538],al        # 16a3e0 <__FRAME_END__+0x169bec>
     ea8:	00 05 39 d9 2a 00    	add    BYTE PTR [rip+0x2ad939],al        # 2ae7e7 <_end+0xad7cf>
     eae:	00 05 3a b8 1f 00    	add    BYTE PTR [rip+0x1fb83a],al        # 1fc6ee <__FRAME_END__+0x1fbefa>
     eb4:	00 05 3b 86 20 00    	add    BYTE PTR [rip+0x20863b],al        # 2094f5 <_end+0x84dd>
     eba:	00 05 3c 3a 3b 00    	add    BYTE PTR [rip+0x3b3a3c],al        # 3b48fc <_end+0x1b38e4>
     ec0:	00 05 3d 49 36 00    	add    BYTE PTR [rip+0x36493d],al        # 365803 <_end+0x1647eb>
     ec6:	00 05 3e fd 20 00    	add    BYTE PTR [rip+0x20fd3e],al        # 210c0a <_end+0xfbf2>
     ecc:	00 05 3f 69 3d 00    	add    BYTE PTR [rip+0x3d693f],al        # 3d7811 <_end+0x1d67f9>
     ed2:	00 05 40 35 3c 00    	add    BYTE PTR [rip+0x3c3540],al        # 3c4418 <_end+0x1c3400>
     ed8:	00 05 41 d2 15 00    	add    BYTE PTR [rip+0x15d241],al        # 15e11f <__FRAME_END__+0x15d92b>
     ede:	00 05 42 01 1a 00    	add    BYTE PTR [rip+0x1a0142],al        # 1a1026 <__FRAME_END__+0x1a0832>
     ee4:	00 05 43 c9 1d 00    	add    BYTE PTR [rip+0x1dc943],al        # 1dd82d <__FRAME_END__+0x1dd039>
     eea:	00 05 44 36 21 00    	add    BYTE PTR [rip+0x213644],al        # 214534 <_end+0x1351c>
     ef0:	00 05 45 22 46 00    	add    BYTE PTR [rip+0x462245],al        # 46313b <_end+0x262123>
     ef6:	00 05 46 93 41 00    	add    BYTE PTR [rip+0x419346],al        # 41a242 <_end+0x21922a>
     efc:	00 05 47 4c 0b 00    	add    BYTE PTR [rip+0xb4c47],al        # b5b49 <__FRAME_END__+0xb5355>
     f02:	00 05 48 92 0e 00    	add    BYTE PTR [rip+0xe9248],al        # ea150 <__FRAME_END__+0xe995c>
     f08:	00 05 49 7e 39 00    	add    BYTE PTR [rip+0x397e49],al        # 398d57 <_end+0x197d3f>
     f0e:	00 05 4a 6b 49 00    	add    BYTE PTR [rip+0x496b4a],al        # 497a5e <_end+0x296a46>
     f14:	00 05 50 92 01 00    	add    BYTE PTR [rip+0x19250],al        # 1a16a <__FRAME_END__+0x19976>
     f1a:	00 05 53 72 2c 00    	add    BYTE PTR [rip+0x2c7253],al        # 2c8173 <_end+0xc715b>
     f20:	00 05 56 d0 1a 00    	add    BYTE PTR [rip+0x1ad056],al        # 1adf7c <__FRAME_END__+0x1ad788>
     f26:	00 05 5c df 08 00    	add    BYTE PTR [rip+0x8df5c],al        # 8ee88 <__FRAME_END__+0x8e694>
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	04 00                	add    al,0x0
     f30:	00 05 05 10 35 00    	add    BYTE PTR [rip+0x351005],al        # 351f3b <_end+0x150f23>
     f36:	00 05 0e 31 2f 00    	add    BYTE PTR [rip+0x2f310e],al        # 2f404a <_end+0xf3032>
     f3c:	00 05 12 50 06 00    	add    BYTE PTR [rip+0x65012],al        # 65f54 <__FRAME_END__+0x65760>
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	04 00                	add    al,0x0
     f46:	00 06                	add    BYTE PTR [rsi],al
     f48:	ee                   	out    dx,al
     f49:	01 20                	add    DWORD PTR [rax],esp
     f4b:	2e 00 00             	add    BYTE PTR cs:[rax],al
     f4e:	06                   	(bad)  
     f4f:	91                   	xchg   ecx,eax
     f50:	03 22                	add    esp,DWORD PTR [rdx]
     f52:	13 00                	adc    eax,DWORD PTR [rax]
     f54:	00 05 96 03 e3 1c    	add    BYTE PTR [rip+0x1ce30396],al        # 1ce312f0 <_end+0x1cc302d8>
     f5a:	00 00                	add    BYTE PTR [rax],al
     f5c:	06                   	(bad)  
     f5d:	9c                   	pushf  
     f5e:	03 1b                	add    ebx,DWORD PTR [rbx]
     f60:	13 00                	adc    eax,DWORD PTR [rax]
     f62:	00 00                	add    BYTE PTR [rax],al
     f64:	04 00                	add    al,0x0
     f66:	00 05 33 4e 09 00    	add    BYTE PTR [rip+0x94e33],al        # 95d9f <__FRAME_END__+0x955ab>
     f6c:	00 05 35 16 05 00    	add    BYTE PTR [rip+0x51635],al        # 525a7 <__FRAME_END__+0x51db3>
     f72:	00 05 36 b8 2d 00    	add    BYTE PTR [rip+0x2db836],al        # 2dc7ae <_end+0xdb796>
     f78:	00 05 38 6e 18 00    	add    BYTE PTR [rip+0x186e38],al        # 187db6 <__FRAME_END__+0x1875c2>
     f7e:	00 05 3b 3d 02 00    	add    BYTE PTR [rip+0x23d3b],al        # 24cbf <__FRAME_END__+0x244cb>
     f84:	00 05 3d 2a 37 00    	add    BYTE PTR [rip+0x372a3d],al        # 3739c7 <_end+0x1729af>
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	04 00                	add    al,0x0
     f8e:	00 05 25 6c 40 00    	add    BYTE PTR [rip+0x406c25],al        # 407bb9 <_end+0x206ba1>
     f94:	00 05 26 76 4b 00    	add    BYTE PTR [rip+0x4b7626],al        # 4b85c0 <_end+0x2b75a8>
     f9a:	00 05 27 c7 28 00    	add    BYTE PTR [rip+0x28c727],al        # 28d6c7 <_end+0x8c6af>
     fa0:	00 05 28 a0 3d 00    	add    BYTE PTR [rip+0x3da028],al        # 3dafce <_end+0x1d9fb6>
     fa6:	00 05 29 3d 10 00    	add    BYTE PTR [rip+0x103d29],al        # 104cd5 <__FRAME_END__+0x1044e1>
     fac:	00 05 2a 8d 0c 00    	add    BYTE PTR [rip+0xc8d2a],al        # c9cdc <__FRAME_END__+0xc94e8>
     fb2:	00 05 2b cd 3c 00    	add    BYTE PTR [rip+0x3ccd2b],al        # 3cdce3 <_end+0x1ccccb>
     fb8:	00 05 2c e1 1e 00    	add    BYTE PTR [rip+0x1ee12c],al        # 1ef0ea <__FRAME_END__+0x1ee8f6>
     fbe:	00 05 2d f1 39 00    	add    BYTE PTR [rip+0x39f12d],al        # 3a00f1 <_end+0x19f0d9>
     fc4:	00 05 2e 64 1f 00    	add    BYTE PTR [rip+0x1f642e],al        # 1f73f8 <__FRAME_END__+0x1f6c04>
     fca:	00 05 2f 25 3b 00    	add    BYTE PTR [rip+0x3b252f],al        # 3b34ff <_end+0x1b24e7>
     fd0:	00 05 30 ce 3a 00    	add    BYTE PTR [rip+0x3ace30],al        # 3ade06 <_end+0x1acdee>
     fd6:	00 05 31 ee 3f 00    	add    BYTE PTR [rip+0x3fee31],al        # 3ffe0d <_end+0x1fedf5>
     fdc:	00 05 34 54 3e 00    	add    BYTE PTR [rip+0x3e5434],al        # 3e6416 <_end+0x1e53fe>
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	04 00                	add    al,0x0
     fe6:	00 06                	add    BYTE PTR [rsi],al
     fe8:	22 57 2e             	and    dl,BYTE PTR [rdi+0x2e]
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	05 27 1f 23 00       	add    eax,0x231f27
     ff2:	00 00                	add    BYTE PTR [rax],al
     ff4:	04 00                	add    al,0x0
     ff6:	00 06                	add    BYTE PTR [rsi],al
     ff8:	37                   	(bad)  
     ff9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ffa:	41 00 00             	add    BYTE PTR [r8],al
     ffd:	05 38 0f 37 00       	add    eax,0x370f38
    1002:	00 05 3f dc 31 00    	add    BYTE PTR [rip+0x31dc3f],al        # 31ec47 <_end+0x11dc2f>
    1008:	00 05 42 30 26 00    	add    BYTE PTR [rip+0x263042],al        # 264050 <_end+0x63038>
    100e:	00 05 51 e3 26 00    	add    BYTE PTR [rip+0x26e351],al        # 26f365 <_end+0x6e34d>
    1014:	00 05 52 5e 33 00    	add    BYTE PTR [rip+0x335e52],al        # 336e6c <_end+0x135e54>
    101a:	00 05 53 88 0d 00    	add    BYTE PTR [rip+0xd8853],al        # d9873 <__FRAME_END__+0xd907f>
    1020:	00 05 54 18 45 00    	add    BYTE PTR [rip+0x451854],al        # 45287a <_end+0x251862>
    1026:	00 05 55 75 17 00    	add    BYTE PTR [rip+0x177555],al        # 178581 <__FRAME_END__+0x177d8d>
    102c:	00 05 56 a6 1b 00    	add    BYTE PTR [rip+0x1ba656],al        # 1bb688 <__FRAME_END__+0x1bae94>
    1032:	00 05 57 96 28 00    	add    BYTE PTR [rip+0x289657],al        # 28a68f <_end+0x89677>
    1038:	00 05 58 b6 02 00    	add    BYTE PTR [rip+0x2b658],al        # 2c696 <__FRAME_END__+0x2bea2>
    103e:	00 05 60 41 22 00    	add    BYTE PTR [rip+0x224160],al        # 2251a4 <_end+0x2418c>
    1044:	00 05 61 8a 1b 00    	add    BYTE PTR [rip+0x1b8a61],al        # 1b9aab <__FRAME_END__+0x1b92b7>
    104a:	00 05 62 cb 36 00    	add    BYTE PTR [rip+0x36cb62],al        # 36dbb2 <_end+0x16cb9a>
    1050:	00 05 63 c8 03 00    	add    BYTE PTR [rip+0x3c863],al        # 3d8b9 <__FRAME_END__+0x3d0c5>
    1056:	00 05 64 49 3d 00    	add    BYTE PTR [rip+0x3d4964],al        # 3d59c0 <_end+0x1d49a8>
    105c:	00 05 65 56 47 00    	add    BYTE PTR [rip+0x475665],al        # 4766c7 <_end+0x2756af>
    1062:	00 05 66 71 05 00    	add    BYTE PTR [rip+0x57166],al        # 581ce <__FRAME_END__+0x579da>
    1068:	00 05 67 0a 03 00    	add    BYTE PTR [rip+0x30a67],al        # 31ad5 <__FRAME_END__+0x312e1>
    106e:	00 05 68 4e 11 00    	add    BYTE PTR [rip+0x114e68],al        # 115edc <__FRAME_END__+0x1156e8>
    1074:	00 05 69 10 1b 00    	add    BYTE PTR [rip+0x1b1069],al        # 1b20e3 <__FRAME_END__+0x1b18ef>
    107a:	00 05 6a 31 20 00    	add    BYTE PTR [rip+0x20316a],al        # 2041ea <_end+0x31d2>
    1080:	00 05 6b d1 2c 00    	add    BYTE PTR [rip+0x2cd16b],al        # 2ce1f1 <_end+0xcd1d9>
    1086:	00 05 6c 5d 07 00    	add    BYTE PTR [rip+0x75d6c],al        # 76df8 <__FRAME_END__+0x76604>
    108c:	00 05 6d 8c 18 00    	add    BYTE PTR [rip+0x188c6d],al        # 189cff <__FRAME_END__+0x18950b>
    1092:	00 05 6e 11 4d 00    	add    BYTE PTR [rip+0x4d116e],al        # 4d2206 <_end+0x2d11ee>
    1098:	00 05 6f 4c 28 00    	add    BYTE PTR [rip+0x284c6f],al        # 285d0d <_end+0x84cf5>
    109e:	00 05 70 55 00 00    	add    BYTE PTR [rip+0x5570],al        # 6614 <__FRAME_END__+0x5e20>
    10a4:	00 05 71 61 3b 00    	add    BYTE PTR [rip+0x3b6171],al        # 3b721b <_end+0x1b6203>
    10aa:	00 05 72 ad 31 00    	add    BYTE PTR [rip+0x31ad72],al        # 31be22 <_end+0x11ae0a>
    10b0:	00 05 74 9e 29 00    	add    BYTE PTR [rip+0x299e74],al        # 29af2a <_end+0x99f12>
    10b6:	00 05 75 d7 21 00    	add    BYTE PTR [rip+0x21d775],al        # 21e831 <_end+0x1d819>
    10bc:	00 05 79 f8 2e 00    	add    BYTE PTR [rip+0x2ef879],al        # 2f093b <_end+0xef923>
    10c2:	00 05 82 01 94 1c    	add    BYTE PTR [rip+0x1c940182],al        # 1c94124a <_end+0x1c740232>
    10c8:	00 00                	add    BYTE PTR [rax],al
    10ca:	05 83 01 50 30       	add    eax,0x30500183
    10cf:	00 00                	add    BYTE PTR [rax],al
    10d1:	05 84 01 bb 03       	add    eax,0x3bb0184
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	05 85 01 81 2e       	add    eax,0x2e810185
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	05 86 01 00 00       	add    eax,0x186
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	05 87 01 38 1f       	add    eax,0x1f380187
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	05 88 01 0c 19       	add    eax,0x190c0188
    10f2:	00 00                	add    BYTE PTR [rax],al
    10f4:	05 89 01 ba 16       	add    eax,0x16ba0189
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	05 8a 01 16 0b       	add    eax,0xb16018a
    1100:	00 00                	add    BYTE PTR [rax],al
    1102:	05 8b 01 f2 37       	add    eax,0x37f2018b
    1107:	00 00                	add    BYTE PTR [rax],al
    1109:	05 8c 01 00 33       	add    eax,0x3300018c
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	05 8d 01 97 3e       	add    eax,0x3e97018d
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	05 8e 01 ec 40       	add    eax,0x40ec018e
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	05 8f 01 8d 34       	add    eax,0x348d018f
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	05 90 01 40 49       	add    eax,0x49400190
    112a:	00 00                	add    BYTE PTR [rax],al
    112c:	05 91 01 b2 43       	add    eax,0x43b20191
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	05 92 01 9f 30       	add    eax,0x309f0192
    1138:	00 00                	add    BYTE PTR [rax],al
    113a:	05 f7 01 9e 26       	add    eax,0x269e01f7
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	05 94 02 c9 14       	add    eax,0x14c90294
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	05 c3 02 7e 19       	add    eax,0x197e02c3
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	05 c4 02 8b 3c       	add    eax,0x3c8b02c4
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	05 c5 02 61 1d       	add    eax,0x1d6102c5
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	05 8f 03 b1 49       	add    eax,0x49b1038f
    1162:	00 00                	add    BYTE PTR [rax],al
    1164:	05 94 03 57 35       	add    eax,0x35570394
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	05 97 03 ac 3e       	add    eax,0x3eac0397
    1170:	00 00                	add    BYTE PTR [rax],al
    1172:	05 9b 03 ee 42       	add    eax,0x42ee039b
    1177:	00 00                	add    BYTE PTR [rax],al
    1179:	05 ae 03 12 1d       	add    eax,0x1d1203ae
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	05 af 03 db 0e       	add    eax,0xedb03af
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	05 b9 03 60 31       	add    eax,0x316003b9
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	05 c0 03 ef 15       	add    eax,0x15ef03c0
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	05 c1 03 e5 2c       	add    eax,0x2ce503c1
    119a:	00 00                	add    BYTE PTR [rax],al
    119c:	05 c2 03 20 21       	add    eax,0x212003c2
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	05 c3 03 c8 11       	add    eax,0x11c803c3
    11a8:	00 00                	add    BYTE PTR [rax],al
    11aa:	05 c5 03 af 18       	add    eax,0x18af03c5
    11af:	00 00                	add    BYTE PTR [rax],al
    11b1:	05 c8 03 11 2a       	add    eax,0x2a1103c8
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	05 cb 03 04 32       	add    eax,0x320403cb
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    11c2:	00 05 2f 23 39 00    	add    BYTE PTR [rip+0x39232f],al        # 3934f7 <_end+0x1924df>
    11c8:	00 05 3d 29 0b 00    	add    BYTE PTR [rip+0xb293d],al        # b3b0b <__FRAME_END__+0xb3317>
    11ce:	00 05 48 b9 0e 00    	add    BYTE PTR [rip+0xeb948],al        # ecb1c <__FRAME_END__+0xec328>
    11d4:	00 05 57 f5 02 00    	add    BYTE PTR [rip+0x2f557],al        # 30731 <__FRAME_END__+0x2ff3d>
    11da:	00 05 58 db 2b 00    	add    BYTE PTR [rip+0x2bdb58],al        # 2bed38 <_end+0xbdd20>
    11e0:	00 05 59 3b 18 00    	add    BYTE PTR [rip+0x183b59],al        # 184d3f <__FRAME_END__+0x18454b>
    11e6:	00 05 5e 44 0e 00    	add    BYTE PTR [rip+0xe445e],al        # e564a <__FRAME_END__+0xe4e56>
    11ec:	00 05 6b 7d 44 00    	add    BYTE PTR [rip+0x447d6b],al        # 448f5d <_end+0x247f45>
    11f2:	00 05 6c 1c 03 00    	add    BYTE PTR [rip+0x31c6c],al        # 32e64 <__FRAME_END__+0x32670>
    11f8:	00 05 6d 29 1a 00    	add    BYTE PTR [rip+0x1a296d],al        # 1a3b6b <__FRAME_END__+0x1a3377>
    11fe:	00 05 76 06 38 00    	add    BYTE PTR [rip+0x380676],al        # 38187a <_end+0x180862>
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	04 00                	add    al,0x0
    1208:	00 05 13 38 2c 00    	add    BYTE PTR [rip+0x2c3813],al        # 2c4a21 <_end+0xc3a09>
    120e:	00 05 19 a3 18 00    	add    BYTE PTR [rip+0x18a319],al        # 18b52d <__FRAME_END__+0x18ad39>
    1214:	00 05 1a f5 31 00    	add    BYTE PTR [rip+0x31f51a],al        # 320734 <_end+0x11f71c>
    121a:	00 05 1b c3 02 00    	add    BYTE PTR [rip+0x2c31b],al        # 2d53b <__FRAME_END__+0x2cd47>
    1220:	00 05 1e a1 4a 00    	add    BYTE PTR [rip+0x4aa11e],al        # 4ab344 <_end+0x2aa32c>
    1226:	00 06                	add    BYTE PTR [rsi],al
    1228:	24 0b                	and    al,0xb
    122a:	3c 00                	cmp    al,0x0
    122c:	00 05 25 b4 38 00    	add    BYTE PTR [rip+0x38b425],al        # 38c657 <_end+0x18b63f>
    1232:	00 00                	add    BYTE PTR [rax],al
    1234:	04 00                	add    al,0x0
    1236:	00 05 8b 01 94 22    	add    BYTE PTR [rip+0x2294018b],al        # 229413c7 <_end+0x227403af>
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	05 8c 01 7b 41       	add    eax,0x417b018c
    1243:	00 00                	add    BYTE PTR [rax],al
    1245:	05 8d 01 51 18       	add    eax,0x1851018d
    124a:	00 00                	add    BYTE PTR [rax],al
    124c:	05 e8 03 d5 12       	add    eax,0x12d503e8
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	05 90 04 0b 27       	add    eax,0x270b0490
    1258:	00 00                	add    BYTE PTR [rax],al
	...
Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=00000000000004f0..000000000000051b
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=00000000000004d0..00000000000004e0
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 00000000000004d6
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 00000000000004e0
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000044 FDE cie=00000030 pc=00000000000004e0..00000000000004e8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 000000000000001c 0000005c FDE cie=00000030 pc=00000000000005fa..0000000000000625
  DW_CFA_advance_loc: 1 to 00000000000005fb
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000000005fe
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 38 to 0000000000000624
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000a8 0000000000000044 0000007c FDE cie=00000030 pc=0000000000000630..0000000000000695
  DW_CFA_advance_loc: 2 to 0000000000000632
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 2 to 0000000000000634
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 0000000000000639
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 2 to 000000000000063b
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 0000000000000643
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 000000000000064b
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 0000000000000658
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 50 to 000000000000068a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000000068b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000000068c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000000068e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000000000000690
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 0000000000000692
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000000694
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000f0 0000000000000010 000000c4 FDE cie=00000030 pc=00000000000006a0..00000000000006a2
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000104 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    00000000000005fa 000000000000002b 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0x368 (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0xba6): GNU C11 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fstack-protector-strong
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0x254d): add_int.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x122a): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/C/Intel_architecture/AMD64/Add_Int/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x5fa
    <21>   DW_AT_high_pc     : 0x2b
    <29>   DW_AT_stmt_list   : 0x0
    <2d>   DW_AT_GNU_macros  : 0x0
 <1><31>: Abbrev Number: 2 (DW_TAG_typedef)
    <32>   DW_AT_name        : (indirect string, offset: 0x28d2): size_t
    <36>   DW_AT_decl_file   : 2
    <37>   DW_AT_decl_line   : 216
    <38>   DW_AT_type        : <0x3c>
 <1><3c>: Abbrev Number: 3 (DW_TAG_base_type)
    <3d>   DW_AT_byte_size   : 8
    <3e>   DW_AT_encoding    : 7	(unsigned)
    <3f>   DW_AT_name        : (indirect string, offset: 0x394a): long unsigned int
 <1><43>: Abbrev Number: 3 (DW_TAG_base_type)
    <44>   DW_AT_byte_size   : 1
    <45>   DW_AT_encoding    : 8	(unsigned char)
    <46>   DW_AT_name        : (indirect string, offset: 0x2690): unsigned char
 <1><4a>: Abbrev Number: 3 (DW_TAG_base_type)
    <4b>   DW_AT_byte_size   : 2
    <4c>   DW_AT_encoding    : 7	(unsigned)
    <4d>   DW_AT_name        : (indirect string, offset: 0x70c): short unsigned int
 <1><51>: Abbrev Number: 3 (DW_TAG_base_type)
    <52>   DW_AT_byte_size   : 4
    <53>   DW_AT_encoding    : 7	(unsigned)
    <54>   DW_AT_name        : (indirect string, offset: 0x1c48): unsigned int
 <1><58>: Abbrev Number: 3 (DW_TAG_base_type)
    <59>   DW_AT_byte_size   : 1
    <5a>   DW_AT_encoding    : 6	(signed char)
    <5b>   DW_AT_name        : (indirect string, offset: 0x41f7): signed char
 <1><5f>: Abbrev Number: 3 (DW_TAG_base_type)
    <60>   DW_AT_byte_size   : 2
    <61>   DW_AT_encoding    : 5	(signed)
    <62>   DW_AT_name        : (indirect string, offset: 0x2458): short int
 <1><66>: Abbrev Number: 4 (DW_TAG_base_type)
    <67>   DW_AT_byte_size   : 4
    <68>   DW_AT_encoding    : 5	(signed)
    <69>   DW_AT_name        : int
 <1><6d>: Abbrev Number: 3 (DW_TAG_base_type)
    <6e>   DW_AT_byte_size   : 8
    <6f>   DW_AT_encoding    : 5	(signed)
    <70>   DW_AT_name        : (indirect string, offset: 0x39a5): long int
 <1><74>: Abbrev Number: 2 (DW_TAG_typedef)
    <75>   DW_AT_name        : (indirect string, offset: 0x1047): __off_t
    <79>   DW_AT_decl_file   : 3
    <7a>   DW_AT_decl_line   : 140
    <7b>   DW_AT_type        : <0x6d>
 <1><7f>: Abbrev Number: 2 (DW_TAG_typedef)
    <80>   DW_AT_name        : (indirect string, offset: 0xc99): __off64_t
    <84>   DW_AT_decl_file   : 3
    <85>   DW_AT_decl_line   : 141
    <86>   DW_AT_type        : <0x6d>
 <1><8a>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <8b>   DW_AT_byte_size   : 8
 <1><8c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <8d>   DW_AT_byte_size   : 8
    <8e>   DW_AT_type        : <0x92>
 <1><92>: Abbrev Number: 3 (DW_TAG_base_type)
    <93>   DW_AT_byte_size   : 1
    <94>   DW_AT_encoding    : 6	(signed char)
    <95>   DW_AT_name        : (indirect string, offset: 0x41fe): char
 <1><99>: Abbrev Number: 7 (DW_TAG_const_type)
    <9a>   DW_AT_type        : <0x92>
 <1><9e>: Abbrev Number: 8 (DW_TAG_structure_type)
    <9f>   DW_AT_name        : (indirect string, offset: 0x3d40): _IO_FILE
    <a3>   DW_AT_byte_size   : 216
    <a4>   DW_AT_decl_file   : 4
    <a5>   DW_AT_decl_line   : 245
    <a6>   DW_AT_sibling     : <0x21e>
 <2><aa>: Abbrev Number: 9 (DW_TAG_member)
    <ab>   DW_AT_name        : (indirect string, offset: 0x26ad): _flags
    <af>   DW_AT_decl_file   : 4
    <b0>   DW_AT_decl_line   : 246
    <b1>   DW_AT_type        : <0x66>
    <b5>   DW_AT_data_member_location: 0
 <2><b6>: Abbrev Number: 9 (DW_TAG_member)
    <b7>   DW_AT_name        : (indirect string, offset: 0x20e6): _IO_read_ptr
    <bb>   DW_AT_decl_file   : 4
    <bc>   DW_AT_decl_line   : 251
    <bd>   DW_AT_type        : <0x8c>
    <c1>   DW_AT_data_member_location: 8
 <2><c2>: Abbrev Number: 9 (DW_TAG_member)
    <c3>   DW_AT_name        : (indirect string, offset: 0x3312): _IO_read_end
    <c7>   DW_AT_decl_file   : 4
    <c8>   DW_AT_decl_line   : 252
    <c9>   DW_AT_type        : <0x8c>
    <cd>   DW_AT_data_member_location: 16
 <2><ce>: Abbrev Number: 9 (DW_TAG_member)
    <cf>   DW_AT_name        : (indirect string, offset: 0x1946): _IO_read_base
    <d3>   DW_AT_decl_file   : 4
    <d4>   DW_AT_decl_line   : 253
    <d5>   DW_AT_type        : <0x8c>
    <d9>   DW_AT_data_member_location: 24
 <2><da>: Abbrev Number: 9 (DW_TAG_member)
    <db>   DW_AT_name        : (indirect string, offset: 0x24ca): _IO_write_base
    <df>   DW_AT_decl_file   : 4
    <e0>   DW_AT_decl_line   : 254
    <e1>   DW_AT_type        : <0x8c>
    <e5>   DW_AT_data_member_location: 32
 <2><e6>: Abbrev Number: 9 (DW_TAG_member)
    <e7>   DW_AT_name        : (indirect string, offset: 0x41a9): _IO_write_ptr
    <eb>   DW_AT_decl_file   : 4
    <ec>   DW_AT_decl_line   : 255
    <ed>   DW_AT_type        : <0x8c>
    <f1>   DW_AT_data_member_location: 40
 <2><f2>: Abbrev Number: 10 (DW_TAG_member)
    <f3>   DW_AT_name        : (indirect string, offset: 0x5eb): _IO_write_end
    <f7>   DW_AT_decl_file   : 4
    <f8>   DW_AT_decl_line   : 256
    <fa>   DW_AT_type        : <0x8c>
    <fe>   DW_AT_data_member_location: 48
 <2><ff>: Abbrev Number: 10 (DW_TAG_member)
    <100>   DW_AT_name        : (indirect string, offset: 0x4d4c): _IO_buf_base
    <104>   DW_AT_decl_file   : 4
    <105>   DW_AT_decl_line   : 257
    <107>   DW_AT_type        : <0x8c>
    <10b>   DW_AT_data_member_location: 56
 <2><10c>: Abbrev Number: 10 (DW_TAG_member)
    <10d>   DW_AT_name        : (indirect string, offset: 0x2fe): _IO_buf_end
    <111>   DW_AT_decl_file   : 4
    <112>   DW_AT_decl_line   : 258
    <114>   DW_AT_type        : <0x8c>
    <118>   DW_AT_data_member_location: 64
 <2><119>: Abbrev Number: 10 (DW_TAG_member)
    <11a>   DW_AT_name        : (indirect string, offset: 0x2604): _IO_save_base
    <11e>   DW_AT_decl_file   : 4
    <11f>   DW_AT_decl_line   : 260
    <121>   DW_AT_type        : <0x8c>
    <125>   DW_AT_data_member_location: 72
 <2><126>: Abbrev Number: 10 (DW_TAG_member)
    <127>   DW_AT_name        : (indirect string, offset: 0x4287): _IO_backup_base
    <12b>   DW_AT_decl_file   : 4
    <12c>   DW_AT_decl_line   : 261
    <12e>   DW_AT_type        : <0x8c>
    <132>   DW_AT_data_member_location: 80
 <2><133>: Abbrev Number: 10 (DW_TAG_member)
    <134>   DW_AT_name        : (indirect string, offset: 0xfb1): _IO_save_end
    <138>   DW_AT_decl_file   : 4
    <139>   DW_AT_decl_line   : 262
    <13b>   DW_AT_type        : <0x8c>
    <13f>   DW_AT_data_member_location: 88
 <2><140>: Abbrev Number: 10 (DW_TAG_member)
    <141>   DW_AT_name        : (indirect string, offset: 0x901): _markers
    <145>   DW_AT_decl_file   : 4
    <146>   DW_AT_decl_line   : 264
    <148>   DW_AT_type        : <0x256>
    <14c>   DW_AT_data_member_location: 96
 <2><14d>: Abbrev Number: 10 (DW_TAG_member)
    <14e>   DW_AT_name        : (indirect string, offset: 0x4a57): _chain
    <152>   DW_AT_decl_file   : 4
    <153>   DW_AT_decl_line   : 266
    <155>   DW_AT_type        : <0x25c>
    <159>   DW_AT_data_member_location: 104
 <2><15a>: Abbrev Number: 10 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x16d9): _fileno
    <15f>   DW_AT_decl_file   : 4
    <160>   DW_AT_decl_line   : 268
    <162>   DW_AT_type        : <0x66>
    <166>   DW_AT_data_member_location: 112
 <2><167>: Abbrev Number: 10 (DW_TAG_member)
    <168>   DW_AT_name        : (indirect string, offset: 0x83a): _flags2
    <16c>   DW_AT_decl_file   : 4
    <16d>   DW_AT_decl_line   : 272
    <16f>   DW_AT_type        : <0x66>
    <173>   DW_AT_data_member_location: 116
 <2><174>: Abbrev Number: 10 (DW_TAG_member)
    <175>   DW_AT_name        : (indirect string, offset: 0x3d34): _old_offset
    <179>   DW_AT_decl_file   : 4
    <17a>   DW_AT_decl_line   : 274
    <17c>   DW_AT_type        : <0x74>
    <180>   DW_AT_data_member_location: 120
 <2><181>: Abbrev Number: 10 (DW_TAG_member)
    <182>   DW_AT_name        : (indirect string, offset: 0x4c67): _cur_column
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 278
    <189>   DW_AT_type        : <0x4a>
    <18d>   DW_AT_data_member_location: 128
 <2><18e>: Abbrev Number: 10 (DW_TAG_member)
    <18f>   DW_AT_name        : (indirect string, offset: 0x185f): _vtable_offset
    <193>   DW_AT_decl_file   : 4
    <194>   DW_AT_decl_line   : 279
    <196>   DW_AT_type        : <0x58>
    <19a>   DW_AT_data_member_location: 130
 <2><19b>: Abbrev Number: 10 (DW_TAG_member)
    <19c>   DW_AT_name        : (indirect string, offset: 0x164): _shortbuf
    <1a0>   DW_AT_decl_file   : 4
    <1a1>   DW_AT_decl_line   : 280
    <1a3>   DW_AT_type        : <0x262>
    <1a7>   DW_AT_data_member_location: 131
 <2><1a8>: Abbrev Number: 10 (DW_TAG_member)
    <1a9>   DW_AT_name        : (indirect string, offset: 0x3c15): _lock
    <1ad>   DW_AT_decl_file   : 4
    <1ae>   DW_AT_decl_line   : 284
    <1b0>   DW_AT_type        : <0x272>
    <1b4>   DW_AT_data_member_location: 136
 <2><1b5>: Abbrev Number: 10 (DW_TAG_member)
    <1b6>   DW_AT_name        : (indirect string, offset: 0x3d38): _offset
    <1ba>   DW_AT_decl_file   : 4
    <1bb>   DW_AT_decl_line   : 293
    <1bd>   DW_AT_type        : <0x7f>
    <1c1>   DW_AT_data_member_location: 144
 <2><1c2>: Abbrev Number: 10 (DW_TAG_member)
    <1c3>   DW_AT_name        : (indirect string, offset: 0x2b46): __pad1
    <1c7>   DW_AT_decl_file   : 4
    <1c8>   DW_AT_decl_line   : 301
    <1ca>   DW_AT_type        : <0x8a>
    <1ce>   DW_AT_data_member_location: 152
 <2><1cf>: Abbrev Number: 10 (DW_TAG_member)
    <1d0>   DW_AT_name        : (indirect string, offset: 0x2b4d): __pad2
    <1d4>   DW_AT_decl_file   : 4
    <1d5>   DW_AT_decl_line   : 302
    <1d7>   DW_AT_type        : <0x8a>
    <1db>   DW_AT_data_member_location: 160
 <2><1dc>: Abbrev Number: 10 (DW_TAG_member)
    <1dd>   DW_AT_name        : (indirect string, offset: 0x2b54): __pad3
    <1e1>   DW_AT_decl_file   : 4
    <1e2>   DW_AT_decl_line   : 303
    <1e4>   DW_AT_type        : <0x8a>
    <1e8>   DW_AT_data_member_location: 168
 <2><1e9>: Abbrev Number: 10 (DW_TAG_member)
    <1ea>   DW_AT_name        : (indirect string, offset: 0x2b5b): __pad4
    <1ee>   DW_AT_decl_file   : 4
    <1ef>   DW_AT_decl_line   : 304
    <1f1>   DW_AT_type        : <0x8a>
    <1f5>   DW_AT_data_member_location: 176
 <2><1f6>: Abbrev Number: 10 (DW_TAG_member)
    <1f7>   DW_AT_name        : (indirect string, offset: 0x2b62): __pad5
    <1fb>   DW_AT_decl_file   : 4
    <1fc>   DW_AT_decl_line   : 306
    <1fe>   DW_AT_type        : <0x31>
    <202>   DW_AT_data_member_location: 184
 <2><203>: Abbrev Number: 10 (DW_TAG_member)
    <204>   DW_AT_name        : (indirect string, offset: 0x1f5e): _mode
    <208>   DW_AT_decl_file   : 4
    <209>   DW_AT_decl_line   : 307
    <20b>   DW_AT_type        : <0x66>
    <20f>   DW_AT_data_member_location: 192
 <2><210>: Abbrev Number: 10 (DW_TAG_member)
    <211>   DW_AT_name        : (indirect string, offset: 0x4d43): _unused2
    <215>   DW_AT_decl_file   : 4
    <216>   DW_AT_decl_line   : 309
    <218>   DW_AT_type        : <0x278>
    <21c>   DW_AT_data_member_location: 196
 <2><21d>: Abbrev Number: 0
 <1><21e>: Abbrev Number: 11 (DW_TAG_typedef)
    <21f>   DW_AT_name        : (indirect string, offset: 0x20f): _IO_lock_t
    <223>   DW_AT_decl_file   : 4
    <224>   DW_AT_decl_line   : 154
 <1><225>: Abbrev Number: 8 (DW_TAG_structure_type)
    <226>   DW_AT_name        : (indirect string, offset: 0x1be8): _IO_marker
    <22a>   DW_AT_byte_size   : 24
    <22b>   DW_AT_decl_file   : 4
    <22c>   DW_AT_decl_line   : 160
    <22d>   DW_AT_sibling     : <0x256>
 <2><231>: Abbrev Number: 9 (DW_TAG_member)
    <232>   DW_AT_name        : (indirect string, offset: 0x1a76): _next
    <236>   DW_AT_decl_file   : 4
    <237>   DW_AT_decl_line   : 161
    <238>   DW_AT_type        : <0x256>
    <23c>   DW_AT_data_member_location: 0
 <2><23d>: Abbrev Number: 9 (DW_TAG_member)
    <23e>   DW_AT_name        : (indirect string, offset: 0x4169): _sbuf
    <242>   DW_AT_decl_file   : 4
    <243>   DW_AT_decl_line   : 162
    <244>   DW_AT_type        : <0x25c>
    <248>   DW_AT_data_member_location: 8
 <2><249>: Abbrev Number: 9 (DW_TAG_member)
    <24a>   DW_AT_name        : (indirect string, offset: 0xed6): _pos
    <24e>   DW_AT_decl_file   : 4
    <24f>   DW_AT_decl_line   : 166
    <250>   DW_AT_type        : <0x66>
    <254>   DW_AT_data_member_location: 16
 <2><255>: Abbrev Number: 0
 <1><256>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <257>   DW_AT_byte_size   : 8
    <258>   DW_AT_type        : <0x225>
 <1><25c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <25d>   DW_AT_byte_size   : 8
    <25e>   DW_AT_type        : <0x9e>
 <1><262>: Abbrev Number: 12 (DW_TAG_array_type)
    <263>   DW_AT_type        : <0x92>
    <267>   DW_AT_sibling     : <0x272>
 <2><26b>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <26c>   DW_AT_type        : <0x3c>
    <270>   DW_AT_upper_bound : 0
 <2><271>: Abbrev Number: 0
 <1><272>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <273>   DW_AT_byte_size   : 8
    <274>   DW_AT_type        : <0x21e>
 <1><278>: Abbrev Number: 12 (DW_TAG_array_type)
    <279>   DW_AT_type        : <0x92>
    <27d>   DW_AT_sibling     : <0x288>
 <2><281>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <282>   DW_AT_type        : <0x3c>
    <286>   DW_AT_upper_bound : 19
 <2><287>: Abbrev Number: 0
 <1><288>: Abbrev Number: 14 (DW_TAG_structure_type)
    <289>   DW_AT_name        : (indirect string, offset: 0x38c1): _IO_FILE_plus
    <28d>   DW_AT_declaration : 1
 <1><28d>: Abbrev Number: 15 (DW_TAG_variable)
    <28e>   DW_AT_name        : (indirect string, offset: 0x253e): _IO_2_1_stdin_
    <292>   DW_AT_decl_file   : 4
    <293>   DW_AT_decl_line   : 319
    <295>   DW_AT_type        : <0x288>
    <299>   DW_AT_external    : 1
    <299>   DW_AT_declaration : 1
 <1><299>: Abbrev Number: 15 (DW_TAG_variable)
    <29a>   DW_AT_name        : (indirect string, offset: 0x25b4): _IO_2_1_stdout_
    <29e>   DW_AT_decl_file   : 4
    <29f>   DW_AT_decl_line   : 320
    <2a1>   DW_AT_type        : <0x288>
    <2a5>   DW_AT_external    : 1
    <2a5>   DW_AT_declaration : 1
 <1><2a5>: Abbrev Number: 15 (DW_TAG_variable)
    <2a6>   DW_AT_name        : (indirect string, offset: 0x1f0d): _IO_2_1_stderr_
    <2aa>   DW_AT_decl_file   : 4
    <2ab>   DW_AT_decl_line   : 321
    <2ad>   DW_AT_type        : <0x288>
    <2b1>   DW_AT_external    : 1
    <2b1>   DW_AT_declaration : 1
 <1><2b1>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <2b2>   DW_AT_byte_size   : 8
    <2b3>   DW_AT_type        : <0x99>
 <1><2b7>: Abbrev Number: 7 (DW_TAG_const_type)
    <2b8>   DW_AT_type        : <0x2b1>
 <1><2bc>: Abbrev Number: 16 (DW_TAG_variable)
    <2bd>   DW_AT_name        : (indirect string, offset: 0x229a): stdin
    <2c1>   DW_AT_decl_file   : 5
    <2c2>   DW_AT_decl_line   : 135
    <2c3>   DW_AT_type        : <0x25c>
    <2c7>   DW_AT_external    : 1
    <2c7>   DW_AT_declaration : 1
 <1><2c7>: Abbrev Number: 16 (DW_TAG_variable)
    <2c8>   DW_AT_name        : (indirect string, offset: 0x4182): stdout
    <2cc>   DW_AT_decl_file   : 5
    <2cd>   DW_AT_decl_line   : 136
    <2ce>   DW_AT_type        : <0x25c>
    <2d2>   DW_AT_external    : 1
    <2d2>   DW_AT_declaration : 1
 <1><2d2>: Abbrev Number: 16 (DW_TAG_variable)
    <2d3>   DW_AT_name        : (indirect string, offset: 0x1858): stderr
    <2d7>   DW_AT_decl_file   : 5
    <2d8>   DW_AT_decl_line   : 137
    <2d9>   DW_AT_type        : <0x25c>
    <2dd>   DW_AT_external    : 1
    <2dd>   DW_AT_declaration : 1
 <1><2dd>: Abbrev Number: 16 (DW_TAG_variable)
    <2de>   DW_AT_name        : (indirect string, offset: 0x1656): sys_nerr
    <2e2>   DW_AT_decl_file   : 6
    <2e3>   DW_AT_decl_line   : 26
    <2e4>   DW_AT_type        : <0x66>
    <2e8>   DW_AT_external    : 1
    <2e8>   DW_AT_declaration : 1
 <1><2e8>: Abbrev Number: 12 (DW_TAG_array_type)
    <2e9>   DW_AT_type        : <0x2b7>
    <2ed>   DW_AT_sibling     : <0x2f3>
 <2><2f1>: Abbrev Number: 17 (DW_TAG_subrange_type)
 <2><2f2>: Abbrev Number: 0
 <1><2f3>: Abbrev Number: 7 (DW_TAG_const_type)
    <2f4>   DW_AT_type        : <0x2e8>
 <1><2f8>: Abbrev Number: 16 (DW_TAG_variable)
    <2f9>   DW_AT_name        : (indirect string, offset: 0x1541): sys_errlist
    <2fd>   DW_AT_decl_file   : 6
    <2fe>   DW_AT_decl_line   : 27
    <2ff>   DW_AT_type        : <0x2f3>
    <303>   DW_AT_external    : 1
    <303>   DW_AT_declaration : 1
 <1><303>: Abbrev Number: 18 (DW_TAG_subprogram)
    <304>   DW_AT_external    : 1
    <304>   DW_AT_name        : (indirect string, offset: 0x3033): main
    <308>   DW_AT_decl_file   : 1
    <309>   DW_AT_decl_line   : 3
    <30a>   DW_AT_prototyped  : 1
    <30a>   DW_AT_type        : <0x66>
    <30e>   DW_AT_low_pc      : 0x5fa
    <316>   DW_AT_high_pc     : 0x2b
    <31e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <320>   DW_AT_GNU_all_call_sites: 1
    <320>   DW_AT_sibling     : <0x365>
 <2><324>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <325>   DW_AT_name        : (indirect string, offset: 0x733): argc
    <329>   DW_AT_decl_file   : 1
    <32a>   DW_AT_decl_line   : 3
    <32b>   DW_AT_type        : <0x66>
    <32f>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><332>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <333>   DW_AT_name        : (indirect string, offset: 0x1cf4): argv
    <337>   DW_AT_decl_file   : 1
    <338>   DW_AT_decl_line   : 3
    <339>   DW_AT_type        : <0x365>
    <33d>   DW_AT_location    : 2 byte block: 91 50 	(DW_OP_fbreg: -48)
 <2><340>: Abbrev Number: 20 (DW_TAG_variable)
    <341>   DW_AT_name        : a
    <343>   DW_AT_decl_file   : 1
    <344>   DW_AT_decl_line   : 5
    <345>   DW_AT_type        : <0x66>
    <349>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><34c>: Abbrev Number: 20 (DW_TAG_variable)
    <34d>   DW_AT_name        : b
    <34f>   DW_AT_decl_file   : 1
    <350>   DW_AT_decl_line   : 5
    <351>   DW_AT_type        : <0x66>
    <355>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><358>: Abbrev Number: 20 (DW_TAG_variable)
    <359>   DW_AT_name        : c
    <35b>   DW_AT_decl_file   : 1
    <35c>   DW_AT_decl_line   : 5
    <35d>   DW_AT_type        : <0x66>
    <361>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><364>: Abbrev Number: 0
 <1><365>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <366>   DW_AT_byte_size   : 8
    <367>   DW_AT_type        : <0x8c>
 <1><36b>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_structure_type    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subrange_type    [no children]
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      552
  DWARF Version:               2
  Prologue Length:             525
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/usr/lib/gcc/x86_64-linux-gnu/7/include
  2	/usr/x86_64-linux-gnu/include/bits
  3	/usr/x86_64-linux-gnu/include
  4	/usr/x86_64-linux-gnu/include/sys
  5	/usr/x86_64-linux-gnu/include/gnu
  6	/usr/x86_64-linux-gnu/include/bits/types

 The File Name Table (offset 0xf2):
  Entry	Dir	Time	Size	Name
  1	0	0	0	add_int.c
  2	1	0	0	stddef.h
  3	2	0	0	types.h
  4	2	0	0	libio.h
  5	3	0	0	stdio.h
  6	2	0	0	sys_errlist.h
  7	3	0	0	stdc-predef.h
  8	2	0	0	libc-header-start.h
  9	3	0	0	features.h
  10	4	0	0	cdefs.h
  11	2	0	0	wordsize.h
  12	2	0	0	long-double.h
  13	5	0	0	stubs.h
  14	5	0	0	stubs-64.h
  15	2	0	0	typesizes.h
  16	6	0	0	__FILE.h
  17	6	0	0	FILE.h
  18	2	0	0	_G_config.h
  19	6	0	0	__mbstate_t.h
  20	1	0	0	stdarg.h
  21	2	0	0	stdio_lim.h

 Line Number Statements:
  [0x00000217]  Extended opcode 2: set Address to 0x5fa
  [0x00000222]  Special opcode 8: advance Address by 0 to 0x5fa and Line by 3 to 4
  [0x00000223]  Special opcode 162: advance Address by 11 to 0x605 and Line by 3 to 7
  [0x00000224]  Special opcode 104: advance Address by 7 to 0x60c and Line by 1 to 8
  [0x00000225]  Special opcode 105: advance Address by 7 to 0x613 and Line by 2 to 10
  [0x00000226]  Special opcode 230: advance Address by 16 to 0x623 and Line by 1 to 11
  [0x00000227]  Advance PC by 2 to 0x625
  [0x00000229]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5f494f5f 44454320 30323000 5f5f5349 _IO_DEC 020.__SI
  0x00000010 475f4154 4f4d4943 5f4d4158 5f5f2030 G_ATOMIC_MAX__ 0
  0x00000020 78376666 66666666 66005f5f 464c5436 x7fffffff.__FLT6
  0x00000030 345f4841 535f5155 4945545f 4e414e5f 4_HAS_QUIET_NAN_
  0x00000040 5f203100 5f53495a 455f545f 44454649 _ 1._SIZE_T_DEFI
  0x00000050 4e454420 005f494f 5f49535f 46494c45 NED ._IO_IS_FILE
  0x00000060 42554620 30783230 3030005f 5f444543 BUF 0x2000.__DEC
  0x00000070 36345f53 55424e4f 524d414c 5f4d494e 64_SUBNORMAL_MIN
  0x00000080 5f5f2030 2e303030 30303030 30303030 __ 0.00000000000
  0x00000090 30303031 452d3338 33444400 5f5f464c 0001E-383DD.__FL
  0x000000a0 5433325f 4841535f 494e4649 4e495459 T32_HAS_INFINITY
  0x000000b0 5f5f2031 005f5f46 4c543634 5f4d4158 __ 1.__FLT64_MAX
  0x000000c0 5f455850 5f5f2031 30323400 5f5f464c _EXP__ 1024.__FL
  0x000000d0 545f4d49 4e5f3130 5f455850 5f5f2028 T_MIN_10_EXP__ (
  0x000000e0 2d333729 005f5f53 59534341 4c4c5f55 -37).__SYSCALL_U
  0x000000f0 4c4f4e47 5f545950 45205f5f 554c4f4e LONG_TYPE __ULON
  0x00000100 47574f52 445f5459 5045005f 5f464c54 GWORD_TYPE.__FLT
  0x00000110 3634585f 45505349 4c4f4e5f 5f20312e 64X_EPSILON__ 1.
  0x00000120 30383432 30323137 32343835 35303434 0842021724855044
  0x00000130 33343030 37343532 38303038 36393934 3400745280086994
  0x00000140 31373165 2d313946 36347800 5f5f464c 171e-19F64x.__FL
  0x00000150 54333258 5f4d4158 5f455850 5f5f2031 T32X_MAX_EXP__ 1
  0x00000160 30323400 5f73686f 72746275 66005f5f 024._shortbuf.__
  0x00000170 4743435f 41544f4d 49435f54 4553545f GCC_ATOMIC_TEST_
  0x00000180 414e445f 5345545f 54525545 56414c20 AND_SET_TRUEVAL 
  0x00000190 31005f5f 4f46465f 545f4d41 54434845 1.__OFF_T_MATCHE
  0x000001a0 535f4f46 4636345f 54203100 5f5f4445 S_OFF64_T 1.__DE
  0x000001b0 4336345f 45505349 4c4f4e5f 5f203145 C64_EPSILON__ 1E
  0x000001c0 2d313544 44005f5f 44424c5f 44454e4f -15DD.__DBL_DENO
  0x000001d0 524d5f4d 494e5f5f 20282864 6f75626c RM_MIN__ ((doubl
  0x000001e0 6529342e 39343036 35363435 38343132 e)4.940656458412
  0x000001f0 34363534 34313736 35363837 39323836 4654417656879286
  0x00000200 38323231 33373265 2d333234 4c29005f 8221372e-324L)._
  0x00000210 494f5f6c 6f636b5f 74005f5f 494e5450 IO_lock_t.__INTP
  0x00000220 54525f4d 41585f5f 20307837 66666666 TR_MAX__ 0x7ffff
  0x00000230 66666666 66666666 6666664c 005f475f fffffffffffL._G_
  0x00000240 48415645 5f53545f 424c4b53 495a4520 HAVE_ST_BLKSIZE 
  0x00000250 64656669 6e656420 285f5354 41544255 defined (_STATBU
  0x00000260 465f5354 5f424c4b 53495a45 29005f5f F_ST_BLKSIZE).__
  0x00000270 666c6578 61727220 5b5d005f 5f464c54 flexarr [].__FLT
  0x00000280 33325f4d 414e545f 4449475f 5f203234 32_MANT_DIG__ 24
  0x00000290 005f5f47 43435f48 4156455f 53594e43 .__GCC_HAVE_SYNC
  0x000002a0 5f434f4d 50415245 5f414e44 5f535741 _COMPARE_AND_SWA
  0x000002b0 505f3820 31005f49 4f535f42 494e2031 P_8 1._IOS_BIN 1
  0x000002c0 32380046 494c454e 414d455f 4d415820 28.FILENAME_MAX 
  0x000002d0 34303936 005f5354 44435f50 52454445 4096._STDC_PREDE
  0x000002e0 465f4820 31005f5f 5553455f 49534f43 F_H 1.__USE_ISOC
  0x000002f0 31312031 005f494f 46424620 30005f49 11 1._IOFBF 0._I
  0x00000300 4f5f6275 665f656e 64005f49 4f5f454f O_buf_end._IO_EO
  0x00000310 465f5345 454e2030 78313000 5345454b F_SEEN 0x10.SEEK
  0x00000320 5f435552 2031005f 5f464c54 3332585f _CUR 1.__FLT32X_
  0x00000330 44454349 4d414c5f 4449475f 5f203137 DECIMAL_DIG__ 17
  0x00000340 005f5f6b 385f5f20 31005f5f 44424c5f .__k8__ 1.__DBL_
  0x00000350 4d494e5f 4558505f 5f20282d 31303231 MIN_EXP__ (-1021
  0x00000360 29005f5f 494e545f 46415354 36345f4d ).__INT_FAST64_M
  0x00000370 41585f5f 20307837 66666666 66666666 AX__ 0x7ffffffff
  0x00000380 66666666 6666664c 005f5f68 61735f69 fffffffL.__has_i
  0x00000390 6e636c75 64655f6e 65787428 53545229 nclude_next(STR)
  0x000003a0 205f5f68 61735f69 6e636c75 64655f6e  __has_include_n
  0x000003b0 6578745f 5f285354 5229005f 494f5f52 ext__(STR)._IO_R
  0x000003c0 49474854 20303400 5f494f5f 55534552 IGHT 04._IO_USER
  0x000003d0 5f425546 2031005f 5359535f 43444546 _BUF 1._SYS_CDEF
  0x000003e0 535f4820 31005f5f 464c5433 32585f4d S_H 1.__FLT32X_M
  0x000003f0 41585f5f 20312e37 39373639 33313334 AX__ 1.797693134
  0x00000400 38363233 31353730 38313435 32373432 8623157081452742
  0x00000410 33373331 37303433 3537652b 33303846 3731704357e+308F
  0x00000420 33327800 5f5f676c 6962635f 756e6c69 32x.__glibc_unli
  0x00000430 6b656c79 28636f6e 6429205f 5f627569 kely(cond) __bui
  0x00000440 6c74696e 5f657870 65637420 2828636f ltin_expect ((co
  0x00000450 6e64292c 20302900 5f5f5349 5a454f46 nd), 0).__SIZEOF
  0x00000460 5f57494e 545f545f 5f203400 5f5f474e _WINT_T__ 4.__GN
  0x00000470 55435f50 52455245 51286d61 6a2c6d69 UC_PREREQ(maj,mi
  0x00000480 6e292028 285f5f47 4e55435f 5f203c3c n) ((__GNUC__ <<
  0x00000490 20313629 202b205f 5f474e55 435f4d49  16) + __GNUC_MI
  0x000004a0 4e4f525f 5f203e3d 2028286d 616a2920 NOR__ >= ((maj) 
  0x000004b0 3c3c2031 3629202b 20286d69 6e292900 << 16) + (min)).
  0x000004c0 5f5f5549 4e545054 525f4d41 585f5f20 __UINTPTR_MAX__ 
  0x000004d0 30786666 66666666 66666666 66666666 0xffffffffffffff
  0x000004e0 6666554c 005f5f76 615f6172 675f7061 ffUL.__va_arg_pa
  0x000004f0 636b5f6c 656e2829 205f5f62 75696c74 ck_len() __built
  0x00000500 696e5f76 615f6172 675f7061 636b5f6c in_va_arg_pack_l
  0x00000510 656e2028 29005f47 5f484156 455f4d4d en ()._G_HAVE_MM
  0x00000520 41502031 005f5f61 74747269 62757465 AP 1.__attribute
  0x00000530 5f636f6e 73745f5f 205f5f61 74747269 _const__ __attri
  0x00000540 62757465 5f5f2028 285f5f63 6f6e7374 bute__ ((__const
  0x00000550 5f5f2929 005f5f47 4c494243 5f555345 __)).__GLIBC_USE
  0x00000560 5f444550 52454341 5445445f 47455453 _DEPRECATED_GETS
  0x00000570 005f494f 5f4e4f5f 57524954 45532038 ._IO_NO_WRITES 8
  0x00000580 005f5f47 4e55435f 4d494e4f 525f5f20 .__GNUC_MINOR__ 
  0x00000590 33005f5f 5553455f 4c415247 4546494c 3.__USE_LARGEFIL
  0x000005a0 45363400 5f5f524c 494d5f54 5f545950 E64.__RLIM_T_TYP
  0x000005b0 45205f5f 53595343 414c4c5f 554c4f4e E __SYSCALL_ULON
  0x000005c0 475f5459 5045005f 5f4c4442 4c5f5245 G_TYPE.__LDBL_RE
  0x000005d0 44495228 6e616d65 2c70726f 746f2920 DIR(name,proto) 
  0x000005e0 6e616d65 2070726f 746f005f 494f5f77 name proto._IO_w
  0x000005f0 72697465 5f656e64 005f5f47 4c494243 rite_end.__GLIBC
  0x00000600 5f505245 52455128 6d616a2c 6d696e29 _PREREQ(maj,min)
  0x00000610 2028285f 5f474c49 42435f5f 203c3c20  ((__GLIBC__ << 
  0x00000620 31362920 2b205f5f 474c4942 435f4d49 16) + __GLIBC_MI
  0x00000630 4e4f525f 5f203e3d 2028286d 616a2920 NOR__ >= ((maj) 
  0x00000640 3c3c2031 3629202b 20286d69 6e292900 << 16) + (min)).
  0x00000650 5f5f6e65 65645f4e 554c4c20 005f5f46 __need_NULL .__F
  0x00000660 4c543634 5f4d494e 5f5f2032 2e323235 LT64_MIN__ 2.225
  0x00000670 30373338 35383530 37323031 33383330 0738585072013830
  0x00000680 39303233 32373137 33333234 30343036 9023271733240406
  0x00000690 652d3330 38463634 005f5f4c 4f4e475f e-308F64.__LONG_
  0x000006a0 4c4f4e47 5f574944 54485f5f 20363400 LONG_WIDTH__ 64.
  0x000006b0 5f504f53 49585f53 4f555243 45005f5f _POSIX_SOURCE.__
  0x000006c0 464c545f 44454e4f 524d5f4d 494e5f5f FLT_DENORM_MIN__
  0x000006d0 20312e34 30313239 38343634 33323438  1.4012984643248
  0x000006e0 31373037 30393233 37323935 38333238 1707092372958328
  0x000006f0 39393136 3133652d 34354600 5f5f4348 991613e-45F.__CH
  0x00000700 41523136 5f545950 455f5f20 73686f72 AR16_TYPE__ shor
  0x00000710 7420756e 7369676e 65642069 6e74005f t unsigned int._
  0x00000720 5f53495a 454f465f 53495a45 5f545f5f _SIZEOF_SIZE_T__
  0x00000730 20380061 72676300 5f5f4f52 4445525f  8.argc.__ORDER_
  0x00000740 4249475f 454e4449 414e5f5f 20343332 BIG_ENDIAN__ 432
  0x00000750 31005f5f 474e5543 5f5f2037 005f494f 1.__GNUC__ 7._IO
  0x00000760 5f4c494e 455f4255 46203078 32303000 _LINE_BUF 0x200.
  0x00000770 5f5f5553 455f4953 4f435858 3131005f __USE_ISOCXX11._
  0x00000780 5f555345 5f415446 494c4520 31005f5f _USE_ATFILE 1.__
  0x00000790 6e6f6e6e 756c6c28 70617261 6d732920 nonnull(params) 
  0x000007a0 5f5f6174 74726962 7574655f 5f202828 __attribute__ ((
  0x000007b0 5f5f6e6f 6e6e756c 6c5f5f20 70617261 __nonnull__ para
  0x000007c0 6d732929 005f5f55 494e5436 345f4328 ms)).__UINT64_C(
  0x000007d0 63292063 20232320 554c005f 5f474e55 c) c ## UL.__GNU
  0x000007e0 5f4c4942 52415259 5f5f005f 5f44424c _LIBRARY__.__DBL
  0x000007f0 5f4d414e 545f4449 475f5f20 3533005f _MANT_DIG__ 53._
  0x00000800 5f555345 5f504f53 49583139 39353036 _USE_POSIX199506
  0x00000810 2031005f 5f737475 625f6368 666c6167  1.__stub_chflag
  0x00000820 7320005f 5f494e54 5f4d4158 5f5f2030 s .__INT_MAX__ 0
  0x00000830 78376666 66666666 66005f66 6c616773 x7fffffff._flags
  0x00000840 32005f5f 4e54484e 4c286663 7429205f 2.__NTHNL(fct) _
  0x00000850 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00000860 5f6e6f74 68726f77 5f5f2929 20666374 _nothrow__)) fct
  0x00000870 005f5f73 7475625f 66636866 6c616773 .__stub_fchflags
  0x00000880 20005f5f 494e5431 365f5459 50455f5f  .__INT16_TYPE__
  0x00000890 2073686f 72742069 6e74005f 5f444543  short int.__DEC
  0x000008a0 494d414c 5f424944 5f464f52 4d41545f IMAL_BID_FORMAT_
  0x000008b0 5f203100 5f5f4445 4333325f 45505349 _ 1.__DEC32_EPSI
  0x000008c0 4c4f4e5f 5f203145 2d364446 005f5349 LON__ 1E-6DF._SI
  0x000008d0 5a455f54 5f444543 4c415245 4420005f ZE_T_DECLARED ._
  0x000008e0 5f46445f 53455453 495a4520 31303234 _FD_SETSIZE 1024
  0x000008f0 005f5f4c 44424c5f 4449475f 5f203138 .__LDBL_DIG__ 18
  0x00000900 005f6d61 726b6572 73005f5f 41544f4d ._markers.__ATOM
  0x00000910 49435f53 45515f43 53542035 005f5f55 IC_SEQ_CST 5.__U
  0x00000920 53455f50 4f534958 32203100 5f5f5553 SE_POSIX2 1.__US
  0x00000930 455f4953 4f433935 2031005f 5f53495a E_ISOC95 1.__SIZ
  0x00000940 454f465f 53484f52 545f5f20 32005f47 EOF_SHORT__ 2._G
  0x00000950 5f76615f 6c697374 205f5f67 6e75635f _va_list __gnuc_
  0x00000960 76615f6c 69737400 5f5f5549 4e543634 va_list.__UINT64
  0x00000970 5f545950 455f5f20 6c6f6e67 20756e73 _TYPE__ long uns
  0x00000980 69676e65 6420696e 74005f5f 494e545f igned int.__INT_
  0x00000990 46415354 33325f4d 41585f5f 20307837 FAST32_MAX__ 0x7
  0x000009a0 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x000009b0 005f5f49 4e545f4c 45415354 385f5459 .__INT_LEAST8_TY
  0x000009c0 50455f5f 20736967 6e656420 63686172 PE__ signed char
  0x000009d0 005f5f73 697a655f 7420005f 5f55494e .__size_t .__UIN
  0x000009e0 545f4c45 41535433 325f5459 50455f5f T_LEAST32_TYPE__
  0x000009f0 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x00000a00 73747562 5f736967 72657475 726e2000 stub_sigreturn .
  0x00000a10 5f5f7074 725f7420 766f6964 202a005f __ptr_t void *._
  0x00000a20 5f533332 5f545950 4520696e 74005f5f _S32_TYPE int.__
  0x00000a30 53544443 5f4e4f5f 54485245 4144535f STDC_NO_THREADS_
  0x00000a40 5f203100 5f5f4259 54455f4f 52444552 _ 1.__BYTE_ORDER
  0x00000a50 5f5f205f 5f4f5244 45525f4c 4954544c __ __ORDER_LITTL
  0x00000a60 455f454e 4449414e 5f5f005f 5f4c4442 E_ENDIAN__.__LDB
  0x00000a70 4c5f4d49 4e5f5f20 332e3336 32313033 L_MIN__ 3.362103
  0x00000a80 31343331 31323039 33353036 32363236 1431120935062626
  0x00000a90 37373831 37333231 37353236 30652d34 7781732175260e-4
  0x00000aa0 3933324c 005f5f46 4c543332 5f4d494e 932L.__FLT32_MIN
  0x00000ab0 5f31305f 4558505f 5f20282d 33372900 _10_EXP__ (-37).
  0x00000ac0 5f5f4442 4c5f4841 535f4445 4e4f524d __DBL_HAS_DENORM
  0x00000ad0 5f5f2031 005f5f49 4e545f4c 45415354 __ 1.__INT_LEAST
  0x00000ae0 36345f54 5950455f 5f206c6f 6e672069 64_TYPE__ long i
  0x00000af0 6e74005f 5f574348 41525f4d 494e5f5f nt.__WCHAR_MIN__
  0x00000b00 20282d5f 5f574348 41525f4d 41585f5f  (-__WCHAR_MAX__
  0x00000b10 202d2031 29005f49 4f5f5348 4f57504f  - 1)._IO_SHOWPO
  0x00000b20 494e5420 30343030 005f5f6f 66665f74 INT 0400.__off_t
  0x00000b30 5f646566 696e6564 20005f5f 53544443 _defined .__STDC
  0x00000b40 5f555446 5f33325f 5f203100 5f5f424c _UTF_32__ 1.__BL
  0x00000b50 4b53495a 455f545f 54595045 205f5f53 KSIZE_T_TYPE __S
  0x00000b60 59534341 4c4c5f53 4c4f4e47 5f545950 YSCALL_SLONG_TYP
  0x00000b70 45005f5f 494e545f 4c454153 5431365f E.__INT_LEAST16_
  0x00000b80 4d41585f 5f203078 37666666 005f5f4c MAX__ 0x7fff.__L
  0x00000b90 44424c5f 52454449 525f4445 434c286e DBL_REDIR_DECL(n
  0x00000ba0 616d6529 2000474e 55204331 3120372e ame) .GNU C11 7.
  0x00000bb0 332e3020 2d6d7475 6e653d67 656e6572 3.0 -mtune=gener
  0x00000bc0 6963202d 6d617263 683d7838 362d3634 ic -march=x86-64
  0x00000bd0 202d6767 64623320 2d667374 61636b2d  -ggdb3 -fstack-
  0x00000be0 70726f74 6563746f 722d7374 726f6e67 protector-strong
  0x00000bf0 005f5f53 43484152 5f4d4158 5f5f2030 .__SCHAR_MAX__ 0
  0x00000c00 78376600 5f5f6578 7465726e 5f616c77 x7f.__extern_alw
  0x00000c10 6179735f 696e6c69 6e652065 78746572 ays_inline exter
  0x00000c20 6e205f5f 616c7761 79735f69 6e6c696e n __always_inlin
  0x00000c30 65205f5f 61747472 69627574 655f5f20 e __attribute__ 
  0x00000c40 28285f5f 676e755f 696e6c69 6e655f5f ((__gnu_inline__
  0x00000c50 2929005f 5f464c54 36345f44 49475f5f )).__FLT64_DIG__
  0x00000c60 20313500 5f5f494e 545f4641 5354385f  15.__INT_FAST8_
  0x00000c70 54595045 5f5f2073 69676e65 64206368 TYPE__ signed ch
  0x00000c80 6172005f 5f504945 5f5f2032 005f494f ar.__PIE__ 2._IO
  0x00000c90 5f6f6666 36345f74 205f5f6f 66663634 _off64_t __off64
  0x00000ca0 5f74005f 5f474c49 42435f55 53455f49 _t.__GLIBC_USE_I
  0x00000cb0 45435f36 30353539 5f545950 45535f45 EC_60559_TYPES_E
  0x00000cc0 5854005f 5f464c54 3332585f 4841535f XT.__FLT32X_HAS_
  0x00000cd0 494e4649 4e495459 5f5f2031 005f5f55 INFINITY__ 1.__U
  0x00000ce0 53455f55 4e495839 38005f5f 5553455f SE_UNIX98.__USE_
  0x00000cf0 464f5254 4946595f 4c455645 4c203000 FORTIFY_LEVEL 0.
  0x00000d00 5f415446 494c455f 534f5552 4345005f _ATFILE_SOURCE._
  0x00000d10 5f555345 5f415446 494c4500 5f5f5549 _USE_ATFILE.__UI
  0x00000d20 4e545f4c 45415354 385f5459 50455f5f NT_LEAST8_TYPE__
  0x00000d30 20756e73 69676e65 64206368 6172005f  unsigned char._
  0x00000d40 5f53495a 454f465f 494e5431 32385f5f _SIZEOF_INT128__
  0x00000d50 20313600 5f5f4e54 48286663 7429205f  16.__NTH(fct) _
  0x00000d60 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00000d70 5f6e6f74 68726f77 5f5f205f 5f4c4541 _nothrow__ __LEA
  0x00000d80 46292920 66637400 5f494f53 5f415445 F)) fct._IOS_ATE
  0x00000d90 4e442034 005f5f67 6c696263 5f6d6163 ND 4.__glibc_mac
  0x00000da0 726f5f77 61726e69 6e67286d 65737361 ro_warning(messa
  0x00000db0 67652920 5f5f676c 6962635f 6d616372 ge) __glibc_macr
  0x00000dc0 6f5f7761 726e696e 67312028 47434320 o_warning1 (GCC 
  0x00000dd0 7761726e 696e6720 6d657373 61676529 warning message)
  0x00000de0 005f5f46 4c543132 385f4841 535f5155 .__FLT128_HAS_QU
  0x00000df0 4945545f 4e414e5f 5f203100 5f545f53 IET_NAN__ 1._T_S
  0x00000e00 495a4520 005f5f46 4c543132 385f4d41 IZE .__FLT128_MA
  0x00000e10 585f5f20 312e3138 39373331 34393533 X__ 1.1897314953
  0x00000e20 35373233 31373635 30383537 35393332 5723176508575932
  0x00000e30 36363238 30303730 32652b34 39333246 662800702e+4932F
  0x00000e40 31323800 42554653 495a205f 494f5f42 128.BUFSIZ _IO_B
  0x00000e50 55465349 5a005f41 5446494c 455f534f UFSIZ._ATFILE_SO
  0x00000e60 55524345 2031005f 5f464c54 3634585f URCE 1.__FLT64X_
  0x00000e70 4449475f 5f203138 005f5f49 4e545f4c DIG__ 18.__INT_L
  0x00000e80 45415354 31365f57 49445448 5f5f2031 EAST16_WIDTH__ 1
  0x00000e90 36005f5f 46534944 5f545f54 59504520 6.__FSID_T_TYPE 
  0x00000ea0 73747275 6374207b 20696e74 205f5f76 struct { int __v
  0x00000eb0 616c5b32 5d3b207d 005f5f73 73697a65 al[2]; }.__ssize
  0x00000ec0 5f745f64 6566696e 65642000 5f545f53 _t_defined ._T_S
  0x00000ed0 495a455f 20005f70 6f73005f 494f5f66 IZE_ ._pos._IO_f
  0x00000ee0 6572726f 725f756e 6c6f636b 6564285f error_unlocked(_
  0x00000ef0 5f667029 20282828 5f5f6670 292d3e5f _fp) (((__fp)->_
  0x00000f00 666c6167 73202620 5f494f5f 4552525f flags & _IO_ERR_
  0x00000f10 5345454e 2920213d 20302900 5f5f6578 SEEN) != 0).__ex
  0x00000f20 7465726e 5f696e6c 696e6520 65787465 tern_inline exte
  0x00000f30 726e205f 5f696e6c 696e6520 5f5f6174 rn __inline __at
  0x00000f40 74726962 7574655f 5f202828 5f5f676e tribute__ ((__gn
  0x00000f50 755f696e 6c696e65 5f5f2929 005f4743 u_inline__))._GC
  0x00000f60 435f5349 5a455f54 20005f5f 464c5433 C_SIZE_T .__FLT3
  0x00000f70 325f4841 535f4445 4e4f524d 5f5f2031 2_HAS_DENORM__ 1
  0x00000f80 005f5f75 6e69785f 5f203100 5f5f4743 .__unix__ 1.__GC
  0x00000f90 435f4841 56455f53 594e435f 434f4d50 C_HAVE_SYNC_COMP
  0x00000fa0 4152455f 414e445f 53574150 5f312031 ARE_AND_SWAP_1 1
  0x00000fb0 005f494f 5f736176 655f656e 64005f5f ._IO_save_end.__
  0x00000fc0 464c5436 34585f4d 494e5f45 58505f5f FLT64X_MIN_EXP__
  0x00000fd0 20282d31 36333831 29005f42 53445f53  (-16381)._BSD_S
  0x00000fe0 495a455f 545f2000 5f5f7374 75625f73 IZE_T_ .__stub_s
  0x00000ff0 65746c6f 67696e20 005f5f46 4c545f44 etlogin .__FLT_D
  0x00001000 49475f5f 2036005f 5f494e54 5f464153 IG__ 6.__INT_FAS
  0x00001010 5431365f 57494454 485f5f20 3634005f T16_WIDTH__ 64._
  0x00001020 5f474343 5f41544f 4d49435f 424f4f4c _GCC_ATOMIC_BOOL
  0x00001030 5f4c4f43 4b5f4652 45452032 005f494f _LOCK_FREE 2._IO
  0x00001040 5f6f6666 5f74205f 5f6f6666 5f74005f _off_t __off_t._
  0x00001050 5f706965 5f5f2032 005f5354 44494f5f _pie__ 2._STDIO_
  0x00001060 48203100 5f5f4445 4333325f 4d494e5f H 1.__DEC32_MIN_
  0x00001070 5f203145 2d393544 46005f5f 494e544d _ 1E-95DF.__INTM
  0x00001080 41585f4d 41585f5f 20307837 66666666 AX_MAX__ 0x7ffff
  0x00001090 66666666 66666666 6666664c 005f4249 fffffffffffL._BI
  0x000010a0 54535f4c 4942494f 5f482031 005f5f47 TS_LIBIO_H 1.__G
  0x000010b0 43435f49 45435f35 35392032 005f5f46 CC_IEC_559 2.__F
  0x000010c0 4c543132 385f4d49 4e5f4558 505f5f20 LT128_MIN_EXP__ 
  0x000010d0 282d3136 33383129 005f5f46 4c543332 (-16381).__FLT32
  0x000010e0 5f484153 5f515549 45545f4e 414e5f5f _HAS_QUIET_NAN__
  0x000010f0 2031005f 4253445f 53495a45 5f545f44  1._BSD_SIZE_T_D
  0x00001100 4546494e 45445f20 005f5f55 494e545f EFINED_ .__UINT_
  0x00001110 4c454153 5431365f 4d41585f 5f203078 LEAST16_MAX__ 0x
  0x00001120 66666666 005f5f55 494e545f 46415354 ffff.__UINT_FAST
  0x00001130 36345f4d 41585f5f 20307866 66666666 64_MAX__ 0xfffff
  0x00001140 66666666 66666666 66666655 4c005f49 fffffffffffUL._I
  0x00001150 4f5f4552 525f5345 454e2030 78323000 O_ERR_SEEN 0x20.
  0x00001160 5f5f6174 74726962 7574655f 75736564 __attribute_used
  0x00001170 5f5f205f 5f617474 72696275 74655f5f __ __attribute__
  0x00001180 2028285f 5f757365 645f5f29 29005f5f  ((__used__)).__
  0x00001190 61747472 69627574 655f6172 74696669 attribute_artifi
  0x000011a0 6369616c 5f5f205f 5f617474 72696275 cial__ __attribu
  0x000011b0 74655f5f 2028285f 5f617274 69666963 te__ ((__artific
  0x000011c0 69616c5f 5f292900 5f494f5f 66747279 ial__))._IO_ftry
  0x000011d0 6c6f636b 66696c65 285f6670 2920005f lockfile(_fp) ._
  0x000011e0 5f55494e 545f4c45 41535438 5f4d4158 _UINT_LEAST8_MAX
  0x000011f0 5f5f2030 78666600 5f5f474c 4942435f __ 0xff.__GLIBC_
  0x00001200 5553455f 4c49425f 45585432 2030005f USE_LIB_EXT2 0._
  0x00001210 5f444543 3132385f 4d494e5f 4558505f _DEC128_MIN_EXP_
  0x00001220 5f20282d 36313432 29002f68 6f6d652f _ (-6142)./home/
  0x00001230 7562756e 74752f45 6e67696e 65657269 ubuntu/Engineeri
  0x00001240 6e672f50 726f6772 616d6d69 6e672f44 ng/Programming/D
  0x00001250 69736173 73656d62 6c696e67 2d42696e isassembling-Bin
  0x00001260 61726965 732f432f 496e7465 6c5f6172 aries/C/Intel_ar
  0x00001270 63686974 65637475 72652f41 4d443634 chitecture/AMD64
  0x00001280 2f416464 5f496e74 2f576974 685f4465 /Add_Int/With_De
  0x00001290 6275675f 496e666f 005f5f4b 45524e45 bug_Info.__KERNE
  0x000012a0 4c5f5354 52494354 5f4e414d 45532000 L_STRICT_NAMES .
  0x000012b0 5f5f5743 4841525f 54595045 5f5f2069 __WCHAR_TYPE__ i
  0x000012c0 6e74005f 5f494e54 385f4d41 585f5f20 nt.__INT8_MAX__ 
  0x000012d0 30783766 00676574 63285f66 7029205f 0x7f.getc(_fp) _
  0x000012e0 494f5f67 65746320 285f6670 29005f5f IO_getc (_fp).__
  0x000012f0 44454331 32385f45 5053494c 4f4e5f5f DEC128_EPSILON__
  0x00001300 2031452d 3333444c 005f5f55 53455f50  1E-33DL.__USE_P
  0x00001310 4f534958 31393935 3036005f 5f6e6565 OSIX199506.__nee
  0x00001320 645f4e55 4c4c005f 5f524544 49524543 d_NULL.__REDIREC
  0x00001330 545f4e54 485f4c44 424c286e 616d652c T_NTH_LDBL(name,
  0x00001340 70726f74 6f2c616c 69617329 205f5f52 proto,alias) __R
  0x00001350 45444952 4543545f 4e544820 286e616d EDIRECT_NTH (nam
  0x00001360 652c2070 726f746f 2c20616c 69617329 e, proto, alias)
  0x00001370 005f5f52 45444952 4543545f 4e54484e .__REDIRECT_NTHN
  0x00001380 4c286e61 6d652c70 726f746f 2c616c69 L(name,proto,ali
  0x00001390 61732920 6e616d65 2070726f 746f205f as) name proto _
  0x000013a0 5f61736d 5f5f2028 5f5f4153 4d4e414d _asm__ (__ASMNAM
  0x000013b0 45202823 616c6961 73292920 5f5f5448 E (#alias)) __TH
  0x000013c0 524f574e 4c005f5f 464c5431 32385f4d ROWNL.__FLT128_M
  0x000013d0 41585f45 58505f5f 20313633 3834005f AX_EXP__ 16384._
  0x000013e0 5f464c54 5f524144 49585f5f 2032005f _FLT_RADIX__ 2._
  0x000013f0 5f464c54 3332585f 44454e4f 524d5f4d _FLT32X_DENORM_M
  0x00001400 494e5f5f 20342e39 34303635 36343538 IN__ 4.940656458
  0x00001410 34313234 36353434 31373635 36383739 4124654417656879
  0x00001420 32383638 32323133 3732652d 33323446 2868221372e-324F
  0x00001430 33327800 5f5f676c 6962635f 636c616e 32x.__glibc_clan
  0x00001440 675f6861 735f6578 74656e73 696f6e28 g_has_extension(
  0x00001450 65787429 2030005f 5f504d54 28617267 ext) 0.__PMT(arg
  0x00001460 73292061 72677300 5f5f4749 445f545f s) args.__GID_T_
  0x00001470 54595045 205f5f55 33325f54 59504500 TYPE __U32_TYPE.
  0x00001480 5f5f5349 5a454f46 5f4c4f4e 475f444f __SIZEOF_LONG_DO
  0x00001490 55424c45 5f5f2031 36005f5f 44424c5f UBLE__ 16.__DBL_
  0x000014a0 4841535f 51554945 545f4e41 4e5f5f20 HAS_QUIET_NAN__ 
  0x000014b0 31005f5f 77757220 005f4249 54535f54 1.__wur ._BITS_T
  0x000014c0 59504553 5f482031 005f5f48 4156455f YPES_H 1.__HAVE_
  0x000014d0 434f4c55 4d4e2000 5f5f4c44 424c5f44 COLUMN .__LDBL_D
  0x000014e0 454e4f52 4d5f4d49 4e5f5f20 332e3634 ENORM_MIN__ 3.64
  0x000014f0 35313939 35333138 38323437 34363032 5199531882474602
  0x00001500 35323834 30353933 33363139 34313938 5284059336194198
  0x00001510 32652d34 3935314c 005f5f50 49445f54 2e-4951L.__PID_T
  0x00001520 5f545950 45205f5f 5333325f 54595045 _TYPE __S32_TYPE
  0x00001530 005f5f73 7475625f 66617474 61636820 .__stub_fattach 
  0x00001540 00737973 5f657272 6c697374 005f5f46 .sys_errlist.__F
  0x00001550 4c543634 5f484153 5f494e46 494e4954 LT64_HAS_INFINIT
  0x00001560 595f5f20 31005f5f 55494e54 5f464153 Y__ 1.__UINT_FAS
  0x00001570 54385f4d 41585f5f 20307866 66005f5f T8_MAX__ 0xff.__
  0x00001580 41544f4d 49435f48 4c455f52 454c4541 ATOMIC_HLE_RELEA
  0x00001590 53452031 33313037 32005f5f 4c44424c SE 131072.__LDBL
  0x000015a0 5f4d4158 5f455850 5f5f2031 36333834 _MAX_EXP__ 16384
  0x000015b0 005f5f73 7475625f 67747479 20005f42 .__stub_gtty ._B
  0x000015c0 4954535f 54595045 53495a45 535f4820 ITS_TYPESIZES_H 
  0x000015d0 31005f5f 55534543 4f4e4453 5f545f54 1.__USECONDS_T_T
  0x000015e0 59504520 5f5f5533 325f5459 5045005f YPE __U32_TYPE._
  0x000015f0 494f5f70 65656b63 285f6670 29205f49 IO_peekc(_fp) _I
  0x00001600 4f5f7065 656b635f 756e6c6f 636b6564 O_peekc_unlocked
  0x00001610 20285f66 7029005f 5f494e54 5054525f  (_fp).__INTPTR_
  0x00001620 54595045 5f5f206c 6f6e6720 696e7400 TYPE__ long int.
  0x00001630 5f5f4445 4336345f 4d41585f 5f20392e __DEC64_MAX__ 9.
  0x00001640 39393939 39393939 39393939 39393945 999999999999999E
  0x00001650 33383444 44007379 735f6e65 7272005f 384DD.sys_nerr._
  0x00001660 5f474343 5f41544f 4d49435f 494e545f _GCC_ATOMIC_INT_
  0x00001670 4c4f434b 5f465245 45203200 5f535953 LOCK_FREE 2._SYS
  0x00001680 5f53495a 455f545f 4820005f 5f4d4d58 _SIZE_T_H .__MMX
  0x00001690 5f5f2031 005f5f42 4c4b434e 545f545f __ 1.__BLKCNT_T_
  0x000016a0 54595045 205f5f53 59534341 4c4c5f53 TYPE __SYSCALL_S
  0x000016b0 4c4f4e47 5f545950 45005f49 4f5f5348 LONG_TYPE._IO_SH
  0x000016c0 4f574241 53452030 32303000 5f5f7374 OWBASE 0200.__st
  0x000016d0 75625f73 74747920 005f6669 6c656e6f ub_stty ._fileno
  0x000016e0 005f5f48 4156455f 47454e45 5249435f .__HAVE_GENERIC_
  0x000016f0 53454c45 4354494f 4e203100 5f5f524c SELECTION 1.__RL
  0x00001700 494d3634 5f545f54 59504520 5f5f5551 IM64_T_TYPE __UQ
  0x00001710 5541445f 54595045 005f5f46 4c543132 UAD_TYPE.__FLT12
  0x00001720 385f4d41 4e545f44 49475f5f 20313133 8_MANT_DIG__ 113
  0x00001730 005f5f4f 52444552 5f4c4954 544c455f .__ORDER_LITTLE_
  0x00001740 454e4449 414e5f5f 20313233 34005f5f ENDIAN__ 1234.__
  0x00001750 5553455f 584f5045 4e324b20 31005f5f USE_XOPEN2K 1.__
  0x00001760 53495a45 4f465f50 54524449 46465f54 SIZEOF_PTRDIFF_T
  0x00001770 5f5f2038 005f494f 535f5452 554e4320 __ 8._IOS_TRUNC 
  0x00001780 3136005f 5f444543 3132385f 4d414e54 16.__DEC128_MANT
  0x00001790 5f444947 5f5f2033 34005f5f 5553455f _DIG__ 34.__USE_
  0x000017a0 49534f43 39392031 005f5f49 4e543332 ISOC99 1.__INT32
  0x000017b0 5f545950 455f5f20 696e7400 5f5f4b45 _TYPE__ int.__KE
  0x000017c0 524e454c 5f535452 4943545f 4e414d45 RNEL_STRICT_NAME
  0x000017d0 53005f5f 5533325f 54595045 20756e73 S.__U32_TYPE uns
  0x000017e0 69676e65 6420696e 74005f5f 636f6465 igned int.__code
  0x000017f0 5f6d6f64 656c5f73 6d616c6c 5f5f2031 _model_small__ 1
  0x00001800 005f5f55 53455f49 534f4339 35005f5f .__USE_ISOC95.__
  0x00001810 464c5436 34585f48 41535f44 454e4f52 FLT64X_HAS_DENOR
  0x00001820 4d5f5f20 31005f5f 44454333 325f4d41 M__ 1.__DEC32_MA
  0x00001830 585f4558 505f5f20 3937005f 494f4e42 X_EXP__ 97._IONB
  0x00001840 46203200 5f5f5553 455f4953 4f433939 F 2.__USE_ISOC99
  0x00001850 00737464 65727220 73746465 7272005f .stderr stderr._
  0x00001860 76746162 6c655f6f 66667365 74005f47 vtable_offset._G
  0x00001870 5f494f5f 494f5f46 494c455f 56455253 _IO_IO_FILE_VERS
  0x00001880 494f4e20 30783230 30303100 5f494f5f ION 0x20001._IO_
  0x00001890 54494544 5f505554 5f474554 20307834 TIED_PUT_GET 0x4
  0x000018a0 3030004c 5f746d70 6e616d20 3230005f 00.L_tmpnam 20._
  0x000018b0 494f5f63 6c65616e 75705f72 6567696f IO_cleanup_regio
  0x000018c0 6e5f7374 61727428 5f666374 2c5f6670 n_start(_fct,_fp
  0x000018d0 2920005f 5f535444 435f4945 435f3535 ) .__STDC_IEC_55
  0x000018e0 395f434f 4d504c45 585f5f20 31005f5f 9_COMPLEX__ 1.__
  0x000018f0 474c4942 435f5553 455f4445 50524543 GLIBC_USE_DEPREC
  0x00001900 41544544 5f474554 53203000 5f494f5f ATED_GETS 0._IO_
  0x00001910 48455820 30313030 005f5f46 4c543634 HEX 0100.__FLT64
  0x00001920 585f4d49 4e5f3130 5f455850 5f5f2028 X_MIN_10_EXP__ (
  0x00001930 2d343933 3129005f 5f737475 625f7075 -4931).__stub_pu
  0x00001940 746d7367 20005f49 4f5f7265 61645f62 tmsg ._IO_read_b
  0x00001950 61736500 5f5f5354 44435f49 534f5f31 ase.__STDC_ISO_1
  0x00001960 30363436 5f5f2032 30313730 364c005f 0646__ 201706L._
  0x00001970 5f424547 494e5f44 45434c53 20005f49 _BEGIN_DECLS ._I
  0x00001980 4f5f7374 64696e20 28285f49 4f5f4649 O_stdin ((_IO_FI
  0x00001990 4c452a29 28265f49 4f5f325f 315f7374 LE*)(&_IO_2_1_st
  0x000019a0 64696e5f 2929005f 5f464c54 3132385f din_)).__FLT128_
  0x000019b0 4d41585f 31305f45 58505f5f 20343933 MAX_10_EXP__ 493
  0x000019c0 32005f5f 464c5431 32385f4d 494e5f5f 2.__FLT128_MIN__
  0x000019d0 20332e33 36323130 33313433 31313230  3.3621031431120
  0x000019e0 39333530 36323632 36373738 31373332 9350626267781732
  0x000019f0 31373532 3630652d 34393332 46313238 175260e-4932F128
  0x00001a00 005f5f53 55534543 4f4e4453 5f545f54 .__SUSECONDS_T_T
  0x00001a10 59504520 5f5f5359 5343414c 4c5f534c YPE __SYSCALL_SL
  0x00001a20 4f4e475f 54595045 00534545 4b5f454e ONG_TYPE.SEEK_EN
  0x00001a30 44203200 5f5f494e 545f4641 5354385f D 2.__INT_FAST8_
  0x00001a40 57494454 485f5f20 38005f5f 464c5436 WIDTH__ 8.__FLT6
  0x00001a50 345f4d49 4e5f3130 5f455850 5f5f2028 4_MIN_10_EXP__ (
  0x00001a60 2d333037 29005f5f 73747562 5f666465 -307).__stub_fde
  0x00001a70 74616368 20005f6e 65787400 5f5f4442 tach ._next.__DB
  0x00001a80 4c5f4d41 585f5f20 2828646f 75626c65 L_MAX__ ((double
  0x00001a90 29312e37 39373639 33313334 38363233 )1.7976931348623
  0x00001aa0 31353730 38313435 32373432 33373331 1570814527423731
  0x00001ab0 37303433 3537652b 3330384c 29005f44 704357e+308L)._D
  0x00001ac0 45464155 4c545f53 4f555243 45203100 EFAULT_SOURCE 1.
  0x00001ad0 5f5f524c 494d5f54 5f4d4154 43484553 __RLIM_T_MATCHES
  0x00001ae0 5f524c49 4d36345f 54203100 5f5f616d _RLIM64_T 1.__am
  0x00001af0 6436345f 5f203100 5f5f5f5f 6d627374 d64__ 1.____mbst
  0x00001b00 6174655f 745f6465 66696e65 64203100 ate_t_defined 1.
  0x00001b10 5f494f5f 44454c45 54455f44 4f4e545f _IO_DELETE_DONT_
  0x00001b20 434c4f53 45203078 3430005f 5f464c54 CLOSE 0x40.__FLT
  0x00001b30 33325f44 4543494d 414c5f44 49475f5f 32_DECIMAL_DIG__
  0x00001b40 2039005f 5f464c54 3132385f 4449475f  9.__FLT128_DIG_
  0x00001b50 5f203333 005f5f55 494e5431 365f5459 _ 33.__UINT16_TY
  0x00001b60 50455f5f 2073686f 72742075 6e736967 PE__ short unsig
  0x00001b70 6e656420 696e7400 5f5f5354 44435f55 ned int.__STDC_U
  0x00001b80 54465f31 365f5f20 31005f4f 4c445f53 TF_16__ 1._OLD_S
  0x00001b90 5444494f 5f4d4147 49432030 78464142 TDIO_MAGIC 0xFAB
  0x00001ba0 43303030 30005f49 4f535f4e 4f435245 C0000._IOS_NOCRE
  0x00001bb0 41544520 3332005f 5f574348 41525f57 ATE 32.__WCHAR_W
  0x00001bc0 49445448 5f5f2033 32005f5f 4743435f IDTH__ 32.__GCC_
  0x00001bd0 41544f4d 49435f43 4841525f 4c4f434b ATOMIC_CHAR_LOCK
  0x00001be0 5f465245 45203200 5f494f5f 6d61726b _FREE 2._IO_mark
  0x00001bf0 6572005f 5f494e54 5f4c4541 53543332 er.__INT_LEAST32
  0x00001c00 5f4d4158 5f5f2030 78376666 66666666 _MAX__ 0x7ffffff
  0x00001c10 66005f5f 4c4f4e47 5f4c4f4e 475f4d41 f.__LONG_LONG_MA
  0x00001c20 585f5f20 30783766 66666666 66666666 X__ 0x7fffffffff
  0x00001c30 66666666 66664c4c 005f5f55 4c4f4e47 ffffffLL.__ULONG
  0x00001c40 33325f54 59504520 756e7369 676e6564 32_TYPE unsigned
  0x00001c50 20696e74 005f5f55 494e545f 4c454153  int.__UINT_LEAS
  0x00001c60 5431365f 54595045 5f5f2073 686f7274 T16_TYPE__ short
  0x00001c70 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x00001c80 464c545f 4d41585f 31305f45 58505f5f FLT_MAX_10_EXP__
  0x00001c90 20333800 5f494f5f 534b4950 57532030  38._IO_SKIPWS 0
  0x00001ca0 31005f5f 464c5433 32585f45 5053494c 1.__FLT32X_EPSIL
  0x00001cb0 4f4e5f5f 20322e32 32303434 36303439 ON__ 2.220446049
  0x00001cc0 32353033 31333038 30383437 32363333 2503130808472633
  0x00001cd0 33363138 31363430 3632652d 31364633 3618164062e-16F3
  0x00001ce0 3278004e 554c4c20 2828766f 6964202a 2x.NULL ((void *
  0x00001cf0 29302900 61726776 005f5f55 53455f50 )0).argv.__USE_P
  0x00001d00 4f534958 5f494d50 4c494349 544c5920 OSIX_IMPLICITLY 
  0x00001d10 31005f49 4f5f6665 6f665f75 6e6c6f63 1._IO_feof_unloc
  0x00001d20 6b656428 5f5f6670 29202828 285f5f66 ked(__fp) (((__f
  0x00001d30 70292d3e 5f666c61 67732026 205f494f p)->_flags & _IO
  0x00001d40 5f454f46 5f534545 4e292021 3d203029 _EOF_SEEN) != 0)
  0x00001d50 005f5f4e 4f5f494e 4c494e45 5f5f2031 .__NO_INLINE__ 1
  0x00001d60 005f494f 5f737464 65727220 28285f49 ._IO_stderr ((_I
  0x00001d70 4f5f4649 4c452a29 28265f49 4f5f325f O_FILE*)(&_IO_2_
  0x00001d80 315f7374 64657272 5f292900 5f5f7661 1_stderr_)).__va
  0x00001d90 5f617267 5f706163 6b282920 5f5f6275 _arg_pack() __bu
  0x00001da0 696c7469 6e5f7661 5f617267 5f706163 iltin_va_arg_pac
  0x00001db0 6b202829 005f5f46 4c545f4d 414e545f k ().__FLT_MANT_
  0x00001dc0 4449475f 5f203234 005f5f44 41444452 DIG__ 24.__DADDR
  0x00001dd0 5f545f54 59504520 5f5f5333 325f5459 _T_TYPE __S32_TY
  0x00001de0 5045005f 5f464c54 36345f44 4543494d PE.__FLT64_DECIM
  0x00001df0 414c5f44 49475f5f 20313700 5f5f4743 AL_DIG__ 17.__GC
  0x00001e00 435f4841 56455f53 594e435f 434f4d50 C_HAVE_SYNC_COMP
  0x00001e10 4152455f 414e445f 53574150 5f342031 ARE_AND_SWAP_4 1
  0x00001e20 005f5f46 4c543332 5f4d494e 5f455850 .__FLT32_MIN_EXP
  0x00001e30 5f5f2028 2d313235 29005f5f 53495a45 __ (-125).__SIZE
  0x00001e40 5f545950 455f5f20 6c6f6e67 20756e73 _TYPE__ long uns
  0x00001e50 69676e65 6420696e 74005f5f 4c44424c igned int.__LDBL
  0x00001e60 5f4d4158 5f5f2031 2e313839 37333134 _MAX__ 1.1897314
  0x00001e70 39353335 37323331 37363530 32313236 9535723176502126
  0x00001e80 33383533 30333039 37303231 652b3439 385303097021e+49
  0x00001e90 33324c00 5f5f4445 435f4556 414c5f4d 32L.__DEC_EVAL_M
  0x00001ea0 4554484f 445f5f20 32005f5f 464c545f ETHOD__ 2.__FLT_
  0x00001eb0 4d41585f 5f20332e 34303238 32333436 MAX__ 3.40282346
  0x00001ec0 36333835 32383835 39383131 37303431 6385288598117041
  0x00001ed0 38333438 34353136 39323565 2b333846 83484516925e+38F
  0x00001ee0 005f494f 5f756964 5f74205f 5f756964 ._IO_uid_t __uid
  0x00001ef0 5f74005f 5f44424c 5f4d494e 5f31305f _t.__DBL_MIN_10_
  0x00001f00 4558505f 5f20282d 33303729 005f494f EXP__ (-307)._IO
  0x00001f10 5f325f31 5f737464 6572725f 005f5f55 _2_1_stderr_.__U
  0x00001f20 494e5433 325f4d41 585f5f20 30786666 INT32_MAX__ 0xff
  0x00001f30 66666666 66665500 5f494f5f 4f435420 ffffffU._IO_OCT 
  0x00001f40 30343000 5f5f464c 54313238 5f484153 040.__FLT128_HAS
  0x00001f50 5f494e46 494e4954 595f5f20 31005f6d _INFINITY__ 1._m
  0x00001f60 6f646500 5f494f5f 48415645 5f53545f ode._IO_HAVE_ST_
  0x00001f70 424c4b53 495a4520 5f475f48 4156455f BLKSIZE _G_HAVE_
  0x00001f80 53545f42 4c4b5349 5a45005f 5f464c54 ST_BLKSIZE.__FLT
  0x00001f90 36345f48 41535f44 454e4f52 4d5f5f20 64_HAS_DENORM__ 
  0x00001fa0 31005f5f 464c545f 4556414c 5f4d4554 1.__FLT_EVAL_MET
  0x00001fb0 484f445f 5f203000 5f5f4653 424c4b43 HOD__ 0.__FSBLKC
  0x00001fc0 4e545f54 5f545950 45205f5f 53595343 NT_T_TYPE __SYSC
  0x00001fd0 414c4c5f 554c4f4e 475f5459 5045005f ALL_ULONG_TYPE._
  0x00001fe0 5f464c54 3332585f 4841535f 44454e4f _FLT32X_HAS_DENO
  0x00001ff0 524d5f5f 2031005f 5f783836 5f36345f RM__ 1.__x86_64_
  0x00002000 5f203100 5f5f464c 54363458 5f4d4158 _ 1.__FLT64X_MAX
  0x00002010 5f455850 5f5f2031 36333834 005f5f56 _EXP__ 16384.__V
  0x00002020 45525349 4f4e5f5f 2022372e 332e3022 ERSION__ "7.3.0"
  0x00002030 005f494f 5f4c494e 4b454420 30783830 ._IO_LINKED 0x80
  0x00002040 005f5f52 45444952 45435428 6e616d65 .__REDIRECT(name
  0x00002050 2c70726f 746f2c61 6c696173 29206e61 ,proto,alias) na
  0x00002060 6d652070 726f746f 205f5f61 736d5f5f me proto __asm__
  0x00002070 20285f5f 41534d4e 414d4520 2823616c  (__ASMNAME (#al
  0x00002080 69617329 29005f5f 4653424c 4b434e54 ias)).__FSBLKCNT
  0x00002090 36345f54 5f545950 45205f5f 55515541 64_T_TYPE __UQUA
  0x000020a0 445f5459 5045005f 5f464c54 3634585f D_TYPE.__FLT64X_
  0x000020b0 4d41585f 5f20312e 31383937 33313439 MAX__ 1.18973149
  0x000020c0 35333537 32333137 36353032 31323633 5357231765021263
  0x000020d0 38353330 33303937 30323165 2b343933 85303097021e+493
  0x000020e0 32463634 78005f49 4f5f7265 61645f70 2F64x._IO_read_p
  0x000020f0 7472005f 5f53495a 455f5420 005f5f49 tr.__SIZE_T .__I
  0x00002100 445f545f 54595045 205f5f55 33325f54 D_T_TYPE __U32_T
  0x00002110 59504500 5f5f5349 5a455f54 5f5f2000 YPE.__SIZE_T__ .
  0x00002120 5f494f5f 66756e6c 6f636b66 696c6528 _IO_funlockfile(
  0x00002130 5f667029 20005f5f 4b45595f 545f5459 _fp) .__KEY_T_TY
  0x00002140 5045205f 5f533332 5f545950 45005f5f PE __S32_TYPE.__
  0x00002150 494e545f 4c454153 5436345f 4d41585f INT_LEAST64_MAX_
  0x00002160 5f203078 37666666 66666666 66666666 _ 0x7fffffffffff
  0x00002170 66666666 4c005f5f 494e545f 4c454153 ffffL.__INT_LEAS
  0x00002180 54385f57 49445448 5f5f2038 005f5f4c T8_WIDTH__ 8.__L
  0x00002190 44424c5f 52454449 52315f4e 5448286e DBL_REDIR1_NTH(n
  0x000021a0 616d652c 70726f74 6f2c616c 69617329 ame,proto,alias)
  0x000021b0 206e616d 65207072 6f746f20 5f5f5448  name proto __TH
  0x000021c0 524f5700 5f5f5549 4e54385f 4d41585f ROW.__UINT8_MAX_
  0x000021d0 5f203078 6666005f 494f5f46 4c414753 _ 0xff._IO_FLAGS
  0x000021e0 325f4e4f 5443414e 43454c20 32005f5f 2_NOTCANCEL 2.__
  0x000021f0 616c7761 79735f69 6e6c696e 65205f5f always_inline __
  0x00002200 696e6c69 6e65205f 5f617474 72696275 inline __attribu
  0x00002210 74655f5f 2028285f 5f616c77 6179735f te__ ((__always_
  0x00002220 696e6c69 6e655f5f 2929005f 5f55494e inline__)).__UIN
  0x00002230 5431365f 4d41585f 5f203078 66666666 T16_MAX__ 0xffff
  0x00002240 005f494f 5f4d4147 49432030 78464241 ._IO_MAGIC 0xFBA
  0x00002250 44303030 30005f5f 474c4942 435f5553 D0000.__GLIBC_US
  0x00002260 45284629 205f5f47 4c494243 5f555345 E(F) __GLIBC_USE
  0x00002270 5f202323 2046005f 5f494e54 5f464153 _ ## F.__INT_FAS
  0x00002280 5436345f 54595045 5f5f206c 6f6e6720 T64_TYPE__ long 
  0x00002290 696e7400 73746469 6e207374 64696e00 int.stdin stdin.
  0x000022a0 5f5f6174 74726962 7574655f 6e6f696e __attribute_noin
  0x000022b0 6c696e65 5f5f205f 5f617474 72696275 line__ __attribu
  0x000022c0 74655f5f 2028285f 5f6e6f69 6e6c696e te__ ((__noinlin
  0x000022d0 655f5f29 29005f5f 53544443 5f564552 e__)).__STDC_VER
  0x000022e0 53494f4e 5f5f2032 30313131 324c005f SION__ 201112L._
  0x000022f0 5f494e54 4d41585f 57494454 485f5f20 _INTMAX_WIDTH__ 
  0x00002300 3634005f 5f444543 33325f4d 41585f5f 64.__DEC32_MAX__
  0x00002310 20392e39 39393939 39453936 4446005f  9.999999E96DF._
  0x00002320 5f474e55 435f5641 5f4c4953 5420005f _GNUC_VA_LIST ._
  0x00002330 5f505452 44494646 5f4d4158 5f5f2030 _PTRDIFF_MAX__ 0
  0x00002340 78376666 66666666 66666666 66666666 x7ffffffffffffff
  0x00002350 664c005f 5f555345 5f504f53 49583139 fL.__USE_POSIX19
  0x00002360 39333039 005f5f49 4e545f4c 45415354 9309.__INT_LEAST
  0x00002370 31365f54 5950455f 5f207368 6f727420 16_TYPE__ short 
  0x00002380 696e7400 5f5f464c 5433325f 4d41585f int.__FLT32_MAX_
  0x00002390 4558505f 5f203132 38005f5f 676e755f EXP__ 128.__gnu_
  0x000023a0 6c696e75 785f5f20 31005f5f 5354445f linux__ 1.__STD_
  0x000023b0 54595045 20747970 65646566 005f5f4d TYPE typedef.__M
  0x000023c0 4f44455f 545f5459 5045205f 5f553332 ODE_T_TYPE __U32
  0x000023d0 5f545950 45005f5f 53495a45 4f465f46 _TYPE.__SIZEOF_F
  0x000023e0 4c4f4154 3132385f 5f203136 005f5f47 LOAT128__ 16.__G
  0x000023f0 4e55435f 53544443 5f494e4c 494e455f NUC_STDC_INLINE_
  0x00002400 5f203100 5f5f4442 4c5f4449 475f5f20 _ 1.__DBL_DIG__ 
  0x00002410 3135005f 5f474343 5f41544f 4d49435f 15.__GCC_ATOMIC_
  0x00002420 43484152 31365f54 5f4c4f43 4b5f4652 CHAR16_T_LOCK_FR
  0x00002430 45452032 005f5f49 4e545f4c 45415354 EE 2.__INT_LEAST
  0x00002440 385f4d41 585f5f20 30783766 005f5f53 8_MAX__ 0x7f.__S
  0x00002450 31365f54 59504520 73686f72 7420696e 16_TYPE short in
  0x00002460 74005f5f 4c503634 5f5f2031 005f5f53 t.__LP64__ 1.__S
  0x00002470 59534341 4c4c5f57 4f524453 495a4520 YSCALL_WORDSIZE 
  0x00002480 3634005f 5f474343 5f41544f 4d49435f 64.__GCC_ATOMIC_
  0x00002490 4c4f4e47 5f4c4f43 4b5f4652 45452032 LONG_LOCK_FREE 2
  0x000024a0 005f5f46 4c543332 585f4449 475f5f20 .__FLT32X_DIG__ 
  0x000024b0 3135005f 5f464c54 3332585f 4d414e54 15.__FLT32X_MANT
  0x000024c0 5f444947 5f5f2035 33005f49 4f5f7772 _DIG__ 53._IO_wr
  0x000024d0 6974655f 62617365 005f4c50 36342031 ite_base._LP64 1
  0x000024e0 005f4645 41545552 45535f48 2031005f ._FEATURES_H 1._
  0x000024f0 5f464c54 33325f44 49475f5f 2036005f _FLT32_DIG__ 6._
  0x00002500 5f465357 4f52445f 545f5459 5045205f _FSWORD_T_TYPE _
  0x00002510 5f535953 43414c4c 5f534c4f 4e475f54 _SYSCALL_SLONG_T
  0x00002520 59504500 5f5f534c 4f4e4757 4f52445f YPE.__SLONGWORD_
  0x00002530 54595045 206c6f6e 6720696e 74005f49 TYPE long int._I
  0x00002540 4f5f325f 315f7374 64696e5f 00616464 O_2_1_stdin_.add
  0x00002550 5f696e74 2e63005f 5f464c54 3634585f _int.c.__FLT64X_
  0x00002560 4d41585f 31305f45 58505f5f 20343933 MAX_10_EXP__ 493
  0x00002570 32005f5f 44424c5f 4d494e5f 5f202828 2.__DBL_MIN__ ((
  0x00002580 646f7562 6c652932 2e323235 30373338 double)2.2250738
  0x00002590 35383530 37323031 33383330 39303233 5850720138309023
  0x000025a0 32373137 33333234 30343036 652d3330 271733240406e-30
  0x000025b0 384c2900 5f494f5f 325f315f 7374646f 8L)._IO_2_1_stdo
  0x000025c0 75745f00 5f5f5549 4e545f46 41535433 ut_.__UINT_FAST3
  0x000025d0 325f4d41 585f5f20 30786666 66666666 2_MAX__ 0xffffff
  0x000025e0 66666666 66666666 6666554c 005f5f46 ffffffffffUL.__F
  0x000025f0 494e4954 455f4d41 54485f4f 4e4c595f INITE_MATH_ONLY_
  0x00002600 5f203000 5f494f5f 73617665 5f626173 _ 0._IO_save_bas
  0x00002610 65005f5f 5531365f 54595045 20756e73 e.__U16_TYPE uns
  0x00002620 69676e65 64207368 6f727420 696e7400 igned short int.
  0x00002630 454f4620 282d3129 005f5f46 4c543634 EOF (-1).__FLT64
  0x00002640 5f4d4158 5f5f2031 2e373937 36393331 _MAX__ 1.7976931
  0x00002650 33343836 32333135 37303831 34353237 3486231570814527
  0x00002660 34323337 33313730 34333537 652b3330 423731704357e+30
  0x00002670 38463634 005f5f73 697a655f 745f5f20 8F64.__size_t__ 
  0x00002680 005f5f55 494e5438 5f545950 455f5f20 .__UINT8_TYPE__ 
  0x00002690 756e7369 676e6564 20636861 72005f49 unsigned char._I
  0x000026a0 4f5f6669 6c655f66 6c616773 205f666c O_file_flags _fl
  0x000026b0 61677300 5f5f5553 455f584f 50454e32 ags.__USE_XOPEN2
  0x000026c0 4b385853 49005f5f 494e545f 46415354 K8XSI.__INT_FAST
  0x000026d0 33325f54 5950455f 5f206c6f 6e672069 32_TYPE__ long i
  0x000026e0 6e74005f 494f535f 494e5055 54203100 nt._IOS_INPUT 1.
  0x000026f0 5f5f4743 435f4153 4d5f464c 41475f4f __GCC_ASM_FLAG_O
  0x00002700 55545055 54535f5f 20310070 75746328 UTPUTS__ 1.putc(
  0x00002710 5f63682c 5f667029 205f494f 5f707574 _ch,_fp) _IO_put
  0x00002720 6320285f 63682c20 5f667029 005f5f55 c (_ch, _fp).__U
  0x00002730 494e545f 4c454153 5436345f 4d41585f INT_LEAST64_MAX_
  0x00002740 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00002750 66666666 554c005f 5f504d54 005f5f55 ffffUL.__PMT.__U
  0x00002760 51554144 5f545950 4520756e 7369676e QUAD_TYPE unsign
  0x00002770 6564206c 6f6e6720 696e7400 5f5f454c ed long int.__EL
  0x00002780 465f5f20 31005f5f 464c5433 32585f4d F__ 1.__FLT32X_M
  0x00002790 494e5f5f 20322e32 32353037 33383538 IN__ 2.225073858
  0x000027a0 35303732 30313338 33303930 32333237 5072013830902327
  0x000027b0 31373333 32343034 3036652d 33303846 1733240406e-308F
  0x000027c0 33327800 5f5f5549 4e545054 525f5459 32x.__UINTPTR_TY
  0x000027d0 50455f5f 206c6f6e 6720756e 7369676e PE__ long unsign
  0x000027e0 65642069 6e74005f 5f494e54 31365f43 ed int.__INT16_C
  0x000027f0 28632920 63005f5f 4743435f 48415645 (c) c.__GCC_HAVE
  0x00002800 5f445741 5246325f 4346495f 41534d20 _DWARF2_CFI_ASM 
  0x00002810 31005f5f 53495a45 4f465f46 4c4f4154 1.__SIZEOF_FLOAT
  0x00002820 5f5f2034 005f5f44 45433332 5f535542 __ 4.__DEC32_SUB
  0x00002830 4e4f524d 414c5f4d 494e5f5f 20302e30 NORMAL_MIN__ 0.0
  0x00002840 30303030 31452d39 35444600 5f494f5f 00001E-95DF._IO_
  0x00002850 49535f41 5050454e 44494e47 20307831 IS_APPENDING 0x1
  0x00002860 30303000 5f5f464c 54363458 5f484153 000.__FLT64X_HAS
  0x00002870 5f515549 45545f4e 414e5f5f 2031005f _QUIET_NAN__ 1._
  0x00002880 5f464c54 5f484153 5f494e46 494e4954 _FLT_HAS_INFINIT
  0x00002890 595f5f20 31005f49 4f535f4e 4f524550 Y__ 1._IOS_NOREP
  0x000028a0 4c414345 20363400 5f5f5354 445f5459 LACE 64.__STD_TY
  0x000028b0 5045005f 5f555345 5f504f53 49583139 PE.__USE_POSIX19
  0x000028c0 39333039 2031005f 494f5f73 697a655f 9309 1._IO_size_
  0x000028d0 74207369 7a655f74 005f5f49 4e4f3634 t size_t.__INO64
  0x000028e0 5f545f54 59504520 5f5f5551 5541445f _T_TYPE __UQUAD_
  0x000028f0 54595045 005f5f47 4e555f4c 49425241 TYPE.__GNU_LIBRA
  0x00002900 52595f5f 2036005f 5f535444 435f5f20 RY__ 6.__STDC__ 
  0x00002910 31005f5f 676c6962 635f6339 395f666c 1.__glibc_c99_fl
  0x00002920 65786172 725f6176 61696c61 626c6520 exarr_available 
  0x00002930 31005f5f 53534532 5f5f2031 005f5f53 1.__SSE2__ 1.__S
  0x00002940 4c4f4e47 33325f54 59504520 696e7400 LONG32_TYPE int.
  0x00002950 5f5f4442 4c5f4d41 585f4558 505f5f20 __DBL_MAX_EXP__ 
  0x00002960 31303234 005f5f53 495a454f 465f4c4f 1024.__SIZEOF_LO
  0x00002970 4e475f5f 2038005f 5f41544f 4d49435f NG__ 8.__ATOMIC_
  0x00002980 434f4e53 554d4520 31005f5f 5553455f CONSUME 1.__USE_
  0x00002990 46494c45 5f4f4646 53455436 34005f49 FILE_OFFSET64._I
  0x000029a0 4f5f464c 41475332 5f4d4d41 50203100 O_FLAGS2_MMAP 1.
  0x000029b0 5f5f464c 5433325f 4d494e5f 5f20312e __FLT32_MIN__ 1.
  0x000029c0 31373534 39343335 30383232 32383735 1754943508222875
  0x000029d0 30373936 38373336 35333732 32323234 0796873653722224
  0x000029e0 35363865 2d333846 3332005f 5f57494e 568e-38F32.__WIN
  0x000029f0 545f5459 50455f5f 20756e73 69676e65 T_TYPE__ unsigne
  0x00002a00 6420696e 74005f5f 5553455f 4d495343 d int.__USE_MISC
  0x00002a10 005f494f 5f636c65 616e7570 5f726567 ._IO_cleanup_reg
  0x00002a20 696f6e5f 656e6428 5f446f69 74292000 ion_end(_Doit) .
  0x00002a30 5f5f494e 5431365f 4d41585f 5f203078 __INT16_MAX__ 0x
  0x00002a40 37666666 005f504f 5349585f 435f534f 7fff._POSIX_C_SO
  0x00002a50 55524345 20323030 3830394c 005f5f53 URCE 200809L.__S
  0x00002a60 43484152 5f574944 54485f5f 2038005f CHAR_WIDTH__ 8._
  0x00002a70 5f55494e 5433325f 43286329 20632023 _UINT32_C(c) c #
  0x00002a80 23205500 5f5f4c44 424c5f4d 494e5f31 # U.__LDBL_MIN_1
  0x00002a90 305f4558 505f5f20 282d3439 33312900 0_EXP__ (-4931).
  0x00002aa0 5f535444 494f5f55 5345535f 494f5354 _STDIO_USES_IOST
  0x00002ab0 5245414d 20005f5f 53495a45 4f465f44 REAM .__SIZEOF_D
  0x00002ac0 4f55424c 455f5f20 38005f5f 55494e54 OUBLE__ 8.__UINT
  0x00002ad0 385f4328 63292063 005f5f42 4c4b434e 8_C(c) c.__BLKCN
  0x00002ae0 5436345f 545f5459 5045205f 5f535155 T64_T_TYPE __SQU
  0x00002af0 41445f54 59504500 5f5f5553 455f464f AD_TYPE.__USE_FO
  0x00002b00 52544946 595f4c45 56454c00 5f5f474c RTIFY_LEVEL.__GL
  0x00002b10 4942435f 5553455f 4c49425f 45585432 IBC_USE_LIB_EXT2
  0x00002b20 005f5f57 494e545f 4d494e5f 5f203055 .__WINT_MIN__ 0U
  0x00002b30 005f5f4c 44424c5f 4d414e54 5f444947 .__LDBL_MANT_DIG
  0x00002b40 5f5f2036 34005f5f 70616431 005f5f70 __ 64.__pad1.__p
  0x00002b50 61643200 5f5f7061 6433005f 5f706164 ad2.__pad3.__pad
  0x00002b60 34005f5f 70616435 005f5f78 38365f36 4.__pad5.__x86_6
  0x00002b70 34203100 5f5f4c44 424c5f45 5053494c 4 1.__LDBL_EPSIL
  0x00002b80 4f4e5f5f 20312e30 38343230 32313732 ON__ 1.084202172
  0x00002b90 34383535 30343433 34303037 34353238 4855044340074528
  0x00002ba0 30303836 39393431 3731652d 31394c00 0086994171e-19L.
  0x00002bb0 5f5f626f 73302870 74722920 5f5f6275 __bos0(ptr) __bu
  0x00002bc0 696c7469 6e5f6f62 6a656374 5f73697a iltin_object_siz
  0x00002bd0 65202870 74722c20 3029005f 494f4c42 e (ptr, 0)._IOLB
  0x00002be0 46203100 5f5f6174 74726962 7574655f F 1.__attribute_
  0x00002bf0 666f726d 61745f61 72675f5f 28782920 format_arg__(x) 
  0x00002c00 5f5f6174 74726962 7574655f 5f202828 __attribute__ ((
  0x00002c10 5f5f666f 726d6174 5f617267 5f5f2028 __format_arg__ (
  0x00002c20 78292929 005f5f5f 5f46494c 455f6465 x))).____FILE_de
  0x00002c30 66696e65 64203100 5f424954 535f5354 fined 1._BITS_ST
  0x00002c40 44494f5f 4c494d5f 48203100 5f5f4c44 DIO_LIM_H 1.__LD
  0x00002c50 424c5f48 41535f49 4e46494e 4954595f BL_HAS_INFINITY_
  0x00002c60 5f203100 5f5f5553 455f504f 53495820 _ 1.__USE_POSIX 
  0x00002c70 31005f5f 494e4f5f 545f4d41 54434845 1.__INO_T_MATCHE
  0x00002c80 535f494e 4f36345f 54203100 5f5f4743 S_INO64_T 1.__GC
  0x00002c90 435f4945 435f3535 395f434f 4d504c45 C_IEC_559_COMPLE
  0x00002ca0 58203200 5f5f5349 475f4154 4f4d4943 X 2.__SIG_ATOMIC
  0x00002cb0 5f4d494e 5f5f2028 2d5f5f53 49475f41 _MIN__ (-__SIG_A
  0x00002cc0 544f4d49 435f4d41 585f5f20 2d203129 TOMIC_MAX__ - 1)
  0x00002cd0 005f494f 5f494e5f 4241434b 55502030 ._IO_IN_BACKUP 0
  0x00002ce0 78313030 005f494f 5f666c6f 636b6669 x100._IO_flockfi
  0x00002cf0 6c65285f 66702920 005f5f53 495a454f le(_fp) .__SIZEO
  0x00002d00 465f5743 4841525f 545f5f20 34005f5f F_WCHAR_T__ 4.__
  0x00002d10 61747472 69627574 655f6465 70726563 attribute_deprec
  0x00002d20 61746564 5f5f205f 5f617474 72696275 ated__ __attribu
  0x00002d30 74655f5f 2028285f 5f646570 72656361 te__ ((__depreca
  0x00002d40 7465645f 5f292900 5f5f464c 54313238 ted__)).__FLT128
  0x00002d50 5f4d494e 5f31305f 4558505f 5f20282d _MIN_10_EXP__ (-
  0x00002d60 34393331 29005f5f 464c4f41 545f574f 4931).__FLOAT_WO
  0x00002d70 52445f4f 52444552 5f5f205f 5f4f5244 RD_ORDER__ __ORD
  0x00002d80 45525f4c 4954544c 455f454e 4449414e ER_LITTLE_ENDIAN
  0x00002d90 5f5f005f 5f474343 5f484156 455f5359 __.__GCC_HAVE_SY
  0x00002da0 4e435f43 4f4d5041 52455f41 4e445f53 NC_COMPARE_AND_S
  0x00002db0 5741505f 32203100 5f475f48 4156455f WAP_2 1._G_HAVE_
  0x00002dc0 4d52454d 41502031 005f5f44 45433332 MREMAP 1.__DEC32
  0x00002dd0 5f4d414e 545f4449 475f5f20 37005f5f _MANT_DIG__ 7.__
  0x00002de0 464c5433 325f4445 4e4f524d 5f4d494e FLT32_DENORM_MIN
  0x00002df0 5f5f2031 2e343031 32393834 36343332 __ 1.40129846432
  0x00002e00 34383137 30373039 32333732 39353833 4817070923729583
  0x00002e10 32383939 31363133 652d3435 46333200 28991613e-45F32.
  0x00002e20 5f5f6e65 65645f73 697a655f 74005f5f __need_size_t.__
  0x00002e30 55494e54 5f464153 5431365f 4d41585f UINT_FAST16_MAX_
  0x00002e40 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00002e50 66666666 554c005f 5f6e6565 645f5f5f ffffUL.__need___
  0x00002e60 76615f6c 69737400 5f5f494e 5433325f va_list.__INT32_
  0x00002e70 4d41585f 5f203078 37666666 66666666 MAX__ 0x7fffffff
  0x00002e80 005f494f 5f494e54 45524e41 4c203031 ._IO_INTERNAL 01
  0x00002e90 30005f5f 5f696e74 5f73697a 655f745f 0.___int_size_t_
  0x00002ea0 6820005f 5f676c69 62635f6c 696b656c h .__glibc_likel
  0x00002eb0 7928636f 6e642920 5f5f6275 696c7469 y(cond) __builti
  0x00002ec0 6e5f6578 70656374 20282863 6f6e6429 n_expect ((cond)
  0x00002ed0 2c203129 005f5f41 544f4d49 435f4143 , 1).__ATOMIC_AC
  0x00002ee0 51554952 45203200 5f5f5549 4e543136 QUIRE 2.__UINT16
  0x00002ef0 5f432863 29206300 5f494f5f 464c4147 _C(c) c._IO_FLAG
  0x00002f00 53325f55 5345525f 57425546 2038005f S2_USER_WBUF 8._
  0x00002f10 5f494e54 36345f4d 41585f5f 20307837 _INT64_MAX__ 0x7
  0x00002f20 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x00002f30 005f5f6e 6565645f 73697a65 5f742000 .__need_size_t .
  0x00002f40 5f5f626f 73287074 7229205f 5f627569 __bos(ptr) __bui
  0x00002f50 6c74696e 5f6f626a 6563745f 73697a65 ltin_object_size
  0x00002f60 20287074 722c205f 5f555345 5f464f52  (ptr, __USE_FOR
  0x00002f70 54494659 5f4c4556 454c203e 20312900 TIFY_LEVEL > 1).
  0x00002f80 5f5f5557 4f52445f 54595045 20756e73 __UWORD_TYPE uns
  0x00002f90 69676e65 64206c6f 6e672069 6e74005f igned long int._
  0x00002fa0 5f474c49 42435f4d 494e4f52 5f5f2032 _GLIBC_MINOR__ 2
  0x00002fb0 37005f5f 5345475f 47532031 005f5f53 7.__SEG_GS 1.__S
  0x00002fc0 53455f4d 4154485f 5f203100 5f5f4e4c SE_MATH__ 1.__NL
  0x00002fd0 494e4b5f 545f5459 5045205f 5f535953 INK_T_TYPE __SYS
  0x00002fe0 43414c4c 5f554c4f 4e475f54 59504500 CALL_ULONG_TYPE.
  0x00002ff0 5f5f5549 4e544d41 585f5459 50455f5f __UINTMAX_TYPE__
  0x00003000 206c6f6e 6720756e 7369676e 65642069  long unsigned i
  0x00003010 6e74005f 5f555345 5f584f50 454e324b nt.__USE_XOPEN2K
  0x00003020 005f5f4c 45414620 2c205f5f 6c656166 .__LEAF , __leaf
  0x00003030 5f5f006d 61696e00 5f5f4445 43313238 __.main.__DEC128
  0x00003040 5f4d4158 5f455850 5f5f2036 31343500 _MAX_EXP__ 6145.
  0x00003050 5f494f5f 4c454654 20303200 5f5f666f _IO_LEFT 02.__fo
  0x00003060 72746966 795f6675 6e637469 6f6e205f rtify_function _
  0x00003070 5f657874 65726e5f 616c7761 79735f69 _extern_always_i
  0x00003080 6e6c696e 65205f5f 61747472 69627574 nline __attribut
  0x00003090 655f6172 74696669 6369616c 5f5f005f e_artificial__._
  0x000030a0 494f5f42 4f4f4c41 4c504841 20303230 IO_BOOLALPHA 020
  0x000030b0 30303030 005f5f53 49475f41 544f4d49 0000.__SIG_ATOMI
  0x000030c0 435f5749 4454485f 5f203332 005f5f43 C_WIDTH__ 32.__C
  0x000030d0 4f4e4341 5428782c 79292078 20232320 ONCAT(x,y) x ## 
  0x000030e0 79005f5f 61747472 69627574 655f6465 y.__attribute_de
  0x000030f0 70726563 61746564 5f6d7367 5f5f286d precated_msg__(m
  0x00003100 73672920 5f5f6174 74726962 7574655f sg) __attribute_
  0x00003110 5f202828 5f5f6465 70726563 61746564 _ ((__deprecated
  0x00003120 5f5f2028 6d736729 2929005f 5f534852 __ (msg))).__SHR
  0x00003130 545f4d41 585f5f20 30783766 6666005f T_MAX__ 0x7fff._
  0x00003140 5f474343 5f41544f 4d49435f 57434841 _GCC_ATOMIC_WCHA
  0x00003150 525f545f 4c4f434b 5f465245 45203200 R_T_LOCK_FREE 2.
  0x00003160 5f494f5f 50454e44 494e475f 4f555450 _IO_PENDING_OUTP
  0x00003170 55545f43 4f554e54 285f6670 29202828 UT_COUNT(_fp) ((
  0x00003180 5f667029 2d3e5f49 4f5f7772 6974655f _fp)->_IO_write_
  0x00003190 70747220 2d20285f 6670292d 3e5f494f ptr - (_fp)->_IO
  0x000031a0 5f777269 74655f62 61736529 005f494f _write_base)._IO
  0x000031b0 5f555345 525f4c4f 434b2030 78383030 _USER_LOCK 0x800
  0x000031c0 30005f5f 4f524445 525f5044 505f454e 0.__ORDER_PDP_EN
  0x000031d0 4449414e 5f5f2033 34313200 5f494f5f DIAN__ 3412._IO_
  0x000031e0 554e4946 4945445f 4a554d50 5441424c UNIFIED_JUMPTABL
  0x000031f0 45532031 00544d50 5f4d4158 20323338 ES 1.TMP_MAX 238
  0x00003200 33323800 5f494f5f 6e656564 5f6c6f63 328._IO_need_loc
  0x00003210 6b285f66 70292028 28285f66 70292d3e k(_fp) (((_fp)->
  0x00003220 5f666c61 67733220 26205f49 4f5f464c _flags2 & _IO_FL
  0x00003230 41475332 5f4e4545 445f4c4f 434b2920 AGS2_NEED_LOCK) 
  0x00003240 213d2030 29005f5f 464c545f 44454349 != 0).__FLT_DECI
  0x00003250 4d414c5f 4449475f 5f203900 5f5f7761 MAL_DIG__ 9.__wa
  0x00003260 726e6465 636c286e 616d652c 6d736729 rndecl(name,msg)
  0x00003270 20657874 65726e20 766f6964 206e616d  extern void nam
  0x00003280 65202876 6f696429 205f5f61 74747269 e (void) __attri
  0x00003290 62757465 5f5f2828 5f5f7761 726e696e bute__((__warnin
  0x000032a0 675f5f20 286d7367 29292900 5f5f464c g__ (msg))).__FL
  0x000032b0 5436345f 4d41585f 31305f45 58505f5f T64_MAX_10_EXP__
  0x000032c0 20333038 005f5f53 5452494e 47287829  308.__STRING(x)
  0x000032d0 20237800 5f5f4c44 424c5f4d 494e5f45  #x.__LDBL_MIN_E
  0x000032e0 58505f5f 20282d31 36333831 29005f5f XP__ (-16381).__
  0x000032f0 57494e54 5f574944 54485f5f 20333200 WINT_WIDTH__ 32.
  0x00003300 5f494f5f 53484f57 504f5320 30323030 _IO_SHOWPOS 0200
  0x00003310 30005f49 4f5f7265 61645f65 6e64005f 0._IO_read_end._
  0x00003320 5f464c54 3634585f 4d494e5f 5f20332e _FLT64X_MIN__ 3.
  0x00003330 33363231 30333134 33313132 30393335 3621031431120935
  0x00003340 30363236 32363737 38313733 32313735 0626267781732175
  0x00003350 32363065 2d343933 32463634 78005f49 260e-4932F64x._I
  0x00003360 4f535f4f 55545055 54203200 5f5f494e OS_OUTPUT 2.__IN
  0x00003370 545f4641 5354385f 4d41585f 5f203078 T_FAST8_MAX__ 0x
  0x00003380 3766005f 5f524547 49535445 525f5052 7f.__REGISTER_PR
  0x00003390 45464958 5f5f2000 5f5f464c 5433325f EFIX__ .__FLT32_
  0x000033a0 45505349 4c4f4e5f 5f20312e 31393230 EPSILON__ 1.1920
  0x000033b0 39323839 35353037 38313235 30303030 9289550781250000
  0x000033c0 30303030 30303030 30303030 30303065 000000000000000e
  0x000033d0 2d374633 32005f5f 474c4942 435f494e -7F32.__GLIBC_IN
  0x000033e0 5445524e 414c5f53 54415254 494e475f TERNAL_STARTING_
  0x000033f0 48454144 45525f49 4d504c45 4d454e54 HEADER_IMPLEMENT
  0x00003400 4154494f 4e20005f 5f53574f 52445f54 ATION .__SWORD_T
  0x00003410 59504520 6c6f6e67 20696e74 005f5f4c YPE long int.__L
  0x00003420 4f4e475f 4d41585f 5f203078 37666666 ONG_MAX__ 0x7fff
  0x00003430 66666666 66666666 66666666 4c005f5f ffffffffffffL.__
  0x00003440 73747562 5f676574 6d736720 005f5f44 stub_getmsg .__D
  0x00003450 45433634 5f4d4158 5f455850 5f5f2033 EC64_MAX_EXP__ 3
  0x00003460 3835005f 5f464c54 3332585f 4d494e5f 85.__FLT32X_MIN_
  0x00003470 31305f45 58505f5f 20282d33 30372900 10_EXP__ (-307).
  0x00003480 5f5f5553 455f504f 53495832 005f494f __USE_POSIX2._IO
  0x00003490 5f554e49 54425546 20303230 30303000 _UNITBUF 020000.
  0x000034a0 5f5f4f46 465f545f 54595045 205f5f53 __OFF_T_TYPE __S
  0x000034b0 59534341 4c4c5f53 4c4f4e47 5f545950 YSCALL_SLONG_TYP
  0x000034c0 45005f5f 55494e54 4d41585f 43286329 E.__UINTMAX_C(c)
  0x000034d0 20632023 2320554c 005f5f43 48415233  c ## UL.__CHAR3
  0x000034e0 325f5459 50455f5f 20756e73 69676e65 2_TYPE__ unsigne
  0x000034f0 6420696e 74005f5f 464c5436 34585f48 d int.__FLT64X_H
  0x00003500 41535f49 4e46494e 4954595f 5f203100 AS_INFINITY__ 1.
  0x00003510 5f424954 535f475f 434f4e46 49475f48 _BITS_G_CONFIG_H
  0x00003520 2031005f 5f444543 3132385f 4d494e5f  1.__DEC128_MIN_
  0x00003530 5f203145 2d363134 33444c00 5f5f464c _ 1E-6143DL.__FL
  0x00003540 54333258 5f4d494e 5f455850 5f5f2028 T32X_MIN_EXP__ (
  0x00003550 2d313032 3129005f 494f5f67 6574635f -1021)._IO_getc_
  0x00003560 756e6c6f 636b6564 285f6670 2920285f unlocked(_fp) (_
  0x00003570 494f5f42 45202828 5f667029 2d3e5f49 IO_BE ((_fp)->_I
  0x00003580 4f5f7265 61645f70 7472203e 3d20285f O_read_ptr >= (_
  0x00003590 6670292d 3e5f494f 5f726561 645f656e fp)->_IO_read_en
  0x000035a0 642c2030 29203f20 5f5f7566 6c6f7720 d, 0) ? __uflow 
  0x000035b0 285f6670 29203a20 2a28756e 7369676e (_fp) : *(unsign
  0x000035c0 65642063 68617220 2a292028 5f667029 ed char *) (_fp)
  0x000035d0 2d3e5f49 4f5f7265 61645f70 74722b2b ->_IO_read_ptr++
  0x000035e0 29005f5f 494e5450 54525f57 49445448 ).__INTPTR_WIDTH
  0x000035f0 5f5f2036 34005f5f 494e4f5f 545f5459 __ 64.__INO_T_TY
  0x00003600 5045205f 5f535953 43414c4c 5f554c4f PE __SYSCALL_ULO
  0x00003610 4e475f54 59504500 5f5f5549 4e545f46 NG_TYPE.__UINT_F
  0x00003620 41535438 5f545950 455f5f20 756e7369 AST8_TYPE__ unsi
  0x00003630 676e6564 20636861 72005f5f 494e5433 gned char.__INT3
  0x00003640 325f4328 63292063 005f5f46 5346494c 2_C(c) c.__FSFIL
  0x00003650 434e5436 345f545f 54595045 205f5f55 CNT64_T_TYPE __U
  0x00003660 51554144 5f545950 45005f5f 4c44424c QUAD_TYPE.__LDBL
  0x00003670 5f484153 5f515549 45545f4e 414e5f5f _HAS_QUIET_NAN__
  0x00003680 2031005f 5f474e55 435f5041 5443484c  1.__GNUC_PATCHL
  0x00003690 4556454c 5f5f2030 005f5f57 494e545f EVEL__ 0.__WINT_
  0x000036a0 4d41585f 5f203078 66666666 66666666 MAX__ 0xffffffff
  0x000036b0 55005f5f 61747472 69627574 655f6e6f U.__attribute_no
  0x000036c0 6e737472 696e675f 5f20005f 494f5f4d nstring__ ._IO_M
  0x000036d0 41474943 5f4d4153 4b203078 46464646 AGIC_MASK 0xFFFF
  0x000036e0 30303030 005f5f6c 696e7578 2031005f 0000.__linux 1._
  0x000036f0 5f474c49 42435f55 53455f49 45435f36 _GLIBC_USE_IEC_6
  0x00003700 30353539 5f46554e 43535f45 5854005f 0559_FUNCS_EXT._
  0x00003710 494f5f76 615f6c69 7374205f 5f676e75 IO_va_list __gnu
  0x00003720 635f7661 5f6c6973 74005f47 5f425546 c_va_list._G_BUF
  0x00003730 53495a20 38313932 005f5f4c 44424c5f SIZ 8192.__LDBL_
  0x00003740 52454449 5231286e 616d652c 70726f74 REDIR1(name,prot
  0x00003750 6f2c616c 69617329 206e616d 65207072 o,alias) name pr
  0x00003760 6f746f00 5f5f6174 74726962 7574655f oto.__attribute_
  0x00003770 6d616c6c 6f635f5f 205f5f61 74747269 malloc__ __attri
  0x00003780 62757465 5f5f2028 285f5f6d 616c6c6f bute__ ((__mallo
  0x00003790 635f5f29 29005f5f 55494e54 33325f54 c__)).__UINT32_T
  0x000037a0 5950455f 5f20756e 7369676e 65642069 YPE__ unsigned i
  0x000037b0 6e74005f 5f4c4442 4c5f5245 4449525f nt.__LDBL_REDIR_
  0x000037c0 4e544828 6e616d65 2c70726f 746f2920 NTH(name,proto) 
  0x000037d0 6e616d65 2070726f 746f205f 5f544852 name proto __THR
  0x000037e0 4f57005f 5f555345 5f584f50 454e324b OW.__USE_XOPEN2K
  0x000037f0 38005f49 4f5f5550 50455243 41534520 8._IO_UPPERCASE 
  0x00003800 30313030 3000505f 746d7064 69722022 01000.P_tmpdir "
  0x00003810 2f746d70 22005f5f 52454449 52454354 /tmp".__REDIRECT
  0x00003820 5f4e5448 286e616d 652c7072 6f746f2c _NTH(name,proto,
  0x00003830 616c6961 7329206e 616d6520 70726f74 alias) name prot
  0x00003840 6f205f5f 61736d5f 5f20285f 5f41534d o __asm__ (__ASM
  0x00003850 4e414d45 20282361 6c696173 2929205f NAME (#alias)) _
  0x00003860 5f544852 4f57005f 5f555345 5f584f50 _THROW.__USE_XOP
  0x00003870 454e005f 5f464c54 3132385f 45505349 EN.__FLT128_EPSI
  0x00003880 4c4f4e5f 5f20312e 39323539 32393934 LON__ 1.92592994
  0x00003890 34333837 32333538 35333035 35393737 4387235853055977
  0x000038a0 39343235 38343932 37333265 2d333446 94258492732e-34F
  0x000038b0 31323800 464f5045 4e5f4d41 58203136 128.FOPEN_MAX 16
  0x000038c0 005f494f 5f46494c 455f706c 7573005f ._IO_FILE_plus._
  0x000038d0 504f5349 585f435f 534f5552 4345005f POSIX_C_SOURCE._
  0x000038e0 5f544852 4f57205f 5f617474 72696275 _THROW __attribu
  0x000038f0 74655f5f 2028285f 5f6e6f74 68726f77 te__ ((__nothrow
  0x00003900 5f5f205f 5f4c4541 46292900 5f5f5349 __ __LEAF)).__SI
  0x00003910 5a454f46 5f4c4f4e 475f4c4f 4e475f5f ZEOF_LONG_LONG__
  0x00003920 2038005f 56415f4c 4953545f 44454649  8._VA_LIST_DEFI
  0x00003930 4e454420 005f5f55 494e545f 46415354 NED .__UINT_FAST
  0x00003940 33325f54 5950455f 5f206c6f 6e672075 32_TYPE__ long u
  0x00003950 6e736967 6e656420 696e7400 5f5f5348 nsigned int.__SH
  0x00003960 52545f57 49445448 5f5f2031 36005f5f RT_WIDTH__ 16.__
  0x00003970 53534532 5f4d4154 485f5f20 31005f5f SSE2_MATH__ 1.__
  0x00003980 5353495a 455f545f 54595045 205f5f53 SSIZE_T_TYPE __S
  0x00003990 574f5244 5f545950 45005f5f 5336345f WORD_TYPE.__S64_
  0x000039a0 54595045 206c6f6e 6720696e 74005f5f TYPE long int.__
  0x000039b0 61747472 69627574 655f7075 72655f5f attribute_pure__
  0x000039c0 205f5f61 74747269 62757465 5f5f2028  __attribute__ (
  0x000039d0 285f5f70 7572655f 5f292900 5f5f494e (__pure__)).__IN
  0x000039e0 544d4158 5f432863 29206320 2323204c TMAX_C(c) c ## L
  0x000039f0 005f494f 5f69636f 6e765f74 205f475f ._IO_iconv_t _G_
  0x00003a00 69636f6e 765f7400 5f5f494e 545f4641 iconv_t.__INT_FA
  0x00003a10 53543332 5f574944 54485f5f 20363400 ST32_WIDTH__ 64.
  0x00003a20 5f5f5553 455f584f 50454e32 4b382031 __USE_XOPEN2K8 1
  0x00003a30 005f5f49 4e545f4c 45415354 36345f57 .__INT_LEAST64_W
  0x00003a40 49445448 5f5f2036 34005f5f 474c4942 IDTH__ 64.__GLIB
  0x00003a50 435f5553 455f4945 435f3630 3535395f C_USE_IEC_60559_
  0x00003a60 54595045 535f4558 54203000 5f5f494e TYPES_EXT 0.__IN
  0x00003a70 54385f43 28632920 63005f5f 53495a45 T8_C(c) c.__SIZE
  0x00003a80 4f465f50 4f494e54 45525f5f 2038005f OF_POINTER__ 8._
  0x00003a90 5f464c54 36345f45 5053494c 4f4e5f5f _FLT64_EPSILON__
  0x00003aa0 20322e32 32303434 36303439 32353033  2.2204460492503
  0x00003ab0 31333038 30383437 32363333 33363138 1308084726333618
  0x00003ac0 31363430 3632652d 31364636 34005f49 164062e-16F64._I
  0x00003ad0 4f5f7661 5f6c6973 74205f47 5f76615f O_va_list _G_va_
  0x00003ae0 6c697374 005f5f46 4c543634 585f4d41 list.__FLT64X_MA
  0x00003af0 4e545f44 49475f5f 20363400 5f444546 NT_DIG__ 64._DEF
  0x00003b00 41554c54 5f534f55 52434500 5f5f5743 AULT_SOURCE.__WC
  0x00003b10 4841525f 4d41585f 5f203078 37666666 HAR_MAX__ 0x7fff
  0x00003b20 66666666 005f494f 5f425546 53495a20 ffff._IO_BUFSIZ 
  0x00003b30 5f475f42 55465349 5a005f5f 46534649 _G_BUFSIZ.__FSFI
  0x00003b40 4c434e54 5f545f54 59504520 5f5f5359 LCNT_T_TYPE __SY
  0x00003b50 5343414c 4c5f554c 4f4e475f 54595045 SCALL_ULONG_TYPE
  0x00003b60 005f494f 5f424144 5f534545 4e203078 ._IO_BAD_SEEN 0x
  0x00003b70 34303030 005f5f77 61726e61 74747228 4000.__warnattr(
  0x00003b80 6d736729 205f5f61 74747269 62757465 msg) __attribute
  0x00003b90 5f5f2828 5f5f7761 726e696e 675f5f20 __((__warning__ 
  0x00003ba0 286d7367 29292900 5f5f494e 545f5749 (msg))).__INT_WI
  0x00003bb0 4454485f 5f203332 005f5f4c 44424c5f DTH__ 32.__LDBL_
  0x00003bc0 44454349 4d414c5f 4449475f 5f203231 DECIMAL_DIG__ 21
  0x00003bd0 005f5f47 43435f41 544f4d49 435f504f .__GCC_ATOMIC_PO
  0x00003be0 494e5445 525f4c4f 434b5f46 52454520 INTER_LOCK_FREE 
  0x00003bf0 32005f5f 73747562 5f5f5f63 6f6d7061 2.__stub___compa
  0x00003c00 745f6264 666c7573 68200046 4f50454e t_bdflush .FOPEN
  0x00003c10 5f4d4158 005f6c6f 636b005f 5f534547 _MAX._lock.__SEG
  0x00003c20 5f465320 31005f5f 50286172 67732920 _FS 1.__P(args) 
  0x00003c30 61726773 005f5f54 494d455f 545f5459 args.__TIME_T_TY
  0x00003c40 5045205f 5f535953 43414c4c 5f534c4f PE __SYSCALL_SLO
  0x00003c50 4e475f54 59504500 5f5f5549 4e545f46 NG_TYPE.__UINT_F
  0x00003c60 41535431 365f5459 50455f5f 206c6f6e AST16_TYPE__ lon
  0x00003c70 6720756e 7369676e 65642069 6e74005f g unsigned int._
  0x00003c80 5f474c49 42435f5f 2032005f 494f5f73 _GLIBC__ 2._IO_s
  0x00003c90 74646f75 74202828 5f494f5f 46494c45 tdout ((_IO_FILE
  0x00003ca0 2a292826 5f494f5f 325f315f 7374646f *)(&_IO_2_1_stdo
  0x00003cb0 75745f29 29005f5f 55534552 5f4c4142 ut_)).__USER_LAB
  0x00003cc0 454c5f50 52454649 585f5f20 005f494f EL_PREFIX__ ._IO
  0x00003cd0 5f706964 5f74205f 5f706964 5f74005f _pid_t __pid_t._
  0x00003ce0 5f676c69 62635f6d 6163726f 5f776172 _glibc_macro_war
  0x00003cf0 6e696e67 31286d65 73736167 6529205f ning1(message) _
  0x00003d00 50726167 6d612028 236d6573 73616765 Pragma (#message
  0x00003d10 29005f5f 4743435f 41544f4d 49435f43 ).__GCC_ATOMIC_C
  0x00003d20 48415233 325f545f 4c4f434b 5f465245 HAR32_T_LOCK_FRE
  0x00003d30 45203200 5f6f6c64 5f6f6666 73657400 E 2._old_offset.
  0x00003d40 5f494f5f 46494c45 005f494f 5f554e42 _IO_FILE._IO_UNB
  0x00003d50 55464645 52454420 32005f5f 43484152 UFFERED 2.__CHAR
  0x00003d60 5f424954 5f5f2038 005f5f43 4c4f434b _BIT__ 8.__CLOCK
  0x00003d70 5f545f54 59504520 5f5f5359 5343414c _T_TYPE __SYSCAL
  0x00003d80 4c5f534c 4f4e475f 54595045 005f5f41 L_SLONG_TYPE.__A
  0x00003d90 544f4d49 435f5245 4c415845 44203000 TOMIC_RELAXED 0.
  0x00003da0 5f494f5f 7373697a 655f7420 5f5f7373 _IO_ssize_t __ss
  0x00003db0 697a655f 74005f5f 53544443 5f484f53 ize_t.__STDC_HOS
  0x00003dc0 5445445f 5f203100 5f5f5349 5a455f57 TED__ 1.__SIZE_W
  0x00003dd0 49445448 5f5f2036 34005f5f 52454449 IDTH__ 64.__REDI
  0x00003de0 52454354 5f4c4442 4c286e61 6d652c70 RECT_LDBL(name,p
  0x00003df0 726f746f 2c616c69 61732920 5f5f5245 roto,alias) __RE
  0x00003e00 44495245 43542028 6e616d65 2c207072 DIRECT (name, pr
  0x00003e10 6f746f2c 20616c69 61732900 5f5f616c oto, alias).__al
  0x00003e20 77617973 5f696e6c 696e6500 5f5f6861 ways_inline.__ha
  0x00003e30 735f696e 636c7564 65285354 5229205f s_include(STR) _
  0x00003e40 5f686173 5f696e63 6c756465 5f5f2853 _has_include__(S
  0x00003e50 54522900 5f5f6e65 65645f5f 5f76615f TR).__need___va_
  0x00003e60 6c697374 20005f5f 41534d4e 414d4532 list .__ASMNAME2
  0x00003e70 28707265 6669782c 636e616d 6529205f (prefix,cname) _
  0x00003e80 5f535452 494e4720 28707265 66697829 _STRING (prefix)
  0x00003e90 20636e61 6d65005f 494f5f53 4349454e  cname._IO_SCIEN
  0x00003ea0 54494649 43203034 30303000 5f494f5f TIFIC 04000._IO_
  0x00003eb0 7065656b 635f756e 6c6f636b 6564285f peekc_unlocked(_
  0x00003ec0 66702920 285f494f 5f424520 28285f66 fp) (_IO_BE ((_f
  0x00003ed0 70292d3e 5f494f5f 72656164 5f707472 p)->_IO_read_ptr
  0x00003ee0 203e3d20 285f6670 292d3e5f 494f5f72  >= (_fp)->_IO_r
  0x00003ef0 6561645f 656e642c 20302920 2626205f ead_end, 0) && _
  0x00003f00 5f756e64 6572666c 6f772028 5f667029 _underflow (_fp)
  0x00003f10 203d3d20 454f4620 3f20454f 46203a20  == EOF ? EOF : 
  0x00003f20 2a28756e 7369676e 65642063 68617220 *(unsigned char 
  0x00003f30 2a292028 5f667029 2d3e5f49 4f5f7265 *) (_fp)->_IO_re
  0x00003f40 61645f70 74722900 5f5f4c4f 4e475f57 ad_ptr).__LONG_W
  0x00003f50 49445448 5f5f2036 34005f5f 55494e54 IDTH__ 64.__UINT
  0x00003f60 36345f4d 41585f5f 20307866 66666666 64_MAX__ 0xfffff
  0x00003f70 66666666 66666666 66666655 4c005f5f fffffffffffUL.__
  0x00003f80 53515541 445f5459 5045206c 6f6e6720 SQUAD_TYPE long 
  0x00003f90 696e7400 5f5f5553 455f584f 50454e32 int.__USE_XOPEN2
  0x00003fa0 4b585349 005f5f61 74747269 62757465 KXSI.__attribute
  0x00003fb0 5f616c6c 6f635f73 697a655f 5f287061 _alloc_size__(pa
  0x00003fc0 72616d73 29205f5f 61747472 69627574 rams) __attribut
  0x00003fd0 655f5f20 28285f5f 616c6c6f 635f7369 e__ ((__alloc_si
  0x00003fe0 7a655f5f 20706172 616d7329 29005f49 ze__ params))._I
  0x00003ff0 4f5f7769 6e745f74 2077696e 745f7400 O_wint_t wint_t.
  0x00004000 5f5f6b38 2031005f 5f474343 5f41544f __k8 1.__GCC_ATO
  0x00004010 4d49435f 4c4c4f4e 475f4c4f 434b5f46 MIC_LLONG_LOCK_F
  0x00004020 52454520 32005f5f 44454336 345f4d49 REE 2.__DEC64_MI
  0x00004030 4e5f4558 505f5f20 282d3338 3229005f N_EXP__ (-382)._
  0x00004040 5f726573 74726963 745f6172 72205f5f _restrict_arr __
  0x00004050 72657374 72696374 005f5f41 544f4d49 restrict.__ATOMI
  0x00004060 435f4143 515f5245 4c203400 5f494f5f C_ACQ_REL 4._IO_
  0x00004070 66706f73 5f74205f 475f6670 6f735f74 fpos_t _G_fpos_t
  0x00004080 005f5f61 74747269 62757465 5f666f72 .__attribute_for
  0x00004090 6d61745f 73747266 6d6f6e5f 5f28612c mat_strfmon__(a,
  0x000040a0 6229205f 5f617474 72696275 74655f5f b) __attribute__
  0x000040b0 2028285f 5f666f72 6d61745f 5f20285f  ((__format__ (_
  0x000040c0 5f737472 666d6f6e 5f5f2c20 612c2062 _strfmon__, a, b
  0x000040d0 29292900 5f5f4445 4333325f 4d494e5f ))).__DEC32_MIN_
  0x000040e0 4558505f 5f20282d 39342900 5f494f5f EXP__ (-94)._IO_
  0x000040f0 46495845 44203031 30303030 005f5f49 FIXED 010000.__I
  0x00004100 4e543634 5f545950 455f5f20 6c6f6e67 NT64_TYPE__ long
  0x00004110 20696e74 005f5f46 4c545f4d 494e5f5f  int.__FLT_MIN__
  0x00004120 20312e31 37353439 34333530 38323232  1.1754943508222
  0x00004130 38373530 37393638 37333635 33373232 8750796873653722
  0x00004140 32323435 3638652d 33384600 5f5f5536 224568e-38F.__U6
  0x00004150 345f5459 50452075 6e736967 6e656420 4_TYPE unsigned 
  0x00004160 6c6f6e67 20696e74 005f7362 7566005f long int._sbuf._
  0x00004170 494f5f76 615f6c69 73740073 74646f75 IO_va_list.stdou
  0x00004180 74207374 646f7574 005f5f55 53455f47 t stdout.__USE_G
  0x00004190 4e55005f 5f54494d 45525f54 5f545950 NU.__TIMER_T_TYP
  0x000041a0 4520766f 6964202a 005f494f 5f777269 E void *._IO_wri
  0x000041b0 74655f70 7472005f 5f465853 525f5f20 te_ptr.__FXSR__ 
  0x000041c0 31005f5f 4c454146 5f415454 52205f5f 1.__LEAF_ATTR __
  0x000041d0 61747472 69627574 655f5f20 28285f5f attribute__ ((__
  0x000041e0 6c656166 5f5f2929 005f5f49 4e54385f leaf__)).__INT8_
  0x000041f0 54595045 5f5f2073 69676e65 64206368 TYPE__ signed ch
  0x00004200 6172005f 5f494e54 5f4c4541 53543332 ar.__INT_LEAST32
  0x00004210 5f574944 54485f5f 20333200 5f5f5359 _WIDTH__ 32.__SY
  0x00004220 5343414c 4c5f534c 4f4e475f 54595045 SCALL_SLONG_TYPE
  0x00004230 205f5f53 4c4f4e47 574f5244 5f545950  __SLONGWORD_TYP
  0x00004240 45005f5f 55494e54 4d41585f 4d41585f E.__UINTMAX_MAX_
  0x00004250 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00004260 66666666 554c005f 5f676c69 62635f63 ffffUL.__glibc_c
  0x00004270 6c616e67 5f707265 72657128 6d616a2c lang_prereq(maj,
  0x00004280 6d696e29 2030005f 494f5f62 61636b75 min) 0._IO_backu
  0x00004290 705f6261 7365005f 5f6c696e 75785f5f p_base.__linux__
  0x000042a0 2031005f 5f504943 5f5f2032 005f5f49  1.__PIC__ 2.__I
  0x000042b0 4e545f4c 45415354 33325f54 5950455f NT_LEAST32_TYPE_
  0x000042c0 5f20696e 74005f5f 55494e54 5f4c4541 _ int.__UINT_LEA
  0x000042d0 53543634 5f545950 455f5f20 6c6f6e67 ST64_TYPE__ long
  0x000042e0 20756e73 69676e65 6420696e 74005f49  unsigned int._I
  0x000042f0 4f5f7075 74635f75 6e6c6f63 6b656428 O_putc_unlocked(
  0x00004300 5f63682c 5f667029 20285f49 4f5f4245 _ch,_fp) (_IO_BE
  0x00004310 2028285f 6670292d 3e5f494f 5f777269  ((_fp)->_IO_wri
  0x00004320 74655f70 7472203e 3d20285f 6670292d te_ptr >= (_fp)-
  0x00004330 3e5f494f 5f777269 74655f65 6e642c20 >_IO_write_end, 
  0x00004340 3029203f 205f5f6f 76657266 6c6f7720 0) ? __overflow 
  0x00004350 285f6670 2c202875 6e736967 6e656420 (_fp, (unsigned 
  0x00004360 63686172 2920285f 63682929 203a2028 char) (_ch)) : (
  0x00004370 756e7369 676e6564 20636861 72292028 unsigned char) (
  0x00004380 2a285f66 70292d3e 5f494f5f 77726974 *(_fp)->_IO_writ
  0x00004390 655f7074 722b2b20 3d20285f 63682929 e_ptr++ = (_ch))
  0x000043a0 29005f50 4f534958 5f534f55 52434520 )._POSIX_SOURCE 
  0x000043b0 31005f49 4f5f444f 4e545f43 4c4f5345 1._IO_DONT_CLOSE
  0x000043c0 20303130 30303030 005f5f47 4c494243  0100000.__GLIBC
  0x000043d0 5f555345 5f494543 5f363035 35395f42 _USE_IEC_60559_B
  0x000043e0 46505f45 5854005f 5f53495a 455f4d41 FP_EXT.__SIZE_MA
  0x000043f0 585f5f20 30786666 66666666 66666666 X__ 0xffffffffff
  0x00004400 66666666 6666554c 005f5f55 49445f54 ffffffUL.__UID_T
  0x00004410 5f545950 45205f5f 5533325f 54595045 _TYPE __U32_TYPE
  0x00004420 005f5f55 4c4f4e47 574f5244 5f545950 .__ULONGWORD_TYP
  0x00004430 4520756e 7369676e 6564206c 6f6e6720 E unsigned long 
  0x00004440 696e7400 5f5f4743 435f4154 4f4d4943 int.__GCC_ATOMIC
  0x00004450 5f53484f 52545f4c 4f434b5f 46524545 _SHORT_LOCK_FREE
  0x00004460 2032005f 5f464c54 3634585f 44454349  2.__FLT64X_DECI
  0x00004470 4d414c5f 4449475f 5f203231 00534545 MAL_DIG__ 21.SEE
  0x00004480 4b5f5345 54203000 5f5f5553 455f584f K_SET 0.__USE_XO
  0x00004490 50454e5f 45585445 4e444544 005f5f49 PEN_EXTENDED.__I
  0x000044a0 4e545f46 41535431 365f4d41 585f5f20 NT_FAST16_MAX__ 
  0x000044b0 30783766 66666666 66666666 66666666 0x7fffffffffffff
  0x000044c0 66664c00 5f5f464c 545f4550 53494c4f ffL.__FLT_EPSILO
  0x000044d0 4e5f5f20 312e3139 32303932 38393535 N__ 1.1920928955
  0x000044e0 30373831 32353030 30303030 30303030 0781250000000000
  0x000044f0 30303030 30303030 30652d37 46005f5f 000000000e-7F.__
  0x00004500 464c5436 345f4d49 4e5f4558 505f5f20 FLT64_MIN_EXP__ 
  0x00004510 282d3130 32312900 5f494f53 5f415050 (-1021)._IOS_APP
  0x00004520 454e4420 38005f5f 474c4942 435f494e END 8.__GLIBC_IN
  0x00004530 5445524e 414c5f53 54415254 494e475f TERNAL_STARTING_
  0x00004540 48454144 45525f49 4d504c45 4d454e54 HEADER_IMPLEMENT
  0x00004550 4154494f 4e005f5f 464c545f 4556414c ATION.__FLT_EVAL
  0x00004560 5f4d4554 484f445f 54535f31 38363631 _METHOD_TS_18661
  0x00004570 5f335f5f 2030005f 5f44424c 5f484153 _3__ 0.__DBL_HAS
  0x00004580 5f494e46 494e4954 595f5f20 31005f5f _INFINITY__ 1.__
  0x00004590 61747472 69627574 655f7761 726e5f75 attribute_warn_u
  0x000045a0 6e757365 645f7265 73756c74 5f5f205f nused_result__ _
  0x000045b0 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x000045c0 5f776172 6e5f756e 75736564 5f726573 _warn_unused_res
  0x000045d0 756c745f 5f292900 5f5f494e 5436345f ult__)).__INT64_
  0x000045e0 43286329 20632023 23204c00 5f5f454e C(c) c ## L.__EN
  0x000045f0 445f4445 434c5320 005f5f46 4c545f48 D_DECLS .__FLT_H
  0x00004600 41535f51 55494554 5f4e414e 5f5f2031 AS_QUIET_NAN__ 1
  0x00004610 005f5f53 495a454f 465f494e 545f5f20 .__SIZEOF_INT__ 
  0x00004620 34005f5f 434c4f43 4b49445f 545f5459 4.__CLOCKID_T_TY
  0x00004630 5045205f 5f533332 5f545950 45005f5f PE __S32_TYPE.__
  0x00004640 494e545f 46415354 31365f54 5950455f INT_FAST16_TYPE_
  0x00004650 5f206c6f 6e672069 6e74005f 5f535444 _ long int.__STD
  0x00004660 435f4945 435f3535 395f5f20 31005f5f C_IEC_559__ 1.__
  0x00004670 44454331 32385f53 55424e4f 524d414c DEC128_SUBNORMAL
  0x00004680 5f4d494e 5f5f2030 2e303030 30303030 _MIN__ 0.0000000
  0x00004690 30303030 30303030 30303030 30303030 0000000000000000
  0x000046a0 30303030 30303030 3031452d 36313433 0000000001E-6143
  0x000046b0 444c005f 5f555345 5f4c4152 47454649 DL.__USE_LARGEFI
  0x000046c0 4c45005f 5f53495a 454f465f 464c4f41 LE.__SIZEOF_FLOA
  0x000046d0 5438305f 5f203136 005f5f46 4c543332 T80__ 16.__FLT32
  0x000046e0 585f4841 535f5155 4945545f 4e414e5f X_HAS_QUIET_NAN_
  0x000046f0 5f203100 5f5f4442 4c5f4d41 585f3130 _ 1.__DBL_MAX_10
  0x00004700 5f455850 5f5f2033 3038005f 5f555345 _EXP__ 308.__USE
  0x00004710 5f4d4953 43203100 5f5f4758 585f4142 _MISC 1.__GXX_AB
  0x00004720 495f5645 5253494f 4e203130 3131005f I_VERSION 1011._
  0x00004730 5f706963 5f5f2032 005f5f41 544f4d49 _pic__ 2.__ATOMI
  0x00004740 435f5245 4c454153 45203300 5f5f5353 C_RELEASE 3.__SS
  0x00004750 455f5f20 31005f49 4f5f4e4f 5f524541 E__ 1._IO_NO_REA
  0x00004760 44532034 005f5f47 4c494243 5f555345 DS 4.__GLIBC_USE
  0x00004770 5f494543 5f363035 35395f46 554e4353 _IEC_60559_FUNCS
  0x00004780 5f455854 2030005f 5f424947 47455354 _EXT 0.__BIGGEST
  0x00004790 5f414c49 474e4d45 4e545f5f 20313600 _ALIGNMENT__ 16.
  0x000047a0 5f53495a 45545f20 005f5f46 4c543132 _SIZET_ .__FLT12
  0x000047b0 385f4445 4e4f524d 5f4d494e 5f5f2036 8_DENORM_MIN__ 6
  0x000047c0 2e343735 31373531 31393433 38303235 .475175119438025
  0x000047d0 31313039 32343433 38393538 32323736 1109244389582276
  0x000047e0 34363535 652d3439 36364631 3238005f 4655e-4966F128._
  0x000047f0 5f474c49 42435f55 53455f49 45435f36 _GLIBC_USE_IEC_6
  0x00004800 30353539 5f424650 5f455854 2030005f 0559_BFP_EXT 0._
  0x00004810 5f737475 625f7265 766f6b65 20005f5f _stub_revoke .__
  0x00004820 494e544d 41585f54 5950455f 5f206c6f INTMAX_TYPE__ lo
  0x00004830 6e672069 6e74005f 5f464c54 5f4d494e ng int.__FLT_MIN
  0x00004840 5f455850 5f5f2028 2d313235 29005f5f _EXP__ (-125).__
  0x00004850 5353505f 5354524f 4e475f5f 2033005f SSP_STRONG__ 3._
  0x00004860 5f657272 6f726465 636c286e 616d652c _errordecl(name,
  0x00004870 6d736729 20657874 65726e20 766f6964 msg) extern void
  0x00004880 206e616d 65202876 6f696429 205f5f61  name (void) __a
  0x00004890 74747269 62757465 5f5f2828 5f5f6572 ttribute__((__er
  0x000048a0 726f725f 5f20286d 73672929 29005f5f ror__ (msg))).__
  0x000048b0 44454331 32385f4d 41585f5f 20392e39 DEC128_MAX__ 9.9
  0x000048c0 39393939 39393939 39393939 39393939 9999999999999999
  0x000048d0 39393939 39393939 39393939 39393939 9999999999999999
  0x000048e0 45363134 34444c00 5f5f464c 545f4d41 E6144DL.__FLT_MA
  0x000048f0 585f4558 505f5f20 31323800 5f5f4154 X_EXP__ 128.__AT
  0x00004900 4f4d4943 5f484c45 5f414351 55495245 OMIC_HLE_ACQUIRE
  0x00004910 20363535 3336005f 5f4f4646 36345f54  65536.__OFF64_T
  0x00004920 5f545950 45205f5f 53515541 445f5459 _TYPE __SQUAD_TY
  0x00004930 5045005f 5f555345 5f49534f 43313100 PE.__USE_ISOC11.
  0x00004940 5f494f5f 53544449 4f203034 30303030 _IO_STDIO 040000
  0x00004950 005f5f44 45565f54 5f545950 45205f5f .__DEV_T_TYPE __
  0x00004960 55515541 445f5459 5045005f 5f435055 UQUAD_TYPE.__CPU
  0x00004970 5f4d4153 4b5f5459 5045205f 5f535953 _MASK_TYPE __SYS
  0x00004980 43414c4c 5f554c4f 4e475f54 59504500 CALL_ULONG_TYPE.
  0x00004990 5f5f5549 4e545f4c 45415354 33325f4d __UINT_LEAST32_M
  0x000049a0 41585f5f 20307866 66666666 66666655 AX__ 0xffffffffU
  0x000049b0 005f494f 5f424528 65787072 2c726573 ._IO_BE(expr,res
  0x000049c0 29205f5f 6275696c 74696e5f 65787065 ) __builtin_expe
  0x000049d0 63742028 28657870 72292c20 72657329 ct ((expr), res)
  0x000049e0 005f5f41 534d4e41 4d452863 6e616d65 .__ASMNAME(cname
  0x000049f0 29205f5f 41534d4e 414d4532 20285f5f ) __ASMNAME2 (__
  0x00004a00 55534552 5f4c4142 454c5f50 52454649 USER_LABEL_PREFI
  0x00004a10 585f5f2c 20636e61 6d652900 5f5f464c X__, cname).__FL
  0x00004a20 54333258 5f4d4158 5f31305f 4558505f T32X_MAX_10_EXP_
  0x00004a30 5f203330 38005f5f 616d6436 34203100 _ 308.__amd64 1.
  0x00004a40 5f5f574f 52445349 5a452036 34005f5f __WORDSIZE 64.__
  0x00004a50 756e6978 2031005f 63686169 6e005f5f unix 1._chain.__
  0x00004a60 464c5436 345f4445 4e4f524d 5f4d494e FLT64_DENORM_MIN
  0x00004a70 5f5f2034 2e393430 36353634 35383431 __ 4.94065645841
  0x00004a80 32343635 34343137 36353638 37393238 2465441765687928
  0x00004a90 36383232 31333732 652d3332 34463634 68221372e-324F64
  0x00004aa0 004c5f63 7465726d 69642039 005f5f50 .L_ctermid 9.__P
  0x00004ab0 54524449 46465f54 5950455f 5f206c6f TRDIFF_TYPE__ lo
  0x00004ac0 6e672069 6e74005f 5f464c54 33325f4d ng int.__FLT32_M
  0x00004ad0 41585f31 305f4558 505f5f20 3338005f AX_10_EXP__ 38._
  0x00004ae0 5f574f52 4453495a 455f5449 4d453634 _WORDSIZE_TIME64
  0x00004af0 5f434f4d 50415433 32203100 5f5f464c _COMPAT32 1.__FL
  0x00004b00 54313238 5f444543 494d414c 5f444947 T128_DECIMAL_DIG
  0x00004b10 5f5f2033 36005f5f 50545244 4946465f __ 36.__PTRDIFF_
  0x00004b20 57494454 485f5f20 3634005f 5f44424c WIDTH__ 64.__DBL
  0x00004b30 5f444543 494d414c 5f444947 5f5f2031 _DECIMAL_DIG__ 1
  0x00004b40 37005f5f 55494e54 5f464153 5436345f 7.__UINT_FAST64_
  0x00004b50 54595045 5f5f206c 6f6e6720 756e7369 TYPE__ long unsi
  0x00004b60 676e6564 20696e74 005f5f73 7475625f gned int.__stub_
  0x00004b70 7373746b 20005f49 4f5f6670 6f733634 sstk ._IO_fpos64
  0x00004b80 5f74205f 475f6670 6f733634 5f74005f _t _G_fpos64_t._
  0x00004b90 5f544852 4f574e4c 205f5f61 74747269 _THROWNL __attri
  0x00004ba0 62757465 5f5f2028 285f5f6e 6f746872 bute__ ((__nothr
  0x00004bb0 6f775f5f 2929005f 5f4c4442 4c5f4d41 ow__)).__LDBL_MA
  0x00004bc0 585f3130 5f455850 5f5f2034 39333200 X_10_EXP__ 4932.
  0x00004bd0 5f5f4445 4336345f 4d494e5f 5f203145 __DEC64_MIN__ 1E
  0x00004be0 2d333833 4444005f 5f464c54 33325f4d -383DD.__FLT32_M
  0x00004bf0 41585f5f 20332e34 30323832 33343636 AX__ 3.402823466
  0x00004c00 33383532 38383539 38313137 30343138 3852885981170418
  0x00004c10 33343834 35313639 3235652b 33384633 3484516925e+38F3
  0x00004c20 32005f5f 44424c5f 45505349 4c4f4e5f 2.__DBL_EPSILON_
  0x00004c30 5f202828 646f7562 6c652932 2e323230 _ ((double)2.220
  0x00004c40 34343630 34393235 30333133 30383038 4460492503130808
  0x00004c50 34373236 33333336 31383136 34303632 4726333618164062
  0x00004c60 652d3136 4c29005f 6375725f 636f6c75 e-16L)._cur_colu
  0x00004c70 6d6e005f 5f505241 474d415f 52454445 mn.__PRAGMA_REDE
  0x00004c80 46494e45 5f455854 4e414d45 2031005f FINE_EXTNAME 1._
  0x00004c90 5f534947 5f41544f 4d49435f 54595045 _SIG_ATOMIC_TYPE
  0x00004ca0 5f5f2069 6e74005f 5f464c54 3634585f __ int.__FLT64X_
  0x00004cb0 44454e4f 524d5f4d 494e5f5f 20332e36 DENORM_MIN__ 3.6
  0x00004cc0 34353139 39353331 38383234 37343630 4519953188247460
  0x00004cd0 32353238 34303539 33333631 39343139 2528405933619419
  0x00004ce0 3832652d 34393531 46363478 005f5f55 82e-4951F64x.__U
  0x00004cf0 53455f50 4f534958 005f5f46 4c543132 SE_POSIX.__FLT12
  0x00004d00 385f4841 535f4445 4e4f524d 5f5f2031 8_HAS_DENORM__ 1
  0x00004d10 005f494f 5f435552 52454e54 4c595f50 ._IO_CURRENTLY_P
  0x00004d20 55545449 4e472030 78383030 005f5f4c UTTING 0x800.__L
  0x00004d30 44424c5f 4841535f 44454e4f 524d5f5f DBL_HAS_DENORM__
  0x00004d40 2031005f 756e7573 65643200 5f494f5f  1._unused2._IO_
  0x00004d50 6275665f 62617365 005f5f73 7475625f buf_base.__stub_
  0x00004d60 6c63686d 6f642000 5f5f464c 5436345f lchmod .__FLT64_
  0x00004d70 4d414e54 5f444947 5f5f2035 33005f5f MANT_DIG__ 53.__
  0x00004d80 44454336 345f4d41 4e545f44 49475f5f DEC64_MANT_DIG__
  0x00004d90 20313600 5f5f464c 545f4841 535f4445  16.__FLT_HAS_DE
  0x00004da0 4e4f524d 5f5f2031 005f5f49 4e545f46 NORM__ 1.__INT_F
  0x00004db0 41535436 345f5749 4454485f 5f203634 AST64_WIDTH__ 64
  0x00004dc0 005f5f44 4543494d 414c5f44 49475f5f .__DECIMAL_DIG__
  0x00004dd0 20323100                             21.

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_import - offset : 0x10f
 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: add_int.c
 DW_MACRO_start_file - lineno: 31 filenum: 7 filename: /usr/x86_64-linux-gnu/include/stdc-predef.h
 DW_MACRO_import - offset : 0x917
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 1 filenum: 5 filename: /usr/x86_64-linux-gnu/include/stdio.h
 DW_MACRO_import - offset : 0x939
 DW_MACRO_start_file - lineno: 27 filenum: 8 filename: /usr/x86_64-linux-gnu/include/bits/libc-header-start.h
 DW_MACRO_undef_strp - lineno : 31 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION
 DW_MACRO_start_file - lineno: 33 filenum: 9 filename: /usr/x86_64-linux-gnu/include/features.h
 DW_MACRO_import - offset : 0x949
 DW_MACRO_start_file - lineno: 424 filenum: 10 filename: /usr/x86_64-linux-gnu/include/sys/cdefs.h
 DW_MACRO_import - offset : 0xae7
 DW_MACRO_start_file - lineno: 427 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 428 filenum: 12 filename: /usr/x86_64-linux-gnu/include/bits/long-double.h
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xc65
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 448 filenum: 13 filename: /usr/x86_64-linux-gnu/include/gnu/stubs.h
 DW_MACRO_start_file - lineno: 10 filenum: 14 filename: /usr/x86_64-linux-gnu/include/gnu/stubs-64.h
 DW_MACRO_import - offset : 0xcaf
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd07
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd3b
 DW_MACRO_start_file - lineno: 33 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xd4b
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 35 filenum: 3 filename: /usr/x86_64-linux-gnu/include/bits/types.h
 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPES_H 1
 DW_MACRO_start_file - lineno: 27 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xde2
 DW_MACRO_start_file - lineno: 130 filenum: 15 filename: /usr/x86_64-linux-gnu/include/bits/typesizes.h
 DW_MACRO_import - offset : 0xe40
 DW_MACRO_end_file
 DW_MACRO_undef_strp - lineno : 204 macro : __STD_TYPE
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 36 filenum: 16 filename: /usr/x86_64-linux-gnu/include/bits/types/__FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : ____FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 37 filenum: 17 filename: /usr/x86_64-linux-gnu/include/bits/types/FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : __FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_define_strp - lineno : 39 macro : _STDIO_USES_IOSTREAM 
 DW_MACRO_start_file - lineno: 41 filenum: 4 filename: /usr/x86_64-linux-gnu/include/bits/libio.h
 DW_MACRO_define_strp - lineno : 29 macro : _BITS_LIBIO_H 1
 DW_MACRO_start_file - lineno: 35 filenum: 18 filename: /usr/x86_64-linux-gnu/include/bits/_G_config.h
 DW_MACRO_import - offset : 0xf2e
 DW_MACRO_start_file - lineno: 19 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xf44
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 21 filenum: 19 filename: /usr/x86_64-linux-gnu/include/bits/types/__mbstate_t.h
 DW_MACRO_define_strp - lineno : 2 macro : ____mbstate_t_defined 1
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf64
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf8c
 DW_MACRO_start_file - lineno: 53 filenum: 20 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h
 DW_MACRO_import - offset : 0xfe4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xff4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x11c0
 DW_MACRO_start_file - lineno: 131 filenum: 21 filename: /usr/x86_64-linux-gnu/include/bits/stdio_lim.h
 DW_MACRO_import - offset : 0x1206
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x1234
 DW_MACRO_start_file - lineno: 781 filenum: 6 filename: /usr/x86_64-linux-gnu/include/bits/sys_errlist.h
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file

  Offset:                      0x10f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 0 macro : __STDC__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_VERSION__ 201112L
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_16__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_32__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_HOSTED__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_MINOR__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_PATCHLEVEL__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __VERSION__ "7.3.0"
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELAXED 0
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_SEQ_CST 5
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQUIRE 2
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELEASE 3
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQ_REL 4
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_CONSUME 1
 DW_MACRO_define_strp - lineno : 0 macro : __pic__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIC__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __pie__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIE__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FINITE_MATH_ONLY__ 0
 DW_MACRO_define_strp - lineno : 0 macro : _LP64 1
 DW_MACRO_define_strp - lineno : 0 macro : __LP64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SHORT__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_DOUBLE__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SIZE_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR_BIT__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412
 DW_MACRO_define_strp - lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_POINTER__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __has_include(STR) __has_include__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __has_include_next(STR) __has_include_next__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __GXX_ABI_VERSION 1011
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_MAX__ 0x7fffffffffffffffLL
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MIN__ 0U
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_C(c) c ## U
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559_COMPLEX 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD_TS_18661_3__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __DEC_EVAL_METHOD__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_RADIX__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MANT_DIG__ 113
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DIG__ 33
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DECIMAL_DIG__ 36
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MANT_DIG__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN_EXP__ (-94)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX_EXP__ 97
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN__ 1E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX__ 9.999999E96DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_EPSILON__ 1E-6DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MANT_DIG__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN_EXP__ (-382)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX_EXP__ 385
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN__ 1E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX__ 9.999999999999999E384DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_EPSILON__ 1E-15DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MANT_DIG__ 34
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN_EXP__ (-6142)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX_EXP__ 6145
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN__ 1E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_EPSILON__ 1E-33DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __REGISTER_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __USER_LABEL_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_STDC_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __NO_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_DWARF2_CFI_ASM 1
 DW_MACRO_define_strp - lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSP_STRONG__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WCHAR_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WINT_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __amd64 1
 DW_MACRO_define_strp - lineno : 0 macro : __amd64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT80__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_ACQUIRE 65536
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_RELEASE 131072
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __code_model_small__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __MMX__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FXSR__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_FS 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_GS 1
 DW_MACRO_define_strp - lineno : 0 macro : __gnu_linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix__ 1
 DW_MACRO_define_strp - lineno : 0 macro : unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __ELF__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_BID_FORMAT__ 1

  Offset:                      0x917
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _STDC_PREDEF_H 1
 DW_MACRO_define_strp - lineno : 38 macro : __STDC_IEC_559__ 1
 DW_MACRO_define_strp - lineno : 46 macro : __STDC_IEC_559_COMPLEX__ 1
 DW_MACRO_define_strp - lineno : 58 macro : __STDC_ISO_10646__ 201706L
 DW_MACRO_define_strp - lineno : 61 macro : __STDC_NO_THREADS__ 1

  Offset:                      0x939
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _STDIO_H 1
 DW_MACRO_define_strp - lineno : 26 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION 

  Offset:                      0x949
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _FEATURES_H 1
 DW_MACRO_undef_strp - lineno : 119 macro : __USE_ISOC11
 DW_MACRO_undef_strp - lineno : 120 macro : __USE_ISOC99
 DW_MACRO_undef_strp - lineno : 121 macro : __USE_ISOC95
 DW_MACRO_undef_strp - lineno : 122 macro : __USE_ISOCXX11
 DW_MACRO_undef_strp - lineno : 123 macro : __USE_POSIX
 DW_MACRO_undef_strp - lineno : 124 macro : __USE_POSIX2
 DW_MACRO_undef_strp - lineno : 125 macro : __USE_POSIX199309
 DW_MACRO_undef_strp - lineno : 126 macro : __USE_POSIX199506
 DW_MACRO_undef_strp - lineno : 127 macro : __USE_XOPEN
 DW_MACRO_undef_strp - lineno : 128 macro : __USE_XOPEN_EXTENDED
 DW_MACRO_undef_strp - lineno : 129 macro : __USE_UNIX98
 DW_MACRO_undef_strp - lineno : 130 macro : __USE_XOPEN2K
 DW_MACRO_undef_strp - lineno : 131 macro : __USE_XOPEN2KXSI
 DW_MACRO_undef_strp - lineno : 132 macro : __USE_XOPEN2K8
 DW_MACRO_undef_strp - lineno : 133 macro : __USE_XOPEN2K8XSI
 DW_MACRO_undef_strp - lineno : 134 macro : __USE_LARGEFILE
 DW_MACRO_undef_strp - lineno : 135 macro : __USE_LARGEFILE64
 DW_MACRO_undef_strp - lineno : 136 macro : __USE_FILE_OFFSET64
 DW_MACRO_undef_strp - lineno : 137 macro : __USE_MISC
 DW_MACRO_undef_strp - lineno : 138 macro : __USE_ATFILE
 DW_MACRO_undef_strp - lineno : 139 macro : __USE_GNU
 DW_MACRO_undef_strp - lineno : 140 macro : __USE_FORTIFY_LEVEL
 DW_MACRO_undef_strp - lineno : 141 macro : __KERNEL_STRICT_NAMES
 DW_MACRO_undef_strp - lineno : 142 macro : __GLIBC_USE_DEPRECATED_GETS
 DW_MACRO_define_strp - lineno : 147 macro : __KERNEL_STRICT_NAMES 
 DW_MACRO_define_strp - lineno : 158 macro : __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
 DW_MACRO_define_strp - lineno : 172 macro : __glibc_clang_prereq(maj,min) 0
 DW_MACRO_define_strp - lineno : 176 macro : __GLIBC_USE(F) __GLIBC_USE_ ## F
 DW_MACRO_undef_strp - lineno : 220 macro : _DEFAULT_SOURCE
 DW_MACRO_define_strp - lineno : 221 macro : _DEFAULT_SOURCE 1
 DW_MACRO_define_strp - lineno : 227 macro : __USE_ISOC11 1
 DW_MACRO_define_strp - lineno : 233 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 239 macro : __USE_ISOC95 1
 DW_MACRO_define_strp - lineno : 260 macro : __USE_POSIX_IMPLICITLY 1
 DW_MACRO_undef_strp - lineno : 262 macro : _POSIX_SOURCE
 DW_MACRO_define_strp - lineno : 263 macro : _POSIX_SOURCE 1
 DW_MACRO_undef_strp - lineno : 264 macro : _POSIX_C_SOURCE
 DW_MACRO_define_strp - lineno : 265 macro : _POSIX_C_SOURCE 200809L
 DW_MACRO_define_strp - lineno : 300 macro : __USE_POSIX 1
 DW_MACRO_define_strp - lineno : 304 macro : __USE_POSIX2 1
 DW_MACRO_define_strp - lineno : 308 macro : __USE_POSIX199309 1
 DW_MACRO_define_strp - lineno : 312 macro : __USE_POSIX199506 1
 DW_MACRO_define_strp - lineno : 316 macro : __USE_XOPEN2K 1
 DW_MACRO_undef_strp - lineno : 317 macro : __USE_ISOC95
 DW_MACRO_define_strp - lineno : 318 macro : __USE_ISOC95 1
 DW_MACRO_undef_strp - lineno : 319 macro : __USE_ISOC99
 DW_MACRO_define_strp - lineno : 320 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 324 macro : __USE_XOPEN2K8 1
 DW_MACRO_undef_strp - lineno : 325 macro : _ATFILE_SOURCE
 DW_MACRO_define_strp - lineno : 326 macro : _ATFILE_SOURCE 1
 DW_MACRO_define_strp - lineno : 368 macro : __USE_MISC 1
 DW_MACRO_define_strp - lineno : 372 macro : __USE_ATFILE 1
 DW_MACRO_define_strp - lineno : 387 macro : __USE_FORTIFY_LEVEL 0
 DW_MACRO_define_strp - lineno : 395 macro : __GLIBC_USE_DEPRECATED_GETS 0
 DW_MACRO_undef_strp - lineno : 410 macro : __GNU_LIBRARY__
 DW_MACRO_define_strp - lineno : 411 macro : __GNU_LIBRARY__ 6
 DW_MACRO_define_strp - lineno : 415 macro : __GLIBC__ 2
 DW_MACRO_define_strp - lineno : 416 macro : __GLIBC_MINOR__ 27
 DW_MACRO_define_strp - lineno : 418 macro : __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))

  Offset:                      0xae7
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _SYS_CDEFS_H 1
 DW_MACRO_undef - lineno : 34 macro : __P
 DW_MACRO_undef_strp - lineno : 35 macro : __PMT
 DW_MACRO_define_strp - lineno : 42 macro : __LEAF , __leaf__
 DW_MACRO_define_strp - lineno : 43 macro : __LEAF_ATTR __attribute__ ((__leaf__))
 DW_MACRO_define_strp - lineno : 55 macro : __THROW __attribute__ ((__nothrow__ __LEAF))
 DW_MACRO_define_strp - lineno : 56 macro : __THROWNL __attribute__ ((__nothrow__))
 DW_MACRO_define_strp - lineno : 57 macro : __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
 DW_MACRO_define_strp - lineno : 58 macro : __NTHNL(fct) __attribute__ ((__nothrow__)) fct
 DW_MACRO_define_strp - lineno : 89 macro : __glibc_clang_has_extension(ext) 0
 DW_MACRO_define_strp - lineno : 94 macro : __P(args) args
 DW_MACRO_define_strp - lineno : 95 macro : __PMT(args) args
 DW_MACRO_define_strp - lineno : 100 macro : __CONCAT(x,y) x ## y
 DW_MACRO_define_strp - lineno : 101 macro : __STRING(x) #x
 DW_MACRO_define_strp - lineno : 104 macro : __ptr_t void *
 DW_MACRO_define_strp - lineno : 112 macro : __BEGIN_DECLS 
 DW_MACRO_define_strp - lineno : 113 macro : __END_DECLS 
 DW_MACRO_define_strp - lineno : 118 macro : __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
 DW_MACRO_define_strp - lineno : 119 macro : __bos0(ptr) __builtin_object_size (ptr, 0)
 DW_MACRO_define_strp - lineno : 122 macro : __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 124 macro : __warnattr(msg) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 125 macro : __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
 DW_MACRO_define_strp - lineno : 138 macro : __flexarr []
 DW_MACRO_define_strp - lineno : 139 macro : __glibc_c99_flexarr_available 1
 DW_MACRO_define_strp - lineno : 169 macro : __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
 DW_MACRO_define_strp - lineno : 176 macro : __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
 DW_MACRO_define_strp - lineno : 178 macro : __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
 DW_MACRO_define_strp - lineno : 181 macro : __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
 DW_MACRO_define_strp - lineno : 182 macro : __ASMNAME2(prefix,cname) __STRING (prefix) cname
 DW_MACRO_define_strp - lineno : 203 macro : __attribute_malloc__ __attribute__ ((__malloc__))
 DW_MACRO_define_strp - lineno : 211 macro : __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
 DW_MACRO_define_strp - lineno : 221 macro : __attribute_pure__ __attribute__ ((__pure__))
 DW_MACRO_define_strp - lineno : 228 macro : __attribute_const__ __attribute__ ((__const__))
 DW_MACRO_define_strp - lineno : 237 macro : __attribute_used__ __attribute__ ((__used__))
 DW_MACRO_define_strp - lineno : 238 macro : __attribute_noinline__ __attribute__ ((__noinline__))
 DW_MACRO_define_strp - lineno : 246 macro : __attribute_deprecated__ __attribute__ ((__deprecated__))
 DW_MACRO_define_strp - lineno : 256 macro : __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
 DW_MACRO_define_strp - lineno : 269 macro : __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
 DW_MACRO_define_strp - lineno : 279 macro : __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
 DW_MACRO_define_strp - lineno : 288 macro : __nonnull(params) __attribute__ ((__nonnull__ params))
 DW_MACRO_define_strp - lineno : 296 macro : __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
 DW_MACRO_define_strp - lineno : 305 macro : __wur 
 DW_MACRO_undef_strp - lineno : 313 macro : __always_inline
 DW_MACRO_define_strp - lineno : 314 macro : __always_inline __inline __attribute__ ((__always_inline__))
 DW_MACRO_define_strp - lineno : 323 macro : __attribute_artificial__ __attribute__ ((__artificial__))
 DW_MACRO_define_strp - lineno : 341 macro : __extern_inline extern __inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 342 macro : __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 351 macro : __fortify_function __extern_always_inline __attribute_artificial__
 DW_MACRO_define_strp - lineno : 357 macro : __va_arg_pack() __builtin_va_arg_pack ()
 DW_MACRO_define_strp - lineno : 358 macro : __va_arg_pack_len() __builtin_va_arg_pack_len ()
 DW_MACRO_define_strp - lineno : 378 macro : __restrict_arr __restrict
 DW_MACRO_define_strp - lineno : 393 macro : __glibc_unlikely(cond) __builtin_expect ((cond), 0)
 DW_MACRO_define_strp - lineno : 394 macro : __glibc_likely(cond) __builtin_expect ((cond), 1)
 DW_MACRO_define_strp - lineno : 416 macro : __attribute_nonstring__ 

  Offset:                      0xc4f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 4 macro : __WORDSIZE 64
 DW_MACRO_define_strp - lineno : 12 macro : __WORDSIZE_TIME64_COMPAT32 1
 DW_MACRO_define_strp - lineno : 14 macro : __SYSCALL_WORDSIZE 64

  Offset:                      0xc65
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 450 macro : __LDBL_REDIR1(name,proto,alias) name proto
 DW_MACRO_define_strp - lineno : 451 macro : __LDBL_REDIR(name,proto) name proto
 DW_MACRO_define_strp - lineno : 452 macro : __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
 DW_MACRO_define_strp - lineno : 453 macro : __LDBL_REDIR_NTH(name,proto) name proto __THROW
 DW_MACRO_define_strp - lineno : 454 macro : __LDBL_REDIR_DECL(name) 
 DW_MACRO_define_strp - lineno : 456 macro : __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
 DW_MACRO_define_strp - lineno : 457 macro : __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
 DW_MACRO_define_strp - lineno : 468 macro : __glibc_macro_warning1(message) _Pragma (#message)
 DW_MACRO_define_strp - lineno : 469 macro : __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
 DW_MACRO_define_strp - lineno : 487 macro : __HAVE_GENERIC_SELECTION 1

  Offset:                      0xcaf
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 10 macro : __stub___compat_bdflush 
 DW_MACRO_define_strp - lineno : 11 macro : __stub_chflags 
 DW_MACRO_define_strp - lineno : 12 macro : __stub_fattach 
 DW_MACRO_define_strp - lineno : 13 macro : __stub_fchflags 
 DW_MACRO_define_strp - lineno : 14 macro : __stub_fdetach 
 DW_MACRO_define_strp - lineno : 15 macro : __stub_getmsg 
 DW_MACRO_define_strp - lineno : 16 macro : __stub_gtty 
 DW_MACRO_define_strp - lineno : 17 macro : __stub_lchmod 
 DW_MACRO_define_strp - lineno : 18 macro : __stub_putmsg 
 DW_MACRO_define_strp - lineno : 19 macro : __stub_revoke 
 DW_MACRO_define_strp - lineno : 20 macro : __stub_setlogin 
 DW_MACRO_define_strp - lineno : 21 macro : __stub_sigreturn 
 DW_MACRO_define_strp - lineno : 22 macro : __stub_sstk 
 DW_MACRO_define_strp - lineno : 23 macro : __stub_stty 

  Offset:                      0xd07
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 37 macro : __GLIBC_USE_LIB_EXT2
 DW_MACRO_define_strp - lineno : 42 macro : __GLIBC_USE_LIB_EXT2 0
 DW_MACRO_undef_strp - lineno : 47 macro : __GLIBC_USE_IEC_60559_BFP_EXT
 DW_MACRO_define_strp - lineno : 51 macro : __GLIBC_USE_IEC_60559_BFP_EXT 0
 DW_MACRO_undef_strp - lineno : 56 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT
 DW_MACRO_define_strp - lineno : 60 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT 0
 DW_MACRO_undef_strp - lineno : 65 macro : __GLIBC_USE_IEC_60559_TYPES_EXT
 DW_MACRO_define_strp - lineno : 69 macro : __GLIBC_USE_IEC_60559_TYPES_EXT 0

  Offset:                      0xd3b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 31 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 32 macro : __need_NULL 

  Offset:                      0xd4b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 187 macro : __size_t__ 
 DW_MACRO_define_strp - lineno : 188 macro : __SIZE_T__ 
 DW_MACRO_define_strp - lineno : 189 macro : _SIZE_T 
 DW_MACRO_define_strp - lineno : 190 macro : _SYS_SIZE_T_H 
 DW_MACRO_define_strp - lineno : 191 macro : _T_SIZE_ 
 DW_MACRO_define_strp - lineno : 192 macro : _T_SIZE 
 DW_MACRO_define_strp - lineno : 193 macro : __SIZE_T 
 DW_MACRO_define_strp - lineno : 194 macro : _SIZE_T_ 
 DW_MACRO_define_strp - lineno : 195 macro : _BSD_SIZE_T_ 
 DW_MACRO_define_strp - lineno : 196 macro : _SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 197 macro : _SIZE_T_DEFINED 
 DW_MACRO_define_strp - lineno : 198 macro : _BSD_SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 199 macro : _SIZE_T_DECLARED 
 DW_MACRO_define_strp - lineno : 200 macro : ___int_size_t_h 
 DW_MACRO_define_strp - lineno : 201 macro : _GCC_SIZE_T 
 DW_MACRO_define_strp - lineno : 202 macro : _SIZET_ 
 DW_MACRO_define_strp - lineno : 210 macro : __size_t 
 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xde2
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 98 macro : __S16_TYPE short int
 DW_MACRO_define_strp - lineno : 99 macro : __U16_TYPE unsigned short int
 DW_MACRO_define_strp - lineno : 100 macro : __S32_TYPE int
 DW_MACRO_define_strp - lineno : 101 macro : __U32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 102 macro : __SLONGWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 103 macro : __ULONGWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 117 macro : __SQUAD_TYPE long int
 DW_MACRO_define_strp - lineno : 118 macro : __UQUAD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 119 macro : __SWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 120 macro : __UWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 121 macro : __SLONG32_TYPE int
 DW_MACRO_define_strp - lineno : 122 macro : __ULONG32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 123 macro : __S64_TYPE long int
 DW_MACRO_define_strp - lineno : 124 macro : __U64_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 126 macro : __STD_TYPE typedef

  Offset:                      0xe40
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPESIZES_H 1
 DW_MACRO_define_strp - lineno : 34 macro : __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 35 macro : __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 38 macro : __DEV_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 39 macro : __UID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 40 macro : __GID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 41 macro : __INO_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 42 macro : __INO64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 43 macro : __MODE_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 45 macro : __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 46 macro : __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 51 macro : __OFF_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 52 macro : __OFF64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 53 macro : __PID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 54 macro : __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 55 macro : __RLIM64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 56 macro : __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 57 macro : __BLKCNT64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 58 macro : __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 59 macro : __FSBLKCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 60 macro : __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 61 macro : __FSFILCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 62 macro : __ID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 63 macro : __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 64 macro : __TIME_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 65 macro : __USECONDS_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 66 macro : __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 67 macro : __DADDR_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 68 macro : __KEY_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 69 macro : __CLOCKID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 70 macro : __TIMER_T_TYPE void *
 DW_MACRO_define_strp - lineno : 71 macro : __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 72 macro : __FSID_T_TYPE struct { int __val[2]; }
 DW_MACRO_define_strp - lineno : 73 macro : __SSIZE_T_TYPE __SWORD_TYPE
 DW_MACRO_define_strp - lineno : 74 macro : __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 80 macro : __OFF_T_MATCHES_OFF64_T 1
 DW_MACRO_define_strp - lineno : 83 macro : __INO_T_MATCHES_INO64_T 1
 DW_MACRO_define_strp - lineno : 86 macro : __RLIM_T_MATCHES_RLIM64_T 1
 DW_MACRO_define_strp - lineno : 92 macro : __FD_SETSIZE 1024

  Offset:                      0xf2e
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 5 macro : _BITS_G_CONFIG_H 1
 DW_MACRO_define_strp - lineno : 14 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 18 macro : __need_NULL 

  Offset:                      0xf44
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xf64
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 51 macro : _G_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 53 macro : _G_HAVE_MMAP 1
 DW_MACRO_define_strp - lineno : 54 macro : _G_HAVE_MREMAP 1
 DW_MACRO_define_strp - lineno : 56 macro : _G_IO_IO_FILE_VERSION 0x20001
 DW_MACRO_define_strp - lineno : 59 macro : _G_HAVE_ST_BLKSIZE defined (_STATBUF_ST_BLKSIZE)
 DW_MACRO_define_strp - lineno : 61 macro : _G_BUFSIZ 8192

  Offset:                      0xf8c
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 37 macro : _IO_fpos_t _G_fpos_t
 DW_MACRO_define_strp - lineno : 38 macro : _IO_fpos64_t _G_fpos64_t
 DW_MACRO_define_strp - lineno : 39 macro : _IO_size_t size_t
 DW_MACRO_define_strp - lineno : 40 macro : _IO_ssize_t __ssize_t
 DW_MACRO_define_strp - lineno : 41 macro : _IO_off_t __off_t
 DW_MACRO_define_strp - lineno : 42 macro : _IO_off64_t __off64_t
 DW_MACRO_define_strp - lineno : 43 macro : _IO_pid_t __pid_t
 DW_MACRO_define_strp - lineno : 44 macro : _IO_uid_t __uid_t
 DW_MACRO_define_strp - lineno : 45 macro : _IO_iconv_t _G_iconv_t
 DW_MACRO_define_strp - lineno : 46 macro : _IO_HAVE_ST_BLKSIZE _G_HAVE_ST_BLKSIZE
 DW_MACRO_define_strp - lineno : 47 macro : _IO_BUFSIZ _G_BUFSIZ
 DW_MACRO_define_strp - lineno : 48 macro : _IO_va_list _G_va_list
 DW_MACRO_define_strp - lineno : 49 macro : _IO_wint_t wint_t
 DW_MACRO_define_strp - lineno : 52 macro : __need___va_list 

  Offset:                      0xfe4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 34 macro : __need___va_list
 DW_MACRO_define_strp - lineno : 39 macro : __GNUC_VA_LIST 

  Offset:                      0xff4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 55 macro : _IO_va_list
 DW_MACRO_define_strp - lineno : 56 macro : _IO_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 63 macro : _IO_UNIFIED_JUMPTABLES 1
 DW_MACRO_define_strp - lineno : 66 macro : EOF (-1)
 DW_MACRO_define_strp - lineno : 81 macro : _IOS_INPUT 1
 DW_MACRO_define_strp - lineno : 82 macro : _IOS_OUTPUT 2
 DW_MACRO_define_strp - lineno : 83 macro : _IOS_ATEND 4
 DW_MACRO_define_strp - lineno : 84 macro : _IOS_APPEND 8
 DW_MACRO_define_strp - lineno : 85 macro : _IOS_TRUNC 16
 DW_MACRO_define_strp - lineno : 86 macro : _IOS_NOCREATE 32
 DW_MACRO_define_strp - lineno : 87 macro : _IOS_NOREPLACE 64
 DW_MACRO_define_strp - lineno : 88 macro : _IOS_BIN 128
 DW_MACRO_define_strp - lineno : 96 macro : _IO_MAGIC 0xFBAD0000
 DW_MACRO_define_strp - lineno : 97 macro : _OLD_STDIO_MAGIC 0xFABC0000
 DW_MACRO_define_strp - lineno : 98 macro : _IO_MAGIC_MASK 0xFFFF0000
 DW_MACRO_define_strp - lineno : 99 macro : _IO_USER_BUF 1
 DW_MACRO_define_strp - lineno : 100 macro : _IO_UNBUFFERED 2
 DW_MACRO_define_strp - lineno : 101 macro : _IO_NO_READS 4
 DW_MACRO_define_strp - lineno : 102 macro : _IO_NO_WRITES 8
 DW_MACRO_define_strp - lineno : 103 macro : _IO_EOF_SEEN 0x10
 DW_MACRO_define_strp - lineno : 104 macro : _IO_ERR_SEEN 0x20
 DW_MACRO_define_strp - lineno : 105 macro : _IO_DELETE_DONT_CLOSE 0x40
 DW_MACRO_define_strp - lineno : 106 macro : _IO_LINKED 0x80
 DW_MACRO_define_strp - lineno : 107 macro : _IO_IN_BACKUP 0x100
 DW_MACRO_define_strp - lineno : 108 macro : _IO_LINE_BUF 0x200
 DW_MACRO_define_strp - lineno : 109 macro : _IO_TIED_PUT_GET 0x400
 DW_MACRO_define_strp - lineno : 110 macro : _IO_CURRENTLY_PUTTING 0x800
 DW_MACRO_define_strp - lineno : 111 macro : _IO_IS_APPENDING 0x1000
 DW_MACRO_define_strp - lineno : 112 macro : _IO_IS_FILEBUF 0x2000
 DW_MACRO_define_strp - lineno : 113 macro : _IO_BAD_SEEN 0x4000
 DW_MACRO_define_strp - lineno : 114 macro : _IO_USER_LOCK 0x8000
 DW_MACRO_define_strp - lineno : 116 macro : _IO_FLAGS2_MMAP 1
 DW_MACRO_define_strp - lineno : 117 macro : _IO_FLAGS2_NOTCANCEL 2
 DW_MACRO_define_strp - lineno : 121 macro : _IO_FLAGS2_USER_WBUF 8
 DW_MACRO_define_strp - lineno : 130 macro : _IO_SKIPWS 01
 DW_MACRO_define_strp - lineno : 131 macro : _IO_LEFT 02
 DW_MACRO_define_strp - lineno : 132 macro : _IO_RIGHT 04
 DW_MACRO_define_strp - lineno : 133 macro : _IO_INTERNAL 010
 DW_MACRO_define_strp - lineno : 134 macro : _IO_DEC 020
 DW_MACRO_define_strp - lineno : 135 macro : _IO_OCT 040
 DW_MACRO_define_strp - lineno : 136 macro : _IO_HEX 0100
 DW_MACRO_define_strp - lineno : 137 macro : _IO_SHOWBASE 0200
 DW_MACRO_define_strp - lineno : 138 macro : _IO_SHOWPOINT 0400
 DW_MACRO_define_strp - lineno : 139 macro : _IO_UPPERCASE 01000
 DW_MACRO_define_strp - lineno : 140 macro : _IO_SHOWPOS 02000
 DW_MACRO_define_strp - lineno : 141 macro : _IO_SCIENTIFIC 04000
 DW_MACRO_define_strp - lineno : 142 macro : _IO_FIXED 010000
 DW_MACRO_define_strp - lineno : 143 macro : _IO_UNITBUF 020000
 DW_MACRO_define_strp - lineno : 144 macro : _IO_STDIO 040000
 DW_MACRO_define_strp - lineno : 145 macro : _IO_DONT_CLOSE 0100000
 DW_MACRO_define_strp - lineno : 146 macro : _IO_BOOLALPHA 0200000
 DW_MACRO_define_strp - lineno : 247 macro : _IO_file_flags _flags
 DW_MACRO_define_strp - lineno : 276 macro : __HAVE_COLUMN 
 DW_MACRO_define_strp - lineno : 323 macro : _IO_stdin ((_IO_FILE*)(&_IO_2_1_stdin_))
 DW_MACRO_define_strp - lineno : 324 macro : _IO_stdout ((_IO_FILE*)(&_IO_2_1_stdout_))
 DW_MACRO_define_strp - lineno : 325 macro : _IO_stderr ((_IO_FILE*)(&_IO_2_1_stderr_))
 DW_MACRO_define_strp - lineno : 399 macro : _IO_BE(expr,res) __builtin_expect ((expr), res)
 DW_MACRO_define_strp - lineno : 404 macro : _IO_getc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
 DW_MACRO_define_strp - lineno : 407 macro : _IO_peekc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)
 DW_MACRO_define_strp - lineno : 411 macro : _IO_putc_unlocked(_ch,_fp) (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
 DW_MACRO_define_strp - lineno : 430 macro : _IO_feof_unlocked(__fp) (((__fp)->_flags & _IO_EOF_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 431 macro : _IO_ferror_unlocked(__fp) (((__fp)->_flags & _IO_ERR_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 441 macro : _IO_PENDING_OUTPUT_COUNT(_fp) ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)
 DW_MACRO_define_strp - lineno : 448 macro : _IO_peekc(_fp) _IO_peekc_unlocked (_fp)
 DW_MACRO_define_strp - lineno : 449 macro : _IO_flockfile(_fp) 
 DW_MACRO_define_strp - lineno : 450 macro : _IO_funlockfile(_fp) 
 DW_MACRO_define_strp - lineno : 451 macro : _IO_ftrylockfile(_fp) 
 DW_MACRO_define_strp - lineno : 453 macro : _IO_cleanup_region_start(_fct,_fp) 
 DW_MACRO_define_strp - lineno : 456 macro : _IO_cleanup_region_end(_Doit) 
 DW_MACRO_define_strp - lineno : 459 macro : _IO_need_lock(_fp) (((_fp)->_flags2 & _IO_FLAGS2_NEED_LOCK) != 0)

  Offset:                      0x11c0
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 47 macro : _VA_LIST_DEFINED 
 DW_MACRO_define_strp - lineno : 61 macro : __off_t_defined 
 DW_MACRO_define_strp - lineno : 72 macro : __ssize_t_defined 
 DW_MACRO_define_strp - lineno : 87 macro : _IOFBF 0
 DW_MACRO_define_strp - lineno : 88 macro : _IOLBF 1
 DW_MACRO_define_strp - lineno : 89 macro : _IONBF 2
 DW_MACRO_define_strp - lineno : 94 macro : BUFSIZ _IO_BUFSIZ
 DW_MACRO_define_strp - lineno : 107 macro : SEEK_SET 0
 DW_MACRO_define_strp - lineno : 108 macro : SEEK_CUR 1
 DW_MACRO_define_strp - lineno : 109 macro : SEEK_END 2
 DW_MACRO_define_strp - lineno : 118 macro : P_tmpdir "/tmp"

  Offset:                      0x1206
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _BITS_STDIO_LIM_H 1
 DW_MACRO_define_strp - lineno : 25 macro : L_tmpnam 20
 DW_MACRO_define_strp - lineno : 26 macro : TMP_MAX 238328
 DW_MACRO_define_strp - lineno : 27 macro : FILENAME_MAX 4096
 DW_MACRO_define_strp - lineno : 30 macro : L_ctermid 9
 DW_MACRO_undef_strp - lineno : 36 macro : FOPEN_MAX
 DW_MACRO_define_strp - lineno : 37 macro : FOPEN_MAX 16

  Offset:                      0x1234
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 139 macro : stdin stdin
 DW_MACRO_define_strp - lineno : 140 macro : stdout stdout
 DW_MACRO_define_strp - lineno : 141 macro : stderr stderr
 DW_MACRO_define_strp - lineno : 488 macro : getc(_fp) _IO_getc (_fp)
 DW_MACRO_define_strp - lineno : 528 macro : putc(_ch,_fp) _IO_putc (_ch, _fp)


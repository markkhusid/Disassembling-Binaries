
mult_int_C_AMD64_ggdb3:     file format elf64-x86-64
mult_int_C_AMD64_ggdb3
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000004f0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x00000000000007f8 memsz 0x00000000000007f8 flags r-x
    LOAD off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**21
         filesz 0x0000000000000220 memsz 0x0000000000000228 flags rw-
 DYNAMIC off    0x0000000000000e00 vaddr 0x0000000000200e00 paddr 0x0000000000200e00 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000006b4 vaddr 0x00000000000006b4 paddr 0x00000000000006b4 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**0
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000000004b8
  FINI                 0x00000000000006a4
  INIT_ARRAY           0x0000000000200df0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200df8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000348
  SYMTAB               0x00000000000002b8
  STRSZ                0x000000000000007d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fc0
  RELA                 0x00000000000003f8
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000003d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003c6
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000007d  0000000000000348  0000000000000348  00000348  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000c  00000000000003c6  00000000000003c6  000003c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  00000000000003f8  00000000000003f8  000003f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         00000017  00000000000004b8  00000000000004b8  000004b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          00000010  00000000000004d0  00000000000004d0  000004d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt.got      00000008  00000000000004e0  00000000000004e0  000004e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001b2  00000000000004f0  00000000000004f0  000004f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000000006a4  00000000000006a4  000006a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000004  00000000000006b0  00000000000006b0  000006b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  00000000000006b4  00000000000006b4  000006b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000108  00000000000006f0  00000000000006f0  000006f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000200df0  0000000000200df0  00000df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000200df8  0000000000200df8  00000df8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      000001c0  0000000000200e00  0000000000200e00  00000e00  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000040  0000000000200fc0  0000000000200fc0  00000fc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 23 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 24 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103a  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_info   0000036c  0000000000000000  0000000000000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_abbrev 00000105  0000000000000000  0000000000000000  000013d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_line   0000022d  0000000000000000  0000000000000000  000014db  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_str    00004de9  0000000000000000  0000000000000000  00001708  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_macro  0000125b  0000000000000000  0000000000000000  000064f1  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000348 l    d  .dynstr	0000000000000000              .dynstr
00000000000003c6 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000003d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000003f8 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000004b8 l    d  .init	0000000000000000              .init
00000000000004d0 l    d  .plt	0000000000000000              .plt
00000000000004e0 l    d  .plt.got	0000000000000000              .plt.got
00000000000004f0 l    d  .text	0000000000000000              .text
00000000000006a4 l    d  .fini	0000000000000000              .fini
00000000000006b0 l    d  .rodata	0000000000000000              .rodata
00000000000006b4 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000000006f0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200df0 l    d  .init_array	0000000000000000              .init_array
0000000000200df8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200e00 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fc0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_macro	0000000000000000              .debug_macro
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000520 l     F .text	0000000000000000              deregister_tm_clones
0000000000000560 l     F .text	0000000000000000              register_tm_clones
00000000000005b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200df8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000005f0 l     F .text	0000000000000000              frame_dummy
0000000000200df0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              mult_int.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000007f4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200df8 l       .init_array	0000000000000000              __init_array_end
0000000000200e00 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200df0 l       .init_array	0000000000000000              __init_array_start
00000000000006b4 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fc0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000000006a0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201010 g       .data	0000000000000000              _edata
00000000000006a4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
00000000000006b0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000630 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
00000000000004f0 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
00000000000005fa g     F .text	000000000000002a              main
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000004b8 g     F .init	0000000000000000              _init


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 3983d932 ff37945d 0cbffad1 6aec38c2  9..2.7.]....j.8.
 0294 4464d675                             Dd.u            
Contents of section .gnu.hash:
 0298 01000000 01000000 01000000 00000000  ................
 02a8 00000000 00000000 00000000           ............    
Contents of section .dynsym:
 02b8 00000000 00000000 00000000 00000000  ................
 02c8 00000000 00000000 38000000 20000000  ........8... ...
 02d8 00000000 00000000 00000000 00000000  ................
 02e8 1a000000 12000000 00000000 00000000  ................
 02f8 00000000 00000000 54000000 20000000  ........T... ...
 0308 00000000 00000000 00000000 00000000  ................
 0318 63000000 20000000 00000000 00000000  c... ...........
 0328 00000000 00000000 0b000000 22000000  ............"...
 0338 00000000 00000000 00000000 00000000  ................
Contents of section .dynstr:
 0348 006c6962 632e736f 2e36005f 5f637861  .libc.so.6.__cxa
 0358 5f66696e 616c697a 65005f5f 6c696263  _finalize.__libc
 0368 5f737461 72745f6d 61696e00 474c4942  _start_main.GLIB
 0378 435f322e 322e3500 5f49544d 5f646572  C_2.2.5._ITM_der
 0388 65676973 74657254 4d436c6f 6e655461  egisterTMCloneTa
 0398 626c6500 5f5f676d 6f6e5f73 74617274  ble.__gmon_start
 03a8 5f5f005f 49544d5f 72656769 73746572  __._ITM_register
 03b8 544d436c 6f6e6554 61626c65 00        TMCloneTable.   
Contents of section .gnu.version:
 03c6 00000000 02000000 00000200           ............    
Contents of section .gnu.version_r:
 03d8 01000100 01000000 10000000 00000000  ................
 03e8 751a6909 00000200 2c000000 00000000  u.i.....,.......
Contents of section .rela.dyn:
 03f8 f00d2000 00000000 08000000 00000000  .. .............
 0408 f0050000 00000000 f80d2000 00000000  .......... .....
 0418 08000000 00000000 b0050000 00000000  ................
 0428 08102000 00000000 08000000 00000000  .. .............
 0438 08102000 00000000 d80f2000 00000000  .. ....... .....
 0448 06000000 01000000 00000000 00000000  ................
 0458 e00f2000 00000000 06000000 02000000  .. .............
 0468 00000000 00000000 e80f2000 00000000  .......... .....
 0478 06000000 03000000 00000000 00000000  ................
 0488 f00f2000 00000000 06000000 04000000  .. .............
 0498 00000000 00000000 f80f2000 00000000  .......... .....
 04a8 06000000 05000000 00000000 00000000  ................
Contents of section .init:
 04b8 4883ec08 488b0525 0b200048 85c07402  H...H..%. .H..t.
 04c8 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 04d0 ff35f20a 2000ff25 f40a2000 0f1f4000  .5.. ..%.. ...@.
Contents of section .plt.got:
 04e0 ff25120b 20006690                    .%.. .f.        
Contents of section .text:
 04f0 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 0500 8d059a01 0000488d 0d230100 00488d3d  ......H..#...H.=
 0510 e6000000 ff15c60a 2000f40f 1f440000  ........ ....D..
 0520 488d3de9 0a200055 488d05e1 0a200048  H.=.. .UH.... .H
 0530 39f84889 e5741948 8b059a0a 20004885  9.H..t.H.... .H.
 0540 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 0550 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 0560 488d3da9 0a200048 8d35a20a 20005548  H.=.. .H.5.. .UH
 0570 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 0580 4801c648 d1fe7418 488b0561 0a200048  H..H..t.H..a. .H
 0590 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 05a0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 05b0 803d590a 20000075 2f48833d 370a2000  .=Y. ..u/H.=7. .
 05c0 00554889 e5740c48 8b3d3a0a 2000e80d  .UH..t.H.=:. ...
 05d0 ffffffe8 48ffffff c605310a 2000015d  ....H.....1. ..]
 05e0 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 05f0 554889e5 5de966ff ffff5548 89e5897d  UH..].f...UH...}
 0600 ec488975 e0c745f4 02000000 c745f803  .H.u..E......E..
 0610 0000008b 45f40faf 45f88945 fcb80000  ....E...E..E....
 0620 00005dc3 662e0f1f 84000000 00006690  ..].f.........f.
 0630 41574156 4989d741 5541544c 8d25ae07  AWAVI..AUATL.%..
 0640 20005548 8d2dae07 20005341 89fd4989   .UH.-.. .SA..I.
 0650 f64c29e5 4883ec08 48c1fd03 e857feff  .L).H...H....W..
 0660 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 0670 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 0680 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 0690 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 06a0 f3c3                                 ..              
Contents of section .fini:
 06a4 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 06b0 01000200                             ....            
Contents of section .eh_frame_hdr:
 06b4 011b033b 38000000 06000000 1cfeffff  ...;8...........
 06c4 84000000 2cfeffff ac000000 3cfeffff  ....,.......<...
 06d4 54000000 46ffffff c4000000 7cffffff  T...F.......|...
 06e4 e4000000 ecffffff 2c010000           ........,...    
Contents of section .eh_frame:
 06f0 14000000 00000000 017a5200 01781001  .........zR..x..
 0700 1b0c0708 90010710 14000000 1c000000  ................
 0710 e0fdffff 2b000000 00000000 00000000  ....+...........
 0720 14000000 00000000 017a5200 01781001  .........zR..x..
 0730 1b0c0708 90010000 24000000 1c000000  ........$.......
 0740 90fdffff 10000000 000e1046 0e184a0f  ...........F..J.
 0750 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 0760 14000000 44000000 78fdffff 08000000  ....D...x.......
 0770 00000000 00000000 1c000000 5c000000  ............\...
 0780 7afeffff 2a000000 00410e10 8602430d  z...*....A....C.
 0790 06650c07 08000000 44000000 7c000000  .e......D...|...
 07a0 90feffff 65000000 00420e10 8f02420e  ....e....B....B.
 07b0 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 07c0 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 07d0 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 07e0 10000000 c4000000 b8feffff 02000000  ................
 07f0 00000000 00000000                    ........        
Contents of section .init_array:
 200df0 f0050000 00000000                    ........        
Contents of section .fini_array:
 200df8 b0050000 00000000                    ........        
Contents of section .dynamic:
 200e00 01000000 00000000 01000000 00000000  ................
 200e10 0c000000 00000000 b8040000 00000000  ................
 200e20 0d000000 00000000 a4060000 00000000  ................
 200e30 19000000 00000000 f00d2000 00000000  .......... .....
 200e40 1b000000 00000000 08000000 00000000  ................
 200e50 1a000000 00000000 f80d2000 00000000  .......... .....
 200e60 1c000000 00000000 08000000 00000000  ................
 200e70 f5feff6f 00000000 98020000 00000000  ...o............
 200e80 05000000 00000000 48030000 00000000  ........H.......
 200e90 06000000 00000000 b8020000 00000000  ................
 200ea0 0a000000 00000000 7d000000 00000000  ........}.......
 200eb0 0b000000 00000000 18000000 00000000  ................
 200ec0 15000000 00000000 00000000 00000000  ................
 200ed0 03000000 00000000 c00f2000 00000000  .......... .....
 200ee0 07000000 00000000 f8030000 00000000  ................
 200ef0 08000000 00000000 c0000000 00000000  ................
 200f00 09000000 00000000 18000000 00000000  ................
 200f10 1e000000 00000000 08000000 00000000  ................
 200f20 fbffff6f 00000000 01000008 00000000  ...o............
 200f30 feffff6f 00000000 d8030000 00000000  ...o............
 200f40 ffffff6f 00000000 01000000 00000000  ...o............
 200f50 f0ffff6f 00000000 c6030000 00000000  ...o............
 200f60 f9ffff6f 00000000 03000000 00000000  ...o............
 200f70 00000000 00000000 00000000 00000000  ................
 200f80 00000000 00000000 00000000 00000000  ................
 200f90 00000000 00000000 00000000 00000000  ................
 200fa0 00000000 00000000 00000000 00000000  ................
 200fb0 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 200fc0 000e2000 00000000 00000000 00000000  .. .............
 200fd0 00000000 00000000 00000000 00000000  ................
 200fe0 00000000 00000000 00000000 00000000  ................
 200ff0 00000000 00000000 00000000 00000000  ................
Contents of section .data:
 201000 00000000 00000000 08102000 00000000  .......... .....
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 fa050000 00000000 2a000000 00000000  ........*.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 68030000 04000000 00000801 a60b0000  h...............
 0010 0ca00200 00201c00 00fa0500 00000000  ..... ..........
 0020 002a0000 00000000 00000000 00000000  .*..............
 0030 0002e228 000002d8 3c000000 03080769  ...(....<......i
 0040 39000003 0108a026 00000302 070c0700  9......&........
 0050 00030407 d41b0000 0301061e 42000003  ............B...
 0060 02056724 00000404 05696e74 00030805  ..g$.....int....
 0070 c4390000 025a1000 00038c6d 00000002  .9...Z.....m....
 0080 a20c0000 038d6d00 00000508 06089200  ......m.........
 0090 00000301 06254200 00079200 0000085f  .....%B........_
 00a0 3d0000d8 04f51e02 000009bd 26000004  =...........&...
 00b0 f6660000 000009f5 20000004 fb8c0000  .f...... .......
 00c0 00080931 33000004 fc8c0000 001009db  ...13...........
 00d0 18000004 fd8c0000 001809d9 24000004  ............$...
 00e0 fe8c0000 002009d0 41000004 ff8c0000  ..... ..A.......
 00f0 00280aeb 05000004 00018c00 0000300a  .(............0.
 0100 794d0000 0401018c 00000038 0ae60200  yM.........8....
 0110 00040201 8c000000 400a1426 00000404  ........@..&....
 0120 018c0000 00480aae 42000004 05018c00  .....H..B.......
 0130 0000500a cb0f0000 0406018c 00000058  ..P............X
 0140 0a010900 00040801 56020000 600a654a  ........V...`.eJ
 0150 0000040a 015c0200 00680a6e 16000004  .....\...h.n....
 0160 0c016600 0000700a 3a080000 04100166  ..f...p.:......f
 0170 00000074 0a533d00 00041201 74000000  ...t.S=.....t...
 0180 780a7d4c 00000416 014a0000 00800af4  x.}L.....J......
 0190 17000004 17015800 0000820a 4e010000  ......X.....N...
 01a0 04180162 02000083 0a343c00 00041c01  ...b.....4<.....
 01b0 72020000 880a573d 00000425 017f0000  r.....W=...%....
 01c0 00900a56 2b000004 2d018a00 0000980a  ...V+...-.......
 01d0 5d2b0000 042e018a 000000a0 0a642b00  ]+...........d+.
 01e0 00042f01 8a000000 a80a6b2b 00000430  ../.......k+...0
 01f0 018a0000 00b00a72 2b000004 32013100  .......r+...2.1.
 0200 0000b80a 6d1f0000 04330166 000000c0  ....m....3.f....
 0210 0a704d00 00043501 78020000 c4000bf9  .pM...5.x.......
 0220 01000004 9a087a1b 00001804 a0560200  ......z......V..
 0230 00090b1a 000004a1 56020000 00099041  ........V......A
 0240 000004a2 5c020000 0809df0e 000004a6  ....\...........
 0250 66000000 10000608 25020000 06089e00  f.......%.......
 0260 00000c92 00000072 0200000d 3c000000  .......r....<...
 0270 00000608 1e020000 0c920000 00880200  ................
 0280 000d3c00 00001300 0ee03800 000f4d25  ..<.......8...M%
 0290 0000043f 01880200 000fc425 00000440  ...?.......%...@
 02a0 01880200 000f1c1f 00000441 01880200  ...........A....
 02b0 00060899 00000007 b1020000 10a92200  ..............".
 02c0 0005875c 02000010 a9410000 05885c02  ...\.....A....\.
 02d0 000010ed 17000005 895c0200 0010eb15  .........\......
 02e0 0000061a 66000000 0cb70200 00f30200  ....f...........
 02f0 00110007 e8020000 10d61400 00061bf3  ................
 0300 02000012 ae470000 01036600 0000fa05  .....G....f.....
 0310 00000000 00002a00 00000000 0000019c  ......*.........
 0320 65030000 13330700 00010366 00000002  e....3.....f....
 0330 915c1303 1d000001 03650300 00029150  .\.......e.....P
 0340 14610001 05660000 00029164 14620001  .a...f.....d.b..
 0350 05660000 00029168 14630001 05660000  .f.....h.c...f..
 0360 0002916c 0006088c 00000000           ...l........    
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17994217 00000216 00030e3a 0b3b0b49  ..B........:.;.I
 0020 13000003 24000b0b 3e0b030e 00000424  ....$...>......$
 0030 000b0b3e 0b030800 00050f00 0b0b0000  ...>............
 0040 060f000b 0b491300 00072600 49130000  .....I....&.I...
 0050 08130103 0e0b0b3a 0b3b0b01 13000009  .......:.;......
 0060 0d00030e 3a0b3b0b 4913380b 00000a0d  ....:.;.I.8.....
 0070 00030e3a 0b3b0549 13380b00 000b1600  ...:.;.I.8......
 0080 030e3a0b 3b0b0000 0c010149 13011300  ..:.;......I....
 0090 000d2100 49132f0b 00000e13 00030e3c  ..!.I./........<
 00a0 1900000f 3400030e 3a0b3b05 49133f19  ....4...:.;.I.?.
 00b0 3c190000 10340003 0e3a0b3b 0b49133f  <....4...:.;.I.?
 00c0 193c1900 00112100 0000122e 013f1903  .<....!......?..
 00d0 0e3a0b3b 0b271949 13110112 07401897  .:.;.'.I.....@..
 00e0 42190113 00001305 00030e3a 0b3b0b49  B..........:.;.I
 00f0 13021800 00143400 03083a0b 3b0b4913  ......4...:.;.I.
 0100 02180000 00                          .....           
Contents of section .debug_line:
 0000 29020000 02000e02 00000101 fb0e0d00  )...............
 0010 01010101 00000001 0000012f 7573722f  .........../usr/
 0020 6c69622f 6763632f 7838365f 36342d6c  lib/gcc/x86_64-l
 0030 696e7578 2d676e75 2f372f69 6e636c75  inux-gnu/7/inclu
 0040 6465002f 7573722f 7838365f 36342d6c  de./usr/x86_64-l
 0050 696e7578 2d676e75 2f696e63 6c756465  inux-gnu/include
 0060 2f626974 73002f75 73722f78 38365f36  /bits./usr/x86_6
 0070 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 0080 75646500 2f757372 2f783836 5f36342d  ude./usr/x86_64-
 0090 6c696e75 782d676e 752f696e 636c7564  linux-gnu/includ
 00a0 652f7379 73002f75 73722f78 38365f36  e/sys./usr/x86_6
 00b0 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 00c0 7564652f 676e7500 2f757372 2f783836  ude/gnu./usr/x86
 00d0 5f36342d 6c696e75 782d676e 752f696e  _64-linux-gnu/in
 00e0 636c7564 652f6269 74732f74 79706573  clude/bits/types
 00f0 00006d75 6c745f69 6e742e63 00000000  ..mult_int.c....
 0100 73746464 65662e68 00010000 74797065  stddef.h....type
 0110 732e6800 0200006c 6962696f 2e680002  s.h....libio.h..
 0120 00007374 64696f2e 68000300 00737973  ..stdio.h....sys
 0130 5f657272 6c697374 2e680002 00007374  _errlist.h....st
 0140 64632d70 72656465 662e6800 0300006c  dc-predef.h....l
 0150 6962632d 68656164 65722d73 74617274  ibc-header-start
 0160 2e680002 00006665 61747572 65732e68  .h....features.h
 0170 00030000 63646566 732e6800 04000077  ....cdefs.h....w
 0180 6f726473 697a652e 68000200 006c6f6e  ordsize.h....lon
 0190 672d646f 75626c65 2e680002 00007374  g-double.h....st
 01a0 7562732e 68000500 00737475 62732d36  ubs.h....stubs-6
 01b0 342e6800 05000074 79706573 697a6573  4.h....typesizes
 01c0 2e680002 00005f5f 46494c45 2e680006  .h....__FILE.h..
 01d0 00004649 4c452e68 00060000 5f475f63  ..FILE.h...._G_c
 01e0 6f6e6669 672e6800 0200005f 5f6d6273  onfig.h....__mbs
 01f0 74617465 5f742e68 00060000 73746461  tate_t.h....stda
 0200 72672e68 00010000 73746469 6f5f6c69  rg.h....stdio_li
 0210 6d2e6800 02000000 000902fa 05000000  m.h.............
 0220 00000015 af7576e5 02020001 01        .....uv......   
Contents of section .debug_str:
 0000 5f494f5f 44454320 30323000 5f5f5349  _IO_DEC 020.__SI
 0010 475f4154 4f4d4943 5f4d4158 5f5f2030  G_ATOMIC_MAX__ 0
 0020 78376666 66666666 66005f5f 464c5436  x7fffffff.__FLT6
 0030 345f4841 535f5155 4945545f 4e414e5f  4_HAS_QUIET_NAN_
 0040 5f203100 5f53495a 455f545f 44454649  _ 1._SIZE_T_DEFI
 0050 4e454420 005f5f44 45433634 5f535542  NED .__DEC64_SUB
 0060 4e4f524d 414c5f4d 494e5f5f 20302e30  NORMAL_MIN__ 0.0
 0070 30303030 30303030 30303030 3031452d  00000000000001E-
 0080 33383344 44005f5f 464c5433 325f4841  383DD.__FLT32_HA
 0090 535f494e 46494e49 54595f5f 2031005f  S_INFINITY__ 1._
 00a0 5f464c54 36345f4d 41585f45 58505f5f  _FLT64_MAX_EXP__
 00b0 20313032 34005f5f 464c545f 4d494e5f   1024.__FLT_MIN_
 00c0 31305f45 58505f5f 20282d33 3729005f  10_EXP__ (-37)._
 00d0 5f535953 43414c4c 5f554c4f 4e475f54  _SYSCALL_ULONG_T
 00e0 59504520 5f5f554c 4f4e4757 4f52445f  YPE __ULONGWORD_
 00f0 54595045 005f5f46 4c543634 585f4550  TYPE.__FLT64X_EP
 0100 53494c4f 4e5f5f20 312e3038 34323032  SILON__ 1.084202
 0110 31373234 38353530 34343334 30303734  1724855044340074
 0120 35323830 30383639 39343137 31652d31  5280086994171e-1
 0130 39463634 78005f5f 464c5433 32585f4d  9F64x.__FLT32X_M
 0140 41585f45 58505f5f 20313032 34005f73  AX_EXP__ 1024._s
 0150 686f7274 62756600 5f5f4743 435f4154  hortbuf.__GCC_AT
 0160 4f4d4943 5f544553 545f414e 445f5345  OMIC_TEST_AND_SE
 0170 545f5452 55455641 4c203100 5f5f4f46  T_TRUEVAL 1.__OF
 0180 465f545f 4d415443 4845535f 4f464636  F_T_MATCHES_OFF6
 0190 345f5420 31005f5f 44454336 345f4550  4_T 1.__DEC64_EP
 01a0 53494c4f 4e5f5f20 31452d31 35444400  SILON__ 1E-15DD.
 01b0 5f5f4442 4c5f4445 4e4f524d 5f4d494e  __DBL_DENORM_MIN
 01c0 5f5f2028 28646f75 626c6529 342e3934  __ ((double)4.94
 01d0 30363536 34353834 31323436 35343431  0656458412465441
 01e0 37363536 38373932 38363832 32313337  7656879286822137
 01f0 32652d33 32344c29 005f494f 5f6c6f63  2e-324L)._IO_loc
 0200 6b5f7400 5f5f494e 54505452 5f4d4158  k_t.__INTPTR_MAX
 0210 5f5f2030 78376666 66666666 66666666  __ 0x7ffffffffff
 0220 66666666 664c005f 475f4841 56455f53  fffffL._G_HAVE_S
 0230 545f424c 4b53495a 45206465 66696e65  T_BLKSIZE define
 0240 6420285f 53544154 4255465f 53545f42  d (_STATBUF_ST_B
 0250 4c4b5349 5a452900 5f5f666c 65786172  LKSIZE).__flexar
 0260 72205b5d 005f5f46 4c543332 5f4d414e  r [].__FLT32_MAN
 0270 545f4449 475f5f20 3234005f 5f474343  T_DIG__ 24.__GCC
 0280 5f484156 455f5359 4e435f43 4f4d5041  _HAVE_SYNC_COMPA
 0290 52455f41 4e445f53 5741505f 38203100  RE_AND_SWAP_8 1.
 02a0 6d756c74 5f696e74 2e630046 494c454e  mult_int.c.FILEN
 02b0 414d455f 4d415820 34303936 005f5354  AME_MAX 4096._ST
 02c0 44435f50 52454445 465f4820 31005f5f  DC_PREDEF_H 1.__
 02d0 5553455f 49534f43 31312031 005f494f  USE_ISOC11 1._IO
 02e0 46424620 30005f49 4f5f6275 665f656e  FBF 0._IO_buf_en
 02f0 64005f5f 494e545f 46415354 36345f57  d.__INT_FAST64_W
 0300 49445448 5f5f2036 34005f49 4f5f454f  IDTH__ 64._IO_EO
 0310 465f5345 454e2030 78313000 5345454b  F_SEEN 0x10.SEEK
 0320 5f435552 2031005f 5f464c54 3332585f  _CUR 1.__FLT32X_
 0330 44454349 4d414c5f 4449475f 5f203137  DECIMAL_DIG__ 17
 0340 005f5f6b 385f5f20 31005f5f 44424c5f  .__k8__ 1.__DBL_
 0350 4d494e5f 4558505f 5f20282d 31303231  MIN_EXP__ (-1021
 0360 29005f5f 494e545f 46415354 36345f4d  ).__INT_FAST64_M
 0370 41585f5f 20307837 66666666 66666666  AX__ 0x7ffffffff
 0380 66666666 6666664c 005f5f68 61735f69  fffffffL.__has_i
 0390 6e636c75 64655f6e 65787428 53545229  nclude_next(STR)
 03a0 205f5f68 61735f69 6e636c75 64655f6e   __has_include_n
 03b0 6578745f 5f285354 5229005f 494f5f52  ext__(STR)._IO_R
 03c0 49474854 20303400 5f494f5f 55534552  IGHT 04._IO_USER
 03d0 5f425546 2031005f 5359535f 43444546  _BUF 1._SYS_CDEF
 03e0 535f4820 31005f5f 464c5433 32585f4d  S_H 1.__FLT32X_M
 03f0 41585f5f 20312e37 39373639 33313334  AX__ 1.797693134
 0400 38363233 31353730 38313435 32373432  8623157081452742
 0410 33373331 37303433 3537652b 33303846  3731704357e+308F
 0420 33327800 5f5f676c 6962635f 756e6c69  32x.__glibc_unli
 0430 6b656c79 28636f6e 6429205f 5f627569  kely(cond) __bui
 0440 6c74696e 5f657870 65637420 2828636f  ltin_expect ((co
 0450 6e64292c 20302900 5f5f5349 5a454f46  nd), 0).__SIZEOF
 0460 5f57494e 545f545f 5f203400 5f5f474e  _WINT_T__ 4.__GN
 0470 55435f50 52455245 51286d61 6a2c6d69  UC_PREREQ(maj,mi
 0480 6e292028 285f5f47 4e55435f 5f203c3c  n) ((__GNUC__ <<
 0490 20313629 202b205f 5f474e55 435f4d49   16) + __GNUC_MI
 04a0 4e4f525f 5f203e3d 2028286d 616a2920  NOR__ >= ((maj) 
 04b0 3c3c2031 3629202b 20286d69 6e292900  << 16) + (min)).
 04c0 5f5f5549 4e545054 525f4d41 585f5f20  __UINTPTR_MAX__ 
 04d0 30786666 66666666 66666666 66666666  0xffffffffffffff
 04e0 6666554c 005f5f76 615f6172 675f7061  ffUL.__va_arg_pa
 04f0 636b5f6c 656e2829 205f5f62 75696c74  ck_len() __built
 0500 696e5f76 615f6172 675f7061 636b5f6c  in_va_arg_pack_l
 0510 656e2028 29005f47 5f484156 455f4d4d  en ()._G_HAVE_MM
 0520 41502031 005f5f61 74747269 62757465  AP 1.__attribute
 0530 5f636f6e 73745f5f 205f5f61 74747269  _const__ __attri
 0540 62757465 5f5f2028 285f5f63 6f6e7374  bute__ ((__const
 0550 5f5f2929 005f5f47 4c494243 5f555345  __)).__GLIBC_USE
 0560 5f444550 52454341 5445445f 47455453  _DEPRECATED_GETS
 0570 005f494f 5f4e4f5f 57524954 45532038  ._IO_NO_WRITES 8
 0580 005f5f47 4e55435f 4d494e4f 525f5f20  .__GNUC_MINOR__ 
 0590 33005f5f 5553455f 4c415247 4546494c  3.__USE_LARGEFIL
 05a0 45363400 5f5f524c 494d5f54 5f545950  E64.__RLIM_T_TYP
 05b0 45205f5f 53595343 414c4c5f 554c4f4e  E __SYSCALL_ULON
 05c0 475f5459 5045005f 5f4c4442 4c5f5245  G_TYPE.__LDBL_RE
 05d0 44495228 6e616d65 2c70726f 746f2920  DIR(name,proto) 
 05e0 6e616d65 2070726f 746f005f 494f5f77  name proto._IO_w
 05f0 72697465 5f656e64 005f5f47 4c494243  rite_end.__GLIBC
 0600 5f505245 52455128 6d616a2c 6d696e29  _PREREQ(maj,min)
 0610 2028285f 5f474c49 42435f5f 203c3c20   ((__GLIBC__ << 
 0620 31362920 2b205f5f 474c4942 435f4d49  16) + __GLIBC_MI
 0630 4e4f525f 5f203e3d 2028286d 616a2920  NOR__ >= ((maj) 
 0640 3c3c2031 3629202b 20286d69 6e292900  << 16) + (min)).
 0650 5f5f6e65 65645f4e 554c4c20 005f5f46  __need_NULL .__F
 0660 4c543634 5f4d494e 5f5f2032 2e323235  LT64_MIN__ 2.225
 0670 30373338 35383530 37323031 33383330  0738585072013830
 0680 39303233 32373137 33333234 30343036  9023271733240406
 0690 652d3330 38463634 005f5f4c 4f4e475f  e-308F64.__LONG_
 06a0 4c4f4e47 5f574944 54485f5f 20363400  LONG_WIDTH__ 64.
 06b0 5f504f53 49585f53 4f555243 45005f5f  _POSIX_SOURCE.__
 06c0 464c545f 44454e4f 524d5f4d 494e5f5f  FLT_DENORM_MIN__
 06d0 20312e34 30313239 38343634 33323438   1.4012984643248
 06e0 31373037 30393233 37323935 38333238  1707092372958328
 06f0 39393136 3133652d 34354600 5f5f4348  991613e-45F.__CH
 0700 41523136 5f545950 455f5f20 73686f72  AR16_TYPE__ shor
 0710 7420756e 7369676e 65642069 6e74005f  t unsigned int._
 0720 5f53495a 454f465f 53495a45 5f545f5f  _SIZEOF_SIZE_T__
 0730 20380061 72676300 5f5f4f52 4445525f   8.argc.__ORDER_
 0740 4249475f 454e4449 414e5f5f 20343332  BIG_ENDIAN__ 432
 0750 31005f5f 474e5543 5f5f2037 005f494f  1.__GNUC__ 7._IO
 0760 5f4c494e 455f4255 46203078 32303000  _LINE_BUF 0x200.
 0770 5f5f5553 455f4953 4f435858 3131005f  __USE_ISOCXX11._
 0780 5f555345 5f415446 494c4520 31005f5f  _USE_ATFILE 1.__
 0790 6e6f6e6e 756c6c28 70617261 6d732920  nonnull(params) 
 07a0 5f5f6174 74726962 7574655f 5f202828  __attribute__ ((
 07b0 5f5f6e6f 6e6e756c 6c5f5f20 70617261  __nonnull__ para
 07c0 6d732929 005f5f55 494e5436 345f4328  ms)).__UINT64_C(
 07d0 63292063 20232320 554c005f 5f474e55  c) c ## UL.__GNU
 07e0 5f4c4942 52415259 5f5f005f 5f44424c  _LIBRARY__.__DBL
 07f0 5f4d414e 545f4449 475f5f20 3533005f  _MANT_DIG__ 53._
 0800 5f555345 5f504f53 49583139 39353036  _USE_POSIX199506
 0810 2031005f 5f737475 625f6368 666c6167   1.__stub_chflag
 0820 7320005f 5f494e54 5f4d4158 5f5f2030  s .__INT_MAX__ 0
 0830 78376666 66666666 66005f66 6c616773  x7fffffff._flags
 0840 32005f5f 4e54484e 4c286663 7429205f  2.__NTHNL(fct) _
 0850 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 0860 5f6e6f74 68726f77 5f5f2929 20666374  _nothrow__)) fct
 0870 005f5f73 7475625f 66636866 6c616773  .__stub_fchflags
 0880 20005f5f 494e5431 365f5459 50455f5f   .__INT16_TYPE__
 0890 2073686f 72742069 6e74005f 5f444543   short int.__DEC
 08a0 494d414c 5f424944 5f464f52 4d41545f  IMAL_BID_FORMAT_
 08b0 5f203100 5f5f4445 4333325f 45505349  _ 1.__DEC32_EPSI
 08c0 4c4f4e5f 5f203145 2d364446 005f5349  LON__ 1E-6DF._SI
 08d0 5a455f54 5f444543 4c415245 4420005f  ZE_T_DECLARED ._
 08e0 5f46445f 53455453 495a4520 31303234  _FD_SETSIZE 1024
 08f0 005f5f4c 44424c5f 4449475f 5f203138  .__LDBL_DIG__ 18
 0900 005f6d61 726b6572 73005f5f 41544f4d  ._markers.__ATOM
 0910 49435f53 45515f43 53542035 005f5f55  IC_SEQ_CST 5.__U
 0920 53455f50 4f534958 32203100 5f5f5553  SE_POSIX2 1.__US
 0930 455f4953 4f433935 2031005f 5f53495a  E_ISOC95 1.__SIZ
 0940 454f465f 53484f52 545f5f20 32005f47  EOF_SHORT__ 2._G
 0950 5f76615f 6c697374 205f5f67 6e75635f  _va_list __gnuc_
 0960 76615f6c 69737400 5f5f5549 4e543634  va_list.__UINT64
 0970 5f545950 455f5f20 6c6f6e67 20756e73  _TYPE__ long uns
 0980 69676e65 6420696e 74005f5f 494e545f  igned int.__INT_
 0990 46415354 33325f4d 41585f5f 20307837  FAST32_MAX__ 0x7
 09a0 66666666 66666666 66666666 6666664c  fffffffffffffffL
 09b0 005f5f49 4e545f4c 45415354 385f5459  .__INT_LEAST8_TY
 09c0 50455f5f 20736967 6e656420 63686172  PE__ signed char
 09d0 005f5f73 697a655f 7420005f 5f55494e  .__size_t .__UIN
 09e0 545f4c45 41535433 325f5459 50455f5f  T_LEAST32_TYPE__
 09f0 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 0a00 73747562 5f736967 72657475 726e2000  stub_sigreturn .
 0a10 5f5f7074 725f7420 766f6964 202a005f  __ptr_t void *._
 0a20 5f533332 5f545950 4520696e 74005f5f  _S32_TYPE int.__
 0a30 53544443 5f4e4f5f 54485245 4144535f  STDC_NO_THREADS_
 0a40 5f203100 5f5f4259 54455f4f 52444552  _ 1.__BYTE_ORDER
 0a50 5f5f205f 5f4f5244 45525f4c 4954544c  __ __ORDER_LITTL
 0a60 455f454e 4449414e 5f5f005f 5f4c4442  E_ENDIAN__.__LDB
 0a70 4c5f4d49 4e5f5f20 332e3336 32313033  L_MIN__ 3.362103
 0a80 31343331 31323039 33353036 32363236  1431120935062626
 0a90 37373831 37333231 37353236 30652d34  7781732175260e-4
 0aa0 3933324c 005f5f46 4c543332 5f4d494e  932L.__FLT32_MIN
 0ab0 5f31305f 4558505f 5f20282d 33372900  _10_EXP__ (-37).
 0ac0 5f5f4442 4c5f4841 535f4445 4e4f524d  __DBL_HAS_DENORM
 0ad0 5f5f2031 005f5f49 4e545f4c 45415354  __ 1.__INT_LEAST
 0ae0 36345f54 5950455f 5f206c6f 6e672069  64_TYPE__ long i
 0af0 6e74005f 5f574348 41525f4d 494e5f5f  nt.__WCHAR_MIN__
 0b00 20282d5f 5f574348 41525f4d 41585f5f   (-__WCHAR_MAX__
 0b10 202d2031 29005f49 4f5f5348 4f57504f   - 1)._IO_SHOWPO
 0b20 494e5420 30343030 005f5f6f 66665f74  INT 0400.__off_t
 0b30 5f646566 696e6564 20005f5f 53544443  _defined .__STDC
 0b40 5f555446 5f33325f 5f203100 5f5f424c  _UTF_32__ 1.__BL
 0b50 4b53495a 455f545f 54595045 205f5f53  KSIZE_T_TYPE __S
 0b60 59534341 4c4c5f53 4c4f4e47 5f545950  YSCALL_SLONG_TYP
 0b70 45005f5f 494e545f 4c454153 5431365f  E.__INT_LEAST16_
 0b80 4d41585f 5f203078 37666666 005f5f4c  MAX__ 0x7fff.__L
 0b90 44424c5f 52454449 525f4445 434c286e  DBL_REDIR_DECL(n
 0ba0 616d6529 2000474e 55204331 3120372e  ame) .GNU C11 7.
 0bb0 332e3020 2d6d7475 6e653d67 656e6572  3.0 -mtune=gener
 0bc0 6963202d 6d617263 683d7838 362d3634  ic -march=x86-64
 0bd0 202d6767 64623320 2d667374 61636b2d   -ggdb3 -fstack-
 0be0 70726f74 6563746f 722d7374 726f6e67  protector-strong
 0bf0 005f5f53 43484152 5f4d4158 5f5f2030  .__SCHAR_MAX__ 0
 0c00 78376600 5f5f6578 7465726e 5f616c77  x7f.__extern_alw
 0c10 6179735f 696e6c69 6e652065 78746572  ays_inline exter
 0c20 6e205f5f 616c7761 79735f69 6e6c696e  n __always_inlin
 0c30 65205f5f 61747472 69627574 655f5f20  e __attribute__ 
 0c40 28285f5f 676e755f 696e6c69 6e655f5f  ((__gnu_inline__
 0c50 2929005f 5f464c54 36345f44 49475f5f  )).__FLT64_DIG__
 0c60 20313500 5f5f494e 545f4641 5354385f   15.__INT_FAST8_
 0c70 54595045 5f5f2073 69676e65 64206368  TYPE__ signed ch
 0c80 6172005f 5f41544f 4d49435f 52454c41  ar.__ATOMIC_RELA
 0c90 58454420 30005f49 4f5f6f66 6636345f  XED 0._IO_off64_
 0ca0 74205f5f 6f666636 345f7400 5f5f474c  t __off64_t.__GL
 0cb0 4942435f 5553455f 4945435f 36303535  IBC_USE_IEC_6055
 0cc0 395f5459 5045535f 45585400 5f5f464c  9_TYPES_EXT.__FL
 0cd0 54333258 5f484153 5f494e46 494e4954  T32X_HAS_INFINIT
 0ce0 595f5f20 31005f5f 5553455f 554e4958  Y__ 1.__USE_UNIX
 0cf0 3938005f 5f555345 5f464f52 54494659  98.__USE_FORTIFY
 0d00 5f4c4556 454c2030 005f4154 46494c45  _LEVEL 0._ATFILE
 0d10 5f534f55 52434500 5f5f5553 455f4154  _SOURCE.__USE_AT
 0d20 46494c45 005f5f55 494e545f 4c454153  FILE.__UINT_LEAS
 0d30 54385f54 5950455f 5f20756e 7369676e  T8_TYPE__ unsign
 0d40 65642063 68617200 5f5f5349 5a454f46  ed char.__SIZEOF
 0d50 5f494e54 3132385f 5f203136 005f5f4e  _INT128__ 16.__N
 0d60 54482866 63742920 5f5f6174 74726962  TH(fct) __attrib
 0d70 7574655f 5f202828 5f5f6e6f 7468726f  ute__ ((__nothro
 0d80 775f5f20 5f5f4c45 41462929 20666374  w__ __LEAF)) fct
 0d90 005f494f 535f4154 454e4420 34005f5f  ._IOS_ATEND 4.__
 0da0 676c6962 635f6d61 63726f5f 7761726e  glibc_macro_warn
 0db0 696e6728 6d657373 61676529 205f5f67  ing(message) __g
 0dc0 6c696263 5f6d6163 726f5f77 61726e69  libc_macro_warni
 0dd0 6e673120 28474343 20776172 6e696e67  ng1 (GCC warning
 0de0 206d6573 73616765 29005f5f 464c5431   message).__FLT1
 0df0 32385f48 41535f51 55494554 5f4e414e  28_HAS_QUIET_NAN
 0e00 5f5f2031 005f545f 53495a45 20005f5f  __ 1._T_SIZE .__
 0e10 464c5431 32385f4d 41585f5f 20312e31  FLT128_MAX__ 1.1
 0e20 38393733 31343935 33353732 33313736  8973149535723176
 0e30 35303835 37353933 32363632 38303037  5085759326628007
 0e40 3032652b 34393332 46313238 00425546  02e+4932F128.BUF
 0e50 53495a20 5f494f5f 42554653 495a005f  SIZ _IO_BUFSIZ._
 0e60 41544649 4c455f53 4f555243 45203100  ATFILE_SOURCE 1.
 0e70 5f5f464c 54363458 5f444947 5f5f2031  __FLT64X_DIG__ 1
 0e80 38005f5f 494e545f 4c454153 5431365f  8.__INT_LEAST16_
 0e90 57494454 485f5f20 3136005f 5f465349  WIDTH__ 16.__FSI
 0ea0 445f545f 54595045 20737472 75637420  D_T_TYPE struct 
 0eb0 7b20696e 74205f5f 76616c5b 325d3b20  { int __val[2]; 
 0ec0 7d005f5f 7373697a 655f745f 64656669  }.__ssize_t_defi
 0ed0 6e656420 005f545f 53495a45 5f20005f  ned ._T_SIZE_ ._
 0ee0 706f7300 5f494f5f 66657272 6f725f75  pos._IO_ferror_u
 0ef0 6e6c6f63 6b656428 5f5f6670 29202828  nlocked(__fp) ((
 0f00 285f5f66 70292d3e 5f666c61 67732026  (__fp)->_flags &
 0f10 205f494f 5f455252 5f534545 4e292021   _IO_ERR_SEEN) !
 0f20 3d203029 005f5f65 78746572 6e5f696e  = 0).__extern_in
 0f30 6c696e65 20657874 65726e20 5f5f696e  line extern __in
 0f40 6c696e65 205f5f61 74747269 62757465  line __attribute
 0f50 5f5f2028 285f5f67 6e755f69 6e6c696e  __ ((__gnu_inlin
 0f60 655f5f29 29005f47 43435f53 495a455f  e__))._GCC_SIZE_
 0f70 5420005f 5f737475 625f7365 746c6f67  T .__stub_setlog
 0f80 696e2000 5f5f464c 5433325f 4841535f  in .__FLT32_HAS_
 0f90 44454e4f 524d5f5f 2031005f 5f756e69  DENORM__ 1.__uni
 0fa0 785f5f20 31005f5f 4743435f 48415645  x__ 1.__GCC_HAVE
 0fb0 5f53594e 435f434f 4d504152 455f414e  _SYNC_COMPARE_AN
 0fc0 445f5357 41505f31 2031005f 494f5f73  D_SWAP_1 1._IO_s
 0fd0 6176655f 656e6400 5f5f464c 54363458  ave_end.__FLT64X
 0fe0 5f4d494e 5f455850 5f5f2028 2d313633  _MIN_EXP__ (-163
 0ff0 38312900 5f425344 5f53495a 455f545f  81)._BSD_SIZE_T_
 1000 20005f5f 5049455f 5f203200 5f5f464c   .__PIE__ 2.__FL
 1010 545f4449 475f5f20 36005f5f 494e545f  T_DIG__ 6.__INT_
 1020 46415354 31365f57 49445448 5f5f2036  FAST16_WIDTH__ 6
 1030 34005f5f 4743435f 41544f4d 49435f42  4.__GCC_ATOMIC_B
 1040 4f4f4c5f 4c4f434b 5f465245 45203200  OOL_LOCK_FREE 2.
 1050 5f494f5f 6f66665f 74205f5f 6f66665f  _IO_off_t __off_
 1060 74005f5f 7069655f 5f203200 5f535444  t.__pie__ 2._STD
 1070 494f5f48 2031005f 5f444543 33325f4d  IO_H 1.__DEC32_M
 1080 494e5f5f 2031452d 39354446 005f5f49  IN__ 1E-95DF.__I
 1090 4e544d41 585f4d41 585f5f20 30783766  NTMAX_MAX__ 0x7f
 10a0 66666666 66666666 66666666 66664c00  ffffffffffffffL.
 10b0 5f424954 535f4c49 42494f5f 48203100  _BITS_LIBIO_H 1.
 10c0 5f5f4743 435f4945 435f3535 39203200  __GCC_IEC_559 2.
 10d0 5f5f464c 54313238 5f4d494e 5f455850  __FLT128_MIN_EXP
 10e0 5f5f2028 2d313633 38312900 5f5f464c  __ (-16381).__FL
 10f0 5433325f 4841535f 51554945 545f4e41  T32_HAS_QUIET_NA
 1100 4e5f5f20 31005f42 53445f53 495a455f  N__ 1._BSD_SIZE_
 1110 545f4445 46494e45 445f2000 5f5f5549  T_DEFINED_ .__UI
 1120 4e545f4c 45415354 31365f4d 41585f5f  NT_LEAST16_MAX__
 1130 20307866 66666600 5f5f5549 4e545f46   0xffff.__UINT_F
 1140 41535436 345f4d41 585f5f20 30786666  AST64_MAX__ 0xff
 1150 66666666 66666666 66666666 6666554c  ffffffffffffffUL
 1160 005f494f 5f455252 5f534545 4e203078  ._IO_ERR_SEEN 0x
 1170 3230005f 5f617474 72696275 74655f75  20.__attribute_u
 1180 7365645f 5f205f5f 61747472 69627574  sed__ __attribut
 1190 655f5f20 28285f5f 75736564 5f5f2929  e__ ((__used__))
 11a0 005f5f61 74747269 62757465 5f617274  .__attribute_art
 11b0 69666963 69616c5f 5f205f5f 61747472  ificial__ __attr
 11c0 69627574 655f5f20 28285f5f 61727469  ibute__ ((__arti
 11d0 66696369 616c5f5f 2929005f 494f5f66  ficial__))._IO_f
 11e0 7472796c 6f636b66 696c6528 5f667029  trylockfile(_fp)
 11f0 20005f5f 55494e54 5f4c4541 5354385f   .__UINT_LEAST8_
 1200 4d41585f 5f203078 6666005f 5f474c49  MAX__ 0xff.__GLI
 1210 42435f55 53455f4c 49425f45 58543220  BC_USE_LIB_EXT2 
 1220 30005f5f 44454331 32385f4d 494e5f45  0.__DEC128_MIN_E
 1230 58505f5f 20282d36 31343229 005f5f4b  XP__ (-6142).__K
 1240 45524e45 4c5f5354 52494354 5f4e414d  ERNEL_STRICT_NAM
 1250 45532000 5f5f5743 4841525f 54595045  ES .__WCHAR_TYPE
 1260 5f5f2069 6e74005f 5f494e54 385f4d41  __ int.__INT8_MA
 1270 585f5f20 30783766 00676574 63285f66  X__ 0x7f.getc(_f
 1280 7029205f 494f5f67 65746320 285f6670  p) _IO_getc (_fp
 1290 29005f5f 44454331 32385f45 5053494c  ).__DEC128_EPSIL
 12a0 4f4e5f5f 2031452d 3333444c 005f5f55  ON__ 1E-33DL.__U
 12b0 53455f50 4f534958 31393935 3036005f  SE_POSIX199506._
 12c0 5f6e6565 645f4e55 4c4c005f 5f524544  _need_NULL.__RED
 12d0 49524543 545f4e54 485f4c44 424c286e  IRECT_NTH_LDBL(n
 12e0 616d652c 70726f74 6f2c616c 69617329  ame,proto,alias)
 12f0 205f5f52 45444952 4543545f 4e544820   __REDIRECT_NTH 
 1300 286e616d 652c2070 726f746f 2c20616c  (name, proto, al
 1310 69617329 005f5f52 45444952 4543545f  ias).__REDIRECT_
 1320 4e54484e 4c286e61 6d652c70 726f746f  NTHNL(name,proto
 1330 2c616c69 61732920 6e616d65 2070726f  ,alias) name pro
 1340 746f205f 5f61736d 5f5f2028 5f5f4153  to __asm__ (__AS
 1350 4d4e414d 45202823 616c6961 73292920  MNAME (#alias)) 
 1360 5f5f5448 524f574e 4c005f5f 464c5431  __THROWNL.__FLT1
 1370 32385f4d 41585f45 58505f5f 20313633  28_MAX_EXP__ 163
 1380 3834005f 5f464c54 5f524144 49585f5f  84.__FLT_RADIX__
 1390 2032005f 5f464c54 3332585f 44454e4f   2.__FLT32X_DENO
 13a0 524d5f4d 494e5f5f 20342e39 34303635  RM_MIN__ 4.94065
 13b0 36343538 34313234 36353434 31373635  6458412465441765
 13c0 36383739 32383638 32323133 3732652d  68792868221372e-
 13d0 33323446 33327800 5f5f676c 6962635f  324F32x.__glibc_
 13e0 636c616e 675f6861 735f6578 74656e73  clang_has_extens
 13f0 696f6e28 65787429 2030005f 5f504d54  ion(ext) 0.__PMT
 1400 28617267 73292061 72677300 5f5f4749  (args) args.__GI
 1410 445f545f 54595045 205f5f55 33325f54  D_T_TYPE __U32_T
 1420 59504500 5f5f5349 5a454f46 5f4c4f4e  YPE.__SIZEOF_LON
 1430 475f444f 55424c45 5f5f2031 36005f5f  G_DOUBLE__ 16.__
 1440 44424c5f 4841535f 51554945 545f4e41  DBL_HAS_QUIET_NA
 1450 4e5f5f20 31005f5f 77757220 005f4249  N__ 1.__wur ._BI
 1460 54535f54 59504553 5f482031 005f5f4c  TS_TYPES_H 1.__L
 1470 44424c5f 44454e4f 524d5f4d 494e5f5f  DBL_DENORM_MIN__
 1480 20332e36 34353139 39353331 38383234   3.6451995318824
 1490 37343630 32353238 34303539 33333631  7460252840593361
 14a0 39343139 3832652d 34393531 4c005f5f  941982e-4951L.__
 14b0 5049445f 545f5459 5045205f 5f533332  PID_T_TYPE __S32
 14c0 5f545950 45005f5f 73747562 5f666174  _TYPE.__stub_fat
 14d0 74616368 20007379 735f6572 726c6973  tach .sys_errlis
 14e0 74005f5f 464c5436 345f4841 535f494e  t.__FLT64_HAS_IN
 14f0 46494e49 54595f5f 2031005f 5f55494e  FINITY__ 1.__UIN
 1500 545f4641 5354385f 4d41585f 5f203078  T_FAST8_MAX__ 0x
 1510 6666005f 5f41544f 4d49435f 484c455f  ff.__ATOMIC_HLE_
 1520 52454c45 41534520 31333130 3732005f  RELEASE 131072._
 1530 5f4c4442 4c5f4d41 585f4558 505f5f20  _LDBL_MAX_EXP__ 
 1540 31363338 34005f5f 73747562 5f677474  16384.__stub_gtt
 1550 7920005f 42495453 5f545950 4553495a  y ._BITS_TYPESIZ
 1560 45535f48 2031005f 5f555345 434f4e44  ES_H 1.__USECOND
 1570 535f545f 54595045 205f5f55 33325f54  S_T_TYPE __U32_T
 1580 59504500 5f494f5f 7065656b 63285f66  YPE._IO_peekc(_f
 1590 7029205f 494f5f70 65656b63 5f756e6c  p) _IO_peekc_unl
 15a0 6f636b65 6420285f 66702900 5f5f494e  ocked (_fp).__IN
 15b0 54505452 5f545950 455f5f20 6c6f6e67  TPTR_TYPE__ long
 15c0 20696e74 005f5f44 45433634 5f4d4158   int.__DEC64_MAX
 15d0 5f5f2039 2e393939 39393939 39393939  __ 9.99999999999
 15e0 39393939 45333834 44440073 79735f6e  9999E384DD.sys_n
 15f0 65727200 5f5f4743 435f4154 4f4d4943  err.__GCC_ATOMIC
 1600 5f494e54 5f4c4f43 4b5f4652 45452032  _INT_LOCK_FREE 2
 1610 005f5359 535f5349 5a455f54 5f482000  ._SYS_SIZE_T_H .
 1620 5f5f4d4d 585f5f20 31005f5f 424c4b43  __MMX__ 1.__BLKC
 1630 4e545f54 5f545950 45205f5f 53595343  NT_T_TYPE __SYSC
 1640 414c4c5f 534c4f4e 475f5459 5045005f  ALL_SLONG_TYPE._
 1650 494f5f53 484f5742 41534520 30323030  IO_SHOWBASE 0200
 1660 005f5f73 7475625f 73747479 20005f66  .__stub_stty ._f
 1670 696c656e 6f005f5f 48415645 5f47454e  ileno.__HAVE_GEN
 1680 45524943 5f53454c 45435449 4f4e2031  ERIC_SELECTION 1
 1690 005f5f52 4c494d36 345f545f 54595045  .__RLIM64_T_TYPE
 16a0 205f5f55 51554144 5f545950 45005f5f   __UQUAD_TYPE.__
 16b0 464c5431 32385f4d 414e545f 4449475f  FLT128_MANT_DIG_
 16c0 5f203131 33005f5f 4f524445 525f4c49  _ 113.__ORDER_LI
 16d0 54544c45 5f454e44 49414e5f 5f203132  TTLE_ENDIAN__ 12
 16e0 3334005f 5f555345 5f584f50 454e324b  34.__USE_XOPEN2K
 16f0 2031005f 5f53495a 454f465f 50545244   1.__SIZEOF_PTRD
 1700 4946465f 545f5f20 38005f49 4f535f54  IFF_T__ 8._IOS_T
 1710 52554e43 20313600 5f5f4445 43313238  RUNC 16.__DEC128
 1720 5f4d414e 545f4449 475f5f20 3334005f  _MANT_DIG__ 34._
 1730 5f555345 5f49534f 43393920 31005f5f  _USE_ISOC99 1.__
 1740 494e5433 325f5459 50455f5f 20696e74  INT32_TYPE__ int
 1750 005f5f4b 45524e45 4c5f5354 52494354  .__KERNEL_STRICT
 1760 5f4e414d 4553005f 5f553332 5f545950  _NAMES.__U32_TYP
 1770 4520756e 7369676e 65642069 6e74005f  E unsigned int._
 1780 5f636f64 655f6d6f 64656c5f 736d616c  _code_model_smal
 1790 6c5f5f20 31005f5f 5553455f 49534f43  l__ 1.__USE_ISOC
 17a0 3935005f 5f464c54 3634585f 4841535f  95.__FLT64X_HAS_
 17b0 44454e4f 524d5f5f 2031005f 5f444543  DENORM__ 1.__DEC
 17c0 33325f4d 41585f45 58505f5f 20393700  32_MAX_EXP__ 97.
 17d0 5f494f4e 42462032 005f5f55 53455f49  _IONBF 2.__USE_I
 17e0 534f4339 39007374 64657272 20737464  SOC99.stderr std
 17f0 65727200 5f767461 626c655f 6f666673  err._vtable_offs
 1800 6574005f 475f494f 5f494f5f 46494c45  et._G_IO_IO_FILE
 1810 5f564552 53494f4e 20307832 30303031  _VERSION 0x20001
 1820 005f494f 5f544945 445f5055 545f4745  ._IO_TIED_PUT_GE
 1830 54203078 34303000 4c5f746d 706e616d  T 0x400.L_tmpnam
 1840 20323000 5f494f5f 636c6561 6e75705f   20._IO_cleanup_
 1850 72656769 6f6e5f73 74617274 285f6663  region_start(_fc
 1860 742c5f66 70292000 5f5f5354 44435f49  t,_fp) .__STDC_I
 1870 45435f35 35395f43 4f4d504c 45585f5f  EC_559_COMPLEX__
 1880 2031005f 5f474c49 42435f55 53455f44   1.__GLIBC_USE_D
 1890 45505245 43415445 445f4745 54532030  EPRECATED_GETS 0
 18a0 005f494f 5f484558 20303130 30005f5f  ._IO_HEX 0100.__
 18b0 464c5436 34585f4d 494e5f31 305f4558  FLT64X_MIN_10_EX
 18c0 505f5f20 282d3439 33312900 5f5f7374  P__ (-4931).__st
 18d0 75625f70 75746d73 6720005f 494f5f72  ub_putmsg ._IO_r
 18e0 6561645f 62617365 005f5f53 5444435f  ead_base.__STDC_
 18f0 49534f5f 31303634 365f5f20 32303137  ISO_10646__ 2017
 1900 30364c00 5f5f4245 47494e5f 4445434c  06L.__BEGIN_DECL
 1910 5320005f 494f5f73 7464696e 2028285f  S ._IO_stdin ((_
 1920 494f5f46 494c452a 2928265f 494f5f32  IO_FILE*)(&_IO_2
 1930 5f315f73 7464696e 5f292900 5f5f464c  _1_stdin_)).__FL
 1940 54313238 5f4d4158 5f31305f 4558505f  T128_MAX_10_EXP_
 1950 5f203439 3332005f 5f464c54 3132385f  _ 4932.__FLT128_
 1960 4d494e5f 5f20332e 33363231 30333134  MIN__ 3.36210314
 1970 33313132 30393335 30363236 32363737  3112093506262677
 1980 38313733 32313735 32363065 2d343933  81732175260e-493
 1990 32463132 38005f5f 53555345 434f4e44  2F128.__SUSECOND
 19a0 535f545f 54595045 205f5f53 59534341  S_T_TYPE __SYSCA
 19b0 4c4c5f53 4c4f4e47 5f545950 45005345  LL_SLONG_TYPE.SE
 19c0 454b5f45 4e442032 005f5f49 4e545f46  EK_END 2.__INT_F
 19d0 41535438 5f574944 54485f5f 2038005f  AST8_WIDTH__ 8._
 19e0 5f464c54 36345f4d 494e5f31 305f4558  _FLT64_MIN_10_EX
 19f0 505f5f20 282d3330 3729005f 5f737475  P__ (-307).__stu
 1a00 625f6664 65746163 6820005f 6e657874  b_fdetach ._next
 1a10 005f5f44 424c5f4d 41585f5f 20282864  .__DBL_MAX__ ((d
 1a20 6f75626c 6529312e 37393736 39333133  ouble)1.79769313
 1a30 34383632 33313537 30383134 35323734  4862315708145274
 1a40 32333733 31373034 33353765 2b333038  23731704357e+308
 1a50 4c29005f 44454641 554c545f 534f5552  L)._DEFAULT_SOUR
 1a60 43452031 005f5f52 4c494d5f 545f4d41  CE 1.__RLIM_T_MA
 1a70 54434845 535f524c 494d3634 5f542031  TCHES_RLIM64_T 1
 1a80 005f5f61 6d643634 5f5f2031 005f5f5f  .__amd64__ 1.___
 1a90 5f6d6273 74617465 5f745f64 6566696e  _mbstate_t_defin
 1aa0 65642031 005f494f 5f44454c 4554455f  ed 1._IO_DELETE_
 1ab0 444f4e54 5f434c4f 53452030 78343000  DONT_CLOSE 0x40.
 1ac0 5f5f464c 5433325f 44454349 4d414c5f  __FLT32_DECIMAL_
 1ad0 4449475f 5f203900 5f5f464c 54313238  DIG__ 9.__FLT128
 1ae0 5f444947 5f5f2033 33005f5f 55494e54  _DIG__ 33.__UINT
 1af0 31365f54 5950455f 5f207368 6f727420  16_TYPE__ short 
 1b00 756e7369 676e6564 20696e74 005f5f48  unsigned int.__H
 1b10 4156455f 434f4c55 4d4e2000 5f4f4c44  AVE_COLUMN ._OLD
 1b20 5f535444 494f5f4d 41474943 20307846  _STDIO_MAGIC 0xF
 1b30 41424330 30303000 5f494f53 5f4e4f43  ABC0000._IOS_NOC
 1b40 52454154 45203332 005f5f57 43484152  REATE 32.__WCHAR
 1b50 5f574944 54485f5f 20333200 5f5f4743  _WIDTH__ 32.__GC
 1b60 435f4154 4f4d4943 5f434841 525f4c4f  C_ATOMIC_CHAR_LO
 1b70 434b5f46 52454520 32005f49 4f5f6d61  CK_FREE 2._IO_ma
 1b80 726b6572 005f5f42 49474745 53545f41  rker.__BIGGEST_A
 1b90 4c49474e 4d454e54 5f5f2031 36005f5f  LIGNMENT__ 16.__
 1ba0 4c4f4e47 5f4c4f4e 475f4d41 585f5f20  LONG_LONG_MAX__ 
 1bb0 30783766 66666666 66666666 66666666  0x7fffffffffffff
 1bc0 66664c4c 005f5f55 4c4f4e47 33325f54  ffLL.__ULONG32_T
 1bd0 59504520 756e7369 676e6564 20696e74  YPE unsigned int
 1be0 005f5f55 494e545f 4c454153 5431365f  .__UINT_LEAST16_
 1bf0 54595045 5f5f2073 686f7274 20756e73  TYPE__ short uns
 1c00 69676e65 6420696e 74005f5f 464c545f  igned int.__FLT_
 1c10 4d41585f 31305f45 58505f5f 20333800  MAX_10_EXP__ 38.
 1c20 2f686f6d 652f7562 756e7475 2f456e67  /home/ubuntu/Eng
 1c30 696e6565 72696e67 2f50726f 6772616d  ineering/Program
 1c40 6d696e67 2f446973 61737365 6d626c69  ming/Disassembli
 1c50 6e672d42 696e6172 6965732f 432f496e  ng-Binaries/C/In
 1c60 74656c5f 61726368 69746563 74757265  tel_architecture
 1c70 2f414d44 36342f49 6e746567 65725f4f  /AMD64/Integer_O
 1c80 70657261 74696f6e 732f4d75 6c745f49  perations/Mult_I
 1c90 6e742f57 6974685f 44656275 675f496e  nt/With_Debug_In
 1ca0 666f005f 494f5f53 4b495057 53203031  fo._IO_SKIPWS 01
 1cb0 005f5f46 4c543332 585f4550 53494c4f  .__FLT32X_EPSILO
 1cc0 4e5f5f20 322e3232 30343436 30343932  N__ 2.2204460492
 1cd0 35303331 33303830 38343732 36333333  5031308084726333
 1ce0 36313831 36343036 32652d31 36463332  618164062e-16F32
 1cf0 78004e55 4c4c2028 28766f69 64202a29  x.NULL ((void *)
 1d00 30290061 72677600 5f5f5553 455f504f  0).argv.__USE_PO
 1d10 5349585f 494d504c 49434954 4c592031  SIX_IMPLICITLY 1
 1d20 005f494f 5f66656f 665f756e 6c6f636b  ._IO_feof_unlock
 1d30 6564285f 5f667029 20282828 5f5f6670  ed(__fp) (((__fp
 1d40 292d3e5f 666c6167 73202620 5f494f5f  )->_flags & _IO_
 1d50 454f465f 5345454e 2920213d 20302900  EOF_SEEN) != 0).
 1d60 5f5f4e4f 5f494e4c 494e455f 5f203100  __NO_INLINE__ 1.
 1d70 5f494f5f 73746465 72722028 285f494f  _IO_stderr ((_IO
 1d80 5f46494c 452a2928 265f494f 5f325f31  _FILE*)(&_IO_2_1
 1d90 5f737464 6572725f 2929005f 5f76615f  _stderr_)).__va_
 1da0 6172675f 7061636b 2829205f 5f627569  arg_pack() __bui
 1db0 6c74696e 5f76615f 6172675f 7061636b  ltin_va_arg_pack
 1dc0 20282900 5f5f464c 545f4d41 4e545f44   ().__FLT_MANT_D
 1dd0 49475f5f 20323400 5f5f4441 4444525f  IG__ 24.__DADDR_
 1de0 545f5459 5045205f 5f533332 5f545950  T_TYPE __S32_TYP
 1df0 45005f5f 464c5436 345f4445 43494d41  E.__FLT64_DECIMA
 1e00 4c5f4449 475f5f20 3137005f 5f474343  L_DIG__ 17.__GCC
 1e10 5f484156 455f5359 4e435f43 4f4d5041  _HAVE_SYNC_COMPA
 1e20 52455f41 4e445f53 5741505f 34203100  RE_AND_SWAP_4 1.
 1e30 5f5f464c 5433325f 4d494e5f 4558505f  __FLT32_MIN_EXP_
 1e40 5f20282d 31323529 005f5f53 495a455f  _ (-125).__SIZE_
 1e50 54595045 5f5f206c 6f6e6720 756e7369  TYPE__ long unsi
 1e60 676e6564 20696e74 005f5f4c 44424c5f  gned int.__LDBL_
 1e70 4d41585f 5f20312e 31383937 33313439  MAX__ 1.18973149
 1e80 35333537 32333137 36353032 31323633  5357231765021263
 1e90 38353330 33303937 30323165 2b343933  85303097021e+493
 1ea0 324c005f 5f444543 5f455641 4c5f4d45  2L.__DEC_EVAL_ME
 1eb0 54484f44 5f5f2032 005f5f46 4c545f4d  THOD__ 2.__FLT_M
 1ec0 41585f5f 20332e34 30323832 33343636  AX__ 3.402823466
 1ed0 33383532 38383539 38313137 30343138  3852885981170418
 1ee0 33343834 35313639 3235652b 33384600  3484516925e+38F.
 1ef0 5f494f5f 7569645f 74205f5f 7569645f  _IO_uid_t __uid_
 1f00 74005f5f 44424c5f 4d494e5f 31305f45  t.__DBL_MIN_10_E
 1f10 58505f5f 20282d33 30372900 5f494f5f  XP__ (-307)._IO_
 1f20 325f315f 73746465 72725f00 5f5f5549  2_1_stderr_.__UI
 1f30 4e543332 5f4d4158 5f5f2030 78666666  NT32_MAX__ 0xfff
 1f40 66666666 6655005f 494f5f4f 43542030  fffffU._IO_OCT 0
 1f50 3430005f 5f464c54 3132385f 4841535f  40.__FLT128_HAS_
 1f60 494e4649 4e495459 5f5f2031 005f6d6f  INFINITY__ 1._mo
 1f70 6465005f 494f5f48 4156455f 53545f42  de._IO_HAVE_ST_B
 1f80 4c4b5349 5a45205f 475f4841 56455f53  LKSIZE _G_HAVE_S
 1f90 545f424c 4b53495a 45005f5f 464c5436  T_BLKSIZE.__FLT6
 1fa0 345f4841 535f4445 4e4f524d 5f5f2031  4_HAS_DENORM__ 1
 1fb0 005f5f46 4c545f45 56414c5f 4d455448  .__FLT_EVAL_METH
 1fc0 4f445f5f 2030005f 5f465342 4c4b434e  OD__ 0.__FSBLKCN
 1fd0 545f545f 54595045 205f5f53 59534341  T_T_TYPE __SYSCA
 1fe0 4c4c5f55 4c4f4e47 5f545950 45005f5f  LL_ULONG_TYPE.__
 1ff0 464c5433 32585f48 41535f44 454e4f52  FLT32X_HAS_DENOR
 2000 4d5f5f20 31005f5f 7838365f 36345f5f  M__ 1.__x86_64__
 2010 2031005f 5f464c54 3634585f 4d41585f   1.__FLT64X_MAX_
 2020 4558505f 5f203136 33383400 5f5f5645  EXP__ 16384.__VE
 2030 5253494f 4e5f5f20 22372e33 2e302200  RSION__ "7.3.0".
 2040 5f494f5f 4c494e4b 45442030 78383000  _IO_LINKED 0x80.
 2050 5f5f5245 44495245 4354286e 616d652c  __REDIRECT(name,
 2060 70726f74 6f2c616c 69617329 206e616d  proto,alias) nam
 2070 65207072 6f746f20 5f5f6173 6d5f5f20  e proto __asm__ 
 2080 285f5f41 534d4e41 4d452028 23616c69  (__ASMNAME (#ali
 2090 61732929 005f5f46 53424c4b 434e5436  as)).__FSBLKCNT6
 20a0 345f545f 54595045 205f5f55 51554144  4_T_TYPE __UQUAD
 20b0 5f545950 45005f5f 464c5436 34585f4d  _TYPE.__FLT64X_M
 20c0 41585f5f 20312e31 38393733 31343935  AX__ 1.189731495
 20d0 33353732 33313736 35303231 32363338  3572317650212638
 20e0 35333033 30393730 3231652b 34393332  5303097021e+4932
 20f0 46363478 005f494f 5f726561 645f7074  F64x._IO_read_pt
 2100 72005f5f 53495a45 5f542000 5f5f4944  r.__SIZE_T .__ID
 2110 5f545f54 59504520 5f5f5533 325f5459  _T_TYPE __U32_TY
 2120 5045005f 5f53495a 455f545f 5f20005f  PE.__SIZE_T__ ._
 2130 494f5f66 756e6c6f 636b6669 6c65285f  IO_funlockfile(_
 2140 66702920 005f5f4b 45595f54 5f545950  fp) .__KEY_T_TYP
 2150 45205f5f 5333325f 54595045 005f5f49  E __S32_TYPE.__I
 2160 4e545f4c 45415354 36345f4d 41585f5f  NT_LEAST64_MAX__
 2170 20307837 66666666 66666666 66666666   0x7ffffffffffff
 2180 6666664c 005f5f49 4e545f4c 45415354  fffL.__INT_LEAST
 2190 385f5749 4454485f 5f203800 5f5f4c44  8_WIDTH__ 8.__LD
 21a0 424c5f52 45444952 315f4e54 48286e61  BL_REDIR1_NTH(na
 21b0 6d652c70 726f746f 2c616c69 61732920  me,proto,alias) 
 21c0 6e616d65 2070726f 746f205f 5f544852  name proto __THR
 21d0 4f57005f 5f55494e 54385f4d 41585f5f  OW.__UINT8_MAX__
 21e0 20307866 66005f49 4f5f464c 41475332   0xff._IO_FLAGS2
 21f0 5f4e4f54 43414e43 454c2032 005f5f61  _NOTCANCEL 2.__a
 2200 6c776179 735f696e 6c696e65 205f5f69  lways_inline __i
 2210 6e6c696e 65205f5f 61747472 69627574  nline __attribut
 2220 655f5f20 28285f5f 616c7761 79735f69  e__ ((__always_i
 2230 6e6c696e 655f5f29 29005f5f 55494e54  nline__)).__UINT
 2240 31365f4d 41585f5f 20307866 66666600  16_MAX__ 0xffff.
 2250 5f494f5f 4d414749 43203078 46424144  _IO_MAGIC 0xFBAD
 2260 30303030 005f5f47 4c494243 5f555345  0000.__GLIBC_USE
 2270 28462920 5f5f474c 4942435f 5553455f  (F) __GLIBC_USE_
 2280 20232320 46005f5f 494e545f 46415354   ## F.__INT_FAST
 2290 36345f54 5950455f 5f206c6f 6e672069  64_TYPE__ long i
 22a0 6e740073 7464696e 20737464 696e005f  nt.stdin stdin._
 22b0 5f617474 72696275 74655f6e 6f696e6c  _attribute_noinl
 22c0 696e655f 5f205f5f 61747472 69627574  ine__ __attribut
 22d0 655f5f20 28285f5f 6e6f696e 6c696e65  e__ ((__noinline
 22e0 5f5f2929 005f5f53 5444435f 56455253  __)).__STDC_VERS
 22f0 494f4e5f 5f203230 31313132 4c005f5f  ION__ 201112L.__
 2300 494e544d 41585f57 49445448 5f5f2036  INTMAX_WIDTH__ 6
 2310 34005f5f 44454333 325f4d41 585f5f20  4.__DEC32_MAX__ 
 2320 392e3939 39393939 45393644 46005f5f  9.999999E96DF.__
 2330 474e5543 5f56415f 4c495354 20005f5f  GNUC_VA_LIST .__
 2340 50545244 4946465f 4d41585f 5f203078  PTRDIFF_MAX__ 0x
 2350 37666666 66666666 66666666 66666666  7fffffffffffffff
 2360 4c005f5f 5553455f 504f5349 58313939  L.__USE_POSIX199
 2370 33303900 5f5f494e 545f4c45 41535431  309.__INT_LEAST1
 2380 365f5459 50455f5f 2073686f 72742069  6_TYPE__ short i
 2390 6e74005f 5f464c54 33325f4d 41585f45  nt.__FLT32_MAX_E
 23a0 58505f5f 20313238 005f5f67 6e755f6c  XP__ 128.__gnu_l
 23b0 696e7578 5f5f2031 005f5f53 54445f54  inux__ 1.__STD_T
 23c0 59504520 74797065 64656600 5f5f4d4f  YPE typedef.__MO
 23d0 44455f54 5f545950 45205f5f 5533325f  DE_T_TYPE __U32_
 23e0 54595045 005f5f53 495a454f 465f464c  TYPE.__SIZEOF_FL
 23f0 4f415431 32385f5f 20313600 5f5f474e  OAT128__ 16.__GN
 2400 55435f53 5444435f 494e4c49 4e455f5f  UC_STDC_INLINE__
 2410 2031005f 5f44424c 5f444947 5f5f2031   1.__DBL_DIG__ 1
 2420 35005f5f 4743435f 41544f4d 49435f43  5.__GCC_ATOMIC_C
 2430 48415231 365f545f 4c4f434b 5f465245  HAR16_T_LOCK_FRE
 2440 45203200 5f5f494e 545f4c45 41535438  E 2.__INT_LEAST8
 2450 5f4d4158 5f5f2030 78376600 5f5f5331  _MAX__ 0x7f.__S1
 2460 365f5459 50452073 686f7274 20696e74  6_TYPE short int
 2470 005f5f4c 5036345f 5f203100 5f5f5359  .__LP64__ 1.__SY
 2480 5343414c 4c5f574f 52445349 5a452036  SCALL_WORDSIZE 6
 2490 34005f5f 4743435f 41544f4d 49435f4c  4.__GCC_ATOMIC_L
 24a0 4f4e475f 4c4f434b 5f465245 45203200  ONG_LOCK_FREE 2.
 24b0 5f5f464c 54333258 5f444947 5f5f2031  __FLT32X_DIG__ 1
 24c0 35005f5f 464c5433 32585f4d 414e545f  5.__FLT32X_MANT_
 24d0 4449475f 5f203533 005f494f 5f777269  DIG__ 53._IO_wri
 24e0 74655f62 61736500 5f4c5036 34203100  te_base._LP64 1.
 24f0 5f464541 54555245 535f4820 31005f5f  _FEATURES_H 1.__
 2500 464c5433 325f4449 475f5f20 36005f5f  FLT32_DIG__ 6.__
 2510 4653574f 52445f54 5f545950 45205f5f  FSWORD_T_TYPE __
 2520 53595343 414c4c5f 534c4f4e 475f5459  SYSCALL_SLONG_TY
 2530 5045005f 5f534c4f 4e47574f 52445f54  PE.__SLONGWORD_T
 2540 59504520 6c6f6e67 20696e74 005f494f  YPE long int._IO
 2550 5f325f31 5f737464 696e5f00 5f5f7838  _2_1_stdin_.__x8
 2560 365f3634 2031005f 5f464c54 3634585f  6_64 1.__FLT64X_
 2570 4d41585f 31305f45 58505f5f 20343933  MAX_10_EXP__ 493
 2580 32005f5f 44424c5f 4d494e5f 5f202828  2.__DBL_MIN__ ((
 2590 646f7562 6c652932 2e323235 30373338  double)2.2250738
 25a0 35383530 37323031 33383330 39303233  5850720138309023
 25b0 32373137 33333234 30343036 652d3330  271733240406e-30
 25c0 384c2900 5f494f5f 325f315f 7374646f  8L)._IO_2_1_stdo
 25d0 75745f00 5f5f5549 4e545f46 41535433  ut_.__UINT_FAST3
 25e0 325f4d41 585f5f20 30786666 66666666  2_MAX__ 0xffffff
 25f0 66666666 66666666 6666554c 005f5f46  ffffffffffUL.__F
 2600 494e4954 455f4d41 54485f4f 4e4c595f  INITE_MATH_ONLY_
 2610 5f203000 5f494f5f 73617665 5f626173  _ 0._IO_save_bas
 2620 65005f5f 5531365f 54595045 20756e73  e.__U16_TYPE uns
 2630 69676e65 64207368 6f727420 696e7400  igned short int.
 2640 454f4620 282d3129 005f5f46 4c543634  EOF (-1).__FLT64
 2650 5f4d4158 5f5f2031 2e373937 36393331  _MAX__ 1.7976931
 2660 33343836 32333135 37303831 34353237  3486231570814527
 2670 34323337 33313730 34333537 652b3330  423731704357e+30
 2680 38463634 005f5f73 697a655f 745f5f20  8F64.__size_t__ 
 2690 005f5f55 494e5438 5f545950 455f5f20  .__UINT8_TYPE__ 
 26a0 756e7369 676e6564 20636861 72005f49  unsigned char._I
 26b0 4f5f6669 6c655f66 6c616773 205f666c  O_file_flags _fl
 26c0 61677300 5f5f5553 455f584f 50454e32  ags.__USE_XOPEN2
 26d0 4b385853 49005f5f 494e545f 46415354  K8XSI.__INT_FAST
 26e0 33325f54 5950455f 5f206c6f 6e672069  32_TYPE__ long i
 26f0 6e74005f 494f535f 494e5055 54203100  nt._IOS_INPUT 1.
 2700 5f5f4743 435f4153 4d5f464c 41475f4f  __GCC_ASM_FLAG_O
 2710 55545055 54535f5f 20310070 75746328  UTPUTS__ 1.putc(
 2720 5f63682c 5f667029 205f494f 5f707574  _ch,_fp) _IO_put
 2730 6320285f 63682c20 5f667029 005f5f55  c (_ch, _fp).__U
 2740 494e545f 4c454153 5436345f 4d41585f  INT_LEAST64_MAX_
 2750 5f203078 66666666 66666666 66666666  _ 0xffffffffffff
 2760 66666666 554c005f 5f504d54 005f5f55  ffffUL.__PMT.__U
 2770 51554144 5f545950 4520756e 7369676e  QUAD_TYPE unsign
 2780 6564206c 6f6e6720 696e7400 5f5f454c  ed long int.__EL
 2790 465f5f20 31005f5f 464c5433 32585f4d  F__ 1.__FLT32X_M
 27a0 494e5f5f 20322e32 32353037 33383538  IN__ 2.225073858
 27b0 35303732 30313338 33303930 32333237  5072013830902327
 27c0 31373333 32343034 3036652d 33303846  1733240406e-308F
 27d0 33327800 5f5f5549 4e545054 525f5459  32x.__UINTPTR_TY
 27e0 50455f5f 206c6f6e 6720756e 7369676e  PE__ long unsign
 27f0 65642069 6e74005f 5f494e54 31365f43  ed int.__INT16_C
 2800 28632920 63005f5f 4743435f 48415645  (c) c.__GCC_HAVE
 2810 5f445741 5246325f 4346495f 41534d20  _DWARF2_CFI_ASM 
 2820 31005f5f 53495a45 4f465f46 4c4f4154  1.__SIZEOF_FLOAT
 2830 5f5f2034 005f5f44 45433332 5f535542  __ 4.__DEC32_SUB
 2840 4e4f524d 414c5f4d 494e5f5f 20302e30  NORMAL_MIN__ 0.0
 2850 30303030 31452d39 35444600 5f494f5f  00001E-95DF._IO_
 2860 49535f41 5050454e 44494e47 20307831  IS_APPENDING 0x1
 2870 30303000 5f5f464c 54363458 5f484153  000.__FLT64X_HAS
 2880 5f515549 45545f4e 414e5f5f 2031005f  _QUIET_NAN__ 1._
 2890 5f464c54 5f484153 5f494e46 494e4954  _FLT_HAS_INFINIT
 28a0 595f5f20 31005f49 4f535f4e 4f524550  Y__ 1._IOS_NOREP
 28b0 4c414345 20363400 5f5f5354 445f5459  LACE 64.__STD_TY
 28c0 5045005f 5f555345 5f504f53 49583139  PE.__USE_POSIX19
 28d0 39333039 2031005f 494f5f73 697a655f  9309 1._IO_size_
 28e0 74207369 7a655f74 005f5f49 4e4f3634  t size_t.__INO64
 28f0 5f545f54 59504520 5f5f5551 5541445f  _T_TYPE __UQUAD_
 2900 54595045 005f5f47 4e555f4c 49425241  TYPE.__GNU_LIBRA
 2910 52595f5f 2036005f 5f535444 435f5f20  RY__ 6.__STDC__ 
 2920 31005f5f 676c6962 635f6339 395f666c  1.__glibc_c99_fl
 2930 65786172 725f6176 61696c61 626c6520  exarr_available 
 2940 31005f5f 53534532 5f5f2031 005f5f53  1.__SSE2__ 1.__S
 2950 4c4f4e47 33325f54 59504520 696e7400  LONG32_TYPE int.
 2960 5f5f4442 4c5f4d41 585f4558 505f5f20  __DBL_MAX_EXP__ 
 2970 31303234 005f5f53 495a454f 465f4c4f  1024.__SIZEOF_LO
 2980 4e475f5f 2038005f 5f41544f 4d49435f  NG__ 8.__ATOMIC_
 2990 434f4e53 554d4520 31005f5f 5553455f  CONSUME 1.__USE_
 29a0 46494c45 5f4f4646 53455436 34005f49  FILE_OFFSET64._I
 29b0 4f5f464c 41475332 5f4d4d41 50203100  O_FLAGS2_MMAP 1.
 29c0 5f5f464c 5433325f 4d494e5f 5f20312e  __FLT32_MIN__ 1.
 29d0 31373534 39343335 30383232 32383735  1754943508222875
 29e0 30373936 38373336 35333732 32323234  0796873653722224
 29f0 35363865 2d333846 3332005f 5f57494e  568e-38F32.__WIN
 2a00 545f5459 50455f5f 20756e73 69676e65  T_TYPE__ unsigne
 2a10 6420696e 74005f5f 5553455f 4d495343  d int.__USE_MISC
 2a20 005f494f 5f636c65 616e7570 5f726567  ._IO_cleanup_reg
 2a30 696f6e5f 656e6428 5f446f69 74292000  ion_end(_Doit) .
 2a40 5f5f494e 5431365f 4d41585f 5f203078  __INT16_MAX__ 0x
 2a50 37666666 005f504f 5349585f 435f534f  7fff._POSIX_C_SO
 2a60 55524345 20323030 3830394c 005f5f53  URCE 200809L.__S
 2a70 43484152 5f574944 54485f5f 2038005f  CHAR_WIDTH__ 8._
 2a80 5f55494e 5433325f 43286329 20632023  _UINT32_C(c) c #
 2a90 23205500 5f5f4c44 424c5f4d 494e5f31  # U.__LDBL_MIN_1
 2aa0 305f4558 505f5f20 282d3439 33312900  0_EXP__ (-4931).
 2ab0 5f535444 494f5f55 5345535f 494f5354  _STDIO_USES_IOST
 2ac0 5245414d 20005f5f 53495a45 4f465f44  REAM .__SIZEOF_D
 2ad0 4f55424c 455f5f20 38005f5f 55494e54  OUBLE__ 8.__UINT
 2ae0 385f4328 63292063 005f5f42 4c4b434e  8_C(c) c.__BLKCN
 2af0 5436345f 545f5459 5045205f 5f535155  T64_T_TYPE __SQU
 2b00 41445f54 59504500 5f5f5553 455f464f  AD_TYPE.__USE_FO
 2b10 52544946 595f4c45 56454c00 5f5f474c  RTIFY_LEVEL.__GL
 2b20 4942435f 5553455f 4c49425f 45585432  IBC_USE_LIB_EXT2
 2b30 005f5f57 494e545f 4d494e5f 5f203055  .__WINT_MIN__ 0U
 2b40 005f5f4c 44424c5f 4d414e54 5f444947  .__LDBL_MANT_DIG
 2b50 5f5f2036 34005f5f 70616431 005f5f70  __ 64.__pad1.__p
 2b60 61643200 5f5f7061 6433005f 5f706164  ad2.__pad3.__pad
 2b70 34005f5f 70616435 005f5f53 5444435f  4.__pad5.__STDC_
 2b80 5554465f 31365f5f 2031005f 5f4c4442  UTF_16__ 1.__LDB
 2b90 4c5f4550 53494c4f 4e5f5f20 312e3038  L_EPSILON__ 1.08
 2ba0 34323032 31373234 38353530 34343334  4202172485504434
 2bb0 30303734 35323830 30383639 39343137  0074528008699417
 2bc0 31652d31 394c005f 5f626f73 30287074  1e-19L.__bos0(pt
 2bd0 7229205f 5f627569 6c74696e 5f6f626a  r) __builtin_obj
 2be0 6563745f 73697a65 20287074 722c2030  ect_size (ptr, 0
 2bf0 29005f49 4f4c4246 2031005f 5f617474  )._IOLBF 1.__att
 2c00 72696275 74655f66 6f726d61 745f6172  ribute_format_ar
 2c10 675f5f28 7829205f 5f617474 72696275  g__(x) __attribu
 2c20 74655f5f 2028285f 5f666f72 6d61745f  te__ ((__format_
 2c30 6172675f 5f202878 29292900 5f5f5f5f  arg__ (x))).____
 2c40 46494c45 5f646566 696e6564 2031005f  FILE_defined 1._
 2c50 42495453 5f535444 494f5f4c 494d5f48  BITS_STDIO_LIM_H
 2c60 2031005f 5f4c4442 4c5f4841 535f494e   1.__LDBL_HAS_IN
 2c70 46494e49 54595f5f 2031005f 5f555345  FINITY__ 1.__USE
 2c80 5f504f53 49582031 005f5f49 4e4f5f54  _POSIX 1.__INO_T
 2c90 5f4d4154 43484553 5f494e4f 36345f54  _MATCHES_INO64_T
 2ca0 2031005f 5f474343 5f494543 5f353539   1.__GCC_IEC_559
 2cb0 5f434f4d 504c4558 2032005f 5f534947  _COMPLEX 2.__SIG
 2cc0 5f41544f 4d49435f 4d494e5f 5f20282d  _ATOMIC_MIN__ (-
 2cd0 5f5f5349 475f4154 4f4d4943 5f4d4158  __SIG_ATOMIC_MAX
 2ce0 5f5f202d 20312900 5f494f53 5f42494e  __ - 1)._IOS_BIN
 2cf0 20313238 005f494f 5f494e5f 4241434b   128._IO_IN_BACK
 2d00 55502030 78313030 005f494f 5f666c6f  UP 0x100._IO_flo
 2d10 636b6669 6c65285f 66702920 005f5f53  ckfile(_fp) .__S
 2d20 495a454f 465f5743 4841525f 545f5f20  IZEOF_WCHAR_T__ 
 2d30 34005f5f 61747472 69627574 655f6465  4.__attribute_de
 2d40 70726563 61746564 5f5f205f 5f617474  precated__ __att
 2d50 72696275 74655f5f 2028285f 5f646570  ribute__ ((__dep
 2d60 72656361 7465645f 5f292900 5f5f464c  recated__)).__FL
 2d70 54313238 5f4d494e 5f31305f 4558505f  T128_MIN_10_EXP_
 2d80 5f20282d 34393331 29005f5f 464c4f41  _ (-4931).__FLOA
 2d90 545f574f 52445f4f 52444552 5f5f205f  T_WORD_ORDER__ _
 2da0 5f4f5244 45525f4c 4954544c 455f454e  _ORDER_LITTLE_EN
 2db0 4449414e 5f5f005f 5f474343 5f484156  DIAN__.__GCC_HAV
 2dc0 455f5359 4e435f43 4f4d5041 52455f41  E_SYNC_COMPARE_A
 2dd0 4e445f53 5741505f 32203100 5f475f48  ND_SWAP_2 1._G_H
 2de0 4156455f 4d52454d 41502031 005f5f44  AVE_MREMAP 1.__D
 2df0 45433332 5f4d414e 545f4449 475f5f20  EC32_MANT_DIG__ 
 2e00 37005f5f 464c5433 325f4445 4e4f524d  7.__FLT32_DENORM
 2e10 5f4d494e 5f5f2031 2e343031 32393834  _MIN__ 1.4012984
 2e20 36343332 34383137 30373039 32333732  6432481707092372
 2e30 39353833 32383939 31363133 652d3435  958328991613e-45
 2e40 46333200 5f5f6e65 65645f73 697a655f  F32.__need_size_
 2e50 74005f5f 55494e54 5f464153 5431365f  t.__UINT_FAST16_
 2e60 4d41585f 5f203078 66666666 66666666  MAX__ 0xffffffff
 2e70 66666666 66666666 554c005f 5f6e6565  ffffffffUL.__nee
 2e80 645f5f5f 76615f6c 69737400 5f5f494e  d___va_list.__IN
 2e90 5433325f 4d41585f 5f203078 37666666  T32_MAX__ 0x7fff
 2ea0 66666666 005f494f 5f494e54 45524e41  ffff._IO_INTERNA
 2eb0 4c203031 30005f5f 5f696e74 5f73697a  L 010.___int_siz
 2ec0 655f745f 6820005f 5f676c69 62635f6c  e_t_h .__glibc_l
 2ed0 696b656c 7928636f 6e642920 5f5f6275  ikely(cond) __bu
 2ee0 696c7469 6e5f6578 70656374 20282863  iltin_expect ((c
 2ef0 6f6e6429 2c203129 005f5f41 544f4d49  ond), 1).__ATOMI
 2f00 435f4143 51554952 45203200 5f5f5549  C_ACQUIRE 2.__UI
 2f10 4e543136 5f432863 29206300 5f494f5f  NT16_C(c) c._IO_
 2f20 464c4147 53325f55 5345525f 57425546  FLAGS2_USER_WBUF
 2f30 2038005f 5f494e54 36345f4d 41585f5f   8.__INT64_MAX__
 2f40 20307837 66666666 66666666 66666666   0x7ffffffffffff
 2f50 6666664c 005f5f6e 6565645f 73697a65  fffL.__need_size
 2f60 5f742000 5f5f626f 73287074 7229205f  _t .__bos(ptr) _
 2f70 5f627569 6c74696e 5f6f626a 6563745f  _builtin_object_
 2f80 73697a65 20287074 722c205f 5f555345  size (ptr, __USE
 2f90 5f464f52 54494659 5f4c4556 454c203e  _FORTIFY_LEVEL >
 2fa0 20312900 5f5f5557 4f52445f 54595045   1).__UWORD_TYPE
 2fb0 20756e73 69676e65 64206c6f 6e672069   unsigned long i
 2fc0 6e74005f 5f474c49 42435f4d 494e4f52  nt.__GLIBC_MINOR
 2fd0 5f5f2032 37005f5f 5345475f 47532031  __ 27.__SEG_GS 1
 2fe0 005f5f53 53455f4d 4154485f 5f203100  .__SSE_MATH__ 1.
 2ff0 5f5f4e4c 494e4b5f 545f5459 5045205f  __NLINK_T_TYPE _
 3000 5f535953 43414c4c 5f554c4f 4e475f54  _SYSCALL_ULONG_T
 3010 59504500 5f5f5549 4e544d41 585f5459  YPE.__UINTMAX_TY
 3020 50455f5f 206c6f6e 6720756e 7369676e  PE__ long unsign
 3030 65642069 6e74005f 5f555345 5f584f50  ed int.__USE_XOP
 3040 454e324b 005f5f4c 45414620 2c205f5f  EN2K.__LEAF , __
 3050 6c656166 5f5f005f 5f444543 3132385f  leaf__.__DEC128_
 3060 4d41585f 4558505f 5f203631 3435005f  MAX_EXP__ 6145._
 3070 494f5f4c 45465420 3032005f 5f666f72  IO_LEFT 02.__for
 3080 74696679 5f66756e 6374696f 6e205f5f  tify_function __
 3090 65787465 726e5f61 6c776179 735f696e  extern_always_in
 30a0 6c696e65 205f5f61 74747269 62757465  line __attribute
 30b0 5f617274 69666963 69616c5f 5f005f49  _artificial__._I
 30c0 4f5f424f 4f4c414c 50484120 30323030  O_BOOLALPHA 0200
 30d0 30303000 5f5f5349 475f4154 4f4d4943  000.__SIG_ATOMIC
 30e0 5f574944 54485f5f 20333200 5f5f434f  _WIDTH__ 32.__CO
 30f0 4e434154 28782c79 29207820 23232079  NCAT(x,y) x ## y
 3100 005f5f61 74747269 62757465 5f646570  .__attribute_dep
 3110 72656361 7465645f 6d73675f 5f286d73  recated_msg__(ms
 3120 6729205f 5f617474 72696275 74655f5f  g) __attribute__
 3130 2028285f 5f646570 72656361 7465645f   ((__deprecated_
 3140 5f20286d 73672929 29005f5f 53485254  _ (msg))).__SHRT
 3150 5f4d4158 5f5f2030 78376666 66005f5f  _MAX__ 0x7fff.__
 3160 4743435f 41544f4d 49435f57 43484152  GCC_ATOMIC_WCHAR
 3170 5f545f4c 4f434b5f 46524545 2032005f  _T_LOCK_FREE 2._
 3180 494f5f50 454e4449 4e475f4f 55545055  IO_PENDING_OUTPU
 3190 545f434f 554e5428 5f667029 2028285f  T_COUNT(_fp) ((_
 31a0 6670292d 3e5f494f 5f777269 74655f70  fp)->_IO_write_p
 31b0 7472202d 20285f66 70292d3e 5f494f5f  tr - (_fp)->_IO_
 31c0 77726974 655f6261 73652900 5f494f5f  write_base)._IO_
 31d0 55534552 5f4c4f43 4b203078 38303030  USER_LOCK 0x8000
 31e0 005f5f4f 52444552 5f504450 5f454e44  .__ORDER_PDP_END
 31f0 49414e5f 5f203334 3132005f 494f5f55  IAN__ 3412._IO_U
 3200 4e494649 45445f4a 554d5054 41424c45  NIFIED_JUMPTABLE
 3210 53203100 544d505f 4d415820 32333833  S 1.TMP_MAX 2383
 3220 3238005f 494f5f6e 6565645f 6c6f636b  28._IO_need_lock
 3230 285f6670 29202828 285f6670 292d3e5f  (_fp) (((_fp)->_
 3240 666c6167 73322026 205f494f 5f464c41  flags2 & _IO_FLA
 3250 4753325f 4e454544 5f4c4f43 4b292021  GS2_NEED_LOCK) !
 3260 3d203029 005f5f46 4c545f44 4543494d  = 0).__FLT_DECIM
 3270 414c5f44 49475f5f 2039005f 5f776172  AL_DIG__ 9.__war
 3280 6e646563 6c286e61 6d652c6d 73672920  ndecl(name,msg) 
 3290 65787465 726e2076 6f696420 6e616d65  extern void name
 32a0 2028766f 69642920 5f5f6174 74726962   (void) __attrib
 32b0 7574655f 5f28285f 5f776172 6e696e67  ute__((__warning
 32c0 5f5f2028 6d736729 2929005f 5f464c54  __ (msg))).__FLT
 32d0 36345f4d 41585f31 305f4558 505f5f20  64_MAX_10_EXP__ 
 32e0 33303800 5f5f5354 52494e47 28782920  308.__STRING(x) 
 32f0 2378005f 5f4c4442 4c5f4d49 4e5f4558  #x.__LDBL_MIN_EX
 3300 505f5f20 282d3136 33383129 005f5f57  P__ (-16381).__W
 3310 494e545f 57494454 485f5f20 3332005f  INT_WIDTH__ 32._
 3320 494f5f53 484f5750 4f532030 32303030  IO_SHOWPOS 02000
 3330 005f494f 5f726561 645f656e 64005f5f  ._IO_read_end.__
 3340 464c5436 34585f4d 494e5f5f 20332e33  FLT64X_MIN__ 3.3
 3350 36323130 33313433 31313230 39333530  6210314311209350
 3360 36323632 36373738 31373332 31373532  6262677817321752
 3370 3630652d 34393332 46363478 005f494f  60e-4932F64x._IO
 3380 535f4f55 54505554 2032005f 5f494e54  S_OUTPUT 2.__INT
 3390 5f464153 54385f4d 41585f5f 20307837  _FAST8_MAX__ 0x7
 33a0 66005f5f 52454749 53544552 5f505245  f.__REGISTER_PRE
 33b0 4649585f 5f20005f 5f464c54 33325f45  FIX__ .__FLT32_E
 33c0 5053494c 4f4e5f5f 20312e31 39323039  PSILON__ 1.19209
 33d0 32383935 35303738 31323530 30303030  2895507812500000
 33e0 30303030 30303030 30303030 3030652d  00000000000000e-
 33f0 37463332 005f5f47 4c494243 5f494e54  7F32.__GLIBC_INT
 3400 45524e41 4c5f5354 41525449 4e475f48  ERNAL_STARTING_H
 3410 45414445 525f494d 504c454d 454e5441  EADER_IMPLEMENTA
 3420 54494f4e 20005f5f 53574f52 445f5459  TION .__SWORD_TY
 3430 5045206c 6f6e6720 696e7400 5f5f4c4f  PE long int.__LO
 3440 4e475f4d 41585f5f 20307837 66666666  NG_MAX__ 0x7ffff
 3450 66666666 66666666 6666664c 005f5f73  fffffffffffL.__s
 3460 7475625f 6765746d 73672000 5f5f4445  tub_getmsg .__DE
 3470 4336345f 4d41585f 4558505f 5f203338  C64_MAX_EXP__ 38
 3480 35005f5f 464c5433 32585f4d 494e5f31  5.__FLT32X_MIN_1
 3490 305f4558 505f5f20 282d3330 3729005f  0_EXP__ (-307)._
 34a0 5f555345 5f504f53 49583200 5f494f5f  _USE_POSIX2._IO_
 34b0 554e4954 42554620 30323030 3030005f  UNITBUF 020000._
 34c0 5f4f4646 5f545f54 59504520 5f5f5359  _OFF_T_TYPE __SY
 34d0 5343414c 4c5f534c 4f4e475f 54595045  SCALL_SLONG_TYPE
 34e0 005f5f55 494e544d 41585f43 28632920  .__UINTMAX_C(c) 
 34f0 63202323 20554c00 5f5f4348 41523332  c ## UL.__CHAR32
 3500 5f545950 455f5f20 756e7369 676e6564  _TYPE__ unsigned
 3510 20696e74 005f5f46 4c543634 585f4841   int.__FLT64X_HA
 3520 535f494e 46494e49 54595f5f 2031005f  S_INFINITY__ 1._
 3530 42495453 5f475f43 4f4e4649 475f4820  BITS_G_CONFIG_H 
 3540 31005f5f 44454331 32385f4d 494e5f5f  1.__DEC128_MIN__
 3550 2031452d 36313433 444c005f 5f464c54   1E-6143DL.__FLT
 3560 3332585f 4d494e5f 4558505f 5f20282d  32X_MIN_EXP__ (-
 3570 31303231 29005f49 4f5f6765 74635f75  1021)._IO_getc_u
 3580 6e6c6f63 6b656428 5f667029 20285f49  nlocked(_fp) (_I
 3590 4f5f4245 2028285f 6670292d 3e5f494f  O_BE ((_fp)->_IO
 35a0 5f726561 645f7074 72203e3d 20285f66  _read_ptr >= (_f
 35b0 70292d3e 5f494f5f 72656164 5f656e64  p)->_IO_read_end
 35c0 2c203029 203f205f 5f75666c 6f772028  , 0) ? __uflow (
 35d0 5f667029 203a202a 28756e73 69676e65  _fp) : *(unsigne
 35e0 64206368 6172202a 2920285f 6670292d  d char *) (_fp)-
 35f0 3e5f494f 5f726561 645f7074 722b2b29  >_IO_read_ptr++)
 3600 005f5f49 4e545054 525f5749 4454485f  .__INTPTR_WIDTH_
 3610 5f203634 005f5f49 4e4f5f54 5f545950  _ 64.__INO_T_TYP
 3620 45205f5f 53595343 414c4c5f 554c4f4e  E __SYSCALL_ULON
 3630 475f5459 5045005f 5f55494e 545f4641  G_TYPE.__UINT_FA
 3640 5354385f 54595045 5f5f2075 6e736967  ST8_TYPE__ unsig
 3650 6e656420 63686172 005f5f49 4e543332  ned char.__INT32
 3660 5f432863 29206300 5f5f4653 46494c43  _C(c) c.__FSFILC
 3670 4e543634 5f545f54 59504520 5f5f5551  NT64_T_TYPE __UQ
 3680 5541445f 54595045 005f5f4c 44424c5f  UAD_TYPE.__LDBL_
 3690 4841535f 51554945 545f4e41 4e5f5f20  HAS_QUIET_NAN__ 
 36a0 31005f5f 474e5543 5f504154 43484c45  1.__GNUC_PATCHLE
 36b0 56454c5f 5f203000 5f5f5749 4e545f4d  VEL__ 0.__WINT_M
 36c0 41585f5f 20307866 66666666 66666655  AX__ 0xffffffffU
 36d0 005f5f61 74747269 62757465 5f6e6f6e  .__attribute_non
 36e0 73747269 6e675f5f 20005f49 4f5f4d41  string__ ._IO_MA
 36f0 4749435f 4d41534b 20307846 46464630  GIC_MASK 0xFFFF0
 3700 30303000 5f5f6c69 6e757820 31005f5f  000.__linux 1.__
 3710 474c4942 435f5553 455f4945 435f3630  GLIBC_USE_IEC_60
 3720 3535395f 46554e43 535f4558 54005f49  559_FUNCS_EXT._I
 3730 4f5f7661 5f6c6973 74205f5f 676e7563  O_va_list __gnuc
 3740 5f76615f 6c697374 005f475f 42554653  _va_list._G_BUFS
 3750 495a2038 31393200 5f5f4c44 424c5f52  IZ 8192.__LDBL_R
 3760 45444952 31286e61 6d652c70 726f746f  EDIR1(name,proto
 3770 2c616c69 61732920 6e616d65 2070726f  ,alias) name pro
 3780 746f005f 5f617474 72696275 74655f6d  to.__attribute_m
 3790 616c6c6f 635f5f20 5f5f6174 74726962  alloc__ __attrib
 37a0 7574655f 5f202828 5f5f6d61 6c6c6f63  ute__ ((__malloc
 37b0 5f5f2929 005f5f55 494e5433 325f5459  __)).__UINT32_TY
 37c0 50455f5f 20756e73 69676e65 6420696e  PE__ unsigned in
 37d0 74005f5f 4c44424c 5f524544 49525f4e  t.__LDBL_REDIR_N
 37e0 5448286e 616d652c 70726f74 6f29206e  TH(name,proto) n
 37f0 616d6520 70726f74 6f205f5f 5448524f  ame proto __THRO
 3800 57005f5f 5553455f 584f5045 4e324b38  W.__USE_XOPEN2K8
 3810 005f494f 5f555050 45524341 53452030  ._IO_UPPERCASE 0
 3820 31303030 00505f74 6d706469 7220222f  1000.P_tmpdir "/
 3830 746d7022 005f5f52 45444952 4543545f  tmp".__REDIRECT_
 3840 4e544828 6e616d65 2c70726f 746f2c61  NTH(name,proto,a
 3850 6c696173 29206e61 6d652070 726f746f  lias) name proto
 3860 205f5f61 736d5f5f 20285f5f 41534d4e   __asm__ (__ASMN
 3870 414d4520 2823616c 69617329 29205f5f  AME (#alias)) __
 3880 5448524f 57005f5f 5553455f 584f5045  THROW.__USE_XOPE
 3890 4e005f5f 464c5431 32385f45 5053494c  N.__FLT128_EPSIL
 38a0 4f4e5f5f 20312e39 32353932 39393434  ON__ 1.925929944
 38b0 33383732 33353835 33303535 39373739  3872358530559779
 38c0 34323538 34393237 3332652d 33344631  4258492732e-34F1
 38d0 32380046 4f50454e 5f4d4158 20313600  28.FOPEN_MAX 16.
 38e0 5f494f5f 46494c45 5f706c75 73005f50  _IO_FILE_plus._P
 38f0 4f534958 5f435f53 4f555243 45005f5f  OSIX_C_SOURCE.__
 3900 5448524f 57205f5f 61747472 69627574  THROW __attribut
 3910 655f5f20 28285f5f 6e6f7468 726f775f  e__ ((__nothrow_
 3920 5f205f5f 4c454146 2929005f 5f53495a  _ __LEAF)).__SIZ
 3930 454f465f 4c4f4e47 5f4c4f4e 475f5f20  EOF_LONG_LONG__ 
 3940 38005f56 415f4c49 53545f44 4546494e  8._VA_LIST_DEFIN
 3950 45442000 5f5f5549 4e545f46 41535433  ED .__UINT_FAST3
 3960 325f5459 50455f5f 206c6f6e 6720756e  2_TYPE__ long un
 3970 7369676e 65642069 6e74005f 5f534852  signed int.__SHR
 3980 545f5749 4454485f 5f203136 005f5f53  T_WIDTH__ 16.__S
 3990 5345325f 4d415448 5f5f2031 005f5f53  SE2_MATH__ 1.__S
 39a0 53495a45 5f545f54 59504520 5f5f5357  SIZE_T_TYPE __SW
 39b0 4f52445f 54595045 005f5f53 36345f54  ORD_TYPE.__S64_T
 39c0 59504520 6c6f6e67 20696e74 005f5f61  YPE long int.__a
 39d0 74747269 62757465 5f707572 655f5f20  ttribute_pure__ 
 39e0 5f5f6174 74726962 7574655f 5f202828  __attribute__ ((
 39f0 5f5f7075 72655f5f 2929005f 5f494e54  __pure__)).__INT
 3a00 4d41585f 43286329 20632023 23204c00  MAX_C(c) c ## L.
 3a10 5f494f5f 69636f6e 765f7420 5f475f69  _IO_iconv_t _G_i
 3a20 636f6e76 5f74005f 5f494e54 5f464153  conv_t.__INT_FAS
 3a30 5433325f 57494454 485f5f20 3634005f  T32_WIDTH__ 64._
 3a40 5f555345 5f584f50 454e324b 38203100  _USE_XOPEN2K8 1.
 3a50 5f5f494e 545f4c45 41535436 345f5749  __INT_LEAST64_WI
 3a60 4454485f 5f203634 005f5f47 4c494243  DTH__ 64.__GLIBC
 3a70 5f555345 5f494543 5f363035 35395f54  _USE_IEC_60559_T
 3a80 59504553 5f455854 2030005f 5f494e54  YPES_EXT 0.__INT
 3a90 385f4328 63292063 005f5f53 495a454f  8_C(c) c.__SIZEO
 3aa0 465f504f 494e5445 525f5f20 38005f5f  F_POINTER__ 8.__
 3ab0 464c5436 345f4550 53494c4f 4e5f5f20  FLT64_EPSILON__ 
 3ac0 322e3232 30343436 30343932 35303331  2.22044604925031
 3ad0 33303830 38343732 36333333 36313831  3080847263336181
 3ae0 36343036 32652d31 36463634 005f494f  64062e-16F64._IO
 3af0 5f76615f 6c697374 205f475f 76615f6c  _va_list _G_va_l
 3b00 69737400 5f5f464c 54363458 5f4d414e  ist.__FLT64X_MAN
 3b10 545f4449 475f5f20 3634005f 44454641  T_DIG__ 64._DEFA
 3b20 554c545f 534f5552 4345005f 5f574348  ULT_SOURCE.__WCH
 3b30 41525f4d 41585f5f 20307837 66666666  AR_MAX__ 0x7ffff
 3b40 66666600 5f494f5f 42554653 495a205f  fff._IO_BUFSIZ _
 3b50 475f4255 4653495a 005f5f46 5346494c  G_BUFSIZ.__FSFIL
 3b60 434e545f 545f5459 5045205f 5f535953  CNT_T_TYPE __SYS
 3b70 43414c4c 5f554c4f 4e475f54 59504500  CALL_ULONG_TYPE.
 3b80 5f494f5f 4241445f 5345454e 20307834  _IO_BAD_SEEN 0x4
 3b90 30303000 5f5f7761 726e6174 7472286d  000.__warnattr(m
 3ba0 73672920 5f5f6174 74726962 7574655f  sg) __attribute_
 3bb0 5f28285f 5f776172 6e696e67 5f5f2028  _((__warning__ (
 3bc0 6d736729 2929005f 5f494e54 5f574944  msg))).__INT_WID
 3bd0 54485f5f 20333200 5f5f4c44 424c5f44  TH__ 32.__LDBL_D
 3be0 4543494d 414c5f44 49475f5f 20323100  ECIMAL_DIG__ 21.
 3bf0 5f5f4743 435f4154 4f4d4943 5f504f49  __GCC_ATOMIC_POI
 3c00 4e544552 5f4c4f43 4b5f4652 45452032  NTER_LOCK_FREE 2
 3c10 005f5f73 7475625f 5f5f636f 6d706174  .__stub___compat
 3c20 5f626466 6c757368 2000464f 50454e5f  _bdflush .FOPEN_
 3c30 4d415800 5f6c6f63 6b005f5f 5345475f  MAX._lock.__SEG_
 3c40 46532031 005f5f50 28617267 73292061  FS 1.__P(args) a
 3c50 72677300 5f5f5449 4d455f54 5f545950  rgs.__TIME_T_TYP
 3c60 45205f5f 53595343 414c4c5f 534c4f4e  E __SYSCALL_SLON
 3c70 475f5459 5045005f 5f55494e 545f4641  G_TYPE.__UINT_FA
 3c80 53543136 5f545950 455f5f20 6c6f6e67  ST16_TYPE__ long
 3c90 20756e73 69676e65 6420696e 74005f5f   unsigned int.__
 3ca0 474c4942 435f5f20 32005f49 4f5f7374  GLIBC__ 2._IO_st
 3cb0 646f7574 2028285f 494f5f46 494c452a  dout ((_IO_FILE*
 3cc0 2928265f 494f5f32 5f315f73 74646f75  )(&_IO_2_1_stdou
 3cd0 745f2929 005f5f55 5345525f 4c414245  t_)).__USER_LABE
 3ce0 4c5f5052 45464958 5f5f2000 5f494f5f  L_PREFIX__ ._IO_
 3cf0 7069645f 74205f5f 7069645f 74005f5f  pid_t __pid_t.__
 3d00 676c6962 635f6d61 63726f5f 7761726e  glibc_macro_warn
 3d10 696e6731 286d6573 73616765 29205f50  ing1(message) _P
 3d20 7261676d 61202823 6d657373 61676529  ragma (#message)
 3d30 005f5f47 43435f41 544f4d49 435f4348  .__GCC_ATOMIC_CH
 3d40 41523332 5f545f4c 4f434b5f 46524545  AR32_T_LOCK_FREE
 3d50 2032005f 6f6c645f 6f666673 6574005f   2._old_offset._
 3d60 494f5f46 494c4500 5f494f5f 554e4255  IO_FILE._IO_UNBU
 3d70 46464552 45442032 005f5f43 4841525f  FFERED 2.__CHAR_
 3d80 4249545f 5f203800 5f5f434c 4f434b5f  BIT__ 8.__CLOCK_
 3d90 545f5459 5045205f 5f535953 43414c4c  T_TYPE __SYSCALL
 3da0 5f534c4f 4e475f54 59504500 5f5f4154  _SLONG_TYPE.__AT
 3db0 4f4d4943 5f484c45 5f414351 55495245  OMIC_HLE_ACQUIRE
 3dc0 20363535 3336005f 494f5f73 73697a65   65536._IO_ssize
 3dd0 5f74205f 5f737369 7a655f74 005f5f53  _t __ssize_t.__S
 3de0 5444435f 484f5354 45445f5f 2031005f  TDC_HOSTED__ 1._
 3df0 5f53495a 455f5749 4454485f 5f203634  _SIZE_WIDTH__ 64
 3e00 005f5f52 45444952 4543545f 4c44424c  .__REDIRECT_LDBL
 3e10 286e616d 652c7072 6f746f2c 616c6961  (name,proto,alia
 3e20 7329205f 5f524544 49524543 5420286e  s) __REDIRECT (n
 3e30 616d652c 2070726f 746f2c20 616c6961  ame, proto, alia
 3e40 7329005f 5f616c77 6179735f 696e6c69  s).__always_inli
 3e50 6e65005f 5f686173 5f696e63 6c756465  ne.__has_include
 3e60 28535452 29205f5f 6861735f 696e636c  (STR) __has_incl
 3e70 7564655f 5f285354 5229005f 5f6e6565  ude__(STR).__nee
 3e80 645f5f5f 76615f6c 69737420 005f5f41  d___va_list .__A
 3e90 534d4e41 4d453228 70726566 69782c63  SMNAME2(prefix,c
 3ea0 6e616d65 29205f5f 53545249 4e472028  name) __STRING (
 3eb0 70726566 69782920 636e616d 65005f49  prefix) cname._I
 3ec0 4f5f5343 49454e54 49464943 20303430  O_SCIENTIFIC 040
 3ed0 3030005f 494f5f70 65656b63 5f756e6c  00._IO_peekc_unl
 3ee0 6f636b65 64285f66 70292028 5f494f5f  ocked(_fp) (_IO_
 3ef0 42452028 285f6670 292d3e5f 494f5f72  BE ((_fp)->_IO_r
 3f00 6561645f 70747220 3e3d2028 5f667029  ead_ptr >= (_fp)
 3f10 2d3e5f49 4f5f7265 61645f65 6e642c20  ->_IO_read_end, 
 3f20 30292026 26205f5f 756e6465 72666c6f  0) && __underflo
 3f30 7720285f 66702920 3d3d2045 4f46203f  w (_fp) == EOF ?
 3f40 20454f46 203a202a 28756e73 69676e65   EOF : *(unsigne
 3f50 64206368 6172202a 2920285f 6670292d  d char *) (_fp)-
 3f60 3e5f494f 5f726561 645f7074 7229005f  >_IO_read_ptr)._
 3f70 5f4c4f4e 475f5749 4454485f 5f203634  _LONG_WIDTH__ 64
 3f80 005f5f55 494e5436 345f4d41 585f5f20  .__UINT64_MAX__ 
 3f90 30786666 66666666 66666666 66666666  0xffffffffffffff
 3fa0 6666554c 005f5f53 51554144 5f545950  ffUL.__SQUAD_TYP
 3fb0 45206c6f 6e672069 6e74005f 5f555345  E long int.__USE
 3fc0 5f584f50 454e324b 58534900 5f5f6174  _XOPEN2KXSI.__at
 3fd0 74726962 7574655f 616c6c6f 635f7369  tribute_alloc_si
 3fe0 7a655f5f 28706172 616d7329 205f5f61  ze__(params) __a
 3ff0 74747269 62757465 5f5f2028 285f5f61  ttribute__ ((__a
 4000 6c6c6f63 5f73697a 655f5f20 70617261  lloc_size__ para
 4010 6d732929 005f494f 5f77696e 745f7420  ms))._IO_wint_t 
 4020 77696e74 5f74005f 5f6b3820 31005f5f  wint_t.__k8 1.__
 4030 4743435f 41544f4d 49435f4c 4c4f4e47  GCC_ATOMIC_LLONG
 4040 5f4c4f43 4b5f4652 45452032 005f5f44  _LOCK_FREE 2.__D
 4050 45433634 5f4d494e 5f455850 5f5f2028  EC64_MIN_EXP__ (
 4060 2d333832 29005f5f 72657374 72696374  -382).__restrict
 4070 5f617272 205f5f72 65737472 69637400  _arr __restrict.
 4080 5f5f4154 4f4d4943 5f414351 5f52454c  __ATOMIC_ACQ_REL
 4090 2034005f 494f5f66 706f735f 74205f47   4._IO_fpos_t _G
 40a0 5f66706f 735f7400 5f5f6174 74726962  _fpos_t.__attrib
 40b0 7574655f 666f726d 61745f73 7472666d  ute_format_strfm
 40c0 6f6e5f5f 28612c62 29205f5f 61747472  on__(a,b) __attr
 40d0 69627574 655f5f20 28285f5f 666f726d  ibute__ ((__form
 40e0 61745f5f 20285f5f 73747266 6d6f6e5f  at__ (__strfmon_
 40f0 5f2c2061 2c206229 2929005f 5f444543  _, a, b))).__DEC
 4100 33325f4d 494e5f45 58505f5f 20282d39  32_MIN_EXP__ (-9
 4110 3429005f 494f5f46 49584544 20303130  4)._IO_FIXED 010
 4120 30303000 5f5f494e 5436345f 54595045  000.__INT64_TYPE
 4130 5f5f206c 6f6e6720 696e7400 5f5f464c  __ long int.__FL
 4140 545f4d49 4e5f5f20 312e3137 35343934  T_MIN__ 1.175494
 4150 33353038 32323238 37353037 39363837  3508222875079687
 4160 33363533 37323232 32343536 38652d33  3653722224568e-3
 4170 3846005f 5f553634 5f545950 4520756e  8F.__U64_TYPE un
 4180 7369676e 6564206c 6f6e6720 696e7400  signed long int.
 4190 5f736275 66005f49 4f5f7661 5f6c6973  _sbuf._IO_va_lis
 41a0 74007374 646f7574 20737464 6f757400  t.stdout stdout.
 41b0 5f5f5553 455f474e 55005f5f 54494d45  __USE_GNU.__TIME
 41c0 525f545f 54595045 20766f69 64202a00  R_T_TYPE void *.
 41d0 5f494f5f 77726974 655f7074 72005f5f  _IO_write_ptr.__
 41e0 46585352 5f5f2031 005f5f4c 4541465f  FXSR__ 1.__LEAF_
 41f0 41545452 205f5f61 74747269 62757465  ATTR __attribute
 4200 5f5f2028 285f5f6c 6561665f 5f292900  __ ((__leaf__)).
 4210 5f5f494e 54385f54 5950455f 5f207369  __INT8_TYPE__ si
 4220 676e6564 20636861 72005f5f 494e545f  gned char.__INT_
 4230 4c454153 5433325f 57494454 485f5f20  LEAST32_WIDTH__ 
 4240 3332005f 5f535953 43414c4c 5f534c4f  32.__SYSCALL_SLO
 4250 4e475f54 59504520 5f5f534c 4f4e4757  NG_TYPE __SLONGW
 4260 4f52445f 54595045 005f5f55 494e544d  ORD_TYPE.__UINTM
 4270 41585f4d 41585f5f 20307866 66666666  AX_MAX__ 0xfffff
 4280 66666666 66666666 66666655 4c005f5f  fffffffffffUL.__
 4290 676c6962 635f636c 616e675f 70726572  glibc_clang_prer
 42a0 6571286d 616a2c6d 696e2920 30005f49  eq(maj,min) 0._I
 42b0 4f5f6261 636b7570 5f626173 65005f5f  O_backup_base.__
 42c0 6c696e75 785f5f20 31005f5f 5049435f  linux__ 1.__PIC_
 42d0 5f203200 5f5f494e 545f4c45 41535433  _ 2.__INT_LEAST3
 42e0 325f5459 50455f5f 20696e74 005f5f55  2_TYPE__ int.__U
 42f0 494e545f 4c454153 5436345f 54595045  INT_LEAST64_TYPE
 4300 5f5f206c 6f6e6720 756e7369 676e6564  __ long unsigned
 4310 20696e74 005f494f 5f707574 635f756e   int._IO_putc_un
 4320 6c6f636b 6564285f 63682c5f 66702920  locked(_ch,_fp) 
 4330 285f494f 5f424520 28285f66 70292d3e  (_IO_BE ((_fp)->
 4340 5f494f5f 77726974 655f7074 72203e3d  _IO_write_ptr >=
 4350 20285f66 70292d3e 5f494f5f 77726974   (_fp)->_IO_writ
 4360 655f656e 642c2030 29203f20 5f5f6f76  e_end, 0) ? __ov
 4370 6572666c 6f772028 5f66702c 2028756e  erflow (_fp, (un
 4380 7369676e 65642063 68617229 20285f63  signed char) (_c
 4390 68292920 3a202875 6e736967 6e656420  h)) : (unsigned 
 43a0 63686172 2920282a 285f6670 292d3e5f  char) (*(_fp)->_
 43b0 494f5f77 72697465 5f707472 2b2b203d  IO_write_ptr++ =
 43c0 20285f63 68292929 005f504f 5349585f   (_ch)))._POSIX_
 43d0 534f5552 43452031 005f494f 5f444f4e  SOURCE 1._IO_DON
 43e0 545f434c 4f534520 30313030 30303000  T_CLOSE 0100000.
 43f0 5f5f474c 4942435f 5553455f 4945435f  __GLIBC_USE_IEC_
 4400 36303535 395f4246 505f4558 54005f5f  60559_BFP_EXT.__
 4410 53495a45 5f4d4158 5f5f2030 78666666  SIZE_MAX__ 0xfff
 4420 66666666 66666666 66666666 66554c00  fffffffffffffUL.
 4430 5f5f5549 445f545f 54595045 205f5f55  __UID_T_TYPE __U
 4440 33325f54 59504500 5f5f554c 4f4e4757  32_TYPE.__ULONGW
 4450 4f52445f 54595045 20756e73 69676e65  ORD_TYPE unsigne
 4460 64206c6f 6e672069 6e74005f 5f474343  d long int.__GCC
 4470 5f41544f 4d49435f 53484f52 545f4c4f  _ATOMIC_SHORT_LO
 4480 434b5f46 52454520 32005f5f 464c5436  CK_FREE 2.__FLT6
 4490 34585f44 4543494d 414c5f44 49475f5f  4X_DECIMAL_DIG__
 44a0 20323100 5345454b 5f534554 2030005f   21.SEEK_SET 0._
 44b0 5f555345 5f584f50 454e5f45 5854454e  _USE_XOPEN_EXTEN
 44c0 44454400 5f5f494e 545f4641 53543136  DED.__INT_FAST16
 44d0 5f4d4158 5f5f2030 78376666 66666666  _MAX__ 0x7ffffff
 44e0 66666666 66666666 664c005f 5f464c54  fffffffffL.__FLT
 44f0 5f455053 494c4f4e 5f5f2031 2e313932  _EPSILON__ 1.192
 4500 30393238 39353530 37383132 35303030  0928955078125000
 4510 30303030 30303030 30303030 30303030  0000000000000000
 4520 652d3746 005f5f46 4c543634 5f4d494e  e-7F.__FLT64_MIN
 4530 5f455850 5f5f2028 2d313032 3129005f  _EXP__ (-1021)._
 4540 494f535f 41505045 4e442038 005f5f47  IOS_APPEND 8.__G
 4550 4c494243 5f494e54 45524e41 4c5f5354  LIBC_INTERNAL_ST
 4560 41525449 4e475f48 45414445 525f494d  ARTING_HEADER_IM
 4570 504c454d 454e5441 54494f4e 005f5f46  PLEMENTATION.__F
 4580 4c545f45 56414c5f 4d455448 4f445f54  LT_EVAL_METHOD_T
 4590 535f3138 3636315f 335f5f20 30005f5f  S_18661_3__ 0.__
 45a0 44424c5f 4841535f 494e4649 4e495459  DBL_HAS_INFINITY
 45b0 5f5f2031 005f5f61 74747269 62757465  __ 1.__attribute
 45c0 5f776172 6e5f756e 75736564 5f726573  _warn_unused_res
 45d0 756c745f 5f205f5f 61747472 69627574  ult__ __attribut
 45e0 655f5f20 28285f5f 7761726e 5f756e75  e__ ((__warn_unu
 45f0 7365645f 72657375 6c745f5f 2929005f  sed_result__))._
 4600 5f494e54 36345f43 28632920 63202323  _INT64_C(c) c ##
 4610 204c005f 5f454e44 5f444543 4c532000   L.__END_DECLS .
 4620 5f5f464c 545f4841 535f5155 4945545f  __FLT_HAS_QUIET_
 4630 4e414e5f 5f203100 5f5f5349 5a454f46  NAN__ 1.__SIZEOF
 4640 5f494e54 5f5f2034 005f5f43 4c4f434b  _INT__ 4.__CLOCK
 4650 49445f54 5f545950 45205f5f 5333325f  ID_T_TYPE __S32_
 4660 54595045 005f5f49 4e545f46 41535431  TYPE.__INT_FAST1
 4670 365f5459 50455f5f 206c6f6e 6720696e  6_TYPE__ long in
 4680 74005f5f 53544443 5f494543 5f353539  t.__STDC_IEC_559
 4690 5f5f2031 005f5f44 45433132 385f5355  __ 1.__DEC128_SU
 46a0 424e4f52 4d414c5f 4d494e5f 5f20302e  BNORMAL_MIN__ 0.
 46b0 30303030 30303030 30303030 30303030  0000000000000000
 46c0 30303030 30303030 30303030 30303030  0000000000000000
 46d0 31452d36 31343344 4c005f5f 5553455f  1E-6143DL.__USE_
 46e0 4c415247 4546494c 45005f5f 53495a45  LARGEFILE.__SIZE
 46f0 4f465f46 4c4f4154 38305f5f 20313600  OF_FLOAT80__ 16.
 4700 5f5f464c 54333258 5f484153 5f515549  __FLT32X_HAS_QUI
 4710 45545f4e 414e5f5f 2031005f 5f44424c  ET_NAN__ 1.__DBL
 4720 5f4d4158 5f31305f 4558505f 5f203330  _MAX_10_EXP__ 30
 4730 38005f5f 5553455f 4d495343 2031005f  8.__USE_MISC 1._
 4740 5f475858 5f414249 5f564552 53494f4e  _GXX_ABI_VERSION
 4750 20313031 31005f5f 7069635f 5f203200   1011.__pic__ 2.
 4760 5f5f4154 4f4d4943 5f52454c 45415345  __ATOMIC_RELEASE
 4770 2033005f 5f535345 5f5f2031 005f494f   3.__SSE__ 1._IO
 4780 5f4e4f5f 52454144 53203400 5f5f474c  _NO_READS 4.__GL
 4790 4942435f 5553455f 4945435f 36303535  IBC_USE_IEC_6055
 47a0 395f4655 4e43535f 45585420 30006d61  9_FUNCS_EXT 0.ma
 47b0 696e005f 53495a45 545f2000 5f5f464c  in._SIZET_ .__FL
 47c0 54313238 5f44454e 4f524d5f 4d494e5f  T128_DENORM_MIN_
 47d0 5f20362e 34373531 37353131 39343338  _ 6.475175119438
 47e0 30323531 31303932 34343338 39353832  0251109244389582
 47f0 32373634 36353565 2d343936 36463132  2764655e-4966F12
 4800 38005f5f 474c4942 435f5553 455f4945  8.__GLIBC_USE_IE
 4810 435f3630 3535395f 4246505f 45585420  C_60559_BFP_EXT 
 4820 30005f5f 73747562 5f726576 6f6b6520  0.__stub_revoke 
 4830 005f5f49 4e544d41 585f5459 50455f5f  .__INTMAX_TYPE__
 4840 206c6f6e 6720696e 74005f5f 464c545f   long int.__FLT_
 4850 4d494e5f 4558505f 5f20282d 31323529  MIN_EXP__ (-125)
 4860 005f5f53 53505f53 54524f4e 475f5f20  .__SSP_STRONG__ 
 4870 33005f5f 6572726f 72646563 6c286e61  3.__errordecl(na
 4880 6d652c6d 73672920 65787465 726e2076  me,msg) extern v
 4890 6f696420 6e616d65 2028766f 69642920  oid name (void) 
 48a0 5f5f6174 74726962 7574655f 5f28285f  __attribute__((_
 48b0 5f657272 6f725f5f 20286d73 67292929  _error__ (msg)))
 48c0 005f5f44 45433132 385f4d41 585f5f20  .__DEC128_MAX__ 
 48d0 392e3939 39393939 39393939 39393939  9.99999999999999
 48e0 39393939 39393939 39393939 39393939  9999999999999999
 48f0 39393945 36313434 444c005f 5f464c54  999E6144DL.__FLT
 4900 5f4d4158 5f455850 5f5f2031 3238005f  _MAX_EXP__ 128._
 4910 494f5f49 535f4649 4c454255 46203078  IO_IS_FILEBUF 0x
 4920 32303030 005f5f4f 46463634 5f545f54  2000.__OFF64_T_T
 4930 59504520 5f5f5351 5541445f 54595045  YPE __SQUAD_TYPE
 4940 005f5f55 53455f49 534f4331 31005f49  .__USE_ISOC11._I
 4950 4f5f5354 44494f20 30343030 3030005f  O_STDIO 040000._
 4960 5f444556 5f545f54 59504520 5f5f5551  _DEV_T_TYPE __UQ
 4970 5541445f 54595045 005f5f43 50555f4d  UAD_TYPE.__CPU_M
 4980 41534b5f 54595045 205f5f53 59534341  ASK_TYPE __SYSCA
 4990 4c4c5f55 4c4f4e47 5f545950 45005f5f  LL_ULONG_TYPE.__
 49a0 55494e54 5f4c4541 53543332 5f4d4158  UINT_LEAST32_MAX
 49b0 5f5f2030 78666666 66666666 6655005f  __ 0xffffffffU._
 49c0 494f5f42 45286578 70722c72 65732920  IO_BE(expr,res) 
 49d0 5f5f6275 696c7469 6e5f6578 70656374  __builtin_expect
 49e0 20282865 78707229 2c207265 7329005f   ((expr), res)._
 49f0 5f41534d 4e414d45 28636e61 6d652920  _ASMNAME(cname) 
 4a00 5f5f4153 4d4e414d 45322028 5f5f5553  __ASMNAME2 (__US
 4a10 45525f4c 4142454c 5f505245 4649585f  ER_LABEL_PREFIX_
 4a20 5f2c2063 6e616d65 29005f5f 464c5433  _, cname).__FLT3
 4a30 32585f4d 41585f31 305f4558 505f5f20  2X_MAX_10_EXP__ 
 4a40 33303800 5f5f616d 64363420 31005f5f  308.__amd64 1.__
 4a50 574f5244 53495a45 20363400 5f5f756e  WORDSIZE 64.__un
 4a60 69782031 005f6368 61696e00 5f5f464c  ix 1._chain.__FL
 4a70 5436345f 44454e4f 524d5f4d 494e5f5f  T64_DENORM_MIN__
 4a80 20342e39 34303635 36343538 34313234   4.9406564584124
 4a90 36353434 31373635 36383739 32383638  6544176568792868
 4aa0 32323133 3732652d 33323446 3634004c  221372e-324F64.L
 4ab0 5f637465 726d6964 2039005f 5f505452  _ctermid 9.__PTR
 4ac0 44494646 5f545950 455f5f20 6c6f6e67  DIFF_TYPE__ long
 4ad0 20696e74 005f5f46 4c543332 5f4d4158   int.__FLT32_MAX
 4ae0 5f31305f 4558505f 5f203338 005f5f57  _10_EXP__ 38.__W
 4af0 4f524453 495a455f 54494d45 36345f43  ORDSIZE_TIME64_C
 4b00 4f4d5041 54333220 31005f5f 464c5431  OMPAT32 1.__FLT1
 4b10 32385f44 4543494d 414c5f44 49475f5f  28_DECIMAL_DIG__
 4b20 20333600 5f5f5054 52444946 465f5749   36.__PTRDIFF_WI
 4b30 4454485f 5f203634 005f5f49 4e545f4c  DTH__ 64.__INT_L
 4b40 45415354 33325f4d 41585f5f 20307837  EAST32_MAX__ 0x7
 4b50 66666666 66666600 5f5f5549 4e545f46  fffffff.__UINT_F
 4b60 41535436 345f5459 50455f5f 206c6f6e  AST64_TYPE__ lon
 4b70 6720756e 7369676e 65642069 6e74005f  g unsigned int._
 4b80 5f737475 625f7373 746b2000 5f494f5f  _stub_sstk ._IO_
 4b90 66706f73 36345f74 205f475f 66706f73  fpos64_t _G_fpos
 4ba0 36345f74 005f5f54 48524f57 4e4c205f  64_t.__THROWNL _
 4bb0 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 4bc0 5f6e6f74 68726f77 5f5f2929 005f5f4c  _nothrow__)).__L
 4bd0 44424c5f 4d41585f 31305f45 58505f5f  DBL_MAX_10_EXP__
 4be0 20343933 32005f5f 44454336 345f4d49   4932.__DEC64_MI
 4bf0 4e5f5f20 31452d33 38334444 005f5f46  N__ 1E-383DD.__F
 4c00 4c543332 5f4d4158 5f5f2033 2e343032  LT32_MAX__ 3.402
 4c10 38323334 36363338 35323838 35393831  8234663852885981
 4c20 31373034 31383334 38343531 36393235  1704183484516925
 4c30 652b3338 46333200 5f5f4442 4c5f4550  e+38F32.__DBL_EP
 4c40 53494c4f 4e5f5f20 2828646f 75626c65  SILON__ ((double
 4c50 29322e32 32303434 36303439 32353033  )2.2204460492503
 4c60 31333038 30383437 32363333 33363138  1308084726333618
 4c70 31363430 3632652d 31364c29 005f6375  164062e-16L)._cu
 4c80 725f636f 6c756d6e 005f5f50 5241474d  r_column.__PRAGM
 4c90 415f5245 44454649 4e455f45 58544e41  A_REDEFINE_EXTNA
 4ca0 4d452031 005f5f53 49475f41 544f4d49  ME 1.__SIG_ATOMI
 4cb0 435f5459 50455f5f 20696e74 005f5f46  C_TYPE__ int.__F
 4cc0 4c543634 585f4445 4e4f524d 5f4d494e  LT64X_DENORM_MIN
 4cd0 5f5f2033 2e363435 31393935 33313838  __ 3.64519953188
 4ce0 32343734 36303235 32383430 35393333  2474602528405933
 4cf0 36313934 31393832 652d3439 35314636  61941982e-4951F6
 4d00 3478005f 5f555345 5f504f53 4958005f  4x.__USE_POSIX._
 4d10 5f464c54 3132385f 4841535f 44454e4f  _FLT128_HAS_DENO
 4d20 524d5f5f 2031005f 494f5f43 55525245  RM__ 1._IO_CURRE
 4d30 4e544c59 5f505554 54494e47 20307838  NTLY_PUTTING 0x8
 4d40 3030005f 5f44424c 5f444543 494d414c  00.__DBL_DECIMAL
 4d50 5f444947 5f5f2031 37005f5f 4c44424c  _DIG__ 17.__LDBL
 4d60 5f484153 5f44454e 4f524d5f 5f203100  _HAS_DENORM__ 1.
 4d70 5f756e75 73656432 005f494f 5f627566  _unused2._IO_buf
 4d80 5f626173 65005f5f 73747562 5f6c6368  _base.__stub_lch
 4d90 6d6f6420 005f5f46 4c543634 5f4d414e  mod .__FLT64_MAN
 4da0 545f4449 475f5f20 3533005f 5f444543  T_DIG__ 53.__DEC
 4db0 36345f4d 414e545f 4449475f 5f203136  64_MANT_DIG__ 16
 4dc0 005f5f46 4c545f48 41535f44 454e4f52  .__FLT_HAS_DENOR
 4dd0 4d5f5f20 31005f5f 44454349 4d414c5f  M__ 1.__DECIMAL_
 4de0 4449475f 5f203231 00                 DIG__ 21.       
Contents of section .debug_macro:
 0000 04000200 00000007 0f010000 03000103  ................
 0010 1f070717 09000004 03010507 39090000  ............9...
 0020 031b0806 1f4d4500 00032109 07490900  .....ME...!..I..
 0030 0003a803 0a07e70a 000003ab 030b074f  ...............O
 0040 0c000004 03ac030c 0407650c 00000403  ..........e.....
 0050 c0030d03 0a0e07af 0c000004 04040707  ................
 0060 0d000004 073b0d00 00032102 074b0d00  .....;....!..K..
 0070 00040323 0305185d 14000003 1b0b074f  ...#...].......O
 0080 0c000004 07e20d00 00038201 0f07400e  ..............@.
 0090 00000406 cc01b828 00000403 24100502  .......(....$...
 00a0 3c2c0000 04032511 05023e2c 00000405  <,....%...>,....
 00b0 27b02a00 00032904 051db010 00000323  '.*...)........#
 00c0 12072e0f 00000313 0207440f 00000403  ..........D.....
 00d0 15130502 8d1a0000 0407640f 00000407  ..........d.....
 00e0 8c0f0000 03351407 e40f0000 0407f40f  .....5..........
 00f0 00000407 c0110000 03830115 07061200  ................
 0100 00040734 12000003 8d060604 04040004  ...4............
 0110 00000500 17290000 0500e522 00000500  .....)....."....
 0120 792b0000 05003a0b 00000500 dd3d0000  y+....:......=..
 0130 05005207 00000500 81050000 0500a236  ..R............6
 0140 00000500 2c200000 0500830c 00000500  ...., ..........
 0150 0a090000 0500f92e 00000500 60470000  ............`G..
 0160 05008040 00000500 87290000 05005647  ...@.....)....VG
 0170 00000500 ca420000 05006210 00000500  .....B....b.....
 0180 02100000 0500fd25 00000500 e8240000  .......%.....$..
 0190 05007124 00000500 38460000 05007529  ..q$....8F....u)
 01a0 00000500 2b390000 05003b09 00000500  ....+9....;.....
 01b0 22280000 0500c62a 00000500 24140000  "(.....*....$...
 01c0 05001f07 00000500 793d0000 0500851b  ........y=......
 01d0 00000500 c6160000 05003807 00000500  ..........8.....
 01e0 e1310000 0500440a 00000500 8a2d0000  .1....D......-..
 01f0 0500993a 00000500 491e0000 0500bb4a  ...:....I......J
 0200 00000500 54120000 0500fb29 00000500  ....T......)....
 0210 31480000 05001430 00000500 fc060000  1H.....0........
 0220 0500f834 00000500 a54c0000 05001042  ...4.....L.....B
 0230 00000500 82080000 05003e17 00000500  ..........>.....
 0240 24410000 05009126 00000500 ea1a0000  $A.....&........
 0250 0500b537 00000500 68090000 0500b109  ...7....h.......
 0260 00000500 74230000 0500d442 00000500  ....t#.....B....
 0270 d50a0000 0500250d 00000500 e11b0000  ......%.........
 0280 0500db09 00000500 ed420000 0500640c  .........B....d.
 0290 00000500 65460000 0500d626 00000500  ....eF.....&....
 02a0 86220000 05003736 00000500 773c0000  ."....76....w<..
 02b0 05005439 00000500 584b0000 0500ac15  ..T9....XK......
 02c0 00000500 d4270000 0500533e 00000500  .....'....S>....
 02d0 89030000 05003f47 00000500 f10b0000  ......?G........
 02e0 05004a31 00000500 23080000 05003c34  ..J1....#.....<4
 02f0 00000500 9e1b0000 05002b3b 00000500  ..........+;....
 0300 f30a0000 0500b836 00000500 312b0000  .......6....1+..
 0310 05003e23 00000500 0e440000 05006d2a  ..>#.....D....m*
 0320 00000500 7b390000 0500c73b 00000500  ....{9.....;....
 0330 6f3f0000 05009906 00000500 491b0000  o?..........I...
 0340 05000d33 00000500 244b0000 0500ef3d  ...3....$K.....=
 0350 00000500 8d100000 0500fb39 00000500  ...........9....
 0360 69420000 0500e134 00000500 fe220000  iB.....4....."..
 0370 05000c00 00000500 bb2c0000 0500d430  .........,.....0
 0380 00000500 67120000 0500402a 00000500  ....g.....@*....
 0390 8c2e0000 0500332f 00000500 d3210000  ......3/.....!..
 03a0 05003a22 00000500 2c1f0000 0500813f  ..:"....,......?
 03b0 00000500 44240000 05008b3a 00000500  ....D$.....:....
 03c0 85210000 0500720b 00000500 f7270000  .!....r......'..
 03d0 0500820e 00000500 394b0000 05005936  ........9K....Y6
 03e0 00000500 2a420000 05005d21 00000500  ....*B....]!....
 03f0 ff450000 0500503a 00000500 f2110000  .E....P:........
 0400 0500da2a 00000500 1c110000 05000c2f  ...*.........../
 0410 00000500 9e490000 05007f2a 00000500  .....I.....*....
 0420 3d270000 0500c507 00000500 8b330000  ='...........3..
 0430 0500c919 00000500 c4440000 05001a10  .........D......
 0440 00000500 8a090000 0500273a 00000500  ..........':....
 0450 62030000 0500f202 00000500 fb140000  b...............
 0460 0500522e 00000500 d4250000 05003811  ..R......%....8.
 0470 00000500 04020000 05000136 00000500  ...........6....
 0480 c0040000 0500c010 00000500 a32c0000  .............,..
 0490 0500b11f 00000500 7d450000 0500a31e  ........}E......
 04a0 00000500 83130000 0500c41d 00000500  ................
 04b0 0c100000 05004a48 00000500 b6000000  ......JH........
 04c0 0500fb48 00000500 0a1c0000 05006532  ...H..........e2
 04d0 00000500 b91e0000 05003c41 00000500  ..........<A....
 04e0 eb440000 0500be06 00000500 c14d0000  .D...........M..
 04f0 05008f28 00000500 20460000 0500eb07  ...(.... F......
 0500 00000500 13240000 05004a03 00000500  .....$....J.....
 0510 021f0000 05006029 00000500 1b470000  ......`).....G..
 0520 0500434d 00000500 111a0000 05008225  ..CM...........%
 0530 00000500 384c0000 0500b001 00000500  ....8L..........
 0540 c00a0000 05009e45 00000500 3e140000  .......E....>...
 0550 0500412b 00000500 f1080000 0500f332  ..A+...........2
 0560 00000500 942a0000 05002f15 00000500  .....*..../.....
 0570 cd4b0000 0500d64d 00000500 d83b0000  .K.....M.....;..
 0580 0500691e 00000500 6b0a0000 05008b2b  ..i.....k......+
 0590 00000500 6d140000 05005a4d 00000500  ....m.....ZM....
 05a0 632c0000 05008936 00000500 65020000  c,.....6....e...
 05b0 0500fe24 00000500 301e0000 0500a50a  ...$....0.......
 05c0 00000500 93230000 0500d54a 00000500  .....#.....J....
 05d0 c01a0000 0500fd4b 00000500 c0290000  .......K.....)..
 05e0 0500b733 00000500 022e0000 0500840f  ...3............
 05f0 00000500 86000000 0500ec10 00000500  ................
 0600 954d0000 0500530c 00000500 25450000  .M....S.....%E..
 0610 0500df19 00000500 9f000000 0500cb32  ...............2
 0620 00000500 f21d0000 05004926 00000500  ..........I&....
 0630 5d060000 0500ae3a 00000500 6c4a0000  ]......:....lJ..
 0640 05009a1f 00000500 e2140000 05002a00  ..............*.
 0650 00000500 ae160000 0500d81a 00000500  ................
 0660 d0100000 05006c2d 00000500 6a130000  ......l-....j...
 0670 05003c19 00000500 0a4b0000 05000e0e  ..<......K......
 0680 00000500 57190000 05009238 00000500  ....W......8....
 0690 bc470000 05000f4d 00000500 531f0000  .G.....M....S...
 06a0 0500ea0d 00000500 c2240000 0500b024  .........$.....$
 06b0 00000500 5b350000 05008234 00000500  ....[5.....4....
 06c0 36010000 05002a4a 00000500 27030000  6.....*J....'...
 06d0 0500e603 00000500 96270000 0500b11c  .........'......
 06e0 00000500 93130000 0500ee1f 00000500  ................
 06f0 cc0c0000 05000047 00000500 043b0000  .......G.....;..
 0700 0500700e 00000500 d80f0000 0500ae18  ..p.............
 0710 00000500 13200000 05006725 00000500  ..... ....g%....
 0720 8a440000 0500b620 00000500 3e330000  .D..... ....>3..
 0730 0500f500 00000500 bd4c0000 0500a317  .........L......
 0740 00000500 15350000 05007428 00000500  .....5....t(....
 0750 ed2d0000 0500fb40 00000500 bb170000  .-.....@........
 0760 05007710 00000500 12230000 0500b408  ..w......#......
 0770 00000500 35280000 0500ab4d 00000500  ....5(.....M....
 0780 4d400000 05006c34 00000500 e64b0000  M@....l4.....K..
 0790 0500c515 00000500 96010000 05005500  ..............U.
 07a0 00000500 18170000 05002212 00000500  ..........".....
 07b0 57300000 05004235 00000500 c1480000  W0....B5.....H..
 07c0 05009212 00000500 95460000 0500a233  .........F.....3
 07d0 00000500 d53c0000 0500fc23 00000500  .....<.....#....
 07e0 601d0000 0500a60f 00000500 b72d0000  `............-..
 07f0 05000b1e 00000500 7b020000 05003210  ........{.....2.
 0800 00000500 5c1b0000 05002224 00000500  ....\....."$....
 0810 313d0000 05005e31 00000500 6b440000  1=....^1....kD..
 0820 0500f415 00000500 92240000 05002e40  .........$.....@
 0830 00000500 58010000 0500f03b 00000500  ....X......;....
 0840 06280000 0500894c 00000500 61480000  .(.....L....aH..
 0850 0500480d 00000500 1d2d0000 05005804  ..H......-....X.
 0860 00000500 f3160000 0500444a 00000500  ..........DJ....
 0870 811a0000 05005c25 00000500 06200000  ......\%..... ..
 0880 0500ea46 00000500 e5230000 0500ac3d  ...F.....#.....=
 0890 00000500 13150000 05000027 00000500  ...........'....
 08a0 27400000 05004103 00000500 7f170000  '@....A.........
 08b0 05002016 00000500 73470000 05004229  .. .....sG....B)
 08c0 00000500 de410000 0500e12f 00000500  .....A...../....
 08d0 8d390000 05003a3c 00000500 d62f0000  .9....:<...../..
 08e0 0500a923 00000500 04370000 0500be42  ...#.....7.....B
 08f0 00000500 06370000 05005c4a 00000500  .....7....\J....
 0900 9b0f0000 05005e4a 00000500 8c270000  ......^J.....'..
 0910 05009b08 00000004 00000513 bd020000  ................
 0920 05268246 0000052e 68180000 053ae918  .&.F....h....:..
 0930 0000053d 2e0a0000 00040000 05186c10  ...=..........l.
 0940 0000051a f5330000 00040000 0513f024  .....3.........$
 0950 00000677 41490000 0678d917 00000679  ...wAI...x.....y
 0960 96170000 067a7007 0000067b 034d0000  .....zp....{.M..
 0970 067c9f34 0000067d 62230000 067ead12  .|.4...}b#...~..
 0980 0000067f 86380000 068001af 44000006  .....8......D...
 0990 8101e60c 00000682 01373000 00068301  .........70.....
 09a0 bb3f0000 06840102 38000006 8501c426  .?......8......&
 09b0 00000686 01da4600 00068701 92050000  ......F.........
 09c0 0688019a 29000006 8901162a 0000068a  ....)......*....
 09d0 01180d00 00068b01 b0410000 068c0108  .........A......
 09e0 2b000006 8d015117 0000068e 01550500  +.....Q......U..
 09f0 00059301 3d120000 059e016c 04000005  ....=......l....
 0a00 ac018e42 000005b0 01652200 0006dc01  ...B.....e".....
 0a10 1b3b0000 05dd0153 1a000005 e301ce02  .;.....S........
 0a20 000005e9 012f1700 0005ef01 2c090000  ...../......,...
 0a30 05840208 1d000006 8602b006 00000587  ................
 0a40 02c94300 00068802 ee380000 05890255  ..C......8.....U
 0a50 2a000005 ac027b2c 000005b0 021d0900  *.....{,........
 0a60 0005b402 c3280000 05b802ff 07000005  .....(..........
 0a70 bc02e316 000006bd 02961700 0005be02  ................
 0a80 2c090000 06bf02d9 17000005 c0022f17  ,............./.
 0a90 000005c4 023f3a00 0006c502 090d0000  .....?:.........
 0aa0 05c6025f 0e000005 f0023247 000005f4  ..._......2G....
 0ab0 027f0700 00058303 f30c0000 058b0383  ................
 0ac0 18000006 9a03db07 0000059b 03052900  ..............).
 0ad0 00059f03 9e3c0000 05a003c3 2f000005  .....<....../...
 0ae0 a203f905 00000004 00000513 d7030000  ................
 0af0 02225f5f 50000623 67270000 052a4530  ."__P..#g'...*E0
 0b00 0000052b e9410000 0537fe38 00000538  ...+.A...7.8...8
 0b10 a54b0000 05395d0d 0000053a 42080000  .K...9]....:B...
 0b20 0559d813 0000055e 453c0000 055ffb13  .Y.....^E<..._..
 0b30 00000564 ec300000 0565e432 00000568  ...d.0...e.2...h
 0b40 100a0000 05700419 00000571 13460000  .....p.....q.F..
 0b50 0576642f 00000577 c72b0000 057a7b32  .vd/...w.+...z{2
 0b60 0000057c 943b0000 057d7248 0000058a  ...|.;...}rH....
 0b70 01580200 00058b01 22290000 05a90150  .X......").....P
 0b80 20000005 b0013538 000005b2 01151300   .....58........
 0b90 0005b501 ef490000 05b6018d 3e000005  .....I......>...
 0ba0 cb018337 000005d3 01cc3f00 0005dd01  ...7......?.....
 0bb0 cd390000 05e40125 05000005 ed017311  .9.....%......s.
 0bc0 000005ee 01af2200 0005f601 322d0000  ......".....2-..
 0bd0 05800201 31000005 8d02fb2b 00000597  ....1......+....
 0be0 02a84000 0005a002 8e070000 05a802b5  ..@.............
 0bf0 45000005 b1025614 000006b9 02433e00  E.....V......C>.
 0c00 0005ba02 fd210000 05c302a1 11000005  .....!..........
 0c10 d502250f 000005d6 02040c00 0005df02  ..%.............
 0c20 7b300000 05e5029b 1d000005 e602e504  {0..............
 0c30 000005fa 02664000 00058903 24040000  .....f@.....$...
 0c40 058a03c7 2e000005 a003d136 00000004  ...........6....
 0c50 00000504 4e4a0000 050ced4a 0000050e  ....NJ.....J....
 0c60 7c240000 00040000 05c20358 37000005  |$.........X7...
 0c70 c303c705 000005c4 039c2100 0005c503  ..........!.....
 0c80 d2370000 05c6038d 0b000005 c803013e  .7.............>
 0c90 000005c9 03cb1200 0005d403 fe3c0000  .............<..
 0ca0 05d5039e 0d000005 e7037616 00000004  ..........v.....
 0cb0 0000050a 113c0000 050b1308 0000050c  .....<..........
 0cc0 c6140000 050d7108 0000050e fb190000  ......q.........
 0cd0 050f5d34 00000510 46150000 0511864d  ..]4....F......M
 0ce0 00000512 cc180000 05132248 00000514  .........."H....
 0cf0 730f0000 0515fe09 00000516 7f4b0000  s............K..
 0d00 05176116 00000004 00000625 1c2b0000  ..a........%.+..
 0d10 052a0b12 0000062f f0430000 05330248  .*...../.C...3.H
 0d20 00000638 0e370000 053c8c47 00000641  ...8.7...<.G...A
 0d30 ac0c0000 0545693a 00000004 0000051f  .....Ei:........
 0d40 552f0000 05205006 00000004 000005bb  U/... P.........
 0d50 01852600 0005bc01 23210000 05bd016a  ..&.....#!.....j
 0d60 0f000005 be011116 000005bf 01d50e00  ................
 0d70 0005c001 050e0000 05c10102 21000005  ............!...
 0d80 c201f80f 000005c3 01f40f00 0005c401  ................
 0d90 0a110000 05c50144 00000005 c6010611  .......D........
 0da0 000005c7 01cd0800 0005c801 b62e0000  ................
 0db0 05c90166 0f000005 ca01b347 000005d2  ...f.......G....
 0dc0 01d10900 0006ee01 442e0000 069103c6  ........D.......
 0dd0 12000005 9603f21c 0000069c 03bf1200  ................
 0de0 00000400 0005625c 24000005 63222600  ......b\$...c"&.
 0df0 0005641f 0a000005 65671700 00056633  ..d.....eg....f3
 0e00 25000005 67484400 000575a5 3f000005  %...gHD...u.?...
 0e10 766d2700 00057726 34000005 78a42f00  vm'...w&4...x./.
 0e20 0005794d 29000005 7ac51b00 00057bb9  ..yM)...z.....{.
 0e30 39000005 7c734100 00057eb9 23000000  9...|sA...~.#...
 0e40 04000005 18531500 00052243 42000005  .....S...."CB...
 0e50 23cf0000 0005265f 49000005 27304400  #.....&_I...'0D.
 0e60 0005280c 14000005 29153600 00052ae9  ..(.....).6...*.
 0e70 28000005 2bcc2300 00052df0 2f000005  (...+.#...-./...
 0e80 2e0e2500 000533bf 34000005 34254900  ..%...3.4...4%I.
 0e90 000535ae 14000005 36a40500 00053791  ..5.....6.....7.
 0ea0 16000005 382a1600 000539e9 2a000005  ....8*....9.*...
 0eb0 3ac71f00 00053b95 20000005 3c593b00  :.....;. ...<Y;.
 0ec0 00053d68 36000005 3e0c2100 00053f88  ..=h6...>.!...?.
 0ed0 3d000005 40543c00 00054167 15000005  =...@T<...Ag....
 0ee0 42961900 000543d8 1d000005 44452100  B.....C.....DE!.
 0ef0 00054549 46000005 46ba4100 0005474c  ..EIF...F.A...GL
 0f00 0b000005 489b0e00 0005499d 39000005  ....H.....I.9...
 0f10 4a794900 0005507c 01000005 53892c00  JyI...P|....S.,.
 0f20 00055665 1a000005 5cdf0800 00000400  ..Ve....\.......
 0f30 0005052f 35000005 0e552f00 00051250  .../5....U/....P
 0f40 06000000 04000006 ee01442e 00000691  ..........D.....
 0f50 03c61200 00059603 f21c0000 069c03bf  ................
 0f60 12000000 04000005 334e0900 00053516  ........3N....5.
 0f70 05000005 36dc2d00 00053803 18000005  ....6.-...8.....
 0f80 3b270200 00053d49 37000000 04000005  ;'....=I7.......
 0f90 25934000 0005268c 4b000005 27d72800  %.@...&.K...'.(.
 0fa0 000528c7 3d000005 29501000 00052a96  ..(.=...)P....*.
 0fb0 0c000005 2bec3c00 00052cf0 1e000005  ....+.<...,.....
 0fc0 2d103a00 00052e73 1f000005 2f443b00  -.:....s..../D;.
 0fd0 000530ed 3a000005 31154000 0005347b  ..0.:...1.@...4{
 0fe0 3e000000 04000006 227b2e00 0005272e  >......."{....'.
 0ff0 23000000 04000006 37964100 0005382e  #.......7.A...8.
 1000 37000005 3ffb3100 00054240 26000005  7...?.1...B@&...
 1010 51f32600 0005527d 33000005 53910d00  Q.&...R}3...S...
 1020 0005543f 45000005 550a1700 00055638  ..T?E...U.....V8
 1030 1b000005 57a62800 000558e8 2c000005  ....W.(...X.,...
 1040 60502200 0005611c 1b000005 62ea3600  `P"...a.....b.6.
 1050 000563c8 03000005 64683d00 0005657d  ..c.....dh=...e}
 1060 47000005 66710500 0005670a 03000005  G...fq....g.....
 1070 68611100 000569a5 1a000005 6a402000  ha....i.....j@ .
 1080 00056bf5 2c000005 6c5d0700 00056d21  ..k.,...l]....m!
 1090 18000005 6e274d00 00056f5c 28000005  ....n'M...o\(...
 10a0 700f4900 00057180 3b000005 72cc3100  p.I...q.;...r.1.
 10b0 000574ae 29000005 75e62100 0005791c  ..t.)...u.!...y.
 10c0 2f000005 8201a31c 00000583 016f3000  /............o0.
 10d0 00058401 bb030000 058501a5 2e000005  ................
 10e0 86010000 00000587 01471f00 00058801  .........G......
 10f0 a1180000 0589014f 16000005 8a01160b  .......O........
 1100 0000058b 01113800 00058c01 1f330000  ......8......3..
 1110 058d01be 3e000005 8e011341 0000058f  ....>......A....
 1120 01ac3400 00059001 4e490000 059101d9  ..4.....NI......
 1130 43000005 9201be30 000005f7 01ae2600  C......0......&.
 1140 00059402 0d1b0000 05c30213 19000005  ................
 1150 c402aa3c 000005c5 02701d00 00058f03  ...<.....p......
 1160 bf490000 05940376 35000005 9703d33e  .I.....v5......>
 1170 0000059b 03154300 0005ae03 211d0000  ......C.....!...
 1180 05af03e4 0e000005 b9037f31 000005c0  ...........1....
 1190 03841500 0005c103 092d0000 05c2032f  .........-...../
 11a0 21000005 c303db11 000005c5 03441800  !............D..
 11b0 0005c803 212a0000 05cb0323 32000000  ....!*.....#2...
 11c0 04000005 2f423900 00053d29 0b000005  ..../B9...=)....
 11d0 48c20e00 000557dd 02000005 58f22b00  H.....W.....X.+.
 11e0 000559d0 17000005 5e4d0e00 00056ba4  ..Y.....^M....k.
 11f0 44000005 6c1c0300 00056dbe 19000005  D...l.....m.....
 1200 76253800 00000400 0005134f 2c000005  v%8........O,...
 1210 19381800 00051a14 32000005 1bab0200  .8......2.......
 1220 00051eaf 4a000006 242a3c00 000525d3  ....J...$*<...%.
 1230 38000000 04000005 8b01a322 0000058c  8.........."....
 1240 01a24100 00058d01 e6170000 05e80379  ..A............y
 1250 12000005 90041b27 000000             .......'...     

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x243>
 248:	78 38                	js     282 <_init-0x236>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 39                	add    BYTE PTR [rcx],bh
 285:	83 d9 32             	sbb    ecx,0x32
 288:	ff 37                	push   QWORD PTR [rdi]
 28a:	94                   	xchg   esp,eax
 28b:	5d                   	pop    rbp
 28c:	0c bf                	or     al,0xbf
 28e:	fa                   	cli    
 28f:	d1 6a ec             	shr    DWORD PTR [rdx-0x14],1
 292:	38 c2                	cmp    dl,al
 294:	44                   	rex.R
 295:	64 d6                	fs (bad) 
 297:	75                   	.byte 0x75

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	38 00                	cmp    BYTE PTR [rax],al
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	20 00                	and    BYTE PTR [rax],al
	...
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	1a 00                	sbb    al,BYTE PTR [rax]
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 2fe:	00 00                	add    BYTE PTR [rax],al
 300:	54                   	push   rsp
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 20                	add    BYTE PTR [rax],ah
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	20 00                	and    BYTE PTR [rax],al
	...
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	0b 00                	or     eax,DWORD PTR [rax]
 332:	00 00                	add    BYTE PTR [rax],al
 334:	22 00                	and    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000348 <.dynstr>:
 348:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 34c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 34e:	73 6f                	jae    3bf <_init-0xf9>
 350:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 355:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 358:	5f                   	pop    rdi
 359:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 35f:	7a 65                	jp     3c6 <_init-0xf2>
 361:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 364:	6c                   	ins    BYTE PTR es:[rdi],dx
 365:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 36c:	72 74                	jb     3e2 <_init-0xd6>
 36e:	5f                   	pop    rdi
 36f:	6d                   	ins    DWORD PTR es:[rdi],dx
 370:	61                   	(bad)  
 371:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 378:	43 5f                	rex.XB pop r15
 37a:	32 2e                	xor    ch,BYTE PTR [rsi]
 37c:	32 2e                	xor    ch,BYTE PTR [rsi]
 37e:	35 00 5f 49 54       	xor    eax,0x54495f00
 383:	4d 5f                	rex.WRB pop r15
 385:	64 65 72 65          	fs gs jb 3ee <_init-0xca>
 389:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 390:	4d 
 391:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 393:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 394:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 395:	65 54                	gs push rsp
 397:	61                   	(bad)  
 398:	62                   	(bad)  
 399:	6c                   	ins    BYTE PTR es:[rdi],dx
 39a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 39e:	67 6d                	ins    DWORD PTR es:[edi],dx
 3a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3a2:	5f                   	pop    rdi
 3a3:	73 74                	jae    419 <_init-0x9f>
 3a5:	61                   	(bad)  
 3a6:	72 74                	jb     41c <_init-0x9c>
 3a8:	5f                   	pop    rdi
 3a9:	5f                   	pop    rdi
 3aa:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3ad:	54                   	push   rsp
 3ae:	4d 5f                	rex.WRB pop r15
 3b0:	72 65                	jb     417 <_init-0xa1>
 3b2:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3b9:	4d 
 3ba:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3be:	65 54                	gs push rsp
 3c0:	61                   	(bad)  
 3c1:	62                   	.byte 0x62
 3c2:	6c                   	ins    BYTE PTR es:[rdi],dx
 3c3:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003c6 <.gnu.version>:
 3c6:	00 00                	add    BYTE PTR [rax],al
 3c8:	00 00                	add    BYTE PTR [rax],al
 3ca:	02 00                	add    al,BYTE PTR [rax]
 3cc:	00 00                	add    BYTE PTR [rax],al
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

00000000000003d8 <.gnu.version_r>:
 3d8:	01 00                	add    DWORD PTR [rax],eax
 3da:	01 00                	add    DWORD PTR [rax],eax
 3dc:	01 00                	add    DWORD PTR [rax],eax
 3de:	00 00                	add    BYTE PTR [rax],al
 3e0:	10 00                	adc    BYTE PTR [rax],al
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	00 00                	add    BYTE PTR [rax],al
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	75 1a                	jne    404 <_init-0xb4>
 3ea:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 3f0:	2c 00                	sub    al,0x0
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000003f8 <.rela.dyn>:
 3f8:	f0 0d 20 00 00 00    	lock or eax,0x20
 3fe:	00 00                	add    BYTE PTR [rax],al
 400:	08 00                	or     BYTE PTR [rax],al
 402:	00 00                	add    BYTE PTR [rax],al
 404:	00 00                	add    BYTE PTR [rax],al
 406:	00 00                	add    BYTE PTR [rax],al
 408:	f0 05 00 00 00 00    	lock add eax,0x0
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	f8                   	clc    
 411:	0d 20 00 00 00       	or     eax,0x20
 416:	00 00                	add    BYTE PTR [rax],al
 418:	08 00                	or     BYTE PTR [rax],al
 41a:	00 00                	add    BYTE PTR [rax],al
 41c:	00 00                	add    BYTE PTR [rax],al
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	b0 05                	mov    al,0x5
 422:	00 00                	add    BYTE PTR [rax],al
 424:	00 00                	add    BYTE PTR [rax],al
 426:	00 00                	add    BYTE PTR [rax],al
 428:	08 10                	or     BYTE PTR [rax],dl
 42a:	20 00                	and    BYTE PTR [rax],al
 42c:	00 00                	add    BYTE PTR [rax],al
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	08 00                	or     BYTE PTR [rax],al
 432:	00 00                	add    BYTE PTR [rax],al
 434:	00 00                	add    BYTE PTR [rax],al
 436:	00 00                	add    BYTE PTR [rax],al
 438:	08 10                	or     BYTE PTR [rax],dl
 43a:	20 00                	and    BYTE PTR [rax],al
 43c:	00 00                	add    BYTE PTR [rax],al
 43e:	00 00                	add    BYTE PTR [rax],al
 440:	d8 0f                	fmul   DWORD PTR [rdi]
 442:	20 00                	and    BYTE PTR [rax],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	00 00                	add    BYTE PTR [rax],al
 448:	06                   	(bad)  
 449:	00 00                	add    BYTE PTR [rax],al
 44b:	00 01                	add    BYTE PTR [rcx],al
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 e0                	add    al,ah
 459:	0f 20 00             	mov    rax,cr0
 45c:	00 00                	add    BYTE PTR [rax],al
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	06                   	(bad)  
 461:	00 00                	add    BYTE PTR [rax],al
 463:	00 02                	add    BYTE PTR [rdx],al
	...
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 e8                	add    al,ch
 471:	0f 20 00             	mov    rax,cr0
 474:	00 00                	add    BYTE PTR [rax],al
 476:	00 00                	add    BYTE PTR [rax],al
 478:	06                   	(bad)  
 479:	00 00                	add    BYTE PTR [rax],al
 47b:	00 03                	add    BYTE PTR [rbx],al
	...
 485:	00 00                	add    BYTE PTR [rax],al
 487:	00 f0                	add    al,dh
 489:	0f 20 00             	mov    rax,cr0
 48c:	00 00                	add    BYTE PTR [rax],al
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	06                   	(bad)  
 491:	00 00                	add    BYTE PTR [rax],al
 493:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	f8                   	clc    
 4a1:	0f 20 00             	mov    rax,cr0
 4a4:	00 00                	add    BYTE PTR [rax],al
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    BYTE PTR [rax],al
 4ab:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 4b1 <_init-0x7>
 4b1:	00 00                	add    BYTE PTR [rax],al
 4b3:	00 00                	add    BYTE PTR [rax],al
 4b5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init:

00000000000004b8 <_init>:
 4b8:	48 83 ec 08          	sub    rsp,0x8
 4bc:	48 8b 05 25 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b25]        # 200fe8 <__gmon_start__>
 4c3:	48 85 c0             	test   rax,rax
 4c6:	74 02                	je     4ca <_init+0x12>
 4c8:	ff d0                	call   rax
 4ca:	48 83 c4 08          	add    rsp,0x8
 4ce:	c3                   	ret    

Disassembly of section .plt:

00000000000004d0 <.plt>:
 4d0:	ff 35 f2 0a 20 00    	push   QWORD PTR [rip+0x200af2]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
 4d6:	ff 25 f4 0a 20 00    	jmp    QWORD PTR [rip+0x200af4]        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
 4dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

00000000000004e0 <__cxa_finalize@plt>:
 4e0:	ff 25 12 0b 20 00    	jmp    QWORD PTR [rip+0x200b12]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 4e6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000004f0 <_start>:
 4f0:	31 ed                	xor    ebp,ebp
 4f2:	49 89 d1             	mov    r9,rdx
 4f5:	5e                   	pop    rsi
 4f6:	48 89 e2             	mov    rdx,rsp
 4f9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 4fd:	50                   	push   rax
 4fe:	54                   	push   rsp
 4ff:	4c 8d 05 9a 01 00 00 	lea    r8,[rip+0x19a]        # 6a0 <__libc_csu_fini>
 506:	48 8d 0d 23 01 00 00 	lea    rcx,[rip+0x123]        # 630 <__libc_csu_init>
 50d:	48 8d 3d e6 00 00 00 	lea    rdi,[rip+0xe6]        # 5fa <main>
 514:	ff 15 c6 0a 20 00    	call   QWORD PTR [rip+0x200ac6]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 51a:	f4                   	hlt    
 51b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000520 <deregister_tm_clones>:
 520:	48 8d 3d e9 0a 20 00 	lea    rdi,[rip+0x200ae9]        # 201010 <__TMC_END__>
 527:	55                   	push   rbp
 528:	48 8d 05 e1 0a 20 00 	lea    rax,[rip+0x200ae1]        # 201010 <__TMC_END__>
 52f:	48 39 f8             	cmp    rax,rdi
 532:	48 89 e5             	mov    rbp,rsp
 535:	74 19                	je     550 <deregister_tm_clones+0x30>
 537:	48 8b 05 9a 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a9a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 53e:	48 85 c0             	test   rax,rax
 541:	74 0d                	je     550 <deregister_tm_clones+0x30>
 543:	5d                   	pop    rbp
 544:	ff e0                	jmp    rax
 546:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 54d:	00 00 00 
 550:	5d                   	pop    rbp
 551:	c3                   	ret    
 552:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 556:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 55d:	00 00 00 

0000000000000560 <register_tm_clones>:
 560:	48 8d 3d a9 0a 20 00 	lea    rdi,[rip+0x200aa9]        # 201010 <__TMC_END__>
 567:	48 8d 35 a2 0a 20 00 	lea    rsi,[rip+0x200aa2]        # 201010 <__TMC_END__>
 56e:	55                   	push   rbp
 56f:	48 29 fe             	sub    rsi,rdi
 572:	48 89 e5             	mov    rbp,rsp
 575:	48 c1 fe 03          	sar    rsi,0x3
 579:	48 89 f0             	mov    rax,rsi
 57c:	48 c1 e8 3f          	shr    rax,0x3f
 580:	48 01 c6             	add    rsi,rax
 583:	48 d1 fe             	sar    rsi,1
 586:	74 18                	je     5a0 <register_tm_clones+0x40>
 588:	48 8b 05 61 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a61]        # 200ff0 <_ITM_registerTMCloneTable>
 58f:	48 85 c0             	test   rax,rax
 592:	74 0c                	je     5a0 <register_tm_clones+0x40>
 594:	5d                   	pop    rbp
 595:	ff e0                	jmp    rax
 597:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 59e:	00 00 
 5a0:	5d                   	pop    rbp
 5a1:	c3                   	ret    
 5a2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 5a6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 5ad:	00 00 00 

00000000000005b0 <__do_global_dtors_aux>:
 5b0:	80 3d 59 0a 20 00 00 	cmp    BYTE PTR [rip+0x200a59],0x0        # 201010 <__TMC_END__>
 5b7:	75 2f                	jne    5e8 <__do_global_dtors_aux+0x38>
 5b9:	48 83 3d 37 0a 20 00 	cmp    QWORD PTR [rip+0x200a37],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c0:	00 
 5c1:	55                   	push   rbp
 5c2:	48 89 e5             	mov    rbp,rsp
 5c5:	74 0c                	je     5d3 <__do_global_dtors_aux+0x23>
 5c7:	48 8b 3d 3a 0a 20 00 	mov    rdi,QWORD PTR [rip+0x200a3a]        # 201008 <__dso_handle>
 5ce:	e8 0d ff ff ff       	call   4e0 <__cxa_finalize@plt>
 5d3:	e8 48 ff ff ff       	call   520 <deregister_tm_clones>
 5d8:	c6 05 31 0a 20 00 01 	mov    BYTE PTR [rip+0x200a31],0x1        # 201010 <__TMC_END__>
 5df:	5d                   	pop    rbp
 5e0:	c3                   	ret    
 5e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 5e8:	f3 c3                	repz ret 
 5ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000005f0 <frame_dummy>:
 5f0:	55                   	push   rbp
 5f1:	48 89 e5             	mov    rbp,rsp
 5f4:	5d                   	pop    rbp
 5f5:	e9 66 ff ff ff       	jmp    560 <register_tm_clones>

00000000000005fa <main>:
#include <stdio.h>

int main(int argc, char * argv[])
{
 5fa:	55                   	push   rbp
 5fb:	48 89 e5             	mov    rbp,rsp
 5fe:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 601:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
	int a, b, c;
	
	a = 2;
 605:	c7 45 f4 02 00 00 00 	mov    DWORD PTR [rbp-0xc],0x2
	b = 3;
 60c:	c7 45 f8 03 00 00 00 	mov    DWORD PTR [rbp-0x8],0x3

	c = a * b;
 613:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
 616:	0f af 45 f8          	imul   eax,DWORD PTR [rbp-0x8]
 61a:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
 61d:	b8 00 00 00 00       	mov    eax,0x0
}
 622:	5d                   	pop    rbp
 623:	c3                   	ret    
 624:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 62b:	00 00 00 
 62e:	66 90                	xchg   ax,ax

0000000000000630 <__libc_csu_init>:
 630:	41 57                	push   r15
 632:	41 56                	push   r14
 634:	49 89 d7             	mov    r15,rdx
 637:	41 55                	push   r13
 639:	41 54                	push   r12
 63b:	4c 8d 25 ae 07 20 00 	lea    r12,[rip+0x2007ae]        # 200df0 <__frame_dummy_init_array_entry>
 642:	55                   	push   rbp
 643:	48 8d 2d ae 07 20 00 	lea    rbp,[rip+0x2007ae]        # 200df8 <__init_array_end>
 64a:	53                   	push   rbx
 64b:	41 89 fd             	mov    r13d,edi
 64e:	49 89 f6             	mov    r14,rsi
 651:	4c 29 e5             	sub    rbp,r12
 654:	48 83 ec 08          	sub    rsp,0x8
 658:	48 c1 fd 03          	sar    rbp,0x3
 65c:	e8 57 fe ff ff       	call   4b8 <_init>
 661:	48 85 ed             	test   rbp,rbp
 664:	74 20                	je     686 <__libc_csu_init+0x56>
 666:	31 db                	xor    ebx,ebx
 668:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 66f:	00 
 670:	4c 89 fa             	mov    rdx,r15
 673:	4c 89 f6             	mov    rsi,r14
 676:	44 89 ef             	mov    edi,r13d
 679:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 67d:	48 83 c3 01          	add    rbx,0x1
 681:	48 39 dd             	cmp    rbp,rbx
 684:	75 ea                	jne    670 <__libc_csu_init+0x40>
 686:	48 83 c4 08          	add    rsp,0x8
 68a:	5b                   	pop    rbx
 68b:	5d                   	pop    rbp
 68c:	41 5c                	pop    r12
 68e:	41 5d                	pop    r13
 690:	41 5e                	pop    r14
 692:	41 5f                	pop    r15
 694:	c3                   	ret    
 695:	90                   	nop
 696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 69d:	00 00 00 

00000000000006a0 <__libc_csu_fini>:
 6a0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000006a4 <_fini>:
 6a4:	48 83 ec 08          	sub    rsp,0x8
 6a8:	48 83 c4 08          	add    rsp,0x8
 6ac:	c3                   	ret    

Disassembly of section .rodata:

00000000000006b0 <_IO_stdin_used>:
 6b0:	01 00                	add    DWORD PTR [rax],eax
 6b2:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

00000000000006b4 <__GNU_EH_FRAME_HDR>:
 6b4:	01 1b                	add    DWORD PTR [rbx],ebx
 6b6:	03 3b                	add    edi,DWORD PTR [rbx]
 6b8:	38 00                	cmp    BYTE PTR [rax],al
 6ba:	00 00                	add    BYTE PTR [rax],al
 6bc:	06                   	(bad)  
 6bd:	00 00                	add    BYTE PTR [rax],al
 6bf:	00 1c fe             	add    BYTE PTR [rsi+rdi*8],bl
 6c2:	ff                   	(bad)  
 6c3:	ff 84 00 00 00 2c fe 	inc    DWORD PTR [rax+rax*1-0x1d40000]
 6ca:	ff                   	(bad)  
 6cb:	ff ac 00 00 00 3c fe 	jmp    FWORD PTR [rax+rax*1-0x1c40000]
 6d2:	ff                   	(bad)  
 6d3:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
 6d7:	00 46 ff             	add    BYTE PTR [rsi-0x1],al
 6da:	ff                   	(bad)  
 6db:	ff c4                	inc    esp
 6dd:	00 00                	add    BYTE PTR [rax],al
 6df:	00 7c ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],bh
 6e3:	ff e4                	jmp    rsp
 6e5:	00 00                	add    BYTE PTR [rax],al
 6e7:	00 ec                	add    ah,ch
 6e9:	ff                   	(bad)  
 6ea:	ff                   	(bad)  
 6eb:	ff 2c 01             	jmp    FWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000000006f0 <__FRAME_END__-0x104>:
 6f0:	14 00                	adc    al,0x0
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	00 00                	add    BYTE PTR [rax],al
 6f6:	00 00                	add    BYTE PTR [rax],al
 6f8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 6fb:	00 01                	add    BYTE PTR [rcx],al
 6fd:	78 10                	js     70f <__GNU_EH_FRAME_HDR+0x5b>
 6ff:	01 1b                	add    DWORD PTR [rbx],ebx
 701:	0c 07                	or     al,0x7
 703:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 709:	00 00                	add    BYTE PTR [rax],al
 70b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 70e:	00 00                	add    BYTE PTR [rax],al
 710:	e0 fd                	loopne 70f <__GNU_EH_FRAME_HDR+0x5b>
 712:	ff                   	(bad)  
 713:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 71d:	00 00                	add    BYTE PTR [rax],al
 71f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 722:	00 00                	add    BYTE PTR [rax],al
 724:	00 00                	add    BYTE PTR [rax],al
 726:	00 00                	add    BYTE PTR [rax],al
 728:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 72b:	00 01                	add    BYTE PTR [rcx],al
 72d:	78 10                	js     73f <__GNU_EH_FRAME_HDR+0x8b>
 72f:	01 1b                	add    DWORD PTR [rbx],ebx
 731:	0c 07                	or     al,0x7
 733:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 739:	00 00                	add    BYTE PTR [rax],al
 73b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 73e:	00 00                	add    BYTE PTR [rax],al
 740:	90                   	nop
 741:	fd                   	std    
 742:	ff                   	(bad)  
 743:	ff 10                	call   QWORD PTR [rax]
 745:	00 00                	add    BYTE PTR [rax],al
 747:	00 00                	add    BYTE PTR [rax],al
 749:	0e                   	(bad)  
 74a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 74d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 750:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 753:	80 00 3f             	add    BYTE PTR [rax],0x3f
 756:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 758:	2a 33                	sub    dh,BYTE PTR [rbx]
 75a:	24 22                	and    al,0x22
 75c:	00 00                	add    BYTE PTR [rax],al
 75e:	00 00                	add    BYTE PTR [rax],al
 760:	14 00                	adc    al,0x0
 762:	00 00                	add    BYTE PTR [rax],al
 764:	44 00 00             	add    BYTE PTR [rax],r8b
 767:	00 78 fd             	add    BYTE PTR [rax-0x3],bh
 76a:	ff                   	(bad)  
 76b:	ff 08                	dec    DWORD PTR [rax]
	...
 775:	00 00                	add    BYTE PTR [rax],al
 777:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	5c                   	pop    rsp
 77d:	00 00                	add    BYTE PTR [rax],al
 77f:	00 7a fe             	add    BYTE PTR [rdx-0x2],bh
 782:	ff                   	(bad)  
 783:	ff 2a                	jmp    FWORD PTR [rdx]
 785:	00 00                	add    BYTE PTR [rax],al
 787:	00 00                	add    BYTE PTR [rax],al
 789:	41 0e                	rex.B (bad) 
 78b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 791:	65 0c 07             	gs or  al,0x7
 794:	08 00                	or     BYTE PTR [rax],al
 796:	00 00                	add    BYTE PTR [rax],al
 798:	44 00 00             	add    BYTE PTR [rax],r8b
 79b:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
 79f:	00 90 fe ff ff 65    	add    BYTE PTR [rax+0x65fffffe],dl
 7a5:	00 00                	add    BYTE PTR [rax],al
 7a7:	00 00                	add    BYTE PTR [rax],al
 7a9:	42 0e                	rex.X (bad) 
 7ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 7b1:	8e 03                	mov    es,WORD PTR [rbx]
 7b3:	45 0e                	rex.RB (bad) 
 7b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 7bb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301609 <_end+0xffffffff861005f1>
 7c1:	06                   	(bad)  
 7c2:	48 0e                	rex.W (bad) 
 7c4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 7ca:	72 0e                	jb     7da <__GNU_EH_FRAME_HDR+0x126>
 7cc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 7cf:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 7d2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 7d5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 7d8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 7db:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 7de:	08 00                	or     BYTE PTR [rax],al
 7e0:	10 00                	adc    BYTE PTR [rax],al
 7e2:	00 00                	add    BYTE PTR [rax],al
 7e4:	c4                   	(bad)  
 7e5:	00 00                	add    BYTE PTR [rax],al
 7e7:	00 b8 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],bh
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 00                	add    BYTE PTR [rax],al
 7f1:	00 00                	add    BYTE PTR [rax],al
	...

00000000000007f4 <__FRAME_END__>:
 7f4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200df0 <__frame_dummy_init_array_entry>:
  200df0:	f0 05 00 00 00 00    	lock add eax,0x0
	...

Disassembly of section .fini_array:

0000000000200df8 <__do_global_dtors_aux_fini_array_entry>:
  200df8:	b0 05                	mov    al,0x5
  200dfa:	00 00                	add    BYTE PTR [rax],al
  200dfc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200e00 <_DYNAMIC>:
  200e00:	01 00                	add    DWORD PTR [rax],eax
  200e02:	00 00                	add    BYTE PTR [rax],al
  200e04:	00 00                	add    BYTE PTR [rax],al
  200e06:	00 00                	add    BYTE PTR [rax],al
  200e08:	01 00                	add    DWORD PTR [rax],eax
  200e0a:	00 00                	add    BYTE PTR [rax],al
  200e0c:	00 00                	add    BYTE PTR [rax],al
  200e0e:	00 00                	add    BYTE PTR [rax],al
  200e10:	0c 00                	or     al,0x0
  200e12:	00 00                	add    BYTE PTR [rax],al
  200e14:	00 00                	add    BYTE PTR [rax],al
  200e16:	00 00                	add    BYTE PTR [rax],al
  200e18:	b8 04 00 00 00       	mov    eax,0x4
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 200e25 <_DYNAMIC+0x25>
  200e25:	00 00                	add    BYTE PTR [rax],al
  200e27:	00 a4 06 00 00 00 00 	add    BYTE PTR [rsi+rax*1+0x0],ah
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	19 00                	sbb    DWORD PTR [rax],eax
  200e32:	00 00                	add    BYTE PTR [rax],al
  200e34:	00 00                	add    BYTE PTR [rax],al
  200e36:	00 00                	add    BYTE PTR [rax],al
  200e38:	f0 0d 20 00 00 00    	lock or eax,0x20
  200e3e:	00 00                	add    BYTE PTR [rax],al
  200e40:	1b 00                	sbb    eax,DWORD PTR [rax]
  200e42:	00 00                	add    BYTE PTR [rax],al
  200e44:	00 00                	add    BYTE PTR [rax],al
  200e46:	00 00                	add    BYTE PTR [rax],al
  200e48:	08 00                	or     BYTE PTR [rax],al
  200e4a:	00 00                	add    BYTE PTR [rax],al
  200e4c:	00 00                	add    BYTE PTR [rax],al
  200e4e:	00 00                	add    BYTE PTR [rax],al
  200e50:	1a 00                	sbb    al,BYTE PTR [rax]
  200e52:	00 00                	add    BYTE PTR [rax],al
  200e54:	00 00                	add    BYTE PTR [rax],al
  200e56:	00 00                	add    BYTE PTR [rax],al
  200e58:	f8                   	clc    
  200e59:	0d 20 00 00 00       	or     eax,0x20
  200e5e:	00 00                	add    BYTE PTR [rax],al
  200e60:	1c 00                	sbb    al,0x0
  200e62:	00 00                	add    BYTE PTR [rax],al
  200e64:	00 00                	add    BYTE PTR [rax],al
  200e66:	00 00                	add    BYTE PTR [rax],al
  200e68:	08 00                	or     BYTE PTR [rax],al
  200e6a:	00 00                	add    BYTE PTR [rax],al
  200e6c:	00 00                	add    BYTE PTR [rax],al
  200e6e:	00 00                	add    BYTE PTR [rax],al
  200e70:	f5                   	cmc    
  200e71:	fe                   	(bad)  
  200e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e85 <_DYNAMIC+0x85>
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 48 03             	add    BYTE PTR [rax+0x3],cl
  200e8a:	00 00                	add    BYTE PTR [rax],al
  200e8c:	00 00                	add    BYTE PTR [rax],al
  200e8e:	00 00                	add    BYTE PTR [rax],al
  200e90:	06                   	(bad)  
  200e91:	00 00                	add    BYTE PTR [rax],al
  200e93:	00 00                	add    BYTE PTR [rax],al
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 0a                	add    BYTE PTR [rdx],cl
  200ea1:	00 00                	add    BYTE PTR [rax],al
  200ea3:	00 00                	add    BYTE PTR [rax],al
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
  200eaa:	00 00                	add    BYTE PTR [rax],al
  200eac:	00 00                	add    BYTE PTR [rax],al
  200eae:	00 00                	add    BYTE PTR [rax],al
  200eb0:	0b 00                	or     eax,DWORD PTR [rax]
  200eb2:	00 00                	add    BYTE PTR [rax],al
  200eb4:	00 00                	add    BYTE PTR [rax],al
  200eb6:	00 00                	add    BYTE PTR [rax],al
  200eb8:	18 00                	sbb    BYTE PTR [rax],al
  200eba:	00 00                	add    BYTE PTR [rax],al
  200ebc:	00 00                	add    BYTE PTR [rax],al
  200ebe:	00 00                	add    BYTE PTR [rax],al
  200ec0:	15 00 00 00 00       	adc    eax,0x0
	...
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 03                	add    BYTE PTR [rbx],al
  200ed1:	00 00                	add    BYTE PTR [rax],al
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 c0                	add    al,al
  200ed9:	0f 20 00             	mov    rax,cr0
  200edc:	00 00                	add    BYTE PTR [rax],al
  200ede:	00 00                	add    BYTE PTR [rax],al
  200ee0:	07                   	(bad)  
  200ee1:	00 00                	add    BYTE PTR [rax],al
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 f8                	add    al,bh
  200ee9:	03 00                	add    eax,DWORD PTR [rax]
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 08                	add    BYTE PTR [rax],cl
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 c0                	add    al,al
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 09                	add    BYTE PTR [rcx],cl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 18                	add    BYTE PTR [rax],bl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 1e                	add    BYTE PTR [rsi],bl
  200f11:	00 00                	add    BYTE PTR [rax],al
  200f13:	00 00                	add    BYTE PTR [rax],al
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 08                	add    BYTE PTR [rax],cl
  200f19:	00 00                	add    BYTE PTR [rax],al
  200f1b:	00 00                	add    BYTE PTR [rax],al
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 fb                	add    bl,bh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 01                	add    BYTE PTR [rcx],al
  200f29:	00 00                	add    BYTE PTR [rax],al
  200f2b:	08 00                	or     BYTE PTR [rax],al
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 fe                	add    dh,bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 d8                	add    al,bl
  200f39:	03 00                	add    eax,DWORD PTR [rax]
  200f3b:	00 00                	add    BYTE PTR [rax],al
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 ff                	add    bh,bh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 01                	add    BYTE PTR [rcx],al
  200f49:	00 00                	add    BYTE PTR [rax],al
  200f4b:	00 00                	add    BYTE PTR [rax],al
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 f0                	add    al,dh
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 c6                	add    dh,al
  200f59:	03 00                	add    eax,DWORD PTR [rax]
  200f5b:	00 00                	add    BYTE PTR [rax],al
  200f5d:	00 00                	add    BYTE PTR [rax],al
  200f5f:	00 f9                	add    cl,bh
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f65:	00 00                	add    BYTE PTR [rax],al
  200f67:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fc0 <_GLOBAL_OFFSET_TABLE_>:
  200fc0:	00 0e                	add    BYTE PTR [rsi],cl
  200fc2:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x440>
   a:	74 75                	je     81 <_init-0x437>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x431>
  19:	74 75                	je     90 <_init-0x428>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	fa                   	cli    
  11:	05 00 00 00 00       	add    eax,0x0
  16:	00 00                	add    BYTE PTR [rax],al
  18:	2a 00                	sub    al,BYTE PTR [rax]
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	68 03 00 00 04       	push   0x4000003
   5:	00 00                	add    BYTE PTR [rax],al
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 08                	add    BYTE PTR [rax],cl
   b:	01 a6 0b 00 00 0c    	add    DWORD PTR [rsi+0xc00000b],esp
  11:	a0 02 00 00 20 1c 00 	movabs al,ds:0xfa00001c20000002
  18:	00 fa 
  1a:	05 00 00 00 00       	add    eax,0x0
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	2a 00                	sub    al,BYTE PTR [rax]
	...
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	02 e2                	add    ah,dl
  33:	28 00                	sub    BYTE PTR [rax],al
  35:	00 02                	add    BYTE PTR [rdx],al
  37:	d8 3c 00             	fdivr  DWORD PTR [rax+rax*1]
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	03 08                	add    ecx,DWORD PTR [rax]
  3e:	07                   	(bad)  
  3f:	69 39 00 00 03 01    	imul   edi,DWORD PTR [rcx],0x1030000
  45:	08 a0 26 00 00 03    	or     BYTE PTR [rax+0x3000026],ah
  4b:	02 07                	add    al,BYTE PTR [rdi]
  4d:	0c 07                	or     al,0x7
  4f:	00 00                	add    BYTE PTR [rax],al
  51:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
  54:	d4                   	(bad)  
  55:	1b 00                	sbb    eax,DWORD PTR [rax]
  57:	00 03                	add    BYTE PTR [rbx],al
  59:	01 06                	add    DWORD PTR [rsi],eax
  5b:	1e                   	(bad)  
  5c:	42 00 00             	rex.X add BYTE PTR [rax],al
  5f:	03 02                	add    eax,DWORD PTR [rdx]
  61:	05 67 24 00 00       	add    eax,0x2467
  66:	04 04                	add    al,0x4
  68:	05 69 6e 74 00       	add    eax,0x746e69
  6d:	03 08                	add    ecx,DWORD PTR [rax]
  6f:	05 c4 39 00 00       	add    eax,0x39c4
  74:	02 5a 10             	add    bl,BYTE PTR [rdx+0x10]
  77:	00 00                	add    BYTE PTR [rax],al
  79:	03 8c 6d 00 00 00 02 	add    ecx,DWORD PTR [rbp+rbp*2+0x2000000]
  80:	a2 0c 00 00 03 8d 6d 	movabs ds:0x6d8d0300000c,al
  87:	00 00 
  89:	00 05 08 06 08 92    	add    BYTE PTR [rip+0xffffffff92080608],al        # ffffffff92080697 <_end+0xffffffff91e7f67f>
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	00 03                	add    BYTE PTR [rbx],al
  93:	01 06                	add    DWORD PTR [rsi],eax
  95:	25 42 00 00 07       	and    eax,0x7000042
  9a:	92                   	xchg   edx,eax
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 08                	add    BYTE PTR [rax],cl
  9f:	5f                   	pop    rdi
  a0:	3d 00 00 d8 04       	cmp    eax,0x4d80000
  a5:	f5                   	cmc    
  a6:	1e                   	(bad)  
  a7:	02 00                	add    al,BYTE PTR [rax]
  a9:	00 09                	add    BYTE PTR [rcx],cl
  ab:	bd 26 00 00 04       	mov    ebp,0x4000026
  b0:	f6 66 00             	mul    BYTE PTR [rsi+0x0]
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	00 09                	add    BYTE PTR [rcx],cl
  b7:	f5                   	cmc    
  b8:	20 00                	and    BYTE PTR [rax],al
  ba:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
  bd:	8c 00                	mov    WORD PTR [rax],es
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	08 09                	or     BYTE PTR [rcx],cl
  c3:	31 33                	xor    DWORD PTR [rbx],esi
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	04 fc                	add    al,0xfc
  c9:	8c 00                	mov    WORD PTR [rax],es
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	10 09                	adc    BYTE PTR [rcx],cl
  cf:	db 18                	fistp  DWORD PTR [rax]
  d1:	00 00                	add    BYTE PTR [rax],al
  d3:	04 fd                	add    al,0xfd
  d5:	8c 00                	mov    WORD PTR [rax],es
  d7:	00 00                	add    BYTE PTR [rax],al
  d9:	18 09                	sbb    BYTE PTR [rcx],cl
  db:	d9 24 00             	fldenv [rax+rax*1]
  de:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
  e1:	8c 00                	mov    WORD PTR [rax],es
  e3:	00 00                	add    BYTE PTR [rax],al
  e5:	20 09                	and    BYTE PTR [rcx],cl
  e7:	d0 41 00             	rol    BYTE PTR [rcx+0x0],1
  ea:	00 04 ff             	add    BYTE PTR [rdi+rdi*8],al
  ed:	8c 00                	mov    WORD PTR [rax],es
  ef:	00 00                	add    BYTE PTR [rax],al
  f1:	28 0a                	sub    BYTE PTR [rdx],cl
  f3:	eb 05                	jmp    fa <_init-0x3be>
  f5:	00 00                	add    BYTE PTR [rax],al
  f7:	04 00                	add    al,0x0
  f9:	01 8c 00 00 00 30 0a 	add    DWORD PTR [rax+rax*1+0xa300000],ecx
 100:	79 4d                	jns    14f <_init-0x369>
 102:	00 00                	add    BYTE PTR [rax],al
 104:	04 01                	add    al,0x1
 106:	01 8c 00 00 00 38 0a 	add    DWORD PTR [rax+rax*1+0xa380000],ecx
 10d:	e6 02                	out    0x2,al
 10f:	00 00                	add    BYTE PTR [rax],al
 111:	04 02                	add    al,0x2
 113:	01 8c 00 00 00 40 0a 	add    DWORD PTR [rax+rax*1+0xa400000],ecx
 11a:	14 26                	adc    al,0x26
 11c:	00 00                	add    BYTE PTR [rax],al
 11e:	04 04                	add    al,0x4
 120:	01 8c 00 00 00 48 0a 	add    DWORD PTR [rax+rax*1+0xa480000],ecx
 127:	ae                   	scas   al,BYTE PTR es:[rdi]
 128:	42 00 00             	rex.X add BYTE PTR [rax],al
 12b:	04 05                	add    al,0x5
 12d:	01 8c 00 00 00 50 0a 	add    DWORD PTR [rax+rax*1+0xa500000],ecx
 134:	cb                   	retf   
 135:	0f 00 00             	sldt   WORD PTR [rax]
 138:	04 06                	add    al,0x6
 13a:	01 8c 00 00 00 58 0a 	add    DWORD PTR [rax+rax*1+0xa580000],ecx
 141:	01 09                	add    DWORD PTR [rcx],ecx
 143:	00 00                	add    BYTE PTR [rax],al
 145:	04 08                	add    al,0x8
 147:	01 56 02             	add    DWORD PTR [rsi+0x2],edx
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	60                   	(bad)  
 14d:	0a 65 4a             	or     ah,BYTE PTR [rbp+0x4a]
 150:	00 00                	add    BYTE PTR [rax],al
 152:	04 0a                	add    al,0xa
 154:	01 5c 02 00          	add    DWORD PTR [rdx+rax*1+0x0],ebx
 158:	00 68 0a             	add    BYTE PTR [rax+0xa],ch
 15b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 15c:	16                   	(bad)  
 15d:	00 00                	add    BYTE PTR [rax],al
 15f:	04 0c                	add    al,0xc
 161:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 164:	00 00                	add    BYTE PTR [rax],al
 166:	70 0a                	jo     172 <_init-0x346>
 168:	3a 08                	cmp    cl,BYTE PTR [rax]
 16a:	00 00                	add    BYTE PTR [rax],al
 16c:	04 10                	add    al,0x10
 16e:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 171:	00 00                	add    BYTE PTR [rax],al
 173:	74 0a                	je     17f <_init-0x339>
 175:	53                   	push   rbx
 176:	3d 00 00 04 12       	cmp    eax,0x12040000
 17b:	01 74 00 00          	add    DWORD PTR [rax+rax*1+0x0],esi
 17f:	00 78 0a             	add    BYTE PTR [rax+0xa],bh
 182:	7d 4c                	jge    1d0 <_init-0x2e8>
 184:	00 00                	add    BYTE PTR [rax],al
 186:	04 16                	add    al,0x16
 188:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
 18b:	00 00                	add    BYTE PTR [rax],al
 18d:	80 0a f4             	or     BYTE PTR [rdx],0xf4
 190:	17                   	(bad)  
 191:	00 00                	add    BYTE PTR [rax],al
 193:	04 17                	add    al,0x17
 195:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
 198:	00 00                	add    BYTE PTR [rax],al
 19a:	82                   	(bad)  
 19b:	0a 4e 01             	or     cl,BYTE PTR [rsi+0x1]
 19e:	00 00                	add    BYTE PTR [rax],al
 1a0:	04 18                	add    al,0x18
 1a2:	01 62 02             	add    DWORD PTR [rdx+0x2],esp
 1a5:	00 00                	add    BYTE PTR [rax],al
 1a7:	83 0a 34             	or     DWORD PTR [rdx],0x34
 1aa:	3c 00                	cmp    al,0x0
 1ac:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
 1af:	01 72 02             	add    DWORD PTR [rdx+0x2],esi
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	88 0a                	mov    BYTE PTR [rdx],cl
 1b6:	57                   	push   rdi
 1b7:	3d 00 00 04 25       	cmp    eax,0x25040000
 1bc:	01 7f 00             	add    DWORD PTR [rdi+0x0],edi
 1bf:	00 00                	add    BYTE PTR [rax],al
 1c1:	90                   	nop
 1c2:	0a 56 2b             	or     dl,BYTE PTR [rsi+0x2b]
 1c5:	00 00                	add    BYTE PTR [rax],al
 1c7:	04 2d                	add    al,0x2d
 1c9:	01 8a 00 00 00 98    	add    DWORD PTR [rdx-0x68000000],ecx
 1cf:	0a 5d 2b             	or     bl,BYTE PTR [rbp+0x2b]
 1d2:	00 00                	add    BYTE PTR [rax],al
 1d4:	04 2e                	add    al,0x2e
 1d6:	01 8a 00 00 00 a0    	add    DWORD PTR [rdx-0x60000000],ecx
 1dc:	0a 64 2b 00          	or     ah,BYTE PTR [rbx+rbp*1+0x0]
 1e0:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
 1e3:	01 8a 00 00 00 a8    	add    DWORD PTR [rdx-0x58000000],ecx
 1e9:	0a 6b 2b             	or     ch,BYTE PTR [rbx+0x2b]
 1ec:	00 00                	add    BYTE PTR [rax],al
 1ee:	04 30                	add    al,0x30
 1f0:	01 8a 00 00 00 b0    	add    DWORD PTR [rdx-0x50000000],ecx
 1f6:	0a 72 2b             	or     dh,BYTE PTR [rdx+0x2b]
 1f9:	00 00                	add    BYTE PTR [rax],al
 1fb:	04 32                	add    al,0x32
 1fd:	01 31                	add    DWORD PTR [rcx],esi
 1ff:	00 00                	add    BYTE PTR [rax],al
 201:	00 b8 0a 6d 1f 00    	add    BYTE PTR [rax+0x1f6d0a],bh
 207:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
 20a:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	c0 0a 70             	ror    BYTE PTR [rdx],0x70
 212:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 215:	04 35                	add    al,0x35
 217:	01 78 02             	add    DWORD PTR [rax+0x2],edi
 21a:	00 00                	add    BYTE PTR [rax],al
 21c:	c4                   	(bad)  
 21d:	00 0b                	add    BYTE PTR [rbx],cl
 21f:	f9                   	stc    
 220:	01 00                	add    DWORD PTR [rax],eax
 222:	00 04 9a             	add    BYTE PTR [rdx+rbx*4],al
 225:	08 7a 1b             	or     BYTE PTR [rdx+0x1b],bh
 228:	00 00                	add    BYTE PTR [rax],al
 22a:	18 04 a0             	sbb    BYTE PTR [rax+riz*4],al
 22d:	56                   	push   rsi
 22e:	02 00                	add    al,BYTE PTR [rax]
 230:	00 09                	add    BYTE PTR [rcx],cl
 232:	0b 1a                	or     ebx,DWORD PTR [rdx]
 234:	00 00                	add    BYTE PTR [rax],al
 236:	04 a1                	add    al,0xa1
 238:	56                   	push   rsi
 239:	02 00                	add    al,BYTE PTR [rax]
 23b:	00 00                	add    BYTE PTR [rax],al
 23d:	09 90 41 00 00 04    	or     DWORD PTR [rax+0x4000041],edx
 243:	a2 5c 02 00 00 08 09 	movabs ds:0xedf09080000025c,al
 24a:	df 0e 
 24c:	00 00                	add    BYTE PTR [rax],al
 24e:	04 a6                	add    al,0xa6
 250:	66 00 00             	data16 add BYTE PTR [rax],al
 253:	00 10                	add    BYTE PTR [rax],dl
 255:	00 06                	add    BYTE PTR [rsi],al
 257:	08 25 02 00 00 06    	or     BYTE PTR [rip+0x6000002],ah        # 600025f <_end+0x5dff247>
 25d:	08 9e 00 00 00 0c    	or     BYTE PTR [rsi+0xc000000],bl
 263:	92                   	xchg   edx,eax
 264:	00 00                	add    BYTE PTR [rax],al
 266:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	0d 3c 00 00 00       	or     eax,0x3c
 270:	00 00                	add    BYTE PTR [rax],al
 272:	06                   	(bad)  
 273:	08 1e                	or     BYTE PTR [rsi],bl
 275:	02 00                	add    al,BYTE PTR [rax]
 277:	00 0c 92             	add    BYTE PTR [rdx+rdx*4],cl
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	00 88 02 00 00 0d    	add    BYTE PTR [rax+0xd000002],cl
 282:	3c 00                	cmp    al,0x0
 284:	00 00                	add    BYTE PTR [rax],al
 286:	13 00                	adc    eax,DWORD PTR [rax]
 288:	0e                   	(bad)  
 289:	e0 38                	loopne 2c3 <_init-0x1f5>
 28b:	00 00                	add    BYTE PTR [rax],al
 28d:	0f 4d 25 00 00 04 3f 	cmovge esp,DWORD PTR [rip+0x3f040000]        # 3f040294 <_end+0x3ee3f27c>
 294:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 29a:	c4                   	(bad)  
 29b:	25 00 00 04 40       	and    eax,0x40040000
 2a0:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 2a6:	1c 1f                	sbb    al,0x1f
 2a8:	00 00                	add    BYTE PTR [rax],al
 2aa:	04 41                	add    al,0x41
 2ac:	01 88 02 00 00 06    	add    DWORD PTR [rax+0x6000002],ecx
 2b2:	08 99 00 00 00 07    	or     BYTE PTR [rcx+0x7000000],bl
 2b8:	b1 02                	mov    cl,0x2
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	10 a9 22 00 00 05    	adc    BYTE PTR [rcx+0x5000022],ch
 2c2:	87 5c 02 00          	xchg   DWORD PTR [rdx+rax*1+0x0],ebx
 2c6:	00 10                	add    BYTE PTR [rax],dl
 2c8:	a9 41 00 00 05       	test   eax,0x5000041
 2cd:	88 5c 02 00          	mov    BYTE PTR [rdx+rax*1+0x0],bl
 2d1:	00 10                	add    BYTE PTR [rax],dl
 2d3:	ed                   	in     eax,dx
 2d4:	17                   	(bad)  
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	05 89 5c 02 00       	add    eax,0x25c89
 2dc:	00 10                	add    BYTE PTR [rax],dl
 2de:	eb 15                	jmp    2f5 <_init-0x1c3>
 2e0:	00 00                	add    BYTE PTR [rax],al
 2e2:	06                   	(bad)  
 2e3:	1a 66 00             	sbb    ah,BYTE PTR [rsi+0x0]
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	0c b7                	or     al,0xb7
 2ea:	02 00                	add    al,BYTE PTR [rax]
 2ec:	00 f3                	add    bl,dh
 2ee:	02 00                	add    al,BYTE PTR [rax]
 2f0:	00 11                	add    BYTE PTR [rcx],dl
 2f2:	00 07                	add    BYTE PTR [rdi],al
 2f4:	e8 02 00 00 10       	call   100002fb <_end+0xfdff2e3>
 2f9:	d6                   	(bad)  
 2fa:	14 00                	adc    al,0x0
 2fc:	00 06                	add    BYTE PTR [rsi],al
 2fe:	1b f3                	sbb    esi,ebx
 300:	02 00                	add    al,BYTE PTR [rax]
 302:	00 12                	add    BYTE PTR [rdx],dl
 304:	ae                   	scas   al,BYTE PTR es:[rdi]
 305:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 308:	01 03                	add    DWORD PTR [rbx],eax
 30a:	66 00 00             	data16 add BYTE PTR [rax],al
 30d:	00 fa                	add    dl,bh
 30f:	05 00 00 00 00       	add    eax,0x0
 314:	00 00                	add    BYTE PTR [rax],al
 316:	2a 00                	sub    al,BYTE PTR [rax]
 318:	00 00                	add    BYTE PTR [rax],al
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	00 00                	add    BYTE PTR [rax],al
 31e:	01 9c 65 03 00 00 13 	add    DWORD PTR [rbp+riz*2+0x13000003],ebx
 325:	33 07                	xor    eax,DWORD PTR [rdi]
 327:	00 00                	add    BYTE PTR [rax],al
 329:	01 03                	add    DWORD PTR [rbx],eax
 32b:	66 00 00             	data16 add BYTE PTR [rax],al
 32e:	00 02                	add    BYTE PTR [rdx],al
 330:	91                   	xchg   ecx,eax
 331:	5c                   	pop    rsp
 332:	13 03                	adc    eax,DWORD PTR [rbx]
 334:	1d 00 00 01 03       	sbb    eax,0x3010000
 339:	65 03 00             	add    eax,DWORD PTR gs:[rax]
 33c:	00 02                	add    BYTE PTR [rdx],al
 33e:	91                   	xchg   ecx,eax
 33f:	50                   	push   rax
 340:	14 61                	adc    al,0x61
 342:	00 01                	add    BYTE PTR [rcx],al
 344:	05 66 00 00 00       	add    eax,0x66
 349:	02 91 64 14 62 00    	add    dl,BYTE PTR [rcx+0x621464]
 34f:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3bb <_init-0xfd>
 355:	02 91 68 14 63 00    	add    dl,BYTE PTR [rcx+0x631468]
 35b:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3c7 <_init-0xf1>
 361:	02 91 6c 00 06 08    	add    dl,BYTE PTR [rcx+0x806006c]
 367:	8c 00                	mov    WORD PTR [rax],es
 369:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2eb02fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	99                   	cdq    
  12:	42 17                	rex.X (bad) 
  14:	00 00                	add    BYTE PTR [rax],al
  16:	02 16                	add    dl,BYTE PTR [rsi]
  18:	00 03                	add    BYTE PTR [rbx],al
  1a:	0e                   	(bad)  
  1b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  1f:	49 13 00             	adc    rax,QWORD PTR [r8]
  22:	00 03                	add    BYTE PTR [rbx],al
  24:	24 00                	and    al,0x0
  26:	0b 0b                	or     ecx,DWORD PTR [rbx]
  28:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  2b:	0e                   	(bad)  
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	04 24                	add    al,0x24
  30:	00 0b                	add    BYTE PTR [rbx],cl
  32:	0b 3e                	or     edi,DWORD PTR [rsi]
  34:	0b 03                	or     eax,DWORD PTR [rbx]
  36:	08 00                	or     BYTE PTR [rax],al
  38:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b004d <_end+0xaeaf035>
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	06                   	(bad)  
  41:	0f 00 0b             	str    WORD PTR [rbx]
  44:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  47:	00 00                	add    BYTE PTR [rax],al
  49:	07                   	(bad)  
  4a:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	08 13                	or     BYTE PTR [rbx],dl
  52:	01 03                	add    DWORD PTR [rbx],eax
  54:	0e                   	(bad)  
  55:	0b 0b                	or     ecx,DWORD PTR [rbx]
  57:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  59:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5b:	01 13                	add    DWORD PTR [rbx],edx
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0365 <_end+0x39edf34d>
  65:	0b 3b                	or     edi,DWORD PTR [rbx]
  67:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  6a:	38 0b                	cmp    BYTE PTR [rbx],cl
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0374 <_end+0x39edf35c>
  74:	0b 3b                	or     edi,DWORD PTR [rbx]
  76:	05 49 13 38 0b       	add    eax,0xb381349
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	0b 16                	or     edx,DWORD PTR [rsi]
  7f:	00 03                	add    BYTE PTR [rbx],al
  81:	0e                   	(bad)  
  82:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  84:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  86:	00 00                	add    BYTE PTR [rax],al
  88:	0c 01                	or     al,0x1
  8a:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
  8d:	01 13                	add    DWORD PTR [rbx],edx
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	0d 21 00 49 13       	or     eax,0x13490021
  96:	2f                   	(bad)  
  97:	0b 00                	or     eax,DWORD PTR [rax]
  99:	00 0e                	add    BYTE PTR [rsi],cl
  9b:	13 00                	adc    eax,DWORD PTR [rax]
  9d:	03 0e                	add    ecx,DWORD PTR [rsi]
  9f:	3c 19                	cmp    al,0x19
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	0f 34                	sysenter 
  a5:	00 03                	add    BYTE PTR [rbx],al
  a7:	0e                   	(bad)  
  a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  aa:	3b 05 49 13 3f 19    	cmp    eax,DWORD PTR [rip+0x193f1349]        # 193f13f9 <_end+0x191f03e1>
  b0:	3c 19                	cmp    al,0x19
  b2:	00 00                	add    BYTE PTR [rax],al
  b4:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
  b7:	03 0e                	add    ecx,DWORD PTR [rsi]
  b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  bd:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  c0:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	11 21                	adc    DWORD PTR [rcx],esp
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 12                	add    BYTE PTR [rdx],dl
  cb:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  ce:	19 03                	sbb    DWORD PTR [rbx],eax
  d0:	0e                   	(bad)  
  d1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  d3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  d5:	27                   	(bad)  
  d6:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  d9:	11 01                	adc    DWORD PTR [rcx],eax
  db:	12 07                	adc    al,BYTE PTR [rdi]
  dd:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e03ec <_end+0x39edf3d4>
  ec:	0b 3b                	or     edi,DWORD PTR [rbx]
  ee:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  f1:	02 18                	add    bl,BYTE PTR [rax]
  f3:	00 00                	add    BYTE PTR [rax],al
  f5:	14 34                	adc    al,0x34
  f7:	00 03                	add    BYTE PTR [rbx],al
  f9:	08 3a                	or     BYTE PTR [rdx],bh
  fb:	0b 3b                	or     edi,DWORD PTR [rbx]
  fd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 100:	02 18                	add    bl,BYTE PTR [rax]
 102:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	29 02                	sub    DWORD PTR [rdx],eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	0e                   	(bad)  
   7:	02 00                	add    al,BYTE PTR [rax]
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0x427>
  1e:	72 2f                	jb     4f <_init-0x469>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0x456>
  2a:	36 5f                	ss pop rdi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[rdi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0x450>
  39:	37                   	(bad)  
  3a:	2f                   	(bad)  
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [rdi],ch
  44:	75 73                	jne    b9 <_init-0x3ff>
  46:	72 2f                	jb     77 <_init-0x441>
  48:	78 38                	js     82 <_init-0x436>
  4a:	36 5f                	ss pop rdi
  4c:	36 34 2d             	ss xor al,0x2d
  4f:	6c                   	ins    BYTE PTR es:[rdi],dx
  50:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  57:	75 2f                	jne    88 <_init-0x430>
  59:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  60:	2f                   	(bad)  
  61:	62                   	(bad)  
  62:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
  69:	72 
  6a:	2f                   	(bad)  
  6b:	78 38                	js     a5 <_init-0x413>
  6d:	36 5f                	ss pop rdi
  6f:	36 34 2d             	ss xor al,0x2d
  72:	6c                   	ins    BYTE PTR es:[rdi],dx
  73:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  7a:	75 2f                	jne    ab <_init-0x40d>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	00 2f                	add    BYTE PTR [rdi],ch
  85:	75 73                	jne    fa <_init-0x3be>
  87:	72 2f                	jb     b8 <_init-0x400>
  89:	78 38                	js     c3 <_init-0x3f5>
  8b:	36 5f                	ss pop rdi
  8d:	36 34 2d             	ss xor al,0x2d
  90:	6c                   	ins    BYTE PTR es:[rdi],dx
  91:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  98:	75 2f                	jne    c9 <_init-0x3ef>
  9a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a1:	2f                   	(bad)  
  a2:	73 79                	jae    11d <_init-0x39b>
  a4:	73 00                	jae    a6 <_init-0x412>
  a6:	2f                   	(bad)  
  a7:	75 73                	jne    11c <_init-0x39c>
  a9:	72 2f                	jb     da <_init-0x3de>
  ab:	78 38                	js     e5 <_init-0x3d3>
  ad:	36 5f                	ss pop rdi
  af:	36 34 2d             	ss xor al,0x2d
  b2:	6c                   	ins    BYTE PTR es:[rdi],dx
  b3:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  ba:	75 2f                	jne    eb <_init-0x3cd>
  bc:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  c3:	2f                   	(bad)  
  c4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  c6:	75 00                	jne    c8 <_init-0x3f0>
  c8:	2f                   	(bad)  
  c9:	75 73                	jne    13e <_init-0x37a>
  cb:	72 2f                	jb     fc <_init-0x3bc>
  cd:	78 38                	js     107 <_init-0x3b1>
  cf:	36 5f                	ss pop rdi
  d1:	36 34 2d             	ss xor al,0x2d
  d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  d5:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  dc:	75 2f                	jne    10d <_init-0x3ab>
  de:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e5:	2f                   	(bad)  
  e6:	62                   	(bad)  
  e7:	69 74 73 2f 74 79 70 	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65707974
  ee:	65 
  ef:	73 00                	jae    f1 <_init-0x3c7>
  f1:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
  f4:	6c                   	ins    BYTE PTR es:[rdi],dx
  f5:	74 5f                	je     156 <_init-0x362>
  f7:	69 6e 74 2e 63 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x632e
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	73 74                	jae    176 <_init-0x342>
 102:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
 109:	01 
 10a:	00 00                	add    BYTE PTR [rax],al
 10c:	74 79                	je     187 <_init-0x331>
 10e:	70 65                	jo     175 <_init-0x343>
 110:	73 2e                	jae    140 <_init-0x378>
 112:	68 00 02 00 00       	push   0x200
 117:	6c                   	ins    BYTE PTR es:[rdi],dx
 118:	69 62 69 6f 2e 68 00 	imul   esp,DWORD PTR [rdx+0x69],0x682e6f
 11f:	02 00                	add    al,BYTE PTR [rax]
 121:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 124:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x30068
 12b:	00 
 12c:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 12f:	73 5f                	jae    190 <_init-0x328>
 131:	65 72 72             	gs jb  1a6 <_init-0x312>
 134:	6c                   	ins    BYTE PTR es:[rdi],dx
 135:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
 13c:	00 00                	add    BYTE PTR [rax],al
 13e:	73 74                	jae    1b4 <_init-0x304>
 140:	64 63 2d 70 72 65 64 	movsxd ebp,DWORD PTR fs:[rip+0x64657270]        # 646573b7 <_end+0x6445639f>
 147:	65 66 2e 68 00 03    	gs cs pushw 0x300
 14d:	00 00                	add    BYTE PTR [rax],al
 14f:	6c                   	ins    BYTE PTR es:[rdi],dx
 150:	69 62 63 2d 68 65 61 	imul   esp,DWORD PTR [rdx+0x63],0x6165682d
 157:	64 65 72 2d          	fs gs jb 188 <_init-0x330>
 15b:	73 74                	jae    1d1 <_init-0x2e7>
 15d:	61                   	(bad)  
 15e:	72 74                	jb     1d4 <_init-0x2e4>
 160:	2e 68 00 02 00 00    	cs push 0x200
 166:	66 65 61             	data16 gs (bad) 
 169:	74 75                	je     1e0 <_init-0x2d8>
 16b:	72 65                	jb     1d2 <_init-0x2e6>
 16d:	73 2e                	jae    19d <_init-0x31b>
 16f:	68 00 03 00 00       	push   0x300
 174:	63 64 65 66          	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
 178:	73 2e                	jae    1a8 <_init-0x310>
 17a:	68 00 04 00 00       	push   0x400
 17f:	77 6f                	ja     1f0 <_init-0x2c8>
 181:	72 64                	jb     1e7 <_init-0x2d1>
 183:	73 69                	jae    1ee <_init-0x2ca>
 185:	7a 65                	jp     1ec <_init-0x2cc>
 187:	2e 68 00 02 00 00    	cs push 0x200
 18d:	6c                   	ins    BYTE PTR es:[rdi],dx
 18e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 18f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 190:	67 2d 64 6f 75 62    	addr32 sub eax,0x62756f64
 196:	6c                   	ins    BYTE PTR es:[rdi],dx
 197:	65 2e 68 00 02 00 00 	gs cs push 0x200
 19e:	73 74                	jae    214 <_init-0x2a4>
 1a0:	75 62                	jne    204 <_init-0x2b4>
 1a2:	73 2e                	jae    1d2 <_init-0x2e6>
 1a4:	68 00 05 00 00       	push   0x500
 1a9:	73 74                	jae    21f <_init-0x299>
 1ab:	75 62                	jne    20f <_init-0x2a9>
 1ad:	73 2d                	jae    1dc <_init-0x2dc>
 1af:	36 34 2e             	ss xor al,0x2e
 1b2:	68 00 05 00 00       	push   0x500
 1b7:	74 79                	je     232 <_init-0x286>
 1b9:	70 65                	jo     220 <_init-0x298>
 1bb:	73 69                	jae    226 <_init-0x292>
 1bd:	7a 65                	jp     224 <_init-0x294>
 1bf:	73 2e                	jae    1ef <_init-0x2c9>
 1c1:	68 00 02 00 00       	push   0x200
 1c6:	5f                   	pop    rdi
 1c7:	5f                   	pop    rdi
 1c8:	46                   	rex.RX
 1c9:	49                   	rex.WB
 1ca:	4c                   	rex.WR
 1cb:	45                   	rex.RB
 1cc:	2e 68 00 06 00 00    	cs push 0x600
 1d2:	46                   	rex.RX
 1d3:	49                   	rex.WB
 1d4:	4c                   	rex.WR
 1d5:	45                   	rex.RB
 1d6:	2e 68 00 06 00 00    	cs push 0x600
 1dc:	5f                   	pop    rdi
 1dd:	47 5f                	rex.RXB pop r15
 1df:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 1e2:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 1e8:	02 00                	add    al,BYTE PTR [rax]
 1ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 1ed:	6d                   	ins    DWORD PTR es:[rdi],dx
 1ee:	62 73 74 61 74       	(bad)  {k1}
 1f3:	65 5f                	gs pop rdi
 1f5:	74 2e                	je     225 <_init-0x293>
 1f7:	68 00 06 00 00       	push   0x600
 1fc:	73 74                	jae    272 <_init-0x246>
 1fe:	64 61                	fs (bad) 
 200:	72 67                	jb     269 <_init-0x24f>
 202:	2e 68 00 01 00 00    	cs push 0x100
 208:	73 74                	jae    27e <_init-0x23a>
 20a:	64 69 6f 5f 6c 69 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x2e6d696c
 211:	2e 
 212:	68 00 02 00 00       	push   0x200
 217:	00 00                	add    BYTE PTR [rax],al
 219:	09 02                	or     DWORD PTR [rdx],eax
 21b:	fa                   	cli    
 21c:	05 00 00 00 00       	add    eax,0x0
 221:	00 00                	add    BYTE PTR [rax],al
 223:	15 af 75 76 e5       	adc    eax,0xe57675af
 228:	02 02                	add    al,BYTE PTR [rdx]
 22a:	00 01                	add    BYTE PTR [rcx],al
 22c:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	49                   	rex.WB
       2:	4f 5f                	rex.WRXB pop r15
       4:	44                   	rex.R
       5:	45                   	rex.RB
       6:	43 20 30             	rex.XB and BYTE PTR [r8],sil
       9:	32 30                	xor    dh,BYTE PTR [rax]
       b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
       e:	53                   	push   rbx
       f:	49                   	rex.WB
      10:	47 5f                	rex.RXB pop r15
      12:	41 54                	push   r12
      14:	4f                   	rex.WRXB
      15:	4d                   	rex.WRB
      16:	49                   	rex.WB
      17:	43 5f                	rex.XB pop r15
      19:	4d                   	rex.WRB
      1a:	41 58                	pop    r8
      1c:	5f                   	pop    rdi
      1d:	5f                   	pop    rdi
      1e:	20 30                	and    BYTE PTR [rax],dh
      20:	78 37                	js     59 <_init-0x45f>
      22:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
      29:	00 5f 5f 
      2c:	46                   	rex.RX
      2d:	4c 54                	rex.WR push rsp
      2f:	36 34 5f             	ss xor al,0x5f
      32:	48                   	rex.W
      33:	41 53                	push   r11
      35:	5f                   	pop    rdi
      36:	51                   	push   rcx
      37:	55                   	push   rbp
      38:	49                   	rex.WB
      39:	45 54                	rex.RB push r12
      3b:	5f                   	pop    rdi
      3c:	4e                   	rex.WRX
      3d:	41                   	rex.B
      3e:	4e 5f                	rex.WRX pop rdi
      40:	5f                   	pop    rdi
      41:	20 31                	and    BYTE PTR [rcx],dh
      43:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
      46:	49 5a                	rex.WB pop r10
      48:	45 5f                	rex.RB pop r15
      4a:	54                   	push   rsp
      4b:	5f                   	pop    rdi
      4c:	44                   	rex.R
      4d:	45                   	rex.RB
      4e:	46                   	rex.RX
      4f:	49                   	rex.WB
      50:	4e                   	rex.WRX
      51:	45                   	rex.RB
      52:	44 20 00             	and    BYTE PTR [rax],r8b
      55:	5f                   	pop    rdi
      56:	5f                   	pop    rdi
      57:	44                   	rex.R
      58:	45                   	rex.RB
      59:	43                   	rex.XB
      5a:	36 34 5f             	ss xor al,0x5f
      5d:	53                   	push   rbx
      5e:	55                   	push   rbp
      5f:	42                   	rex.X
      60:	4e                   	rex.WRX
      61:	4f 52                	rex.WRXB push r10
      63:	4d                   	rex.WRB
      64:	41                   	rex.B
      65:	4c 5f                	rex.WR pop rdi
      67:	4d                   	rex.WRB
      68:	49                   	rex.WB
      69:	4e 5f                	rex.WRX pop rdi
      6b:	5f                   	pop    rdi
      6c:	20 30                	and    BYTE PTR [rax],dh
      6e:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
      71:	30 30                	xor    BYTE PTR [rax],dh
      73:	30 30                	xor    BYTE PTR [rax],dh
      75:	30 30                	xor    BYTE PTR [rax],dh
      77:	30 30                	xor    BYTE PTR [rax],dh
      79:	30 30                	xor    BYTE PTR [rax],dh
      7b:	30 30                	xor    BYTE PTR [rax],dh
      7d:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
      80:	33 38                	xor    edi,DWORD PTR [rax]
      82:	33 44 44 00          	xor    eax,DWORD PTR [rsp+rax*2+0x0]
      86:	5f                   	pop    rdi
      87:	5f                   	pop    rdi
      88:	46                   	rex.RX
      89:	4c 54                	rex.WR push rsp
      8b:	33 32                	xor    esi,DWORD PTR [rdx]
      8d:	5f                   	pop    rdi
      8e:	48                   	rex.W
      8f:	41 53                	push   r11
      91:	5f                   	pop    rdi
      92:	49                   	rex.WB
      93:	4e                   	rex.WRX
      94:	46                   	rex.RX
      95:	49                   	rex.WB
      96:	4e                   	rex.WRX
      97:	49 54                	rex.WB push r12
      99:	59                   	pop    rcx
      9a:	5f                   	pop    rdi
      9b:	5f                   	pop    rdi
      9c:	20 31                	and    BYTE PTR [rcx],dh
      9e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      a1:	46                   	rex.RX
      a2:	4c 54                	rex.WR push rsp
      a4:	36 34 5f             	ss xor al,0x5f
      a7:	4d                   	rex.WRB
      a8:	41 58                	pop    r8
      aa:	5f                   	pop    rdi
      ab:	45 58                	rex.RB pop r8
      ad:	50                   	push   rax
      ae:	5f                   	pop    rdi
      af:	5f                   	pop    rdi
      b0:	20 31                	and    BYTE PTR [rcx],dh
      b2:	30 32                	xor    BYTE PTR [rdx],dh
      b4:	34 00                	xor    al,0x0
      b6:	5f                   	pop    rdi
      b7:	5f                   	pop    rdi
      b8:	46                   	rex.RX
      b9:	4c 54                	rex.WR push rsp
      bb:	5f                   	pop    rdi
      bc:	4d                   	rex.WRB
      bd:	49                   	rex.WB
      be:	4e 5f                	rex.WRX pop rdi
      c0:	31 30                	xor    DWORD PTR [rax],esi
      c2:	5f                   	pop    rdi
      c3:	45 58                	rex.RB pop r8
      c5:	50                   	push   rax
      c6:	5f                   	pop    rdi
      c7:	5f                   	pop    rdi
      c8:	20 28                	and    BYTE PTR [rax],ch
      ca:	2d 33 37 29 00       	sub    eax,0x293733
      cf:	5f                   	pop    rdi
      d0:	5f                   	pop    rdi
      d1:	53                   	push   rbx
      d2:	59                   	pop    rcx
      d3:	53                   	push   rbx
      d4:	43                   	rex.XB
      d5:	41                   	rex.B
      d6:	4c                   	rex.WR
      d7:	4c 5f                	rex.WR pop rdi
      d9:	55                   	push   rbp
      da:	4c                   	rex.WR
      db:	4f                   	rex.WRXB
      dc:	4e                   	rex.WRX
      dd:	47 5f                	rex.RXB pop r15
      df:	54                   	push   rsp
      e0:	59                   	pop    rcx
      e1:	50                   	push   rax
      e2:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
      e6:	55                   	push   rbp
      e7:	4c                   	rex.WR
      e8:	4f                   	rex.WRXB
      e9:	4e                   	rex.WRX
      ea:	47 57                	rex.RXB push r15
      ec:	4f 52                	rex.WRXB push r10
      ee:	44 5f                	rex.R pop rdi
      f0:	54                   	push   rsp
      f1:	59                   	pop    rcx
      f2:	50                   	push   rax
      f3:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
      f7:	46                   	rex.RX
      f8:	4c 54                	rex.WR push rsp
      fa:	36 34 58             	ss xor al,0x58
      fd:	5f                   	pop    rdi
      fe:	45 50                	rex.RB push r8
     100:	53                   	push   rbx
     101:	49                   	rex.WB
     102:	4c                   	rex.WR
     103:	4f                   	rex.WRXB
     104:	4e 5f                	rex.WRX pop rdi
     106:	5f                   	pop    rdi
     107:	20 31                	and    BYTE PTR [rcx],dh
     109:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
     10c:	34 32                	xor    al,0x32
     10e:	30 32                	xor    BYTE PTR [rdx],dh
     110:	31 37                	xor    DWORD PTR [rdi],esi
     112:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     115:	35 35 30 34 34       	xor    eax,0x34343035
     11a:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
     11d:	30 37                	xor    BYTE PTR [rdi],dh
     11f:	34 35                	xor    al,0x35
     121:	32 38                	xor    bh,BYTE PTR [rax]
     123:	30 30                	xor    BYTE PTR [rax],dh
     125:	38 36                	cmp    BYTE PTR [rsi],dh
     127:	39 39                	cmp    DWORD PTR [rcx],edi
     129:	34 31                	xor    al,0x31
     12b:	37                   	(bad)  
     12c:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
     12f:	31 39                	xor    DWORD PTR [rcx],edi
     131:	46                   	rex.RX
     132:	36 34 78             	ss xor al,0x78
     135:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     138:	46                   	rex.RX
     139:	4c 54                	rex.WR push rsp
     13b:	33 32                	xor    esi,DWORD PTR [rdx]
     13d:	58                   	pop    rax
     13e:	5f                   	pop    rdi
     13f:	4d                   	rex.WRB
     140:	41 58                	pop    r8
     142:	5f                   	pop    rdi
     143:	45 58                	rex.RB pop r8
     145:	50                   	push   rax
     146:	5f                   	pop    rdi
     147:	5f                   	pop    rdi
     148:	20 31                	and    BYTE PTR [rcx],dh
     14a:	30 32                	xor    BYTE PTR [rdx],dh
     14c:	34 00                	xor    al,0x0
     14e:	5f                   	pop    rdi
     14f:	73 68                	jae    1b9 <_init-0x2ff>
     151:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     152:	72 74                	jb     1c8 <_init-0x2f0>
     154:	62                   	(bad)  
     155:	75 66                	jne    1bd <_init-0x2fb>
     157:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     15a:	47                   	rex.RXB
     15b:	43                   	rex.XB
     15c:	43 5f                	rex.XB pop r15
     15e:	41 54                	push   r12
     160:	4f                   	rex.WRXB
     161:	4d                   	rex.WRB
     162:	49                   	rex.WB
     163:	43 5f                	rex.XB pop r15
     165:	54                   	push   rsp
     166:	45 53                	rex.RB push r11
     168:	54                   	push   rsp
     169:	5f                   	pop    rdi
     16a:	41                   	rex.B
     16b:	4e                   	rex.WRX
     16c:	44 5f                	rex.R pop rdi
     16e:	53                   	push   rbx
     16f:	45 54                	rex.RB push r12
     171:	5f                   	pop    rdi
     172:	54                   	push   rsp
     173:	52                   	push   rdx
     174:	55                   	push   rbp
     175:	45 56                	rex.RB push r14
     177:	41                   	rex.B
     178:	4c 20 31             	rex.WR and BYTE PTR [rcx],r14b
     17b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     17e:	4f                   	rex.WRXB
     17f:	46                   	rex.RX
     180:	46 5f                	rex.RX pop rdi
     182:	54                   	push   rsp
     183:	5f                   	pop    rdi
     184:	4d                   	rex.WRB
     185:	41 54                	push   r12
     187:	43                   	rex.XB
     188:	48                   	rex.W
     189:	45 53                	rex.RB push r11
     18b:	5f                   	pop    rdi
     18c:	4f                   	rex.WRXB
     18d:	46                   	rex.RX
     18e:	46                   	rex.RX
     18f:	36 34 5f             	ss xor al,0x5f
     192:	54                   	push   rsp
     193:	20 31                	and    BYTE PTR [rcx],dh
     195:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     198:	44                   	rex.R
     199:	45                   	rex.RB
     19a:	43                   	rex.XB
     19b:	36 34 5f             	ss xor al,0x5f
     19e:	45 50                	rex.RB push r8
     1a0:	53                   	push   rbx
     1a1:	49                   	rex.WB
     1a2:	4c                   	rex.WR
     1a3:	4f                   	rex.WRXB
     1a4:	4e 5f                	rex.WRX pop rdi
     1a6:	5f                   	pop    rdi
     1a7:	20 31                	and    BYTE PTR [rcx],dh
     1a9:	45 2d 31 35 44 44    	rex.RB sub eax,0x44443531
     1af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1b2:	44                   	rex.R
     1b3:	42                   	rex.X
     1b4:	4c 5f                	rex.WR pop rdi
     1b6:	44                   	rex.R
     1b7:	45                   	rex.RB
     1b8:	4e                   	rex.WRX
     1b9:	4f 52                	rex.WRXB push r10
     1bb:	4d 5f                	rex.WRB pop r15
     1bd:	4d                   	rex.WRB
     1be:	49                   	rex.WB
     1bf:	4e 5f                	rex.WRX pop rdi
     1c1:	5f                   	pop    rdi
     1c2:	20 28                	and    BYTE PTR [rax],ch
     1c4:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     1c8:	62                   	(bad)  
     1c9:	6c                   	ins    BYTE PTR es:[rdi],dx
     1ca:	65 29 34 2e          	sub    DWORD PTR gs:[rsi+rbp*1],esi
     1ce:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
     1d1:	36 35 36 34 35 38    	ss xor eax,0x38353436
     1d7:	34 31                	xor    al,0x31
     1d9:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
     1dc:	35 34 34 31 37       	xor    eax,0x37313434
     1e1:	36 35 36 38 37 39    	ss xor eax,0x39373836
     1e7:	32 38                	xor    bh,BYTE PTR [rax]
     1e9:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
     1ec:	32 31                	xor    dh,BYTE PTR [rcx]
     1ee:	33 37                	xor    esi,DWORD PTR [rdi]
     1f0:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     1f3:	33 32                	xor    esi,DWORD PTR [rdx]
     1f5:	34 4c                	xor    al,0x4c
     1f7:	29 00                	sub    DWORD PTR [rax],eax
     1f9:	5f                   	pop    rdi
     1fa:	49                   	rex.WB
     1fb:	4f 5f                	rex.WRXB pop r15
     1fd:	6c                   	ins    BYTE PTR es:[rdi],dx
     1fe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ff:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     202:	74 00                	je     204 <_init-0x2b4>
     204:	5f                   	pop    rdi
     205:	5f                   	pop    rdi
     206:	49                   	rex.WB
     207:	4e 54                	rex.WRX push rsp
     209:	50                   	push   rax
     20a:	54                   	push   rsp
     20b:	52                   	push   rdx
     20c:	5f                   	pop    rdi
     20d:	4d                   	rex.WRB
     20e:	41 58                	pop    r8
     210:	5f                   	pop    rdi
     211:	5f                   	pop    rdi
     212:	20 30                	and    BYTE PTR [rax],dh
     214:	78 37                	js     24d <_init-0x26b>
     216:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     21d:	66 66 66 66 66 66 66 
     224:	66 4c 00 5f 47       	data16 rex.WR add BYTE PTR [rdi+0x47],r11b
     229:	5f                   	pop    rdi
     22a:	48                   	rex.W
     22b:	41 56                	push   r14
     22d:	45 5f                	rex.RB pop r15
     22f:	53                   	push   rbx
     230:	54                   	push   rsp
     231:	5f                   	pop    rdi
     232:	42                   	rex.X
     233:	4c                   	rex.WR
     234:	4b 53                	rex.WXB push r11
     236:	49 5a                	rex.WB pop r10
     238:	45 20 64 65 66       	and    BYTE PTR [r13+riz*2+0x66],r12b
     23d:	69 6e 65 64 20 28 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f282064
     244:	53                   	push   rbx
     245:	54                   	push   rsp
     246:	41 54                	push   r12
     248:	42 55                	rex.X push rbp
     24a:	46 5f                	rex.RX pop rdi
     24c:	53                   	push   rbx
     24d:	54                   	push   rsp
     24e:	5f                   	pop    rdi
     24f:	42                   	rex.X
     250:	4c                   	rex.WR
     251:	4b 53                	rex.WXB push r11
     253:	49 5a                	rex.WB pop r10
     255:	45 29 00             	sub    DWORD PTR [r8],r8d
     258:	5f                   	pop    rdi
     259:	5f                   	pop    rdi
     25a:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     25c:	65 78 61             	gs js  2c0 <_init-0x1f8>
     25f:	72 72                	jb     2d3 <_init-0x1e5>
     261:	20 5b 5d             	and    BYTE PTR [rbx+0x5d],bl
     264:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     267:	46                   	rex.RX
     268:	4c 54                	rex.WR push rsp
     26a:	33 32                	xor    esi,DWORD PTR [rdx]
     26c:	5f                   	pop    rdi
     26d:	4d                   	rex.WRB
     26e:	41                   	rex.B
     26f:	4e 54                	rex.WRX push rsp
     271:	5f                   	pop    rdi
     272:	44                   	rex.R
     273:	49                   	rex.WB
     274:	47 5f                	rex.RXB pop r15
     276:	5f                   	pop    rdi
     277:	20 32                	and    BYTE PTR [rdx],dh
     279:	34 00                	xor    al,0x0
     27b:	5f                   	pop    rdi
     27c:	5f                   	pop    rdi
     27d:	47                   	rex.RXB
     27e:	43                   	rex.XB
     27f:	43 5f                	rex.XB pop r15
     281:	48                   	rex.W
     282:	41 56                	push   r14
     284:	45 5f                	rex.RB pop r15
     286:	53                   	push   rbx
     287:	59                   	pop    rcx
     288:	4e                   	rex.WRX
     289:	43 5f                	rex.XB pop r15
     28b:	43                   	rex.XB
     28c:	4f                   	rex.WRXB
     28d:	4d 50                	rex.WRB push r8
     28f:	41 52                	push   r10
     291:	45 5f                	rex.RB pop r15
     293:	41                   	rex.B
     294:	4e                   	rex.WRX
     295:	44 5f                	rex.R pop rdi
     297:	53                   	push   rbx
     298:	57                   	push   rdi
     299:	41 50                	push   r8
     29b:	5f                   	pop    rdi
     29c:	38 20                	cmp    BYTE PTR [rax],ah
     29e:	31 00                	xor    DWORD PTR [rax],eax
     2a0:	6d                   	ins    DWORD PTR es:[rdi],dx
     2a1:	75 6c                	jne    30f <_init-0x1a9>
     2a3:	74 5f                	je     304 <_init-0x1b4>
     2a5:	69 6e 74 2e 63 00 46 	imul   ebp,DWORD PTR [rsi+0x74],0x4600632e
     2ac:	49                   	rex.WB
     2ad:	4c                   	rex.WR
     2ae:	45                   	rex.RB
     2af:	4e                   	rex.WRX
     2b0:	41                   	rex.B
     2b1:	4d                   	rex.WRB
     2b2:	45 5f                	rex.RB pop r15
     2b4:	4d                   	rex.WRB
     2b5:	41 58                	pop    r8
     2b7:	20 34 30             	and    BYTE PTR [rax+rsi*1],dh
     2ba:	39 36                	cmp    DWORD PTR [rsi],esi
     2bc:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     2bf:	54                   	push   rsp
     2c0:	44                   	rex.R
     2c1:	43 5f                	rex.XB pop r15
     2c3:	50                   	push   rax
     2c4:	52                   	push   rdx
     2c5:	45                   	rex.RB
     2c6:	44                   	rex.R
     2c7:	45                   	rex.RB
     2c8:	46 5f                	rex.RX pop rdi
     2ca:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     2cd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2d0:	55                   	push   rbp
     2d1:	53                   	push   rbx
     2d2:	45 5f                	rex.RB pop r15
     2d4:	49 53                	rex.WB push r11
     2d6:	4f                   	rex.WRXB
     2d7:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
     2da:	20 31                	and    BYTE PTR [rcx],dh
     2dc:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     2df:	4f                   	rex.WRXB
     2e0:	46                   	rex.RX
     2e1:	42                   	rex.X
     2e2:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     2e5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     2e8:	4f 5f                	rex.WRXB pop r15
     2ea:	62                   	(bad)  
     2eb:	75 66                	jne    353 <_init-0x165>
     2ed:	5f                   	pop    rdi
     2ee:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     2f0:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     2f4:	49                   	rex.WB
     2f5:	4e 54                	rex.WRX push rsp
     2f7:	5f                   	pop    rdi
     2f8:	46                   	rex.RX
     2f9:	41 53                	push   r11
     2fb:	54                   	push   rsp
     2fc:	36 34 5f             	ss xor al,0x5f
     2ff:	57                   	push   rdi
     300:	49                   	rex.WB
     301:	44 54                	rex.R push rsp
     303:	48 5f                	rex.W pop rdi
     305:	5f                   	pop    rdi
     306:	20 36                	and    BYTE PTR [rsi],dh
     308:	34 00                	xor    al,0x0
     30a:	5f                   	pop    rdi
     30b:	49                   	rex.WB
     30c:	4f 5f                	rex.WRXB pop r15
     30e:	45                   	rex.RB
     30f:	4f                   	rex.WRXB
     310:	46 5f                	rex.RX pop rdi
     312:	53                   	push   rbx
     313:	45                   	rex.RB
     314:	45                   	rex.RB
     315:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
     318:	78 31                	js     34b <_init-0x16d>
     31a:	30 00                	xor    BYTE PTR [rax],al
     31c:	53                   	push   rbx
     31d:	45                   	rex.RB
     31e:	45                   	rex.RB
     31f:	4b 5f                	rex.WXB pop r15
     321:	43 55                	rex.XB push r13
     323:	52                   	push   rdx
     324:	20 31                	and    BYTE PTR [rcx],dh
     326:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     329:	46                   	rex.RX
     32a:	4c 54                	rex.WR push rsp
     32c:	33 32                	xor    esi,DWORD PTR [rdx]
     32e:	58                   	pop    rax
     32f:	5f                   	pop    rdi
     330:	44                   	rex.R
     331:	45                   	rex.RB
     332:	43                   	rex.XB
     333:	49                   	rex.WB
     334:	4d                   	rex.WRB
     335:	41                   	rex.B
     336:	4c 5f                	rex.WR pop rdi
     338:	44                   	rex.R
     339:	49                   	rex.WB
     33a:	47 5f                	rex.RXB pop r15
     33c:	5f                   	pop    rdi
     33d:	20 31                	and    BYTE PTR [rcx],dh
     33f:	37                   	(bad)  
     340:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     343:	6b 38 5f             	imul   edi,DWORD PTR [rax],0x5f
     346:	5f                   	pop    rdi
     347:	20 31                	and    BYTE PTR [rcx],dh
     349:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     34c:	44                   	rex.R
     34d:	42                   	rex.X
     34e:	4c 5f                	rex.WR pop rdi
     350:	4d                   	rex.WRB
     351:	49                   	rex.WB
     352:	4e 5f                	rex.WRX pop rdi
     354:	45 58                	rex.RB pop r8
     356:	50                   	push   rax
     357:	5f                   	pop    rdi
     358:	5f                   	pop    rdi
     359:	20 28                	and    BYTE PTR [rax],ch
     35b:	2d 31 30 32 31       	sub    eax,0x31323031
     360:	29 00                	sub    DWORD PTR [rax],eax
     362:	5f                   	pop    rdi
     363:	5f                   	pop    rdi
     364:	49                   	rex.WB
     365:	4e 54                	rex.WRX push rsp
     367:	5f                   	pop    rdi
     368:	46                   	rex.RX
     369:	41 53                	push   r11
     36b:	54                   	push   rsp
     36c:	36 34 5f             	ss xor al,0x5f
     36f:	4d                   	rex.WRB
     370:	41 58                	pop    r8
     372:	5f                   	pop    rdi
     373:	5f                   	pop    rdi
     374:	20 30                	and    BYTE PTR [rax],dh
     376:	78 37                	js     3af <_init-0x109>
     378:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     37f:	66 66 66 66 66 66 66 
     386:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     38b:	68 61 73 5f 69       	push   0x695f7361
     390:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     391:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     395:	65 5f                	gs pop rdi
     397:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     398:	65 78 74             	gs js  40f <_init-0xa9>
     39b:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     39e:	52                   	push   rdx
     39f:	29 20                	sub    DWORD PTR [rax],esp
     3a1:	5f                   	pop    rdi
     3a2:	5f                   	pop    rdi
     3a3:	68 61 73 5f 69       	push   0x695f7361
     3a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3a9:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     3ad:	65 5f                	gs pop rdi
     3af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3b0:	65 78 74             	gs js  427 <_init-0x91>
     3b3:	5f                   	pop    rdi
     3b4:	5f                   	pop    rdi
     3b5:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     3b8:	52                   	push   rdx
     3b9:	29 00                	sub    DWORD PTR [rax],eax
     3bb:	5f                   	pop    rdi
     3bc:	49                   	rex.WB
     3bd:	4f 5f                	rex.WRXB pop r15
     3bf:	52                   	push   rdx
     3c0:	49                   	rex.WB
     3c1:	47                   	rex.RXB
     3c2:	48 54                	rex.W push rsp
     3c4:	20 30                	and    BYTE PTR [rax],dh
     3c6:	34 00                	xor    al,0x0
     3c8:	5f                   	pop    rdi
     3c9:	49                   	rex.WB
     3ca:	4f 5f                	rex.WRXB pop r15
     3cc:	55                   	push   rbp
     3cd:	53                   	push   rbx
     3ce:	45 52                	rex.RB push r10
     3d0:	5f                   	pop    rdi
     3d1:	42 55                	rex.X push rbp
     3d3:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
     3d6:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     3d9:	59                   	pop    rcx
     3da:	53                   	push   rbx
     3db:	5f                   	pop    rdi
     3dc:	43                   	rex.XB
     3dd:	44                   	rex.R
     3de:	45                   	rex.RB
     3df:	46 53                	rex.RX push rbx
     3e1:	5f                   	pop    rdi
     3e2:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     3e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3e8:	46                   	rex.RX
     3e9:	4c 54                	rex.WR push rsp
     3eb:	33 32                	xor    esi,DWORD PTR [rdx]
     3ed:	58                   	pop    rax
     3ee:	5f                   	pop    rdi
     3ef:	4d                   	rex.WRB
     3f0:	41 58                	pop    r8
     3f2:	5f                   	pop    rdi
     3f3:	5f                   	pop    rdi
     3f4:	20 31                	and    BYTE PTR [rcx],dh
     3f6:	2e 37                	cs (bad) 
     3f8:	39 37                	cmp    DWORD PTR [rdi],esi
     3fa:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     3fd:	31 33                	xor    DWORD PTR [rbx],esi
     3ff:	34 38                	xor    al,0x38
     401:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     404:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31383441 <_end+0x31182429>
     40a:	34 35                	xor    al,0x35
     40c:	32 37                	xor    dh,BYTE PTR [rdi]
     40e:	34 32                	xor    al,0x32
     410:	33 37                	xor    esi,DWORD PTR [rdi]
     412:	33 31                	xor    esi,DWORD PTR [rcx]
     414:	37                   	(bad)  
     415:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     418:	35 37 65 2b 33       	xor    eax,0x332b6537
     41d:	30 38                	xor    BYTE PTR [rax],bh
     41f:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     422:	78 00                	js     424 <_init-0x94>
     424:	5f                   	pop    rdi
     425:	5f                   	pop    rdi
     426:	67 6c                	ins    BYTE PTR es:[edi],dx
     428:	69 62 63 5f 75 6e 6c 	imul   esp,DWORD PTR [rdx+0x63],0x6c6e755f
     42f:	69 6b 65 6c 79 28 63 	imul   ebp,DWORD PTR [rbx+0x65],0x6328796c
     436:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     438:	64 29 20             	sub    DWORD PTR fs:[rax],esp
     43b:	5f                   	pop    rdi
     43c:	5f                   	pop    rdi
     43d:	62                   	(bad)  
     43e:	75 69                	jne    4a9 <_init-0xf>
     440:	6c                   	ins    BYTE PTR es:[rdi],dx
     441:	74 69                	je     4ac <_init-0xc>
     443:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     444:	5f                   	pop    rdi
     445:	65 78 70             	gs js  4b8 <_init>
     448:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
     44d:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
     450:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     451:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
     455:	30 29                	xor    BYTE PTR [rcx],ch
     457:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     45a:	53                   	push   rbx
     45b:	49 5a                	rex.WB pop r10
     45d:	45                   	rex.RB
     45e:	4f                   	rex.WRXB
     45f:	46 5f                	rex.RX pop rdi
     461:	57                   	push   rdi
     462:	49                   	rex.WB
     463:	4e 54                	rex.WRX push rsp
     465:	5f                   	pop    rdi
     466:	54                   	push   rsp
     467:	5f                   	pop    rdi
     468:	5f                   	pop    rdi
     469:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     46c:	5f                   	pop    rdi
     46d:	5f                   	pop    rdi
     46e:	47                   	rex.RXB
     46f:	4e 55                	rex.WRX push rbp
     471:	43 5f                	rex.XB pop r15
     473:	50                   	push   rax
     474:	52                   	push   rdx
     475:	45 52                	rex.RB push r10
     477:	45 51                	rex.RB push r9
     479:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     47c:	6a 2c                	push   0x2c
     47e:	6d                   	ins    DWORD PTR es:[rdi],dx
     47f:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
     486:	5f                   	pop    rdi
     487:	47                   	rex.RXB
     488:	4e 55                	rex.WRX push rbp
     48a:	43 5f                	rex.XB pop r15
     48c:	5f                   	pop    rdi
     48d:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     490:	20 31                	and    BYTE PTR [rcx],dh
     492:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     495:	2b 20                	sub    esp,DWORD PTR [rax]
     497:	5f                   	pop    rdi
     498:	5f                   	pop    rdi
     499:	47                   	rex.RXB
     49a:	4e 55                	rex.WRX push rbp
     49c:	43 5f                	rex.XB pop r15
     49e:	4d                   	rex.WRB
     49f:	49                   	rex.WB
     4a0:	4e                   	rex.WRX
     4a1:	4f 52                	rex.WRXB push r10
     4a3:	5f                   	pop    rdi
     4a4:	5f                   	pop    rdi
     4a5:	20 3e                	and    BYTE PTR [rsi],bh
     4a7:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     4ac:	61                   	(bad)  
     4ad:	6a 29                	push   0x29
     4af:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     4b2:	20 31                	and    BYTE PTR [rcx],dh
     4b4:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     4b7:	2b 20                	sub    esp,DWORD PTR [rax]
     4b9:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     4bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4bd:	29 29                	sub    DWORD PTR [rcx],ebp
     4bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4c2:	55                   	push   rbp
     4c3:	49                   	rex.WB
     4c4:	4e 54                	rex.WRX push rsp
     4c6:	50                   	push   rax
     4c7:	54                   	push   rsp
     4c8:	52                   	push   rdx
     4c9:	5f                   	pop    rdi
     4ca:	4d                   	rex.WRB
     4cb:	41 58                	pop    r8
     4cd:	5f                   	pop    rdi
     4ce:	5f                   	pop    rdi
     4cf:	20 30                	and    BYTE PTR [rax],dh
     4d1:	78 66                	js     539 <deregister_tm_clones+0x19>
     4d3:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     4da:	66 66 66 66 66 66 66 
     4e1:	66 55                	push   bp
     4e3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     4e7:	76 61                	jbe    54a <deregister_tm_clones+0x2a>
     4e9:	5f                   	pop    rdi
     4ea:	61                   	(bad)  
     4eb:	72 67                	jb     554 <deregister_tm_clones+0x34>
     4ed:	5f                   	pop    rdi
     4ee:	70 61                	jo     551 <deregister_tm_clones+0x31>
     4f0:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     4f3:	6c                   	ins    BYTE PTR es:[rdi],dx
     4f4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     4f6:	28 29                	sub    BYTE PTR [rcx],ch
     4f8:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     4fb:	62                   	(bad)  
     4fc:	75 69                	jne    567 <register_tm_clones+0x7>
     4fe:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ff:	74 69                	je     56a <register_tm_clones+0xa>
     501:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     502:	5f                   	pop    rdi
     503:	76 61                	jbe    566 <register_tm_clones+0x6>
     505:	5f                   	pop    rdi
     506:	61                   	(bad)  
     507:	72 67                	jb     570 <register_tm_clones+0x10>
     509:	5f                   	pop    rdi
     50a:	70 61                	jo     56d <register_tm_clones+0xd>
     50c:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     50f:	6c                   	ins    BYTE PTR es:[rdi],dx
     510:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     512:	20 28                	and    BYTE PTR [rax],ch
     514:	29 00                	sub    DWORD PTR [rax],eax
     516:	5f                   	pop    rdi
     517:	47 5f                	rex.RXB pop r15
     519:	48                   	rex.W
     51a:	41 56                	push   r14
     51c:	45 5f                	rex.RB pop r15
     51e:	4d                   	rex.WRB
     51f:	4d                   	rex.WRB
     520:	41 50                	push   r8
     522:	20 31                	and    BYTE PTR [rcx],dh
     524:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     527:	61                   	(bad)  
     528:	74 74                	je     59e <register_tm_clones+0x3e>
     52a:	72 69                	jb     595 <register_tm_clones+0x35>
     52c:	62                   	(bad)  
     52d:	75 74                	jne    5a3 <register_tm_clones+0x43>
     52f:	65 5f                	gs pop rdi
     531:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     534:	73 74                	jae    5aa <register_tm_clones+0x4a>
     536:	5f                   	pop    rdi
     537:	5f                   	pop    rdi
     538:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     53b:	61                   	(bad)  
     53c:	74 74                	je     5b2 <__do_global_dtors_aux+0x2>
     53e:	72 69                	jb     5a9 <register_tm_clones+0x49>
     540:	62                   	(bad)  
     541:	75 74                	jne    5b7 <__do_global_dtors_aux+0x7>
     543:	65 5f                	gs pop rdi
     545:	5f                   	pop    rdi
     546:	20 28                	and    BYTE PTR [rax],ch
     548:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     54b:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     54e:	73 74                	jae    5c4 <__do_global_dtors_aux+0x14>
     550:	5f                   	pop    rdi
     551:	5f                   	pop    rdi
     552:	29 29                	sub    DWORD PTR [rcx],ebp
     554:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     557:	47                   	rex.RXB
     558:	4c                   	rex.WR
     559:	49                   	rex.WB
     55a:	42                   	rex.X
     55b:	43 5f                	rex.XB pop r15
     55d:	55                   	push   rbp
     55e:	53                   	push   rbx
     55f:	45 5f                	rex.RB pop r15
     561:	44                   	rex.R
     562:	45 50                	rex.RB push r8
     564:	52                   	push   rdx
     565:	45                   	rex.RB
     566:	43                   	rex.XB
     567:	41 54                	push   r12
     569:	45                   	rex.RB
     56a:	44 5f                	rex.R pop rdi
     56c:	47                   	rex.RXB
     56d:	45 54                	rex.RB push r12
     56f:	53                   	push   rbx
     570:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     573:	4f 5f                	rex.WRXB pop r15
     575:	4e                   	rex.WRX
     576:	4f 5f                	rex.WRXB pop r15
     578:	57                   	push   rdi
     579:	52                   	push   rdx
     57a:	49 54                	rex.WB push r12
     57c:	45 53                	rex.RB push r11
     57e:	20 38                	and    BYTE PTR [rax],bh
     580:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     583:	47                   	rex.RXB
     584:	4e 55                	rex.WRX push rbp
     586:	43 5f                	rex.XB pop r15
     588:	4d                   	rex.WRB
     589:	49                   	rex.WB
     58a:	4e                   	rex.WRX
     58b:	4f 52                	rex.WRXB push r10
     58d:	5f                   	pop    rdi
     58e:	5f                   	pop    rdi
     58f:	20 33                	and    BYTE PTR [rbx],dh
     591:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     594:	55                   	push   rbp
     595:	53                   	push   rbx
     596:	45 5f                	rex.RB pop r15
     598:	4c                   	rex.WR
     599:	41 52                	push   r10
     59b:	47                   	rex.RXB
     59c:	45                   	rex.RB
     59d:	46                   	rex.RX
     59e:	49                   	rex.WB
     59f:	4c                   	rex.WR
     5a0:	45                   	rex.RB
     5a1:	36 34 00             	ss xor al,0x0
     5a4:	5f                   	pop    rdi
     5a5:	5f                   	pop    rdi
     5a6:	52                   	push   rdx
     5a7:	4c                   	rex.WR
     5a8:	49                   	rex.WB
     5a9:	4d 5f                	rex.WRB pop r15
     5ab:	54                   	push   rsp
     5ac:	5f                   	pop    rdi
     5ad:	54                   	push   rsp
     5ae:	59                   	pop    rcx
     5af:	50                   	push   rax
     5b0:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     5b4:	53                   	push   rbx
     5b5:	59                   	pop    rcx
     5b6:	53                   	push   rbx
     5b7:	43                   	rex.XB
     5b8:	41                   	rex.B
     5b9:	4c                   	rex.WR
     5ba:	4c 5f                	rex.WR pop rdi
     5bc:	55                   	push   rbp
     5bd:	4c                   	rex.WR
     5be:	4f                   	rex.WRXB
     5bf:	4e                   	rex.WRX
     5c0:	47 5f                	rex.RXB pop r15
     5c2:	54                   	push   rsp
     5c3:	59                   	pop    rcx
     5c4:	50                   	push   rax
     5c5:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     5c9:	4c                   	rex.WR
     5ca:	44                   	rex.R
     5cb:	42                   	rex.X
     5cc:	4c 5f                	rex.WR pop rdi
     5ce:	52                   	push   rdx
     5cf:	45                   	rex.RB
     5d0:	44                   	rex.R
     5d1:	49 52                	rex.WB push r10
     5d3:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
     5d6:	6d                   	ins    DWORD PTR es:[rdi],dx
     5d7:	65 2c 70             	gs sub al,0x70
     5da:	72 6f                	jb     64b <__libc_csu_init+0x1b>
     5dc:	74 6f                	je     64d <__libc_csu_init+0x1d>
     5de:	29 20                	sub    DWORD PTR [rax],esp
     5e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5e1:	61                   	(bad)  
     5e2:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e3:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
     5e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5e8:	74 6f                	je     659 <__libc_csu_init+0x29>
     5ea:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     5ed:	4f 5f                	rex.WRXB pop r15
     5ef:	77 72                	ja     663 <__libc_csu_init+0x33>
     5f1:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
     5f8:	00 
     5f9:	5f                   	pop    rdi
{
     5fa:	5f                   	pop    rdi
     5fb:	47                   	rex.RXB
     5fc:	4c                   	rex.WR
     5fd:	49                   	rex.WB
     5fe:	42                   	rex.X
     5ff:	43 5f                	rex.XB pop r15
     601:	50                   	push   rax
     602:	52                   	push   rdx
     603:	45 52                	rex.RB push r10
	a = 2;
     605:	45 51                	rex.RB push r9
     607:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     60a:	6a 2c                	push   0x2c
	b = 3;
     60c:	6d                   	ins    DWORD PTR es:[rdi],dx
     60d:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
	c = a * b;
     614:	5f                   	pop    rdi
     615:	47                   	rex.RXB
     616:	4c                   	rex.WR
     617:	49                   	rex.WB
     618:	42                   	rex.X
     619:	43 5f                	rex.XB pop r15
     61b:	5f                   	pop    rdi
     61c:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     61f:	20 31                	and    BYTE PTR [rcx],dh
     621:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     624:	2b 20                	sub    esp,DWORD PTR [rax]
     626:	5f                   	pop    rdi
     627:	5f                   	pop    rdi
     628:	47                   	rex.RXB
     629:	4c                   	rex.WR
     62a:	49                   	rex.WB
     62b:	42                   	rex.X
     62c:	43 5f                	rex.XB pop r15
     62e:	4d                   	rex.WRB
     62f:	49                   	rex.WB
     630:	4e                   	rex.WRX
     631:	4f 52                	rex.WRXB push r10
     633:	5f                   	pop    rdi
     634:	5f                   	pop    rdi
     635:	20 3e                	and    BYTE PTR [rsi],bh
     637:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     63c:	61                   	(bad)  
     63d:	6a 29                	push   0x29
     63f:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     642:	20 31                	and    BYTE PTR [rcx],dh
     644:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     647:	2b 20                	sub    esp,DWORD PTR [rax]
     649:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     64c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     64d:	29 29                	sub    DWORD PTR [rcx],ebp
     64f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     652:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     653:	65 65 64 5f          	gs gs fs pop rdi
     657:	4e 55                	rex.WRX push rbp
     659:	4c                   	rex.WR
     65a:	4c 20 00             	rex.WR and BYTE PTR [rax],r8b
     65d:	5f                   	pop    rdi
     65e:	5f                   	pop    rdi
     65f:	46                   	rex.RX
     660:	4c 54                	rex.WR push rsp
     662:	36 34 5f             	ss xor al,0x5f
     665:	4d                   	rex.WRB
     666:	49                   	rex.WB
     667:	4e 5f                	rex.WRX pop rdi
     669:	5f                   	pop    rdi
     66a:	20 32                	and    BYTE PTR [rdx],dh
     66c:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     66f:	35 30 37 33 38       	xor    eax,0x38333730
     674:	35 38 35 30 37       	xor    eax,0x37303538
     679:	32 30                	xor    dh,BYTE PTR [rax]
     67b:	31 33                	xor    DWORD PTR [rbx],esi
     67d:	38 33                	cmp    BYTE PTR [rbx],dh
     67f:	30 39                	xor    BYTE PTR [rcx],bh
     681:	30 32                	xor    BYTE PTR [rdx],dh
     683:	33 32                	xor    esi,DWORD PTR [rdx]
     685:	37                   	(bad)  
     686:	31 37                	xor    DWORD PTR [rdi],esi
     688:	33 33                	xor    esi,DWORD PTR [rbx]
     68a:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     68d:	34 30                	xor    al,0x30
     68f:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
     696:	36 34 00             	ss xor al,0x0
     699:	5f                   	pop    rdi
     69a:	5f                   	pop    rdi
     69b:	4c                   	rex.WR
     69c:	4f                   	rex.WRXB
     69d:	4e                   	rex.WRX
     69e:	47 5f                	rex.RXB pop r15
     6a0:	4c                   	rex.WR
     6a1:	4f                   	rex.WRXB
     6a2:	4e                   	rex.WRX
     6a3:	47 5f                	rex.RXB pop r15
     6a5:	57                   	push   rdi
     6a6:	49                   	rex.WB
     6a7:	44 54                	rex.R push rsp
     6a9:	48 5f                	rex.W pop rdi
     6ab:	5f                   	pop    rdi
     6ac:	20 36                	and    BYTE PTR [rsi],dh
     6ae:	34 00                	xor    al,0x0
     6b0:	5f                   	pop    rdi
     6b1:	50                   	push   rax
     6b2:	4f 53                	rex.WRXB push r11
     6b4:	49 58                	rex.WB pop r8
     6b6:	5f                   	pop    rdi
     6b7:	53                   	push   rbx
     6b8:	4f 55                	rex.WRXB push r13
     6ba:	52                   	push   rdx
     6bb:	43                   	rex.XB
     6bc:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     6c0:	46                   	rex.RX
     6c1:	4c 54                	rex.WR push rsp
     6c3:	5f                   	pop    rdi
     6c4:	44                   	rex.R
     6c5:	45                   	rex.RB
     6c6:	4e                   	rex.WRX
     6c7:	4f 52                	rex.WRXB push r10
     6c9:	4d 5f                	rex.WRB pop r15
     6cb:	4d                   	rex.WRB
     6cc:	49                   	rex.WB
     6cd:	4e 5f                	rex.WRX pop rdi
     6cf:	5f                   	pop    rdi
     6d0:	20 31                	and    BYTE PTR [rcx],dh
     6d2:	2e 34 30             	cs xor al,0x30
     6d5:	31 32                	xor    DWORD PTR [rdx],esi
     6d7:	39 38                	cmp    DWORD PTR [rax],edi
     6d9:	34 36                	xor    al,0x36
     6db:	34 33                	xor    al,0x33
     6dd:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     6e0:	31 37                	xor    DWORD PTR [rdi],esi
     6e2:	30 37                	xor    BYTE PTR [rdi],dh
     6e4:	30 39                	xor    BYTE PTR [rcx],bh
     6e6:	32 33                	xor    dh,BYTE PTR [rbx]
     6e8:	37                   	(bad)  
     6e9:	32 39                	xor    bh,BYTE PTR [rcx]
     6eb:	35 38 33 32 38       	xor    eax,0x38323338
     6f0:	39 39                	cmp    DWORD PTR [rcx],edi
     6f2:	31 36                	xor    DWORD PTR [rsi],esi
     6f4:	31 33                	xor    DWORD PTR [rbx],esi
     6f6:	65 2d 34 35 46 00    	gs sub eax,0x463534
     6fc:	5f                   	pop    rdi
     6fd:	5f                   	pop    rdi
     6fe:	43                   	rex.XB
     6ff:	48                   	rex.W
     700:	41 52                	push   r10
     702:	31 36                	xor    DWORD PTR [rsi],esi
     704:	5f                   	pop    rdi
     705:	54                   	push   rsp
     706:	59                   	pop    rcx
     707:	50                   	push   rax
     708:	45 5f                	rex.RB pop r15
     70a:	5f                   	pop    rdi
     70b:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     70e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     70f:	72 74                	jb     785 <__GNU_EH_FRAME_HDR+0xd1>
     711:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     714:	73 69                	jae    77f <__GNU_EH_FRAME_HDR+0xcb>
     716:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     718:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     71d:	74 00                	je     71f <__GNU_EH_FRAME_HDR+0x6b>
     71f:	5f                   	pop    rdi
     720:	5f                   	pop    rdi
     721:	53                   	push   rbx
     722:	49 5a                	rex.WB pop r10
     724:	45                   	rex.RB
     725:	4f                   	rex.WRXB
     726:	46 5f                	rex.RX pop rdi
     728:	53                   	push   rbx
     729:	49 5a                	rex.WB pop r10
     72b:	45 5f                	rex.RB pop r15
     72d:	54                   	push   rsp
     72e:	5f                   	pop    rdi
     72f:	5f                   	pop    rdi
     730:	20 38                	and    BYTE PTR [rax],bh
     732:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
     735:	67 63 00             	movsxd eax,DWORD PTR [eax]
     738:	5f                   	pop    rdi
     739:	5f                   	pop    rdi
     73a:	4f 52                	rex.WRXB push r10
     73c:	44                   	rex.R
     73d:	45 52                	rex.RB push r10
     73f:	5f                   	pop    rdi
     740:	42                   	rex.X
     741:	49                   	rex.WB
     742:	47 5f                	rex.RXB pop r15
     744:	45                   	rex.RB
     745:	4e                   	rex.WRX
     746:	44                   	rex.R
     747:	49                   	rex.WB
     748:	41                   	rex.B
     749:	4e 5f                	rex.WRX pop rdi
     74b:	5f                   	pop    rdi
     74c:	20 34 33             	and    BYTE PTR [rbx+rsi*1],dh
     74f:	32 31                	xor    dh,BYTE PTR [rcx]
     751:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     754:	47                   	rex.RXB
     755:	4e 55                	rex.WRX push rbp
     757:	43 5f                	rex.XB pop r15
     759:	5f                   	pop    rdi
     75a:	20 37                	and    BYTE PTR [rdi],dh
     75c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     75f:	4f 5f                	rex.WRXB pop r15
     761:	4c                   	rex.WR
     762:	49                   	rex.WB
     763:	4e                   	rex.WRX
     764:	45 5f                	rex.RB pop r15
     766:	42 55                	rex.X push rbp
     768:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     76b:	78 32                	js     79f <__GNU_EH_FRAME_HDR+0xeb>
     76d:	30 30                	xor    BYTE PTR [rax],dh
     76f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     772:	55                   	push   rbp
     773:	53                   	push   rbx
     774:	45 5f                	rex.RB pop r15
     776:	49 53                	rex.WB push r11
     778:	4f                   	rex.WRXB
     779:	43 58                	rex.XB pop r8
     77b:	58                   	pop    rax
     77c:	31 31                	xor    DWORD PTR [rcx],esi
     77e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     781:	55                   	push   rbp
     782:	53                   	push   rbx
     783:	45 5f                	rex.RB pop r15
     785:	41 54                	push   r12
     787:	46                   	rex.RX
     788:	49                   	rex.WB
     789:	4c                   	rex.WR
     78a:	45 20 31             	and    BYTE PTR [r9],r14b
     78d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     790:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     791:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     792:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     793:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     794:	75 6c                	jne    802 <__FRAME_END__+0xe>
     796:	6c                   	ins    BYTE PTR es:[rdi],dx
     797:	28 70 61             	sub    BYTE PTR [rax+0x61],dh
     79a:	72 61                	jb     7fd <__FRAME_END__+0x9>
     79c:	6d                   	ins    DWORD PTR es:[rdi],dx
     79d:	73 29                	jae    7c8 <__GNU_EH_FRAME_HDR+0x114>
     79f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     7a2:	61                   	(bad)  
     7a3:	74 74                	je     819 <__FRAME_END__+0x25>
     7a5:	72 69                	jb     810 <__FRAME_END__+0x1c>
     7a7:	62                   	(bad)  
     7a8:	75 74                	jne    81e <__FRAME_END__+0x2a>
     7aa:	65 5f                	gs pop rdi
     7ac:	5f                   	pop    rdi
     7ad:	20 28                	and    BYTE PTR [rax],ch
     7af:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     7b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b6:	75 6c                	jne    824 <__FRAME_END__+0x30>
     7b8:	6c                   	ins    BYTE PTR es:[rdi],dx
     7b9:	5f                   	pop    rdi
     7ba:	5f                   	pop    rdi
     7bb:	20 70 61             	and    BYTE PTR [rax+0x61],dh
     7be:	72 61                	jb     821 <__FRAME_END__+0x2d>
     7c0:	6d                   	ins    DWORD PTR es:[rdi],dx
     7c1:	73 29                	jae    7ec <__GNU_EH_FRAME_HDR+0x138>
     7c3:	29 00                	sub    DWORD PTR [rax],eax
     7c5:	5f                   	pop    rdi
     7c6:	5f                   	pop    rdi
     7c7:	55                   	push   rbp
     7c8:	49                   	rex.WB
     7c9:	4e 54                	rex.WRX push rsp
     7cb:	36 34 5f             	ss xor al,0x5f
     7ce:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     7d2:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     7d5:	23 23                	and    esp,DWORD PTR [rbx]
     7d7:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
     7da:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7dd:	47                   	rex.RXB
     7de:	4e 55                	rex.WRX push rbp
     7e0:	5f                   	pop    rdi
     7e1:	4c                   	rex.WR
     7e2:	49                   	rex.WB
     7e3:	42 52                	rex.X push rdx
     7e5:	41 52                	push   r10
     7e7:	59                   	pop    rcx
     7e8:	5f                   	pop    rdi
     7e9:	5f                   	pop    rdi
     7ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7ed:	44                   	rex.R
     7ee:	42                   	rex.X
     7ef:	4c 5f                	rex.WR pop rdi
     7f1:	4d                   	rex.WRB
     7f2:	41                   	rex.B
     7f3:	4e 54                	rex.WRX push rsp
     7f5:	5f                   	pop    rdi
     7f6:	44                   	rex.R
     7f7:	49                   	rex.WB
     7f8:	47 5f                	rex.RXB pop r15
     7fa:	5f                   	pop    rdi
     7fb:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f0834 <_end+0x5f3ef81c>
     801:	55                   	push   rbp
     802:	53                   	push   rbx
     803:	45 5f                	rex.RB pop r15
     805:	50                   	push   rax
     806:	4f 53                	rex.WRXB push r11
     808:	49 58                	rex.WB pop r8
     80a:	31 39                	xor    DWORD PTR [rcx],edi
     80c:	39 35 30 36 20 31    	cmp    DWORD PTR [rip+0x31203630],esi        # 31203e42 <_end+0x31002e2a>
     812:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     815:	73 74                	jae    88b <__FRAME_END__+0x97>
     817:	75 62                	jne    87b <__FRAME_END__+0x87>
     819:	5f                   	pop    rdi
     81a:	63 68 66             	movsxd ebp,DWORD PTR [rax+0x66]
     81d:	6c                   	ins    BYTE PTR es:[rdi],dx
     81e:	61                   	(bad)  
     81f:	67 73 20             	addr32 jae 842 <__FRAME_END__+0x4e>
     822:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     825:	49                   	rex.WB
     826:	4e 54                	rex.WRX push rsp
     828:	5f                   	pop    rdi
     829:	4d                   	rex.WRB
     82a:	41 58                	pop    r8
     82c:	5f                   	pop    rdi
     82d:	5f                   	pop    rdi
     82e:	20 30                	and    BYTE PTR [rax],dh
     830:	78 37                	js     869 <__FRAME_END__+0x75>
     832:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x66],bl
     839:	00 5f 66 
     83c:	6c                   	ins    BYTE PTR es:[rdi],dx
     83d:	61                   	(bad)  
     83e:	67 73 32             	addr32 jae 873 <__FRAME_END__+0x7f>
     841:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     844:	4e 54                	rex.WRX push rsp
     846:	48                   	rex.W
     847:	4e                   	rex.WRX
     848:	4c 28 66 63          	rex.WR sub BYTE PTR [rsi+0x63],r12b
     84c:	74 29                	je     877 <__FRAME_END__+0x83>
     84e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     851:	61                   	(bad)  
     852:	74 74                	je     8c8 <__FRAME_END__+0xd4>
     854:	72 69                	jb     8bf <__FRAME_END__+0xcb>
     856:	62                   	(bad)  
     857:	75 74                	jne    8cd <__FRAME_END__+0xd9>
     859:	65 5f                	gs pop rdi
     85b:	5f                   	pop    rdi
     85c:	20 28                	and    BYTE PTR [rax],ch
     85e:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     861:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     862:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     863:	74 68                	je     8cd <__FRAME_END__+0xd9>
     865:	72 6f                	jb     8d6 <__FRAME_END__+0xe2>
     867:	77 5f                	ja     8c8 <__FRAME_END__+0xd4>
     869:	5f                   	pop    rdi
     86a:	29 29                	sub    DWORD PTR [rcx],ebp
     86c:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     86f:	74 00                	je     871 <__FRAME_END__+0x7d>
     871:	5f                   	pop    rdi
     872:	5f                   	pop    rdi
     873:	73 74                	jae    8e9 <__FRAME_END__+0xf5>
     875:	75 62                	jne    8d9 <__FRAME_END__+0xe5>
     877:	5f                   	pop    rdi
     878:	66 63 68 66          	movsxd bp,DWORD PTR [rax+0x66]
     87c:	6c                   	ins    BYTE PTR es:[rdi],dx
     87d:	61                   	(bad)  
     87e:	67 73 20             	addr32 jae 8a1 <__FRAME_END__+0xad>
     881:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     884:	49                   	rex.WB
     885:	4e 54                	rex.WRX push rsp
     887:	31 36                	xor    DWORD PTR [rsi],esi
     889:	5f                   	pop    rdi
     88a:	54                   	push   rsp
     88b:	59                   	pop    rcx
     88c:	50                   	push   rax
     88d:	45 5f                	rex.RB pop r15
     88f:	5f                   	pop    rdi
     890:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     893:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     894:	72 74                	jb     90a <__FRAME_END__+0x116>
     896:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     899:	74 00                	je     89b <__FRAME_END__+0xa7>
     89b:	5f                   	pop    rdi
     89c:	5f                   	pop    rdi
     89d:	44                   	rex.R
     89e:	45                   	rex.RB
     89f:	43                   	rex.XB
     8a0:	49                   	rex.WB
     8a1:	4d                   	rex.WRB
     8a2:	41                   	rex.B
     8a3:	4c 5f                	rex.WR pop rdi
     8a5:	42                   	rex.X
     8a6:	49                   	rex.WB
     8a7:	44 5f                	rex.R pop rdi
     8a9:	46                   	rex.RX
     8aa:	4f 52                	rex.WRXB push r10
     8ac:	4d                   	rex.WRB
     8ad:	41 54                	push   r12
     8af:	5f                   	pop    rdi
     8b0:	5f                   	pop    rdi
     8b1:	20 31                	and    BYTE PTR [rcx],dh
     8b3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8b6:	44                   	rex.R
     8b7:	45                   	rex.RB
     8b8:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     8bb:	5f                   	pop    rdi
     8bc:	45 50                	rex.RB push r8
     8be:	53                   	push   rbx
     8bf:	49                   	rex.WB
     8c0:	4c                   	rex.WR
     8c1:	4f                   	rex.WRXB
     8c2:	4e 5f                	rex.WRX pop rdi
     8c4:	5f                   	pop    rdi
     8c5:	20 31                	and    BYTE PTR [rcx],dh
     8c7:	45 2d 36 44 46 00    	rex.RB sub eax,0x464436
     8cd:	5f                   	pop    rdi
     8ce:	53                   	push   rbx
     8cf:	49 5a                	rex.WB pop r10
     8d1:	45 5f                	rex.RB pop r15
     8d3:	54                   	push   rsp
     8d4:	5f                   	pop    rdi
     8d5:	44                   	rex.R
     8d6:	45                   	rex.RB
     8d7:	43                   	rex.XB
     8d8:	4c                   	rex.WR
     8d9:	41 52                	push   r10
     8db:	45                   	rex.RB
     8dc:	44 20 00             	and    BYTE PTR [rax],r8b
     8df:	5f                   	pop    rdi
     8e0:	5f                   	pop    rdi
     8e1:	46                   	rex.RX
     8e2:	44 5f                	rex.R pop rdi
     8e4:	53                   	push   rbx
     8e5:	45 54                	rex.RB push r12
     8e7:	53                   	push   rbx
     8e8:	49 5a                	rex.WB pop r10
     8ea:	45 20 31             	and    BYTE PTR [r9],r14b
     8ed:	30 32                	xor    BYTE PTR [rdx],dh
     8ef:	34 00                	xor    al,0x0
     8f1:	5f                   	pop    rdi
     8f2:	5f                   	pop    rdi
     8f3:	4c                   	rex.WR
     8f4:	44                   	rex.R
     8f5:	42                   	rex.X
     8f6:	4c 5f                	rex.WR pop rdi
     8f8:	44                   	rex.R
     8f9:	49                   	rex.WB
     8fa:	47 5f                	rex.RXB pop r15
     8fc:	5f                   	pop    rdi
     8fd:	20 31                	and    BYTE PTR [rcx],dh
     8ff:	38 00                	cmp    BYTE PTR [rax],al
     901:	5f                   	pop    rdi
     902:	6d                   	ins    DWORD PTR es:[rdi],dx
     903:	61                   	(bad)  
     904:	72 6b                	jb     971 <__FRAME_END__+0x17d>
     906:	65 72 73             	gs jb  97c <__FRAME_END__+0x188>
     909:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     90c:	41 54                	push   r12
     90e:	4f                   	rex.WRXB
     90f:	4d                   	rex.WRB
     910:	49                   	rex.WB
     911:	43 5f                	rex.XB pop r15
     913:	53                   	push   rbx
     914:	45 51                	rex.RB push r9
     916:	5f                   	pop    rdi
     917:	43 53                	rex.XB push r11
     919:	54                   	push   rsp
     91a:	20 35 00 5f 5f 55    	and    BYTE PTR [rip+0x555f5f00],dh        # 555f6820 <_end+0x553f5808>
     920:	53                   	push   rbx
     921:	45 5f                	rex.RB pop r15
     923:	50                   	push   rax
     924:	4f 53                	rex.WRXB push r11
     926:	49 58                	rex.WB pop r8
     928:	32 20                	xor    ah,BYTE PTR [rax]
     92a:	31 00                	xor    DWORD PTR [rax],eax
     92c:	5f                   	pop    rdi
     92d:	5f                   	pop    rdi
     92e:	55                   	push   rbp
     92f:	53                   	push   rbx
     930:	45 5f                	rex.RB pop r15
     932:	49 53                	rex.WB push r11
     934:	4f                   	rex.WRXB
     935:	43 39 35 20 31 00 5f 	rex.XB cmp DWORD PTR [rip+0x5f003120],esi        # 5f003a5c <_end+0x5ee02a44>
     93c:	5f                   	pop    rdi
     93d:	53                   	push   rbx
     93e:	49 5a                	rex.WB pop r10
     940:	45                   	rex.RB
     941:	4f                   	rex.WRXB
     942:	46 5f                	rex.RX pop rdi
     944:	53                   	push   rbx
     945:	48                   	rex.W
     946:	4f 52                	rex.WRXB push r10
     948:	54                   	push   rsp
     949:	5f                   	pop    rdi
     94a:	5f                   	pop    rdi
     94b:	20 32                	and    BYTE PTR [rdx],dh
     94d:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     950:	5f                   	pop    rdi
     951:	76 61                	jbe    9b4 <__FRAME_END__+0x1c0>
     953:	5f                   	pop    rdi
     954:	6c                   	ins    BYTE PTR es:[rdi],dx
     955:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
     95c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     95d:	75 63                	jne    9c2 <__FRAME_END__+0x1ce>
     95f:	5f                   	pop    rdi
     960:	76 61                	jbe    9c3 <__FRAME_END__+0x1cf>
     962:	5f                   	pop    rdi
     963:	6c                   	ins    BYTE PTR es:[rdi],dx
     964:	69 73 74 00 5f 5f 55 	imul   esi,DWORD PTR [rbx+0x74],0x555f5f00
     96b:	49                   	rex.WB
     96c:	4e 54                	rex.WRX push rsp
     96e:	36 34 5f             	ss xor al,0x5f
     971:	54                   	push   rsp
     972:	59                   	pop    rcx
     973:	50                   	push   rax
     974:	45 5f                	rex.RB pop r15
     976:	5f                   	pop    rdi
     977:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     97b:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     97f:	73 69                	jae    9ea <__FRAME_END__+0x1f6>
     981:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     983:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     988:	74 00                	je     98a <__FRAME_END__+0x196>
     98a:	5f                   	pop    rdi
     98b:	5f                   	pop    rdi
     98c:	49                   	rex.WB
     98d:	4e 54                	rex.WRX push rsp
     98f:	5f                   	pop    rdi
     990:	46                   	rex.RX
     991:	41 53                	push   r11
     993:	54                   	push   rsp
     994:	33 32                	xor    esi,DWORD PTR [rdx]
     996:	5f                   	pop    rdi
     997:	4d                   	rex.WRB
     998:	41 58                	pop    r8
     99a:	5f                   	pop    rdi
     99b:	5f                   	pop    rdi
     99c:	20 30                	and    BYTE PTR [rax],dh
     99e:	78 37                	js     9d7 <__FRAME_END__+0x1e3>
     9a0:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     9a7:	66 66 66 66 66 66 66 
     9ae:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     9b3:	49                   	rex.WB
     9b4:	4e 54                	rex.WRX push rsp
     9b6:	5f                   	pop    rdi
     9b7:	4c                   	rex.WR
     9b8:	45                   	rex.RB
     9b9:	41 53                	push   r11
     9bb:	54                   	push   rsp
     9bc:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     9bf:	59                   	pop    rcx
     9c0:	50                   	push   rax
     9c1:	45 5f                	rex.RB pop r15
     9c3:	5f                   	pop    rdi
     9c4:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     9c7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9c9:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     9ce:	61                   	(bad)  
     9cf:	72 00                	jb     9d1 <__FRAME_END__+0x1dd>
     9d1:	5f                   	pop    rdi
     9d2:	5f                   	pop    rdi
     9d3:	73 69                	jae    a3e <__FRAME_END__+0x24a>
     9d5:	7a 65                	jp     a3c <__FRAME_END__+0x248>
     9d7:	5f                   	pop    rdi
     9d8:	74 20                	je     9fa <__FRAME_END__+0x206>
     9da:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9dd:	55                   	push   rbp
     9de:	49                   	rex.WB
     9df:	4e 54                	rex.WRX push rsp
     9e1:	5f                   	pop    rdi
     9e2:	4c                   	rex.WR
     9e3:	45                   	rex.RB
     9e4:	41 53                	push   r11
     9e6:	54                   	push   rsp
     9e7:	33 32                	xor    esi,DWORD PTR [rdx]
     9e9:	5f                   	pop    rdi
     9ea:	54                   	push   rsp
     9eb:	59                   	pop    rcx
     9ec:	50                   	push   rax
     9ed:	45 5f                	rex.RB pop r15
     9ef:	5f                   	pop    rdi
     9f0:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     9f3:	73 69                	jae    a5e <__FRAME_END__+0x26a>
     9f5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9f7:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     9fc:	74 00                	je     9fe <__FRAME_END__+0x20a>
     9fe:	5f                   	pop    rdi
     9ff:	5f                   	pop    rdi
     a00:	73 74                	jae    a76 <__FRAME_END__+0x282>
     a02:	75 62                	jne    a66 <__FRAME_END__+0x272>
     a04:	5f                   	pop    rdi
     a05:	73 69                	jae    a70 <__FRAME_END__+0x27c>
     a07:	67 72 65             	addr32 jb a6f <__FRAME_END__+0x27b>
     a0a:	74 75                	je     a81 <__FRAME_END__+0x28d>
     a0c:	72 6e                	jb     a7c <__FRAME_END__+0x288>
     a0e:	20 00                	and    BYTE PTR [rax],al
     a10:	5f                   	pop    rdi
     a11:	5f                   	pop    rdi
     a12:	70 74                	jo     a88 <__FRAME_END__+0x294>
     a14:	72 5f                	jb     a75 <__FRAME_END__+0x281>
     a16:	74 20                	je     a38 <__FRAME_END__+0x244>
     a18:	76 6f                	jbe    a89 <__FRAME_END__+0x295>
     a1a:	69 64 20 2a 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x535f5f00
     a21:	53 
     a22:	33 32                	xor    esi,DWORD PTR [rdx]
     a24:	5f                   	pop    rdi
     a25:	54                   	push   rsp
     a26:	59                   	pop    rcx
     a27:	50                   	push   rax
     a28:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
     a2c:	74 00                	je     a2e <__FRAME_END__+0x23a>
     a2e:	5f                   	pop    rdi
     a2f:	5f                   	pop    rdi
     a30:	53                   	push   rbx
     a31:	54                   	push   rsp
     a32:	44                   	rex.R
     a33:	43 5f                	rex.XB pop r15
     a35:	4e                   	rex.WRX
     a36:	4f 5f                	rex.WRXB pop r15
     a38:	54                   	push   rsp
     a39:	48 52                	rex.W push rdx
     a3b:	45                   	rex.RB
     a3c:	41                   	rex.B
     a3d:	44 53                	rex.R push rbx
     a3f:	5f                   	pop    rdi
     a40:	5f                   	pop    rdi
     a41:	20 31                	and    BYTE PTR [rcx],dh
     a43:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a46:	42 59                	rex.X pop rcx
     a48:	54                   	push   rsp
     a49:	45 5f                	rex.RB pop r15
     a4b:	4f 52                	rex.WRXB push r10
     a4d:	44                   	rex.R
     a4e:	45 52                	rex.RB push r10
     a50:	5f                   	pop    rdi
     a51:	5f                   	pop    rdi
     a52:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     a55:	4f 52                	rex.WRXB push r10
     a57:	44                   	rex.R
     a58:	45 52                	rex.RB push r10
     a5a:	5f                   	pop    rdi
     a5b:	4c                   	rex.WR
     a5c:	49 54                	rex.WB push r12
     a5e:	54                   	push   rsp
     a5f:	4c                   	rex.WR
     a60:	45 5f                	rex.RB pop r15
     a62:	45                   	rex.RB
     a63:	4e                   	rex.WRX
     a64:	44                   	rex.R
     a65:	49                   	rex.WB
     a66:	41                   	rex.B
     a67:	4e 5f                	rex.WRX pop rdi
     a69:	5f                   	pop    rdi
     a6a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a6d:	4c                   	rex.WR
     a6e:	44                   	rex.R
     a6f:	42                   	rex.X
     a70:	4c 5f                	rex.WR pop rdi
     a72:	4d                   	rex.WRB
     a73:	49                   	rex.WB
     a74:	4e 5f                	rex.WRX pop rdi
     a76:	5f                   	pop    rdi
     a77:	20 33                	and    BYTE PTR [rbx],dh
     a79:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     a7c:	32 31                	xor    dh,BYTE PTR [rcx]
     a7e:	30 33                	xor    BYTE PTR [rbx],dh
     a80:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     a83:	31 31                	xor    DWORD PTR [rcx],esi
     a85:	32 30                	xor    dh,BYTE PTR [rax]
     a87:	39 33                	cmp    DWORD PTR [rbx],esi
     a89:	35 30 36 32 36       	xor    eax,0x36323630
     a8e:	32 36                	xor    dh,BYTE PTR [rsi]
     a90:	37                   	(bad)  
     a91:	37                   	(bad)  
     a92:	38 31                	cmp    BYTE PTR [rcx],dh
     a94:	37                   	(bad)  
     a95:	33 32                	xor    esi,DWORD PTR [rdx]
     a97:	31 37                	xor    DWORD PTR [rdi],esi
     a99:	35 32 36 30 65       	xor    eax,0x65303632
     a9e:	2d 34 39 33 32       	sub    eax,0x32333934
     aa3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     aa7:	46                   	rex.RX
     aa8:	4c 54                	rex.WR push rsp
     aaa:	33 32                	xor    esi,DWORD PTR [rdx]
     aac:	5f                   	pop    rdi
     aad:	4d                   	rex.WRB
     aae:	49                   	rex.WB
     aaf:	4e 5f                	rex.WRX pop rdi
     ab1:	31 30                	xor    DWORD PTR [rax],esi
     ab3:	5f                   	pop    rdi
     ab4:	45 58                	rex.RB pop r8
     ab6:	50                   	push   rax
     ab7:	5f                   	pop    rdi
     ab8:	5f                   	pop    rdi
     ab9:	20 28                	and    BYTE PTR [rax],ch
     abb:	2d 33 37 29 00       	sub    eax,0x293733
     ac0:	5f                   	pop    rdi
     ac1:	5f                   	pop    rdi
     ac2:	44                   	rex.R
     ac3:	42                   	rex.X
     ac4:	4c 5f                	rex.WR pop rdi
     ac6:	48                   	rex.W
     ac7:	41 53                	push   r11
     ac9:	5f                   	pop    rdi
     aca:	44                   	rex.R
     acb:	45                   	rex.RB
     acc:	4e                   	rex.WRX
     acd:	4f 52                	rex.WRXB push r10
     acf:	4d 5f                	rex.WRB pop r15
     ad1:	5f                   	pop    rdi
     ad2:	20 31                	and    BYTE PTR [rcx],dh
     ad4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ad7:	49                   	rex.WB
     ad8:	4e 54                	rex.WRX push rsp
     ada:	5f                   	pop    rdi
     adb:	4c                   	rex.WR
     adc:	45                   	rex.RB
     add:	41 53                	push   r11
     adf:	54                   	push   rsp
     ae0:	36 34 5f             	ss xor al,0x5f
     ae3:	54                   	push   rsp
     ae4:	59                   	pop    rcx
     ae5:	50                   	push   rax
     ae6:	45 5f                	rex.RB pop r15
     ae8:	5f                   	pop    rdi
     ae9:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     aed:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     af1:	74 00                	je     af3 <__FRAME_END__+0x2ff>
     af3:	5f                   	pop    rdi
     af4:	5f                   	pop    rdi
     af5:	57                   	push   rdi
     af6:	43                   	rex.XB
     af7:	48                   	rex.W
     af8:	41 52                	push   r10
     afa:	5f                   	pop    rdi
     afb:	4d                   	rex.WRB
     afc:	49                   	rex.WB
     afd:	4e 5f                	rex.WRX pop rdi
     aff:	5f                   	pop    rdi
     b00:	20 28                	and    BYTE PTR [rax],ch
     b02:	2d 5f 5f 57 43       	sub    eax,0x43575f5f
     b07:	48                   	rex.W
     b08:	41 52                	push   r10
     b0a:	5f                   	pop    rdi
     b0b:	4d                   	rex.WRB
     b0c:	41 58                	pop    r8
     b0e:	5f                   	pop    rdi
     b0f:	5f                   	pop    rdi
     b10:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 293c36 <_end+0x92c1e>
     b16:	5f                   	pop    rdi
     b17:	49                   	rex.WB
     b18:	4f 5f                	rex.WRXB pop r15
     b1a:	53                   	push   rbx
     b1b:	48                   	rex.W
     b1c:	4f 57                	rex.WRXB push r15
     b1e:	50                   	push   rax
     b1f:	4f                   	rex.WRXB
     b20:	49                   	rex.WB
     b21:	4e 54                	rex.WRX push rsp
     b23:	20 30                	and    BYTE PTR [rax],dh
     b25:	34 30                	xor    al,0x30
     b27:	30 00                	xor    BYTE PTR [rax],al
     b29:	5f                   	pop    rdi
     b2a:	5f                   	pop    rdi
     b2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b2c:	66 66 5f             	data16 pop di
     b2f:	74 5f                	je     b90 <__FRAME_END__+0x39c>
     b31:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
     b38:	20 
     b39:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b3c:	53                   	push   rbx
     b3d:	54                   	push   rsp
     b3e:	44                   	rex.R
     b3f:	43 5f                	rex.XB pop r15
     b41:	55                   	push   rbp
     b42:	54                   	push   rsp
     b43:	46 5f                	rex.RX pop rdi
     b45:	33 32                	xor    esi,DWORD PTR [rdx]
     b47:	5f                   	pop    rdi
     b48:	5f                   	pop    rdi
     b49:	20 31                	and    BYTE PTR [rcx],dh
     b4b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b4e:	42                   	rex.X
     b4f:	4c                   	rex.WR
     b50:	4b 53                	rex.WXB push r11
     b52:	49 5a                	rex.WB pop r10
     b54:	45 5f                	rex.RB pop r15
     b56:	54                   	push   rsp
     b57:	5f                   	pop    rdi
     b58:	54                   	push   rsp
     b59:	59                   	pop    rcx
     b5a:	50                   	push   rax
     b5b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     b5f:	53                   	push   rbx
     b60:	59                   	pop    rcx
     b61:	53                   	push   rbx
     b62:	43                   	rex.XB
     b63:	41                   	rex.B
     b64:	4c                   	rex.WR
     b65:	4c 5f                	rex.WR pop rdi
     b67:	53                   	push   rbx
     b68:	4c                   	rex.WR
     b69:	4f                   	rex.WRXB
     b6a:	4e                   	rex.WRX
     b6b:	47 5f                	rex.RXB pop r15
     b6d:	54                   	push   rsp
     b6e:	59                   	pop    rcx
     b6f:	50                   	push   rax
     b70:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     b74:	49                   	rex.WB
     b75:	4e 54                	rex.WRX push rsp
     b77:	5f                   	pop    rdi
     b78:	4c                   	rex.WR
     b79:	45                   	rex.RB
     b7a:	41 53                	push   r11
     b7c:	54                   	push   rsp
     b7d:	31 36                	xor    DWORD PTR [rsi],esi
     b7f:	5f                   	pop    rdi
     b80:	4d                   	rex.WRB
     b81:	41 58                	pop    r8
     b83:	5f                   	pop    rdi
     b84:	5f                   	pop    rdi
     b85:	20 30                	and    BYTE PTR [rax],dh
     b87:	78 37                	js     bc0 <__FRAME_END__+0x3cc>
     b89:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     b8f:	4c                   	rex.WR
     b90:	44                   	rex.R
     b91:	42                   	rex.X
     b92:	4c 5f                	rex.WR pop rdi
     b94:	52                   	push   rdx
     b95:	45                   	rex.RB
     b96:	44                   	rex.R
     b97:	49 52                	rex.WB push r10
     b99:	5f                   	pop    rdi
     b9a:	44                   	rex.R
     b9b:	45                   	rex.RB
     b9c:	43                   	rex.XB
     b9d:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
     ba1:	6d                   	ins    DWORD PTR es:[rdi],dx
     ba2:	65 29 20             	sub    DWORD PTR gs:[rax],esp
     ba5:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     ba8:	55                   	push   rbp
     ba9:	20 43 31             	and    BYTE PTR [rbx+0x31],al
     bac:	31 20                	xor    DWORD PTR [rax],esp
     bae:	37                   	(bad)  
     baf:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
     bb2:	30 20                	xor    BYTE PTR [rax],ah
     bb4:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     bb9:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     bbf:	72 69                	jb     c2a <__FRAME_END__+0x436>
     bc1:	63 20                	movsxd esp,DWORD PTR [rax]
     bc3:	2d 6d 61 72 63       	sub    eax,0x6372616d
     bc8:	68 3d 78 38 36       	push   0x3638783d
     bcd:	2d 36 34 20 2d       	sub    eax,0x2d203436
     bd2:	67 67 64 62 33       	addr32 addr32 fs (bad) 
     bd7:	20 2d 66 73 74 61    	and    BYTE PTR [rip+0x61747366],ch        # 61747f43 <_end+0x61546f2b>
     bdd:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     be0:	70 72                	jo     c54 <__FRAME_END__+0x460>
     be2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     be3:	74 65                	je     c4a <__FRAME_END__+0x456>
     be5:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     be9:	2d 73 74 72 6f       	sub    eax,0x6f727473
     bee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bef:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     bf3:	53                   	push   rbx
     bf4:	43                   	rex.XB
     bf5:	48                   	rex.W
     bf6:	41 52                	push   r10
     bf8:	5f                   	pop    rdi
     bf9:	4d                   	rex.WRB
     bfa:	41 58                	pop    r8
     bfc:	5f                   	pop    rdi
     bfd:	5f                   	pop    rdi
     bfe:	20 30                	and    BYTE PTR [rax],dh
     c00:	78 37                	js     c39 <__FRAME_END__+0x445>
     c02:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     c06:	65 78 74             	gs js  c7d <__FRAME_END__+0x489>
     c09:	65 72 6e             	gs jb  c7a <__FRAME_END__+0x486>
     c0c:	5f                   	pop    rdi
     c0d:	61                   	(bad)  
     c0e:	6c                   	ins    BYTE PTR es:[rdi],dx
     c0f:	77 61                	ja     c72 <__FRAME_END__+0x47e>
     c11:	79 73                	jns    c86 <__FRAME_END__+0x492>
     c13:	5f                   	pop    rdi
     c14:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c1b:	65 78 74             	gs js  c92 <__FRAME_END__+0x49e>
     c1e:	65 72 6e             	gs jb  c8f <__FRAME_END__+0x49b>
     c21:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     c24:	61                   	(bad)  
     c25:	6c                   	ins    BYTE PTR es:[rdi],dx
     c26:	77 61                	ja     c89 <__FRAME_END__+0x495>
     c28:	79 73                	jns    c9d <__FRAME_END__+0x4a9>
     c2a:	5f                   	pop    rdi
     c2b:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c32:	5f                   	pop    rdi
     c33:	5f                   	pop    rdi
     c34:	61                   	(bad)  
     c35:	74 74                	je     cab <__FRAME_END__+0x4b7>
     c37:	72 69                	jb     ca2 <__FRAME_END__+0x4ae>
     c39:	62                   	(bad)  
     c3a:	75 74                	jne    cb0 <__FRAME_END__+0x4bc>
     c3c:	65 5f                	gs pop rdi
     c3e:	5f                   	pop    rdi
     c3f:	20 28                	and    BYTE PTR [rax],ch
     c41:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     c44:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c46:	75 5f                	jne    ca7 <__FRAME_END__+0x4b3>
     c48:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     c4f:	5f                   	pop    rdi
     c50:	29 29                	sub    DWORD PTR [rcx],ebp
     c52:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     c55:	46                   	rex.RX
     c56:	4c 54                	rex.WR push rsp
     c58:	36 34 5f             	ss xor al,0x5f
     c5b:	44                   	rex.R
     c5c:	49                   	rex.WB
     c5d:	47 5f                	rex.RXB pop r15
     c5f:	5f                   	pop    rdi
     c60:	20 31                	and    BYTE PTR [rcx],dh
     c62:	35 00 5f 5f 49       	xor    eax,0x495f5f00
     c67:	4e 54                	rex.WRX push rsp
     c69:	5f                   	pop    rdi
     c6a:	46                   	rex.RX
     c6b:	41 53                	push   r11
     c6d:	54                   	push   rsp
     c6e:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     c71:	59                   	pop    rcx
     c72:	50                   	push   rax
     c73:	45 5f                	rex.RB pop r15
     c75:	5f                   	pop    rdi
     c76:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     c79:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c7b:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     c80:	61                   	(bad)  
     c81:	72 00                	jb     c83 <__FRAME_END__+0x48f>
     c83:	5f                   	pop    rdi
     c84:	5f                   	pop    rdi
     c85:	41 54                	push   r12
     c87:	4f                   	rex.WRXB
     c88:	4d                   	rex.WRB
     c89:	49                   	rex.WB
     c8a:	43 5f                	rex.XB pop r15
     c8c:	52                   	push   rdx
     c8d:	45                   	rex.RB
     c8e:	4c                   	rex.WR
     c8f:	41 58                	pop    r8
     c91:	45                   	rex.RB
     c92:	44 20 30             	and    BYTE PTR [rax],r14b
     c95:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     c98:	4f 5f                	rex.WRXB pop r15
     c9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c9b:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     ca0:	74 20                	je     cc2 <__FRAME_END__+0x4ce>
     ca2:	5f                   	pop    rdi
     ca3:	5f                   	pop    rdi
     ca4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ca5:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     caa:	74 00                	je     cac <__FRAME_END__+0x4b8>
     cac:	5f                   	pop    rdi
     cad:	5f                   	pop    rdi
     cae:	47                   	rex.RXB
     caf:	4c                   	rex.WR
     cb0:	49                   	rex.WB
     cb1:	42                   	rex.X
     cb2:	43 5f                	rex.XB pop r15
     cb4:	55                   	push   rbp
     cb5:	53                   	push   rbx
     cb6:	45 5f                	rex.RB pop r15
     cb8:	49                   	rex.WB
     cb9:	45                   	rex.RB
     cba:	43 5f                	rex.XB pop r15
     cbc:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f45f8 <_end+0x543f35e0>
     cc3:	59                   	pop    rcx
     cc4:	50                   	push   rax
     cc5:	45 53                	rex.RB push r11
     cc7:	5f                   	pop    rdi
     cc8:	45 58                	rex.RB pop r8
     cca:	54                   	push   rsp
     ccb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cce:	46                   	rex.RX
     ccf:	4c 54                	rex.WR push rsp
     cd1:	33 32                	xor    esi,DWORD PTR [rdx]
     cd3:	58                   	pop    rax
     cd4:	5f                   	pop    rdi
     cd5:	48                   	rex.W
     cd6:	41 53                	push   r11
     cd8:	5f                   	pop    rdi
     cd9:	49                   	rex.WB
     cda:	4e                   	rex.WRX
     cdb:	46                   	rex.RX
     cdc:	49                   	rex.WB
     cdd:	4e                   	rex.WRX
     cde:	49 54                	rex.WB push r12
     ce0:	59                   	pop    rcx
     ce1:	5f                   	pop    rdi
     ce2:	5f                   	pop    rdi
     ce3:	20 31                	and    BYTE PTR [rcx],dh
     ce5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ce8:	55                   	push   rbp
     ce9:	53                   	push   rbx
     cea:	45 5f                	rex.RB pop r15
     cec:	55                   	push   rbp
     ced:	4e                   	rex.WRX
     cee:	49 58                	rex.WB pop r8
     cf0:	39 38                	cmp    DWORD PTR [rax],edi
     cf2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cf5:	55                   	push   rbp
     cf6:	53                   	push   rbx
     cf7:	45 5f                	rex.RB pop r15
     cf9:	46                   	rex.RX
     cfa:	4f 52                	rex.WRXB push r10
     cfc:	54                   	push   rsp
     cfd:	49                   	rex.WB
     cfe:	46 59                	rex.RX pop rcx
     d00:	5f                   	pop    rdi
     d01:	4c                   	rex.WR
     d02:	45 56                	rex.RB push r14
     d04:	45                   	rex.RB
     d05:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
     d08:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     d0b:	54                   	push   rsp
     d0c:	46                   	rex.RX
     d0d:	49                   	rex.WB
     d0e:	4c                   	rex.WR
     d0f:	45 5f                	rex.RB pop r15
     d11:	53                   	push   rbx
     d12:	4f 55                	rex.WRXB push r13
     d14:	52                   	push   rdx
     d15:	43                   	rex.XB
     d16:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d1a:	55                   	push   rbp
     d1b:	53                   	push   rbx
     d1c:	45 5f                	rex.RB pop r15
     d1e:	41 54                	push   r12
     d20:	46                   	rex.RX
     d21:	49                   	rex.WB
     d22:	4c                   	rex.WR
     d23:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d27:	55                   	push   rbp
     d28:	49                   	rex.WB
     d29:	4e 54                	rex.WRX push rsp
     d2b:	5f                   	pop    rdi
     d2c:	4c                   	rex.WR
     d2d:	45                   	rex.RB
     d2e:	41 53                	push   r11
     d30:	54                   	push   rsp
     d31:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     d34:	59                   	pop    rcx
     d35:	50                   	push   rax
     d36:	45 5f                	rex.RB pop r15
     d38:	5f                   	pop    rdi
     d39:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     d3c:	73 69                	jae    da7 <__FRAME_END__+0x5b3>
     d3e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     d40:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     d45:	61                   	(bad)  
     d46:	72 00                	jb     d48 <__FRAME_END__+0x554>
     d48:	5f                   	pop    rdi
     d49:	5f                   	pop    rdi
     d4a:	53                   	push   rbx
     d4b:	49 5a                	rex.WB pop r10
     d4d:	45                   	rex.RB
     d4e:	4f                   	rex.WRXB
     d4f:	46 5f                	rex.RX pop rdi
     d51:	49                   	rex.WB
     d52:	4e 54                	rex.WRX push rsp
     d54:	31 32                	xor    DWORD PTR [rdx],esi
     d56:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
     d59:	20 31                	and    BYTE PTR [rcx],dh
     d5b:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     d5f:	4e 54                	rex.WRX push rsp
     d61:	48 28 66 63          	rex.W sub BYTE PTR [rsi+0x63],spl
     d65:	74 29                	je     d90 <__FRAME_END__+0x59c>
     d67:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     d6a:	61                   	(bad)  
     d6b:	74 74                	je     de1 <__FRAME_END__+0x5ed>
     d6d:	72 69                	jb     dd8 <__FRAME_END__+0x5e4>
     d6f:	62                   	(bad)  
     d70:	75 74                	jne    de6 <__FRAME_END__+0x5f2>
     d72:	65 5f                	gs pop rdi
     d74:	5f                   	pop    rdi
     d75:	20 28                	and    BYTE PTR [rax],ch
     d77:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     d7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d7b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d7c:	74 68                	je     de6 <__FRAME_END__+0x5f2>
     d7e:	72 6f                	jb     def <__FRAME_END__+0x5fb>
     d80:	77 5f                	ja     de1 <__FRAME_END__+0x5ed>
     d82:	5f                   	pop    rdi
     d83:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     d86:	4c                   	rex.WR
     d87:	45                   	rex.RB
     d88:	41                   	rex.B
     d89:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
     d8c:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     d8f:	74 00                	je     d91 <__FRAME_END__+0x59d>
     d91:	5f                   	pop    rdi
     d92:	49                   	rex.WB
     d93:	4f 53                	rex.WRXB push r11
     d95:	5f                   	pop    rdi
     d96:	41 54                	push   r12
     d98:	45                   	rex.RB
     d99:	4e                   	rex.WRX
     d9a:	44 20 34 00          	and    BYTE PTR [rax+rax*1],r14b
     d9e:	5f                   	pop    rdi
     d9f:	5f                   	pop    rdi
     da0:	67 6c                	ins    BYTE PTR es:[edi],dx
     da2:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     da9:	72 6f                	jb     e1a <__FRAME_END__+0x626>
     dab:	5f                   	pop    rdi
     dac:	77 61                	ja     e0f <__FRAME_END__+0x61b>
     dae:	72 6e                	jb     e1e <__FRAME_END__+0x62a>
     db0:	69 6e 67 28 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d28
     db7:	73 61                	jae    e1a <__FRAME_END__+0x626>
     db9:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
     dbd:	5f                   	pop    rdi
     dbe:	5f                   	pop    rdi
     dbf:	67 6c                	ins    BYTE PTR es:[edi],dx
     dc1:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     dc8:	72 6f                	jb     e39 <__FRAME_END__+0x645>
     dca:	5f                   	pop    rdi
     dcb:	77 61                	ja     e2e <__FRAME_END__+0x63a>
     dcd:	72 6e                	jb     e3d <__FRAME_END__+0x649>
     dcf:	69 6e 67 31 20 28 47 	imul   ebp,DWORD PTR [rsi+0x67],0x47282031
     dd6:	43                   	rex.XB
     dd7:	43 20 77 61          	rex.XB and BYTE PTR [r15+0x61],sil
     ddb:	72 6e                	jb     e4b <__FRAME_END__+0x657>
     ddd:	69 6e 67 20 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
     de4:	73 61                	jae    e47 <__FRAME_END__+0x653>
     de6:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
     dea:	5f                   	pop    rdi
     deb:	5f                   	pop    rdi
     dec:	46                   	rex.RX
     ded:	4c 54                	rex.WR push rsp
     def:	31 32                	xor    DWORD PTR [rdx],esi
     df1:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     df4:	41 53                	push   r11
     df6:	5f                   	pop    rdi
     df7:	51                   	push   rcx
     df8:	55                   	push   rbp
     df9:	49                   	rex.WB
     dfa:	45 54                	rex.RB push r12
     dfc:	5f                   	pop    rdi
     dfd:	4e                   	rex.WRX
     dfe:	41                   	rex.B
     dff:	4e 5f                	rex.WRX pop rdi
     e01:	5f                   	pop    rdi
     e02:	20 31                	and    BYTE PTR [rcx],dh
     e04:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     e07:	5f                   	pop    rdi
     e08:	53                   	push   rbx
     e09:	49 5a                	rex.WB pop r10
     e0b:	45 20 00             	and    BYTE PTR [r8],r8b
     e0e:	5f                   	pop    rdi
     e0f:	5f                   	pop    rdi
     e10:	46                   	rex.RX
     e11:	4c 54                	rex.WR push rsp
     e13:	31 32                	xor    DWORD PTR [rdx],esi
     e15:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     e18:	41 58                	pop    r8
     e1a:	5f                   	pop    rdi
     e1b:	5f                   	pop    rdi
     e1c:	20 31                	and    BYTE PTR [rcx],dh
     e1e:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
     e21:	39 37                	cmp    DWORD PTR [rdi],esi
     e23:	33 31                	xor    esi,DWORD PTR [rcx]
     e25:	34 39                	xor    al,0x39
     e27:	35 33 35 37 32       	xor    eax,0x32373533
     e2c:	33 31                	xor    esi,DWORD PTR [rcx]
     e2e:	37                   	(bad)  
     e2f:	36 35 30 38 35 37    	ss xor eax,0x37353830
     e35:	35 39 33 32 36       	xor    eax,0x36323339
     e3a:	36 32 38             	xor    bh,BYTE PTR ss:[rax]
     e3d:	30 30                	xor    BYTE PTR [rax],dh
     e3f:	37                   	(bad)  
     e40:	30 32                	xor    BYTE PTR [rdx],dh
     e42:	65 2b 34 39          	sub    esi,DWORD PTR gs:[rcx+rdi*1]
     e46:	33 32                	xor    esi,DWORD PTR [rdx]
     e48:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
     e4b:	38 00                	cmp    BYTE PTR [rax],al
     e4d:	42 55                	rex.X push rbp
     e4f:	46 53                	rex.RX push rbx
     e51:	49 5a                	rex.WB pop r10
     e53:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
     e56:	4f 5f                	rex.WRXB pop r15
     e58:	42 55                	rex.X push rbp
     e5a:	46 53                	rex.RX push rbx
     e5c:	49 5a                	rex.WB pop r10
     e5e:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     e61:	54                   	push   rsp
     e62:	46                   	rex.RX
     e63:	49                   	rex.WB
     e64:	4c                   	rex.WR
     e65:	45 5f                	rex.RB pop r15
     e67:	53                   	push   rbx
     e68:	4f 55                	rex.WRXB push r13
     e6a:	52                   	push   rdx
     e6b:	43                   	rex.XB
     e6c:	45 20 31             	and    BYTE PTR [r9],r14b
     e6f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     e72:	46                   	rex.RX
     e73:	4c 54                	rex.WR push rsp
     e75:	36 34 58             	ss xor al,0x58
     e78:	5f                   	pop    rdi
     e79:	44                   	rex.R
     e7a:	49                   	rex.WB
     e7b:	47 5f                	rex.RXB pop r15
     e7d:	5f                   	pop    rdi
     e7e:	20 31                	and    BYTE PTR [rcx],dh
     e80:	38 00                	cmp    BYTE PTR [rax],al
     e82:	5f                   	pop    rdi
     e83:	5f                   	pop    rdi
     e84:	49                   	rex.WB
     e85:	4e 54                	rex.WRX push rsp
     e87:	5f                   	pop    rdi
     e88:	4c                   	rex.WR
     e89:	45                   	rex.RB
     e8a:	41 53                	push   r11
     e8c:	54                   	push   rsp
     e8d:	31 36                	xor    DWORD PTR [rsi],esi
     e8f:	5f                   	pop    rdi
     e90:	57                   	push   rdi
     e91:	49                   	rex.WB
     e92:	44 54                	rex.R push rsp
     e94:	48 5f                	rex.W pop rdi
     e96:	5f                   	pop    rdi
     e97:	20 31                	and    BYTE PTR [rcx],dh
     e99:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     e9d:	46 53                	rex.RX push rbx
     e9f:	49                   	rex.WB
     ea0:	44 5f                	rex.R pop rdi
     ea2:	54                   	push   rsp
     ea3:	5f                   	pop    rdi
     ea4:	54                   	push   rsp
     ea5:	59                   	pop    rcx
     ea6:	50                   	push   rax
     ea7:	45 20 73 74          	and    BYTE PTR [r11+0x74],r14b
     eab:	72 75                	jb     f22 <__FRAME_END__+0x72e>
     ead:	63 74 20 7b          	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
     eb1:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     eb4:	74 20                	je     ed6 <__FRAME_END__+0x6e2>
     eb6:	5f                   	pop    rdi
     eb7:	5f                   	pop    rdi
     eb8:	76 61                	jbe    f1b <__FRAME_END__+0x727>
     eba:	6c                   	ins    BYTE PTR es:[rdi],dx
     ebb:	5b                   	pop    rbx
     ebc:	32 5d 3b             	xor    bl,BYTE PTR [rbp+0x3b]
     ebf:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     ec2:	5f                   	pop    rdi
     ec3:	5f                   	pop    rdi
     ec4:	73 73                	jae    f39 <__FRAME_END__+0x745>
     ec6:	69 7a 65 5f 74 5f 64 	imul   edi,DWORD PTR [rdx+0x65],0x645f745f
     ecd:	65 66 69 6e 65 64 20 	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
     ed4:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     ed7:	5f                   	pop    rdi
     ed8:	53                   	push   rbx
     ed9:	49 5a                	rex.WB pop r10
     edb:	45 5f                	rex.RB pop r15
     edd:	20 00                	and    BYTE PTR [rax],al
     edf:	5f                   	pop    rdi
     ee0:	70 6f                	jo     f51 <__FRAME_END__+0x75d>
     ee2:	73 00                	jae    ee4 <__FRAME_END__+0x6f0>
     ee4:	5f                   	pop    rdi
     ee5:	49                   	rex.WB
     ee6:	4f 5f                	rex.WRXB pop r15
     ee8:	66 65 72 72          	data16 gs jb f5e <__FRAME_END__+0x76a>
     eec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     eed:	72 5f                	jb     f4e <__FRAME_END__+0x75a>
     eef:	75 6e                	jne    f5f <__FRAME_END__+0x76b>
     ef1:	6c                   	ins    BYTE PTR es:[rdi],dx
     ef2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ef3:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     ef6:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
     efa:	66 70 29             	data16 jo f26 <__FRAME_END__+0x732>
     efd:	20 28                	and    BYTE PTR [rax],ch
     eff:	28 28                	sub    BYTE PTR [rax],ch
     f01:	5f                   	pop    rdi
     f02:	5f                   	pop    rdi
     f03:	66 70 29             	data16 jo f2f <__FRAME_END__+0x73b>
     f06:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
     f0b:	61                   	(bad)  
     f0c:	67 73 20             	addr32 jae f2f <__FRAME_END__+0x73b>
     f0f:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
     f13:	4f 5f                	rex.WRXB pop r15
     f15:	45 52                	rex.RB push r10
     f17:	52                   	push   rdx
     f18:	5f                   	pop    rdi
     f19:	53                   	push   rbx
     f1a:	45                   	rex.RB
     f1b:	45                   	rex.RB
     f1c:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
     f1f:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 293f45 <_end+0x92f2d>
     f25:	5f                   	pop    rdi
     f26:	5f                   	pop    rdi
     f27:	65 78 74             	gs js  f9e <__FRAME_END__+0x7aa>
     f2a:	65 72 6e             	gs jb  f9b <__FRAME_END__+0x7a7>
     f2d:	5f                   	pop    rdi
     f2e:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f35:	65 78 74             	gs js  fac <__FRAME_END__+0x7b8>
     f38:	65 72 6e             	gs jb  fa9 <__FRAME_END__+0x7b5>
     f3b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     f3e:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f45:	5f                   	pop    rdi
     f46:	5f                   	pop    rdi
     f47:	61                   	(bad)  
     f48:	74 74                	je     fbe <__FRAME_END__+0x7ca>
     f4a:	72 69                	jb     fb5 <__FRAME_END__+0x7c1>
     f4c:	62                   	(bad)  
     f4d:	75 74                	jne    fc3 <__FRAME_END__+0x7cf>
     f4f:	65 5f                	gs pop rdi
     f51:	5f                   	pop    rdi
     f52:	20 28                	and    BYTE PTR [rax],ch
     f54:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     f57:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     f59:	75 5f                	jne    fba <__FRAME_END__+0x7c6>
     f5b:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     f62:	5f                   	pop    rdi
     f63:	29 29                	sub    DWORD PTR [rcx],ebp
     f65:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     f68:	43                   	rex.XB
     f69:	43 5f                	rex.XB pop r15
     f6b:	53                   	push   rbx
     f6c:	49 5a                	rex.WB pop r10
     f6e:	45 5f                	rex.RB pop r15
     f70:	54                   	push   rsp
     f71:	20 00                	and    BYTE PTR [rax],al
     f73:	5f                   	pop    rdi
     f74:	5f                   	pop    rdi
     f75:	73 74                	jae    feb <__FRAME_END__+0x7f7>
     f77:	75 62                	jne    fdb <__FRAME_END__+0x7e7>
     f79:	5f                   	pop    rdi
     f7a:	73 65                	jae    fe1 <__FRAME_END__+0x7ed>
     f7c:	74 6c                	je     fea <__FRAME_END__+0x7f6>
     f7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f7f:	67 69 6e 20 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x20],0x465f5f00
     f86:	46 
     f87:	4c 54                	rex.WR push rsp
     f89:	33 32                	xor    esi,DWORD PTR [rdx]
     f8b:	5f                   	pop    rdi
     f8c:	48                   	rex.W
     f8d:	41 53                	push   r11
     f8f:	5f                   	pop    rdi
     f90:	44                   	rex.R
     f91:	45                   	rex.RB
     f92:	4e                   	rex.WRX
     f93:	4f 52                	rex.WRXB push r10
     f95:	4d 5f                	rex.WRB pop r15
     f97:	5f                   	pop    rdi
     f98:	20 31                	and    BYTE PTR [rcx],dh
     f9a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     f9d:	75 6e                	jne    100d <__FRAME_END__+0x819>
     f9f:	69 78 5f 5f 20 31 00 	imul   edi,DWORD PTR [rax+0x5f],0x31205f
     fa6:	5f                   	pop    rdi
     fa7:	5f                   	pop    rdi
     fa8:	47                   	rex.RXB
     fa9:	43                   	rex.XB
     faa:	43 5f                	rex.XB pop r15
     fac:	48                   	rex.W
     fad:	41 56                	push   r14
     faf:	45 5f                	rex.RB pop r15
     fb1:	53                   	push   rbx
     fb2:	59                   	pop    rcx
     fb3:	4e                   	rex.WRX
     fb4:	43 5f                	rex.XB pop r15
     fb6:	43                   	rex.XB
     fb7:	4f                   	rex.WRXB
     fb8:	4d 50                	rex.WRB push r8
     fba:	41 52                	push   r10
     fbc:	45 5f                	rex.RB pop r15
     fbe:	41                   	rex.B
     fbf:	4e                   	rex.WRX
     fc0:	44 5f                	rex.R pop rdi
     fc2:	53                   	push   rbx
     fc3:	57                   	push   rdi
     fc4:	41 50                	push   r8
     fc6:	5f                   	pop    rdi
     fc7:	31 20                	xor    DWORD PTR [rax],esp
     fc9:	31 00                	xor    DWORD PTR [rax],eax
     fcb:	5f                   	pop    rdi
     fcc:	49                   	rex.WB
     fcd:	4f 5f                	rex.WRXB pop r15
     fcf:	73 61                	jae    1032 <__FRAME_END__+0x83e>
     fd1:	76 65                	jbe    1038 <__FRAME_END__+0x844>
     fd3:	5f                   	pop    rdi
     fd4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     fd6:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     fda:	46                   	rex.RX
     fdb:	4c 54                	rex.WR push rsp
     fdd:	36 34 58             	ss xor al,0x58
     fe0:	5f                   	pop    rdi
     fe1:	4d                   	rex.WRB
     fe2:	49                   	rex.WB
     fe3:	4e 5f                	rex.WRX pop rdi
     fe5:	45 58                	rex.RB pop r8
     fe7:	50                   	push   rax
     fe8:	5f                   	pop    rdi
     fe9:	5f                   	pop    rdi
     fea:	20 28                	and    BYTE PTR [rax],ch
     fec:	2d 31 36 33 38       	sub    eax,0x38333631
     ff1:	31 29                	xor    DWORD PTR [rcx],ebp
     ff3:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
     ff6:	53                   	push   rbx
     ff7:	44 5f                	rex.R pop rdi
     ff9:	53                   	push   rbx
     ffa:	49 5a                	rex.WB pop r10
     ffc:	45 5f                	rex.RB pop r15
     ffe:	54                   	push   rsp
     fff:	5f                   	pop    rdi
    1000:	20 00                	and    BYTE PTR [rax],al
    1002:	5f                   	pop    rdi
    1003:	5f                   	pop    rdi
    1004:	50                   	push   rax
    1005:	49                   	rex.WB
    1006:	45 5f                	rex.RB pop r15
    1008:	5f                   	pop    rdi
    1009:	20 32                	and    BYTE PTR [rdx],dh
    100b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    100e:	46                   	rex.RX
    100f:	4c 54                	rex.WR push rsp
    1011:	5f                   	pop    rdi
    1012:	44                   	rex.R
    1013:	49                   	rex.WB
    1014:	47 5f                	rex.RXB pop r15
    1016:	5f                   	pop    rdi
    1017:	20 36                	and    BYTE PTR [rsi],dh
    1019:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    101c:	49                   	rex.WB
    101d:	4e 54                	rex.WRX push rsp
    101f:	5f                   	pop    rdi
    1020:	46                   	rex.RX
    1021:	41 53                	push   r11
    1023:	54                   	push   rsp
    1024:	31 36                	xor    DWORD PTR [rsi],esi
    1026:	5f                   	pop    rdi
    1027:	57                   	push   rdi
    1028:	49                   	rex.WB
    1029:	44 54                	rex.R push rsp
    102b:	48 5f                	rex.W pop rdi
    102d:	5f                   	pop    rdi
    102e:	20 36                	and    BYTE PTR [rsi],dh
    1030:	34 00                	xor    al,0x0
    1032:	5f                   	pop    rdi
    1033:	5f                   	pop    rdi
    1034:	47                   	rex.RXB
    1035:	43                   	rex.XB
    1036:	43 5f                	rex.XB pop r15
    1038:	41 54                	push   r12
    103a:	4f                   	rex.WRXB
    103b:	4d                   	rex.WRB
    103c:	49                   	rex.WB
    103d:	43 5f                	rex.XB pop r15
    103f:	42                   	rex.X
    1040:	4f                   	rex.WRXB
    1041:	4f                   	rex.WRXB
    1042:	4c 5f                	rex.WR pop rdi
    1044:	4c                   	rex.WR
    1045:	4f                   	rex.WRXB
    1046:	43                   	rex.XB
    1047:	4b 5f                	rex.WXB pop r15
    1049:	46 52                	rex.RX push rdx
    104b:	45                   	rex.RB
    104c:	45 20 32             	and    BYTE PTR [r10],r14b
    104f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1052:	4f 5f                	rex.WRXB pop r15
    1054:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1055:	66 66 5f             	data16 pop di
    1058:	74 20                	je     107a <__FRAME_END__+0x886>
    105a:	5f                   	pop    rdi
    105b:	5f                   	pop    rdi
    105c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    105d:	66 66 5f             	data16 pop di
    1060:	74 00                	je     1062 <__FRAME_END__+0x86e>
    1062:	5f                   	pop    rdi
    1063:	5f                   	pop    rdi
    1064:	70 69                	jo     10cf <__FRAME_END__+0x8db>
    1066:	65 5f                	gs pop rdi
    1068:	5f                   	pop    rdi
    1069:	20 32                	and    BYTE PTR [rdx],dh
    106b:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    106e:	54                   	push   rsp
    106f:	44                   	rex.R
    1070:	49                   	rex.WB
    1071:	4f 5f                	rex.WRXB pop r15
    1073:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    1076:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1079:	44                   	rex.R
    107a:	45                   	rex.RB
    107b:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    107e:	5f                   	pop    rdi
    107f:	4d                   	rex.WRB
    1080:	49                   	rex.WB
    1081:	4e 5f                	rex.WRX pop rdi
    1083:	5f                   	pop    rdi
    1084:	20 31                	and    BYTE PTR [rcx],dh
    1086:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    108c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    108f:	49                   	rex.WB
    1090:	4e 54                	rex.WRX push rsp
    1092:	4d                   	rex.WRB
    1093:	41 58                	pop    r8
    1095:	5f                   	pop    rdi
    1096:	4d                   	rex.WRB
    1097:	41 58                	pop    r8
    1099:	5f                   	pop    rdi
    109a:	5f                   	pop    rdi
    109b:	20 30                	and    BYTE PTR [rax],dh
    109d:	78 37                	js     10d6 <__FRAME_END__+0x8e2>
    109f:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    10a6:	66 66 66 66 66 66 66 
    10ad:	66 4c 00 5f 42       	data16 rex.WR add BYTE PTR [rdi+0x42],r11b
    10b2:	49 54                	rex.WB push r12
    10b4:	53                   	push   rbx
    10b5:	5f                   	pop    rdi
    10b6:	4c                   	rex.WR
    10b7:	49                   	rex.WB
    10b8:	42                   	rex.X
    10b9:	49                   	rex.WB
    10ba:	4f 5f                	rex.WRXB pop r15
    10bc:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    10bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10c2:	47                   	rex.RXB
    10c3:	43                   	rex.XB
    10c4:	43 5f                	rex.XB pop r15
    10c6:	49                   	rex.WB
    10c7:	45                   	rex.RB
    10c8:	43 5f                	rex.XB pop r15
    10ca:	35 35 39 20 32       	xor    eax,0x32203935
    10cf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10d2:	46                   	rex.RX
    10d3:	4c 54                	rex.WR push rsp
    10d5:	31 32                	xor    DWORD PTR [rdx],esi
    10d7:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    10da:	49                   	rex.WB
    10db:	4e 5f                	rex.WRX pop rdi
    10dd:	45 58                	rex.RB pop r8
    10df:	50                   	push   rax
    10e0:	5f                   	pop    rdi
    10e1:	5f                   	pop    rdi
    10e2:	20 28                	and    BYTE PTR [rax],ch
    10e4:	2d 31 36 33 38       	sub    eax,0x38333631
    10e9:	31 29                	xor    DWORD PTR [rcx],ebp
    10eb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10ee:	46                   	rex.RX
    10ef:	4c 54                	rex.WR push rsp
    10f1:	33 32                	xor    esi,DWORD PTR [rdx]
    10f3:	5f                   	pop    rdi
    10f4:	48                   	rex.W
    10f5:	41 53                	push   r11
    10f7:	5f                   	pop    rdi
    10f8:	51                   	push   rcx
    10f9:	55                   	push   rbp
    10fa:	49                   	rex.WB
    10fb:	45 54                	rex.RB push r12
    10fd:	5f                   	pop    rdi
    10fe:	4e                   	rex.WRX
    10ff:	41                   	rex.B
    1100:	4e 5f                	rex.WRX pop rdi
    1102:	5f                   	pop    rdi
    1103:	20 31                	and    BYTE PTR [rcx],dh
    1105:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    1108:	53                   	push   rbx
    1109:	44 5f                	rex.R pop rdi
    110b:	53                   	push   rbx
    110c:	49 5a                	rex.WB pop r10
    110e:	45 5f                	rex.RB pop r15
    1110:	54                   	push   rsp
    1111:	5f                   	pop    rdi
    1112:	44                   	rex.R
    1113:	45                   	rex.RB
    1114:	46                   	rex.RX
    1115:	49                   	rex.WB
    1116:	4e                   	rex.WRX
    1117:	45                   	rex.RB
    1118:	44 5f                	rex.R pop rdi
    111a:	20 00                	and    BYTE PTR [rax],al
    111c:	5f                   	pop    rdi
    111d:	5f                   	pop    rdi
    111e:	55                   	push   rbp
    111f:	49                   	rex.WB
    1120:	4e 54                	rex.WRX push rsp
    1122:	5f                   	pop    rdi
    1123:	4c                   	rex.WR
    1124:	45                   	rex.RB
    1125:	41 53                	push   r11
    1127:	54                   	push   rsp
    1128:	31 36                	xor    DWORD PTR [rsi],esi
    112a:	5f                   	pop    rdi
    112b:	4d                   	rex.WRB
    112c:	41 58                	pop    r8
    112e:	5f                   	pop    rdi
    112f:	5f                   	pop    rdi
    1130:	20 30                	and    BYTE PTR [rax],dh
    1132:	78 66                	js     119a <__FRAME_END__+0x9a6>
    1134:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    113a:	55                   	push   rbp
    113b:	49                   	rex.WB
    113c:	4e 54                	rex.WRX push rsp
    113e:	5f                   	pop    rdi
    113f:	46                   	rex.RX
    1140:	41 53                	push   r11
    1142:	54                   	push   rsp
    1143:	36 34 5f             	ss xor al,0x5f
    1146:	4d                   	rex.WRB
    1147:	41 58                	pop    r8
    1149:	5f                   	pop    rdi
    114a:	5f                   	pop    rdi
    114b:	20 30                	and    BYTE PTR [rax],dh
    114d:	78 66                	js     11b5 <__FRAME_END__+0x9c1>
    114f:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1156:	66 66 66 66 66 66 66 
    115d:	66 55                	push   bp
    115f:	4c 00 5f 49          	rex.WR add BYTE PTR [rdi+0x49],r11b
    1163:	4f 5f                	rex.WRXB pop r15
    1165:	45 52                	rex.RB push r10
    1167:	52                   	push   rdx
    1168:	5f                   	pop    rdi
    1169:	53                   	push   rbx
    116a:	45                   	rex.RB
    116b:	45                   	rex.RB
    116c:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    116f:	78 32                	js     11a3 <__FRAME_END__+0x9af>
    1171:	30 00                	xor    BYTE PTR [rax],al
    1173:	5f                   	pop    rdi
    1174:	5f                   	pop    rdi
    1175:	61                   	(bad)  
    1176:	74 74                	je     11ec <__FRAME_END__+0x9f8>
    1178:	72 69                	jb     11e3 <__FRAME_END__+0x9ef>
    117a:	62                   	(bad)  
    117b:	75 74                	jne    11f1 <__FRAME_END__+0x9fd>
    117d:	65 5f                	gs pop rdi
    117f:	75 73                	jne    11f4 <__FRAME_END__+0xa00>
    1181:	65 64 5f             	gs fs pop rdi
    1184:	5f                   	pop    rdi
    1185:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    1188:	61                   	(bad)  
    1189:	74 74                	je     11ff <__FRAME_END__+0xa0b>
    118b:	72 69                	jb     11f6 <__FRAME_END__+0xa02>
    118d:	62                   	(bad)  
    118e:	75 74                	jne    1204 <__FRAME_END__+0xa10>
    1190:	65 5f                	gs pop rdi
    1192:	5f                   	pop    rdi
    1193:	20 28                	and    BYTE PTR [rax],ch
    1195:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    1198:	75 73                	jne    120d <__FRAME_END__+0xa19>
    119a:	65 64 5f             	gs fs pop rdi
    119d:	5f                   	pop    rdi
    119e:	29 29                	sub    DWORD PTR [rcx],ebp
    11a0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11a3:	61                   	(bad)  
    11a4:	74 74                	je     121a <__FRAME_END__+0xa26>
    11a6:	72 69                	jb     1211 <__FRAME_END__+0xa1d>
    11a8:	62                   	(bad)  
    11a9:	75 74                	jne    121f <__FRAME_END__+0xa2b>
    11ab:	65 5f                	gs pop rdi
    11ad:	61                   	(bad)  
    11ae:	72 74                	jb     1224 <__FRAME_END__+0xa30>
    11b0:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    11b7:	5f                   	pop    rdi
    11b8:	5f                   	pop    rdi
    11b9:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    11bc:	61                   	(bad)  
    11bd:	74 74                	je     1233 <__FRAME_END__+0xa3f>
    11bf:	72 69                	jb     122a <__FRAME_END__+0xa36>
    11c1:	62                   	(bad)  
    11c2:	75 74                	jne    1238 <__FRAME_END__+0xa44>
    11c4:	65 5f                	gs pop rdi
    11c6:	5f                   	pop    rdi
    11c7:	20 28                	and    BYTE PTR [rax],ch
    11c9:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    11cc:	61                   	(bad)  
    11cd:	72 74                	jb     1243 <__FRAME_END__+0xa4f>
    11cf:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    11d6:	5f                   	pop    rdi
    11d7:	5f                   	pop    rdi
    11d8:	29 29                	sub    DWORD PTR [rcx],ebp
    11da:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    11dd:	4f 5f                	rex.WRXB pop r15
    11df:	66 74 72             	data16 je 1254 <__FRAME_END__+0xa60>
    11e2:	79 6c                	jns    1250 <__FRAME_END__+0xa5c>
    11e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11e5:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    11e8:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    11ef:	29 
    11f0:	20 00                	and    BYTE PTR [rax],al
    11f2:	5f                   	pop    rdi
    11f3:	5f                   	pop    rdi
    11f4:	55                   	push   rbp
    11f5:	49                   	rex.WB
    11f6:	4e 54                	rex.WRX push rsp
    11f8:	5f                   	pop    rdi
    11f9:	4c                   	rex.WR
    11fa:	45                   	rex.RB
    11fb:	41 53                	push   r11
    11fd:	54                   	push   rsp
    11fe:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1201:	41 58                	pop    r8
    1203:	5f                   	pop    rdi
    1204:	5f                   	pop    rdi
    1205:	20 30                	and    BYTE PTR [rax],dh
    1207:	78 66                	js     126f <__FRAME_END__+0xa7b>
    1209:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    120d:	47                   	rex.RXB
    120e:	4c                   	rex.WR
    120f:	49                   	rex.WB
    1210:	42                   	rex.X
    1211:	43 5f                	rex.XB pop r15
    1213:	55                   	push   rbp
    1214:	53                   	push   rbx
    1215:	45 5f                	rex.RB pop r15
    1217:	4c                   	rex.WR
    1218:	49                   	rex.WB
    1219:	42 5f                	rex.X pop rdi
    121b:	45 58                	rex.RB pop r8
    121d:	54                   	push   rsp
    121e:	32 20                	xor    ah,BYTE PTR [rax]
    1220:	30 00                	xor    BYTE PTR [rax],al
    1222:	5f                   	pop    rdi
    1223:	5f                   	pop    rdi
    1224:	44                   	rex.R
    1225:	45                   	rex.RB
    1226:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1229:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    122c:	49                   	rex.WB
    122d:	4e 5f                	rex.WRX pop rdi
    122f:	45 58                	rex.RB pop r8
    1231:	50                   	push   rax
    1232:	5f                   	pop    rdi
    1233:	5f                   	pop    rdi
    1234:	20 28                	and    BYTE PTR [rax],ch
    1236:	2d 36 31 34 32       	sub    eax,0x32343136
    123b:	29 00                	sub    DWORD PTR [rax],eax
    123d:	5f                   	pop    rdi
    123e:	5f                   	pop    rdi
    123f:	4b                   	rex.WXB
    1240:	45 52                	rex.RB push r10
    1242:	4e                   	rex.WRX
    1243:	45                   	rex.RB
    1244:	4c 5f                	rex.WR pop rdi
    1246:	53                   	push   rbx
    1247:	54                   	push   rsp
    1248:	52                   	push   rdx
    1249:	49                   	rex.WB
    124a:	43 54                	rex.XB push r12
    124c:	5f                   	pop    rdi
    124d:	4e                   	rex.WRX
    124e:	41                   	rex.B
    124f:	4d                   	rex.WRB
    1250:	45 53                	rex.RB push r11
    1252:	20 00                	and    BYTE PTR [rax],al
    1254:	5f                   	pop    rdi
    1255:	5f                   	pop    rdi
    1256:	57                   	push   rdi
    1257:	43                   	rex.XB
    1258:	48                   	rex.W
    1259:	41 52                	push   r10
    125b:	5f                   	pop    rdi
    125c:	54                   	push   rsp
    125d:	59                   	pop    rcx
    125e:	50                   	push   rax
    125f:	45 5f                	rex.RB pop r15
    1261:	5f                   	pop    rdi
    1262:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    1265:	74 00                	je     1267 <__FRAME_END__+0xa73>
    1267:	5f                   	pop    rdi
    1268:	5f                   	pop    rdi
    1269:	49                   	rex.WB
    126a:	4e 54                	rex.WRX push rsp
    126c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    126f:	41 58                	pop    r8
    1271:	5f                   	pop    rdi
    1272:	5f                   	pop    rdi
    1273:	20 30                	and    BYTE PTR [rax],dh
    1275:	78 37                	js     12ae <__FRAME_END__+0xaba>
    1277:	66 00 67 65          	data16 add BYTE PTR [rdi+0x65],ah
    127b:	74 63                	je     12e0 <__FRAME_END__+0xaec>
    127d:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    1280:	70 29                	jo     12ab <__FRAME_END__+0xab7>
    1282:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    1285:	4f 5f                	rex.WRXB pop r15
    1287:	67 65 74 63          	addr32 gs je 12ee <__FRAME_END__+0xafa>
    128b:	20 28                	and    BYTE PTR [rax],ch
    128d:	5f                   	pop    rdi
    128e:	66 70 29             	data16 jo 12ba <__FRAME_END__+0xac6>
    1291:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1294:	44                   	rex.R
    1295:	45                   	rex.RB
    1296:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1299:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    129c:	50                   	push   rax
    129d:	53                   	push   rbx
    129e:	49                   	rex.WB
    129f:	4c                   	rex.WR
    12a0:	4f                   	rex.WRXB
    12a1:	4e 5f                	rex.WRX pop rdi
    12a3:	5f                   	pop    rdi
    12a4:	20 31                	and    BYTE PTR [rcx],dh
    12a6:	45 2d 33 33 44 4c    	rex.RB sub eax,0x4c443333
    12ac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12af:	55                   	push   rbp
    12b0:	53                   	push   rbx
    12b1:	45 5f                	rex.RB pop r15
    12b3:	50                   	push   rax
    12b4:	4f 53                	rex.WRXB push r11
    12b6:	49 58                	rex.WB pop r8
    12b8:	31 39                	xor    DWORD PTR [rcx],edi
    12ba:	39 35 30 36 00 5f    	cmp    DWORD PTR [rip+0x5f003630],esi        # 5f0048f0 <_end+0x5ee038d8>
    12c0:	5f                   	pop    rdi
    12c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12c2:	65 65 64 5f          	gs gs fs pop rdi
    12c6:	4e 55                	rex.WRX push rbp
    12c8:	4c                   	rex.WR
    12c9:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    12cd:	52                   	push   rdx
    12ce:	45                   	rex.RB
    12cf:	44                   	rex.R
    12d0:	49 52                	rex.WB push r10
    12d2:	45                   	rex.RB
    12d3:	43 54                	rex.XB push r12
    12d5:	5f                   	pop    rdi
    12d6:	4e 54                	rex.WRX push rsp
    12d8:	48 5f                	rex.W pop rdi
    12da:	4c                   	rex.WR
    12db:	44                   	rex.R
    12dc:	42                   	rex.X
    12dd:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    12e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    12e2:	65 2c 70             	gs sub al,0x70
    12e5:	72 6f                	jb     1356 <__FRAME_END__+0xb62>
    12e7:	74 6f                	je     1358 <__FRAME_END__+0xb64>
    12e9:	2c 61                	sub    al,0x61
    12eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    12ec:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    12f3:	52                   	push   rdx
    12f4:	45                   	rex.RB
    12f5:	44                   	rex.R
    12f6:	49 52                	rex.WB push r10
    12f8:	45                   	rex.RB
    12f9:	43 54                	rex.XB push r12
    12fb:	5f                   	pop    rdi
    12fc:	4e 54                	rex.WRX push rsp
    12fe:	48 20 28             	rex.W and BYTE PTR [rax],bpl
    1301:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1302:	61                   	(bad)  
    1303:	6d                   	ins    DWORD PTR es:[rdi],dx
    1304:	65 2c 20             	gs sub al,0x20
    1307:	70 72                	jo     137b <__FRAME_END__+0xb87>
    1309:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    130a:	74 6f                	je     137b <__FRAME_END__+0xb87>
    130c:	2c 20                	sub    al,0x20
    130e:	61                   	(bad)  
    130f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1310:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    1317:	52                   	push   rdx
    1318:	45                   	rex.RB
    1319:	44                   	rex.R
    131a:	49 52                	rex.WB push r10
    131c:	45                   	rex.RB
    131d:	43 54                	rex.XB push r12
    131f:	5f                   	pop    rdi
    1320:	4e 54                	rex.WRX push rsp
    1322:	48                   	rex.W
    1323:	4e                   	rex.WRX
    1324:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    1328:	6d                   	ins    DWORD PTR es:[rdi],dx
    1329:	65 2c 70             	gs sub al,0x70
    132c:	72 6f                	jb     139d <__FRAME_END__+0xba9>
    132e:	74 6f                	je     139f <__FRAME_END__+0xbab>
    1330:	2c 61                	sub    al,0x61
    1332:	6c                   	ins    BYTE PTR es:[rdi],dx
    1333:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    133a:	6d                   	ins    DWORD PTR es:[rdi],dx
    133b:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    133f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1340:	74 6f                	je     13b1 <__FRAME_END__+0xbbd>
    1342:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    1345:	61                   	(bad)  
    1346:	73 6d                	jae    13b5 <__FRAME_END__+0xbc1>
    1348:	5f                   	pop    rdi
    1349:	5f                   	pop    rdi
    134a:	20 28                	and    BYTE PTR [rax],ch
    134c:	5f                   	pop    rdi
    134d:	5f                   	pop    rdi
    134e:	41 53                	push   r11
    1350:	4d                   	rex.WRB
    1351:	4e                   	rex.WRX
    1352:	41                   	rex.B
    1353:	4d                   	rex.WRB
    1354:	45 20 28             	and    BYTE PTR [r8],r13b
    1357:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    135a:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    1361:	5f                   	pop    rdi
    1362:	54                   	push   rsp
    1363:	48 52                	rex.W push rdx
    1365:	4f 57                	rex.WRXB push r15
    1367:	4e                   	rex.WRX
    1368:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    136c:	46                   	rex.RX
    136d:	4c 54                	rex.WR push rsp
    136f:	31 32                	xor    DWORD PTR [rdx],esi
    1371:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1374:	41 58                	pop    r8
    1376:	5f                   	pop    rdi
    1377:	45 58                	rex.RB pop r8
    1379:	50                   	push   rax
    137a:	5f                   	pop    rdi
    137b:	5f                   	pop    rdi
    137c:	20 31                	and    BYTE PTR [rcx],dh
    137e:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1381:	34 00                	xor    al,0x0
    1383:	5f                   	pop    rdi
    1384:	5f                   	pop    rdi
    1385:	46                   	rex.RX
    1386:	4c 54                	rex.WR push rsp
    1388:	5f                   	pop    rdi
    1389:	52                   	push   rdx
    138a:	41                   	rex.B
    138b:	44                   	rex.R
    138c:	49 58                	rex.WB pop r8
    138e:	5f                   	pop    rdi
    138f:	5f                   	pop    rdi
    1390:	20 32                	and    BYTE PTR [rdx],dh
    1392:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1395:	46                   	rex.RX
    1396:	4c 54                	rex.WR push rsp
    1398:	33 32                	xor    esi,DWORD PTR [rdx]
    139a:	58                   	pop    rax
    139b:	5f                   	pop    rdi
    139c:	44                   	rex.R
    139d:	45                   	rex.RB
    139e:	4e                   	rex.WRX
    139f:	4f 52                	rex.WRXB push r10
    13a1:	4d 5f                	rex.WRB pop r15
    13a3:	4d                   	rex.WRB
    13a4:	49                   	rex.WB
    13a5:	4e 5f                	rex.WRX pop rdi
    13a7:	5f                   	pop    rdi
    13a8:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    13ab:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    13ae:	36 35 36 34 35 38    	ss xor eax,0x38353436
    13b4:	34 31                	xor    al,0x31
    13b6:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    13b9:	35 34 34 31 37       	xor    eax,0x37313434
    13be:	36 35 36 38 37 39    	ss xor eax,0x39373836
    13c4:	32 38                	xor    bh,BYTE PTR [rax]
    13c6:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    13c9:	32 31                	xor    dh,BYTE PTR [rcx]
    13cb:	33 37                	xor    esi,DWORD PTR [rdi]
    13cd:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    13d0:	33 32                	xor    esi,DWORD PTR [rdx]
    13d2:	34 46                	xor    al,0x46
    13d4:	33 32                	xor    esi,DWORD PTR [rdx]
    13d6:	78 00                	js     13d8 <__FRAME_END__+0xbe4>
    13d8:	5f                   	pop    rdi
    13d9:	5f                   	pop    rdi
    13da:	67 6c                	ins    BYTE PTR es:[edi],dx
    13dc:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    13e3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13e4:	67 5f                	addr32 pop rdi
    13e6:	68 61 73 5f 65       	push   0x655f7361
    13eb:	78 74                	js     1461 <__FRAME_END__+0xc6d>
    13ed:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    13ef:	73 69                	jae    145a <__FRAME_END__+0xc66>
    13f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13f3:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    13f6:	74 29                	je     1421 <__FRAME_END__+0xc2d>
    13f8:	20 30                	and    BYTE PTR [rax],dh
    13fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    13fd:	50                   	push   rax
    13fe:	4d 54                	rex.WRB push r12
    1400:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    1403:	67 73 29             	addr32 jae 142f <__FRAME_END__+0xc3b>
    1406:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    1409:	67 73 00             	addr32 jae 140c <__FRAME_END__+0xc18>
    140c:	5f                   	pop    rdi
    140d:	5f                   	pop    rdi
    140e:	47                   	rex.RXB
    140f:	49                   	rex.WB
    1410:	44 5f                	rex.R pop rdi
    1412:	54                   	push   rsp
    1413:	5f                   	pop    rdi
    1414:	54                   	push   rsp
    1415:	59                   	pop    rcx
    1416:	50                   	push   rax
    1417:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    141b:	55                   	push   rbp
    141c:	33 32                	xor    esi,DWORD PTR [rdx]
    141e:	5f                   	pop    rdi
    141f:	54                   	push   rsp
    1420:	59                   	pop    rcx
    1421:	50                   	push   rax
    1422:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1426:	53                   	push   rbx
    1427:	49 5a                	rex.WB pop r10
    1429:	45                   	rex.RB
    142a:	4f                   	rex.WRXB
    142b:	46 5f                	rex.RX pop rdi
    142d:	4c                   	rex.WR
    142e:	4f                   	rex.WRXB
    142f:	4e                   	rex.WRX
    1430:	47 5f                	rex.RXB pop r15
    1432:	44                   	rex.R
    1433:	4f 55                	rex.WRXB push r13
    1435:	42                   	rex.X
    1436:	4c                   	rex.WR
    1437:	45 5f                	rex.RB pop r15
    1439:	5f                   	pop    rdi
    143a:	20 31                	and    BYTE PTR [rcx],dh
    143c:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1440:	44                   	rex.R
    1441:	42                   	rex.X
    1442:	4c 5f                	rex.WR pop rdi
    1444:	48                   	rex.W
    1445:	41 53                	push   r11
    1447:	5f                   	pop    rdi
    1448:	51                   	push   rcx
    1449:	55                   	push   rbp
    144a:	49                   	rex.WB
    144b:	45 54                	rex.RB push r12
    144d:	5f                   	pop    rdi
    144e:	4e                   	rex.WRX
    144f:	41                   	rex.B
    1450:	4e 5f                	rex.WRX pop rdi
    1452:	5f                   	pop    rdi
    1453:	20 31                	and    BYTE PTR [rcx],dh
    1455:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1458:	77 75                	ja     14cf <__FRAME_END__+0xcdb>
    145a:	72 20                	jb     147c <__FRAME_END__+0xc88>
    145c:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    145f:	49 54                	rex.WB push r12
    1461:	53                   	push   rbx
    1462:	5f                   	pop    rdi
    1463:	54                   	push   rsp
    1464:	59                   	pop    rcx
    1465:	50                   	push   rax
    1466:	45 53                	rex.RB push r11
    1468:	5f                   	pop    rdi
    1469:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    146c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    146f:	4c                   	rex.WR
    1470:	44                   	rex.R
    1471:	42                   	rex.X
    1472:	4c 5f                	rex.WR pop rdi
    1474:	44                   	rex.R
    1475:	45                   	rex.RB
    1476:	4e                   	rex.WRX
    1477:	4f 52                	rex.WRXB push r10
    1479:	4d 5f                	rex.WRB pop r15
    147b:	4d                   	rex.WRB
    147c:	49                   	rex.WB
    147d:	4e 5f                	rex.WRX pop rdi
    147f:	5f                   	pop    rdi
    1480:	20 33                	and    BYTE PTR [rbx],dh
    1482:	2e 36 34 35          	cs ss xor al,0x35
    1486:	31 39                	xor    DWORD PTR [rcx],edi
    1488:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 383845c1 <_end+0x381835a9>
    148e:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    1491:	34 36                	xor    al,0x36
    1493:	30 32                	xor    BYTE PTR [rdx],dh
    1495:	35 32 38 34 30       	xor    eax,0x30343832
    149a:	35 39 33 33 36       	xor    eax,0x36333339
    149f:	31 39                	xor    DWORD PTR [rcx],edi
    14a1:	34 31                	xor    al,0x31
    14a3:	39 38                	cmp    DWORD PTR [rax],edi
    14a5:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    14a8:	34 39                	xor    al,0x39
    14aa:	35 31 4c 00 5f       	xor    eax,0x5f004c31
    14af:	5f                   	pop    rdi
    14b0:	50                   	push   rax
    14b1:	49                   	rex.WB
    14b2:	44 5f                	rex.R pop rdi
    14b4:	54                   	push   rsp
    14b5:	5f                   	pop    rdi
    14b6:	54                   	push   rsp
    14b7:	59                   	pop    rcx
    14b8:	50                   	push   rax
    14b9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    14bd:	53                   	push   rbx
    14be:	33 32                	xor    esi,DWORD PTR [rdx]
    14c0:	5f                   	pop    rdi
    14c1:	54                   	push   rsp
    14c2:	59                   	pop    rcx
    14c3:	50                   	push   rax
    14c4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    14c8:	73 74                	jae    153e <__FRAME_END__+0xd4a>
    14ca:	75 62                	jne    152e <__FRAME_END__+0xd3a>
    14cc:	5f                   	pop    rdi
    14cd:	66 61                	data16 (bad) 
    14cf:	74 74                	je     1545 <__FRAME_END__+0xd51>
    14d1:	61                   	(bad)  
    14d2:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    14d5:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
    14d8:	73 5f                	jae    1539 <__FRAME_END__+0xd45>
    14da:	65 72 72             	gs jb  154f <__FRAME_END__+0xd5b>
    14dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    14de:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    14e5:	4c 54                	rex.WR push rsp
    14e7:	36 34 5f             	ss xor al,0x5f
    14ea:	48                   	rex.W
    14eb:	41 53                	push   r11
    14ed:	5f                   	pop    rdi
    14ee:	49                   	rex.WB
    14ef:	4e                   	rex.WRX
    14f0:	46                   	rex.RX
    14f1:	49                   	rex.WB
    14f2:	4e                   	rex.WRX
    14f3:	49 54                	rex.WB push r12
    14f5:	59                   	pop    rcx
    14f6:	5f                   	pop    rdi
    14f7:	5f                   	pop    rdi
    14f8:	20 31                	and    BYTE PTR [rcx],dh
    14fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14fd:	55                   	push   rbp
    14fe:	49                   	rex.WB
    14ff:	4e 54                	rex.WRX push rsp
    1501:	5f                   	pop    rdi
    1502:	46                   	rex.RX
    1503:	41 53                	push   r11
    1505:	54                   	push   rsp
    1506:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1509:	41 58                	pop    r8
    150b:	5f                   	pop    rdi
    150c:	5f                   	pop    rdi
    150d:	20 30                	and    BYTE PTR [rax],dh
    150f:	78 66                	js     1577 <__FRAME_END__+0xd83>
    1511:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1515:	41 54                	push   r12
    1517:	4f                   	rex.WRXB
    1518:	4d                   	rex.WRB
    1519:	49                   	rex.WB
    151a:	43 5f                	rex.XB pop r15
    151c:	48                   	rex.W
    151d:	4c                   	rex.WR
    151e:	45 5f                	rex.RB pop r15
    1520:	52                   	push   rdx
    1521:	45                   	rex.RB
    1522:	4c                   	rex.WR
    1523:	45                   	rex.RB
    1524:	41 53                	push   r11
    1526:	45 20 31             	and    BYTE PTR [r9],r14b
    1529:	33 31                	xor    esi,DWORD PTR [rcx]
    152b:	30 37                	xor    BYTE PTR [rdi],dh
    152d:	32 00                	xor    al,BYTE PTR [rax]
    152f:	5f                   	pop    rdi
    1530:	5f                   	pop    rdi
    1531:	4c                   	rex.WR
    1532:	44                   	rex.R
    1533:	42                   	rex.X
    1534:	4c 5f                	rex.WR pop rdi
    1536:	4d                   	rex.WRB
    1537:	41 58                	pop    r8
    1539:	5f                   	pop    rdi
    153a:	45 58                	rex.RB pop r8
    153c:	50                   	push   rax
    153d:	5f                   	pop    rdi
    153e:	5f                   	pop    rdi
    153f:	20 31                	and    BYTE PTR [rcx],dh
    1541:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1544:	34 00                	xor    al,0x0
    1546:	5f                   	pop    rdi
    1547:	5f                   	pop    rdi
    1548:	73 74                	jae    15be <__FRAME_END__+0xdca>
    154a:	75 62                	jne    15ae <__FRAME_END__+0xdba>
    154c:	5f                   	pop    rdi
    154d:	67 74 74             	addr32 je 15c4 <__FRAME_END__+0xdd0>
    1550:	79 20                	jns    1572 <__FRAME_END__+0xd7e>
    1552:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    1555:	49 54                	rex.WB push r12
    1557:	53                   	push   rbx
    1558:	5f                   	pop    rdi
    1559:	54                   	push   rsp
    155a:	59                   	pop    rcx
    155b:	50                   	push   rax
    155c:	45 53                	rex.RB push r11
    155e:	49 5a                	rex.WB pop r10
    1560:	45 53                	rex.RB push r11
    1562:	5f                   	pop    rdi
    1563:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    1566:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1569:	55                   	push   rbp
    156a:	53                   	push   rbx
    156b:	45                   	rex.RB
    156c:	43                   	rex.XB
    156d:	4f                   	rex.WRXB
    156e:	4e                   	rex.WRX
    156f:	44 53                	rex.R push rbx
    1571:	5f                   	pop    rdi
    1572:	54                   	push   rsp
    1573:	5f                   	pop    rdi
    1574:	54                   	push   rsp
    1575:	59                   	pop    rcx
    1576:	50                   	push   rax
    1577:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    157b:	55                   	push   rbp
    157c:	33 32                	xor    esi,DWORD PTR [rdx]
    157e:	5f                   	pop    rdi
    157f:	54                   	push   rsp
    1580:	59                   	pop    rcx
    1581:	50                   	push   rax
    1582:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    1586:	4f 5f                	rex.WRXB pop r15
    1588:	70 65                	jo     15ef <__FRAME_END__+0xdfb>
    158a:	65 6b 63 28 5f       	imul   esp,DWORD PTR gs:[rbx+0x28],0x5f
    158f:	66 70 29             	data16 jo 15bb <__FRAME_END__+0xdc7>
    1592:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    1595:	4f 5f                	rex.WRXB pop r15
    1597:	70 65                	jo     15fe <__FRAME_END__+0xe0a>
    1599:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    159e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    159f:	6c                   	ins    BYTE PTR es:[rdi],dx
    15a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15a1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    15a4:	64 20 28             	and    BYTE PTR fs:[rax],ch
    15a7:	5f                   	pop    rdi
    15a8:	66 70 29             	data16 jo 15d4 <__FRAME_END__+0xde0>
    15ab:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    15ae:	49                   	rex.WB
    15af:	4e 54                	rex.WRX push rsp
    15b1:	50                   	push   rax
    15b2:	54                   	push   rsp
    15b3:	52                   	push   rdx
    15b4:	5f                   	pop    rdi
    15b5:	54                   	push   rsp
    15b6:	59                   	pop    rcx
    15b7:	50                   	push   rax
    15b8:	45 5f                	rex.RB pop r15
    15ba:	5f                   	pop    rdi
    15bb:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    15bf:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    15c3:	74 00                	je     15c5 <__FRAME_END__+0xdd1>
    15c5:	5f                   	pop    rdi
    15c6:	5f                   	pop    rdi
    15c7:	44                   	rex.R
    15c8:	45                   	rex.RB
    15c9:	43                   	rex.XB
    15ca:	36 34 5f             	ss xor al,0x5f
    15cd:	4d                   	rex.WRB
    15ce:	41 58                	pop    r8
    15d0:	5f                   	pop    rdi
    15d1:	5f                   	pop    rdi
    15d2:	20 39                	and    BYTE PTR [rcx],bh
    15d4:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    15d7:	39 39                	cmp    DWORD PTR [rcx],edi
    15d9:	39 39                	cmp    DWORD PTR [rcx],edi
    15db:	39 39                	cmp    DWORD PTR [rcx],edi
    15dd:	39 39                	cmp    DWORD PTR [rcx],edi
    15df:	39 39                	cmp    DWORD PTR [rcx],edi
    15e1:	39 39                	cmp    DWORD PTR [rcx],edi
    15e3:	39 45 33             	cmp    DWORD PTR [rbp+0x33],eax
    15e6:	38 34 44             	cmp    BYTE PTR [rsp+rax*2],dh
    15e9:	44 00 73 79          	add    BYTE PTR [rbx+0x79],r14b
    15ed:	73 5f                	jae    164e <__FRAME_END__+0xe5a>
    15ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15f0:	65 72 72             	gs jb  1665 <__FRAME_END__+0xe71>
    15f3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    15f6:	47                   	rex.RXB
    15f7:	43                   	rex.XB
    15f8:	43 5f                	rex.XB pop r15
    15fa:	41 54                	push   r12
    15fc:	4f                   	rex.WRXB
    15fd:	4d                   	rex.WRB
    15fe:	49                   	rex.WB
    15ff:	43 5f                	rex.XB pop r15
    1601:	49                   	rex.WB
    1602:	4e 54                	rex.WRX push rsp
    1604:	5f                   	pop    rdi
    1605:	4c                   	rex.WR
    1606:	4f                   	rex.WRXB
    1607:	43                   	rex.XB
    1608:	4b 5f                	rex.WXB pop r15
    160a:	46 52                	rex.RX push rdx
    160c:	45                   	rex.RB
    160d:	45 20 32             	and    BYTE PTR [r10],r14b
    1610:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    1613:	59                   	pop    rcx
    1614:	53                   	push   rbx
    1615:	5f                   	pop    rdi
    1616:	53                   	push   rbx
    1617:	49 5a                	rex.WB pop r10
    1619:	45 5f                	rex.RB pop r15
    161b:	54                   	push   rsp
    161c:	5f                   	pop    rdi
    161d:	48 20 00             	rex.W and BYTE PTR [rax],al
    1620:	5f                   	pop    rdi
    1621:	5f                   	pop    rdi
    1622:	4d                   	rex.WRB
    1623:	4d 58                	rex.WRB pop r8
    1625:	5f                   	pop    rdi
    1626:	5f                   	pop    rdi
    1627:	20 31                	and    BYTE PTR [rcx],dh
    1629:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    162c:	42                   	rex.X
    162d:	4c                   	rex.WR
    162e:	4b                   	rex.WXB
    162f:	43                   	rex.XB
    1630:	4e 54                	rex.WRX push rsp
    1632:	5f                   	pop    rdi
    1633:	54                   	push   rsp
    1634:	5f                   	pop    rdi
    1635:	54                   	push   rsp
    1636:	59                   	pop    rcx
    1637:	50                   	push   rax
    1638:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    163c:	53                   	push   rbx
    163d:	59                   	pop    rcx
    163e:	53                   	push   rbx
    163f:	43                   	rex.XB
    1640:	41                   	rex.B
    1641:	4c                   	rex.WR
    1642:	4c 5f                	rex.WR pop rdi
    1644:	53                   	push   rbx
    1645:	4c                   	rex.WR
    1646:	4f                   	rex.WRXB
    1647:	4e                   	rex.WRX
    1648:	47 5f                	rex.RXB pop r15
    164a:	54                   	push   rsp
    164b:	59                   	pop    rcx
    164c:	50                   	push   rax
    164d:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    1651:	4f 5f                	rex.WRXB pop r15
    1653:	53                   	push   rbx
    1654:	48                   	rex.W
    1655:	4f 57                	rex.WRXB push r15
    1657:	42                   	rex.X
    1658:	41 53                	push   r11
    165a:	45 20 30             	and    BYTE PTR [r8],r14b
    165d:	32 30                	xor    dh,BYTE PTR [rax]
    165f:	30 00                	xor    BYTE PTR [rax],al
    1661:	5f                   	pop    rdi
    1662:	5f                   	pop    rdi
    1663:	73 74                	jae    16d9 <__FRAME_END__+0xee5>
    1665:	75 62                	jne    16c9 <__FRAME_END__+0xed5>
    1667:	5f                   	pop    rdi
    1668:	73 74                	jae    16de <__FRAME_END__+0xeea>
    166a:	74 79                	je     16e5 <__FRAME_END__+0xef1>
    166c:	20 00                	and    BYTE PTR [rax],al
    166e:	5f                   	pop    rdi
    166f:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
    1676:	5f                   	pop    rdi
    1677:	5f                   	pop    rdi
    1678:	48                   	rex.W
    1679:	41 56                	push   r14
    167b:	45 5f                	rex.RB pop r15
    167d:	47                   	rex.RXB
    167e:	45                   	rex.RB
    167f:	4e                   	rex.WRX
    1680:	45 52                	rex.RB push r10
    1682:	49                   	rex.WB
    1683:	43 5f                	rex.XB pop r15
    1685:	53                   	push   rbx
    1686:	45                   	rex.RB
    1687:	4c                   	rex.WR
    1688:	45                   	rex.RB
    1689:	43 54                	rex.XB push r12
    168b:	49                   	rex.WB
    168c:	4f                   	rex.WRXB
    168d:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    1690:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1693:	52                   	push   rdx
    1694:	4c                   	rex.WR
    1695:	49                   	rex.WB
    1696:	4d                   	rex.WRB
    1697:	36 34 5f             	ss xor al,0x5f
    169a:	54                   	push   rsp
    169b:	5f                   	pop    rdi
    169c:	54                   	push   rsp
    169d:	59                   	pop    rcx
    169e:	50                   	push   rax
    169f:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    16a3:	55                   	push   rbp
    16a4:	51                   	push   rcx
    16a5:	55                   	push   rbp
    16a6:	41                   	rex.B
    16a7:	44 5f                	rex.R pop rdi
    16a9:	54                   	push   rsp
    16aa:	59                   	pop    rcx
    16ab:	50                   	push   rax
    16ac:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    16b0:	46                   	rex.RX
    16b1:	4c 54                	rex.WR push rsp
    16b3:	31 32                	xor    DWORD PTR [rdx],esi
    16b5:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    16b8:	41                   	rex.B
    16b9:	4e 54                	rex.WRX push rsp
    16bb:	5f                   	pop    rdi
    16bc:	44                   	rex.R
    16bd:	49                   	rex.WB
    16be:	47 5f                	rex.RXB pop r15
    16c0:	5f                   	pop    rdi
    16c1:	20 31                	and    BYTE PTR [rcx],dh
    16c3:	31 33                	xor    DWORD PTR [rbx],esi
    16c5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16c8:	4f 52                	rex.WRXB push r10
    16ca:	44                   	rex.R
    16cb:	45 52                	rex.RB push r10
    16cd:	5f                   	pop    rdi
    16ce:	4c                   	rex.WR
    16cf:	49 54                	rex.WB push r12
    16d1:	54                   	push   rsp
    16d2:	4c                   	rex.WR
    16d3:	45 5f                	rex.RB pop r15
    16d5:	45                   	rex.RB
    16d6:	4e                   	rex.WRX
    16d7:	44                   	rex.R
    16d8:	49                   	rex.WB
    16d9:	41                   	rex.B
    16da:	4e 5f                	rex.WRX pop rdi
    16dc:	5f                   	pop    rdi
    16dd:	20 31                	and    BYTE PTR [rcx],dh
    16df:	32 33                	xor    dh,BYTE PTR [rbx]
    16e1:	34 00                	xor    al,0x0
    16e3:	5f                   	pop    rdi
    16e4:	5f                   	pop    rdi
    16e5:	55                   	push   rbp
    16e6:	53                   	push   rbx
    16e7:	45 5f                	rex.RB pop r15
    16e9:	58                   	pop    rax
    16ea:	4f 50                	rex.WRXB push r8
    16ec:	45                   	rex.RB
    16ed:	4e 32 4b 20          	rex.WRX xor r9b,BYTE PTR [rbx+0x20]
    16f1:	31 00                	xor    DWORD PTR [rax],eax
    16f3:	5f                   	pop    rdi
    16f4:	5f                   	pop    rdi
    16f5:	53                   	push   rbx
    16f6:	49 5a                	rex.WB pop r10
    16f8:	45                   	rex.RB
    16f9:	4f                   	rex.WRXB
    16fa:	46 5f                	rex.RX pop rdi
    16fc:	50                   	push   rax
    16fd:	54                   	push   rsp
    16fe:	52                   	push   rdx
    16ff:	44                   	rex.R
    1700:	49                   	rex.WB
    1701:	46                   	rex.RX
    1702:	46 5f                	rex.RX pop rdi
    1704:	54                   	push   rsp
    1705:	5f                   	pop    rdi
    1706:	5f                   	pop    rdi
    1707:	20 38                	and    BYTE PTR [rax],bh
    1709:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    170c:	4f 53                	rex.WRXB push r11
    170e:	5f                   	pop    rdi
    170f:	54                   	push   rsp
    1710:	52                   	push   rdx
    1711:	55                   	push   rbp
    1712:	4e                   	rex.WRX
    1713:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    1716:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    171a:	44                   	rex.R
    171b:	45                   	rex.RB
    171c:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    171f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1722:	41                   	rex.B
    1723:	4e 54                	rex.WRX push rsp
    1725:	5f                   	pop    rdi
    1726:	44                   	rex.R
    1727:	49                   	rex.WB
    1728:	47 5f                	rex.RXB pop r15
    172a:	5f                   	pop    rdi
    172b:	20 33                	and    BYTE PTR [rbx],dh
    172d:	34 00                	xor    al,0x0
    172f:	5f                   	pop    rdi
    1730:	5f                   	pop    rdi
    1731:	55                   	push   rbp
    1732:	53                   	push   rbx
    1733:	45 5f                	rex.RB pop r15
    1735:	49 53                	rex.WB push r11
    1737:	4f                   	rex.WRXB
    1738:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    173b:	20 31                	and    BYTE PTR [rcx],dh
    173d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1740:	49                   	rex.WB
    1741:	4e 54                	rex.WRX push rsp
    1743:	33 32                	xor    esi,DWORD PTR [rdx]
    1745:	5f                   	pop    rdi
    1746:	54                   	push   rsp
    1747:	59                   	pop    rcx
    1748:	50                   	push   rax
    1749:	45 5f                	rex.RB pop r15
    174b:	5f                   	pop    rdi
    174c:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    174f:	74 00                	je     1751 <__FRAME_END__+0xf5d>
    1751:	5f                   	pop    rdi
    1752:	5f                   	pop    rdi
    1753:	4b                   	rex.WXB
    1754:	45 52                	rex.RB push r10
    1756:	4e                   	rex.WRX
    1757:	45                   	rex.RB
    1758:	4c 5f                	rex.WR pop rdi
    175a:	53                   	push   rbx
    175b:	54                   	push   rsp
    175c:	52                   	push   rdx
    175d:	49                   	rex.WB
    175e:	43 54                	rex.XB push r12
    1760:	5f                   	pop    rdi
    1761:	4e                   	rex.WRX
    1762:	41                   	rex.B
    1763:	4d                   	rex.WRB
    1764:	45 53                	rex.RB push r11
    1766:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1769:	55                   	push   rbp
    176a:	33 32                	xor    esi,DWORD PTR [rdx]
    176c:	5f                   	pop    rdi
    176d:	54                   	push   rsp
    176e:	59                   	pop    rcx
    176f:	50                   	push   rax
    1770:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    1774:	73 69                	jae    17df <__FRAME_END__+0xfeb>
    1776:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1778:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    177d:	74 00                	je     177f <__FRAME_END__+0xf8b>
    177f:	5f                   	pop    rdi
    1780:	5f                   	pop    rdi
    1781:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    1784:	65 5f                	gs pop rdi
    1786:	6d                   	ins    DWORD PTR es:[rdi],dx
    1787:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1788:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    178b:	5f                   	pop    rdi
    178c:	73 6d                	jae    17fb <__FRAME_END__+0x1007>
    178e:	61                   	(bad)  
    178f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1790:	6c                   	ins    BYTE PTR es:[rdi],dx
    1791:	5f                   	pop    rdi
    1792:	5f                   	pop    rdi
    1793:	20 31                	and    BYTE PTR [rcx],dh
    1795:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1798:	55                   	push   rbp
    1799:	53                   	push   rbx
    179a:	45 5f                	rex.RB pop r15
    179c:	49 53                	rex.WB push r11
    179e:	4f                   	rex.WRXB
    179f:	43 39 35 00 5f 5f 46 	rex.XB cmp DWORD PTR [rip+0x465f5f00],esi        # 465f76a6 <_end+0x463f668e>
    17a6:	4c 54                	rex.WR push rsp
    17a8:	36 34 58             	ss xor al,0x58
    17ab:	5f                   	pop    rdi
    17ac:	48                   	rex.W
    17ad:	41 53                	push   r11
    17af:	5f                   	pop    rdi
    17b0:	44                   	rex.R
    17b1:	45                   	rex.RB
    17b2:	4e                   	rex.WRX
    17b3:	4f 52                	rex.WRXB push r10
    17b5:	4d 5f                	rex.WRB pop r15
    17b7:	5f                   	pop    rdi
    17b8:	20 31                	and    BYTE PTR [rcx],dh
    17ba:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17bd:	44                   	rex.R
    17be:	45                   	rex.RB
    17bf:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    17c2:	5f                   	pop    rdi
    17c3:	4d                   	rex.WRB
    17c4:	41 58                	pop    r8
    17c6:	5f                   	pop    rdi
    17c7:	45 58                	rex.RB pop r8
    17c9:	50                   	push   rax
    17ca:	5f                   	pop    rdi
    17cb:	5f                   	pop    rdi
    17cc:	20 39                	and    BYTE PTR [rcx],bh
    17ce:	37                   	(bad)  
    17cf:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    17d2:	4f                   	rex.WRXB
    17d3:	4e                   	rex.WRX
    17d4:	42                   	rex.X
    17d5:	46 20 32             	rex.RX and BYTE PTR [rdx],r14b
    17d8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17db:	55                   	push   rbp
    17dc:	53                   	push   rbx
    17dd:	45 5f                	rex.RB pop r15
    17df:	49 53                	rex.WB push r11
    17e1:	4f                   	rex.WRXB
    17e2:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    17e5:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    17e8:	64 65 72 72          	fs gs jb 185e <__FRAME_END__+0x106a>
    17ec:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    17ef:	64 65 72 72          	fs gs jb 1865 <__FRAME_END__+0x1071>
    17f3:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    17f6:	74 61                	je     1859 <__FRAME_END__+0x1065>
    17f8:	62                   	(bad)  
    17f9:	6c                   	ins    BYTE PTR es:[rdi],dx
    17fa:	65 5f                	gs pop rdi
    17fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17fd:	66 66 73 65          	data16 data16 jae 1866 <__FRAME_END__+0x1072>
    1801:	74 00                	je     1803 <__FRAME_END__+0x100f>
    1803:	5f                   	pop    rdi
    1804:	47 5f                	rex.RXB pop r15
    1806:	49                   	rex.WB
    1807:	4f 5f                	rex.WRXB pop r15
    1809:	49                   	rex.WB
    180a:	4f 5f                	rex.WRXB pop r15
    180c:	46                   	rex.RX
    180d:	49                   	rex.WB
    180e:	4c                   	rex.WR
    180f:	45 5f                	rex.RB pop r15
    1811:	56                   	push   rsi
    1812:	45 52                	rex.RB push r10
    1814:	53                   	push   rbx
    1815:	49                   	rex.WB
    1816:	4f                   	rex.WRXB
    1817:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    181a:	78 32                	js     184e <__FRAME_END__+0x105a>
    181c:	30 30                	xor    BYTE PTR [rax],dh
    181e:	30 31                	xor    BYTE PTR [rcx],dh
    1820:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1823:	4f 5f                	rex.WRXB pop r15
    1825:	54                   	push   rsp
    1826:	49                   	rex.WB
    1827:	45                   	rex.RB
    1828:	44 5f                	rex.R pop rdi
    182a:	50                   	push   rax
    182b:	55                   	push   rbp
    182c:	54                   	push   rsp
    182d:	5f                   	pop    rdi
    182e:	47                   	rex.RXB
    182f:	45 54                	rex.RB push r12
    1831:	20 30                	and    BYTE PTR [rax],dh
    1833:	78 34                	js     1869 <__FRAME_END__+0x1075>
    1835:	30 30                	xor    BYTE PTR [rax],dh
    1837:	00 4c 5f 74          	add    BYTE PTR [rdi+rbx*2+0x74],cl
    183b:	6d                   	ins    DWORD PTR es:[rdi],dx
    183c:	70 6e                	jo     18ac <__FRAME_END__+0x10b8>
    183e:	61                   	(bad)  
    183f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1840:	20 32                	and    BYTE PTR [rdx],dh
    1842:	30 00                	xor    BYTE PTR [rax],al
    1844:	5f                   	pop    rdi
    1845:	49                   	rex.WB
    1846:	4f 5f                	rex.WRXB pop r15
    1848:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    184c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    184d:	75 70                	jne    18bf <__FRAME_END__+0x10cb>
    184f:	5f                   	pop    rdi
    1850:	72 65                	jb     18b7 <__FRAME_END__+0x10c3>
    1852:	67 69 6f 6e 5f 73 74 	imul   ebp,DWORD PTR [edi+0x6e],0x6174735f
    1859:	61 
    185a:	72 74                	jb     18d0 <__FRAME_END__+0x10dc>
    185c:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    185f:	63 74 2c 5f          	movsxd esi,DWORD PTR [rsp+rbp*1+0x5f]
    1863:	66 70 29             	data16 jo 188f <__FRAME_END__+0x109b>
    1866:	20 00                	and    BYTE PTR [rax],al
    1868:	5f                   	pop    rdi
    1869:	5f                   	pop    rdi
    186a:	53                   	push   rbx
    186b:	54                   	push   rsp
    186c:	44                   	rex.R
    186d:	43 5f                	rex.XB pop r15
    186f:	49                   	rex.WB
    1870:	45                   	rex.RB
    1871:	43 5f                	rex.XB pop r15
    1873:	35 35 39 5f 43       	xor    eax,0x435f3935
    1878:	4f                   	rex.WRXB
    1879:	4d 50                	rex.WRB push r8
    187b:	4c                   	rex.WR
    187c:	45 58                	rex.RB pop r8
    187e:	5f                   	pop    rdi
    187f:	5f                   	pop    rdi
    1880:	20 31                	and    BYTE PTR [rcx],dh
    1882:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1885:	47                   	rex.RXB
    1886:	4c                   	rex.WR
    1887:	49                   	rex.WB
    1888:	42                   	rex.X
    1889:	43 5f                	rex.XB pop r15
    188b:	55                   	push   rbp
    188c:	53                   	push   rbx
    188d:	45 5f                	rex.RB pop r15
    188f:	44                   	rex.R
    1890:	45 50                	rex.RB push r8
    1892:	52                   	push   rdx
    1893:	45                   	rex.RB
    1894:	43                   	rex.XB
    1895:	41 54                	push   r12
    1897:	45                   	rex.RB
    1898:	44 5f                	rex.R pop rdi
    189a:	47                   	rex.RXB
    189b:	45 54                	rex.RB push r12
    189d:	53                   	push   rbx
    189e:	20 30                	and    BYTE PTR [rax],dh
    18a0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    18a3:	4f 5f                	rex.WRXB pop r15
    18a5:	48                   	rex.W
    18a6:	45 58                	rex.RB pop r8
    18a8:	20 30                	and    BYTE PTR [rax],dh
    18aa:	31 30                	xor    DWORD PTR [rax],esi
    18ac:	30 00                	xor    BYTE PTR [rax],al
    18ae:	5f                   	pop    rdi
    18af:	5f                   	pop    rdi
    18b0:	46                   	rex.RX
    18b1:	4c 54                	rex.WR push rsp
    18b3:	36 34 58             	ss xor al,0x58
    18b6:	5f                   	pop    rdi
    18b7:	4d                   	rex.WRB
    18b8:	49                   	rex.WB
    18b9:	4e 5f                	rex.WRX pop rdi
    18bb:	31 30                	xor    DWORD PTR [rax],esi
    18bd:	5f                   	pop    rdi
    18be:	45 58                	rex.RB pop r8
    18c0:	50                   	push   rax
    18c1:	5f                   	pop    rdi
    18c2:	5f                   	pop    rdi
    18c3:	20 28                	and    BYTE PTR [rax],ch
    18c5:	2d 34 39 33 31       	sub    eax,0x31333934
    18ca:	29 00                	sub    DWORD PTR [rax],eax
    18cc:	5f                   	pop    rdi
    18cd:	5f                   	pop    rdi
    18ce:	73 74                	jae    1944 <__FRAME_END__+0x1150>
    18d0:	75 62                	jne    1934 <__FRAME_END__+0x1140>
    18d2:	5f                   	pop    rdi
    18d3:	70 75                	jo     194a <__FRAME_END__+0x1156>
    18d5:	74 6d                	je     1944 <__FRAME_END__+0x1150>
    18d7:	73 67                	jae    1940 <__FRAME_END__+0x114c>
    18d9:	20 00                	and    BYTE PTR [rax],al
    18db:	5f                   	pop    rdi
    18dc:	49                   	rex.WB
    18dd:	4f 5f                	rex.WRXB pop r15
    18df:	72 65                	jb     1946 <__FRAME_END__+0x1152>
    18e1:	61                   	(bad)  
    18e2:	64 5f                	fs pop rdi
    18e4:	62 61                	(bad)  
    18e6:	73 65                	jae    194d <__FRAME_END__+0x1159>
    18e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18eb:	53                   	push   rbx
    18ec:	54                   	push   rsp
    18ed:	44                   	rex.R
    18ee:	43 5f                	rex.XB pop r15
    18f0:	49 53                	rex.WB push r11
    18f2:	4f 5f                	rex.WRXB pop r15
    18f4:	31 30                	xor    DWORD PTR [rax],esi
    18f6:	36 34 36             	ss xor al,0x36
    18f9:	5f                   	pop    rdi
    18fa:	5f                   	pop    rdi
    18fb:	20 32                	and    BYTE PTR [rdx],dh
    18fd:	30 31                	xor    BYTE PTR [rcx],dh
    18ff:	37                   	(bad)  
    1900:	30 36                	xor    BYTE PTR [rsi],dh
    1902:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1906:	42                   	rex.X
    1907:	45                   	rex.RB
    1908:	47                   	rex.RXB
    1909:	49                   	rex.WB
    190a:	4e 5f                	rex.WRX pop rdi
    190c:	44                   	rex.R
    190d:	45                   	rex.RB
    190e:	43                   	rex.XB
    190f:	4c 53                	rex.WR push rbx
    1911:	20 00                	and    BYTE PTR [rax],al
    1913:	5f                   	pop    rdi
    1914:	49                   	rex.WB
    1915:	4f 5f                	rex.WRXB pop r15
    1917:	73 74                	jae    198d <__FRAME_END__+0x1199>
    1919:	64 69 6e 20 28 28 5f 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x495f2828
    1920:	49 
    1921:	4f 5f                	rex.WRXB pop r15
    1923:	46                   	rex.RX
    1924:	49                   	rex.WB
    1925:	4c                   	rex.WR
    1926:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1929:	28 26                	sub    BYTE PTR [rsi],ah
    192b:	5f                   	pop    rdi
    192c:	49                   	rex.WB
    192d:	4f 5f                	rex.WRXB pop r15
    192f:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1932:	5f                   	pop    rdi
    1933:	73 74                	jae    19a9 <__FRAME_END__+0x11b5>
    1935:	64 69 6e 5f 29 29 00 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x5f002929
    193c:	5f 
    193d:	5f                   	pop    rdi
    193e:	46                   	rex.RX
    193f:	4c 54                	rex.WR push rsp
    1941:	31 32                	xor    DWORD PTR [rdx],esi
    1943:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1946:	41 58                	pop    r8
    1948:	5f                   	pop    rdi
    1949:	31 30                	xor    DWORD PTR [rax],esi
    194b:	5f                   	pop    rdi
    194c:	45 58                	rex.RB pop r8
    194e:	50                   	push   rax
    194f:	5f                   	pop    rdi
    1950:	5f                   	pop    rdi
    1951:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    1954:	33 32                	xor    esi,DWORD PTR [rdx]
    1956:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1959:	46                   	rex.RX
    195a:	4c 54                	rex.WR push rsp
    195c:	31 32                	xor    DWORD PTR [rdx],esi
    195e:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1961:	49                   	rex.WB
    1962:	4e 5f                	rex.WRX pop rdi
    1964:	5f                   	pop    rdi
    1965:	20 33                	and    BYTE PTR [rbx],dh
    1967:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    196a:	32 31                	xor    dh,BYTE PTR [rcx]
    196c:	30 33                	xor    BYTE PTR [rbx],dh
    196e:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    1971:	31 31                	xor    DWORD PTR [rcx],esi
    1973:	32 30                	xor    dh,BYTE PTR [rax]
    1975:	39 33                	cmp    DWORD PTR [rbx],esi
    1977:	35 30 36 32 36       	xor    eax,0x36323630
    197c:	32 36                	xor    dh,BYTE PTR [rsi]
    197e:	37                   	(bad)  
    197f:	37                   	(bad)  
    1980:	38 31                	cmp    BYTE PTR [rcx],dh
    1982:	37                   	(bad)  
    1983:	33 32                	xor    esi,DWORD PTR [rdx]
    1985:	31 37                	xor    DWORD PTR [rdi],esi
    1987:	35 32 36 30 65       	xor    eax,0x65303632
    198c:	2d 34 39 33 32       	sub    eax,0x32333934
    1991:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    1994:	38 00                	cmp    BYTE PTR [rax],al
    1996:	5f                   	pop    rdi
    1997:	5f                   	pop    rdi
    1998:	53                   	push   rbx
    1999:	55                   	push   rbp
    199a:	53                   	push   rbx
    199b:	45                   	rex.RB
    199c:	43                   	rex.XB
    199d:	4f                   	rex.WRXB
    199e:	4e                   	rex.WRX
    199f:	44 53                	rex.R push rbx
    19a1:	5f                   	pop    rdi
    19a2:	54                   	push   rsp
    19a3:	5f                   	pop    rdi
    19a4:	54                   	push   rsp
    19a5:	59                   	pop    rcx
    19a6:	50                   	push   rax
    19a7:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    19ab:	53                   	push   rbx
    19ac:	59                   	pop    rcx
    19ad:	53                   	push   rbx
    19ae:	43                   	rex.XB
    19af:	41                   	rex.B
    19b0:	4c                   	rex.WR
    19b1:	4c 5f                	rex.WR pop rdi
    19b3:	53                   	push   rbx
    19b4:	4c                   	rex.WR
    19b5:	4f                   	rex.WRXB
    19b6:	4e                   	rex.WRX
    19b7:	47 5f                	rex.RXB pop r15
    19b9:	54                   	push   rsp
    19ba:	59                   	pop    rcx
    19bb:	50                   	push   rax
    19bc:	45 00 53 45          	add    BYTE PTR [r11+0x45],r10b
    19c0:	45                   	rex.RB
    19c1:	4b 5f                	rex.WXB pop r15
    19c3:	45                   	rex.RB
    19c4:	4e                   	rex.WRX
    19c5:	44 20 32             	and    BYTE PTR [rdx],r14b
    19c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19cb:	49                   	rex.WB
    19cc:	4e 54                	rex.WRX push rsp
    19ce:	5f                   	pop    rdi
    19cf:	46                   	rex.RX
    19d0:	41 53                	push   r11
    19d2:	54                   	push   rsp
    19d3:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    19d6:	49                   	rex.WB
    19d7:	44 54                	rex.R push rsp
    19d9:	48 5f                	rex.W pop rdi
    19db:	5f                   	pop    rdi
    19dc:	20 38                	and    BYTE PTR [rax],bh
    19de:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19e1:	46                   	rex.RX
    19e2:	4c 54                	rex.WR push rsp
    19e4:	36 34 5f             	ss xor al,0x5f
    19e7:	4d                   	rex.WRB
    19e8:	49                   	rex.WB
    19e9:	4e 5f                	rex.WRX pop rdi
    19eb:	31 30                	xor    DWORD PTR [rax],esi
    19ed:	5f                   	pop    rdi
    19ee:	45 58                	rex.RB pop r8
    19f0:	50                   	push   rax
    19f1:	5f                   	pop    rdi
    19f2:	5f                   	pop    rdi
    19f3:	20 28                	and    BYTE PTR [rax],ch
    19f5:	2d 33 30 37 29       	sub    eax,0x29373033
    19fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19fd:	73 74                	jae    1a73 <__FRAME_END__+0x127f>
    19ff:	75 62                	jne    1a63 <__FRAME_END__+0x126f>
    1a01:	5f                   	pop    rdi
    1a02:	66 64 65 74 61       	data16 fs gs je 1a68 <__FRAME_END__+0x1274>
    1a07:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1a0a:	00 5f 6e             	add    BYTE PTR [rdi+0x6e],bl
    1a0d:	65 78 74             	gs js  1a84 <__FRAME_END__+0x1290>
    1a10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a13:	44                   	rex.R
    1a14:	42                   	rex.X
    1a15:	4c 5f                	rex.WR pop rdi
    1a17:	4d                   	rex.WRB
    1a18:	41 58                	pop    r8
    1a1a:	5f                   	pop    rdi
    1a1b:	5f                   	pop    rdi
    1a1c:	20 28                	and    BYTE PTR [rax],ch
    1a1e:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    1a22:	62                   	(bad)  
    1a23:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a24:	65 29 31             	sub    DWORD PTR gs:[rcx],esi
    1a27:	2e 37                	cs (bad) 
    1a29:	39 37                	cmp    DWORD PTR [rdi],esi
    1a2b:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    1a2e:	31 33                	xor    DWORD PTR [rbx],esi
    1a30:	34 38                	xor    al,0x38
    1a32:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    1a35:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31384a72 <_end+0x31183a5a>
    1a3b:	34 35                	xor    al,0x35
    1a3d:	32 37                	xor    dh,BYTE PTR [rdi]
    1a3f:	34 32                	xor    al,0x32
    1a41:	33 37                	xor    esi,DWORD PTR [rdi]
    1a43:	33 31                	xor    esi,DWORD PTR [rcx]
    1a45:	37                   	(bad)  
    1a46:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    1a49:	35 37 65 2b 33       	xor    eax,0x332b6537
    1a4e:	30 38                	xor    BYTE PTR [rax],bh
    1a50:	4c 29 00             	sub    QWORD PTR [rax],r8
    1a53:	5f                   	pop    rdi
    1a54:	44                   	rex.R
    1a55:	45                   	rex.RB
    1a56:	46                   	rex.RX
    1a57:	41 55                	push   r13
    1a59:	4c 54                	rex.WR push rsp
    1a5b:	5f                   	pop    rdi
    1a5c:	53                   	push   rbx
    1a5d:	4f 55                	rex.WRXB push r13
    1a5f:	52                   	push   rdx
    1a60:	43                   	rex.XB
    1a61:	45 20 31             	and    BYTE PTR [r9],r14b
    1a64:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a67:	52                   	push   rdx
    1a68:	4c                   	rex.WR
    1a69:	49                   	rex.WB
    1a6a:	4d 5f                	rex.WRB pop r15
    1a6c:	54                   	push   rsp
    1a6d:	5f                   	pop    rdi
    1a6e:	4d                   	rex.WRB
    1a6f:	41 54                	push   r12
    1a71:	43                   	rex.XB
    1a72:	48                   	rex.W
    1a73:	45 53                	rex.RB push r11
    1a75:	5f                   	pop    rdi
    1a76:	52                   	push   rdx
    1a77:	4c                   	rex.WR
    1a78:	49                   	rex.WB
    1a79:	4d                   	rex.WRB
    1a7a:	36 34 5f             	ss xor al,0x5f
    1a7d:	54                   	push   rsp
    1a7e:	20 31                	and    BYTE PTR [rcx],dh
    1a80:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a83:	61                   	(bad)  
    1a84:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a85:	64 36 34 5f          	fs ss xor al,0x5f
    1a89:	5f                   	pop    rdi
    1a8a:	20 31                	and    BYTE PTR [rcx],dh
    1a8c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a8f:	5f                   	pop    rdi
    1a90:	5f                   	pop    rdi
    1a91:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a92:	62 73 74 61 74       	(bad)  {k1}
    1a97:	65 5f                	gs pop rdi
    1a99:	74 5f                	je     1afa <__FRAME_END__+0x1306>
    1a9b:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    1aa2:	20 
    1aa3:	31 00                	xor    DWORD PTR [rax],eax
    1aa5:	5f                   	pop    rdi
    1aa6:	49                   	rex.WB
    1aa7:	4f 5f                	rex.WRXB pop r15
    1aa9:	44                   	rex.R
    1aaa:	45                   	rex.RB
    1aab:	4c                   	rex.WR
    1aac:	45 54                	rex.RB push r12
    1aae:	45 5f                	rex.RB pop r15
    1ab0:	44                   	rex.R
    1ab1:	4f                   	rex.WRXB
    1ab2:	4e 54                	rex.WRX push rsp
    1ab4:	5f                   	pop    rdi
    1ab5:	43                   	rex.XB
    1ab6:	4c                   	rex.WR
    1ab7:	4f 53                	rex.WRXB push r11
    1ab9:	45 20 30             	and    BYTE PTR [r8],r14b
    1abc:	78 34                	js     1af2 <__FRAME_END__+0x12fe>
    1abe:	30 00                	xor    BYTE PTR [rax],al
    1ac0:	5f                   	pop    rdi
    1ac1:	5f                   	pop    rdi
    1ac2:	46                   	rex.RX
    1ac3:	4c 54                	rex.WR push rsp
    1ac5:	33 32                	xor    esi,DWORD PTR [rdx]
    1ac7:	5f                   	pop    rdi
    1ac8:	44                   	rex.R
    1ac9:	45                   	rex.RB
    1aca:	43                   	rex.XB
    1acb:	49                   	rex.WB
    1acc:	4d                   	rex.WRB
    1acd:	41                   	rex.B
    1ace:	4c 5f                	rex.WR pop rdi
    1ad0:	44                   	rex.R
    1ad1:	49                   	rex.WB
    1ad2:	47 5f                	rex.RXB pop r15
    1ad4:	5f                   	pop    rdi
    1ad5:	20 39                	and    BYTE PTR [rcx],bh
    1ad7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ada:	46                   	rex.RX
    1adb:	4c 54                	rex.WR push rsp
    1add:	31 32                	xor    DWORD PTR [rdx],esi
    1adf:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    1ae2:	49                   	rex.WB
    1ae3:	47 5f                	rex.RXB pop r15
    1ae5:	5f                   	pop    rdi
    1ae6:	20 33                	and    BYTE PTR [rbx],dh
    1ae8:	33 00                	xor    eax,DWORD PTR [rax]
    1aea:	5f                   	pop    rdi
    1aeb:	5f                   	pop    rdi
    1aec:	55                   	push   rbp
    1aed:	49                   	rex.WB
    1aee:	4e 54                	rex.WRX push rsp
    1af0:	31 36                	xor    DWORD PTR [rsi],esi
    1af2:	5f                   	pop    rdi
    1af3:	54                   	push   rsp
    1af4:	59                   	pop    rcx
    1af5:	50                   	push   rax
    1af6:	45 5f                	rex.RB pop r15
    1af8:	5f                   	pop    rdi
    1af9:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1afc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1afd:	72 74                	jb     1b73 <__FRAME_END__+0x137f>
    1aff:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1b02:	73 69                	jae    1b6d <__FRAME_END__+0x1379>
    1b04:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1b06:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1b0b:	74 00                	je     1b0d <__FRAME_END__+0x1319>
    1b0d:	5f                   	pop    rdi
    1b0e:	5f                   	pop    rdi
    1b0f:	48                   	rex.W
    1b10:	41 56                	push   r14
    1b12:	45 5f                	rex.RB pop r15
    1b14:	43                   	rex.XB
    1b15:	4f                   	rex.WRXB
    1b16:	4c 55                	rex.WR push rbp
    1b18:	4d                   	rex.WRB
    1b19:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    1b1c:	5f                   	pop    rdi
    1b1d:	4f                   	rex.WRXB
    1b1e:	4c                   	rex.WR
    1b1f:	44 5f                	rex.R pop rdi
    1b21:	53                   	push   rbx
    1b22:	54                   	push   rsp
    1b23:	44                   	rex.R
    1b24:	49                   	rex.WB
    1b25:	4f 5f                	rex.WRXB pop r15
    1b27:	4d                   	rex.WRB
    1b28:	41                   	rex.B
    1b29:	47                   	rex.RXB
    1b2a:	49                   	rex.WB
    1b2b:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    1b2e:	78 46                	js     1b76 <__FRAME_END__+0x1382>
    1b30:	41                   	rex.B
    1b31:	42                   	rex.X
    1b32:	43 30 30             	rex.XB xor BYTE PTR [r8],sil
    1b35:	30 30                	xor    BYTE PTR [rax],dh
    1b37:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1b3a:	4f 53                	rex.WRXB push r11
    1b3c:	5f                   	pop    rdi
    1b3d:	4e                   	rex.WRX
    1b3e:	4f                   	rex.WRXB
    1b3f:	43 52                	rex.XB push r10
    1b41:	45                   	rex.RB
    1b42:	41 54                	push   r12
    1b44:	45 20 33             	and    BYTE PTR [r11],r14b
    1b47:	32 00                	xor    al,BYTE PTR [rax]
    1b49:	5f                   	pop    rdi
    1b4a:	5f                   	pop    rdi
    1b4b:	57                   	push   rdi
    1b4c:	43                   	rex.XB
    1b4d:	48                   	rex.W
    1b4e:	41 52                	push   r10
    1b50:	5f                   	pop    rdi
    1b51:	57                   	push   rdi
    1b52:	49                   	rex.WB
    1b53:	44 54                	rex.R push rsp
    1b55:	48 5f                	rex.W pop rdi
    1b57:	5f                   	pop    rdi
    1b58:	20 33                	and    BYTE PTR [rbx],dh
    1b5a:	32 00                	xor    al,BYTE PTR [rax]
    1b5c:	5f                   	pop    rdi
    1b5d:	5f                   	pop    rdi
    1b5e:	47                   	rex.RXB
    1b5f:	43                   	rex.XB
    1b60:	43 5f                	rex.XB pop r15
    1b62:	41 54                	push   r12
    1b64:	4f                   	rex.WRXB
    1b65:	4d                   	rex.WRB
    1b66:	49                   	rex.WB
    1b67:	43 5f                	rex.XB pop r15
    1b69:	43                   	rex.XB
    1b6a:	48                   	rex.W
    1b6b:	41 52                	push   r10
    1b6d:	5f                   	pop    rdi
    1b6e:	4c                   	rex.WR
    1b6f:	4f                   	rex.WRXB
    1b70:	43                   	rex.XB
    1b71:	4b 5f                	rex.WXB pop r15
    1b73:	46 52                	rex.RX push rdx
    1b75:	45                   	rex.RB
    1b76:	45 20 32             	and    BYTE PTR [r10],r14b
    1b79:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1b7c:	4f 5f                	rex.WRXB pop r15
    1b7e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b7f:	61                   	(bad)  
    1b80:	72 6b                	jb     1bed <__FRAME_END__+0x13f9>
    1b82:	65 72 00             	gs jb  1b85 <__FRAME_END__+0x1391>
    1b85:	5f                   	pop    rdi
    1b86:	5f                   	pop    rdi
    1b87:	42                   	rex.X
    1b88:	49                   	rex.WB
    1b89:	47                   	rex.RXB
    1b8a:	47                   	rex.RXB
    1b8b:	45 53                	rex.RB push r11
    1b8d:	54                   	push   rsp
    1b8e:	5f                   	pop    rdi
    1b8f:	41                   	rex.B
    1b90:	4c                   	rex.WR
    1b91:	49                   	rex.WB
    1b92:	47                   	rex.RXB
    1b93:	4e                   	rex.WRX
    1b94:	4d                   	rex.WRB
    1b95:	45                   	rex.RB
    1b96:	4e 54                	rex.WRX push rsp
    1b98:	5f                   	pop    rdi
    1b99:	5f                   	pop    rdi
    1b9a:	20 31                	and    BYTE PTR [rcx],dh
    1b9c:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1ba0:	4c                   	rex.WR
    1ba1:	4f                   	rex.WRXB
    1ba2:	4e                   	rex.WRX
    1ba3:	47 5f                	rex.RXB pop r15
    1ba5:	4c                   	rex.WR
    1ba6:	4f                   	rex.WRXB
    1ba7:	4e                   	rex.WRX
    1ba8:	47 5f                	rex.RXB pop r15
    1baa:	4d                   	rex.WRB
    1bab:	41 58                	pop    r8
    1bad:	5f                   	pop    rdi
    1bae:	5f                   	pop    rdi
    1baf:	20 30                	and    BYTE PTR [rax],dh
    1bb1:	78 37                	js     1bea <__FRAME_END__+0x13f6>
    1bb3:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1bba:	66 66 66 66 66 66 66 
    1bc1:	66 4c                	data16 rex.WR
    1bc3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1bc7:	55                   	push   rbp
    1bc8:	4c                   	rex.WR
    1bc9:	4f                   	rex.WRXB
    1bca:	4e                   	rex.WRX
    1bcb:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    1bce:	5f                   	pop    rdi
    1bcf:	54                   	push   rsp
    1bd0:	59                   	pop    rcx
    1bd1:	50                   	push   rax
    1bd2:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    1bd6:	73 69                	jae    1c41 <__FRAME_END__+0x144d>
    1bd8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1bda:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1bdf:	74 00                	je     1be1 <__FRAME_END__+0x13ed>
    1be1:	5f                   	pop    rdi
    1be2:	5f                   	pop    rdi
    1be3:	55                   	push   rbp
    1be4:	49                   	rex.WB
    1be5:	4e 54                	rex.WRX push rsp
    1be7:	5f                   	pop    rdi
    1be8:	4c                   	rex.WR
    1be9:	45                   	rex.RB
    1bea:	41 53                	push   r11
    1bec:	54                   	push   rsp
    1bed:	31 36                	xor    DWORD PTR [rsi],esi
    1bef:	5f                   	pop    rdi
    1bf0:	54                   	push   rsp
    1bf1:	59                   	pop    rcx
    1bf2:	50                   	push   rax
    1bf3:	45 5f                	rex.RB pop r15
    1bf5:	5f                   	pop    rdi
    1bf6:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1bf9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bfa:	72 74                	jb     1c70 <__FRAME_END__+0x147c>
    1bfc:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1bff:	73 69                	jae    1c6a <__FRAME_END__+0x1476>
    1c01:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c03:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c08:	74 00                	je     1c0a <__FRAME_END__+0x1416>
    1c0a:	5f                   	pop    rdi
    1c0b:	5f                   	pop    rdi
    1c0c:	46                   	rex.RX
    1c0d:	4c 54                	rex.WR push rsp
    1c0f:	5f                   	pop    rdi
    1c10:	4d                   	rex.WRB
    1c11:	41 58                	pop    r8
    1c13:	5f                   	pop    rdi
    1c14:	31 30                	xor    DWORD PTR [rax],esi
    1c16:	5f                   	pop    rdi
    1c17:	45 58                	rex.RB pop r8
    1c19:	50                   	push   rax
    1c1a:	5f                   	pop    rdi
    1c1b:	5f                   	pop    rdi
    1c1c:	20 33                	and    BYTE PTR [rbx],dh
    1c1e:	38 00                	cmp    BYTE PTR [rax],al
    1c20:	2f                   	(bad)  
    1c21:	68 6f 6d 65 2f       	push   0x2f656d6f
    1c26:	75 62                	jne    1c8a <__FRAME_END__+0x1496>
    1c28:	75 6e                	jne    1c98 <__FRAME_END__+0x14a4>
    1c2a:	74 75                	je     1ca1 <__FRAME_END__+0x14ad>
    1c2c:	2f                   	(bad)  
    1c2d:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1c2f:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
    1c36:	6e 
    1c37:	67 2f                	addr32 (bad) 
    1c39:	50                   	push   rax
    1c3a:	72 6f                	jb     1cab <__FRAME_END__+0x14b7>
    1c3c:	67 72 61             	addr32 jb 1ca0 <__FRAME_END__+0x14ac>
    1c3f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c40:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c41:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
    1c48:	61                   	(bad)  
    1c49:	73 73                	jae    1cbe <__FRAME_END__+0x14ca>
    1c4b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1c4d:	62                   	(bad)  
    1c4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c4f:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
    1c56:	61                   	(bad)  
    1c57:	72 69                	jb     1cc2 <__FRAME_END__+0x14ce>
    1c59:	65 73 2f             	gs jae 1c8b <__FRAME_END__+0x1497>
    1c5c:	43 2f                	rex.XB (bad) 
    1c5e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1c60:	74 65                	je     1cc7 <__FRAME_END__+0x14d3>
    1c62:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c63:	5f                   	pop    rdi
    1c64:	61                   	(bad)  
    1c65:	72 63                	jb     1cca <__FRAME_END__+0x14d6>
    1c67:	68 69 74 65 63       	push   0x63657469
    1c6c:	74 75                	je     1ce3 <__FRAME_END__+0x14ef>
    1c6e:	72 65                	jb     1cd5 <__FRAME_END__+0x14e1>
    1c70:	2f                   	(bad)  
    1c71:	41                   	rex.B
    1c72:	4d                   	rex.WRB
    1c73:	44                   	rex.R
    1c74:	36 34 2f             	ss xor al,0x2f
    1c77:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1c79:	74 65                	je     1ce0 <__FRAME_END__+0x14ec>
    1c7b:	67 65 72 5f          	addr32 gs jb 1cde <__FRAME_END__+0x14ea>
    1c7f:	4f 70 65             	rex.WRXB jo 1ce7 <__FRAME_END__+0x14f3>
    1c82:	72 61                	jb     1ce5 <__FRAME_END__+0x14f1>
    1c84:	74 69                	je     1cef <__FRAME_END__+0x14fb>
    1c86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c88:	73 2f                	jae    1cb9 <__FRAME_END__+0x14c5>
    1c8a:	4d 75 6c             	rex.WRB jne 1cf9 <__FRAME_END__+0x1505>
    1c8d:	74 5f                	je     1cee <__FRAME_END__+0x14fa>
    1c8f:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1c91:	74 2f                	je     1cc2 <__FRAME_END__+0x14ce>
    1c93:	57                   	push   rdi
    1c94:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
    1c9b:	75 
    1c9c:	67 5f                	addr32 pop rdi
    1c9e:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
    1ca0:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1ca2:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1ca5:	4f 5f                	rex.WRXB pop r15
    1ca7:	53                   	push   rbx
    1ca8:	4b                   	rex.WXB
    1ca9:	49 50                	rex.WB push r8
    1cab:	57                   	push   rdi
    1cac:	53                   	push   rbx
    1cad:	20 30                	and    BYTE PTR [rax],dh
    1caf:	31 00                	xor    DWORD PTR [rax],eax
    1cb1:	5f                   	pop    rdi
    1cb2:	5f                   	pop    rdi
    1cb3:	46                   	rex.RX
    1cb4:	4c 54                	rex.WR push rsp
    1cb6:	33 32                	xor    esi,DWORD PTR [rdx]
    1cb8:	58                   	pop    rax
    1cb9:	5f                   	pop    rdi
    1cba:	45 50                	rex.RB push r8
    1cbc:	53                   	push   rbx
    1cbd:	49                   	rex.WB
    1cbe:	4c                   	rex.WR
    1cbf:	4f                   	rex.WRXB
    1cc0:	4e 5f                	rex.WRX pop rdi
    1cc2:	5f                   	pop    rdi
    1cc3:	20 32                	and    BYTE PTR [rdx],dh
    1cc5:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    1cc8:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    1ccb:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    1ccf:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33315005 <_end+0x33113fed>
    1cd5:	30 38                	xor    BYTE PTR [rax],bh
    1cd7:	30 38                	xor    BYTE PTR [rax],bh
    1cd9:	34 37                	xor    al,0x37
    1cdb:	32 36                	xor    dh,BYTE PTR [rsi]
    1cdd:	33 33                	xor    esi,DWORD PTR [rbx]
    1cdf:	33 36                	xor    esi,DWORD PTR [rsi]
    1ce1:	31 38                	xor    DWORD PTR [rax],edi
    1ce3:	31 36                	xor    DWORD PTR [rsi],esi
    1ce5:	34 30                	xor    al,0x30
    1ce7:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    1ceb:	31 36                	xor    DWORD PTR [rsi],esi
    1ced:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    1cf0:	78 00                	js     1cf2 <__FRAME_END__+0x14fe>
    1cf2:	4e 55                	rex.WRX push rbp
    1cf4:	4c                   	rex.WR
    1cf5:	4c 20 28             	rex.WR and BYTE PTR [rax],r13b
    1cf8:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    1cfb:	69 64 20 2a 29 30 29 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x293029
    1d02:	00 
    1d03:	61                   	(bad)  
    1d04:	72 67                	jb     1d6d <__FRAME_END__+0x1579>
    1d06:	76 00                	jbe    1d08 <__FRAME_END__+0x1514>
    1d08:	5f                   	pop    rdi
    1d09:	5f                   	pop    rdi
    1d0a:	55                   	push   rbp
    1d0b:	53                   	push   rbx
    1d0c:	45 5f                	rex.RB pop r15
    1d0e:	50                   	push   rax
    1d0f:	4f 53                	rex.WRXB push r11
    1d11:	49 58                	rex.WB pop r8
    1d13:	5f                   	pop    rdi
    1d14:	49                   	rex.WB
    1d15:	4d 50                	rex.WRB push r8
    1d17:	4c                   	rex.WR
    1d18:	49                   	rex.WB
    1d19:	43                   	rex.XB
    1d1a:	49 54                	rex.WB push r12
    1d1c:	4c 59                	rex.WR pop rcx
    1d1e:	20 31                	and    BYTE PTR [rcx],dh
    1d20:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d23:	4f 5f                	rex.WRXB pop r15
    1d25:	66 65 6f             	outs   dx,WORD PTR gs:[rsi]
    1d28:	66 5f                	pop    di
    1d2a:	75 6e                	jne    1d9a <__FRAME_END__+0x15a6>
    1d2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d2e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1d31:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
    1d35:	66 70 29             	data16 jo 1d61 <__FRAME_END__+0x156d>
    1d38:	20 28                	and    BYTE PTR [rax],ch
    1d3a:	28 28                	sub    BYTE PTR [rax],ch
    1d3c:	5f                   	pop    rdi
    1d3d:	5f                   	pop    rdi
    1d3e:	66 70 29             	data16 jo 1d6a <__FRAME_END__+0x1576>
    1d41:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    1d46:	61                   	(bad)  
    1d47:	67 73 20             	addr32 jae 1d6a <__FRAME_END__+0x1576>
    1d4a:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
    1d4e:	4f 5f                	rex.WRXB pop r15
    1d50:	45                   	rex.RB
    1d51:	4f                   	rex.WRXB
    1d52:	46 5f                	rex.RX pop rdi
    1d54:	53                   	push   rbx
    1d55:	45                   	rex.RB
    1d56:	45                   	rex.RB
    1d57:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
    1d5a:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 294d80 <_end+0x93d68>
    1d60:	5f                   	pop    rdi
    1d61:	5f                   	pop    rdi
    1d62:	4e                   	rex.WRX
    1d63:	4f 5f                	rex.WRXB pop r15
    1d65:	49                   	rex.WB
    1d66:	4e                   	rex.WRX
    1d67:	4c                   	rex.WR
    1d68:	49                   	rex.WB
    1d69:	4e                   	rex.WRX
    1d6a:	45 5f                	rex.RB pop r15
    1d6c:	5f                   	pop    rdi
    1d6d:	20 31                	and    BYTE PTR [rcx],dh
    1d6f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d72:	4f 5f                	rex.WRXB pop r15
    1d74:	73 74                	jae    1dea <__FRAME_END__+0x15f6>
    1d76:	64 65 72 72          	fs gs jb 1dec <__FRAME_END__+0x15f8>
    1d7a:	20 28                	and    BYTE PTR [rax],ch
    1d7c:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    1d7f:	4f 5f                	rex.WRXB pop r15
    1d81:	46                   	rex.RX
    1d82:	49                   	rex.WB
    1d83:	4c                   	rex.WR
    1d84:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1d87:	28 26                	sub    BYTE PTR [rsi],ah
    1d89:	5f                   	pop    rdi
    1d8a:	49                   	rex.WB
    1d8b:	4f 5f                	rex.WRXB pop r15
    1d8d:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1d90:	5f                   	pop    rdi
    1d91:	73 74                	jae    1e07 <__FRAME_END__+0x1613>
    1d93:	64 65 72 72          	fs gs jb 1e09 <__FRAME_END__+0x1615>
    1d97:	5f                   	pop    rdi
    1d98:	29 29                	sub    DWORD PTR [rcx],ebp
    1d9a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d9d:	76 61                	jbe    1e00 <__FRAME_END__+0x160c>
    1d9f:	5f                   	pop    rdi
    1da0:	61                   	(bad)  
    1da1:	72 67                	jb     1e0a <__FRAME_END__+0x1616>
    1da3:	5f                   	pop    rdi
    1da4:	70 61                	jo     1e07 <__FRAME_END__+0x1613>
    1da6:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    1da9:	29 20                	sub    DWORD PTR [rax],esp
    1dab:	5f                   	pop    rdi
    1dac:	5f                   	pop    rdi
    1dad:	62                   	(bad)  
    1dae:	75 69                	jne    1e19 <__FRAME_END__+0x1625>
    1db0:	6c                   	ins    BYTE PTR es:[rdi],dx
    1db1:	74 69                	je     1e1c <__FRAME_END__+0x1628>
    1db3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1db4:	5f                   	pop    rdi
    1db5:	76 61                	jbe    1e18 <__FRAME_END__+0x1624>
    1db7:	5f                   	pop    rdi
    1db8:	61                   	(bad)  
    1db9:	72 67                	jb     1e22 <__FRAME_END__+0x162e>
    1dbb:	5f                   	pop    rdi
    1dbc:	70 61                	jo     1e1f <__FRAME_END__+0x162b>
    1dbe:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    1dc1:	28 29                	sub    BYTE PTR [rcx],ch
    1dc3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dc6:	46                   	rex.RX
    1dc7:	4c 54                	rex.WR push rsp
    1dc9:	5f                   	pop    rdi
    1dca:	4d                   	rex.WRB
    1dcb:	41                   	rex.B
    1dcc:	4e 54                	rex.WRX push rsp
    1dce:	5f                   	pop    rdi
    1dcf:	44                   	rex.R
    1dd0:	49                   	rex.WB
    1dd1:	47 5f                	rex.RXB pop r15
    1dd3:	5f                   	pop    rdi
    1dd4:	20 32                	and    BYTE PTR [rdx],dh
    1dd6:	34 00                	xor    al,0x0
    1dd8:	5f                   	pop    rdi
    1dd9:	5f                   	pop    rdi
    1dda:	44                   	rex.R
    1ddb:	41                   	rex.B
    1ddc:	44                   	rex.R
    1ddd:	44 52                	rex.R push rdx
    1ddf:	5f                   	pop    rdi
    1de0:	54                   	push   rsp
    1de1:	5f                   	pop    rdi
    1de2:	54                   	push   rsp
    1de3:	59                   	pop    rcx
    1de4:	50                   	push   rax
    1de5:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1de9:	53                   	push   rbx
    1dea:	33 32                	xor    esi,DWORD PTR [rdx]
    1dec:	5f                   	pop    rdi
    1ded:	54                   	push   rsp
    1dee:	59                   	pop    rcx
    1def:	50                   	push   rax
    1df0:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1df4:	46                   	rex.RX
    1df5:	4c 54                	rex.WR push rsp
    1df7:	36 34 5f             	ss xor al,0x5f
    1dfa:	44                   	rex.R
    1dfb:	45                   	rex.RB
    1dfc:	43                   	rex.XB
    1dfd:	49                   	rex.WB
    1dfe:	4d                   	rex.WRB
    1dff:	41                   	rex.B
    1e00:	4c 5f                	rex.WR pop rdi
    1e02:	44                   	rex.R
    1e03:	49                   	rex.WB
    1e04:	47 5f                	rex.RXB pop r15
    1e06:	5f                   	pop    rdi
    1e07:	20 31                	and    BYTE PTR [rcx],dh
    1e09:	37                   	(bad)  
    1e0a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e0d:	47                   	rex.RXB
    1e0e:	43                   	rex.XB
    1e0f:	43 5f                	rex.XB pop r15
    1e11:	48                   	rex.W
    1e12:	41 56                	push   r14
    1e14:	45 5f                	rex.RB pop r15
    1e16:	53                   	push   rbx
    1e17:	59                   	pop    rcx
    1e18:	4e                   	rex.WRX
    1e19:	43 5f                	rex.XB pop r15
    1e1b:	43                   	rex.XB
    1e1c:	4f                   	rex.WRXB
    1e1d:	4d 50                	rex.WRB push r8
    1e1f:	41 52                	push   r10
    1e21:	45 5f                	rex.RB pop r15
    1e23:	41                   	rex.B
    1e24:	4e                   	rex.WRX
    1e25:	44 5f                	rex.R pop rdi
    1e27:	53                   	push   rbx
    1e28:	57                   	push   rdi
    1e29:	41 50                	push   r8
    1e2b:	5f                   	pop    rdi
    1e2c:	34 20                	xor    al,0x20
    1e2e:	31 00                	xor    DWORD PTR [rax],eax
    1e30:	5f                   	pop    rdi
    1e31:	5f                   	pop    rdi
    1e32:	46                   	rex.RX
    1e33:	4c 54                	rex.WR push rsp
    1e35:	33 32                	xor    esi,DWORD PTR [rdx]
    1e37:	5f                   	pop    rdi
    1e38:	4d                   	rex.WRB
    1e39:	49                   	rex.WB
    1e3a:	4e 5f                	rex.WRX pop rdi
    1e3c:	45 58                	rex.RB pop r8
    1e3e:	50                   	push   rax
    1e3f:	5f                   	pop    rdi
    1e40:	5f                   	pop    rdi
    1e41:	20 28                	and    BYTE PTR [rax],ch
    1e43:	2d 31 32 35 29       	sub    eax,0x29353231
    1e48:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e4b:	53                   	push   rbx
    1e4c:	49 5a                	rex.WB pop r10
    1e4e:	45 5f                	rex.RB pop r15
    1e50:	54                   	push   rsp
    1e51:	59                   	pop    rcx
    1e52:	50                   	push   rax
    1e53:	45 5f                	rex.RB pop r15
    1e55:	5f                   	pop    rdi
    1e56:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1e5a:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1e5e:	73 69                	jae    1ec9 <__FRAME_END__+0x16d5>
    1e60:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1e62:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1e67:	74 00                	je     1e69 <__FRAME_END__+0x1675>
    1e69:	5f                   	pop    rdi
    1e6a:	5f                   	pop    rdi
    1e6b:	4c                   	rex.WR
    1e6c:	44                   	rex.R
    1e6d:	42                   	rex.X
    1e6e:	4c 5f                	rex.WR pop rdi
    1e70:	4d                   	rex.WRB
    1e71:	41 58                	pop    r8
    1e73:	5f                   	pop    rdi
    1e74:	5f                   	pop    rdi
    1e75:	20 31                	and    BYTE PTR [rcx],dh
    1e77:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1e7a:	39 37                	cmp    DWORD PTR [rdi],esi
    1e7c:	33 31                	xor    esi,DWORD PTR [rcx]
    1e7e:	34 39                	xor    al,0x39
    1e80:	35 33 35 37 32       	xor    eax,0x32373533
    1e85:	33 31                	xor    esi,DWORD PTR [rcx]
    1e87:	37                   	(bad)  
    1e88:	36 35 30 32 31 32    	ss xor eax,0x32313230
    1e8e:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1e91:	35 33 30 33 30       	xor    eax,0x30333033
    1e96:	39 37                	cmp    DWORD PTR [rdi],esi
    1e98:	30 32                	xor    BYTE PTR [rdx],dh
    1e9a:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    1e9d:	34 39                	xor    al,0x39
    1e9f:	33 32                	xor    esi,DWORD PTR [rdx]
    1ea1:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1ea5:	44                   	rex.R
    1ea6:	45                   	rex.RB
    1ea7:	43 5f                	rex.XB pop r15
    1ea9:	45 56                	rex.RB push r14
    1eab:	41                   	rex.B
    1eac:	4c 5f                	rex.WR pop rdi
    1eae:	4d                   	rex.WRB
    1eaf:	45 54                	rex.RB push r12
    1eb1:	48                   	rex.W
    1eb2:	4f                   	rex.WRXB
    1eb3:	44 5f                	rex.R pop rdi
    1eb5:	5f                   	pop    rdi
    1eb6:	20 32                	and    BYTE PTR [rdx],dh
    1eb8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ebb:	46                   	rex.RX
    1ebc:	4c 54                	rex.WR push rsp
    1ebe:	5f                   	pop    rdi
    1ebf:	4d                   	rex.WRB
    1ec0:	41 58                	pop    r8
    1ec2:	5f                   	pop    rdi
    1ec3:	5f                   	pop    rdi
    1ec4:	20 33                	and    BYTE PTR [rbx],dh
    1ec6:	2e 34 30             	cs xor al,0x30
    1ec9:	32 38                	xor    bh,BYTE PTR [rax]
    1ecb:	32 33                	xor    dh,BYTE PTR [rbx]
    1ecd:	34 36                	xor    al,0x36
    1ecf:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1ed2:	35 32 38 38 35       	xor    eax,0x35383832
    1ed7:	39 38                	cmp    DWORD PTR [rax],edi
    1ed9:	31 31                	xor    DWORD PTR [rcx],esi
    1edb:	37                   	(bad)  
    1edc:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    1edf:	38 33                	cmp    BYTE PTR [rbx],dh
    1ee1:	34 38                	xor    al,0x38
    1ee3:	34 35                	xor    al,0x35
    1ee5:	31 36                	xor    DWORD PTR [rsi],esi
    1ee7:	39 32                	cmp    DWORD PTR [rdx],esi
    1ee9:	35 65 2b 33 38       	xor    eax,0x38332b65
    1eee:	46 00 5f 49          	rex.RX add BYTE PTR [rdi+0x49],r11b
    1ef2:	4f 5f                	rex.WRXB pop r15
    1ef4:	75 69                	jne    1f5f <__FRAME_END__+0x176b>
    1ef6:	64 5f                	fs pop rdi
    1ef8:	74 20                	je     1f1a <__FRAME_END__+0x1726>
    1efa:	5f                   	pop    rdi
    1efb:	5f                   	pop    rdi
    1efc:	75 69                	jne    1f67 <__FRAME_END__+0x1773>
    1efe:	64 5f                	fs pop rdi
    1f00:	74 00                	je     1f02 <__FRAME_END__+0x170e>
    1f02:	5f                   	pop    rdi
    1f03:	5f                   	pop    rdi
    1f04:	44                   	rex.R
    1f05:	42                   	rex.X
    1f06:	4c 5f                	rex.WR pop rdi
    1f08:	4d                   	rex.WRB
    1f09:	49                   	rex.WB
    1f0a:	4e 5f                	rex.WRX pop rdi
    1f0c:	31 30                	xor    DWORD PTR [rax],esi
    1f0e:	5f                   	pop    rdi
    1f0f:	45 58                	rex.RB pop r8
    1f11:	50                   	push   rax
    1f12:	5f                   	pop    rdi
    1f13:	5f                   	pop    rdi
    1f14:	20 28                	and    BYTE PTR [rax],ch
    1f16:	2d 33 30 37 29       	sub    eax,0x29373033
    1f1b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f1e:	4f 5f                	rex.WRXB pop r15
    1f20:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1f23:	5f                   	pop    rdi
    1f24:	73 74                	jae    1f9a <__FRAME_END__+0x17a6>
    1f26:	64 65 72 72          	fs gs jb 1f9c <__FRAME_END__+0x17a8>
    1f2a:	5f                   	pop    rdi
    1f2b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f2e:	55                   	push   rbp
    1f2f:	49                   	rex.WB
    1f30:	4e 54                	rex.WRX push rsp
    1f32:	33 32                	xor    esi,DWORD PTR [rdx]
    1f34:	5f                   	pop    rdi
    1f35:	4d                   	rex.WRB
    1f36:	41 58                	pop    r8
    1f38:	5f                   	pop    rdi
    1f39:	5f                   	pop    rdi
    1f3a:	20 30                	and    BYTE PTR [rax],dh
    1f3c:	78 66                	js     1fa4 <__FRAME_END__+0x17b0>
    1f3e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    1f45:	55 
    1f46:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f49:	4f 5f                	rex.WRXB pop r15
    1f4b:	4f                   	rex.WRXB
    1f4c:	43 54                	rex.XB push r12
    1f4e:	20 30                	and    BYTE PTR [rax],dh
    1f50:	34 30                	xor    al,0x30
    1f52:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f55:	46                   	rex.RX
    1f56:	4c 54                	rex.WR push rsp
    1f58:	31 32                	xor    DWORD PTR [rdx],esi
    1f5a:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    1f5d:	41 53                	push   r11
    1f5f:	5f                   	pop    rdi
    1f60:	49                   	rex.WB
    1f61:	4e                   	rex.WRX
    1f62:	46                   	rex.RX
    1f63:	49                   	rex.WB
    1f64:	4e                   	rex.WRX
    1f65:	49 54                	rex.WB push r12
    1f67:	59                   	pop    rcx
    1f68:	5f                   	pop    rdi
    1f69:	5f                   	pop    rdi
    1f6a:	20 31                	and    BYTE PTR [rcx],dh
    1f6c:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    1f6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f70:	64 65 00 5f 49       	fs add BYTE PTR gs:[rdi+0x49],bl
    1f75:	4f 5f                	rex.WRXB pop r15
    1f77:	48                   	rex.W
    1f78:	41 56                	push   r14
    1f7a:	45 5f                	rex.RB pop r15
    1f7c:	53                   	push   rbx
    1f7d:	54                   	push   rsp
    1f7e:	5f                   	pop    rdi
    1f7f:	42                   	rex.X
    1f80:	4c                   	rex.WR
    1f81:	4b 53                	rex.WXB push r11
    1f83:	49 5a                	rex.WB pop r10
    1f85:	45 20 5f 47          	and    BYTE PTR [r15+0x47],r11b
    1f89:	5f                   	pop    rdi
    1f8a:	48                   	rex.W
    1f8b:	41 56                	push   r14
    1f8d:	45 5f                	rex.RB pop r15
    1f8f:	53                   	push   rbx
    1f90:	54                   	push   rsp
    1f91:	5f                   	pop    rdi
    1f92:	42                   	rex.X
    1f93:	4c                   	rex.WR
    1f94:	4b 53                	rex.WXB push r11
    1f96:	49 5a                	rex.WB pop r10
    1f98:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1f9c:	46                   	rex.RX
    1f9d:	4c 54                	rex.WR push rsp
    1f9f:	36 34 5f             	ss xor al,0x5f
    1fa2:	48                   	rex.W
    1fa3:	41 53                	push   r11
    1fa5:	5f                   	pop    rdi
    1fa6:	44                   	rex.R
    1fa7:	45                   	rex.RB
    1fa8:	4e                   	rex.WRX
    1fa9:	4f 52                	rex.WRXB push r10
    1fab:	4d 5f                	rex.WRB pop r15
    1fad:	5f                   	pop    rdi
    1fae:	20 31                	and    BYTE PTR [rcx],dh
    1fb0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fb3:	46                   	rex.RX
    1fb4:	4c 54                	rex.WR push rsp
    1fb6:	5f                   	pop    rdi
    1fb7:	45 56                	rex.RB push r14
    1fb9:	41                   	rex.B
    1fba:	4c 5f                	rex.WR pop rdi
    1fbc:	4d                   	rex.WRB
    1fbd:	45 54                	rex.RB push r12
    1fbf:	48                   	rex.W
    1fc0:	4f                   	rex.WRXB
    1fc1:	44 5f                	rex.R pop rdi
    1fc3:	5f                   	pop    rdi
    1fc4:	20 30                	and    BYTE PTR [rax],dh
    1fc6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fc9:	46 53                	rex.RX push rbx
    1fcb:	42                   	rex.X
    1fcc:	4c                   	rex.WR
    1fcd:	4b                   	rex.WXB
    1fce:	43                   	rex.XB
    1fcf:	4e 54                	rex.WRX push rsp
    1fd1:	5f                   	pop    rdi
    1fd2:	54                   	push   rsp
    1fd3:	5f                   	pop    rdi
    1fd4:	54                   	push   rsp
    1fd5:	59                   	pop    rcx
    1fd6:	50                   	push   rax
    1fd7:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1fdb:	53                   	push   rbx
    1fdc:	59                   	pop    rcx
    1fdd:	53                   	push   rbx
    1fde:	43                   	rex.XB
    1fdf:	41                   	rex.B
    1fe0:	4c                   	rex.WR
    1fe1:	4c 5f                	rex.WR pop rdi
    1fe3:	55                   	push   rbp
    1fe4:	4c                   	rex.WR
    1fe5:	4f                   	rex.WRXB
    1fe6:	4e                   	rex.WRX
    1fe7:	47 5f                	rex.RXB pop r15
    1fe9:	54                   	push   rsp
    1fea:	59                   	pop    rcx
    1feb:	50                   	push   rax
    1fec:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1ff0:	46                   	rex.RX
    1ff1:	4c 54                	rex.WR push rsp
    1ff3:	33 32                	xor    esi,DWORD PTR [rdx]
    1ff5:	58                   	pop    rax
    1ff6:	5f                   	pop    rdi
    1ff7:	48                   	rex.W
    1ff8:	41 53                	push   r11
    1ffa:	5f                   	pop    rdi
    1ffb:	44                   	rex.R
    1ffc:	45                   	rex.RB
    1ffd:	4e                   	rex.WRX
    1ffe:	4f 52                	rex.WRXB push r10
    2000:	4d 5f                	rex.WRB pop r15
    2002:	5f                   	pop    rdi
    2003:	20 31                	and    BYTE PTR [rcx],dh
    2005:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2008:	78 38                	js     2042 <__FRAME_END__+0x184e>
    200a:	36 5f                	ss pop rdi
    200c:	36 34 5f             	ss xor al,0x5f
    200f:	5f                   	pop    rdi
    2010:	20 31                	and    BYTE PTR [rcx],dh
    2012:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2015:	46                   	rex.RX
    2016:	4c 54                	rex.WR push rsp
    2018:	36 34 58             	ss xor al,0x58
    201b:	5f                   	pop    rdi
    201c:	4d                   	rex.WRB
    201d:	41 58                	pop    r8
    201f:	5f                   	pop    rdi
    2020:	45 58                	rex.RB pop r8
    2022:	50                   	push   rax
    2023:	5f                   	pop    rdi
    2024:	5f                   	pop    rdi
    2025:	20 31                	and    BYTE PTR [rcx],dh
    2027:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    202a:	34 00                	xor    al,0x0
    202c:	5f                   	pop    rdi
    202d:	5f                   	pop    rdi
    202e:	56                   	push   rsi
    202f:	45 52                	rex.RB push r10
    2031:	53                   	push   rbx
    2032:	49                   	rex.WB
    2033:	4f                   	rex.WRXB
    2034:	4e 5f                	rex.WRX pop rdi
    2036:	5f                   	pop    rdi
    2037:	20 22                	and    BYTE PTR [rdx],ah
    2039:	37                   	(bad)  
    203a:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
    203d:	30 22                	xor    BYTE PTR [rdx],ah
    203f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2042:	4f 5f                	rex.WRXB pop r15
    2044:	4c                   	rex.WR
    2045:	49                   	rex.WB
    2046:	4e                   	rex.WRX
    2047:	4b                   	rex.WXB
    2048:	45                   	rex.RB
    2049:	44 20 30             	and    BYTE PTR [rax],r14b
    204c:	78 38                	js     2086 <__FRAME_END__+0x1892>
    204e:	30 00                	xor    BYTE PTR [rax],al
    2050:	5f                   	pop    rdi
    2051:	5f                   	pop    rdi
    2052:	52                   	push   rdx
    2053:	45                   	rex.RB
    2054:	44                   	rex.R
    2055:	49 52                	rex.WB push r10
    2057:	45                   	rex.RB
    2058:	43 54                	rex.XB push r12
    205a:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
    205d:	6d                   	ins    DWORD PTR es:[rdi],dx
    205e:	65 2c 70             	gs sub al,0x70
    2061:	72 6f                	jb     20d2 <__FRAME_END__+0x18de>
    2063:	74 6f                	je     20d4 <__FRAME_END__+0x18e0>
    2065:	2c 61                	sub    al,0x61
    2067:	6c                   	ins    BYTE PTR es:[rdi],dx
    2068:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    206f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2070:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    2074:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2075:	74 6f                	je     20e6 <__FRAME_END__+0x18f2>
    2077:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    207a:	61                   	(bad)  
    207b:	73 6d                	jae    20ea <__FRAME_END__+0x18f6>
    207d:	5f                   	pop    rdi
    207e:	5f                   	pop    rdi
    207f:	20 28                	and    BYTE PTR [rax],ch
    2081:	5f                   	pop    rdi
    2082:	5f                   	pop    rdi
    2083:	41 53                	push   r11
    2085:	4d                   	rex.WRB
    2086:	4e                   	rex.WRX
    2087:	41                   	rex.B
    2088:	4d                   	rex.WRB
    2089:	45 20 28             	and    BYTE PTR [r8],r13b
    208c:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    208f:	69 61 73 29 29 00 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f002929
    2096:	5f                   	pop    rdi
    2097:	46 53                	rex.RX push rbx
    2099:	42                   	rex.X
    209a:	4c                   	rex.WR
    209b:	4b                   	rex.WXB
    209c:	43                   	rex.XB
    209d:	4e 54                	rex.WRX push rsp
    209f:	36 34 5f             	ss xor al,0x5f
    20a2:	54                   	push   rsp
    20a3:	5f                   	pop    rdi
    20a4:	54                   	push   rsp
    20a5:	59                   	pop    rcx
    20a6:	50                   	push   rax
    20a7:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    20ab:	55                   	push   rbp
    20ac:	51                   	push   rcx
    20ad:	55                   	push   rbp
    20ae:	41                   	rex.B
    20af:	44 5f                	rex.R pop rdi
    20b1:	54                   	push   rsp
    20b2:	59                   	pop    rcx
    20b3:	50                   	push   rax
    20b4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    20b8:	46                   	rex.RX
    20b9:	4c 54                	rex.WR push rsp
    20bb:	36 34 58             	ss xor al,0x58
    20be:	5f                   	pop    rdi
    20bf:	4d                   	rex.WRB
    20c0:	41 58                	pop    r8
    20c2:	5f                   	pop    rdi
    20c3:	5f                   	pop    rdi
    20c4:	20 31                	and    BYTE PTR [rcx],dh
    20c6:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    20c9:	39 37                	cmp    DWORD PTR [rdi],esi
    20cb:	33 31                	xor    esi,DWORD PTR [rcx]
    20cd:	34 39                	xor    al,0x39
    20cf:	35 33 35 37 32       	xor    eax,0x32373533
    20d4:	33 31                	xor    esi,DWORD PTR [rcx]
    20d6:	37                   	(bad)  
    20d7:	36 35 30 32 31 32    	ss xor eax,0x32313230
    20dd:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    20e0:	35 33 30 33 30       	xor    eax,0x30333033
    20e5:	39 37                	cmp    DWORD PTR [rdi],esi
    20e7:	30 32                	xor    BYTE PTR [rdx],dh
    20e9:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    20ec:	34 39                	xor    al,0x39
    20ee:	33 32                	xor    esi,DWORD PTR [rdx]
    20f0:	46                   	rex.RX
    20f1:	36 34 78             	ss xor al,0x78
    20f4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    20f7:	4f 5f                	rex.WRXB pop r15
    20f9:	72 65                	jb     2160 <__FRAME_END__+0x196c>
    20fb:	61                   	(bad)  
    20fc:	64 5f                	fs pop rdi
    20fe:	70 74                	jo     2174 <__FRAME_END__+0x1980>
    2100:	72 00                	jb     2102 <__FRAME_END__+0x190e>
    2102:	5f                   	pop    rdi
    2103:	5f                   	pop    rdi
    2104:	53                   	push   rbx
    2105:	49 5a                	rex.WB pop r10
    2107:	45 5f                	rex.RB pop r15
    2109:	54                   	push   rsp
    210a:	20 00                	and    BYTE PTR [rax],al
    210c:	5f                   	pop    rdi
    210d:	5f                   	pop    rdi
    210e:	49                   	rex.WB
    210f:	44 5f                	rex.R pop rdi
    2111:	54                   	push   rsp
    2112:	5f                   	pop    rdi
    2113:	54                   	push   rsp
    2114:	59                   	pop    rcx
    2115:	50                   	push   rax
    2116:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    211a:	55                   	push   rbp
    211b:	33 32                	xor    esi,DWORD PTR [rdx]
    211d:	5f                   	pop    rdi
    211e:	54                   	push   rsp
    211f:	59                   	pop    rcx
    2120:	50                   	push   rax
    2121:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2125:	53                   	push   rbx
    2126:	49 5a                	rex.WB pop r10
    2128:	45 5f                	rex.RB pop r15
    212a:	54                   	push   rsp
    212b:	5f                   	pop    rdi
    212c:	5f                   	pop    rdi
    212d:	20 00                	and    BYTE PTR [rax],al
    212f:	5f                   	pop    rdi
    2130:	49                   	rex.WB
    2131:	4f 5f                	rex.WRXB pop r15
    2133:	66 75 6e             	data16 jne 21a4 <__FRAME_END__+0x19b0>
    2136:	6c                   	ins    BYTE PTR es:[rdi],dx
    2137:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2138:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    213b:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2142:	29 
    2143:	20 00                	and    BYTE PTR [rax],al
    2145:	5f                   	pop    rdi
    2146:	5f                   	pop    rdi
    2147:	4b                   	rex.WXB
    2148:	45 59                	rex.RB pop r9
    214a:	5f                   	pop    rdi
    214b:	54                   	push   rsp
    214c:	5f                   	pop    rdi
    214d:	54                   	push   rsp
    214e:	59                   	pop    rcx
    214f:	50                   	push   rax
    2150:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2154:	53                   	push   rbx
    2155:	33 32                	xor    esi,DWORD PTR [rdx]
    2157:	5f                   	pop    rdi
    2158:	54                   	push   rsp
    2159:	59                   	pop    rcx
    215a:	50                   	push   rax
    215b:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    215f:	49                   	rex.WB
    2160:	4e 54                	rex.WRX push rsp
    2162:	5f                   	pop    rdi
    2163:	4c                   	rex.WR
    2164:	45                   	rex.RB
    2165:	41 53                	push   r11
    2167:	54                   	push   rsp
    2168:	36 34 5f             	ss xor al,0x5f
    216b:	4d                   	rex.WRB
    216c:	41 58                	pop    r8
    216e:	5f                   	pop    rdi
    216f:	5f                   	pop    rdi
    2170:	20 30                	and    BYTE PTR [rax],dh
    2172:	78 37                	js     21ab <__FRAME_END__+0x19b7>
    2174:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    217b:	66 66 66 66 66 66 66 
    2182:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2187:	49                   	rex.WB
    2188:	4e 54                	rex.WRX push rsp
    218a:	5f                   	pop    rdi
    218b:	4c                   	rex.WR
    218c:	45                   	rex.RB
    218d:	41 53                	push   r11
    218f:	54                   	push   rsp
    2190:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    2193:	49                   	rex.WB
    2194:	44 54                	rex.R push rsp
    2196:	48 5f                	rex.W pop rdi
    2198:	5f                   	pop    rdi
    2199:	20 38                	and    BYTE PTR [rax],bh
    219b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    219e:	4c                   	rex.WR
    219f:	44                   	rex.R
    21a0:	42                   	rex.X
    21a1:	4c 5f                	rex.WR pop rdi
    21a3:	52                   	push   rdx
    21a4:	45                   	rex.RB
    21a5:	44                   	rex.R
    21a6:	49 52                	rex.WB push r10
    21a8:	31 5f 4e             	xor    DWORD PTR [rdi+0x4e],ebx
    21ab:	54                   	push   rsp
    21ac:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    21b0:	6d                   	ins    DWORD PTR es:[rdi],dx
    21b1:	65 2c 70             	gs sub al,0x70
    21b4:	72 6f                	jb     2225 <__FRAME_END__+0x1a31>
    21b6:	74 6f                	je     2227 <__FRAME_END__+0x1a33>
    21b8:	2c 61                	sub    al,0x61
    21ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    21bb:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    21c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    21c3:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    21c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21c8:	74 6f                	je     2239 <__FRAME_END__+0x1a45>
    21ca:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    21cd:	54                   	push   rsp
    21ce:	48 52                	rex.W push rdx
    21d0:	4f 57                	rex.WRXB push r15
    21d2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21d5:	55                   	push   rbp
    21d6:	49                   	rex.WB
    21d7:	4e 54                	rex.WRX push rsp
    21d9:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    21dc:	41 58                	pop    r8
    21de:	5f                   	pop    rdi
    21df:	5f                   	pop    rdi
    21e0:	20 30                	and    BYTE PTR [rax],dh
    21e2:	78 66                	js     224a <__FRAME_END__+0x1a56>
    21e4:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    21e8:	4f 5f                	rex.WRXB pop r15
    21ea:	46                   	rex.RX
    21eb:	4c                   	rex.WR
    21ec:	41                   	rex.B
    21ed:	47 53                	rex.RXB push r11
    21ef:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    21f2:	4f 54                	rex.WRXB push r12
    21f4:	43                   	rex.XB
    21f5:	41                   	rex.B
    21f6:	4e                   	rex.WRX
    21f7:	43                   	rex.XB
    21f8:	45                   	rex.RB
    21f9:	4c 20 32             	rex.WR and BYTE PTR [rdx],r14b
    21fc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21ff:	61                   	(bad)  
    2200:	6c                   	ins    BYTE PTR es:[rdi],dx
    2201:	77 61                	ja     2264 <__FRAME_END__+0x1a70>
    2203:	79 73                	jns    2278 <__FRAME_END__+0x1a84>
    2205:	5f                   	pop    rdi
    2206:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    220d:	5f                   	pop    rdi
    220e:	5f                   	pop    rdi
    220f:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    2216:	5f                   	pop    rdi
    2217:	5f                   	pop    rdi
    2218:	61                   	(bad)  
    2219:	74 74                	je     228f <__FRAME_END__+0x1a9b>
    221b:	72 69                	jb     2286 <__FRAME_END__+0x1a92>
    221d:	62                   	(bad)  
    221e:	75 74                	jne    2294 <__FRAME_END__+0x1aa0>
    2220:	65 5f                	gs pop rdi
    2222:	5f                   	pop    rdi
    2223:	20 28                	and    BYTE PTR [rax],ch
    2225:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2228:	61                   	(bad)  
    2229:	6c                   	ins    BYTE PTR es:[rdi],dx
    222a:	77 61                	ja     228d <__FRAME_END__+0x1a99>
    222c:	79 73                	jns    22a1 <__FRAME_END__+0x1aad>
    222e:	5f                   	pop    rdi
    222f:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    2236:	5f                   	pop    rdi
    2237:	29 29                	sub    DWORD PTR [rcx],ebp
    2239:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    223c:	55                   	push   rbp
    223d:	49                   	rex.WB
    223e:	4e 54                	rex.WRX push rsp
    2240:	31 36                	xor    DWORD PTR [rsi],esi
    2242:	5f                   	pop    rdi
    2243:	4d                   	rex.WRB
    2244:	41 58                	pop    r8
    2246:	5f                   	pop    rdi
    2247:	5f                   	pop    rdi
    2248:	20 30                	and    BYTE PTR [rax],dh
    224a:	78 66                	js     22b2 <__FRAME_END__+0x1abe>
    224c:	66 66 66 00 5f 49    	data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2252:	4f 5f                	rex.WRXB pop r15
    2254:	4d                   	rex.WRB
    2255:	41                   	rex.B
    2256:	47                   	rex.RXB
    2257:	49                   	rex.WB
    2258:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    225b:	78 46                	js     22a3 <__FRAME_END__+0x1aaf>
    225d:	42                   	rex.X
    225e:	41                   	rex.B
    225f:	44 30 30             	xor    BYTE PTR [rax],r14b
    2262:	30 30                	xor    BYTE PTR [rax],dh
    2264:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2267:	47                   	rex.RXB
    2268:	4c                   	rex.WR
    2269:	49                   	rex.WB
    226a:	42                   	rex.X
    226b:	43 5f                	rex.XB pop r15
    226d:	55                   	push   rbp
    226e:	53                   	push   rbx
    226f:	45 28 46 29          	sub    BYTE PTR [r14+0x29],r8b
    2273:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2276:	47                   	rex.RXB
    2277:	4c                   	rex.WR
    2278:	49                   	rex.WB
    2279:	42                   	rex.X
    227a:	43 5f                	rex.XB pop r15
    227c:	55                   	push   rbp
    227d:	53                   	push   rbx
    227e:	45 5f                	rex.RB pop r15
    2280:	20 23                	and    BYTE PTR [rbx],ah
    2282:	23 20                	and    esp,DWORD PTR [rax]
    2284:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    2288:	49                   	rex.WB
    2289:	4e 54                	rex.WRX push rsp
    228b:	5f                   	pop    rdi
    228c:	46                   	rex.RX
    228d:	41 53                	push   r11
    228f:	54                   	push   rsp
    2290:	36 34 5f             	ss xor al,0x5f
    2293:	54                   	push   rsp
    2294:	59                   	pop    rcx
    2295:	50                   	push   rax
    2296:	45 5f                	rex.RB pop r15
    2298:	5f                   	pop    rdi
    2299:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    229d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    22a1:	74 00                	je     22a3 <__FRAME_END__+0x1aaf>
    22a3:	73 74                	jae    2319 <__FRAME_END__+0x1b25>
    22a5:	64 69 6e 20 73 74 64 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x69647473
    22ac:	69 
    22ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22ae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22b1:	61                   	(bad)  
    22b2:	74 74                	je     2328 <__FRAME_END__+0x1b34>
    22b4:	72 69                	jb     231f <__FRAME_END__+0x1b2b>
    22b6:	62                   	(bad)  
    22b7:	75 74                	jne    232d <__FRAME_END__+0x1b39>
    22b9:	65 5f                	gs pop rdi
    22bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22bd:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22c4:	5f                   	pop    rdi
    22c5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    22c8:	61                   	(bad)  
    22c9:	74 74                	je     233f <__FRAME_END__+0x1b4b>
    22cb:	72 69                	jb     2336 <__FRAME_END__+0x1b42>
    22cd:	62                   	(bad)  
    22ce:	75 74                	jne    2344 <__FRAME_END__+0x1b50>
    22d0:	65 5f                	gs pop rdi
    22d2:	5f                   	pop    rdi
    22d3:	20 28                	and    BYTE PTR [rax],ch
    22d5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    22d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22da:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22e1:	5f                   	pop    rdi
    22e2:	29 29                	sub    DWORD PTR [rcx],ebp
    22e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22e7:	53                   	push   rbx
    22e8:	54                   	push   rsp
    22e9:	44                   	rex.R
    22ea:	43 5f                	rex.XB pop r15
    22ec:	56                   	push   rsi
    22ed:	45 52                	rex.RB push r10
    22ef:	53                   	push   rbx
    22f0:	49                   	rex.WB
    22f1:	4f                   	rex.WRXB
    22f2:	4e 5f                	rex.WRX pop rdi
    22f4:	5f                   	pop    rdi
    22f5:	20 32                	and    BYTE PTR [rdx],dh
    22f7:	30 31                	xor    BYTE PTR [rcx],dh
    22f9:	31 31                	xor    DWORD PTR [rcx],esi
    22fb:	32 4c 00 5f          	xor    cl,BYTE PTR [rax+rax*1+0x5f]
    22ff:	5f                   	pop    rdi
    2300:	49                   	rex.WB
    2301:	4e 54                	rex.WRX push rsp
    2303:	4d                   	rex.WRB
    2304:	41 58                	pop    r8
    2306:	5f                   	pop    rdi
    2307:	57                   	push   rdi
    2308:	49                   	rex.WB
    2309:	44 54                	rex.R push rsp
    230b:	48 5f                	rex.W pop rdi
    230d:	5f                   	pop    rdi
    230e:	20 36                	and    BYTE PTR [rsi],dh
    2310:	34 00                	xor    al,0x0
    2312:	5f                   	pop    rdi
    2313:	5f                   	pop    rdi
    2314:	44                   	rex.R
    2315:	45                   	rex.RB
    2316:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2319:	5f                   	pop    rdi
    231a:	4d                   	rex.WRB
    231b:	41 58                	pop    r8
    231d:	5f                   	pop    rdi
    231e:	5f                   	pop    rdi
    231f:	20 39                	and    BYTE PTR [rcx],bh
    2321:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    2324:	39 39                	cmp    DWORD PTR [rcx],edi
    2326:	39 39                	cmp    DWORD PTR [rcx],edi
    2328:	45 39 36             	cmp    DWORD PTR [r14],r14d
    232b:	44                   	rex.R
    232c:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    2330:	47                   	rex.RXB
    2331:	4e 55                	rex.WRX push rbp
    2333:	43 5f                	rex.XB pop r15
    2335:	56                   	push   rsi
    2336:	41 5f                	pop    r15
    2338:	4c                   	rex.WR
    2339:	49 53                	rex.WB push r11
    233b:	54                   	push   rsp
    233c:	20 00                	and    BYTE PTR [rax],al
    233e:	5f                   	pop    rdi
    233f:	5f                   	pop    rdi
    2340:	50                   	push   rax
    2341:	54                   	push   rsp
    2342:	52                   	push   rdx
    2343:	44                   	rex.R
    2344:	49                   	rex.WB
    2345:	46                   	rex.RX
    2346:	46 5f                	rex.RX pop rdi
    2348:	4d                   	rex.WRB
    2349:	41 58                	pop    r8
    234b:	5f                   	pop    rdi
    234c:	5f                   	pop    rdi
    234d:	20 30                	and    BYTE PTR [rax],dh
    234f:	78 37                	js     2388 <__FRAME_END__+0x1b94>
    2351:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2358:	66 66 66 66 66 66 66 
    235f:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2364:	55                   	push   rbp
    2365:	53                   	push   rbx
    2366:	45 5f                	rex.RB pop r15
    2368:	50                   	push   rax
    2369:	4f 53                	rex.WRXB push r11
    236b:	49 58                	rex.WB pop r8
    236d:	31 39                	xor    DWORD PTR [rcx],edi
    236f:	39 33                	cmp    DWORD PTR [rbx],esi
    2371:	30 39                	xor    BYTE PTR [rcx],bh
    2373:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2376:	49                   	rex.WB
    2377:	4e 54                	rex.WRX push rsp
    2379:	5f                   	pop    rdi
    237a:	4c                   	rex.WR
    237b:	45                   	rex.RB
    237c:	41 53                	push   r11
    237e:	54                   	push   rsp
    237f:	31 36                	xor    DWORD PTR [rsi],esi
    2381:	5f                   	pop    rdi
    2382:	54                   	push   rsp
    2383:	59                   	pop    rcx
    2384:	50                   	push   rax
    2385:	45 5f                	rex.RB pop r15
    2387:	5f                   	pop    rdi
    2388:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    238b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    238c:	72 74                	jb     2402 <__FRAME_END__+0x1c0e>
    238e:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    2391:	74 00                	je     2393 <__FRAME_END__+0x1b9f>
    2393:	5f                   	pop    rdi
    2394:	5f                   	pop    rdi
    2395:	46                   	rex.RX
    2396:	4c 54                	rex.WR push rsp
    2398:	33 32                	xor    esi,DWORD PTR [rdx]
    239a:	5f                   	pop    rdi
    239b:	4d                   	rex.WRB
    239c:	41 58                	pop    r8
    239e:	5f                   	pop    rdi
    239f:	45 58                	rex.RB pop r8
    23a1:	50                   	push   rax
    23a2:	5f                   	pop    rdi
    23a3:	5f                   	pop    rdi
    23a4:	20 31                	and    BYTE PTR [rcx],dh
    23a6:	32 38                	xor    bh,BYTE PTR [rax]
    23a8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23ab:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    23ad:	75 5f                	jne    240e <__FRAME_END__+0x1c1a>
    23af:	6c                   	ins    BYTE PTR es:[rdi],dx
    23b0:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    23b7:	31 00                	xor    DWORD PTR [rax],eax
    23b9:	5f                   	pop    rdi
    23ba:	5f                   	pop    rdi
    23bb:	53                   	push   rbx
    23bc:	54                   	push   rsp
    23bd:	44 5f                	rex.R pop rdi
    23bf:	54                   	push   rsp
    23c0:	59                   	pop    rcx
    23c1:	50                   	push   rax
    23c2:	45 20 74 79 70       	and    BYTE PTR [r9+rdi*2+0x70],r14b
    23c7:	65 64 65 66 00 5f 5f 	gs fs data16 add BYTE PTR gs:[rdi+0x5f],bl
    23ce:	4d                   	rex.WRB
    23cf:	4f                   	rex.WRXB
    23d0:	44                   	rex.R
    23d1:	45 5f                	rex.RB pop r15
    23d3:	54                   	push   rsp
    23d4:	5f                   	pop    rdi
    23d5:	54                   	push   rsp
    23d6:	59                   	pop    rcx
    23d7:	50                   	push   rax
    23d8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    23dc:	55                   	push   rbp
    23dd:	33 32                	xor    esi,DWORD PTR [rdx]
    23df:	5f                   	pop    rdi
    23e0:	54                   	push   rsp
    23e1:	59                   	pop    rcx
    23e2:	50                   	push   rax
    23e3:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    23e7:	53                   	push   rbx
    23e8:	49 5a                	rex.WB pop r10
    23ea:	45                   	rex.RB
    23eb:	4f                   	rex.WRXB
    23ec:	46 5f                	rex.RX pop rdi
    23ee:	46                   	rex.RX
    23ef:	4c                   	rex.WR
    23f0:	4f                   	rex.WRXB
    23f1:	41 54                	push   r12
    23f3:	31 32                	xor    DWORD PTR [rdx],esi
    23f5:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    23f8:	20 31                	and    BYTE PTR [rcx],dh
    23fa:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    23fe:	47                   	rex.RXB
    23ff:	4e 55                	rex.WRX push rbp
    2401:	43 5f                	rex.XB pop r15
    2403:	53                   	push   rbx
    2404:	54                   	push   rsp
    2405:	44                   	rex.R
    2406:	43 5f                	rex.XB pop r15
    2408:	49                   	rex.WB
    2409:	4e                   	rex.WRX
    240a:	4c                   	rex.WR
    240b:	49                   	rex.WB
    240c:	4e                   	rex.WRX
    240d:	45 5f                	rex.RB pop r15
    240f:	5f                   	pop    rdi
    2410:	20 31                	and    BYTE PTR [rcx],dh
    2412:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2415:	44                   	rex.R
    2416:	42                   	rex.X
    2417:	4c 5f                	rex.WR pop rdi
    2419:	44                   	rex.R
    241a:	49                   	rex.WB
    241b:	47 5f                	rex.RXB pop r15
    241d:	5f                   	pop    rdi
    241e:	20 31                	and    BYTE PTR [rcx],dh
    2420:	35 00 5f 5f 47       	xor    eax,0x475f5f00
    2425:	43                   	rex.XB
    2426:	43 5f                	rex.XB pop r15
    2428:	41 54                	push   r12
    242a:	4f                   	rex.WRXB
    242b:	4d                   	rex.WRB
    242c:	49                   	rex.WB
    242d:	43 5f                	rex.XB pop r15
    242f:	43                   	rex.XB
    2430:	48                   	rex.W
    2431:	41 52                	push   r10
    2433:	31 36                	xor    DWORD PTR [rsi],esi
    2435:	5f                   	pop    rdi
    2436:	54                   	push   rsp
    2437:	5f                   	pop    rdi
    2438:	4c                   	rex.WR
    2439:	4f                   	rex.WRXB
    243a:	43                   	rex.XB
    243b:	4b 5f                	rex.WXB pop r15
    243d:	46 52                	rex.RX push rdx
    243f:	45                   	rex.RB
    2440:	45 20 32             	and    BYTE PTR [r10],r14b
    2443:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2446:	49                   	rex.WB
    2447:	4e 54                	rex.WRX push rsp
    2449:	5f                   	pop    rdi
    244a:	4c                   	rex.WR
    244b:	45                   	rex.RB
    244c:	41 53                	push   r11
    244e:	54                   	push   rsp
    244f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2452:	41 58                	pop    r8
    2454:	5f                   	pop    rdi
    2455:	5f                   	pop    rdi
    2456:	20 30                	and    BYTE PTR [rax],dh
    2458:	78 37                	js     2491 <__FRAME_END__+0x1c9d>
    245a:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    245e:	53                   	push   rbx
    245f:	31 36                	xor    DWORD PTR [rsi],esi
    2461:	5f                   	pop    rdi
    2462:	54                   	push   rsp
    2463:	59                   	pop    rcx
    2464:	50                   	push   rax
    2465:	45 20 73 68          	and    BYTE PTR [r11+0x68],r14b
    2469:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    246a:	72 74                	jb     24e0 <__FRAME_END__+0x1cec>
    246c:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    246f:	74 00                	je     2471 <__FRAME_END__+0x1c7d>
    2471:	5f                   	pop    rdi
    2472:	5f                   	pop    rdi
    2473:	4c 50                	rex.WR push rax
    2475:	36 34 5f             	ss xor al,0x5f
    2478:	5f                   	pop    rdi
    2479:	20 31                	and    BYTE PTR [rcx],dh
    247b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    247e:	53                   	push   rbx
    247f:	59                   	pop    rcx
    2480:	53                   	push   rbx
    2481:	43                   	rex.XB
    2482:	41                   	rex.B
    2483:	4c                   	rex.WR
    2484:	4c 5f                	rex.WR pop rdi
    2486:	57                   	push   rdi
    2487:	4f 52                	rex.WRXB push r10
    2489:	44 53                	rex.R push rbx
    248b:	49 5a                	rex.WB pop r10
    248d:	45 20 36             	and    BYTE PTR [r14],r14b
    2490:	34 00                	xor    al,0x0
    2492:	5f                   	pop    rdi
    2493:	5f                   	pop    rdi
    2494:	47                   	rex.RXB
    2495:	43                   	rex.XB
    2496:	43 5f                	rex.XB pop r15
    2498:	41 54                	push   r12
    249a:	4f                   	rex.WRXB
    249b:	4d                   	rex.WRB
    249c:	49                   	rex.WB
    249d:	43 5f                	rex.XB pop r15
    249f:	4c                   	rex.WR
    24a0:	4f                   	rex.WRXB
    24a1:	4e                   	rex.WRX
    24a2:	47 5f                	rex.RXB pop r15
    24a4:	4c                   	rex.WR
    24a5:	4f                   	rex.WRXB
    24a6:	43                   	rex.XB
    24a7:	4b 5f                	rex.WXB pop r15
    24a9:	46 52                	rex.RX push rdx
    24ab:	45                   	rex.RB
    24ac:	45 20 32             	and    BYTE PTR [r10],r14b
    24af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24b2:	46                   	rex.RX
    24b3:	4c 54                	rex.WR push rsp
    24b5:	33 32                	xor    esi,DWORD PTR [rdx]
    24b7:	58                   	pop    rax
    24b8:	5f                   	pop    rdi
    24b9:	44                   	rex.R
    24ba:	49                   	rex.WB
    24bb:	47 5f                	rex.RXB pop r15
    24bd:	5f                   	pop    rdi
    24be:	20 31                	and    BYTE PTR [rcx],dh
    24c0:	35 00 5f 5f 46       	xor    eax,0x465f5f00
    24c5:	4c 54                	rex.WR push rsp
    24c7:	33 32                	xor    esi,DWORD PTR [rdx]
    24c9:	58                   	pop    rax
    24ca:	5f                   	pop    rdi
    24cb:	4d                   	rex.WRB
    24cc:	41                   	rex.B
    24cd:	4e 54                	rex.WRX push rsp
    24cf:	5f                   	pop    rdi
    24d0:	44                   	rex.R
    24d1:	49                   	rex.WB
    24d2:	47 5f                	rex.RXB pop r15
    24d4:	5f                   	pop    rdi
    24d5:	20 35 33 00 5f 49    	and    BYTE PTR [rip+0x495f0033],dh        # 495f250e <_end+0x493f14f6>
    24db:	4f 5f                	rex.WRXB pop r15
    24dd:	77 72                	ja     2551 <__FRAME_END__+0x1d5d>
    24df:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    24e6:	65 
    24e7:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
    24ea:	50                   	push   rax
    24eb:	36 34 20             	ss xor al,0x20
    24ee:	31 00                	xor    DWORD PTR [rax],eax
    24f0:	5f                   	pop    rdi
    24f1:	46                   	rex.RX
    24f2:	45                   	rex.RB
    24f3:	41 54                	push   r12
    24f5:	55                   	push   rbp
    24f6:	52                   	push   rdx
    24f7:	45 53                	rex.RB push r11
    24f9:	5f                   	pop    rdi
    24fa:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    24fd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2500:	46                   	rex.RX
    2501:	4c 54                	rex.WR push rsp
    2503:	33 32                	xor    esi,DWORD PTR [rdx]
    2505:	5f                   	pop    rdi
    2506:	44                   	rex.R
    2507:	49                   	rex.WB
    2508:	47 5f                	rex.RXB pop r15
    250a:	5f                   	pop    rdi
    250b:	20 36                	and    BYTE PTR [rsi],dh
    250d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2510:	46 53                	rex.RX push rbx
    2512:	57                   	push   rdi
    2513:	4f 52                	rex.WRXB push r10
    2515:	44 5f                	rex.R pop rdi
    2517:	54                   	push   rsp
    2518:	5f                   	pop    rdi
    2519:	54                   	push   rsp
    251a:	59                   	pop    rcx
    251b:	50                   	push   rax
    251c:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2520:	53                   	push   rbx
    2521:	59                   	pop    rcx
    2522:	53                   	push   rbx
    2523:	43                   	rex.XB
    2524:	41                   	rex.B
    2525:	4c                   	rex.WR
    2526:	4c 5f                	rex.WR pop rdi
    2528:	53                   	push   rbx
    2529:	4c                   	rex.WR
    252a:	4f                   	rex.WRXB
    252b:	4e                   	rex.WRX
    252c:	47 5f                	rex.RXB pop r15
    252e:	54                   	push   rsp
    252f:	59                   	pop    rcx
    2530:	50                   	push   rax
    2531:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2535:	53                   	push   rbx
    2536:	4c                   	rex.WR
    2537:	4f                   	rex.WRXB
    2538:	4e                   	rex.WRX
    2539:	47 57                	rex.RXB push r15
    253b:	4f 52                	rex.WRXB push r10
    253d:	44 5f                	rex.R pop rdi
    253f:	54                   	push   rsp
    2540:	59                   	pop    rcx
    2541:	50                   	push   rax
    2542:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    2547:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    254b:	74 00                	je     254d <__FRAME_END__+0x1d59>
    254d:	5f                   	pop    rdi
    254e:	49                   	rex.WB
    254f:	4f 5f                	rex.WRXB pop r15
    2551:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    2554:	5f                   	pop    rdi
    2555:	73 74                	jae    25cb <__FRAME_END__+0x1dd7>
    2557:	64 69 6e 5f 00 5f 5f 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x785f5f00
    255e:	78 
    255f:	38 36                	cmp    BYTE PTR [rsi],dh
    2561:	5f                   	pop    rdi
    2562:	36 34 20             	ss xor al,0x20
    2565:	31 00                	xor    DWORD PTR [rax],eax
    2567:	5f                   	pop    rdi
    2568:	5f                   	pop    rdi
    2569:	46                   	rex.RX
    256a:	4c 54                	rex.WR push rsp
    256c:	36 34 58             	ss xor al,0x58
    256f:	5f                   	pop    rdi
    2570:	4d                   	rex.WRB
    2571:	41 58                	pop    r8
    2573:	5f                   	pop    rdi
    2574:	31 30                	xor    DWORD PTR [rax],esi
    2576:	5f                   	pop    rdi
    2577:	45 58                	rex.RB pop r8
    2579:	50                   	push   rax
    257a:	5f                   	pop    rdi
    257b:	5f                   	pop    rdi
    257c:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    257f:	33 32                	xor    esi,DWORD PTR [rdx]
    2581:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2584:	44                   	rex.R
    2585:	42                   	rex.X
    2586:	4c 5f                	rex.WR pop rdi
    2588:	4d                   	rex.WRB
    2589:	49                   	rex.WB
    258a:	4e 5f                	rex.WRX pop rdi
    258c:	5f                   	pop    rdi
    258d:	20 28                	and    BYTE PTR [rax],ch
    258f:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    2593:	62                   	(bad)  
    2594:	6c                   	ins    BYTE PTR es:[rdi],dx
    2595:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    2598:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    259b:	35 30 37 33 38       	xor    eax,0x38333730
    25a0:	35 38 35 30 37       	xor    eax,0x37303538
    25a5:	32 30                	xor    dh,BYTE PTR [rax]
    25a7:	31 33                	xor    DWORD PTR [rbx],esi
    25a9:	38 33                	cmp    BYTE PTR [rbx],dh
    25ab:	30 39                	xor    BYTE PTR [rcx],bh
    25ad:	30 32                	xor    BYTE PTR [rdx],dh
    25af:	33 32                	xor    esi,DWORD PTR [rdx]
    25b1:	37                   	(bad)  
    25b2:	31 37                	xor    DWORD PTR [rdi],esi
    25b4:	33 33                	xor    esi,DWORD PTR [rbx]
    25b6:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    25b9:	34 30                	xor    al,0x30
    25bb:	36 65 2d 33 30 38 4c 	ss gs sub eax,0x4c383033
    25c2:	29 00                	sub    DWORD PTR [rax],eax
    25c4:	5f                   	pop    rdi
    25c5:	49                   	rex.WB
    25c6:	4f 5f                	rex.WRXB pop r15
    25c8:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    25cb:	5f                   	pop    rdi
    25cc:	73 74                	jae    2642 <__FRAME_END__+0x1e4e>
    25ce:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    25d0:	75 74                	jne    2646 <__FRAME_END__+0x1e52>
    25d2:	5f                   	pop    rdi
    25d3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25d6:	55                   	push   rbp
    25d7:	49                   	rex.WB
    25d8:	4e 54                	rex.WRX push rsp
    25da:	5f                   	pop    rdi
    25db:	46                   	rex.RX
    25dc:	41 53                	push   r11
    25de:	54                   	push   rsp
    25df:	33 32                	xor    esi,DWORD PTR [rdx]
    25e1:	5f                   	pop    rdi
    25e2:	4d                   	rex.WRB
    25e3:	41 58                	pop    r8
    25e5:	5f                   	pop    rdi
    25e6:	5f                   	pop    rdi
    25e7:	20 30                	and    BYTE PTR [rax],dh
    25e9:	78 66                	js     2651 <__FRAME_END__+0x1e5d>
    25eb:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    25f2:	66 66 66 66 66 66 66 
    25f9:	66 55                	push   bp
    25fb:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    25ff:	46                   	rex.RX
    2600:	49                   	rex.WB
    2601:	4e                   	rex.WRX
    2602:	49 54                	rex.WB push r12
    2604:	45 5f                	rex.RB pop r15
    2606:	4d                   	rex.WRB
    2607:	41 54                	push   r12
    2609:	48 5f                	rex.W pop rdi
    260b:	4f                   	rex.WRXB
    260c:	4e                   	rex.WRX
    260d:	4c 59                	rex.WR pop rcx
    260f:	5f                   	pop    rdi
    2610:	5f                   	pop    rdi
    2611:	20 30                	and    BYTE PTR [rax],dh
    2613:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2616:	4f 5f                	rex.WRXB pop r15
    2618:	73 61                	jae    267b <__FRAME_END__+0x1e87>
    261a:	76 65                	jbe    2681 <__FRAME_END__+0x1e8d>
    261c:	5f                   	pop    rdi
    261d:	62 61                	(bad)  
    261f:	73 65                	jae    2686 <__FRAME_END__+0x1e92>
    2621:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2624:	55                   	push   rbp
    2625:	31 36                	xor    DWORD PTR [rsi],esi
    2627:	5f                   	pop    rdi
    2628:	54                   	push   rsp
    2629:	59                   	pop    rcx
    262a:	50                   	push   rax
    262b:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    262f:	73 69                	jae    269a <__FRAME_END__+0x1ea6>
    2631:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2633:	65 64 20 73 68       	gs and BYTE PTR fs:[rbx+0x68],dh
    2638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2639:	72 74                	jb     26af <__FRAME_END__+0x1ebb>
    263b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    263e:	74 00                	je     2640 <__FRAME_END__+0x1e4c>
    2640:	45                   	rex.RB
    2641:	4f                   	rex.WRXB
    2642:	46 20 28             	rex.RX and BYTE PTR [rax],r13b
    2645:	2d 31 29 00 5f       	sub    eax,0x5f002931
    264a:	5f                   	pop    rdi
    264b:	46                   	rex.RX
    264c:	4c 54                	rex.WR push rsp
    264e:	36 34 5f             	ss xor al,0x5f
    2651:	4d                   	rex.WRB
    2652:	41 58                	pop    r8
    2654:	5f                   	pop    rdi
    2655:	5f                   	pop    rdi
    2656:	20 31                	and    BYTE PTR [rcx],dh
    2658:	2e 37                	cs (bad) 
    265a:	39 37                	cmp    DWORD PTR [rdi],esi
    265c:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    265f:	31 33                	xor    DWORD PTR [rbx],esi
    2661:	34 38                	xor    al,0x38
    2663:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    2666:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 313856a3 <_end+0x3118468b>
    266c:	34 35                	xor    al,0x35
    266e:	32 37                	xor    dh,BYTE PTR [rdi]
    2670:	34 32                	xor    al,0x32
    2672:	33 37                	xor    esi,DWORD PTR [rdi]
    2674:	33 31                	xor    esi,DWORD PTR [rcx]
    2676:	37                   	(bad)  
    2677:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    267a:	35 37 65 2b 33       	xor    eax,0x332b6537
    267f:	30 38                	xor    BYTE PTR [rax],bh
    2681:	46                   	rex.RX
    2682:	36 34 00             	ss xor al,0x0
    2685:	5f                   	pop    rdi
    2686:	5f                   	pop    rdi
    2687:	73 69                	jae    26f2 <__FRAME_END__+0x1efe>
    2689:	7a 65                	jp     26f0 <__FRAME_END__+0x1efc>
    268b:	5f                   	pop    rdi
    268c:	74 5f                	je     26ed <__FRAME_END__+0x1ef9>
    268e:	5f                   	pop    rdi
    268f:	20 00                	and    BYTE PTR [rax],al
    2691:	5f                   	pop    rdi
    2692:	5f                   	pop    rdi
    2693:	55                   	push   rbp
    2694:	49                   	rex.WB
    2695:	4e 54                	rex.WRX push rsp
    2697:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    269a:	59                   	pop    rcx
    269b:	50                   	push   rax
    269c:	45 5f                	rex.RB pop r15
    269e:	5f                   	pop    rdi
    269f:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    26a2:	73 69                	jae    270d <__FRAME_END__+0x1f19>
    26a4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    26a6:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    26ab:	61                   	(bad)  
    26ac:	72 00                	jb     26ae <__FRAME_END__+0x1eba>
    26ae:	5f                   	pop    rdi
    26af:	49                   	rex.WB
    26b0:	4f 5f                	rex.WRXB pop r15
    26b2:	66 69 6c 65 5f 66 6c 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6c66
    26b9:	61                   	(bad)  
    26ba:	67 73 20             	addr32 jae 26dd <__FRAME_END__+0x1ee9>
    26bd:	5f                   	pop    rdi
    26be:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    26c0:	61                   	(bad)  
    26c1:	67 73 00             	addr32 jae 26c4 <__FRAME_END__+0x1ed0>
    26c4:	5f                   	pop    rdi
    26c5:	5f                   	pop    rdi
    26c6:	55                   	push   rbp
    26c7:	53                   	push   rbx
    26c8:	45 5f                	rex.RB pop r15
    26ca:	58                   	pop    rax
    26cb:	4f 50                	rex.WRXB push r8
    26cd:	45                   	rex.RB
    26ce:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    26d2:	58                   	pop    rax
    26d3:	53                   	push   rbx
    26d4:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    26d8:	49                   	rex.WB
    26d9:	4e 54                	rex.WRX push rsp
    26db:	5f                   	pop    rdi
    26dc:	46                   	rex.RX
    26dd:	41 53                	push   r11
    26df:	54                   	push   rsp
    26e0:	33 32                	xor    esi,DWORD PTR [rdx]
    26e2:	5f                   	pop    rdi
    26e3:	54                   	push   rsp
    26e4:	59                   	pop    rcx
    26e5:	50                   	push   rax
    26e6:	45 5f                	rex.RB pop r15
    26e8:	5f                   	pop    rdi
    26e9:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    26ed:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    26f1:	74 00                	je     26f3 <__FRAME_END__+0x1eff>
    26f3:	5f                   	pop    rdi
    26f4:	49                   	rex.WB
    26f5:	4f 53                	rex.WRXB push r11
    26f7:	5f                   	pop    rdi
    26f8:	49                   	rex.WB
    26f9:	4e 50                	rex.WRX push rax
    26fb:	55                   	push   rbp
    26fc:	54                   	push   rsp
    26fd:	20 31                	and    BYTE PTR [rcx],dh
    26ff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2702:	47                   	rex.RXB
    2703:	43                   	rex.XB
    2704:	43 5f                	rex.XB pop r15
    2706:	41 53                	push   r11
    2708:	4d 5f                	rex.WRB pop r15
    270a:	46                   	rex.RX
    270b:	4c                   	rex.WR
    270c:	41                   	rex.B
    270d:	47 5f                	rex.RXB pop r15
    270f:	4f 55                	rex.WRXB push r13
    2711:	54                   	push   rsp
    2712:	50                   	push   rax
    2713:	55                   	push   rbp
    2714:	54                   	push   rsp
    2715:	53                   	push   rbx
    2716:	5f                   	pop    rdi
    2717:	5f                   	pop    rdi
    2718:	20 31                	and    BYTE PTR [rcx],dh
    271a:	00 70 75             	add    BYTE PTR [rax+0x75],dh
    271d:	74 63                	je     2782 <__FRAME_END__+0x1f8e>
    271f:	28 5f 63             	sub    BYTE PTR [rdi+0x63],bl
    2722:	68 2c 5f 66 70       	push   0x70665f2c
    2727:	29 20                	sub    DWORD PTR [rax],esp
    2729:	5f                   	pop    rdi
    272a:	49                   	rex.WB
    272b:	4f 5f                	rex.WRXB pop r15
    272d:	70 75                	jo     27a4 <__FRAME_END__+0x1fb0>
    272f:	74 63                	je     2794 <__FRAME_END__+0x1fa0>
    2731:	20 28                	and    BYTE PTR [rax],ch
    2733:	5f                   	pop    rdi
    2734:	63 68 2c             	movsxd ebp,DWORD PTR [rax+0x2c]
    2737:	20 5f 66             	and    BYTE PTR [rdi+0x66],bl
    273a:	70 29                	jo     2765 <__FRAME_END__+0x1f71>
    273c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    273f:	55                   	push   rbp
    2740:	49                   	rex.WB
    2741:	4e 54                	rex.WRX push rsp
    2743:	5f                   	pop    rdi
    2744:	4c                   	rex.WR
    2745:	45                   	rex.RB
    2746:	41 53                	push   r11
    2748:	54                   	push   rsp
    2749:	36 34 5f             	ss xor al,0x5f
    274c:	4d                   	rex.WRB
    274d:	41 58                	pop    r8
    274f:	5f                   	pop    rdi
    2750:	5f                   	pop    rdi
    2751:	20 30                	and    BYTE PTR [rax],dh
    2753:	78 66                	js     27bb <__FRAME_END__+0x1fc7>
    2755:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    275c:	66 66 66 66 66 66 66 
    2763:	66 55                	push   bp
    2765:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2769:	50                   	push   rax
    276a:	4d 54                	rex.WRB push r12
    276c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    276f:	55                   	push   rbp
    2770:	51                   	push   rcx
    2771:	55                   	push   rbp
    2772:	41                   	rex.B
    2773:	44 5f                	rex.R pop rdi
    2775:	54                   	push   rsp
    2776:	59                   	pop    rcx
    2777:	50                   	push   rax
    2778:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    277c:	73 69                	jae    27e7 <__FRAME_END__+0x1ff3>
    277e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2780:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2786:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    278a:	74 00                	je     278c <__FRAME_END__+0x1f98>
    278c:	5f                   	pop    rdi
    278d:	5f                   	pop    rdi
    278e:	45                   	rex.RB
    278f:	4c                   	rex.WR
    2790:	46 5f                	rex.RX pop rdi
    2792:	5f                   	pop    rdi
    2793:	20 31                	and    BYTE PTR [rcx],dh
    2795:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2798:	46                   	rex.RX
    2799:	4c 54                	rex.WR push rsp
    279b:	33 32                	xor    esi,DWORD PTR [rdx]
    279d:	58                   	pop    rax
    279e:	5f                   	pop    rdi
    279f:	4d                   	rex.WRB
    27a0:	49                   	rex.WB
    27a1:	4e 5f                	rex.WRX pop rdi
    27a3:	5f                   	pop    rdi
    27a4:	20 32                	and    BYTE PTR [rdx],dh
    27a6:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    27a9:	35 30 37 33 38       	xor    eax,0x38333730
    27ae:	35 38 35 30 37       	xor    eax,0x37303538
    27b3:	32 30                	xor    dh,BYTE PTR [rax]
    27b5:	31 33                	xor    DWORD PTR [rbx],esi
    27b7:	38 33                	cmp    BYTE PTR [rbx],dh
    27b9:	30 39                	xor    BYTE PTR [rcx],bh
    27bb:	30 32                	xor    BYTE PTR [rdx],dh
    27bd:	33 32                	xor    esi,DWORD PTR [rdx]
    27bf:	37                   	(bad)  
    27c0:	31 37                	xor    DWORD PTR [rdi],esi
    27c2:	33 33                	xor    esi,DWORD PTR [rbx]
    27c4:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    27c7:	34 30                	xor    al,0x30
    27c9:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
    27d0:	33 32                	xor    esi,DWORD PTR [rdx]
    27d2:	78 00                	js     27d4 <__FRAME_END__+0x1fe0>
    27d4:	5f                   	pop    rdi
    27d5:	5f                   	pop    rdi
    27d6:	55                   	push   rbp
    27d7:	49                   	rex.WB
    27d8:	4e 54                	rex.WRX push rsp
    27da:	50                   	push   rax
    27db:	54                   	push   rsp
    27dc:	52                   	push   rdx
    27dd:	5f                   	pop    rdi
    27de:	54                   	push   rsp
    27df:	59                   	pop    rcx
    27e0:	50                   	push   rax
    27e1:	45 5f                	rex.RB pop r15
    27e3:	5f                   	pop    rdi
    27e4:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    27e8:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    27ec:	73 69                	jae    2857 <__FRAME_END__+0x2063>
    27ee:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    27f0:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    27f5:	74 00                	je     27f7 <__FRAME_END__+0x2003>
    27f7:	5f                   	pop    rdi
    27f8:	5f                   	pop    rdi
    27f9:	49                   	rex.WB
    27fa:	4e 54                	rex.WRX push rsp
    27fc:	31 36                	xor    DWORD PTR [rsi],esi
    27fe:	5f                   	pop    rdi
    27ff:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2803:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2806:	5f                   	pop    rdi
    2807:	5f                   	pop    rdi
    2808:	47                   	rex.RXB
    2809:	43                   	rex.XB
    280a:	43 5f                	rex.XB pop r15
    280c:	48                   	rex.W
    280d:	41 56                	push   r14
    280f:	45 5f                	rex.RB pop r15
    2811:	44 57                	rex.R push rdi
    2813:	41 52                	push   r10
    2815:	46 32 5f 43          	rex.RX xor r11b,BYTE PTR [rdi+0x43]
    2819:	46                   	rex.RX
    281a:	49 5f                	rex.WB pop r15
    281c:	41 53                	push   r11
    281e:	4d 20 31             	rex.WRB and BYTE PTR [r9],r14b
    2821:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2824:	53                   	push   rbx
    2825:	49 5a                	rex.WB pop r10
    2827:	45                   	rex.RB
    2828:	4f                   	rex.WRXB
    2829:	46 5f                	rex.RX pop rdi
    282b:	46                   	rex.RX
    282c:	4c                   	rex.WR
    282d:	4f                   	rex.WRXB
    282e:	41 54                	push   r12
    2830:	5f                   	pop    rdi
    2831:	5f                   	pop    rdi
    2832:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2835:	5f                   	pop    rdi
    2836:	5f                   	pop    rdi
    2837:	44                   	rex.R
    2838:	45                   	rex.RB
    2839:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    283c:	5f                   	pop    rdi
    283d:	53                   	push   rbx
    283e:	55                   	push   rbp
    283f:	42                   	rex.X
    2840:	4e                   	rex.WRX
    2841:	4f 52                	rex.WRXB push r10
    2843:	4d                   	rex.WRB
    2844:	41                   	rex.B
    2845:	4c 5f                	rex.WR pop rdi
    2847:	4d                   	rex.WRB
    2848:	49                   	rex.WB
    2849:	4e 5f                	rex.WRX pop rdi
    284b:	5f                   	pop    rdi
    284c:	20 30                	and    BYTE PTR [rax],dh
    284e:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    2851:	30 30                	xor    BYTE PTR [rax],dh
    2853:	30 31                	xor    BYTE PTR [rcx],dh
    2855:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    285b:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    285e:	4f 5f                	rex.WRXB pop r15
    2860:	49 53                	rex.WB push r11
    2862:	5f                   	pop    rdi
    2863:	41 50                	push   r8
    2865:	50                   	push   rax
    2866:	45                   	rex.RB
    2867:	4e                   	rex.WRX
    2868:	44                   	rex.R
    2869:	49                   	rex.WB
    286a:	4e                   	rex.WRX
    286b:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    286e:	78 31                	js     28a1 <__FRAME_END__+0x20ad>
    2870:	30 30                	xor    BYTE PTR [rax],dh
    2872:	30 00                	xor    BYTE PTR [rax],al
    2874:	5f                   	pop    rdi
    2875:	5f                   	pop    rdi
    2876:	46                   	rex.RX
    2877:	4c 54                	rex.WR push rsp
    2879:	36 34 58             	ss xor al,0x58
    287c:	5f                   	pop    rdi
    287d:	48                   	rex.W
    287e:	41 53                	push   r11
    2880:	5f                   	pop    rdi
    2881:	51                   	push   rcx
    2882:	55                   	push   rbp
    2883:	49                   	rex.WB
    2884:	45 54                	rex.RB push r12
    2886:	5f                   	pop    rdi
    2887:	4e                   	rex.WRX
    2888:	41                   	rex.B
    2889:	4e 5f                	rex.WRX pop rdi
    288b:	5f                   	pop    rdi
    288c:	20 31                	and    BYTE PTR [rcx],dh
    288e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2891:	46                   	rex.RX
    2892:	4c 54                	rex.WR push rsp
    2894:	5f                   	pop    rdi
    2895:	48                   	rex.W
    2896:	41 53                	push   r11
    2898:	5f                   	pop    rdi
    2899:	49                   	rex.WB
    289a:	4e                   	rex.WRX
    289b:	46                   	rex.RX
    289c:	49                   	rex.WB
    289d:	4e                   	rex.WRX
    289e:	49 54                	rex.WB push r12
    28a0:	59                   	pop    rcx
    28a1:	5f                   	pop    rdi
    28a2:	5f                   	pop    rdi
    28a3:	20 31                	and    BYTE PTR [rcx],dh
    28a5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    28a8:	4f 53                	rex.WRXB push r11
    28aa:	5f                   	pop    rdi
    28ab:	4e                   	rex.WRX
    28ac:	4f 52                	rex.WRXB push r10
    28ae:	45 50                	rex.RB push r8
    28b0:	4c                   	rex.WR
    28b1:	41                   	rex.B
    28b2:	43                   	rex.XB
    28b3:	45 20 36             	and    BYTE PTR [r14],r14b
    28b6:	34 00                	xor    al,0x0
    28b8:	5f                   	pop    rdi
    28b9:	5f                   	pop    rdi
    28ba:	53                   	push   rbx
    28bb:	54                   	push   rsp
    28bc:	44 5f                	rex.R pop rdi
    28be:	54                   	push   rsp
    28bf:	59                   	pop    rcx
    28c0:	50                   	push   rax
    28c1:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    28c5:	55                   	push   rbp
    28c6:	53                   	push   rbx
    28c7:	45 5f                	rex.RB pop r15
    28c9:	50                   	push   rax
    28ca:	4f 53                	rex.WRXB push r11
    28cc:	49 58                	rex.WB pop r8
    28ce:	31 39                	xor    DWORD PTR [rcx],edi
    28d0:	39 33                	cmp    DWORD PTR [rbx],esi
    28d2:	30 39                	xor    BYTE PTR [rcx],bh
    28d4:	20 31                	and    BYTE PTR [rcx],dh
    28d6:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    28d9:	4f 5f                	rex.WRXB pop r15
    28db:	73 69                	jae    2946 <__FRAME_END__+0x2152>
    28dd:	7a 65                	jp     2944 <__FRAME_END__+0x2150>
    28df:	5f                   	pop    rdi
    28e0:	74 20                	je     2902 <__FRAME_END__+0x210e>
    28e2:	73 69                	jae    294d <__FRAME_END__+0x2159>
    28e4:	7a 65                	jp     294b <__FRAME_END__+0x2157>
    28e6:	5f                   	pop    rdi
    28e7:	74 00                	je     28e9 <__FRAME_END__+0x20f5>
    28e9:	5f                   	pop    rdi
    28ea:	5f                   	pop    rdi
    28eb:	49                   	rex.WB
    28ec:	4e                   	rex.WRX
    28ed:	4f                   	rex.WRXB
    28ee:	36 34 5f             	ss xor al,0x5f
    28f1:	54                   	push   rsp
    28f2:	5f                   	pop    rdi
    28f3:	54                   	push   rsp
    28f4:	59                   	pop    rcx
    28f5:	50                   	push   rax
    28f6:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    28fa:	55                   	push   rbp
    28fb:	51                   	push   rcx
    28fc:	55                   	push   rbp
    28fd:	41                   	rex.B
    28fe:	44 5f                	rex.R pop rdi
    2900:	54                   	push   rsp
    2901:	59                   	pop    rcx
    2902:	50                   	push   rax
    2903:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2907:	47                   	rex.RXB
    2908:	4e 55                	rex.WRX push rbp
    290a:	5f                   	pop    rdi
    290b:	4c                   	rex.WR
    290c:	49                   	rex.WB
    290d:	42 52                	rex.X push rdx
    290f:	41 52                	push   r10
    2911:	59                   	pop    rcx
    2912:	5f                   	pop    rdi
    2913:	5f                   	pop    rdi
    2914:	20 36                	and    BYTE PTR [rsi],dh
    2916:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2919:	53                   	push   rbx
    291a:	54                   	push   rsp
    291b:	44                   	rex.R
    291c:	43 5f                	rex.XB pop r15
    291e:	5f                   	pop    rdi
    291f:	20 31                	and    BYTE PTR [rcx],dh
    2921:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2924:	67 6c                	ins    BYTE PTR es:[edi],dx
    2926:	69 62 63 5f 63 39 39 	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
    292d:	5f                   	pop    rdi
    292e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2930:	65 78 61             	gs js  2994 <__FRAME_END__+0x21a0>
    2933:	72 72                	jb     29a7 <__FRAME_END__+0x21b3>
    2935:	5f                   	pop    rdi
    2936:	61                   	(bad)  
    2937:	76 61                	jbe    299a <__FRAME_END__+0x21a6>
    2939:	69 6c 61 62 6c 65 20 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x3120656c
    2940:	31 
    2941:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2944:	53                   	push   rbx
    2945:	53                   	push   rbx
    2946:	45 32 5f 5f          	xor    r11b,BYTE PTR [r15+0x5f]
    294a:	20 31                	and    BYTE PTR [rcx],dh
    294c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    294f:	53                   	push   rbx
    2950:	4c                   	rex.WR
    2951:	4f                   	rex.WRXB
    2952:	4e                   	rex.WRX
    2953:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    2956:	5f                   	pop    rdi
    2957:	54                   	push   rsp
    2958:	59                   	pop    rcx
    2959:	50                   	push   rax
    295a:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
    295e:	74 00                	je     2960 <__FRAME_END__+0x216c>
    2960:	5f                   	pop    rdi
    2961:	5f                   	pop    rdi
    2962:	44                   	rex.R
    2963:	42                   	rex.X
    2964:	4c 5f                	rex.WR pop rdi
    2966:	4d                   	rex.WRB
    2967:	41 58                	pop    r8
    2969:	5f                   	pop    rdi
    296a:	45 58                	rex.RB pop r8
    296c:	50                   	push   rax
    296d:	5f                   	pop    rdi
    296e:	5f                   	pop    rdi
    296f:	20 31                	and    BYTE PTR [rcx],dh
    2971:	30 32                	xor    BYTE PTR [rdx],dh
    2973:	34 00                	xor    al,0x0
    2975:	5f                   	pop    rdi
    2976:	5f                   	pop    rdi
    2977:	53                   	push   rbx
    2978:	49 5a                	rex.WB pop r10
    297a:	45                   	rex.RB
    297b:	4f                   	rex.WRXB
    297c:	46 5f                	rex.RX pop rdi
    297e:	4c                   	rex.WR
    297f:	4f                   	rex.WRXB
    2980:	4e                   	rex.WRX
    2981:	47 5f                	rex.RXB pop r15
    2983:	5f                   	pop    rdi
    2984:	20 38                	and    BYTE PTR [rax],bh
    2986:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2989:	41 54                	push   r12
    298b:	4f                   	rex.WRXB
    298c:	4d                   	rex.WRB
    298d:	49                   	rex.WB
    298e:	43 5f                	rex.XB pop r15
    2990:	43                   	rex.XB
    2991:	4f                   	rex.WRXB
    2992:	4e 53                	rex.WRX push rbx
    2994:	55                   	push   rbp
    2995:	4d                   	rex.WRB
    2996:	45 20 31             	and    BYTE PTR [r9],r14b
    2999:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    299c:	55                   	push   rbp
    299d:	53                   	push   rbx
    299e:	45 5f                	rex.RB pop r15
    29a0:	46                   	rex.RX
    29a1:	49                   	rex.WB
    29a2:	4c                   	rex.WR
    29a3:	45 5f                	rex.RB pop r15
    29a5:	4f                   	rex.WRXB
    29a6:	46                   	rex.RX
    29a7:	46 53                	rex.RX push rbx
    29a9:	45 54                	rex.RB push r12
    29ab:	36 34 00             	ss xor al,0x0
    29ae:	5f                   	pop    rdi
    29af:	49                   	rex.WB
    29b0:	4f 5f                	rex.WRXB pop r15
    29b2:	46                   	rex.RX
    29b3:	4c                   	rex.WR
    29b4:	41                   	rex.B
    29b5:	47 53                	rex.RXB push r11
    29b7:	32 5f 4d             	xor    bl,BYTE PTR [rdi+0x4d]
    29ba:	4d                   	rex.WRB
    29bb:	41 50                	push   r8
    29bd:	20 31                	and    BYTE PTR [rcx],dh
    29bf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29c2:	46                   	rex.RX
    29c3:	4c 54                	rex.WR push rsp
    29c5:	33 32                	xor    esi,DWORD PTR [rdx]
    29c7:	5f                   	pop    rdi
    29c8:	4d                   	rex.WRB
    29c9:	49                   	rex.WB
    29ca:	4e 5f                	rex.WRX pop rdi
    29cc:	5f                   	pop    rdi
    29cd:	20 31                	and    BYTE PTR [rcx],dh
    29cf:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    29d2:	35 34 39 34 33       	xor    eax,0x33343934
    29d7:	35 30 38 32 32       	xor    eax,0x32323830
    29dc:	32 38                	xor    bh,BYTE PTR [rax]
    29de:	37                   	(bad)  
    29df:	35 30 37 39 36       	xor    eax,0x36393730
    29e4:	38 37                	cmp    BYTE PTR [rdi],dh
    29e6:	33 36                	xor    esi,DWORD PTR [rsi]
    29e8:	35 33 37 32 32       	xor    eax,0x32323733
    29ed:	32 32                	xor    dh,BYTE PTR [rdx]
    29ef:	34 35                	xor    al,0x35
    29f1:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    29f5:	33 38                	xor    edi,DWORD PTR [rax]
    29f7:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    29fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29fd:	57                   	push   rdi
    29fe:	49                   	rex.WB
    29ff:	4e 54                	rex.WRX push rsp
    2a01:	5f                   	pop    rdi
    2a02:	54                   	push   rsp
    2a03:	59                   	pop    rcx
    2a04:	50                   	push   rax
    2a05:	45 5f                	rex.RB pop r15
    2a07:	5f                   	pop    rdi
    2a08:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    2a0b:	73 69                	jae    2a76 <__FRAME_END__+0x2282>
    2a0d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2a0f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    2a14:	74 00                	je     2a16 <__FRAME_END__+0x2222>
    2a16:	5f                   	pop    rdi
    2a17:	5f                   	pop    rdi
    2a18:	55                   	push   rbp
    2a19:	53                   	push   rbx
    2a1a:	45 5f                	rex.RB pop r15
    2a1c:	4d                   	rex.WRB
    2a1d:	49 53                	rex.WB push r11
    2a1f:	43 00 5f 49          	rex.XB add BYTE PTR [r15+0x49],bl
    2a23:	4f 5f                	rex.WRXB pop r15
    2a25:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    2a29:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a2a:	75 70                	jne    2a9c <__FRAME_END__+0x22a8>
    2a2c:	5f                   	pop    rdi
    2a2d:	72 65                	jb     2a94 <__FRAME_END__+0x22a0>
    2a2f:	67 69 6f 6e 5f 65 6e 	imul   ebp,DWORD PTR [edi+0x6e],0x646e655f
    2a36:	64 
    2a37:	28 5f 44             	sub    BYTE PTR [rdi+0x44],bl
    2a3a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a3b:	69 74 29 20 00 5f 5f 	imul   esi,DWORD PTR [rcx+rbp*1+0x20],0x495f5f00
    2a42:	49 
    2a43:	4e 54                	rex.WRX push rsp
    2a45:	31 36                	xor    DWORD PTR [rsi],esi
    2a47:	5f                   	pop    rdi
    2a48:	4d                   	rex.WRB
    2a49:	41 58                	pop    r8
    2a4b:	5f                   	pop    rdi
    2a4c:	5f                   	pop    rdi
    2a4d:	20 30                	and    BYTE PTR [rax],dh
    2a4f:	78 37                	js     2a88 <__FRAME_END__+0x2294>
    2a51:	66 66 66 00 5f 50    	data16 data16 data16 add BYTE PTR [rdi+0x50],bl
    2a57:	4f 53                	rex.WRXB push r11
    2a59:	49 58                	rex.WB pop r8
    2a5b:	5f                   	pop    rdi
    2a5c:	43 5f                	rex.XB pop r15
    2a5e:	53                   	push   rbx
    2a5f:	4f 55                	rex.WRXB push r13
    2a61:	52                   	push   rdx
    2a62:	43                   	rex.XB
    2a63:	45 20 32             	and    BYTE PTR [r10],r14b
    2a66:	30 30                	xor    BYTE PTR [rax],dh
    2a68:	38 30                	cmp    BYTE PTR [rax],dh
    2a6a:	39 4c 00 5f          	cmp    DWORD PTR [rax+rax*1+0x5f],ecx
    2a6e:	5f                   	pop    rdi
    2a6f:	53                   	push   rbx
    2a70:	43                   	rex.XB
    2a71:	48                   	rex.W
    2a72:	41 52                	push   r10
    2a74:	5f                   	pop    rdi
    2a75:	57                   	push   rdi
    2a76:	49                   	rex.WB
    2a77:	44 54                	rex.R push rsp
    2a79:	48 5f                	rex.W pop rdi
    2a7b:	5f                   	pop    rdi
    2a7c:	20 38                	and    BYTE PTR [rax],bh
    2a7e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2a81:	55                   	push   rbp
    2a82:	49                   	rex.WB
    2a83:	4e 54                	rex.WRX push rsp
    2a85:	33 32                	xor    esi,DWORD PTR [rdx]
    2a87:	5f                   	pop    rdi
    2a88:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2a8c:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    2a8f:	23 23                	and    esp,DWORD PTR [rbx]
    2a91:	20 55 00             	and    BYTE PTR [rbp+0x0],dl
    2a94:	5f                   	pop    rdi
    2a95:	5f                   	pop    rdi
    2a96:	4c                   	rex.WR
    2a97:	44                   	rex.R
    2a98:	42                   	rex.X
    2a99:	4c 5f                	rex.WR pop rdi
    2a9b:	4d                   	rex.WRB
    2a9c:	49                   	rex.WB
    2a9d:	4e 5f                	rex.WRX pop rdi
    2a9f:	31 30                	xor    DWORD PTR [rax],esi
    2aa1:	5f                   	pop    rdi
    2aa2:	45 58                	rex.RB pop r8
    2aa4:	50                   	push   rax
    2aa5:	5f                   	pop    rdi
    2aa6:	5f                   	pop    rdi
    2aa7:	20 28                	and    BYTE PTR [rax],ch
    2aa9:	2d 34 39 33 31       	sub    eax,0x31333934
    2aae:	29 00                	sub    DWORD PTR [rax],eax
    2ab0:	5f                   	pop    rdi
    2ab1:	53                   	push   rbx
    2ab2:	54                   	push   rsp
    2ab3:	44                   	rex.R
    2ab4:	49                   	rex.WB
    2ab5:	4f 5f                	rex.WRXB pop r15
    2ab7:	55                   	push   rbp
    2ab8:	53                   	push   rbx
    2ab9:	45 53                	rex.RB push r11
    2abb:	5f                   	pop    rdi
    2abc:	49                   	rex.WB
    2abd:	4f 53                	rex.WRXB push r11
    2abf:	54                   	push   rsp
    2ac0:	52                   	push   rdx
    2ac1:	45                   	rex.RB
    2ac2:	41                   	rex.B
    2ac3:	4d 20 00             	rex.WRB and BYTE PTR [r8],r8b
    2ac6:	5f                   	pop    rdi
    2ac7:	5f                   	pop    rdi
    2ac8:	53                   	push   rbx
    2ac9:	49 5a                	rex.WB pop r10
    2acb:	45                   	rex.RB
    2acc:	4f                   	rex.WRXB
    2acd:	46 5f                	rex.RX pop rdi
    2acf:	44                   	rex.R
    2ad0:	4f 55                	rex.WRXB push r13
    2ad2:	42                   	rex.X
    2ad3:	4c                   	rex.WR
    2ad4:	45 5f                	rex.RB pop r15
    2ad6:	5f                   	pop    rdi
    2ad7:	20 38                	and    BYTE PTR [rax],bh
    2ad9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2adc:	55                   	push   rbp
    2add:	49                   	rex.WB
    2ade:	4e 54                	rex.WRX push rsp
    2ae0:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    2ae3:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    2ae6:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2ae9:	5f                   	pop    rdi
    2aea:	5f                   	pop    rdi
    2aeb:	42                   	rex.X
    2aec:	4c                   	rex.WR
    2aed:	4b                   	rex.WXB
    2aee:	43                   	rex.XB
    2aef:	4e 54                	rex.WRX push rsp
    2af1:	36 34 5f             	ss xor al,0x5f
    2af4:	54                   	push   rsp
    2af5:	5f                   	pop    rdi
    2af6:	54                   	push   rsp
    2af7:	59                   	pop    rcx
    2af8:	50                   	push   rax
    2af9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2afd:	53                   	push   rbx
    2afe:	51                   	push   rcx
    2aff:	55                   	push   rbp
    2b00:	41                   	rex.B
    2b01:	44 5f                	rex.R pop rdi
    2b03:	54                   	push   rsp
    2b04:	59                   	pop    rcx
    2b05:	50                   	push   rax
    2b06:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2b0a:	55                   	push   rbp
    2b0b:	53                   	push   rbx
    2b0c:	45 5f                	rex.RB pop r15
    2b0e:	46                   	rex.RX
    2b0f:	4f 52                	rex.WRXB push r10
    2b11:	54                   	push   rsp
    2b12:	49                   	rex.WB
    2b13:	46 59                	rex.RX pop rcx
    2b15:	5f                   	pop    rdi
    2b16:	4c                   	rex.WR
    2b17:	45 56                	rex.RB push r14
    2b19:	45                   	rex.RB
    2b1a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2b1e:	47                   	rex.RXB
    2b1f:	4c                   	rex.WR
    2b20:	49                   	rex.WB
    2b21:	42                   	rex.X
    2b22:	43 5f                	rex.XB pop r15
    2b24:	55                   	push   rbp
    2b25:	53                   	push   rbx
    2b26:	45 5f                	rex.RB pop r15
    2b28:	4c                   	rex.WR
    2b29:	49                   	rex.WB
    2b2a:	42 5f                	rex.X pop rdi
    2b2c:	45 58                	rex.RB pop r8
    2b2e:	54                   	push   rsp
    2b2f:	32 00                	xor    al,BYTE PTR [rax]
    2b31:	5f                   	pop    rdi
    2b32:	5f                   	pop    rdi
    2b33:	57                   	push   rdi
    2b34:	49                   	rex.WB
    2b35:	4e 54                	rex.WRX push rsp
    2b37:	5f                   	pop    rdi
    2b38:	4d                   	rex.WRB
    2b39:	49                   	rex.WB
    2b3a:	4e 5f                	rex.WRX pop rdi
    2b3c:	5f                   	pop    rdi
    2b3d:	20 30                	and    BYTE PTR [rax],dh
    2b3f:	55                   	push   rbp
    2b40:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b43:	4c                   	rex.WR
    2b44:	44                   	rex.R
    2b45:	42                   	rex.X
    2b46:	4c 5f                	rex.WR pop rdi
    2b48:	4d                   	rex.WRB
    2b49:	41                   	rex.B
    2b4a:	4e 54                	rex.WRX push rsp
    2b4c:	5f                   	pop    rdi
    2b4d:	44                   	rex.R
    2b4e:	49                   	rex.WB
    2b4f:	47 5f                	rex.RXB pop r15
    2b51:	5f                   	pop    rdi
    2b52:	20 36                	and    BYTE PTR [rsi],dh
    2b54:	34 00                	xor    al,0x0
    2b56:	5f                   	pop    rdi
    2b57:	5f                   	pop    rdi
    2b58:	70 61                	jo     2bbb <__FRAME_END__+0x23c7>
    2b5a:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    2b5d:	5f                   	pop    rdi
    2b5e:	5f                   	pop    rdi
    2b5f:	70 61                	jo     2bc2 <__FRAME_END__+0x23ce>
    2b61:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2b64:	5f                   	pop    rdi
    2b65:	5f                   	pop    rdi
    2b66:	70 61                	jo     2bc9 <__FRAME_END__+0x23d5>
    2b68:	64 33 00             	xor    eax,DWORD PTR fs:[rax]
    2b6b:	5f                   	pop    rdi
    2b6c:	5f                   	pop    rdi
    2b6d:	70 61                	jo     2bd0 <__FRAME_END__+0x23dc>
    2b6f:	64 34 00             	fs xor al,0x0
    2b72:	5f                   	pop    rdi
    2b73:	5f                   	pop    rdi
    2b74:	70 61                	jo     2bd7 <__FRAME_END__+0x23e3>
    2b76:	64 35 00 5f 5f 53    	fs xor eax,0x535f5f00
    2b7c:	54                   	push   rsp
    2b7d:	44                   	rex.R
    2b7e:	43 5f                	rex.XB pop r15
    2b80:	55                   	push   rbp
    2b81:	54                   	push   rsp
    2b82:	46 5f                	rex.RX pop rdi
    2b84:	31 36                	xor    DWORD PTR [rsi],esi
    2b86:	5f                   	pop    rdi
    2b87:	5f                   	pop    rdi
    2b88:	20 31                	and    BYTE PTR [rcx],dh
    2b8a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b8d:	4c                   	rex.WR
    2b8e:	44                   	rex.R
    2b8f:	42                   	rex.X
    2b90:	4c 5f                	rex.WR pop rdi
    2b92:	45 50                	rex.RB push r8
    2b94:	53                   	push   rbx
    2b95:	49                   	rex.WB
    2b96:	4c                   	rex.WR
    2b97:	4f                   	rex.WRXB
    2b98:	4e 5f                	rex.WRX pop rdi
    2b9a:	5f                   	pop    rdi
    2b9b:	20 31                	and    BYTE PTR [rcx],dh
    2b9d:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
    2ba0:	34 32                	xor    al,0x32
    2ba2:	30 32                	xor    BYTE PTR [rdx],dh
    2ba4:	31 37                	xor    DWORD PTR [rdi],esi
    2ba6:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2ba9:	35 35 30 34 34       	xor    eax,0x34343035
    2bae:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
    2bb1:	30 37                	xor    BYTE PTR [rdi],dh
    2bb3:	34 35                	xor    al,0x35
    2bb5:	32 38                	xor    bh,BYTE PTR [rax]
    2bb7:	30 30                	xor    BYTE PTR [rax],dh
    2bb9:	38 36                	cmp    BYTE PTR [rsi],dh
    2bbb:	39 39                	cmp    DWORD PTR [rcx],edi
    2bbd:	34 31                	xor    al,0x31
    2bbf:	37                   	(bad)  
    2bc0:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
    2bc3:	31 39                	xor    DWORD PTR [rcx],edi
    2bc5:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2bc9:	62                   	(bad)  
    2bca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bcb:	73 30                	jae    2bfd <__FRAME_END__+0x2409>
    2bcd:	28 70 74             	sub    BYTE PTR [rax+0x74],dh
    2bd0:	72 29                	jb     2bfb <__FRAME_END__+0x2407>
    2bd2:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2bd5:	62                   	(bad)  
    2bd6:	75 69                	jne    2c41 <__FRAME_END__+0x244d>
    2bd8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bd9:	74 69                	je     2c44 <__FRAME_END__+0x2450>
    2bdb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bdc:	5f                   	pop    rdi
    2bdd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bde:	62                   	(bad)  
    2bdf:	6a 65                	push   0x65
    2be1:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2be5:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2bec:	72 2c                	jb     2c1a <__FRAME_END__+0x2426>
    2bee:	20 30                	and    BYTE PTR [rax],dh
    2bf0:	29 00                	sub    DWORD PTR [rax],eax
    2bf2:	5f                   	pop    rdi
    2bf3:	49                   	rex.WB
    2bf4:	4f                   	rex.WRXB
    2bf5:	4c                   	rex.WR
    2bf6:	42                   	rex.X
    2bf7:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
    2bfa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2bfd:	61                   	(bad)  
    2bfe:	74 74                	je     2c74 <__FRAME_END__+0x2480>
    2c00:	72 69                	jb     2c6b <__FRAME_END__+0x2477>
    2c02:	62                   	(bad)  
    2c03:	75 74                	jne    2c79 <__FRAME_END__+0x2485>
    2c05:	65 5f                	gs pop rdi
    2c07:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2c09:	72 6d                	jb     2c78 <__FRAME_END__+0x2484>
    2c0b:	61                   	(bad)  
    2c0c:	74 5f                	je     2c6d <__FRAME_END__+0x2479>
    2c0e:	61                   	(bad)  
    2c0f:	72 67                	jb     2c78 <__FRAME_END__+0x2484>
    2c11:	5f                   	pop    rdi
    2c12:	5f                   	pop    rdi
    2c13:	28 78 29             	sub    BYTE PTR [rax+0x29],bh
    2c16:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2c19:	61                   	(bad)  
    2c1a:	74 74                	je     2c90 <__FRAME_END__+0x249c>
    2c1c:	72 69                	jb     2c87 <__FRAME_END__+0x2493>
    2c1e:	62                   	(bad)  
    2c1f:	75 74                	jne    2c95 <__FRAME_END__+0x24a1>
    2c21:	65 5f                	gs pop rdi
    2c23:	5f                   	pop    rdi
    2c24:	20 28                	and    BYTE PTR [rax],ch
    2c26:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2c29:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2c2b:	72 6d                	jb     2c9a <__FRAME_END__+0x24a6>
    2c2d:	61                   	(bad)  
    2c2e:	74 5f                	je     2c8f <__FRAME_END__+0x249b>
    2c30:	61                   	(bad)  
    2c31:	72 67                	jb     2c9a <__FRAME_END__+0x24a6>
    2c33:	5f                   	pop    rdi
    2c34:	5f                   	pop    rdi
    2c35:	20 28                	and    BYTE PTR [rax],ch
    2c37:	78 29                	js     2c62 <__FRAME_END__+0x246e>
    2c39:	29 29                	sub    DWORD PTR [rcx],ebp
    2c3b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c3e:	5f                   	pop    rdi
    2c3f:	5f                   	pop    rdi
    2c40:	46                   	rex.RX
    2c41:	49                   	rex.WB
    2c42:	4c                   	rex.WR
    2c43:	45 5f                	rex.RB pop r15
    2c45:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    2c4c:	20 
    2c4d:	31 00                	xor    DWORD PTR [rax],eax
    2c4f:	5f                   	pop    rdi
    2c50:	42                   	rex.X
    2c51:	49 54                	rex.WB push r12
    2c53:	53                   	push   rbx
    2c54:	5f                   	pop    rdi
    2c55:	53                   	push   rbx
    2c56:	54                   	push   rsp
    2c57:	44                   	rex.R
    2c58:	49                   	rex.WB
    2c59:	4f 5f                	rex.WRXB pop r15
    2c5b:	4c                   	rex.WR
    2c5c:	49                   	rex.WB
    2c5d:	4d 5f                	rex.WRB pop r15
    2c5f:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    2c62:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c65:	4c                   	rex.WR
    2c66:	44                   	rex.R
    2c67:	42                   	rex.X
    2c68:	4c 5f                	rex.WR pop rdi
    2c6a:	48                   	rex.W
    2c6b:	41 53                	push   r11
    2c6d:	5f                   	pop    rdi
    2c6e:	49                   	rex.WB
    2c6f:	4e                   	rex.WRX
    2c70:	46                   	rex.RX
    2c71:	49                   	rex.WB
    2c72:	4e                   	rex.WRX
    2c73:	49 54                	rex.WB push r12
    2c75:	59                   	pop    rcx
    2c76:	5f                   	pop    rdi
    2c77:	5f                   	pop    rdi
    2c78:	20 31                	and    BYTE PTR [rcx],dh
    2c7a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c7d:	55                   	push   rbp
    2c7e:	53                   	push   rbx
    2c7f:	45 5f                	rex.RB pop r15
    2c81:	50                   	push   rax
    2c82:	4f 53                	rex.WRXB push r11
    2c84:	49 58                	rex.WB pop r8
    2c86:	20 31                	and    BYTE PTR [rcx],dh
    2c88:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c8b:	49                   	rex.WB
    2c8c:	4e                   	rex.WRX
    2c8d:	4f 5f                	rex.WRXB pop r15
    2c8f:	54                   	push   rsp
    2c90:	5f                   	pop    rdi
    2c91:	4d                   	rex.WRB
    2c92:	41 54                	push   r12
    2c94:	43                   	rex.XB
    2c95:	48                   	rex.W
    2c96:	45 53                	rex.RB push r11
    2c98:	5f                   	pop    rdi
    2c99:	49                   	rex.WB
    2c9a:	4e                   	rex.WRX
    2c9b:	4f                   	rex.WRXB
    2c9c:	36 34 5f             	ss xor al,0x5f
    2c9f:	54                   	push   rsp
    2ca0:	20 31                	and    BYTE PTR [rcx],dh
    2ca2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ca5:	47                   	rex.RXB
    2ca6:	43                   	rex.XB
    2ca7:	43 5f                	rex.XB pop r15
    2ca9:	49                   	rex.WB
    2caa:	45                   	rex.RB
    2cab:	43 5f                	rex.XB pop r15
    2cad:	35 35 39 5f 43       	xor    eax,0x435f3935
    2cb2:	4f                   	rex.WRXB
    2cb3:	4d 50                	rex.WRB push r8
    2cb5:	4c                   	rex.WR
    2cb6:	45 58                	rex.RB pop r8
    2cb8:	20 32                	and    BYTE PTR [rdx],dh
    2cba:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2cbd:	53                   	push   rbx
    2cbe:	49                   	rex.WB
    2cbf:	47 5f                	rex.RXB pop r15
    2cc1:	41 54                	push   r12
    2cc3:	4f                   	rex.WRXB
    2cc4:	4d                   	rex.WRB
    2cc5:	49                   	rex.WB
    2cc6:	43 5f                	rex.XB pop r15
    2cc8:	4d                   	rex.WRB
    2cc9:	49                   	rex.WB
    2cca:	4e 5f                	rex.WRX pop rdi
    2ccc:	5f                   	pop    rdi
    2ccd:	20 28                	and    BYTE PTR [rax],ch
    2ccf:	2d 5f 5f 53 49       	sub    eax,0x49535f5f
    2cd4:	47 5f                	rex.RXB pop r15
    2cd6:	41 54                	push   r12
    2cd8:	4f                   	rex.WRXB
    2cd9:	4d                   	rex.WRB
    2cda:	49                   	rex.WB
    2cdb:	43 5f                	rex.XB pop r15
    2cdd:	4d                   	rex.WRB
    2cde:	41 58                	pop    r8
    2ce0:	5f                   	pop    rdi
    2ce1:	5f                   	pop    rdi
    2ce2:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 295e08 <_end+0x94df0>
    2ce8:	5f                   	pop    rdi
    2ce9:	49                   	rex.WB
    2cea:	4f 53                	rex.WRXB push r11
    2cec:	5f                   	pop    rdi
    2ced:	42                   	rex.X
    2cee:	49                   	rex.WB
    2cef:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    2cf2:	32 38                	xor    bh,BYTE PTR [rax]
    2cf4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2cf7:	4f 5f                	rex.WRXB pop r15
    2cf9:	49                   	rex.WB
    2cfa:	4e 5f                	rex.WRX pop rdi
    2cfc:	42                   	rex.X
    2cfd:	41                   	rex.B
    2cfe:	43                   	rex.XB
    2cff:	4b 55                	rex.WXB push r13
    2d01:	50                   	push   rax
    2d02:	20 30                	and    BYTE PTR [rax],dh
    2d04:	78 31                	js     2d37 <__FRAME_END__+0x2543>
    2d06:	30 30                	xor    BYTE PTR [rax],dh
    2d08:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2d0b:	4f 5f                	rex.WRXB pop r15
    2d0d:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2d0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d10:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    2d13:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2d1a:	29 
    2d1b:	20 00                	and    BYTE PTR [rax],al
    2d1d:	5f                   	pop    rdi
    2d1e:	5f                   	pop    rdi
    2d1f:	53                   	push   rbx
    2d20:	49 5a                	rex.WB pop r10
    2d22:	45                   	rex.RB
    2d23:	4f                   	rex.WRXB
    2d24:	46 5f                	rex.RX pop rdi
    2d26:	57                   	push   rdi
    2d27:	43                   	rex.XB
    2d28:	48                   	rex.W
    2d29:	41 52                	push   r10
    2d2b:	5f                   	pop    rdi
    2d2c:	54                   	push   rsp
    2d2d:	5f                   	pop    rdi
    2d2e:	5f                   	pop    rdi
    2d2f:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2d32:	5f                   	pop    rdi
    2d33:	5f                   	pop    rdi
    2d34:	61                   	(bad)  
    2d35:	74 74                	je     2dab <__FRAME_END__+0x25b7>
    2d37:	72 69                	jb     2da2 <__FRAME_END__+0x25ae>
    2d39:	62                   	(bad)  
    2d3a:	75 74                	jne    2db0 <__FRAME_END__+0x25bc>
    2d3c:	65 5f                	gs pop rdi
    2d3e:	64 65 70 72          	fs gs jo 2db4 <__FRAME_END__+0x25c0>
    2d42:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d46:	65 64 5f             	gs fs pop rdi
    2d49:	5f                   	pop    rdi
    2d4a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2d4d:	61                   	(bad)  
    2d4e:	74 74                	je     2dc4 <__FRAME_END__+0x25d0>
    2d50:	72 69                	jb     2dbb <__FRAME_END__+0x25c7>
    2d52:	62                   	(bad)  
    2d53:	75 74                	jne    2dc9 <__FRAME_END__+0x25d5>
    2d55:	65 5f                	gs pop rdi
    2d57:	5f                   	pop    rdi
    2d58:	20 28                	and    BYTE PTR [rax],ch
    2d5a:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2d5d:	64 65 70 72          	fs gs jo 2dd3 <__FRAME_END__+0x25df>
    2d61:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d65:	65 64 5f             	gs fs pop rdi
    2d68:	5f                   	pop    rdi
    2d69:	29 29                	sub    DWORD PTR [rcx],ebp
    2d6b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d6e:	46                   	rex.RX
    2d6f:	4c 54                	rex.WR push rsp
    2d71:	31 32                	xor    DWORD PTR [rdx],esi
    2d73:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2d76:	49                   	rex.WB
    2d77:	4e 5f                	rex.WRX pop rdi
    2d79:	31 30                	xor    DWORD PTR [rax],esi
    2d7b:	5f                   	pop    rdi
    2d7c:	45 58                	rex.RB pop r8
    2d7e:	50                   	push   rax
    2d7f:	5f                   	pop    rdi
    2d80:	5f                   	pop    rdi
    2d81:	20 28                	and    BYTE PTR [rax],ch
    2d83:	2d 34 39 33 31       	sub    eax,0x31333934
    2d88:	29 00                	sub    DWORD PTR [rax],eax
    2d8a:	5f                   	pop    rdi
    2d8b:	5f                   	pop    rdi
    2d8c:	46                   	rex.RX
    2d8d:	4c                   	rex.WR
    2d8e:	4f                   	rex.WRXB
    2d8f:	41 54                	push   r12
    2d91:	5f                   	pop    rdi
    2d92:	57                   	push   rdi
    2d93:	4f 52                	rex.WRXB push r10
    2d95:	44 5f                	rex.R pop rdi
    2d97:	4f 52                	rex.WRXB push r10
    2d99:	44                   	rex.R
    2d9a:	45 52                	rex.RB push r10
    2d9c:	5f                   	pop    rdi
    2d9d:	5f                   	pop    rdi
    2d9e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2da1:	4f 52                	rex.WRXB push r10
    2da3:	44                   	rex.R
    2da4:	45 52                	rex.RB push r10
    2da6:	5f                   	pop    rdi
    2da7:	4c                   	rex.WR
    2da8:	49 54                	rex.WB push r12
    2daa:	54                   	push   rsp
    2dab:	4c                   	rex.WR
    2dac:	45 5f                	rex.RB pop r15
    2dae:	45                   	rex.RB
    2daf:	4e                   	rex.WRX
    2db0:	44                   	rex.R
    2db1:	49                   	rex.WB
    2db2:	41                   	rex.B
    2db3:	4e 5f                	rex.WRX pop rdi
    2db5:	5f                   	pop    rdi
    2db6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2db9:	47                   	rex.RXB
    2dba:	43                   	rex.XB
    2dbb:	43 5f                	rex.XB pop r15
    2dbd:	48                   	rex.W
    2dbe:	41 56                	push   r14
    2dc0:	45 5f                	rex.RB pop r15
    2dc2:	53                   	push   rbx
    2dc3:	59                   	pop    rcx
    2dc4:	4e                   	rex.WRX
    2dc5:	43 5f                	rex.XB pop r15
    2dc7:	43                   	rex.XB
    2dc8:	4f                   	rex.WRXB
    2dc9:	4d 50                	rex.WRB push r8
    2dcb:	41 52                	push   r10
    2dcd:	45 5f                	rex.RB pop r15
    2dcf:	41                   	rex.B
    2dd0:	4e                   	rex.WRX
    2dd1:	44 5f                	rex.R pop rdi
    2dd3:	53                   	push   rbx
    2dd4:	57                   	push   rdi
    2dd5:	41 50                	push   r8
    2dd7:	5f                   	pop    rdi
    2dd8:	32 20                	xor    ah,BYTE PTR [rax]
    2dda:	31 00                	xor    DWORD PTR [rax],eax
    2ddc:	5f                   	pop    rdi
    2ddd:	47 5f                	rex.RXB pop r15
    2ddf:	48                   	rex.W
    2de0:	41 56                	push   r14
    2de2:	45 5f                	rex.RB pop r15
    2de4:	4d 52                	rex.WRB push r10
    2de6:	45                   	rex.RB
    2de7:	4d                   	rex.WRB
    2de8:	41 50                	push   r8
    2dea:	20 31                	and    BYTE PTR [rcx],dh
    2dec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2def:	44                   	rex.R
    2df0:	45                   	rex.RB
    2df1:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2df4:	5f                   	pop    rdi
    2df5:	4d                   	rex.WRB
    2df6:	41                   	rex.B
    2df7:	4e 54                	rex.WRX push rsp
    2df9:	5f                   	pop    rdi
    2dfa:	44                   	rex.R
    2dfb:	49                   	rex.WB
    2dfc:	47 5f                	rex.RXB pop r15
    2dfe:	5f                   	pop    rdi
    2dff:	20 37                	and    BYTE PTR [rdi],dh
    2e01:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e04:	46                   	rex.RX
    2e05:	4c 54                	rex.WR push rsp
    2e07:	33 32                	xor    esi,DWORD PTR [rdx]
    2e09:	5f                   	pop    rdi
    2e0a:	44                   	rex.R
    2e0b:	45                   	rex.RB
    2e0c:	4e                   	rex.WRX
    2e0d:	4f 52                	rex.WRXB push r10
    2e0f:	4d 5f                	rex.WRB pop r15
    2e11:	4d                   	rex.WRB
    2e12:	49                   	rex.WB
    2e13:	4e 5f                	rex.WRX pop rdi
    2e15:	5f                   	pop    rdi
    2e16:	20 31                	and    BYTE PTR [rcx],dh
    2e18:	2e 34 30             	cs xor al,0x30
    2e1b:	31 32                	xor    DWORD PTR [rdx],esi
    2e1d:	39 38                	cmp    DWORD PTR [rax],edi
    2e1f:	34 36                	xor    al,0x36
    2e21:	34 33                	xor    al,0x33
    2e23:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2e26:	31 37                	xor    DWORD PTR [rdi],esi
    2e28:	30 37                	xor    BYTE PTR [rdi],dh
    2e2a:	30 39                	xor    BYTE PTR [rcx],bh
    2e2c:	32 33                	xor    dh,BYTE PTR [rbx]
    2e2e:	37                   	(bad)  
    2e2f:	32 39                	xor    bh,BYTE PTR [rcx]
    2e31:	35 38 33 32 38       	xor    eax,0x38323338
    2e36:	39 39                	cmp    DWORD PTR [rcx],edi
    2e38:	31 36                	xor    DWORD PTR [rsi],esi
    2e3a:	31 33                	xor    DWORD PTR [rbx],esi
    2e3c:	65 2d 34 35 46 33    	gs sub eax,0x33463534
    2e42:	32 00                	xor    al,BYTE PTR [rax]
    2e44:	5f                   	pop    rdi
    2e45:	5f                   	pop    rdi
    2e46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e47:	65 65 64 5f          	gs gs fs pop rdi
    2e4b:	73 69                	jae    2eb6 <__FRAME_END__+0x26c2>
    2e4d:	7a 65                	jp     2eb4 <__FRAME_END__+0x26c0>
    2e4f:	5f                   	pop    rdi
    2e50:	74 00                	je     2e52 <__FRAME_END__+0x265e>
    2e52:	5f                   	pop    rdi
    2e53:	5f                   	pop    rdi
    2e54:	55                   	push   rbp
    2e55:	49                   	rex.WB
    2e56:	4e 54                	rex.WRX push rsp
    2e58:	5f                   	pop    rdi
    2e59:	46                   	rex.RX
    2e5a:	41 53                	push   r11
    2e5c:	54                   	push   rsp
    2e5d:	31 36                	xor    DWORD PTR [rsi],esi
    2e5f:	5f                   	pop    rdi
    2e60:	4d                   	rex.WRB
    2e61:	41 58                	pop    r8
    2e63:	5f                   	pop    rdi
    2e64:	5f                   	pop    rdi
    2e65:	20 30                	and    BYTE PTR [rax],dh
    2e67:	78 66                	js     2ecf <__FRAME_END__+0x26db>
    2e69:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2e70:	66 66 66 66 66 66 66 
    2e77:	66 55                	push   bp
    2e79:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2e7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e7e:	65 65 64 5f          	gs gs fs pop rdi
    2e82:	5f                   	pop    rdi
    2e83:	5f                   	pop    rdi
    2e84:	76 61                	jbe    2ee7 <__FRAME_END__+0x26f3>
    2e86:	5f                   	pop    rdi
    2e87:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e88:	69 73 74 00 5f 5f 49 	imul   esi,DWORD PTR [rbx+0x74],0x495f5f00
    2e8f:	4e 54                	rex.WRX push rsp
    2e91:	33 32                	xor    esi,DWORD PTR [rdx]
    2e93:	5f                   	pop    rdi
    2e94:	4d                   	rex.WRB
    2e95:	41 58                	pop    r8
    2e97:	5f                   	pop    rdi
    2e98:	5f                   	pop    rdi
    2e99:	20 30                	and    BYTE PTR [rax],dh
    2e9b:	78 37                	js     2ed4 <__FRAME_END__+0x26e0>
    2e9d:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2ea4:	00 5f 49 
    2ea7:	4f 5f                	rex.WRXB pop r15
    2ea9:	49                   	rex.WB
    2eaa:	4e 54                	rex.WRX push rsp
    2eac:	45 52                	rex.RB push r10
    2eae:	4e                   	rex.WRX
    2eaf:	41                   	rex.B
    2eb0:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
    2eb3:	31 30                	xor    DWORD PTR [rax],esi
    2eb5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eb8:	5f                   	pop    rdi
    2eb9:	69 6e 74 5f 73 69 7a 	imul   ebp,DWORD PTR [rsi+0x74],0x7a69735f
    2ec0:	65 5f                	gs pop rdi
    2ec2:	74 5f                	je     2f23 <__FRAME_END__+0x272f>
    2ec4:	68 20 00 5f 5f       	push   0x5f5f0020
    2ec9:	67 6c                	ins    BYTE PTR es:[edi],dx
    2ecb:	69 62 63 5f 6c 69 6b 	imul   esp,DWORD PTR [rdx+0x63],0x6b696c5f
    2ed2:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2ed4:	79 28                	jns    2efe <__FRAME_END__+0x270a>
    2ed6:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2ed9:	64 29 20             	sub    DWORD PTR fs:[rax],esp
    2edc:	5f                   	pop    rdi
    2edd:	5f                   	pop    rdi
    2ede:	62                   	(bad)  
    2edf:	75 69                	jne    2f4a <__FRAME_END__+0x2756>
    2ee1:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ee2:	74 69                	je     2f4d <__FRAME_END__+0x2759>
    2ee4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ee5:	5f                   	pop    rdi
    2ee6:	65 78 70             	gs js  2f59 <__FRAME_END__+0x2765>
    2ee9:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    2eee:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    2ef1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ef2:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
    2ef6:	31 29                	xor    DWORD PTR [rcx],ebp
    2ef8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2efb:	41 54                	push   r12
    2efd:	4f                   	rex.WRXB
    2efe:	4d                   	rex.WRB
    2eff:	49                   	rex.WB
    2f00:	43 5f                	rex.XB pop r15
    2f02:	41                   	rex.B
    2f03:	43 51                	rex.XB push r9
    2f05:	55                   	push   rbp
    2f06:	49 52                	rex.WB push r10
    2f08:	45 20 32             	and    BYTE PTR [r10],r14b
    2f0b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f0e:	55                   	push   rbp
    2f0f:	49                   	rex.WB
    2f10:	4e 54                	rex.WRX push rsp
    2f12:	31 36                	xor    DWORD PTR [rsi],esi
    2f14:	5f                   	pop    rdi
    2f15:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2f19:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2f1c:	5f                   	pop    rdi
    2f1d:	49                   	rex.WB
    2f1e:	4f 5f                	rex.WRXB pop r15
    2f20:	46                   	rex.RX
    2f21:	4c                   	rex.WR
    2f22:	41                   	rex.B
    2f23:	47 53                	rex.RXB push r11
    2f25:	32 5f 55             	xor    bl,BYTE PTR [rdi+0x55]
    2f28:	53                   	push   rbx
    2f29:	45 52                	rex.RB push r10
    2f2b:	5f                   	pop    rdi
    2f2c:	57                   	push   rdi
    2f2d:	42 55                	rex.X push rbp
    2f2f:	46 20 38             	rex.RX and BYTE PTR [rax],r15b
    2f32:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f35:	49                   	rex.WB
    2f36:	4e 54                	rex.WRX push rsp
    2f38:	36 34 5f             	ss xor al,0x5f
    2f3b:	4d                   	rex.WRB
    2f3c:	41 58                	pop    r8
    2f3e:	5f                   	pop    rdi
    2f3f:	5f                   	pop    rdi
    2f40:	20 30                	and    BYTE PTR [rax],dh
    2f42:	78 37                	js     2f7b <__FRAME_END__+0x2787>
    2f44:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2f4b:	66 66 66 66 66 66 66 
    2f52:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2f57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f58:	65 65 64 5f          	gs gs fs pop rdi
    2f5c:	73 69                	jae    2fc7 <__FRAME_END__+0x27d3>
    2f5e:	7a 65                	jp     2fc5 <__FRAME_END__+0x27d1>
    2f60:	5f                   	pop    rdi
    2f61:	74 20                	je     2f83 <__FRAME_END__+0x278f>
    2f63:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f66:	62                   	(bad)  
    2f67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f68:	73 28                	jae    2f92 <__FRAME_END__+0x279e>
    2f6a:	70 74                	jo     2fe0 <__FRAME_END__+0x27ec>
    2f6c:	72 29                	jb     2f97 <__FRAME_END__+0x27a3>
    2f6e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f71:	62                   	(bad)  
    2f72:	75 69                	jne    2fdd <__FRAME_END__+0x27e9>
    2f74:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f75:	74 69                	je     2fe0 <__FRAME_END__+0x27ec>
    2f77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f78:	5f                   	pop    rdi
    2f79:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f7a:	62                   	(bad)  
    2f7b:	6a 65                	push   0x65
    2f7d:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2f81:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2f88:	72 2c                	jb     2fb6 <__FRAME_END__+0x27c2>
    2f8a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f8d:	55                   	push   rbp
    2f8e:	53                   	push   rbx
    2f8f:	45 5f                	rex.RB pop r15
    2f91:	46                   	rex.RX
    2f92:	4f 52                	rex.WRXB push r10
    2f94:	54                   	push   rsp
    2f95:	49                   	rex.WB
    2f96:	46 59                	rex.RX pop rcx
    2f98:	5f                   	pop    rdi
    2f99:	4c                   	rex.WR
    2f9a:	45 56                	rex.RB push r14
    2f9c:	45                   	rex.RB
    2f9d:	4c 20 3e             	rex.WR and BYTE PTR [rsi],r15b
    2fa0:	20 31                	and    BYTE PTR [rcx],dh
    2fa2:	29 00                	sub    DWORD PTR [rax],eax
    2fa4:	5f                   	pop    rdi
    2fa5:	5f                   	pop    rdi
    2fa6:	55                   	push   rbp
    2fa7:	57                   	push   rdi
    2fa8:	4f 52                	rex.WRXB push r10
    2faa:	44 5f                	rex.R pop rdi
    2fac:	54                   	push   rsp
    2fad:	59                   	pop    rcx
    2fae:	50                   	push   rax
    2faf:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    2fb3:	73 69                	jae    301e <__FRAME_END__+0x282a>
    2fb5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2fb7:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2fbd:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2fc1:	74 00                	je     2fc3 <__FRAME_END__+0x27cf>
    2fc3:	5f                   	pop    rdi
    2fc4:	5f                   	pop    rdi
    2fc5:	47                   	rex.RXB
    2fc6:	4c                   	rex.WR
    2fc7:	49                   	rex.WB
    2fc8:	42                   	rex.X
    2fc9:	43 5f                	rex.XB pop r15
    2fcb:	4d                   	rex.WRB
    2fcc:	49                   	rex.WB
    2fcd:	4e                   	rex.WRX
    2fce:	4f 52                	rex.WRXB push r10
    2fd0:	5f                   	pop    rdi
    2fd1:	5f                   	pop    rdi
    2fd2:	20 32                	and    BYTE PTR [rdx],dh
    2fd4:	37                   	(bad)  
    2fd5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fd8:	53                   	push   rbx
    2fd9:	45                   	rex.RB
    2fda:	47 5f                	rex.RXB pop r15
    2fdc:	47 53                	rex.RXB push r11
    2fde:	20 31                	and    BYTE PTR [rcx],dh
    2fe0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fe3:	53                   	push   rbx
    2fe4:	53                   	push   rbx
    2fe5:	45 5f                	rex.RB pop r15
    2fe7:	4d                   	rex.WRB
    2fe8:	41 54                	push   r12
    2fea:	48 5f                	rex.W pop rdi
    2fec:	5f                   	pop    rdi
    2fed:	20 31                	and    BYTE PTR [rcx],dh
    2fef:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ff2:	4e                   	rex.WRX
    2ff3:	4c                   	rex.WR
    2ff4:	49                   	rex.WB
    2ff5:	4e                   	rex.WRX
    2ff6:	4b 5f                	rex.WXB pop r15
    2ff8:	54                   	push   rsp
    2ff9:	5f                   	pop    rdi
    2ffa:	54                   	push   rsp
    2ffb:	59                   	pop    rcx
    2ffc:	50                   	push   rax
    2ffd:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3001:	53                   	push   rbx
    3002:	59                   	pop    rcx
    3003:	53                   	push   rbx
    3004:	43                   	rex.XB
    3005:	41                   	rex.B
    3006:	4c                   	rex.WR
    3007:	4c 5f                	rex.WR pop rdi
    3009:	55                   	push   rbp
    300a:	4c                   	rex.WR
    300b:	4f                   	rex.WRXB
    300c:	4e                   	rex.WRX
    300d:	47 5f                	rex.RXB pop r15
    300f:	54                   	push   rsp
    3010:	59                   	pop    rcx
    3011:	50                   	push   rax
    3012:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3016:	55                   	push   rbp
    3017:	49                   	rex.WB
    3018:	4e 54                	rex.WRX push rsp
    301a:	4d                   	rex.WRB
    301b:	41 58                	pop    r8
    301d:	5f                   	pop    rdi
    301e:	54                   	push   rsp
    301f:	59                   	pop    rcx
    3020:	50                   	push   rax
    3021:	45 5f                	rex.RB pop r15
    3023:	5f                   	pop    rdi
    3024:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3028:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    302c:	73 69                	jae    3097 <__FRAME_END__+0x28a3>
    302e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3030:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3035:	74 00                	je     3037 <__FRAME_END__+0x2843>
    3037:	5f                   	pop    rdi
    3038:	5f                   	pop    rdi
    3039:	55                   	push   rbp
    303a:	53                   	push   rbx
    303b:	45 5f                	rex.RB pop r15
    303d:	58                   	pop    rax
    303e:	4f 50                	rex.WRXB push r8
    3040:	45                   	rex.RB
    3041:	4e 32 4b 00          	rex.WRX xor r9b,BYTE PTR [rbx+0x0]
    3045:	5f                   	pop    rdi
    3046:	5f                   	pop    rdi
    3047:	4c                   	rex.WR
    3048:	45                   	rex.RB
    3049:	41                   	rex.B
    304a:	46 20 2c 20          	and    BYTE PTR [rax+r12*1],r13b
    304e:	5f                   	pop    rdi
    304f:	5f                   	pop    rdi
    3050:	6c                   	ins    BYTE PTR es:[rdi],dx
    3051:	65 61                	gs (bad) 
    3053:	66 5f                	pop    di
    3055:	5f                   	pop    rdi
    3056:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3059:	44                   	rex.R
    305a:	45                   	rex.RB
    305b:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    305e:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    3061:	41 58                	pop    r8
    3063:	5f                   	pop    rdi
    3064:	45 58                	rex.RB pop r8
    3066:	50                   	push   rax
    3067:	5f                   	pop    rdi
    3068:	5f                   	pop    rdi
    3069:	20 36                	and    BYTE PTR [rsi],dh
    306b:	31 34 35 00 5f 49 4f 	xor    DWORD PTR [rsi*1+0x4f495f00],esi
    3072:	5f                   	pop    rdi
    3073:	4c                   	rex.WR
    3074:	45                   	rex.RB
    3075:	46 54                	rex.RX push rsp
    3077:	20 30                	and    BYTE PTR [rax],dh
    3079:	32 00                	xor    al,BYTE PTR [rax]
    307b:	5f                   	pop    rdi
    307c:	5f                   	pop    rdi
    307d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    307f:	72 74                	jb     30f5 <__FRAME_END__+0x2901>
    3081:	69 66 79 5f 66 75 6e 	imul   esp,DWORD PTR [rsi+0x79],0x6e75665f
    3088:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    308c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    308d:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3090:	65 78 74             	gs js  3107 <__FRAME_END__+0x2913>
    3093:	65 72 6e             	gs jb  3104 <__FRAME_END__+0x2910>
    3096:	5f                   	pop    rdi
    3097:	61                   	(bad)  
    3098:	6c                   	ins    BYTE PTR es:[rdi],dx
    3099:	77 61                	ja     30fc <__FRAME_END__+0x2908>
    309b:	79 73                	jns    3110 <__FRAME_END__+0x291c>
    309d:	5f                   	pop    rdi
    309e:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    30a5:	5f                   	pop    rdi
    30a6:	5f                   	pop    rdi
    30a7:	61                   	(bad)  
    30a8:	74 74                	je     311e <__FRAME_END__+0x292a>
    30aa:	72 69                	jb     3115 <__FRAME_END__+0x2921>
    30ac:	62                   	(bad)  
    30ad:	75 74                	jne    3123 <__FRAME_END__+0x292f>
    30af:	65 5f                	gs pop rdi
    30b1:	61                   	(bad)  
    30b2:	72 74                	jb     3128 <__FRAME_END__+0x2934>
    30b4:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    30bb:	5f                   	pop    rdi
    30bc:	5f                   	pop    rdi
    30bd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    30c0:	4f 5f                	rex.WRXB pop r15
    30c2:	42                   	rex.X
    30c3:	4f                   	rex.WRXB
    30c4:	4f                   	rex.WRXB
    30c5:	4c                   	rex.WR
    30c6:	41                   	rex.B
    30c7:	4c 50                	rex.WR push rax
    30c9:	48                   	rex.W
    30ca:	41 20 30             	and    BYTE PTR [r8],sil
    30cd:	32 30                	xor    dh,BYTE PTR [rax]
    30cf:	30 30                	xor    BYTE PTR [rax],dh
    30d1:	30 30                	xor    BYTE PTR [rax],dh
    30d3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    30d6:	53                   	push   rbx
    30d7:	49                   	rex.WB
    30d8:	47 5f                	rex.RXB pop r15
    30da:	41 54                	push   r12
    30dc:	4f                   	rex.WRXB
    30dd:	4d                   	rex.WRB
    30de:	49                   	rex.WB
    30df:	43 5f                	rex.XB pop r15
    30e1:	57                   	push   rdi
    30e2:	49                   	rex.WB
    30e3:	44 54                	rex.R push rsp
    30e5:	48 5f                	rex.W pop rdi
    30e7:	5f                   	pop    rdi
    30e8:	20 33                	and    BYTE PTR [rbx],dh
    30ea:	32 00                	xor    al,BYTE PTR [rax]
    30ec:	5f                   	pop    rdi
    30ed:	5f                   	pop    rdi
    30ee:	43                   	rex.XB
    30ef:	4f                   	rex.WRXB
    30f0:	4e                   	rex.WRX
    30f1:	43                   	rex.XB
    30f2:	41 54                	push   r12
    30f4:	28 78 2c             	sub    BYTE PTR [rax+0x2c],bh
    30f7:	79 29                	jns    3122 <__FRAME_END__+0x292e>
    30f9:	20 78 20             	and    BYTE PTR [rax+0x20],bh
    30fc:	23 23                	and    esp,DWORD PTR [rbx]
    30fe:	20 79 00             	and    BYTE PTR [rcx+0x0],bh
    3101:	5f                   	pop    rdi
    3102:	5f                   	pop    rdi
    3103:	61                   	(bad)  
    3104:	74 74                	je     317a <__FRAME_END__+0x2986>
    3106:	72 69                	jb     3171 <__FRAME_END__+0x297d>
    3108:	62                   	(bad)  
    3109:	75 74                	jne    317f <__FRAME_END__+0x298b>
    310b:	65 5f                	gs pop rdi
    310d:	64 65 70 72          	fs gs jo 3183 <__FRAME_END__+0x298f>
    3111:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    3115:	65 64 5f             	gs fs pop rdi
    3118:	6d                   	ins    DWORD PTR es:[rdi],dx
    3119:	73 67                	jae    3182 <__FRAME_END__+0x298e>
    311b:	5f                   	pop    rdi
    311c:	5f                   	pop    rdi
    311d:	28 6d 73             	sub    BYTE PTR [rbp+0x73],ch
    3120:	67 29 20             	sub    DWORD PTR [eax],esp
    3123:	5f                   	pop    rdi
    3124:	5f                   	pop    rdi
    3125:	61                   	(bad)  
    3126:	74 74                	je     319c <__FRAME_END__+0x29a8>
    3128:	72 69                	jb     3193 <__FRAME_END__+0x299f>
    312a:	62                   	(bad)  
    312b:	75 74                	jne    31a1 <__FRAME_END__+0x29ad>
    312d:	65 5f                	gs pop rdi
    312f:	5f                   	pop    rdi
    3130:	20 28                	and    BYTE PTR [rax],ch
    3132:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3135:	64 65 70 72          	fs gs jo 31ab <__FRAME_END__+0x29b7>
    3139:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    313d:	65 64 5f             	gs fs pop rdi
    3140:	5f                   	pop    rdi
    3141:	20 28                	and    BYTE PTR [rax],ch
    3143:	6d                   	ins    DWORD PTR es:[rdi],dx
    3144:	73 67                	jae    31ad <__FRAME_END__+0x29b9>
    3146:	29 29                	sub    DWORD PTR [rcx],ebp
    3148:	29 00                	sub    DWORD PTR [rax],eax
    314a:	5f                   	pop    rdi
    314b:	5f                   	pop    rdi
    314c:	53                   	push   rbx
    314d:	48 52                	rex.W push rdx
    314f:	54                   	push   rsp
    3150:	5f                   	pop    rdi
    3151:	4d                   	rex.WRB
    3152:	41 58                	pop    r8
    3154:	5f                   	pop    rdi
    3155:	5f                   	pop    rdi
    3156:	20 30                	and    BYTE PTR [rax],dh
    3158:	78 37                	js     3191 <__FRAME_END__+0x299d>
    315a:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    3160:	47                   	rex.RXB
    3161:	43                   	rex.XB
    3162:	43 5f                	rex.XB pop r15
    3164:	41 54                	push   r12
    3166:	4f                   	rex.WRXB
    3167:	4d                   	rex.WRB
    3168:	49                   	rex.WB
    3169:	43 5f                	rex.XB pop r15
    316b:	57                   	push   rdi
    316c:	43                   	rex.XB
    316d:	48                   	rex.W
    316e:	41 52                	push   r10
    3170:	5f                   	pop    rdi
    3171:	54                   	push   rsp
    3172:	5f                   	pop    rdi
    3173:	4c                   	rex.WR
    3174:	4f                   	rex.WRXB
    3175:	43                   	rex.XB
    3176:	4b 5f                	rex.WXB pop r15
    3178:	46 52                	rex.RX push rdx
    317a:	45                   	rex.RB
    317b:	45 20 32             	and    BYTE PTR [r10],r14b
    317e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3181:	4f 5f                	rex.WRXB pop r15
    3183:	50                   	push   rax
    3184:	45                   	rex.RB
    3185:	4e                   	rex.WRX
    3186:	44                   	rex.R
    3187:	49                   	rex.WB
    3188:	4e                   	rex.WRX
    3189:	47 5f                	rex.RXB pop r15
    318b:	4f 55                	rex.WRXB push r13
    318d:	54                   	push   rsp
    318e:	50                   	push   rax
    318f:	55                   	push   rbp
    3190:	54                   	push   rsp
    3191:	5f                   	pop    rdi
    3192:	43                   	rex.XB
    3193:	4f 55                	rex.WRXB push r13
    3195:	4e 54                	rex.WRX push rsp
    3197:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    319a:	70 29                	jo     31c5 <__FRAME_END__+0x29d1>
    319c:	20 28                	and    BYTE PTR [rax],ch
    319e:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    31a1:	70 29                	jo     31cc <__FRAME_END__+0x29d8>
    31a3:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    31a8:	5f                   	pop    rdi
    31a9:	77 72                	ja     321d <__FRAME_END__+0x2a29>
    31ab:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    31b2:	20 
    31b3:	2d 20 28 5f 66       	sub    eax,0x665f2820
    31b8:	70 29                	jo     31e3 <__FRAME_END__+0x29ef>
    31ba:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    31bf:	5f                   	pop    rdi
    31c0:	77 72                	ja     3234 <__FRAME_END__+0x2a40>
    31c2:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    31c9:	65 
    31ca:	29 00                	sub    DWORD PTR [rax],eax
    31cc:	5f                   	pop    rdi
    31cd:	49                   	rex.WB
    31ce:	4f 5f                	rex.WRXB pop r15
    31d0:	55                   	push   rbp
    31d1:	53                   	push   rbx
    31d2:	45 52                	rex.RB push r10
    31d4:	5f                   	pop    rdi
    31d5:	4c                   	rex.WR
    31d6:	4f                   	rex.WRXB
    31d7:	43                   	rex.XB
    31d8:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    31db:	78 38                	js     3215 <__FRAME_END__+0x2a21>
    31dd:	30 30                	xor    BYTE PTR [rax],dh
    31df:	30 00                	xor    BYTE PTR [rax],al
    31e1:	5f                   	pop    rdi
    31e2:	5f                   	pop    rdi
    31e3:	4f 52                	rex.WRXB push r10
    31e5:	44                   	rex.R
    31e6:	45 52                	rex.RB push r10
    31e8:	5f                   	pop    rdi
    31e9:	50                   	push   rax
    31ea:	44 50                	rex.R push rax
    31ec:	5f                   	pop    rdi
    31ed:	45                   	rex.RB
    31ee:	4e                   	rex.WRX
    31ef:	44                   	rex.R
    31f0:	49                   	rex.WB
    31f1:	41                   	rex.B
    31f2:	4e 5f                	rex.WRX pop rdi
    31f4:	5f                   	pop    rdi
    31f5:	20 33                	and    BYTE PTR [rbx],dh
    31f7:	34 31                	xor    al,0x31
    31f9:	32 00                	xor    al,BYTE PTR [rax]
    31fb:	5f                   	pop    rdi
    31fc:	49                   	rex.WB
    31fd:	4f 5f                	rex.WRXB pop r15
    31ff:	55                   	push   rbp
    3200:	4e                   	rex.WRX
    3201:	49                   	rex.WB
    3202:	46                   	rex.RX
    3203:	49                   	rex.WB
    3204:	45                   	rex.RB
    3205:	44 5f                	rex.R pop rdi
    3207:	4a 55                	rex.WX push rbp
    3209:	4d 50                	rex.WRB push r8
    320b:	54                   	push   rsp
    320c:	41                   	rex.B
    320d:	42                   	rex.X
    320e:	4c                   	rex.WR
    320f:	45 53                	rex.RB push r11
    3211:	20 31                	and    BYTE PTR [rcx],dh
    3213:	00 54 4d 50          	add    BYTE PTR [rbp+rcx*2+0x50],dl
    3217:	5f                   	pop    rdi
    3218:	4d                   	rex.WRB
    3219:	41 58                	pop    r8
    321b:	20 32                	and    BYTE PTR [rdx],dh
    321d:	33 38                	xor    edi,DWORD PTR [rax]
    321f:	33 32                	xor    esi,DWORD PTR [rdx]
    3221:	38 00                	cmp    BYTE PTR [rax],al
    3223:	5f                   	pop    rdi
    3224:	49                   	rex.WB
    3225:	4f 5f                	rex.WRXB pop r15
    3227:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3228:	65 65 64 5f          	gs gs fs pop rdi
    322c:	6c                   	ins    BYTE PTR es:[rdi],dx
    322d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    322e:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    3231:	5f                   	pop    rdi
    3232:	66 70 29             	data16 jo 325e <__FRAME_END__+0x2a6a>
    3235:	20 28                	and    BYTE PTR [rax],ch
    3237:	28 28                	sub    BYTE PTR [rax],ch
    3239:	5f                   	pop    rdi
    323a:	66 70 29             	data16 jo 3266 <__FRAME_END__+0x2a72>
    323d:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    3242:	61                   	(bad)  
    3243:	67 73 32             	addr32 jae 3278 <__FRAME_END__+0x2a84>
    3246:	20 26                	and    BYTE PTR [rsi],ah
    3248:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    324b:	4f 5f                	rex.WRXB pop r15
    324d:	46                   	rex.RX
    324e:	4c                   	rex.WR
    324f:	41                   	rex.B
    3250:	47 53                	rex.RXB push r11
    3252:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    3255:	45                   	rex.RB
    3256:	45                   	rex.RB
    3257:	44 5f                	rex.R pop rdi
    3259:	4c                   	rex.WR
    325a:	4f                   	rex.WRXB
    325b:	43                   	rex.XB
    325c:	4b 29 20             	rex.WXB sub QWORD PTR [r8],rsp
    325f:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 296285 <_end+0x9526d>
    3265:	5f                   	pop    rdi
    3266:	5f                   	pop    rdi
    3267:	46                   	rex.RX
    3268:	4c 54                	rex.WR push rsp
    326a:	5f                   	pop    rdi
    326b:	44                   	rex.R
    326c:	45                   	rex.RB
    326d:	43                   	rex.XB
    326e:	49                   	rex.WB
    326f:	4d                   	rex.WRB
    3270:	41                   	rex.B
    3271:	4c 5f                	rex.WR pop rdi
    3273:	44                   	rex.R
    3274:	49                   	rex.WB
    3275:	47 5f                	rex.RXB pop r15
    3277:	5f                   	pop    rdi
    3278:	20 39                	and    BYTE PTR [rcx],bh
    327a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    327d:	77 61                	ja     32e0 <__FRAME_END__+0x2aec>
    327f:	72 6e                	jb     32ef <__FRAME_END__+0x2afb>
    3281:	64 65 63 6c 28 6e    	fs movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    3287:	61                   	(bad)  
    3288:	6d                   	ins    DWORD PTR es:[rdi],dx
    3289:	65 2c 6d             	gs sub al,0x6d
    328c:	73 67                	jae    32f5 <__FRAME_END__+0x2b01>
    328e:	29 20                	sub    DWORD PTR [rax],esp
    3290:	65 78 74             	gs js  3307 <__FRAME_END__+0x2b13>
    3293:	65 72 6e             	gs jb  3304 <__FRAME_END__+0x2b10>
    3296:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    3299:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    32a0:	20 
    32a1:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    32a4:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    32ab:	74 
    32ac:	74 72                	je     3320 <__FRAME_END__+0x2b2c>
    32ae:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    32b5:	28 28                	sub    BYTE PTR [rax],ch
    32b7:	5f                   	pop    rdi
    32b8:	5f                   	pop    rdi
    32b9:	77 61                	ja     331c <__FRAME_END__+0x2b28>
    32bb:	72 6e                	jb     332b <__FRAME_END__+0x2b37>
    32bd:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    32c4:	6d                   	ins    DWORD PTR es:[rdi],dx
    32c5:	73 67                	jae    332e <__FRAME_END__+0x2b3a>
    32c7:	29 29                	sub    DWORD PTR [rcx],ebp
    32c9:	29 00                	sub    DWORD PTR [rax],eax
    32cb:	5f                   	pop    rdi
    32cc:	5f                   	pop    rdi
    32cd:	46                   	rex.RX
    32ce:	4c 54                	rex.WR push rsp
    32d0:	36 34 5f             	ss xor al,0x5f
    32d3:	4d                   	rex.WRB
    32d4:	41 58                	pop    r8
    32d6:	5f                   	pop    rdi
    32d7:	31 30                	xor    DWORD PTR [rax],esi
    32d9:	5f                   	pop    rdi
    32da:	45 58                	rex.RB pop r8
    32dc:	50                   	push   rax
    32dd:	5f                   	pop    rdi
    32de:	5f                   	pop    rdi
    32df:	20 33                	and    BYTE PTR [rbx],dh
    32e1:	30 38                	xor    BYTE PTR [rax],bh
    32e3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32e6:	53                   	push   rbx
    32e7:	54                   	push   rsp
    32e8:	52                   	push   rdx
    32e9:	49                   	rex.WB
    32ea:	4e                   	rex.WRX
    32eb:	47 28 78 29          	rex.RXB sub BYTE PTR [r8+0x29],r15b
    32ef:	20 23                	and    BYTE PTR [rbx],ah
    32f1:	78 00                	js     32f3 <__FRAME_END__+0x2aff>
    32f3:	5f                   	pop    rdi
    32f4:	5f                   	pop    rdi
    32f5:	4c                   	rex.WR
    32f6:	44                   	rex.R
    32f7:	42                   	rex.X
    32f8:	4c 5f                	rex.WR pop rdi
    32fa:	4d                   	rex.WRB
    32fb:	49                   	rex.WB
    32fc:	4e 5f                	rex.WRX pop rdi
    32fe:	45 58                	rex.RB pop r8
    3300:	50                   	push   rax
    3301:	5f                   	pop    rdi
    3302:	5f                   	pop    rdi
    3303:	20 28                	and    BYTE PTR [rax],ch
    3305:	2d 31 36 33 38       	sub    eax,0x38333631
    330a:	31 29                	xor    DWORD PTR [rcx],ebp
    330c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    330f:	57                   	push   rdi
    3310:	49                   	rex.WB
    3311:	4e 54                	rex.WRX push rsp
    3313:	5f                   	pop    rdi
    3314:	57                   	push   rdi
    3315:	49                   	rex.WB
    3316:	44 54                	rex.R push rsp
    3318:	48 5f                	rex.W pop rdi
    331a:	5f                   	pop    rdi
    331b:	20 33                	and    BYTE PTR [rbx],dh
    331d:	32 00                	xor    al,BYTE PTR [rax]
    331f:	5f                   	pop    rdi
    3320:	49                   	rex.WB
    3321:	4f 5f                	rex.WRXB pop r15
    3323:	53                   	push   rbx
    3324:	48                   	rex.W
    3325:	4f 57                	rex.WRXB push r15
    3327:	50                   	push   rax
    3328:	4f 53                	rex.WRXB push r11
    332a:	20 30                	and    BYTE PTR [rax],dh
    332c:	32 30                	xor    dh,BYTE PTR [rax]
    332e:	30 30                	xor    BYTE PTR [rax],dh
    3330:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3333:	4f 5f                	rex.WRXB pop r15
    3335:	72 65                	jb     339c <__FRAME_END__+0x2ba8>
    3337:	61                   	(bad)  
    3338:	64 5f                	fs pop rdi
    333a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    333c:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    3340:	46                   	rex.RX
    3341:	4c 54                	rex.WR push rsp
    3343:	36 34 58             	ss xor al,0x58
    3346:	5f                   	pop    rdi
    3347:	4d                   	rex.WRB
    3348:	49                   	rex.WB
    3349:	4e 5f                	rex.WRX pop rdi
    334b:	5f                   	pop    rdi
    334c:	20 33                	and    BYTE PTR [rbx],dh
    334e:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    3351:	32 31                	xor    dh,BYTE PTR [rcx]
    3353:	30 33                	xor    BYTE PTR [rbx],dh
    3355:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    3358:	31 31                	xor    DWORD PTR [rcx],esi
    335a:	32 30                	xor    dh,BYTE PTR [rax]
    335c:	39 33                	cmp    DWORD PTR [rbx],esi
    335e:	35 30 36 32 36       	xor    eax,0x36323630
    3363:	32 36                	xor    dh,BYTE PTR [rsi]
    3365:	37                   	(bad)  
    3366:	37                   	(bad)  
    3367:	38 31                	cmp    BYTE PTR [rcx],dh
    3369:	37                   	(bad)  
    336a:	33 32                	xor    esi,DWORD PTR [rdx]
    336c:	31 37                	xor    DWORD PTR [rdi],esi
    336e:	35 32 36 30 65       	xor    eax,0x65303632
    3373:	2d 34 39 33 32       	sub    eax,0x32333934
    3378:	46                   	rex.RX
    3379:	36 34 78             	ss xor al,0x78
    337c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    337f:	4f 53                	rex.WRXB push r11
    3381:	5f                   	pop    rdi
    3382:	4f 55                	rex.WRXB push r13
    3384:	54                   	push   rsp
    3385:	50                   	push   rax
    3386:	55                   	push   rbp
    3387:	54                   	push   rsp
    3388:	20 32                	and    BYTE PTR [rdx],dh
    338a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    338d:	49                   	rex.WB
    338e:	4e 54                	rex.WRX push rsp
    3390:	5f                   	pop    rdi
    3391:	46                   	rex.RX
    3392:	41 53                	push   r11
    3394:	54                   	push   rsp
    3395:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    3398:	41 58                	pop    r8
    339a:	5f                   	pop    rdi
    339b:	5f                   	pop    rdi
    339c:	20 30                	and    BYTE PTR [rax],dh
    339e:	78 37                	js     33d7 <__FRAME_END__+0x2be3>
    33a0:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    33a4:	52                   	push   rdx
    33a5:	45                   	rex.RB
    33a6:	47                   	rex.RXB
    33a7:	49 53                	rex.WB push r11
    33a9:	54                   	push   rsp
    33aa:	45 52                	rex.RB push r10
    33ac:	5f                   	pop    rdi
    33ad:	50                   	push   rax
    33ae:	52                   	push   rdx
    33af:	45                   	rex.RB
    33b0:	46                   	rex.RX
    33b1:	49 58                	rex.WB pop r8
    33b3:	5f                   	pop    rdi
    33b4:	5f                   	pop    rdi
    33b5:	20 00                	and    BYTE PTR [rax],al
    33b7:	5f                   	pop    rdi
    33b8:	5f                   	pop    rdi
    33b9:	46                   	rex.RX
    33ba:	4c 54                	rex.WR push rsp
    33bc:	33 32                	xor    esi,DWORD PTR [rdx]
    33be:	5f                   	pop    rdi
    33bf:	45 50                	rex.RB push r8
    33c1:	53                   	push   rbx
    33c2:	49                   	rex.WB
    33c3:	4c                   	rex.WR
    33c4:	4f                   	rex.WRXB
    33c5:	4e 5f                	rex.WRX pop rdi
    33c7:	5f                   	pop    rdi
    33c8:	20 31                	and    BYTE PTR [rcx],dh
    33ca:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    33cd:	32 30                	xor    dh,BYTE PTR [rax]
    33cf:	39 32                	cmp    DWORD PTR [rdx],esi
    33d1:	38 39                	cmp    BYTE PTR [rcx],bh
    33d3:	35 35 30 37 38       	xor    eax,0x38373035
    33d8:	31 32                	xor    DWORD PTR [rdx],esi
    33da:	35 30 30 30 30       	xor    eax,0x30303030
    33df:	30 30                	xor    BYTE PTR [rax],dh
    33e1:	30 30                	xor    BYTE PTR [rax],dh
    33e3:	30 30                	xor    BYTE PTR [rax],dh
    33e5:	30 30                	xor    BYTE PTR [rax],dh
    33e7:	30 30                	xor    BYTE PTR [rax],dh
    33e9:	30 30                	xor    BYTE PTR [rax],dh
    33eb:	30 30                	xor    BYTE PTR [rax],dh
    33ed:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    33f0:	37                   	(bad)  
    33f1:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    33f4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    33f7:	47                   	rex.RXB
    33f8:	4c                   	rex.WR
    33f9:	49                   	rex.WB
    33fa:	42                   	rex.X
    33fb:	43 5f                	rex.XB pop r15
    33fd:	49                   	rex.WB
    33fe:	4e 54                	rex.WRX push rsp
    3400:	45 52                	rex.RB push r10
    3402:	4e                   	rex.WRX
    3403:	41                   	rex.B
    3404:	4c 5f                	rex.WR pop rdi
    3406:	53                   	push   rbx
    3407:	54                   	push   rsp
    3408:	41 52                	push   r10
    340a:	54                   	push   rsp
    340b:	49                   	rex.WB
    340c:	4e                   	rex.WRX
    340d:	47 5f                	rex.RXB pop r15
    340f:	48                   	rex.W
    3410:	45                   	rex.RB
    3411:	41                   	rex.B
    3412:	44                   	rex.R
    3413:	45 52                	rex.RB push r10
    3415:	5f                   	pop    rdi
    3416:	49                   	rex.WB
    3417:	4d 50                	rex.WRB push r8
    3419:	4c                   	rex.WR
    341a:	45                   	rex.RB
    341b:	4d                   	rex.WRB
    341c:	45                   	rex.RB
    341d:	4e 54                	rex.WRX push rsp
    341f:	41 54                	push   r12
    3421:	49                   	rex.WB
    3422:	4f                   	rex.WRXB
    3423:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    3426:	5f                   	pop    rdi
    3427:	5f                   	pop    rdi
    3428:	53                   	push   rbx
    3429:	57                   	push   rdi
    342a:	4f 52                	rex.WRXB push r10
    342c:	44 5f                	rex.R pop rdi
    342e:	54                   	push   rsp
    342f:	59                   	pop    rcx
    3430:	50                   	push   rax
    3431:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3436:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    343a:	74 00                	je     343c <__FRAME_END__+0x2c48>
    343c:	5f                   	pop    rdi
    343d:	5f                   	pop    rdi
    343e:	4c                   	rex.WR
    343f:	4f                   	rex.WRXB
    3440:	4e                   	rex.WRX
    3441:	47 5f                	rex.RXB pop r15
    3443:	4d                   	rex.WRB
    3444:	41 58                	pop    r8
    3446:	5f                   	pop    rdi
    3447:	5f                   	pop    rdi
    3448:	20 30                	and    BYTE PTR [rax],dh
    344a:	78 37                	js     3483 <__FRAME_END__+0x2c8f>
    344c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3453:	66 66 66 66 66 66 66 
    345a:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    345f:	73 74                	jae    34d5 <__FRAME_END__+0x2ce1>
    3461:	75 62                	jne    34c5 <__FRAME_END__+0x2cd1>
    3463:	5f                   	pop    rdi
    3464:	67 65 74 6d          	addr32 gs je 34d5 <__FRAME_END__+0x2ce1>
    3468:	73 67                	jae    34d1 <__FRAME_END__+0x2cdd>
    346a:	20 00                	and    BYTE PTR [rax],al
    346c:	5f                   	pop    rdi
    346d:	5f                   	pop    rdi
    346e:	44                   	rex.R
    346f:	45                   	rex.RB
    3470:	43                   	rex.XB
    3471:	36 34 5f             	ss xor al,0x5f
    3474:	4d                   	rex.WRB
    3475:	41 58                	pop    r8
    3477:	5f                   	pop    rdi
    3478:	45 58                	rex.RB pop r8
    347a:	50                   	push   rax
    347b:	5f                   	pop    rdi
    347c:	5f                   	pop    rdi
    347d:	20 33                	and    BYTE PTR [rbx],dh
    347f:	38 35 00 5f 5f 46    	cmp    BYTE PTR [rip+0x465f5f00],dh        # 465f9385 <_end+0x463f836d>
    3485:	4c 54                	rex.WR push rsp
    3487:	33 32                	xor    esi,DWORD PTR [rdx]
    3489:	58                   	pop    rax
    348a:	5f                   	pop    rdi
    348b:	4d                   	rex.WRB
    348c:	49                   	rex.WB
    348d:	4e 5f                	rex.WRX pop rdi
    348f:	31 30                	xor    DWORD PTR [rax],esi
    3491:	5f                   	pop    rdi
    3492:	45 58                	rex.RB pop r8
    3494:	50                   	push   rax
    3495:	5f                   	pop    rdi
    3496:	5f                   	pop    rdi
    3497:	20 28                	and    BYTE PTR [rax],ch
    3499:	2d 33 30 37 29       	sub    eax,0x29373033
    349e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    34a1:	55                   	push   rbp
    34a2:	53                   	push   rbx
    34a3:	45 5f                	rex.RB pop r15
    34a5:	50                   	push   rax
    34a6:	4f 53                	rex.WRXB push r11
    34a8:	49 58                	rex.WB pop r8
    34aa:	32 00                	xor    al,BYTE PTR [rax]
    34ac:	5f                   	pop    rdi
    34ad:	49                   	rex.WB
    34ae:	4f 5f                	rex.WRXB pop r15
    34b0:	55                   	push   rbp
    34b1:	4e                   	rex.WRX
    34b2:	49 54                	rex.WB push r12
    34b4:	42 55                	rex.X push rbp
    34b6:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
    34b9:	32 30                	xor    dh,BYTE PTR [rax]
    34bb:	30 30                	xor    BYTE PTR [rax],dh
    34bd:	30 00                	xor    BYTE PTR [rax],al
    34bf:	5f                   	pop    rdi
    34c0:	5f                   	pop    rdi
    34c1:	4f                   	rex.WRXB
    34c2:	46                   	rex.RX
    34c3:	46 5f                	rex.RX pop rdi
    34c5:	54                   	push   rsp
    34c6:	5f                   	pop    rdi
    34c7:	54                   	push   rsp
    34c8:	59                   	pop    rcx
    34c9:	50                   	push   rax
    34ca:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    34ce:	53                   	push   rbx
    34cf:	59                   	pop    rcx
    34d0:	53                   	push   rbx
    34d1:	43                   	rex.XB
    34d2:	41                   	rex.B
    34d3:	4c                   	rex.WR
    34d4:	4c 5f                	rex.WR pop rdi
    34d6:	53                   	push   rbx
    34d7:	4c                   	rex.WR
    34d8:	4f                   	rex.WRXB
    34d9:	4e                   	rex.WRX
    34da:	47 5f                	rex.RXB pop r15
    34dc:	54                   	push   rsp
    34dd:	59                   	pop    rcx
    34de:	50                   	push   rax
    34df:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    34e3:	55                   	push   rbp
    34e4:	49                   	rex.WB
    34e5:	4e 54                	rex.WRX push rsp
    34e7:	4d                   	rex.WRB
    34e8:	41 58                	pop    r8
    34ea:	5f                   	pop    rdi
    34eb:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    34ef:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    34f2:	23 23                	and    esp,DWORD PTR [rbx]
    34f4:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
    34f7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    34fa:	43                   	rex.XB
    34fb:	48                   	rex.W
    34fc:	41 52                	push   r10
    34fe:	33 32                	xor    esi,DWORD PTR [rdx]
    3500:	5f                   	pop    rdi
    3501:	54                   	push   rsp
    3502:	59                   	pop    rcx
    3503:	50                   	push   rax
    3504:	45 5f                	rex.RB pop r15
    3506:	5f                   	pop    rdi
    3507:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    350a:	73 69                	jae    3575 <__FRAME_END__+0x2d81>
    350c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    350e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3513:	74 00                	je     3515 <__FRAME_END__+0x2d21>
    3515:	5f                   	pop    rdi
    3516:	5f                   	pop    rdi
    3517:	46                   	rex.RX
    3518:	4c 54                	rex.WR push rsp
    351a:	36 34 58             	ss xor al,0x58
    351d:	5f                   	pop    rdi
    351e:	48                   	rex.W
    351f:	41 53                	push   r11
    3521:	5f                   	pop    rdi
    3522:	49                   	rex.WB
    3523:	4e                   	rex.WRX
    3524:	46                   	rex.RX
    3525:	49                   	rex.WB
    3526:	4e                   	rex.WRX
    3527:	49 54                	rex.WB push r12
    3529:	59                   	pop    rcx
    352a:	5f                   	pop    rdi
    352b:	5f                   	pop    rdi
    352c:	20 31                	and    BYTE PTR [rcx],dh
    352e:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    3531:	49 54                	rex.WB push r12
    3533:	53                   	push   rbx
    3534:	5f                   	pop    rdi
    3535:	47 5f                	rex.RXB pop r15
    3537:	43                   	rex.XB
    3538:	4f                   	rex.WRXB
    3539:	4e                   	rex.WRX
    353a:	46                   	rex.RX
    353b:	49                   	rex.WB
    353c:	47 5f                	rex.RXB pop r15
    353e:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    3541:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3544:	44                   	rex.R
    3545:	45                   	rex.RB
    3546:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    3549:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    354c:	49                   	rex.WB
    354d:	4e 5f                	rex.WRX pop rdi
    354f:	5f                   	pop    rdi
    3550:	20 31                	and    BYTE PTR [rcx],dh
    3552:	45 2d 36 31 34 33    	rex.RB sub eax,0x33343136
    3558:	44                   	rex.R
    3559:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    355d:	46                   	rex.RX
    355e:	4c 54                	rex.WR push rsp
    3560:	33 32                	xor    esi,DWORD PTR [rdx]
    3562:	58                   	pop    rax
    3563:	5f                   	pop    rdi
    3564:	4d                   	rex.WRB
    3565:	49                   	rex.WB
    3566:	4e 5f                	rex.WRX pop rdi
    3568:	45 58                	rex.RB pop r8
    356a:	50                   	push   rax
    356b:	5f                   	pop    rdi
    356c:	5f                   	pop    rdi
    356d:	20 28                	and    BYTE PTR [rax],ch
    356f:	2d 31 30 32 31       	sub    eax,0x31323031
    3574:	29 00                	sub    DWORD PTR [rax],eax
    3576:	5f                   	pop    rdi
    3577:	49                   	rex.WB
    3578:	4f 5f                	rex.WRXB pop r15
    357a:	67 65 74 63          	addr32 gs je 35e1 <__FRAME_END__+0x2ded>
    357e:	5f                   	pop    rdi
    357f:	75 6e                	jne    35ef <__FRAME_END__+0x2dfb>
    3581:	6c                   	ins    BYTE PTR es:[rdi],dx
    3582:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3583:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3586:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    358a:	70 29                	jo     35b5 <__FRAME_END__+0x2dc1>
    358c:	20 28                	and    BYTE PTR [rax],ch
    358e:	5f                   	pop    rdi
    358f:	49                   	rex.WB
    3590:	4f 5f                	rex.WRXB pop r15
    3592:	42                   	rex.X
    3593:	45 20 28             	and    BYTE PTR [r8],r13b
    3596:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3599:	70 29                	jo     35c4 <__FRAME_END__+0x2dd0>
    359b:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35a0:	5f                   	pop    rdi
    35a1:	72 65                	jb     3608 <__FRAME_END__+0x2e14>
    35a3:	61                   	(bad)  
    35a4:	64 5f                	fs pop rdi
    35a6:	70 74                	jo     361c <__FRAME_END__+0x2e28>
    35a8:	72 20                	jb     35ca <__FRAME_END__+0x2dd6>
    35aa:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    35b0:	70 29                	jo     35db <__FRAME_END__+0x2de7>
    35b2:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35b7:	5f                   	pop    rdi
    35b8:	72 65                	jb     361f <__FRAME_END__+0x2e2b>
    35ba:	61                   	(bad)  
    35bb:	64 5f                	fs pop rdi
    35bd:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    35bf:	64 2c 20             	fs sub al,0x20
    35c2:	30 29                	xor    BYTE PTR [rcx],ch
    35c4:	20 3f                	and    BYTE PTR [rdi],bh
    35c6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    35c9:	75 66                	jne    3631 <__FRAME_END__+0x2e3d>
    35cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    35cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35cd:	77 20                	ja     35ef <__FRAME_END__+0x2dfb>
    35cf:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    35d2:	70 29                	jo     35fd <__FRAME_END__+0x2e09>
    35d4:	20 3a                	and    BYTE PTR [rdx],bh
    35d6:	20 2a                	and    BYTE PTR [rdx],ch
    35d8:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    35db:	73 69                	jae    3646 <__FRAME_END__+0x2e52>
    35dd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    35df:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    35e4:	61                   	(bad)  
    35e5:	72 20                	jb     3607 <__FRAME_END__+0x2e13>
    35e7:	2a 29                	sub    ch,BYTE PTR [rcx]
    35e9:	20 28                	and    BYTE PTR [rax],ch
    35eb:	5f                   	pop    rdi
    35ec:	66 70 29             	data16 jo 3618 <__FRAME_END__+0x2e24>
    35ef:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35f4:	5f                   	pop    rdi
    35f5:	72 65                	jb     365c <__FRAME_END__+0x2e68>
    35f7:	61                   	(bad)  
    35f8:	64 5f                	fs pop rdi
    35fa:	70 74                	jo     3670 <__FRAME_END__+0x2e7c>
    35fc:	72 2b                	jb     3629 <__FRAME_END__+0x2e35>
    35fe:	2b 29                	sub    ebp,DWORD PTR [rcx]
    3600:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3603:	49                   	rex.WB
    3604:	4e 54                	rex.WRX push rsp
    3606:	50                   	push   rax
    3607:	54                   	push   rsp
    3608:	52                   	push   rdx
    3609:	5f                   	pop    rdi
    360a:	57                   	push   rdi
    360b:	49                   	rex.WB
    360c:	44 54                	rex.R push rsp
    360e:	48 5f                	rex.W pop rdi
    3610:	5f                   	pop    rdi
    3611:	20 36                	and    BYTE PTR [rsi],dh
    3613:	34 00                	xor    al,0x0
    3615:	5f                   	pop    rdi
    3616:	5f                   	pop    rdi
    3617:	49                   	rex.WB
    3618:	4e                   	rex.WRX
    3619:	4f 5f                	rex.WRXB pop r15
    361b:	54                   	push   rsp
    361c:	5f                   	pop    rdi
    361d:	54                   	push   rsp
    361e:	59                   	pop    rcx
    361f:	50                   	push   rax
    3620:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3624:	53                   	push   rbx
    3625:	59                   	pop    rcx
    3626:	53                   	push   rbx
    3627:	43                   	rex.XB
    3628:	41                   	rex.B
    3629:	4c                   	rex.WR
    362a:	4c 5f                	rex.WR pop rdi
    362c:	55                   	push   rbp
    362d:	4c                   	rex.WR
    362e:	4f                   	rex.WRXB
    362f:	4e                   	rex.WRX
    3630:	47 5f                	rex.RXB pop r15
    3632:	54                   	push   rsp
    3633:	59                   	pop    rcx
    3634:	50                   	push   rax
    3635:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3639:	55                   	push   rbp
    363a:	49                   	rex.WB
    363b:	4e 54                	rex.WRX push rsp
    363d:	5f                   	pop    rdi
    363e:	46                   	rex.RX
    363f:	41 53                	push   r11
    3641:	54                   	push   rsp
    3642:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    3645:	59                   	pop    rcx
    3646:	50                   	push   rax
    3647:	45 5f                	rex.RB pop r15
    3649:	5f                   	pop    rdi
    364a:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    364d:	73 69                	jae    36b8 <__FRAME_END__+0x2ec4>
    364f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3651:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3656:	61                   	(bad)  
    3657:	72 00                	jb     3659 <__FRAME_END__+0x2e65>
    3659:	5f                   	pop    rdi
    365a:	5f                   	pop    rdi
    365b:	49                   	rex.WB
    365c:	4e 54                	rex.WRX push rsp
    365e:	33 32                	xor    esi,DWORD PTR [rdx]
    3660:	5f                   	pop    rdi
    3661:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    3665:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3668:	5f                   	pop    rdi
    3669:	5f                   	pop    rdi
    366a:	46 53                	rex.RX push rbx
    366c:	46                   	rex.RX
    366d:	49                   	rex.WB
    366e:	4c                   	rex.WR
    366f:	43                   	rex.XB
    3670:	4e 54                	rex.WRX push rsp
    3672:	36 34 5f             	ss xor al,0x5f
    3675:	54                   	push   rsp
    3676:	5f                   	pop    rdi
    3677:	54                   	push   rsp
    3678:	59                   	pop    rcx
    3679:	50                   	push   rax
    367a:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    367e:	55                   	push   rbp
    367f:	51                   	push   rcx
    3680:	55                   	push   rbp
    3681:	41                   	rex.B
    3682:	44 5f                	rex.R pop rdi
    3684:	54                   	push   rsp
    3685:	59                   	pop    rcx
    3686:	50                   	push   rax
    3687:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    368b:	4c                   	rex.WR
    368c:	44                   	rex.R
    368d:	42                   	rex.X
    368e:	4c 5f                	rex.WR pop rdi
    3690:	48                   	rex.W
    3691:	41 53                	push   r11
    3693:	5f                   	pop    rdi
    3694:	51                   	push   rcx
    3695:	55                   	push   rbp
    3696:	49                   	rex.WB
    3697:	45 54                	rex.RB push r12
    3699:	5f                   	pop    rdi
    369a:	4e                   	rex.WRX
    369b:	41                   	rex.B
    369c:	4e 5f                	rex.WRX pop rdi
    369e:	5f                   	pop    rdi
    369f:	20 31                	and    BYTE PTR [rcx],dh
    36a1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36a4:	47                   	rex.RXB
    36a5:	4e 55                	rex.WRX push rbp
    36a7:	43 5f                	rex.XB pop r15
    36a9:	50                   	push   rax
    36aa:	41 54                	push   r12
    36ac:	43                   	rex.XB
    36ad:	48                   	rex.W
    36ae:	4c                   	rex.WR
    36af:	45 56                	rex.RB push r14
    36b1:	45                   	rex.RB
    36b2:	4c 5f                	rex.WR pop rdi
    36b4:	5f                   	pop    rdi
    36b5:	20 30                	and    BYTE PTR [rax],dh
    36b7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36ba:	57                   	push   rdi
    36bb:	49                   	rex.WB
    36bc:	4e 54                	rex.WRX push rsp
    36be:	5f                   	pop    rdi
    36bf:	4d                   	rex.WRB
    36c0:	41 58                	pop    r8
    36c2:	5f                   	pop    rdi
    36c3:	5f                   	pop    rdi
    36c4:	20 30                	and    BYTE PTR [rax],dh
    36c6:	78 66                	js     372e <__FRAME_END__+0x2f3a>
    36c8:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    36cf:	55 
    36d0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36d3:	61                   	(bad)  
    36d4:	74 74                	je     374a <__FRAME_END__+0x2f56>
    36d6:	72 69                	jb     3741 <__FRAME_END__+0x2f4d>
    36d8:	62                   	(bad)  
    36d9:	75 74                	jne    374f <__FRAME_END__+0x2f5b>
    36db:	65 5f                	gs pop rdi
    36dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    36df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36e0:	73 74                	jae    3756 <__FRAME_END__+0x2f62>
    36e2:	72 69                	jb     374d <__FRAME_END__+0x2f59>
    36e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36e5:	67 5f                	addr32 pop rdi
    36e7:	5f                   	pop    rdi
    36e8:	20 00                	and    BYTE PTR [rax],al
    36ea:	5f                   	pop    rdi
    36eb:	49                   	rex.WB
    36ec:	4f 5f                	rex.WRXB pop r15
    36ee:	4d                   	rex.WRB
    36ef:	41                   	rex.B
    36f0:	47                   	rex.RXB
    36f1:	49                   	rex.WB
    36f2:	43 5f                	rex.XB pop r15
    36f4:	4d                   	rex.WRB
    36f5:	41 53                	push   r11
    36f7:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    36fa:	78 46                	js     3742 <__FRAME_END__+0x2f4e>
    36fc:	46                   	rex.RX
    36fd:	46                   	rex.RX
    36fe:	46 30 30             	rex.RX xor BYTE PTR [rax],r14b
    3701:	30 30                	xor    BYTE PTR [rax],dh
    3703:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3706:	6c                   	ins    BYTE PTR es:[rdi],dx
    3707:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    370e:	5f                   	pop    rdi
    370f:	5f                   	pop    rdi
    3710:	47                   	rex.RXB
    3711:	4c                   	rex.WR
    3712:	49                   	rex.WB
    3713:	42                   	rex.X
    3714:	43 5f                	rex.XB pop r15
    3716:	55                   	push   rbp
    3717:	53                   	push   rbx
    3718:	45 5f                	rex.RB pop r15
    371a:	49                   	rex.WB
    371b:	45                   	rex.RB
    371c:	43 5f                	rex.XB pop r15
    371e:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f705a <_end+0x463f6042>
    3725:	55                   	push   rbp
    3726:	4e                   	rex.WRX
    3727:	43 53                	rex.XB push r11
    3729:	5f                   	pop    rdi
    372a:	45 58                	rex.RB pop r8
    372c:	54                   	push   rsp
    372d:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3730:	4f 5f                	rex.WRXB pop r15
    3732:	76 61                	jbe    3795 <__FRAME_END__+0x2fa1>
    3734:	5f                   	pop    rdi
    3735:	6c                   	ins    BYTE PTR es:[rdi],dx
    3736:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
    373d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    373e:	75 63                	jne    37a3 <__FRAME_END__+0x2faf>
    3740:	5f                   	pop    rdi
    3741:	76 61                	jbe    37a4 <__FRAME_END__+0x2fb0>
    3743:	5f                   	pop    rdi
    3744:	6c                   	ins    BYTE PTR es:[rdi],dx
    3745:	69 73 74 00 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f00
    374c:	42 55                	rex.X push rbp
    374e:	46 53                	rex.RX push rbx
    3750:	49 5a                	rex.WB pop r10
    3752:	20 38                	and    BYTE PTR [rax],bh
    3754:	31 39                	xor    DWORD PTR [rcx],edi
    3756:	32 00                	xor    al,BYTE PTR [rax]
    3758:	5f                   	pop    rdi
    3759:	5f                   	pop    rdi
    375a:	4c                   	rex.WR
    375b:	44                   	rex.R
    375c:	42                   	rex.X
    375d:	4c 5f                	rex.WR pop rdi
    375f:	52                   	push   rdx
    3760:	45                   	rex.RB
    3761:	44                   	rex.R
    3762:	49 52                	rex.WB push r10
    3764:	31 28                	xor    DWORD PTR [rax],ebp
    3766:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3767:	61                   	(bad)  
    3768:	6d                   	ins    DWORD PTR es:[rdi],dx
    3769:	65 2c 70             	gs sub al,0x70
    376c:	72 6f                	jb     37dd <__FRAME_END__+0x2fe9>
    376e:	74 6f                	je     37df <__FRAME_END__+0x2feb>
    3770:	2c 61                	sub    al,0x61
    3772:	6c                   	ins    BYTE PTR es:[rdi],dx
    3773:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    377a:	6d                   	ins    DWORD PTR es:[rdi],dx
    377b:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    377f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3780:	74 6f                	je     37f1 <__FRAME_END__+0x2ffd>
    3782:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3785:	61                   	(bad)  
    3786:	74 74                	je     37fc <__FRAME_END__+0x3008>
    3788:	72 69                	jb     37f3 <__FRAME_END__+0x2fff>
    378a:	62                   	(bad)  
    378b:	75 74                	jne    3801 <__FRAME_END__+0x300d>
    378d:	65 5f                	gs pop rdi
    378f:	6d                   	ins    DWORD PTR es:[rdi],dx
    3790:	61                   	(bad)  
    3791:	6c                   	ins    BYTE PTR es:[rdi],dx
    3792:	6c                   	ins    BYTE PTR es:[rdi],dx
    3793:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3794:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    3797:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    379a:	61                   	(bad)  
    379b:	74 74                	je     3811 <__FRAME_END__+0x301d>
    379d:	72 69                	jb     3808 <__FRAME_END__+0x3014>
    379f:	62                   	(bad)  
    37a0:	75 74                	jne    3816 <__FRAME_END__+0x3022>
    37a2:	65 5f                	gs pop rdi
    37a4:	5f                   	pop    rdi
    37a5:	20 28                	and    BYTE PTR [rax],ch
    37a7:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    37aa:	6d                   	ins    DWORD PTR es:[rdi],dx
    37ab:	61                   	(bad)  
    37ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    37ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    37ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37af:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    37b2:	29 29                	sub    DWORD PTR [rcx],ebp
    37b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    37b7:	55                   	push   rbp
    37b8:	49                   	rex.WB
    37b9:	4e 54                	rex.WRX push rsp
    37bb:	33 32                	xor    esi,DWORD PTR [rdx]
    37bd:	5f                   	pop    rdi
    37be:	54                   	push   rsp
    37bf:	59                   	pop    rcx
    37c0:	50                   	push   rax
    37c1:	45 5f                	rex.RB pop r15
    37c3:	5f                   	pop    rdi
    37c4:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    37c7:	73 69                	jae    3832 <__FRAME_END__+0x303e>
    37c9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    37cb:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    37d0:	74 00                	je     37d2 <__FRAME_END__+0x2fde>
    37d2:	5f                   	pop    rdi
    37d3:	5f                   	pop    rdi
    37d4:	4c                   	rex.WR
    37d5:	44                   	rex.R
    37d6:	42                   	rex.X
    37d7:	4c 5f                	rex.WR pop rdi
    37d9:	52                   	push   rdx
    37da:	45                   	rex.RB
    37db:	44                   	rex.R
    37dc:	49 52                	rex.WB push r10
    37de:	5f                   	pop    rdi
    37df:	4e 54                	rex.WRX push rsp
    37e1:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    37e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    37e6:	65 2c 70             	gs sub al,0x70
    37e9:	72 6f                	jb     385a <__FRAME_END__+0x3066>
    37eb:	74 6f                	je     385c <__FRAME_END__+0x3068>
    37ed:	29 20                	sub    DWORD PTR [rax],esp
    37ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    37f0:	61                   	(bad)  
    37f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    37f2:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    37f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37f7:	74 6f                	je     3868 <__FRAME_END__+0x3074>
    37f9:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    37fc:	54                   	push   rsp
    37fd:	48 52                	rex.W push rdx
    37ff:	4f 57                	rex.WRXB push r15
    3801:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3804:	55                   	push   rbp
    3805:	53                   	push   rbx
    3806:	45 5f                	rex.RB pop r15
    3808:	58                   	pop    rax
    3809:	4f 50                	rex.WRXB push r8
    380b:	45                   	rex.RB
    380c:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    3810:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3813:	4f 5f                	rex.WRXB pop r15
    3815:	55                   	push   rbp
    3816:	50                   	push   rax
    3817:	50                   	push   rax
    3818:	45 52                	rex.RB push r10
    381a:	43                   	rex.XB
    381b:	41 53                	push   r11
    381d:	45 20 30             	and    BYTE PTR [r8],r14b
    3820:	31 30                	xor    DWORD PTR [rax],esi
    3822:	30 30                	xor    BYTE PTR [rax],dh
    3824:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
    3827:	74 6d                	je     3896 <__FRAME_END__+0x30a2>
    3829:	70 64                	jo     388f <__FRAME_END__+0x309b>
    382b:	69 72 20 22 2f 74 6d 	imul   esi,DWORD PTR [rdx+0x20],0x6d742f22
    3832:	70 22                	jo     3856 <__FRAME_END__+0x3062>
    3834:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3837:	52                   	push   rdx
    3838:	45                   	rex.RB
    3839:	44                   	rex.R
    383a:	49 52                	rex.WB push r10
    383c:	45                   	rex.RB
    383d:	43 54                	rex.XB push r12
    383f:	5f                   	pop    rdi
    3840:	4e 54                	rex.WRX push rsp
    3842:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    3846:	6d                   	ins    DWORD PTR es:[rdi],dx
    3847:	65 2c 70             	gs sub al,0x70
    384a:	72 6f                	jb     38bb <__FRAME_END__+0x30c7>
    384c:	74 6f                	je     38bd <__FRAME_END__+0x30c9>
    384e:	2c 61                	sub    al,0x61
    3850:	6c                   	ins    BYTE PTR es:[rdi],dx
    3851:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    3858:	6d                   	ins    DWORD PTR es:[rdi],dx
    3859:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    385d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    385e:	74 6f                	je     38cf <__FRAME_END__+0x30db>
    3860:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3863:	61                   	(bad)  
    3864:	73 6d                	jae    38d3 <__FRAME_END__+0x30df>
    3866:	5f                   	pop    rdi
    3867:	5f                   	pop    rdi
    3868:	20 28                	and    BYTE PTR [rax],ch
    386a:	5f                   	pop    rdi
    386b:	5f                   	pop    rdi
    386c:	41 53                	push   r11
    386e:	4d                   	rex.WRB
    386f:	4e                   	rex.WRX
    3870:	41                   	rex.B
    3871:	4d                   	rex.WRB
    3872:	45 20 28             	and    BYTE PTR [r8],r13b
    3875:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    3878:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    387f:	5f                   	pop    rdi
    3880:	54                   	push   rsp
    3881:	48 52                	rex.W push rdx
    3883:	4f 57                	rex.WRXB push r15
    3885:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3888:	55                   	push   rbp
    3889:	53                   	push   rbx
    388a:	45 5f                	rex.RB pop r15
    388c:	58                   	pop    rax
    388d:	4f 50                	rex.WRXB push r8
    388f:	45                   	rex.RB
    3890:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    3894:	46                   	rex.RX
    3895:	4c 54                	rex.WR push rsp
    3897:	31 32                	xor    DWORD PTR [rdx],esi
    3899:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    389c:	50                   	push   rax
    389d:	53                   	push   rbx
    389e:	49                   	rex.WB
    389f:	4c                   	rex.WR
    38a0:	4f                   	rex.WRXB
    38a1:	4e 5f                	rex.WRX pop rdi
    38a3:	5f                   	pop    rdi
    38a4:	20 31                	and    BYTE PTR [rcx],dh
    38a6:	2e 39 32             	cmp    DWORD PTR cs:[rdx],esi
    38a9:	35 39 32 39 39       	xor    eax,0x39393239
    38ae:	34 34                	xor    al,0x34
    38b0:	33 38                	xor    edi,DWORD PTR [rax]
    38b2:	37                   	(bad)  
    38b3:	32 33                	xor    dh,BYTE PTR [rbx]
    38b5:	35 38 35 33 30       	xor    eax,0x30333538
    38ba:	35 35 39 37 37       	xor    eax,0x37373935
    38bf:	39 34 32             	cmp    DWORD PTR [rdx+rsi*1],esi
    38c2:	35 38 34 39 32       	xor    eax,0x32393438
    38c7:	37                   	(bad)  
    38c8:	33 32                	xor    esi,DWORD PTR [rdx]
    38ca:	65 2d 33 34 46 31    	gs sub eax,0x31463433
    38d0:	32 38                	xor    bh,BYTE PTR [rax]
    38d2:	00 46 4f             	add    BYTE PTR [rsi+0x4f],al
    38d5:	50                   	push   rax
    38d6:	45                   	rex.RB
    38d7:	4e 5f                	rex.WRX pop rdi
    38d9:	4d                   	rex.WRB
    38da:	41 58                	pop    r8
    38dc:	20 31                	and    BYTE PTR [rcx],dh
    38de:	36 00 5f 49          	add    BYTE PTR ss:[rdi+0x49],bl
    38e2:	4f 5f                	rex.WRXB pop r15
    38e4:	46                   	rex.RX
    38e5:	49                   	rex.WB
    38e6:	4c                   	rex.WR
    38e7:	45 5f                	rex.RB pop r15
    38e9:	70 6c                	jo     3957 <__FRAME_END__+0x3163>
    38eb:	75 73                	jne    3960 <__FRAME_END__+0x316c>
    38ed:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    38f0:	4f 53                	rex.WRXB push r11
    38f2:	49 58                	rex.WB pop r8
    38f4:	5f                   	pop    rdi
    38f5:	43 5f                	rex.XB pop r15
    38f7:	53                   	push   rbx
    38f8:	4f 55                	rex.WRXB push r13
    38fa:	52                   	push   rdx
    38fb:	43                   	rex.XB
    38fc:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3900:	54                   	push   rsp
    3901:	48 52                	rex.W push rdx
    3903:	4f 57                	rex.WRXB push r15
    3905:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3908:	61                   	(bad)  
    3909:	74 74                	je     397f <__FRAME_END__+0x318b>
    390b:	72 69                	jb     3976 <__FRAME_END__+0x3182>
    390d:	62                   	(bad)  
    390e:	75 74                	jne    3984 <__FRAME_END__+0x3190>
    3910:	65 5f                	gs pop rdi
    3912:	5f                   	pop    rdi
    3913:	20 28                	and    BYTE PTR [rax],ch
    3915:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3918:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3919:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    391a:	74 68                	je     3984 <__FRAME_END__+0x3190>
    391c:	72 6f                	jb     398d <__FRAME_END__+0x3199>
    391e:	77 5f                	ja     397f <__FRAME_END__+0x318b>
    3920:	5f                   	pop    rdi
    3921:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3924:	4c                   	rex.WR
    3925:	45                   	rex.RB
    3926:	41                   	rex.B
    3927:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
    392a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    392d:	53                   	push   rbx
    392e:	49 5a                	rex.WB pop r10
    3930:	45                   	rex.RB
    3931:	4f                   	rex.WRXB
    3932:	46 5f                	rex.RX pop rdi
    3934:	4c                   	rex.WR
    3935:	4f                   	rex.WRXB
    3936:	4e                   	rex.WRX
    3937:	47 5f                	rex.RXB pop r15
    3939:	4c                   	rex.WR
    393a:	4f                   	rex.WRXB
    393b:	4e                   	rex.WRX
    393c:	47 5f                	rex.RXB pop r15
    393e:	5f                   	pop    rdi
    393f:	20 38                	and    BYTE PTR [rax],bh
    3941:	00 5f 56             	add    BYTE PTR [rdi+0x56],bl
    3944:	41 5f                	pop    r15
    3946:	4c                   	rex.WR
    3947:	49 53                	rex.WB push r11
    3949:	54                   	push   rsp
    394a:	5f                   	pop    rdi
    394b:	44                   	rex.R
    394c:	45                   	rex.RB
    394d:	46                   	rex.RX
    394e:	49                   	rex.WB
    394f:	4e                   	rex.WRX
    3950:	45                   	rex.RB
    3951:	44 20 00             	and    BYTE PTR [rax],r8b
    3954:	5f                   	pop    rdi
    3955:	5f                   	pop    rdi
    3956:	55                   	push   rbp
    3957:	49                   	rex.WB
    3958:	4e 54                	rex.WRX push rsp
    395a:	5f                   	pop    rdi
    395b:	46                   	rex.RX
    395c:	41 53                	push   r11
    395e:	54                   	push   rsp
    395f:	33 32                	xor    esi,DWORD PTR [rdx]
    3961:	5f                   	pop    rdi
    3962:	54                   	push   rsp
    3963:	59                   	pop    rcx
    3964:	50                   	push   rax
    3965:	45 5f                	rex.RB pop r15
    3967:	5f                   	pop    rdi
    3968:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    396c:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3970:	73 69                	jae    39db <__FRAME_END__+0x31e7>
    3972:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3974:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3979:	74 00                	je     397b <__FRAME_END__+0x3187>
    397b:	5f                   	pop    rdi
    397c:	5f                   	pop    rdi
    397d:	53                   	push   rbx
    397e:	48 52                	rex.W push rdx
    3980:	54                   	push   rsp
    3981:	5f                   	pop    rdi
    3982:	57                   	push   rdi
    3983:	49                   	rex.WB
    3984:	44 54                	rex.R push rsp
    3986:	48 5f                	rex.W pop rdi
    3988:	5f                   	pop    rdi
    3989:	20 31                	and    BYTE PTR [rcx],dh
    398b:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    398f:	53                   	push   rbx
    3990:	53                   	push   rbx
    3991:	45 32 5f 4d          	xor    r11b,BYTE PTR [r15+0x4d]
    3995:	41 54                	push   r12
    3997:	48 5f                	rex.W pop rdi
    3999:	5f                   	pop    rdi
    399a:	20 31                	and    BYTE PTR [rcx],dh
    399c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    399f:	53                   	push   rbx
    39a0:	53                   	push   rbx
    39a1:	49 5a                	rex.WB pop r10
    39a3:	45 5f                	rex.RB pop r15
    39a5:	54                   	push   rsp
    39a6:	5f                   	pop    rdi
    39a7:	54                   	push   rsp
    39a8:	59                   	pop    rcx
    39a9:	50                   	push   rax
    39aa:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    39ae:	53                   	push   rbx
    39af:	57                   	push   rdi
    39b0:	4f 52                	rex.WRXB push r10
    39b2:	44 5f                	rex.R pop rdi
    39b4:	54                   	push   rsp
    39b5:	59                   	pop    rcx
    39b6:	50                   	push   rax
    39b7:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    39bb:	53                   	push   rbx
    39bc:	36 34 5f             	ss xor al,0x5f
    39bf:	54                   	push   rsp
    39c0:	59                   	pop    rcx
    39c1:	50                   	push   rax
    39c2:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    39c7:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    39cb:	74 00                	je     39cd <__FRAME_END__+0x31d9>
    39cd:	5f                   	pop    rdi
    39ce:	5f                   	pop    rdi
    39cf:	61                   	(bad)  
    39d0:	74 74                	je     3a46 <__FRAME_END__+0x3252>
    39d2:	72 69                	jb     3a3d <__FRAME_END__+0x3249>
    39d4:	62                   	(bad)  
    39d5:	75 74                	jne    3a4b <__FRAME_END__+0x3257>
    39d7:	65 5f                	gs pop rdi
    39d9:	70 75                	jo     3a50 <__FRAME_END__+0x325c>
    39db:	72 65                	jb     3a42 <__FRAME_END__+0x324e>
    39dd:	5f                   	pop    rdi
    39de:	5f                   	pop    rdi
    39df:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    39e2:	61                   	(bad)  
    39e3:	74 74                	je     3a59 <__FRAME_END__+0x3265>
    39e5:	72 69                	jb     3a50 <__FRAME_END__+0x325c>
    39e7:	62                   	(bad)  
    39e8:	75 74                	jne    3a5e <__FRAME_END__+0x326a>
    39ea:	65 5f                	gs pop rdi
    39ec:	5f                   	pop    rdi
    39ed:	20 28                	and    BYTE PTR [rax],ch
    39ef:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    39f2:	70 75                	jo     3a69 <__FRAME_END__+0x3275>
    39f4:	72 65                	jb     3a5b <__FRAME_END__+0x3267>
    39f6:	5f                   	pop    rdi
    39f7:	5f                   	pop    rdi
    39f8:	29 29                	sub    DWORD PTR [rcx],ebp
    39fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    39fd:	49                   	rex.WB
    39fe:	4e 54                	rex.WRX push rsp
    3a00:	4d                   	rex.WRB
    3a01:	41 58                	pop    r8
    3a03:	5f                   	pop    rdi
    3a04:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    3a08:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    3a0b:	23 23                	and    esp,DWORD PTR [rbx]
    3a0d:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    3a11:	49                   	rex.WB
    3a12:	4f 5f                	rex.WRXB pop r15
    3a14:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    3a1b:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    3a1e:	5f                   	pop    rdi
    3a1f:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    3a26:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a29:	49                   	rex.WB
    3a2a:	4e 54                	rex.WRX push rsp
    3a2c:	5f                   	pop    rdi
    3a2d:	46                   	rex.RX
    3a2e:	41 53                	push   r11
    3a30:	54                   	push   rsp
    3a31:	33 32                	xor    esi,DWORD PTR [rdx]
    3a33:	5f                   	pop    rdi
    3a34:	57                   	push   rdi
    3a35:	49                   	rex.WB
    3a36:	44 54                	rex.R push rsp
    3a38:	48 5f                	rex.W pop rdi
    3a3a:	5f                   	pop    rdi
    3a3b:	20 36                	and    BYTE PTR [rsi],dh
    3a3d:	34 00                	xor    al,0x0
    3a3f:	5f                   	pop    rdi
    3a40:	5f                   	pop    rdi
    3a41:	55                   	push   rbp
    3a42:	53                   	push   rbx
    3a43:	45 5f                	rex.RB pop r15
    3a45:	58                   	pop    rax
    3a46:	4f 50                	rex.WRXB push r8
    3a48:	45                   	rex.RB
    3a49:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    3a4d:	20 31                	and    BYTE PTR [rcx],dh
    3a4f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a52:	49                   	rex.WB
    3a53:	4e 54                	rex.WRX push rsp
    3a55:	5f                   	pop    rdi
    3a56:	4c                   	rex.WR
    3a57:	45                   	rex.RB
    3a58:	41 53                	push   r11
    3a5a:	54                   	push   rsp
    3a5b:	36 34 5f             	ss xor al,0x5f
    3a5e:	57                   	push   rdi
    3a5f:	49                   	rex.WB
    3a60:	44 54                	rex.R push rsp
    3a62:	48 5f                	rex.W pop rdi
    3a64:	5f                   	pop    rdi
    3a65:	20 36                	and    BYTE PTR [rsi],dh
    3a67:	34 00                	xor    al,0x0
    3a69:	5f                   	pop    rdi
    3a6a:	5f                   	pop    rdi
    3a6b:	47                   	rex.RXB
    3a6c:	4c                   	rex.WR
    3a6d:	49                   	rex.WB
    3a6e:	42                   	rex.X
    3a6f:	43 5f                	rex.XB pop r15
    3a71:	55                   	push   rbp
    3a72:	53                   	push   rbx
    3a73:	45 5f                	rex.RB pop r15
    3a75:	49                   	rex.WB
    3a76:	45                   	rex.RB
    3a77:	43 5f                	rex.XB pop r15
    3a79:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f73b5 <_end+0x543f639d>
    3a80:	59                   	pop    rcx
    3a81:	50                   	push   rax
    3a82:	45 53                	rex.RB push r11
    3a84:	5f                   	pop    rdi
    3a85:	45 58                	rex.RB pop r8
    3a87:	54                   	push   rsp
    3a88:	20 30                	and    BYTE PTR [rax],dh
    3a8a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a8d:	49                   	rex.WB
    3a8e:	4e 54                	rex.WRX push rsp
    3a90:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    3a93:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    3a96:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3a99:	5f                   	pop    rdi
    3a9a:	5f                   	pop    rdi
    3a9b:	53                   	push   rbx
    3a9c:	49 5a                	rex.WB pop r10
    3a9e:	45                   	rex.RB
    3a9f:	4f                   	rex.WRXB
    3aa0:	46 5f                	rex.RX pop rdi
    3aa2:	50                   	push   rax
    3aa3:	4f                   	rex.WRXB
    3aa4:	49                   	rex.WB
    3aa5:	4e 54                	rex.WRX push rsp
    3aa7:	45 52                	rex.RB push r10
    3aa9:	5f                   	pop    rdi
    3aaa:	5f                   	pop    rdi
    3aab:	20 38                	and    BYTE PTR [rax],bh
    3aad:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3ab0:	46                   	rex.RX
    3ab1:	4c 54                	rex.WR push rsp
    3ab3:	36 34 5f             	ss xor al,0x5f
    3ab6:	45 50                	rex.RB push r8
    3ab8:	53                   	push   rbx
    3ab9:	49                   	rex.WB
    3aba:	4c                   	rex.WR
    3abb:	4f                   	rex.WRXB
    3abc:	4e 5f                	rex.WRX pop rdi
    3abe:	5f                   	pop    rdi
    3abf:	20 32                	and    BYTE PTR [rdx],dh
    3ac1:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    3ac4:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    3ac7:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    3acb:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33316e01 <_end+0x33115de9>
    3ad1:	30 38                	xor    BYTE PTR [rax],bh
    3ad3:	30 38                	xor    BYTE PTR [rax],bh
    3ad5:	34 37                	xor    al,0x37
    3ad7:	32 36                	xor    dh,BYTE PTR [rsi]
    3ad9:	33 33                	xor    esi,DWORD PTR [rbx]
    3adb:	33 36                	xor    esi,DWORD PTR [rsi]
    3add:	31 38                	xor    DWORD PTR [rax],edi
    3adf:	31 36                	xor    DWORD PTR [rsi],esi
    3ae1:	34 30                	xor    al,0x30
    3ae3:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    3ae7:	31 36                	xor    DWORD PTR [rsi],esi
    3ae9:	46                   	rex.RX
    3aea:	36 34 00             	ss xor al,0x0
    3aed:	5f                   	pop    rdi
    3aee:	49                   	rex.WB
    3aef:	4f 5f                	rex.WRXB pop r15
    3af1:	76 61                	jbe    3b54 <__FRAME_END__+0x3360>
    3af3:	5f                   	pop    rdi
    3af4:	6c                   	ins    BYTE PTR es:[rdi],dx
    3af5:	69 73 74 20 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f20
    3afc:	76 61                	jbe    3b5f <__FRAME_END__+0x336b>
    3afe:	5f                   	pop    rdi
    3aff:	6c                   	ins    BYTE PTR es:[rdi],dx
    3b00:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    3b07:	4c 54                	rex.WR push rsp
    3b09:	36 34 58             	ss xor al,0x58
    3b0c:	5f                   	pop    rdi
    3b0d:	4d                   	rex.WRB
    3b0e:	41                   	rex.B
    3b0f:	4e 54                	rex.WRX push rsp
    3b11:	5f                   	pop    rdi
    3b12:	44                   	rex.R
    3b13:	49                   	rex.WB
    3b14:	47 5f                	rex.RXB pop r15
    3b16:	5f                   	pop    rdi
    3b17:	20 36                	and    BYTE PTR [rsi],dh
    3b19:	34 00                	xor    al,0x0
    3b1b:	5f                   	pop    rdi
    3b1c:	44                   	rex.R
    3b1d:	45                   	rex.RB
    3b1e:	46                   	rex.RX
    3b1f:	41 55                	push   r13
    3b21:	4c 54                	rex.WR push rsp
    3b23:	5f                   	pop    rdi
    3b24:	53                   	push   rbx
    3b25:	4f 55                	rex.WRXB push r13
    3b27:	52                   	push   rdx
    3b28:	43                   	rex.XB
    3b29:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3b2d:	57                   	push   rdi
    3b2e:	43                   	rex.XB
    3b2f:	48                   	rex.W
    3b30:	41 52                	push   r10
    3b32:	5f                   	pop    rdi
    3b33:	4d                   	rex.WRB
    3b34:	41 58                	pop    r8
    3b36:	5f                   	pop    rdi
    3b37:	5f                   	pop    rdi
    3b38:	20 30                	and    BYTE PTR [rax],dh
    3b3a:	78 37                	js     3b73 <__FRAME_END__+0x337f>
    3b3c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    3b43:	00 5f 49 
    3b46:	4f 5f                	rex.WRXB pop r15
    3b48:	42 55                	rex.X push rbp
    3b4a:	46 53                	rex.RX push rbx
    3b4c:	49 5a                	rex.WB pop r10
    3b4e:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    3b51:	5f                   	pop    rdi
    3b52:	42 55                	rex.X push rbp
    3b54:	46 53                	rex.RX push rbx
    3b56:	49 5a                	rex.WB pop r10
    3b58:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3b5b:	46 53                	rex.RX push rbx
    3b5d:	46                   	rex.RX
    3b5e:	49                   	rex.WB
    3b5f:	4c                   	rex.WR
    3b60:	43                   	rex.XB
    3b61:	4e 54                	rex.WRX push rsp
    3b63:	5f                   	pop    rdi
    3b64:	54                   	push   rsp
    3b65:	5f                   	pop    rdi
    3b66:	54                   	push   rsp
    3b67:	59                   	pop    rcx
    3b68:	50                   	push   rax
    3b69:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3b6d:	53                   	push   rbx
    3b6e:	59                   	pop    rcx
    3b6f:	53                   	push   rbx
    3b70:	43                   	rex.XB
    3b71:	41                   	rex.B
    3b72:	4c                   	rex.WR
    3b73:	4c 5f                	rex.WR pop rdi
    3b75:	55                   	push   rbp
    3b76:	4c                   	rex.WR
    3b77:	4f                   	rex.WRXB
    3b78:	4e                   	rex.WRX
    3b79:	47 5f                	rex.RXB pop r15
    3b7b:	54                   	push   rsp
    3b7c:	59                   	pop    rcx
    3b7d:	50                   	push   rax
    3b7e:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3b82:	4f 5f                	rex.WRXB pop r15
    3b84:	42                   	rex.X
    3b85:	41                   	rex.B
    3b86:	44 5f                	rex.R pop rdi
    3b88:	53                   	push   rbx
    3b89:	45                   	rex.RB
    3b8a:	45                   	rex.RB
    3b8b:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    3b8e:	78 34                	js     3bc4 <__FRAME_END__+0x33d0>
    3b90:	30 30                	xor    BYTE PTR [rax],dh
    3b92:	30 00                	xor    BYTE PTR [rax],al
    3b94:	5f                   	pop    rdi
    3b95:	5f                   	pop    rdi
    3b96:	77 61                	ja     3bf9 <__FRAME_END__+0x3405>
    3b98:	72 6e                	jb     3c08 <__FRAME_END__+0x3414>
    3b9a:	61                   	(bad)  
    3b9b:	74 74                	je     3c11 <__FRAME_END__+0x341d>
    3b9d:	72 28                	jb     3bc7 <__FRAME_END__+0x33d3>
    3b9f:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ba0:	73 67                	jae    3c09 <__FRAME_END__+0x3415>
    3ba2:	29 20                	sub    DWORD PTR [rax],esp
    3ba4:	5f                   	pop    rdi
    3ba5:	5f                   	pop    rdi
    3ba6:	61                   	(bad)  
    3ba7:	74 74                	je     3c1d <__FRAME_END__+0x3429>
    3ba9:	72 69                	jb     3c14 <__FRAME_END__+0x3420>
    3bab:	62                   	(bad)  
    3bac:	75 74                	jne    3c22 <__FRAME_END__+0x342e>
    3bae:	65 5f                	gs pop rdi
    3bb0:	5f                   	pop    rdi
    3bb1:	28 28                	sub    BYTE PTR [rax],ch
    3bb3:	5f                   	pop    rdi
    3bb4:	5f                   	pop    rdi
    3bb5:	77 61                	ja     3c18 <__FRAME_END__+0x3424>
    3bb7:	72 6e                	jb     3c27 <__FRAME_END__+0x3433>
    3bb9:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    3bc0:	6d                   	ins    DWORD PTR es:[rdi],dx
    3bc1:	73 67                	jae    3c2a <__FRAME_END__+0x3436>
    3bc3:	29 29                	sub    DWORD PTR [rcx],ebp
    3bc5:	29 00                	sub    DWORD PTR [rax],eax
    3bc7:	5f                   	pop    rdi
    3bc8:	5f                   	pop    rdi
    3bc9:	49                   	rex.WB
    3bca:	4e 54                	rex.WRX push rsp
    3bcc:	5f                   	pop    rdi
    3bcd:	57                   	push   rdi
    3bce:	49                   	rex.WB
    3bcf:	44 54                	rex.R push rsp
    3bd1:	48 5f                	rex.W pop rdi
    3bd3:	5f                   	pop    rdi
    3bd4:	20 33                	and    BYTE PTR [rbx],dh
    3bd6:	32 00                	xor    al,BYTE PTR [rax]
    3bd8:	5f                   	pop    rdi
    3bd9:	5f                   	pop    rdi
    3bda:	4c                   	rex.WR
    3bdb:	44                   	rex.R
    3bdc:	42                   	rex.X
    3bdd:	4c 5f                	rex.WR pop rdi
    3bdf:	44                   	rex.R
    3be0:	45                   	rex.RB
    3be1:	43                   	rex.XB
    3be2:	49                   	rex.WB
    3be3:	4d                   	rex.WRB
    3be4:	41                   	rex.B
    3be5:	4c 5f                	rex.WR pop rdi
    3be7:	44                   	rex.R
    3be8:	49                   	rex.WB
    3be9:	47 5f                	rex.RXB pop r15
    3beb:	5f                   	pop    rdi
    3bec:	20 32                	and    BYTE PTR [rdx],dh
    3bee:	31 00                	xor    DWORD PTR [rax],eax
    3bf0:	5f                   	pop    rdi
    3bf1:	5f                   	pop    rdi
    3bf2:	47                   	rex.RXB
    3bf3:	43                   	rex.XB
    3bf4:	43 5f                	rex.XB pop r15
    3bf6:	41 54                	push   r12
    3bf8:	4f                   	rex.WRXB
    3bf9:	4d                   	rex.WRB
    3bfa:	49                   	rex.WB
    3bfb:	43 5f                	rex.XB pop r15
    3bfd:	50                   	push   rax
    3bfe:	4f                   	rex.WRXB
    3bff:	49                   	rex.WB
    3c00:	4e 54                	rex.WRX push rsp
    3c02:	45 52                	rex.RB push r10
    3c04:	5f                   	pop    rdi
    3c05:	4c                   	rex.WR
    3c06:	4f                   	rex.WRXB
    3c07:	43                   	rex.XB
    3c08:	4b 5f                	rex.WXB pop r15
    3c0a:	46 52                	rex.RX push rdx
    3c0c:	45                   	rex.RB
    3c0d:	45 20 32             	and    BYTE PTR [r10],r14b
    3c10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3c13:	73 74                	jae    3c89 <__FRAME_END__+0x3495>
    3c15:	75 62                	jne    3c79 <__FRAME_END__+0x3485>
    3c17:	5f                   	pop    rdi
    3c18:	5f                   	pop    rdi
    3c19:	5f                   	pop    rdi
    3c1a:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3c1d:	70 61                	jo     3c80 <__FRAME_END__+0x348c>
    3c1f:	74 5f                	je     3c80 <__FRAME_END__+0x348c>
    3c21:	62                   	(bad)  
    3c22:	64 66 6c             	fs data16 ins BYTE PTR es:[rdi],dx
    3c25:	75 73                	jne    3c9a <__FRAME_END__+0x34a6>
    3c27:	68 20 00 46 4f       	push   0x4f460020
    3c2c:	50                   	push   rax
    3c2d:	45                   	rex.RB
    3c2e:	4e 5f                	rex.WRX pop rdi
    3c30:	4d                   	rex.WRB
    3c31:	41 58                	pop    r8
    3c33:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
    3c36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c37:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    3c3a:	5f                   	pop    rdi
    3c3b:	5f                   	pop    rdi
    3c3c:	53                   	push   rbx
    3c3d:	45                   	rex.RB
    3c3e:	47 5f                	rex.RXB pop r15
    3c40:	46 53                	rex.RX push rbx
    3c42:	20 31                	and    BYTE PTR [rcx],dh
    3c44:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3c47:	50                   	push   rax
    3c48:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    3c4b:	67 73 29             	addr32 jae 3c77 <__FRAME_END__+0x3483>
    3c4e:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    3c51:	67 73 00             	addr32 jae 3c54 <__FRAME_END__+0x3460>
    3c54:	5f                   	pop    rdi
    3c55:	5f                   	pop    rdi
    3c56:	54                   	push   rsp
    3c57:	49                   	rex.WB
    3c58:	4d                   	rex.WRB
    3c59:	45 5f                	rex.RB pop r15
    3c5b:	54                   	push   rsp
    3c5c:	5f                   	pop    rdi
    3c5d:	54                   	push   rsp
    3c5e:	59                   	pop    rcx
    3c5f:	50                   	push   rax
    3c60:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3c64:	53                   	push   rbx
    3c65:	59                   	pop    rcx
    3c66:	53                   	push   rbx
    3c67:	43                   	rex.XB
    3c68:	41                   	rex.B
    3c69:	4c                   	rex.WR
    3c6a:	4c 5f                	rex.WR pop rdi
    3c6c:	53                   	push   rbx
    3c6d:	4c                   	rex.WR
    3c6e:	4f                   	rex.WRXB
    3c6f:	4e                   	rex.WRX
    3c70:	47 5f                	rex.RXB pop r15
    3c72:	54                   	push   rsp
    3c73:	59                   	pop    rcx
    3c74:	50                   	push   rax
    3c75:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3c79:	55                   	push   rbp
    3c7a:	49                   	rex.WB
    3c7b:	4e 54                	rex.WRX push rsp
    3c7d:	5f                   	pop    rdi
    3c7e:	46                   	rex.RX
    3c7f:	41 53                	push   r11
    3c81:	54                   	push   rsp
    3c82:	31 36                	xor    DWORD PTR [rsi],esi
    3c84:	5f                   	pop    rdi
    3c85:	54                   	push   rsp
    3c86:	59                   	pop    rcx
    3c87:	50                   	push   rax
    3c88:	45 5f                	rex.RB pop r15
    3c8a:	5f                   	pop    rdi
    3c8b:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3c8f:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3c93:	73 69                	jae    3cfe <__FRAME_END__+0x350a>
    3c95:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3c97:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3c9c:	74 00                	je     3c9e <__FRAME_END__+0x34aa>
    3c9e:	5f                   	pop    rdi
    3c9f:	5f                   	pop    rdi
    3ca0:	47                   	rex.RXB
    3ca1:	4c                   	rex.WR
    3ca2:	49                   	rex.WB
    3ca3:	42                   	rex.X
    3ca4:	43 5f                	rex.XB pop r15
    3ca6:	5f                   	pop    rdi
    3ca7:	20 32                	and    BYTE PTR [rdx],dh
    3ca9:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3cac:	4f 5f                	rex.WRXB pop r15
    3cae:	73 74                	jae    3d24 <__FRAME_END__+0x3530>
    3cb0:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3cb2:	75 74                	jne    3d28 <__FRAME_END__+0x3534>
    3cb4:	20 28                	and    BYTE PTR [rax],ch
    3cb6:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    3cb9:	4f 5f                	rex.WRXB pop r15
    3cbb:	46                   	rex.RX
    3cbc:	49                   	rex.WB
    3cbd:	4c                   	rex.WR
    3cbe:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    3cc1:	28 26                	sub    BYTE PTR [rsi],ah
    3cc3:	5f                   	pop    rdi
    3cc4:	49                   	rex.WB
    3cc5:	4f 5f                	rex.WRXB pop r15
    3cc7:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    3cca:	5f                   	pop    rdi
    3ccb:	73 74                	jae    3d41 <__FRAME_END__+0x354d>
    3ccd:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3ccf:	75 74                	jne    3d45 <__FRAME_END__+0x3551>
    3cd1:	5f                   	pop    rdi
    3cd2:	29 29                	sub    DWORD PTR [rcx],ebp
    3cd4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3cd7:	55                   	push   rbp
    3cd8:	53                   	push   rbx
    3cd9:	45 52                	rex.RB push r10
    3cdb:	5f                   	pop    rdi
    3cdc:	4c                   	rex.WR
    3cdd:	41                   	rex.B
    3cde:	42                   	rex.X
    3cdf:	45                   	rex.RB
    3ce0:	4c 5f                	rex.WR pop rdi
    3ce2:	50                   	push   rax
    3ce3:	52                   	push   rdx
    3ce4:	45                   	rex.RB
    3ce5:	46                   	rex.RX
    3ce6:	49 58                	rex.WB pop r8
    3ce8:	5f                   	pop    rdi
    3ce9:	5f                   	pop    rdi
    3cea:	20 00                	and    BYTE PTR [rax],al
    3cec:	5f                   	pop    rdi
    3ced:	49                   	rex.WB
    3cee:	4f 5f                	rex.WRXB pop r15
    3cf0:	70 69                	jo     3d5b <__FRAME_END__+0x3567>
    3cf2:	64 5f                	fs pop rdi
    3cf4:	74 20                	je     3d16 <__FRAME_END__+0x3522>
    3cf6:	5f                   	pop    rdi
    3cf7:	5f                   	pop    rdi
    3cf8:	70 69                	jo     3d63 <__FRAME_END__+0x356f>
    3cfa:	64 5f                	fs pop rdi
    3cfc:	74 00                	je     3cfe <__FRAME_END__+0x350a>
    3cfe:	5f                   	pop    rdi
    3cff:	5f                   	pop    rdi
    3d00:	67 6c                	ins    BYTE PTR es:[edi],dx
    3d02:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
    3d09:	72 6f                	jb     3d7a <__FRAME_END__+0x3586>
    3d0b:	5f                   	pop    rdi
    3d0c:	77 61                	ja     3d6f <__FRAME_END__+0x357b>
    3d0e:	72 6e                	jb     3d7e <__FRAME_END__+0x358a>
    3d10:	69 6e 67 31 28 6d 65 	imul   ebp,DWORD PTR [rsi+0x67],0x656d2831
    3d17:	73 73                	jae    3d8c <__FRAME_END__+0x3598>
    3d19:	61                   	(bad)  
    3d1a:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
    3d1e:	5f                   	pop    rdi
    3d1f:	50                   	push   rax
    3d20:	72 61                	jb     3d83 <__FRAME_END__+0x358f>
    3d22:	67 6d                	ins    DWORD PTR es:[edi],dx
    3d24:	61                   	(bad)  
    3d25:	20 28                	and    BYTE PTR [rax],ch
    3d27:	23 6d 65             	and    ebp,DWORD PTR [rbp+0x65]
    3d2a:	73 73                	jae    3d9f <__FRAME_END__+0x35ab>
    3d2c:	61                   	(bad)  
    3d2d:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
    3d31:	5f                   	pop    rdi
    3d32:	5f                   	pop    rdi
    3d33:	47                   	rex.RXB
    3d34:	43                   	rex.XB
    3d35:	43 5f                	rex.XB pop r15
    3d37:	41 54                	push   r12
    3d39:	4f                   	rex.WRXB
    3d3a:	4d                   	rex.WRB
    3d3b:	49                   	rex.WB
    3d3c:	43 5f                	rex.XB pop r15
    3d3e:	43                   	rex.XB
    3d3f:	48                   	rex.W
    3d40:	41 52                	push   r10
    3d42:	33 32                	xor    esi,DWORD PTR [rdx]
    3d44:	5f                   	pop    rdi
    3d45:	54                   	push   rsp
    3d46:	5f                   	pop    rdi
    3d47:	4c                   	rex.WR
    3d48:	4f                   	rex.WRXB
    3d49:	43                   	rex.XB
    3d4a:	4b 5f                	rex.WXB pop r15
    3d4c:	46 52                	rex.RX push rdx
    3d4e:	45                   	rex.RB
    3d4f:	45 20 32             	and    BYTE PTR [r10],r14b
    3d52:	00 5f 6f             	add    BYTE PTR [rdi+0x6f],bl
    3d55:	6c                   	ins    BYTE PTR es:[rdi],dx
    3d56:	64 5f                	fs pop rdi
    3d58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d59:	66 66 73 65          	data16 data16 jae 3dc2 <__FRAME_END__+0x35ce>
    3d5d:	74 00                	je     3d5f <__FRAME_END__+0x356b>
    3d5f:	5f                   	pop    rdi
    3d60:	49                   	rex.WB
    3d61:	4f 5f                	rex.WRXB pop r15
    3d63:	46                   	rex.RX
    3d64:	49                   	rex.WB
    3d65:	4c                   	rex.WR
    3d66:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3d6a:	4f 5f                	rex.WRXB pop r15
    3d6c:	55                   	push   rbp
    3d6d:	4e                   	rex.WRX
    3d6e:	42 55                	rex.X push rbp
    3d70:	46                   	rex.RX
    3d71:	46                   	rex.RX
    3d72:	45 52                	rex.RB push r10
    3d74:	45                   	rex.RB
    3d75:	44 20 32             	and    BYTE PTR [rdx],r14b
    3d78:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d7b:	43                   	rex.XB
    3d7c:	48                   	rex.W
    3d7d:	41 52                	push   r10
    3d7f:	5f                   	pop    rdi
    3d80:	42                   	rex.X
    3d81:	49 54                	rex.WB push r12
    3d83:	5f                   	pop    rdi
    3d84:	5f                   	pop    rdi
    3d85:	20 38                	and    BYTE PTR [rax],bh
    3d87:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d8a:	43                   	rex.XB
    3d8b:	4c                   	rex.WR
    3d8c:	4f                   	rex.WRXB
    3d8d:	43                   	rex.XB
    3d8e:	4b 5f                	rex.WXB pop r15
    3d90:	54                   	push   rsp
    3d91:	5f                   	pop    rdi
    3d92:	54                   	push   rsp
    3d93:	59                   	pop    rcx
    3d94:	50                   	push   rax
    3d95:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3d99:	53                   	push   rbx
    3d9a:	59                   	pop    rcx
    3d9b:	53                   	push   rbx
    3d9c:	43                   	rex.XB
    3d9d:	41                   	rex.B
    3d9e:	4c                   	rex.WR
    3d9f:	4c 5f                	rex.WR pop rdi
    3da1:	53                   	push   rbx
    3da2:	4c                   	rex.WR
    3da3:	4f                   	rex.WRXB
    3da4:	4e                   	rex.WRX
    3da5:	47 5f                	rex.RXB pop r15
    3da7:	54                   	push   rsp
    3da8:	59                   	pop    rcx
    3da9:	50                   	push   rax
    3daa:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3dae:	41 54                	push   r12
    3db0:	4f                   	rex.WRXB
    3db1:	4d                   	rex.WRB
    3db2:	49                   	rex.WB
    3db3:	43 5f                	rex.XB pop r15
    3db5:	48                   	rex.W
    3db6:	4c                   	rex.WR
    3db7:	45 5f                	rex.RB pop r15
    3db9:	41                   	rex.B
    3dba:	43 51                	rex.XB push r9
    3dbc:	55                   	push   rbp
    3dbd:	49 52                	rex.WB push r10
    3dbf:	45 20 36             	and    BYTE PTR [r14],r14b
    3dc2:	35 35 33 36 00       	xor    eax,0x363335
    3dc7:	5f                   	pop    rdi
    3dc8:	49                   	rex.WB
    3dc9:	4f 5f                	rex.WRXB pop r15
    3dcb:	73 73                	jae    3e40 <__FRAME_END__+0x364c>
    3dcd:	69 7a 65 5f 74 20 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f20745f
    3dd4:	5f                   	pop    rdi
    3dd5:	73 73                	jae    3e4a <__FRAME_END__+0x3656>
    3dd7:	69 7a 65 5f 74 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f00745f
    3dde:	5f                   	pop    rdi
    3ddf:	53                   	push   rbx
    3de0:	54                   	push   rsp
    3de1:	44                   	rex.R
    3de2:	43 5f                	rex.XB pop r15
    3de4:	48                   	rex.W
    3de5:	4f 53                	rex.WRXB push r11
    3de7:	54                   	push   rsp
    3de8:	45                   	rex.RB
    3de9:	44 5f                	rex.R pop rdi
    3deb:	5f                   	pop    rdi
    3dec:	20 31                	and    BYTE PTR [rcx],dh
    3dee:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3df1:	53                   	push   rbx
    3df2:	49 5a                	rex.WB pop r10
    3df4:	45 5f                	rex.RB pop r15
    3df6:	57                   	push   rdi
    3df7:	49                   	rex.WB
    3df8:	44 54                	rex.R push rsp
    3dfa:	48 5f                	rex.W pop rdi
    3dfc:	5f                   	pop    rdi
    3dfd:	20 36                	and    BYTE PTR [rsi],dh
    3dff:	34 00                	xor    al,0x0
    3e01:	5f                   	pop    rdi
    3e02:	5f                   	pop    rdi
    3e03:	52                   	push   rdx
    3e04:	45                   	rex.RB
    3e05:	44                   	rex.R
    3e06:	49 52                	rex.WB push r10
    3e08:	45                   	rex.RB
    3e09:	43 54                	rex.XB push r12
    3e0b:	5f                   	pop    rdi
    3e0c:	4c                   	rex.WR
    3e0d:	44                   	rex.R
    3e0e:	42                   	rex.X
    3e0f:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    3e13:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e14:	65 2c 70             	gs sub al,0x70
    3e17:	72 6f                	jb     3e88 <__FRAME_END__+0x3694>
    3e19:	74 6f                	je     3e8a <__FRAME_END__+0x3696>
    3e1b:	2c 61                	sub    al,0x61
    3e1d:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e1e:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    3e25:	52                   	push   rdx
    3e26:	45                   	rex.RB
    3e27:	44                   	rex.R
    3e28:	49 52                	rex.WB push r10
    3e2a:	45                   	rex.RB
    3e2b:	43 54                	rex.XB push r12
    3e2d:	20 28                	and    BYTE PTR [rax],ch
    3e2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e30:	61                   	(bad)  
    3e31:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e32:	65 2c 20             	gs sub al,0x20
    3e35:	70 72                	jo     3ea9 <__FRAME_END__+0x36b5>
    3e37:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e38:	74 6f                	je     3ea9 <__FRAME_END__+0x36b5>
    3e3a:	2c 20                	sub    al,0x20
    3e3c:	61                   	(bad)  
    3e3d:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e3e:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    3e45:	61                   	(bad)  
    3e46:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e47:	77 61                	ja     3eaa <__FRAME_END__+0x36b6>
    3e49:	79 73                	jns    3ebe <__FRAME_END__+0x36ca>
    3e4b:	5f                   	pop    rdi
    3e4c:	69 6e 6c 69 6e 65 00 	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
    3e53:	5f                   	pop    rdi
    3e54:	5f                   	pop    rdi
    3e55:	68 61 73 5f 69       	push   0x695f7361
    3e5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e5b:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e5f:	65 28 53 54          	sub    BYTE PTR gs:[rbx+0x54],dl
    3e63:	52                   	push   rdx
    3e64:	29 20                	sub    DWORD PTR [rax],esp
    3e66:	5f                   	pop    rdi
    3e67:	5f                   	pop    rdi
    3e68:	68 61 73 5f 69       	push   0x695f7361
    3e6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e6e:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e72:	65 5f                	gs pop rdi
    3e74:	5f                   	pop    rdi
    3e75:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
    3e78:	52                   	push   rdx
    3e79:	29 00                	sub    DWORD PTR [rax],eax
    3e7b:	5f                   	pop    rdi
    3e7c:	5f                   	pop    rdi
    3e7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e7e:	65 65 64 5f          	gs gs fs pop rdi
    3e82:	5f                   	pop    rdi
    3e83:	5f                   	pop    rdi
    3e84:	76 61                	jbe    3ee7 <__FRAME_END__+0x36f3>
    3e86:	5f                   	pop    rdi
    3e87:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e88:	69 73 74 20 00 5f 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f5f0020
    3e8f:	41 53                	push   r11
    3e91:	4d                   	rex.WRB
    3e92:	4e                   	rex.WRX
    3e93:	41                   	rex.B
    3e94:	4d                   	rex.WRB
    3e95:	45 32 28             	xor    r13b,BYTE PTR [r8]
    3e98:	70 72                	jo     3f0c <__FRAME_END__+0x3718>
    3e9a:	65 66 69 78 2c 63 6e 	imul   di,WORD PTR gs:[rax+0x2c],0x6e63
    3ea1:	61                   	(bad)  
    3ea2:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ea3:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    3ea6:	5f                   	pop    rdi
    3ea7:	5f                   	pop    rdi
    3ea8:	53                   	push   rbx
    3ea9:	54                   	push   rsp
    3eaa:	52                   	push   rdx
    3eab:	49                   	rex.WB
    3eac:	4e                   	rex.WRX
    3ead:	47 20 28             	rex.RXB and BYTE PTR [r8],r13b
    3eb0:	70 72                	jo     3f24 <__FRAME_END__+0x3730>
    3eb2:	65 66 69 78 29 20 63 	imul   di,WORD PTR gs:[rax+0x29],0x6320
    3eb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3eba:	61                   	(bad)  
    3ebb:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ebc:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
    3ec0:	4f 5f                	rex.WRXB pop r15
    3ec2:	53                   	push   rbx
    3ec3:	43                   	rex.XB
    3ec4:	49                   	rex.WB
    3ec5:	45                   	rex.RB
    3ec6:	4e 54                	rex.WRX push rsp
    3ec8:	49                   	rex.WB
    3ec9:	46                   	rex.RX
    3eca:	49                   	rex.WB
    3ecb:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    3ece:	34 30                	xor    al,0x30
    3ed0:	30 30                	xor    BYTE PTR [rax],dh
    3ed2:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3ed5:	4f 5f                	rex.WRXB pop r15
    3ed7:	70 65                	jo     3f3e <__FRAME_END__+0x374a>
    3ed9:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    3ede:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3edf:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ee0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3ee1:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3ee4:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    3ee8:	70 29                	jo     3f13 <__FRAME_END__+0x371f>
    3eea:	20 28                	and    BYTE PTR [rax],ch
    3eec:	5f                   	pop    rdi
    3eed:	49                   	rex.WB
    3eee:	4f 5f                	rex.WRXB pop r15
    3ef0:	42                   	rex.X
    3ef1:	45 20 28             	and    BYTE PTR [r8],r13b
    3ef4:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3ef7:	70 29                	jo     3f22 <__FRAME_END__+0x372e>
    3ef9:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3efe:	5f                   	pop    rdi
    3eff:	72 65                	jb     3f66 <__FRAME_END__+0x3772>
    3f01:	61                   	(bad)  
    3f02:	64 5f                	fs pop rdi
    3f04:	70 74                	jo     3f7a <__FRAME_END__+0x3786>
    3f06:	72 20                	jb     3f28 <__FRAME_END__+0x3734>
    3f08:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    3f0e:	70 29                	jo     3f39 <__FRAME_END__+0x3745>
    3f10:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f15:	5f                   	pop    rdi
    3f16:	72 65                	jb     3f7d <__FRAME_END__+0x3789>
    3f18:	61                   	(bad)  
    3f19:	64 5f                	fs pop rdi
    3f1b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3f1d:	64 2c 20             	fs sub al,0x20
    3f20:	30 29                	xor    BYTE PTR [rcx],ch
    3f22:	20 26                	and    BYTE PTR [rsi],ah
    3f24:	26 20 5f 5f          	and    BYTE PTR es:[rdi+0x5f],bl
    3f28:	75 6e                	jne    3f98 <__FRAME_END__+0x37a4>
    3f2a:	64 65 72 66          	fs gs jb 3f94 <__FRAME_END__+0x37a0>
    3f2e:	6c                   	ins    BYTE PTR es:[rdi],dx
    3f2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f30:	77 20                	ja     3f52 <__FRAME_END__+0x375e>
    3f32:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3f35:	70 29                	jo     3f60 <__FRAME_END__+0x376c>
    3f37:	20 3d 3d 20 45 4f    	and    BYTE PTR [rip+0x4f45203d],bh        # 4f455f7a <_end+0x4f254f62>
    3f3d:	46 20 3f             	rex.RX and BYTE PTR [rdi],r15b
    3f40:	20 45 4f             	and    BYTE PTR [rbp+0x4f],al
    3f43:	46 20 3a             	rex.RX and BYTE PTR [rdx],r15b
    3f46:	20 2a                	and    BYTE PTR [rdx],ch
    3f48:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    3f4b:	73 69                	jae    3fb6 <__FRAME_END__+0x37c2>
    3f4d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3f4f:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3f54:	61                   	(bad)  
    3f55:	72 20                	jb     3f77 <__FRAME_END__+0x3783>
    3f57:	2a 29                	sub    ch,BYTE PTR [rcx]
    3f59:	20 28                	and    BYTE PTR [rax],ch
    3f5b:	5f                   	pop    rdi
    3f5c:	66 70 29             	data16 jo 3f88 <__FRAME_END__+0x3794>
    3f5f:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f64:	5f                   	pop    rdi
    3f65:	72 65                	jb     3fcc <__FRAME_END__+0x37d8>
    3f67:	61                   	(bad)  
    3f68:	64 5f                	fs pop rdi
    3f6a:	70 74                	jo     3fe0 <__FRAME_END__+0x37ec>
    3f6c:	72 29                	jb     3f97 <__FRAME_END__+0x37a3>
    3f6e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3f71:	4c                   	rex.WR
    3f72:	4f                   	rex.WRXB
    3f73:	4e                   	rex.WRX
    3f74:	47 5f                	rex.RXB pop r15
    3f76:	57                   	push   rdi
    3f77:	49                   	rex.WB
    3f78:	44 54                	rex.R push rsp
    3f7a:	48 5f                	rex.W pop rdi
    3f7c:	5f                   	pop    rdi
    3f7d:	20 36                	and    BYTE PTR [rsi],dh
    3f7f:	34 00                	xor    al,0x0
    3f81:	5f                   	pop    rdi
    3f82:	5f                   	pop    rdi
    3f83:	55                   	push   rbp
    3f84:	49                   	rex.WB
    3f85:	4e 54                	rex.WRX push rsp
    3f87:	36 34 5f             	ss xor al,0x5f
    3f8a:	4d                   	rex.WRB
    3f8b:	41 58                	pop    r8
    3f8d:	5f                   	pop    rdi
    3f8e:	5f                   	pop    rdi
    3f8f:	20 30                	and    BYTE PTR [rax],dh
    3f91:	78 66                	js     3ff9 <__FRAME_END__+0x3805>
    3f93:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3f9a:	66 66 66 66 66 66 66 
    3fa1:	66 55                	push   bp
    3fa3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    3fa7:	53                   	push   rbx
    3fa8:	51                   	push   rcx
    3fa9:	55                   	push   rbp
    3faa:	41                   	rex.B
    3fab:	44 5f                	rex.R pop rdi
    3fad:	54                   	push   rsp
    3fae:	59                   	pop    rcx
    3faf:	50                   	push   rax
    3fb0:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3fb5:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3fb9:	74 00                	je     3fbb <__FRAME_END__+0x37c7>
    3fbb:	5f                   	pop    rdi
    3fbc:	5f                   	pop    rdi
    3fbd:	55                   	push   rbp
    3fbe:	53                   	push   rbx
    3fbf:	45 5f                	rex.RB pop r15
    3fc1:	58                   	pop    rax
    3fc2:	4f 50                	rex.WRXB push r8
    3fc4:	45                   	rex.RB
    3fc5:	4e 32 4b 58          	rex.WRX xor r9b,BYTE PTR [rbx+0x58]
    3fc9:	53                   	push   rbx
    3fca:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    3fce:	61                   	(bad)  
    3fcf:	74 74                	je     4045 <__FRAME_END__+0x3851>
    3fd1:	72 69                	jb     403c <__FRAME_END__+0x3848>
    3fd3:	62                   	(bad)  
    3fd4:	75 74                	jne    404a <__FRAME_END__+0x3856>
    3fd6:	65 5f                	gs pop rdi
    3fd8:	61                   	(bad)  
    3fd9:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fda:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fdc:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    3fdf:	69 7a 65 5f 5f 28 70 	imul   edi,DWORD PTR [rdx+0x65],0x70285f5f
    3fe6:	61                   	(bad)  
    3fe7:	72 61                	jb     404a <__FRAME_END__+0x3856>
    3fe9:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fea:	73 29                	jae    4015 <__FRAME_END__+0x3821>
    3fec:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3fef:	61                   	(bad)  
    3ff0:	74 74                	je     4066 <__FRAME_END__+0x3872>
    3ff2:	72 69                	jb     405d <__FRAME_END__+0x3869>
    3ff4:	62                   	(bad)  
    3ff5:	75 74                	jne    406b <__FRAME_END__+0x3877>
    3ff7:	65 5f                	gs pop rdi
    3ff9:	5f                   	pop    rdi
    3ffa:	20 28                	and    BYTE PTR [rax],ch
    3ffc:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3fff:	61                   	(bad)  
    4000:	6c                   	ins    BYTE PTR es:[rdi],dx
    4001:	6c                   	ins    BYTE PTR es:[rdi],dx
    4002:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4003:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    4006:	69 7a 65 5f 5f 20 70 	imul   edi,DWORD PTR [rdx+0x65],0x70205f5f
    400d:	61                   	(bad)  
    400e:	72 61                	jb     4071 <__FRAME_END__+0x387d>
    4010:	6d                   	ins    DWORD PTR es:[rdi],dx
    4011:	73 29                	jae    403c <__FRAME_END__+0x3848>
    4013:	29 00                	sub    DWORD PTR [rax],eax
    4015:	5f                   	pop    rdi
    4016:	49                   	rex.WB
    4017:	4f 5f                	rex.WRXB pop r15
    4019:	77 69                	ja     4084 <__FRAME_END__+0x3890>
    401b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    401c:	74 5f                	je     407d <__FRAME_END__+0x3889>
    401e:	74 20                	je     4040 <__FRAME_END__+0x384c>
    4020:	77 69                	ja     408b <__FRAME_END__+0x3897>
    4022:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4023:	74 5f                	je     4084 <__FRAME_END__+0x3890>
    4025:	74 00                	je     4027 <__FRAME_END__+0x3833>
    4027:	5f                   	pop    rdi
    4028:	5f                   	pop    rdi
    4029:	6b 38 20             	imul   edi,DWORD PTR [rax],0x20
    402c:	31 00                	xor    DWORD PTR [rax],eax
    402e:	5f                   	pop    rdi
    402f:	5f                   	pop    rdi
    4030:	47                   	rex.RXB
    4031:	43                   	rex.XB
    4032:	43 5f                	rex.XB pop r15
    4034:	41 54                	push   r12
    4036:	4f                   	rex.WRXB
    4037:	4d                   	rex.WRB
    4038:	49                   	rex.WB
    4039:	43 5f                	rex.XB pop r15
    403b:	4c                   	rex.WR
    403c:	4c                   	rex.WR
    403d:	4f                   	rex.WRXB
    403e:	4e                   	rex.WRX
    403f:	47 5f                	rex.RXB pop r15
    4041:	4c                   	rex.WR
    4042:	4f                   	rex.WRXB
    4043:	43                   	rex.XB
    4044:	4b 5f                	rex.WXB pop r15
    4046:	46 52                	rex.RX push rdx
    4048:	45                   	rex.RB
    4049:	45 20 32             	and    BYTE PTR [r10],r14b
    404c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    404f:	44                   	rex.R
    4050:	45                   	rex.RB
    4051:	43                   	rex.XB
    4052:	36 34 5f             	ss xor al,0x5f
    4055:	4d                   	rex.WRB
    4056:	49                   	rex.WB
    4057:	4e 5f                	rex.WRX pop rdi
    4059:	45 58                	rex.RB pop r8
    405b:	50                   	push   rax
    405c:	5f                   	pop    rdi
    405d:	5f                   	pop    rdi
    405e:	20 28                	and    BYTE PTR [rax],ch
    4060:	2d 33 38 32 29       	sub    eax,0x29323833
    4065:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4068:	72 65                	jb     40cf <__FRAME_END__+0x38db>
    406a:	73 74                	jae    40e0 <__FRAME_END__+0x38ec>
    406c:	72 69                	jb     40d7 <__FRAME_END__+0x38e3>
    406e:	63 74 5f 61          	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
    4072:	72 72                	jb     40e6 <__FRAME_END__+0x38f2>
    4074:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    4077:	72 65                	jb     40de <__FRAME_END__+0x38ea>
    4079:	73 74                	jae    40ef <__FRAME_END__+0x38fb>
    407b:	72 69                	jb     40e6 <__FRAME_END__+0x38f2>
    407d:	63 74 00 5f          	movsxd esi,DWORD PTR [rax+rax*1+0x5f]
    4081:	5f                   	pop    rdi
    4082:	41 54                	push   r12
    4084:	4f                   	rex.WRXB
    4085:	4d                   	rex.WRB
    4086:	49                   	rex.WB
    4087:	43 5f                	rex.XB pop r15
    4089:	41                   	rex.B
    408a:	43 51                	rex.XB push r9
    408c:	5f                   	pop    rdi
    408d:	52                   	push   rdx
    408e:	45                   	rex.RB
    408f:	4c 20 34 00          	rex.WR and BYTE PTR [rax+rax*1],r14b
    4093:	5f                   	pop    rdi
    4094:	49                   	rex.WB
    4095:	4f 5f                	rex.WRXB pop r15
    4097:	66 70 6f             	data16 jo 4109 <__FRAME_END__+0x3915>
    409a:	73 5f                	jae    40fb <__FRAME_END__+0x3907>
    409c:	74 20                	je     40be <__FRAME_END__+0x38ca>
    409e:	5f                   	pop    rdi
    409f:	47 5f                	rex.RXB pop r15
    40a1:	66 70 6f             	data16 jo 4113 <__FRAME_END__+0x391f>
    40a4:	73 5f                	jae    4105 <__FRAME_END__+0x3911>
    40a6:	74 00                	je     40a8 <__FRAME_END__+0x38b4>
    40a8:	5f                   	pop    rdi
    40a9:	5f                   	pop    rdi
    40aa:	61                   	(bad)  
    40ab:	74 74                	je     4121 <__FRAME_END__+0x392d>
    40ad:	72 69                	jb     4118 <__FRAME_END__+0x3924>
    40af:	62                   	(bad)  
    40b0:	75 74                	jne    4126 <__FRAME_END__+0x3932>
    40b2:	65 5f                	gs pop rdi
    40b4:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    40b6:	72 6d                	jb     4125 <__FRAME_END__+0x3931>
    40b8:	61                   	(bad)  
    40b9:	74 5f                	je     411a <__FRAME_END__+0x3926>
    40bb:	73 74                	jae    4131 <__FRAME_END__+0x393d>
    40bd:	72 66                	jb     4125 <__FRAME_END__+0x3931>
    40bf:	6d                   	ins    DWORD PTR es:[rdi],dx
    40c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40c2:	5f                   	pop    rdi
    40c3:	5f                   	pop    rdi
    40c4:	28 61 2c             	sub    BYTE PTR [rcx+0x2c],ah
    40c7:	62                   	(bad)  
    40c8:	29 20                	sub    DWORD PTR [rax],esp
    40ca:	5f                   	pop    rdi
    40cb:	5f                   	pop    rdi
    40cc:	61                   	(bad)  
    40cd:	74 74                	je     4143 <__FRAME_END__+0x394f>
    40cf:	72 69                	jb     413a <__FRAME_END__+0x3946>
    40d1:	62                   	(bad)  
    40d2:	75 74                	jne    4148 <__FRAME_END__+0x3954>
    40d4:	65 5f                	gs pop rdi
    40d6:	5f                   	pop    rdi
    40d7:	20 28                	and    BYTE PTR [rax],ch
    40d9:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    40dc:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    40de:	72 6d                	jb     414d <__FRAME_END__+0x3959>
    40e0:	61                   	(bad)  
    40e1:	74 5f                	je     4142 <__FRAME_END__+0x394e>
    40e3:	5f                   	pop    rdi
    40e4:	20 28                	and    BYTE PTR [rax],ch
    40e6:	5f                   	pop    rdi
    40e7:	5f                   	pop    rdi
    40e8:	73 74                	jae    415e <__FRAME_END__+0x396a>
    40ea:	72 66                	jb     4152 <__FRAME_END__+0x395e>
    40ec:	6d                   	ins    DWORD PTR es:[rdi],dx
    40ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40ef:	5f                   	pop    rdi
    40f0:	5f                   	pop    rdi
    40f1:	2c 20                	sub    al,0x20
    40f3:	61                   	(bad)  
    40f4:	2c 20                	sub    al,0x20
    40f6:	62                   	(bad)  
    40f7:	29 29                	sub    DWORD PTR [rcx],ebp
    40f9:	29 00                	sub    DWORD PTR [rax],eax
    40fb:	5f                   	pop    rdi
    40fc:	5f                   	pop    rdi
    40fd:	44                   	rex.R
    40fe:	45                   	rex.RB
    40ff:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    4102:	5f                   	pop    rdi
    4103:	4d                   	rex.WRB
    4104:	49                   	rex.WB
    4105:	4e 5f                	rex.WRX pop rdi
    4107:	45 58                	rex.RB pop r8
    4109:	50                   	push   rax
    410a:	5f                   	pop    rdi
    410b:	5f                   	pop    rdi
    410c:	20 28                	and    BYTE PTR [rax],ch
    410e:	2d 39 34 29 00       	sub    eax,0x293439
    4113:	5f                   	pop    rdi
    4114:	49                   	rex.WB
    4115:	4f 5f                	rex.WRXB pop r15
    4117:	46                   	rex.RX
    4118:	49 58                	rex.WB pop r8
    411a:	45                   	rex.RB
    411b:	44 20 30             	and    BYTE PTR [rax],r14b
    411e:	31 30                	xor    DWORD PTR [rax],esi
    4120:	30 30                	xor    BYTE PTR [rax],dh
    4122:	30 00                	xor    BYTE PTR [rax],al
    4124:	5f                   	pop    rdi
    4125:	5f                   	pop    rdi
    4126:	49                   	rex.WB
    4127:	4e 54                	rex.WRX push rsp
    4129:	36 34 5f             	ss xor al,0x5f
    412c:	54                   	push   rsp
    412d:	59                   	pop    rcx
    412e:	50                   	push   rax
    412f:	45 5f                	rex.RB pop r15
    4131:	5f                   	pop    rdi
    4132:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4136:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    413a:	74 00                	je     413c <__FRAME_END__+0x3948>
    413c:	5f                   	pop    rdi
    413d:	5f                   	pop    rdi
    413e:	46                   	rex.RX
    413f:	4c 54                	rex.WR push rsp
    4141:	5f                   	pop    rdi
    4142:	4d                   	rex.WRB
    4143:	49                   	rex.WB
    4144:	4e 5f                	rex.WRX pop rdi
    4146:	5f                   	pop    rdi
    4147:	20 31                	and    BYTE PTR [rcx],dh
    4149:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    414c:	35 34 39 34 33       	xor    eax,0x33343934
    4151:	35 30 38 32 32       	xor    eax,0x32323830
    4156:	32 38                	xor    bh,BYTE PTR [rax]
    4158:	37                   	(bad)  
    4159:	35 30 37 39 36       	xor    eax,0x36393730
    415e:	38 37                	cmp    BYTE PTR [rdi],dh
    4160:	33 36                	xor    esi,DWORD PTR [rsi]
    4162:	35 33 37 32 32       	xor    eax,0x32323733
    4167:	32 32                	xor    dh,BYTE PTR [rdx]
    4169:	34 35                	xor    al,0x35
    416b:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    416f:	33 38                	xor    edi,DWORD PTR [rax]
    4171:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    4175:	55                   	push   rbp
    4176:	36 34 5f             	ss xor al,0x5f
    4179:	54                   	push   rsp
    417a:	59                   	pop    rcx
    417b:	50                   	push   rax
    417c:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    4180:	73 69                	jae    41eb <__FRAME_END__+0x39f7>
    4182:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4184:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    418a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    418e:	74 00                	je     4190 <__FRAME_END__+0x399c>
    4190:	5f                   	pop    rdi
    4191:	73 62                	jae    41f5 <__FRAME_END__+0x3a01>
    4193:	75 66                	jne    41fb <__FRAME_END__+0x3a07>
    4195:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4198:	4f 5f                	rex.WRXB pop r15
    419a:	76 61                	jbe    41fd <__FRAME_END__+0x3a09>
    419c:	5f                   	pop    rdi
    419d:	6c                   	ins    BYTE PTR es:[rdi],dx
    419e:	69 73 74 00 73 74 64 	imul   esi,DWORD PTR [rbx+0x74],0x64747300
    41a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    41a6:	75 74                	jne    421c <__FRAME_END__+0x3a28>
    41a8:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    41ab:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    41ad:	75 74                	jne    4223 <__FRAME_END__+0x3a2f>
    41af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41b2:	55                   	push   rbp
    41b3:	53                   	push   rbx
    41b4:	45 5f                	rex.RB pop r15
    41b6:	47                   	rex.RXB
    41b7:	4e 55                	rex.WRX push rbp
    41b9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41bc:	54                   	push   rsp
    41bd:	49                   	rex.WB
    41be:	4d                   	rex.WRB
    41bf:	45 52                	rex.RB push r10
    41c1:	5f                   	pop    rdi
    41c2:	54                   	push   rsp
    41c3:	5f                   	pop    rdi
    41c4:	54                   	push   rsp
    41c5:	59                   	pop    rcx
    41c6:	50                   	push   rax
    41c7:	45 20 76 6f          	and    BYTE PTR [r14+0x6f],r14b
    41cb:	69 64 20 2a 00 5f 49 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x4f495f00
    41d2:	4f 
    41d3:	5f                   	pop    rdi
    41d4:	77 72                	ja     4248 <__FRAME_END__+0x3a54>
    41d6:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
    41dd:	00 
    41de:	5f                   	pop    rdi
    41df:	5f                   	pop    rdi
    41e0:	46 58                	rex.RX pop rax
    41e2:	53                   	push   rbx
    41e3:	52                   	push   rdx
    41e4:	5f                   	pop    rdi
    41e5:	5f                   	pop    rdi
    41e6:	20 31                	and    BYTE PTR [rcx],dh
    41e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41eb:	4c                   	rex.WR
    41ec:	45                   	rex.RB
    41ed:	41                   	rex.B
    41ee:	46 5f                	rex.RX pop rdi
    41f0:	41 54                	push   r12
    41f2:	54                   	push   rsp
    41f3:	52                   	push   rdx
    41f4:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    41f7:	61                   	(bad)  
    41f8:	74 74                	je     426e <__FRAME_END__+0x3a7a>
    41fa:	72 69                	jb     4265 <__FRAME_END__+0x3a71>
    41fc:	62                   	(bad)  
    41fd:	75 74                	jne    4273 <__FRAME_END__+0x3a7f>
    41ff:	65 5f                	gs pop rdi
    4201:	5f                   	pop    rdi
    4202:	20 28                	and    BYTE PTR [rax],ch
    4204:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4207:	6c                   	ins    BYTE PTR es:[rdi],dx
    4208:	65 61                	gs (bad) 
    420a:	66 5f                	pop    di
    420c:	5f                   	pop    rdi
    420d:	29 29                	sub    DWORD PTR [rcx],ebp
    420f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4212:	49                   	rex.WB
    4213:	4e 54                	rex.WRX push rsp
    4215:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    4218:	59                   	pop    rcx
    4219:	50                   	push   rax
    421a:	45 5f                	rex.RB pop r15
    421c:	5f                   	pop    rdi
    421d:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    4220:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4222:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    4227:	61                   	(bad)  
    4228:	72 00                	jb     422a <__FRAME_END__+0x3a36>
    422a:	5f                   	pop    rdi
    422b:	5f                   	pop    rdi
    422c:	49                   	rex.WB
    422d:	4e 54                	rex.WRX push rsp
    422f:	5f                   	pop    rdi
    4230:	4c                   	rex.WR
    4231:	45                   	rex.RB
    4232:	41 53                	push   r11
    4234:	54                   	push   rsp
    4235:	33 32                	xor    esi,DWORD PTR [rdx]
    4237:	5f                   	pop    rdi
    4238:	57                   	push   rdi
    4239:	49                   	rex.WB
    423a:	44 54                	rex.R push rsp
    423c:	48 5f                	rex.W pop rdi
    423e:	5f                   	pop    rdi
    423f:	20 33                	and    BYTE PTR [rbx],dh
    4241:	32 00                	xor    al,BYTE PTR [rax]
    4243:	5f                   	pop    rdi
    4244:	5f                   	pop    rdi
    4245:	53                   	push   rbx
    4246:	59                   	pop    rcx
    4247:	53                   	push   rbx
    4248:	43                   	rex.XB
    4249:	41                   	rex.B
    424a:	4c                   	rex.WR
    424b:	4c 5f                	rex.WR pop rdi
    424d:	53                   	push   rbx
    424e:	4c                   	rex.WR
    424f:	4f                   	rex.WRXB
    4250:	4e                   	rex.WRX
    4251:	47 5f                	rex.RXB pop r15
    4253:	54                   	push   rsp
    4254:	59                   	pop    rcx
    4255:	50                   	push   rax
    4256:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    425a:	53                   	push   rbx
    425b:	4c                   	rex.WR
    425c:	4f                   	rex.WRXB
    425d:	4e                   	rex.WRX
    425e:	47 57                	rex.RXB push r15
    4260:	4f 52                	rex.WRXB push r10
    4262:	44 5f                	rex.R pop rdi
    4264:	54                   	push   rsp
    4265:	59                   	pop    rcx
    4266:	50                   	push   rax
    4267:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    426b:	55                   	push   rbp
    426c:	49                   	rex.WB
    426d:	4e 54                	rex.WRX push rsp
    426f:	4d                   	rex.WRB
    4270:	41 58                	pop    r8
    4272:	5f                   	pop    rdi
    4273:	4d                   	rex.WRB
    4274:	41 58                	pop    r8
    4276:	5f                   	pop    rdi
    4277:	5f                   	pop    rdi
    4278:	20 30                	and    BYTE PTR [rax],dh
    427a:	78 66                	js     42e2 <__FRAME_END__+0x3aee>
    427c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    4283:	66 66 66 66 66 66 66 
    428a:	66 55                	push   bp
    428c:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    4290:	67 6c                	ins    BYTE PTR es:[edi],dx
    4292:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    4299:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    429a:	67 5f                	addr32 pop rdi
    429c:	70 72                	jo     4310 <__FRAME_END__+0x3b1c>
    429e:	65 72 65             	gs jb  4306 <__FRAME_END__+0x3b12>
    42a1:	71 28                	jno    42cb <__FRAME_END__+0x3ad7>
    42a3:	6d                   	ins    DWORD PTR es:[rdi],dx
    42a4:	61                   	(bad)  
    42a5:	6a 2c                	push   0x2c
    42a7:	6d                   	ins    DWORD PTR es:[rdi],dx
    42a8:	69 6e 29 20 30 00 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f003020
    42af:	49                   	rex.WB
    42b0:	4f 5f                	rex.WRXB pop r15
    42b2:	62 61                	(bad)  
    42b4:	63 6b 75             	movsxd ebp,DWORD PTR [rbx+0x75]
    42b7:	70 5f                	jo     4318 <__FRAME_END__+0x3b24>
    42b9:	62 61                	(bad)  
    42bb:	73 65                	jae    4322 <__FRAME_END__+0x3b2e>
    42bd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42c0:	6c                   	ins    BYTE PTR es:[rdi],dx
    42c1:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    42c8:	31 00                	xor    DWORD PTR [rax],eax
    42ca:	5f                   	pop    rdi
    42cb:	5f                   	pop    rdi
    42cc:	50                   	push   rax
    42cd:	49                   	rex.WB
    42ce:	43 5f                	rex.XB pop r15
    42d0:	5f                   	pop    rdi
    42d1:	20 32                	and    BYTE PTR [rdx],dh
    42d3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42d6:	49                   	rex.WB
    42d7:	4e 54                	rex.WRX push rsp
    42d9:	5f                   	pop    rdi
    42da:	4c                   	rex.WR
    42db:	45                   	rex.RB
    42dc:	41 53                	push   r11
    42de:	54                   	push   rsp
    42df:	33 32                	xor    esi,DWORD PTR [rdx]
    42e1:	5f                   	pop    rdi
    42e2:	54                   	push   rsp
    42e3:	59                   	pop    rcx
    42e4:	50                   	push   rax
    42e5:	45 5f                	rex.RB pop r15
    42e7:	5f                   	pop    rdi
    42e8:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    42eb:	74 00                	je     42ed <__FRAME_END__+0x3af9>
    42ed:	5f                   	pop    rdi
    42ee:	5f                   	pop    rdi
    42ef:	55                   	push   rbp
    42f0:	49                   	rex.WB
    42f1:	4e 54                	rex.WRX push rsp
    42f3:	5f                   	pop    rdi
    42f4:	4c                   	rex.WR
    42f5:	45                   	rex.RB
    42f6:	41 53                	push   r11
    42f8:	54                   	push   rsp
    42f9:	36 34 5f             	ss xor al,0x5f
    42fc:	54                   	push   rsp
    42fd:	59                   	pop    rcx
    42fe:	50                   	push   rax
    42ff:	45 5f                	rex.RB pop r15
    4301:	5f                   	pop    rdi
    4302:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4306:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    430a:	73 69                	jae    4375 <__FRAME_END__+0x3b81>
    430c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    430e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4313:	74 00                	je     4315 <__FRAME_END__+0x3b21>
    4315:	5f                   	pop    rdi
    4316:	49                   	rex.WB
    4317:	4f 5f                	rex.WRXB pop r15
    4319:	70 75                	jo     4390 <__FRAME_END__+0x3b9c>
    431b:	74 63                	je     4380 <__FRAME_END__+0x3b8c>
    431d:	5f                   	pop    rdi
    431e:	75 6e                	jne    438e <__FRAME_END__+0x3b9a>
    4320:	6c                   	ins    BYTE PTR es:[rdi],dx
    4321:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4322:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    4325:	64 28 5f 63          	sub    BYTE PTR fs:[rdi+0x63],bl
    4329:	68 2c 5f 66 70       	push   0x70665f2c
    432e:	29 20                	sub    DWORD PTR [rax],esp
    4330:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    4333:	4f 5f                	rex.WRXB pop r15
    4335:	42                   	rex.X
    4336:	45 20 28             	and    BYTE PTR [r8],r13b
    4339:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    433c:	70 29                	jo     4367 <__FRAME_END__+0x3b73>
    433e:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    4343:	5f                   	pop    rdi
    4344:	77 72                	ja     43b8 <__FRAME_END__+0x3bc4>
    4346:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    434d:	20 
    434e:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    4354:	70 29                	jo     437f <__FRAME_END__+0x3b8b>
    4356:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    435b:	5f                   	pop    rdi
    435c:	77 72                	ja     43d0 <__FRAME_END__+0x3bdc>
    435e:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2c646e65
    4365:	2c 
    4366:	20 30                	and    BYTE PTR [rax],dh
    4368:	29 20                	sub    DWORD PTR [rax],esp
    436a:	3f                   	(bad)  
    436b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    436e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    436f:	76 65                	jbe    43d6 <__FRAME_END__+0x3be2>
    4371:	72 66                	jb     43d9 <__FRAME_END__+0x3be5>
    4373:	6c                   	ins    BYTE PTR es:[rdi],dx
    4374:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4375:	77 20                	ja     4397 <__FRAME_END__+0x3ba3>
    4377:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    437a:	70 2c                	jo     43a8 <__FRAME_END__+0x3bb4>
    437c:	20 28                	and    BYTE PTR [rax],ch
    437e:	75 6e                	jne    43ee <__FRAME_END__+0x3bfa>
    4380:	73 69                	jae    43eb <__FRAME_END__+0x3bf7>
    4382:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4384:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    4389:	61                   	(bad)  
    438a:	72 29                	jb     43b5 <__FRAME_END__+0x3bc1>
    438c:	20 28                	and    BYTE PTR [rax],ch
    438e:	5f                   	pop    rdi
    438f:	63 68 29             	movsxd ebp,DWORD PTR [rax+0x29]
    4392:	29 20                	sub    DWORD PTR [rax],esp
    4394:	3a 20                	cmp    ah,BYTE PTR [rax]
    4396:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    4399:	73 69                	jae    4404 <__FRAME_END__+0x3c10>
    439b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    439d:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    43a2:	61                   	(bad)  
    43a3:	72 29                	jb     43ce <__FRAME_END__+0x3bda>
    43a5:	20 28                	and    BYTE PTR [rax],ch
    43a7:	2a 28                	sub    ch,BYTE PTR [rax]
    43a9:	5f                   	pop    rdi
    43aa:	66 70 29             	data16 jo 43d6 <__FRAME_END__+0x3be2>
    43ad:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    43b2:	5f                   	pop    rdi
    43b3:	77 72                	ja     4427 <__FRAME_END__+0x3c33>
    43b5:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2b727470
    43bc:	2b 
    43bd:	2b 20                	sub    esp,DWORD PTR [rax]
    43bf:	3d 20 28 5f 63       	cmp    eax,0x635f2820
    43c4:	68 29 29 29 00       	push   0x292929
    43c9:	5f                   	pop    rdi
    43ca:	50                   	push   rax
    43cb:	4f 53                	rex.WRXB push r11
    43cd:	49 58                	rex.WB pop r8
    43cf:	5f                   	pop    rdi
    43d0:	53                   	push   rbx
    43d1:	4f 55                	rex.WRXB push r13
    43d3:	52                   	push   rdx
    43d4:	43                   	rex.XB
    43d5:	45 20 31             	and    BYTE PTR [r9],r14b
    43d8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    43db:	4f 5f                	rex.WRXB pop r15
    43dd:	44                   	rex.R
    43de:	4f                   	rex.WRXB
    43df:	4e 54                	rex.WRX push rsp
    43e1:	5f                   	pop    rdi
    43e2:	43                   	rex.XB
    43e3:	4c                   	rex.WR
    43e4:	4f 53                	rex.WRXB push r11
    43e6:	45 20 30             	and    BYTE PTR [r8],r14b
    43e9:	31 30                	xor    DWORD PTR [rax],esi
    43eb:	30 30                	xor    BYTE PTR [rax],dh
    43ed:	30 30                	xor    BYTE PTR [rax],dh
    43ef:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    43f2:	47                   	rex.RXB
    43f3:	4c                   	rex.WR
    43f4:	49                   	rex.WB
    43f5:	42                   	rex.X
    43f6:	43 5f                	rex.XB pop r15
    43f8:	55                   	push   rbp
    43f9:	53                   	push   rbx
    43fa:	45 5f                	rex.RB pop r15
    43fc:	49                   	rex.WB
    43fd:	45                   	rex.RB
    43fe:	43 5f                	rex.XB pop r15
    4400:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f7d3c <_end+0x423f6d24>
    4407:	46 50                	rex.RX push rax
    4409:	5f                   	pop    rdi
    440a:	45 58                	rex.RB pop r8
    440c:	54                   	push   rsp
    440d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4410:	53                   	push   rbx
    4411:	49 5a                	rex.WB pop r10
    4413:	45 5f                	rex.RB pop r15
    4415:	4d                   	rex.WRB
    4416:	41 58                	pop    r8
    4418:	5f                   	pop    rdi
    4419:	5f                   	pop    rdi
    441a:	20 30                	and    BYTE PTR [rax],dh
    441c:	78 66                	js     4484 <__FRAME_END__+0x3c90>
    441e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    4425:	66 66 66 66 66 66 66 
    442c:	66 55                	push   bp
    442e:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    4432:	55                   	push   rbp
    4433:	49                   	rex.WB
    4434:	44 5f                	rex.R pop rdi
    4436:	54                   	push   rsp
    4437:	5f                   	pop    rdi
    4438:	54                   	push   rsp
    4439:	59                   	pop    rcx
    443a:	50                   	push   rax
    443b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    443f:	55                   	push   rbp
    4440:	33 32                	xor    esi,DWORD PTR [rdx]
    4442:	5f                   	pop    rdi
    4443:	54                   	push   rsp
    4444:	59                   	pop    rcx
    4445:	50                   	push   rax
    4446:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    444a:	55                   	push   rbp
    444b:	4c                   	rex.WR
    444c:	4f                   	rex.WRXB
    444d:	4e                   	rex.WRX
    444e:	47 57                	rex.RXB push r15
    4450:	4f 52                	rex.WRXB push r10
    4452:	44 5f                	rex.R pop rdi
    4454:	54                   	push   rsp
    4455:	59                   	pop    rcx
    4456:	50                   	push   rax
    4457:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    445b:	73 69                	jae    44c6 <__FRAME_END__+0x3cd2>
    445d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    445f:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    4465:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4469:	74 00                	je     446b <__FRAME_END__+0x3c77>
    446b:	5f                   	pop    rdi
    446c:	5f                   	pop    rdi
    446d:	47                   	rex.RXB
    446e:	43                   	rex.XB
    446f:	43 5f                	rex.XB pop r15
    4471:	41 54                	push   r12
    4473:	4f                   	rex.WRXB
    4474:	4d                   	rex.WRB
    4475:	49                   	rex.WB
    4476:	43 5f                	rex.XB pop r15
    4478:	53                   	push   rbx
    4479:	48                   	rex.W
    447a:	4f 52                	rex.WRXB push r10
    447c:	54                   	push   rsp
    447d:	5f                   	pop    rdi
    447e:	4c                   	rex.WR
    447f:	4f                   	rex.WRXB
    4480:	43                   	rex.XB
    4481:	4b 5f                	rex.WXB pop r15
    4483:	46 52                	rex.RX push rdx
    4485:	45                   	rex.RB
    4486:	45 20 32             	and    BYTE PTR [r10],r14b
    4489:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    448c:	46                   	rex.RX
    448d:	4c 54                	rex.WR push rsp
    448f:	36 34 58             	ss xor al,0x58
    4492:	5f                   	pop    rdi
    4493:	44                   	rex.R
    4494:	45                   	rex.RB
    4495:	43                   	rex.XB
    4496:	49                   	rex.WB
    4497:	4d                   	rex.WRB
    4498:	41                   	rex.B
    4499:	4c 5f                	rex.WR pop rdi
    449b:	44                   	rex.R
    449c:	49                   	rex.WB
    449d:	47 5f                	rex.RXB pop r15
    449f:	5f                   	pop    rdi
    44a0:	20 32                	and    BYTE PTR [rdx],dh
    44a2:	31 00                	xor    DWORD PTR [rax],eax
    44a4:	53                   	push   rbx
    44a5:	45                   	rex.RB
    44a6:	45                   	rex.RB
    44a7:	4b 5f                	rex.WXB pop r15
    44a9:	53                   	push   rbx
    44aa:	45 54                	rex.RB push r12
    44ac:	20 30                	and    BYTE PTR [rax],dh
    44ae:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    44b1:	55                   	push   rbp
    44b2:	53                   	push   rbx
    44b3:	45 5f                	rex.RB pop r15
    44b5:	58                   	pop    rax
    44b6:	4f 50                	rex.WRXB push r8
    44b8:	45                   	rex.RB
    44b9:	4e 5f                	rex.WRX pop rdi
    44bb:	45 58                	rex.RB pop r8
    44bd:	54                   	push   rsp
    44be:	45                   	rex.RB
    44bf:	4e                   	rex.WRX
    44c0:	44                   	rex.R
    44c1:	45                   	rex.RB
    44c2:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    44c6:	49                   	rex.WB
    44c7:	4e 54                	rex.WRX push rsp
    44c9:	5f                   	pop    rdi
    44ca:	46                   	rex.RX
    44cb:	41 53                	push   r11
    44cd:	54                   	push   rsp
    44ce:	31 36                	xor    DWORD PTR [rsi],esi
    44d0:	5f                   	pop    rdi
    44d1:	4d                   	rex.WRB
    44d2:	41 58                	pop    r8
    44d4:	5f                   	pop    rdi
    44d5:	5f                   	pop    rdi
    44d6:	20 30                	and    BYTE PTR [rax],dh
    44d8:	78 37                	js     4511 <__FRAME_END__+0x3d1d>
    44da:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    44e1:	66 66 66 66 66 66 66 
    44e8:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    44ed:	46                   	rex.RX
    44ee:	4c 54                	rex.WR push rsp
    44f0:	5f                   	pop    rdi
    44f1:	45 50                	rex.RB push r8
    44f3:	53                   	push   rbx
    44f4:	49                   	rex.WB
    44f5:	4c                   	rex.WR
    44f6:	4f                   	rex.WRXB
    44f7:	4e 5f                	rex.WRX pop rdi
    44f9:	5f                   	pop    rdi
    44fa:	20 31                	and    BYTE PTR [rcx],dh
    44fc:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    44ff:	32 30                	xor    dh,BYTE PTR [rax]
    4501:	39 32                	cmp    DWORD PTR [rdx],esi
    4503:	38 39                	cmp    BYTE PTR [rcx],bh
    4505:	35 35 30 37 38       	xor    eax,0x38373035
    450a:	31 32                	xor    DWORD PTR [rdx],esi
    450c:	35 30 30 30 30       	xor    eax,0x30303030
    4511:	30 30                	xor    BYTE PTR [rax],dh
    4513:	30 30                	xor    BYTE PTR [rax],dh
    4515:	30 30                	xor    BYTE PTR [rax],dh
    4517:	30 30                	xor    BYTE PTR [rax],dh
    4519:	30 30                	xor    BYTE PTR [rax],dh
    451b:	30 30                	xor    BYTE PTR [rax],dh
    451d:	30 30                	xor    BYTE PTR [rax],dh
    451f:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    4522:	37                   	(bad)  
    4523:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    4527:	46                   	rex.RX
    4528:	4c 54                	rex.WR push rsp
    452a:	36 34 5f             	ss xor al,0x5f
    452d:	4d                   	rex.WRB
    452e:	49                   	rex.WB
    452f:	4e 5f                	rex.WRX pop rdi
    4531:	45 58                	rex.RB pop r8
    4533:	50                   	push   rax
    4534:	5f                   	pop    rdi
    4535:	5f                   	pop    rdi
    4536:	20 28                	and    BYTE PTR [rax],ch
    4538:	2d 31 30 32 31       	sub    eax,0x31323031
    453d:	29 00                	sub    DWORD PTR [rax],eax
    453f:	5f                   	pop    rdi
    4540:	49                   	rex.WB
    4541:	4f 53                	rex.WRXB push r11
    4543:	5f                   	pop    rdi
    4544:	41 50                	push   r8
    4546:	50                   	push   rax
    4547:	45                   	rex.RB
    4548:	4e                   	rex.WRX
    4549:	44 20 38             	and    BYTE PTR [rax],r15b
    454c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    454f:	47                   	rex.RXB
    4550:	4c                   	rex.WR
    4551:	49                   	rex.WB
    4552:	42                   	rex.X
    4553:	43 5f                	rex.XB pop r15
    4555:	49                   	rex.WB
    4556:	4e 54                	rex.WRX push rsp
    4558:	45 52                	rex.RB push r10
    455a:	4e                   	rex.WRX
    455b:	41                   	rex.B
    455c:	4c 5f                	rex.WR pop rdi
    455e:	53                   	push   rbx
    455f:	54                   	push   rsp
    4560:	41 52                	push   r10
    4562:	54                   	push   rsp
    4563:	49                   	rex.WB
    4564:	4e                   	rex.WRX
    4565:	47 5f                	rex.RXB pop r15
    4567:	48                   	rex.W
    4568:	45                   	rex.RB
    4569:	41                   	rex.B
    456a:	44                   	rex.R
    456b:	45 52                	rex.RB push r10
    456d:	5f                   	pop    rdi
    456e:	49                   	rex.WB
    456f:	4d 50                	rex.WRB push r8
    4571:	4c                   	rex.WR
    4572:	45                   	rex.RB
    4573:	4d                   	rex.WRB
    4574:	45                   	rex.RB
    4575:	4e 54                	rex.WRX push rsp
    4577:	41 54                	push   r12
    4579:	49                   	rex.WB
    457a:	4f                   	rex.WRXB
    457b:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    457f:	46                   	rex.RX
    4580:	4c 54                	rex.WR push rsp
    4582:	5f                   	pop    rdi
    4583:	45 56                	rex.RB push r14
    4585:	41                   	rex.B
    4586:	4c 5f                	rex.WR pop rdi
    4588:	4d                   	rex.WRB
    4589:	45 54                	rex.RB push r12
    458b:	48                   	rex.W
    458c:	4f                   	rex.WRXB
    458d:	44 5f                	rex.R pop rdi
    458f:	54                   	push   rsp
    4590:	53                   	push   rbx
    4591:	5f                   	pop    rdi
    4592:	31 38                	xor    DWORD PTR [rax],edi
    4594:	36 36 31 5f 33       	ss xor DWORD PTR ss:[rdi+0x33],ebx
    4599:	5f                   	pop    rdi
    459a:	5f                   	pop    rdi
    459b:	20 30                	and    BYTE PTR [rax],dh
    459d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45a0:	44                   	rex.R
    45a1:	42                   	rex.X
    45a2:	4c 5f                	rex.WR pop rdi
    45a4:	48                   	rex.W
    45a5:	41 53                	push   r11
    45a7:	5f                   	pop    rdi
    45a8:	49                   	rex.WB
    45a9:	4e                   	rex.WRX
    45aa:	46                   	rex.RX
    45ab:	49                   	rex.WB
    45ac:	4e                   	rex.WRX
    45ad:	49 54                	rex.WB push r12
    45af:	59                   	pop    rcx
    45b0:	5f                   	pop    rdi
    45b1:	5f                   	pop    rdi
    45b2:	20 31                	and    BYTE PTR [rcx],dh
    45b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45b7:	61                   	(bad)  
    45b8:	74 74                	je     462e <__FRAME_END__+0x3e3a>
    45ba:	72 69                	jb     4625 <__FRAME_END__+0x3e31>
    45bc:	62                   	(bad)  
    45bd:	75 74                	jne    4633 <__FRAME_END__+0x3e3f>
    45bf:	65 5f                	gs pop rdi
    45c1:	77 61                	ja     4624 <__FRAME_END__+0x3e30>
    45c3:	72 6e                	jb     4633 <__FRAME_END__+0x3e3f>
    45c5:	5f                   	pop    rdi
    45c6:	75 6e                	jne    4636 <__FRAME_END__+0x3e42>
    45c8:	75 73                	jne    463d <__FRAME_END__+0x3e49>
    45ca:	65 64 5f             	gs fs pop rdi
    45cd:	72 65                	jb     4634 <__FRAME_END__+0x3e40>
    45cf:	73 75                	jae    4646 <__FRAME_END__+0x3e52>
    45d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    45d2:	74 5f                	je     4633 <__FRAME_END__+0x3e3f>
    45d4:	5f                   	pop    rdi
    45d5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    45d8:	61                   	(bad)  
    45d9:	74 74                	je     464f <__FRAME_END__+0x3e5b>
    45db:	72 69                	jb     4646 <__FRAME_END__+0x3e52>
    45dd:	62                   	(bad)  
    45de:	75 74                	jne    4654 <__FRAME_END__+0x3e60>
    45e0:	65 5f                	gs pop rdi
    45e2:	5f                   	pop    rdi
    45e3:	20 28                	and    BYTE PTR [rax],ch
    45e5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    45e8:	77 61                	ja     464b <__FRAME_END__+0x3e57>
    45ea:	72 6e                	jb     465a <__FRAME_END__+0x3e66>
    45ec:	5f                   	pop    rdi
    45ed:	75 6e                	jne    465d <__FRAME_END__+0x3e69>
    45ef:	75 73                	jne    4664 <__FRAME_END__+0x3e70>
    45f1:	65 64 5f             	gs fs pop rdi
    45f4:	72 65                	jb     465b <__FRAME_END__+0x3e67>
    45f6:	73 75                	jae    466d <__FRAME_END__+0x3e79>
    45f8:	6c                   	ins    BYTE PTR es:[rdi],dx
    45f9:	74 5f                	je     465a <__FRAME_END__+0x3e66>
    45fb:	5f                   	pop    rdi
    45fc:	29 29                	sub    DWORD PTR [rcx],ebp
    45fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4601:	49                   	rex.WB
    4602:	4e 54                	rex.WRX push rsp
    4604:	36 34 5f             	ss xor al,0x5f
    4607:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    460b:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    460e:	23 23                	and    esp,DWORD PTR [rbx]
    4610:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    4614:	5f                   	pop    rdi
    4615:	45                   	rex.RB
    4616:	4e                   	rex.WRX
    4617:	44 5f                	rex.R pop rdi
    4619:	44                   	rex.R
    461a:	45                   	rex.RB
    461b:	43                   	rex.XB
    461c:	4c 53                	rex.WR push rbx
    461e:	20 00                	and    BYTE PTR [rax],al
    4620:	5f                   	pop    rdi
    4621:	5f                   	pop    rdi
    4622:	46                   	rex.RX
    4623:	4c 54                	rex.WR push rsp
    4625:	5f                   	pop    rdi
    4626:	48                   	rex.W
    4627:	41 53                	push   r11
    4629:	5f                   	pop    rdi
    462a:	51                   	push   rcx
    462b:	55                   	push   rbp
    462c:	49                   	rex.WB
    462d:	45 54                	rex.RB push r12
    462f:	5f                   	pop    rdi
    4630:	4e                   	rex.WRX
    4631:	41                   	rex.B
    4632:	4e 5f                	rex.WRX pop rdi
    4634:	5f                   	pop    rdi
    4635:	20 31                	and    BYTE PTR [rcx],dh
    4637:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    463a:	53                   	push   rbx
    463b:	49 5a                	rex.WB pop r10
    463d:	45                   	rex.RB
    463e:	4f                   	rex.WRXB
    463f:	46 5f                	rex.RX pop rdi
    4641:	49                   	rex.WB
    4642:	4e 54                	rex.WRX push rsp
    4644:	5f                   	pop    rdi
    4645:	5f                   	pop    rdi
    4646:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    4649:	5f                   	pop    rdi
    464a:	5f                   	pop    rdi
    464b:	43                   	rex.XB
    464c:	4c                   	rex.WR
    464d:	4f                   	rex.WRXB
    464e:	43                   	rex.XB
    464f:	4b                   	rex.WXB
    4650:	49                   	rex.WB
    4651:	44 5f                	rex.R pop rdi
    4653:	54                   	push   rsp
    4654:	5f                   	pop    rdi
    4655:	54                   	push   rsp
    4656:	59                   	pop    rcx
    4657:	50                   	push   rax
    4658:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    465c:	53                   	push   rbx
    465d:	33 32                	xor    esi,DWORD PTR [rdx]
    465f:	5f                   	pop    rdi
    4660:	54                   	push   rsp
    4661:	59                   	pop    rcx
    4662:	50                   	push   rax
    4663:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4667:	49                   	rex.WB
    4668:	4e 54                	rex.WRX push rsp
    466a:	5f                   	pop    rdi
    466b:	46                   	rex.RX
    466c:	41 53                	push   r11
    466e:	54                   	push   rsp
    466f:	31 36                	xor    DWORD PTR [rsi],esi
    4671:	5f                   	pop    rdi
    4672:	54                   	push   rsp
    4673:	59                   	pop    rcx
    4674:	50                   	push   rax
    4675:	45 5f                	rex.RB pop r15
    4677:	5f                   	pop    rdi
    4678:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    467c:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4680:	74 00                	je     4682 <__FRAME_END__+0x3e8e>
    4682:	5f                   	pop    rdi
    4683:	5f                   	pop    rdi
    4684:	53                   	push   rbx
    4685:	54                   	push   rsp
    4686:	44                   	rex.R
    4687:	43 5f                	rex.XB pop r15
    4689:	49                   	rex.WB
    468a:	45                   	rex.RB
    468b:	43 5f                	rex.XB pop r15
    468d:	35 35 39 5f 5f       	xor    eax,0x5f5f3935
    4692:	20 31                	and    BYTE PTR [rcx],dh
    4694:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4697:	44                   	rex.R
    4698:	45                   	rex.RB
    4699:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    469c:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    469f:	55                   	push   rbp
    46a0:	42                   	rex.X
    46a1:	4e                   	rex.WRX
    46a2:	4f 52                	rex.WRXB push r10
    46a4:	4d                   	rex.WRB
    46a5:	41                   	rex.B
    46a6:	4c 5f                	rex.WR pop rdi
    46a8:	4d                   	rex.WRB
    46a9:	49                   	rex.WB
    46aa:	4e 5f                	rex.WRX pop rdi
    46ac:	5f                   	pop    rdi
    46ad:	20 30                	and    BYTE PTR [rax],dh
    46af:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    46b2:	30 30                	xor    BYTE PTR [rax],dh
    46b4:	30 30                	xor    BYTE PTR [rax],dh
    46b6:	30 30                	xor    BYTE PTR [rax],dh
    46b8:	30 30                	xor    BYTE PTR [rax],dh
    46ba:	30 30                	xor    BYTE PTR [rax],dh
    46bc:	30 30                	xor    BYTE PTR [rax],dh
    46be:	30 30                	xor    BYTE PTR [rax],dh
    46c0:	30 30                	xor    BYTE PTR [rax],dh
    46c2:	30 30                	xor    BYTE PTR [rax],dh
    46c4:	30 30                	xor    BYTE PTR [rax],dh
    46c6:	30 30                	xor    BYTE PTR [rax],dh
    46c8:	30 30                	xor    BYTE PTR [rax],dh
    46ca:	30 30                	xor    BYTE PTR [rax],dh
    46cc:	30 30                	xor    BYTE PTR [rax],dh
    46ce:	30 30                	xor    BYTE PTR [rax],dh
    46d0:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
    46d3:	36 31 34 33          	xor    DWORD PTR ss:[rbx+rsi*1],esi
    46d7:	44                   	rex.R
    46d8:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    46dc:	55                   	push   rbp
    46dd:	53                   	push   rbx
    46de:	45 5f                	rex.RB pop r15
    46e0:	4c                   	rex.WR
    46e1:	41 52                	push   r10
    46e3:	47                   	rex.RXB
    46e4:	45                   	rex.RB
    46e5:	46                   	rex.RX
    46e6:	49                   	rex.WB
    46e7:	4c                   	rex.WR
    46e8:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    46ec:	53                   	push   rbx
    46ed:	49 5a                	rex.WB pop r10
    46ef:	45                   	rex.RB
    46f0:	4f                   	rex.WRXB
    46f1:	46 5f                	rex.RX pop rdi
    46f3:	46                   	rex.RX
    46f4:	4c                   	rex.WR
    46f5:	4f                   	rex.WRXB
    46f6:	41 54                	push   r12
    46f8:	38 30                	cmp    BYTE PTR [rax],dh
    46fa:	5f                   	pop    rdi
    46fb:	5f                   	pop    rdi
    46fc:	20 31                	and    BYTE PTR [rcx],dh
    46fe:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4702:	46                   	rex.RX
    4703:	4c 54                	rex.WR push rsp
    4705:	33 32                	xor    esi,DWORD PTR [rdx]
    4707:	58                   	pop    rax
    4708:	5f                   	pop    rdi
    4709:	48                   	rex.W
    470a:	41 53                	push   r11
    470c:	5f                   	pop    rdi
    470d:	51                   	push   rcx
    470e:	55                   	push   rbp
    470f:	49                   	rex.WB
    4710:	45 54                	rex.RB push r12
    4712:	5f                   	pop    rdi
    4713:	4e                   	rex.WRX
    4714:	41                   	rex.B
    4715:	4e 5f                	rex.WRX pop rdi
    4717:	5f                   	pop    rdi
    4718:	20 31                	and    BYTE PTR [rcx],dh
    471a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    471d:	44                   	rex.R
    471e:	42                   	rex.X
    471f:	4c 5f                	rex.WR pop rdi
    4721:	4d                   	rex.WRB
    4722:	41 58                	pop    r8
    4724:	5f                   	pop    rdi
    4725:	31 30                	xor    DWORD PTR [rax],esi
    4727:	5f                   	pop    rdi
    4728:	45 58                	rex.RB pop r8
    472a:	50                   	push   rax
    472b:	5f                   	pop    rdi
    472c:	5f                   	pop    rdi
    472d:	20 33                	and    BYTE PTR [rbx],dh
    472f:	30 38                	xor    BYTE PTR [rax],bh
    4731:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4734:	55                   	push   rbp
    4735:	53                   	push   rbx
    4736:	45 5f                	rex.RB pop r15
    4738:	4d                   	rex.WRB
    4739:	49 53                	rex.WB push r11
    473b:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    473e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4741:	47 58                	rex.RXB pop r8
    4743:	58                   	pop    rax
    4744:	5f                   	pop    rdi
    4745:	41                   	rex.B
    4746:	42                   	rex.X
    4747:	49 5f                	rex.WB pop r15
    4749:	56                   	push   rsi
    474a:	45 52                	rex.RB push r10
    474c:	53                   	push   rbx
    474d:	49                   	rex.WB
    474e:	4f                   	rex.WRXB
    474f:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    4752:	30 31                	xor    BYTE PTR [rcx],dh
    4754:	31 00                	xor    DWORD PTR [rax],eax
    4756:	5f                   	pop    rdi
    4757:	5f                   	pop    rdi
    4758:	70 69                	jo     47c3 <__FRAME_END__+0x3fcf>
    475a:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    475d:	20 32                	and    BYTE PTR [rdx],dh
    475f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4762:	41 54                	push   r12
    4764:	4f                   	rex.WRXB
    4765:	4d                   	rex.WRB
    4766:	49                   	rex.WB
    4767:	43 5f                	rex.XB pop r15
    4769:	52                   	push   rdx
    476a:	45                   	rex.RB
    476b:	4c                   	rex.WR
    476c:	45                   	rex.RB
    476d:	41 53                	push   r11
    476f:	45 20 33             	and    BYTE PTR [r11],r14b
    4772:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4775:	53                   	push   rbx
    4776:	53                   	push   rbx
    4777:	45 5f                	rex.RB pop r15
    4779:	5f                   	pop    rdi
    477a:	20 31                	and    BYTE PTR [rcx],dh
    477c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    477f:	4f 5f                	rex.WRXB pop r15
    4781:	4e                   	rex.WRX
    4782:	4f 5f                	rex.WRXB pop r15
    4784:	52                   	push   rdx
    4785:	45                   	rex.RB
    4786:	41                   	rex.B
    4787:	44 53                	rex.R push rbx
    4789:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    478c:	5f                   	pop    rdi
    478d:	5f                   	pop    rdi
    478e:	47                   	rex.RXB
    478f:	4c                   	rex.WR
    4790:	49                   	rex.WB
    4791:	42                   	rex.X
    4792:	43 5f                	rex.XB pop r15
    4794:	55                   	push   rbp
    4795:	53                   	push   rbx
    4796:	45 5f                	rex.RB pop r15
    4798:	49                   	rex.WB
    4799:	45                   	rex.RB
    479a:	43 5f                	rex.XB pop r15
    479c:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f80d8 <_end+0x463f70c0>
    47a3:	55                   	push   rbp
    47a4:	4e                   	rex.WRX
    47a5:	43 53                	rex.XB push r11
    47a7:	5f                   	pop    rdi
    47a8:	45 58                	rex.RB pop r8
    47aa:	54                   	push   rsp
    47ab:	20 30                	and    BYTE PTR [rax],dh
    47ad:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
    47b0:	69 6e 00 5f 53 49 5a 	imul   ebp,DWORD PTR [rsi+0x0],0x5a49535f
    47b7:	45 54                	rex.RB push r12
    47b9:	5f                   	pop    rdi
    47ba:	20 00                	and    BYTE PTR [rax],al
    47bc:	5f                   	pop    rdi
    47bd:	5f                   	pop    rdi
    47be:	46                   	rex.RX
    47bf:	4c 54                	rex.WR push rsp
    47c1:	31 32                	xor    DWORD PTR [rdx],esi
    47c3:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    47c6:	45                   	rex.RB
    47c7:	4e                   	rex.WRX
    47c8:	4f 52                	rex.WRXB push r10
    47ca:	4d 5f                	rex.WRB pop r15
    47cc:	4d                   	rex.WRB
    47cd:	49                   	rex.WB
    47ce:	4e 5f                	rex.WRX pop rdi
    47d0:	5f                   	pop    rdi
    47d1:	20 36                	and    BYTE PTR [rsi],dh
    47d3:	2e 34 37             	cs xor al,0x37
    47d6:	35 31 37 35 31       	xor    eax,0x31353731
    47db:	31 39                	xor    DWORD PTR [rcx],edi
    47dd:	34 33                	xor    al,0x33
    47df:	38 30                	cmp    BYTE PTR [rax],dh
    47e1:	32 35 31 31 30 39    	xor    dh,BYTE PTR [rip+0x39303131]        # 39307918 <_end+0x39106900>
    47e7:	32 34 34             	xor    dh,BYTE PTR [rsp+rsi*1]
    47ea:	33 38                	xor    edi,DWORD PTR [rax]
    47ec:	39 35 38 32 32 37    	cmp    DWORD PTR [rip+0x37323238],esi        # 37327a2a <_end+0x37126a12>
    47f2:	36 34 36             	ss xor al,0x36
    47f5:	35 35 65 2d 34       	xor    eax,0x342d6535
    47fa:	39 36                	cmp    DWORD PTR [rsi],esi
    47fc:	36 46 31 32          	rex.RX xor DWORD PTR ss:[rdx],r14d
    4800:	38 00                	cmp    BYTE PTR [rax],al
    4802:	5f                   	pop    rdi
    4803:	5f                   	pop    rdi
    4804:	47                   	rex.RXB
    4805:	4c                   	rex.WR
    4806:	49                   	rex.WB
    4807:	42                   	rex.X
    4808:	43 5f                	rex.XB pop r15
    480a:	55                   	push   rbp
    480b:	53                   	push   rbx
    480c:	45 5f                	rex.RB pop r15
    480e:	49                   	rex.WB
    480f:	45                   	rex.RB
    4810:	43 5f                	rex.XB pop r15
    4812:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f814e <_end+0x423f7136>
    4819:	46 50                	rex.RX push rax
    481b:	5f                   	pop    rdi
    481c:	45 58                	rex.RB pop r8
    481e:	54                   	push   rsp
    481f:	20 30                	and    BYTE PTR [rax],dh
    4821:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4824:	73 74                	jae    489a <__FRAME_END__+0x40a6>
    4826:	75 62                	jne    488a <__FRAME_END__+0x4096>
    4828:	5f                   	pop    rdi
    4829:	72 65                	jb     4890 <__FRAME_END__+0x409c>
    482b:	76 6f                	jbe    489c <__FRAME_END__+0x40a8>
    482d:	6b 65 20 00          	imul   esp,DWORD PTR [rbp+0x20],0x0
    4831:	5f                   	pop    rdi
    4832:	5f                   	pop    rdi
    4833:	49                   	rex.WB
    4834:	4e 54                	rex.WRX push rsp
    4836:	4d                   	rex.WRB
    4837:	41 58                	pop    r8
    4839:	5f                   	pop    rdi
    483a:	54                   	push   rsp
    483b:	59                   	pop    rcx
    483c:	50                   	push   rax
    483d:	45 5f                	rex.RB pop r15
    483f:	5f                   	pop    rdi
    4840:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4844:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4848:	74 00                	je     484a <__FRAME_END__+0x4056>
    484a:	5f                   	pop    rdi
    484b:	5f                   	pop    rdi
    484c:	46                   	rex.RX
    484d:	4c 54                	rex.WR push rsp
    484f:	5f                   	pop    rdi
    4850:	4d                   	rex.WRB
    4851:	49                   	rex.WB
    4852:	4e 5f                	rex.WRX pop rdi
    4854:	45 58                	rex.RB pop r8
    4856:	50                   	push   rax
    4857:	5f                   	pop    rdi
    4858:	5f                   	pop    rdi
    4859:	20 28                	and    BYTE PTR [rax],ch
    485b:	2d 31 32 35 29       	sub    eax,0x29353231
    4860:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4863:	53                   	push   rbx
    4864:	53                   	push   rbx
    4865:	50                   	push   rax
    4866:	5f                   	pop    rdi
    4867:	53                   	push   rbx
    4868:	54                   	push   rsp
    4869:	52                   	push   rdx
    486a:	4f                   	rex.WRXB
    486b:	4e                   	rex.WRX
    486c:	47 5f                	rex.RXB pop r15
    486e:	5f                   	pop    rdi
    486f:	20 33                	and    BYTE PTR [rbx],dh
    4871:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4874:	65 72 72             	gs jb  48e9 <__FRAME_END__+0x40f5>
    4877:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4878:	72 64                	jb     48de <__FRAME_END__+0x40ea>
    487a:	65 63 6c 28 6e       	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    487f:	61                   	(bad)  
    4880:	6d                   	ins    DWORD PTR es:[rdi],dx
    4881:	65 2c 6d             	gs sub al,0x6d
    4884:	73 67                	jae    48ed <__FRAME_END__+0x40f9>
    4886:	29 20                	sub    DWORD PTR [rax],esp
    4888:	65 78 74             	gs js  48ff <__FRAME_END__+0x410b>
    488b:	65 72 6e             	gs jb  48fc <__FRAME_END__+0x4108>
    488e:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    4891:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    4898:	20 
    4899:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    489c:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    48a3:	74 
    48a4:	74 72                	je     4918 <__FRAME_END__+0x4124>
    48a6:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    48ad:	28 28                	sub    BYTE PTR [rax],ch
    48af:	5f                   	pop    rdi
    48b0:	5f                   	pop    rdi
    48b1:	65 72 72             	gs jb  4926 <__FRAME_END__+0x4132>
    48b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    48b5:	72 5f                	jb     4916 <__FRAME_END__+0x4122>
    48b7:	5f                   	pop    rdi
    48b8:	20 28                	and    BYTE PTR [rax],ch
    48ba:	6d                   	ins    DWORD PTR es:[rdi],dx
    48bb:	73 67                	jae    4924 <__FRAME_END__+0x4130>
    48bd:	29 29                	sub    DWORD PTR [rcx],ebp
    48bf:	29 00                	sub    DWORD PTR [rax],eax
    48c1:	5f                   	pop    rdi
    48c2:	5f                   	pop    rdi
    48c3:	44                   	rex.R
    48c4:	45                   	rex.RB
    48c5:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    48c8:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    48cb:	41 58                	pop    r8
    48cd:	5f                   	pop    rdi
    48ce:	5f                   	pop    rdi
    48cf:	20 39                	and    BYTE PTR [rcx],bh
    48d1:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    48d4:	39 39                	cmp    DWORD PTR [rcx],edi
    48d6:	39 39                	cmp    DWORD PTR [rcx],edi
    48d8:	39 39                	cmp    DWORD PTR [rcx],edi
    48da:	39 39                	cmp    DWORD PTR [rcx],edi
    48dc:	39 39                	cmp    DWORD PTR [rcx],edi
    48de:	39 39                	cmp    DWORD PTR [rcx],edi
    48e0:	39 39                	cmp    DWORD PTR [rcx],edi
    48e2:	39 39                	cmp    DWORD PTR [rcx],edi
    48e4:	39 39                	cmp    DWORD PTR [rcx],edi
    48e6:	39 39                	cmp    DWORD PTR [rcx],edi
    48e8:	39 39                	cmp    DWORD PTR [rcx],edi
    48ea:	39 39                	cmp    DWORD PTR [rcx],edi
    48ec:	39 39                	cmp    DWORD PTR [rcx],edi
    48ee:	39 39                	cmp    DWORD PTR [rcx],edi
    48f0:	39 39                	cmp    DWORD PTR [rcx],edi
    48f2:	39 45 36             	cmp    DWORD PTR [rbp+0x36],eax
    48f5:	31 34 34             	xor    DWORD PTR [rsp+rsi*1],esi
    48f8:	44                   	rex.R
    48f9:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    48fd:	46                   	rex.RX
    48fe:	4c 54                	rex.WR push rsp
    4900:	5f                   	pop    rdi
    4901:	4d                   	rex.WRB
    4902:	41 58                	pop    r8
    4904:	5f                   	pop    rdi
    4905:	45 58                	rex.RB pop r8
    4907:	50                   	push   rax
    4908:	5f                   	pop    rdi
    4909:	5f                   	pop    rdi
    490a:	20 31                	and    BYTE PTR [rcx],dh
    490c:	32 38                	xor    bh,BYTE PTR [rax]
    490e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4911:	4f 5f                	rex.WRXB pop r15
    4913:	49 53                	rex.WB push r11
    4915:	5f                   	pop    rdi
    4916:	46                   	rex.RX
    4917:	49                   	rex.WB
    4918:	4c                   	rex.WR
    4919:	45                   	rex.RB
    491a:	42 55                	rex.X push rbp
    491c:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
    491f:	78 32                	js     4953 <__FRAME_END__+0x415f>
    4921:	30 30                	xor    BYTE PTR [rax],dh
    4923:	30 00                	xor    BYTE PTR [rax],al
    4925:	5f                   	pop    rdi
    4926:	5f                   	pop    rdi
    4927:	4f                   	rex.WRXB
    4928:	46                   	rex.RX
    4929:	46                   	rex.RX
    492a:	36 34 5f             	ss xor al,0x5f
    492d:	54                   	push   rsp
    492e:	5f                   	pop    rdi
    492f:	54                   	push   rsp
    4930:	59                   	pop    rcx
    4931:	50                   	push   rax
    4932:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4936:	53                   	push   rbx
    4937:	51                   	push   rcx
    4938:	55                   	push   rbp
    4939:	41                   	rex.B
    493a:	44 5f                	rex.R pop rdi
    493c:	54                   	push   rsp
    493d:	59                   	pop    rcx
    493e:	50                   	push   rax
    493f:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4943:	55                   	push   rbp
    4944:	53                   	push   rbx
    4945:	45 5f                	rex.RB pop r15
    4947:	49 53                	rex.WB push r11
    4949:	4f                   	rex.WRXB
    494a:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
    494d:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4950:	4f 5f                	rex.WRXB pop r15
    4952:	53                   	push   rbx
    4953:	54                   	push   rsp
    4954:	44                   	rex.R
    4955:	49                   	rex.WB
    4956:	4f 20 30             	rex.WRXB and BYTE PTR [r8],r14b
    4959:	34 30                	xor    al,0x30
    495b:	30 30                	xor    BYTE PTR [rax],dh
    495d:	30 00                	xor    BYTE PTR [rax],al
    495f:	5f                   	pop    rdi
    4960:	5f                   	pop    rdi
    4961:	44                   	rex.R
    4962:	45 56                	rex.RB push r14
    4964:	5f                   	pop    rdi
    4965:	54                   	push   rsp
    4966:	5f                   	pop    rdi
    4967:	54                   	push   rsp
    4968:	59                   	pop    rcx
    4969:	50                   	push   rax
    496a:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    496e:	55                   	push   rbp
    496f:	51                   	push   rcx
    4970:	55                   	push   rbp
    4971:	41                   	rex.B
    4972:	44 5f                	rex.R pop rdi
    4974:	54                   	push   rsp
    4975:	59                   	pop    rcx
    4976:	50                   	push   rax
    4977:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    497b:	43 50                	rex.XB push r8
    497d:	55                   	push   rbp
    497e:	5f                   	pop    rdi
    497f:	4d                   	rex.WRB
    4980:	41 53                	push   r11
    4982:	4b 5f                	rex.WXB pop r15
    4984:	54                   	push   rsp
    4985:	59                   	pop    rcx
    4986:	50                   	push   rax
    4987:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    498b:	53                   	push   rbx
    498c:	59                   	pop    rcx
    498d:	53                   	push   rbx
    498e:	43                   	rex.XB
    498f:	41                   	rex.B
    4990:	4c                   	rex.WR
    4991:	4c 5f                	rex.WR pop rdi
    4993:	55                   	push   rbp
    4994:	4c                   	rex.WR
    4995:	4f                   	rex.WRXB
    4996:	4e                   	rex.WRX
    4997:	47 5f                	rex.RXB pop r15
    4999:	54                   	push   rsp
    499a:	59                   	pop    rcx
    499b:	50                   	push   rax
    499c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    49a0:	55                   	push   rbp
    49a1:	49                   	rex.WB
    49a2:	4e 54                	rex.WRX push rsp
    49a4:	5f                   	pop    rdi
    49a5:	4c                   	rex.WR
    49a6:	45                   	rex.RB
    49a7:	41 53                	push   r11
    49a9:	54                   	push   rsp
    49aa:	33 32                	xor    esi,DWORD PTR [rdx]
    49ac:	5f                   	pop    rdi
    49ad:	4d                   	rex.WRB
    49ae:	41 58                	pop    r8
    49b0:	5f                   	pop    rdi
    49b1:	5f                   	pop    rdi
    49b2:	20 30                	and    BYTE PTR [rax],dh
    49b4:	78 66                	js     4a1c <__FRAME_END__+0x4228>
    49b6:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    49bd:	55 
    49be:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    49c1:	4f 5f                	rex.WRXB pop r15
    49c3:	42                   	rex.X
    49c4:	45 28 65 78          	sub    BYTE PTR [r13+0x78],r12b
    49c8:	70 72                	jo     4a3c <__FRAME_END__+0x4248>
    49ca:	2c 72                	sub    al,0x72
    49cc:	65 73 29             	gs jae 49f8 <__FRAME_END__+0x4204>
    49cf:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    49d2:	62                   	(bad)  
    49d3:	75 69                	jne    4a3e <__FRAME_END__+0x424a>
    49d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    49d6:	74 69                	je     4a41 <__FRAME_END__+0x424d>
    49d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    49d9:	5f                   	pop    rdi
    49da:	65 78 70             	gs js  4a4d <__FRAME_END__+0x4259>
    49dd:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    49e2:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    49e5:	70 72                	jo     4a59 <__FRAME_END__+0x4265>
    49e7:	29 2c 20             	sub    DWORD PTR [rax+riz*1],ebp
    49ea:	72 65                	jb     4a51 <__FRAME_END__+0x425d>
    49ec:	73 29                	jae    4a17 <__FRAME_END__+0x4223>
    49ee:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    49f1:	41 53                	push   r11
    49f3:	4d                   	rex.WRB
    49f4:	4e                   	rex.WRX
    49f5:	41                   	rex.B
    49f6:	4d                   	rex.WRB
    49f7:	45 28 63 6e          	sub    BYTE PTR [r11+0x6e],r12b
    49fb:	61                   	(bad)  
    49fc:	6d                   	ins    DWORD PTR es:[rdi],dx
    49fd:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    4a00:	5f                   	pop    rdi
    4a01:	5f                   	pop    rdi
    4a02:	41 53                	push   r11
    4a04:	4d                   	rex.WRB
    4a05:	4e                   	rex.WRX
    4a06:	41                   	rex.B
    4a07:	4d                   	rex.WRB
    4a08:	45 32 20             	xor    r12b,BYTE PTR [r8]
    4a0b:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4a0e:	55                   	push   rbp
    4a0f:	53                   	push   rbx
    4a10:	45 52                	rex.RB push r10
    4a12:	5f                   	pop    rdi
    4a13:	4c                   	rex.WR
    4a14:	41                   	rex.B
    4a15:	42                   	rex.X
    4a16:	45                   	rex.RB
    4a17:	4c 5f                	rex.WR pop rdi
    4a19:	50                   	push   rax
    4a1a:	52                   	push   rdx
    4a1b:	45                   	rex.RB
    4a1c:	46                   	rex.RX
    4a1d:	49 58                	rex.WB pop r8
    4a1f:	5f                   	pop    rdi
    4a20:	5f                   	pop    rdi
    4a21:	2c 20                	sub    al,0x20
    4a23:	63 6e 61             	movsxd ebp,DWORD PTR [rsi+0x61]
    4a26:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a27:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4a2a:	5f                   	pop    rdi
    4a2b:	5f                   	pop    rdi
    4a2c:	46                   	rex.RX
    4a2d:	4c 54                	rex.WR push rsp
    4a2f:	33 32                	xor    esi,DWORD PTR [rdx]
    4a31:	58                   	pop    rax
    4a32:	5f                   	pop    rdi
    4a33:	4d                   	rex.WRB
    4a34:	41 58                	pop    r8
    4a36:	5f                   	pop    rdi
    4a37:	31 30                	xor    DWORD PTR [rax],esi
    4a39:	5f                   	pop    rdi
    4a3a:	45 58                	rex.RB pop r8
    4a3c:	50                   	push   rax
    4a3d:	5f                   	pop    rdi
    4a3e:	5f                   	pop    rdi
    4a3f:	20 33                	and    BYTE PTR [rbx],dh
    4a41:	30 38                	xor    BYTE PTR [rax],bh
    4a43:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4a46:	61                   	(bad)  
    4a47:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a48:	64 36 34 20          	fs ss xor al,0x20
    4a4c:	31 00                	xor    DWORD PTR [rax],eax
    4a4e:	5f                   	pop    rdi
    4a4f:	5f                   	pop    rdi
    4a50:	57                   	push   rdi
    4a51:	4f 52                	rex.WRXB push r10
    4a53:	44 53                	rex.R push rbx
    4a55:	49 5a                	rex.WB pop r10
    4a57:	45 20 36             	and    BYTE PTR [r14],r14b
    4a5a:	34 00                	xor    al,0x0
    4a5c:	5f                   	pop    rdi
    4a5d:	5f                   	pop    rdi
    4a5e:	75 6e                	jne    4ace <__FRAME_END__+0x42da>
    4a60:	69 78 20 31 00 5f 63 	imul   edi,DWORD PTR [rax+0x20],0x635f0031
    4a67:	68 61 69 6e 00       	push   0x6e6961
    4a6c:	5f                   	pop    rdi
    4a6d:	5f                   	pop    rdi
    4a6e:	46                   	rex.RX
    4a6f:	4c 54                	rex.WR push rsp
    4a71:	36 34 5f             	ss xor al,0x5f
    4a74:	44                   	rex.R
    4a75:	45                   	rex.RB
    4a76:	4e                   	rex.WRX
    4a77:	4f 52                	rex.WRXB push r10
    4a79:	4d 5f                	rex.WRB pop r15
    4a7b:	4d                   	rex.WRB
    4a7c:	49                   	rex.WB
    4a7d:	4e 5f                	rex.WRX pop rdi
    4a7f:	5f                   	pop    rdi
    4a80:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    4a83:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    4a86:	36 35 36 34 35 38    	ss xor eax,0x38353436
    4a8c:	34 31                	xor    al,0x31
    4a8e:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    4a91:	35 34 34 31 37       	xor    eax,0x37313434
    4a96:	36 35 36 38 37 39    	ss xor eax,0x39373836
    4a9c:	32 38                	xor    bh,BYTE PTR [rax]
    4a9e:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    4aa1:	32 31                	xor    dh,BYTE PTR [rcx]
    4aa3:	33 37                	xor    esi,DWORD PTR [rdi]
    4aa5:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4aa8:	33 32                	xor    esi,DWORD PTR [rdx]
    4aaa:	34 46                	xor    al,0x46
    4aac:	36 34 00             	ss xor al,0x0
    4aaf:	4c 5f                	rex.WR pop rdi
    4ab1:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    4ab5:	6d                   	ins    DWORD PTR es:[rdi],dx
    4ab6:	69 64 20 39 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x39],0x505f5f00
    4abd:	50 
    4abe:	54                   	push   rsp
    4abf:	52                   	push   rdx
    4ac0:	44                   	rex.R
    4ac1:	49                   	rex.WB
    4ac2:	46                   	rex.RX
    4ac3:	46 5f                	rex.RX pop rdi
    4ac5:	54                   	push   rsp
    4ac6:	59                   	pop    rcx
    4ac7:	50                   	push   rax
    4ac8:	45 5f                	rex.RB pop r15
    4aca:	5f                   	pop    rdi
    4acb:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4acf:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4ad3:	74 00                	je     4ad5 <__FRAME_END__+0x42e1>
    4ad5:	5f                   	pop    rdi
    4ad6:	5f                   	pop    rdi
    4ad7:	46                   	rex.RX
    4ad8:	4c 54                	rex.WR push rsp
    4ada:	33 32                	xor    esi,DWORD PTR [rdx]
    4adc:	5f                   	pop    rdi
    4add:	4d                   	rex.WRB
    4ade:	41 58                	pop    r8
    4ae0:	5f                   	pop    rdi
    4ae1:	31 30                	xor    DWORD PTR [rax],esi
    4ae3:	5f                   	pop    rdi
    4ae4:	45 58                	rex.RB pop r8
    4ae6:	50                   	push   rax
    4ae7:	5f                   	pop    rdi
    4ae8:	5f                   	pop    rdi
    4ae9:	20 33                	and    BYTE PTR [rbx],dh
    4aeb:	38 00                	cmp    BYTE PTR [rax],al
    4aed:	5f                   	pop    rdi
    4aee:	5f                   	pop    rdi
    4aef:	57                   	push   rdi
    4af0:	4f 52                	rex.WRXB push r10
    4af2:	44 53                	rex.R push rbx
    4af4:	49 5a                	rex.WB pop r10
    4af6:	45 5f                	rex.RB pop r15
    4af8:	54                   	push   rsp
    4af9:	49                   	rex.WB
    4afa:	4d                   	rex.WRB
    4afb:	45                   	rex.RB
    4afc:	36 34 5f             	ss xor al,0x5f
    4aff:	43                   	rex.XB
    4b00:	4f                   	rex.WRXB
    4b01:	4d 50                	rex.WRB push r8
    4b03:	41 54                	push   r12
    4b05:	33 32                	xor    esi,DWORD PTR [rdx]
    4b07:	20 31                	and    BYTE PTR [rcx],dh
    4b09:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4b0c:	46                   	rex.RX
    4b0d:	4c 54                	rex.WR push rsp
    4b0f:	31 32                	xor    DWORD PTR [rdx],esi
    4b11:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    4b14:	45                   	rex.RB
    4b15:	43                   	rex.XB
    4b16:	49                   	rex.WB
    4b17:	4d                   	rex.WRB
    4b18:	41                   	rex.B
    4b19:	4c 5f                	rex.WR pop rdi
    4b1b:	44                   	rex.R
    4b1c:	49                   	rex.WB
    4b1d:	47 5f                	rex.RXB pop r15
    4b1f:	5f                   	pop    rdi
    4b20:	20 33                	and    BYTE PTR [rbx],dh
    4b22:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4b26:	50                   	push   rax
    4b27:	54                   	push   rsp
    4b28:	52                   	push   rdx
    4b29:	44                   	rex.R
    4b2a:	49                   	rex.WB
    4b2b:	46                   	rex.RX
    4b2c:	46 5f                	rex.RX pop rdi
    4b2e:	57                   	push   rdi
    4b2f:	49                   	rex.WB
    4b30:	44 54                	rex.R push rsp
    4b32:	48 5f                	rex.W pop rdi
    4b34:	5f                   	pop    rdi
    4b35:	20 36                	and    BYTE PTR [rsi],dh
    4b37:	34 00                	xor    al,0x0
    4b39:	5f                   	pop    rdi
    4b3a:	5f                   	pop    rdi
    4b3b:	49                   	rex.WB
    4b3c:	4e 54                	rex.WRX push rsp
    4b3e:	5f                   	pop    rdi
    4b3f:	4c                   	rex.WR
    4b40:	45                   	rex.RB
    4b41:	41 53                	push   r11
    4b43:	54                   	push   rsp
    4b44:	33 32                	xor    esi,DWORD PTR [rdx]
    4b46:	5f                   	pop    rdi
    4b47:	4d                   	rex.WRB
    4b48:	41 58                	pop    r8
    4b4a:	5f                   	pop    rdi
    4b4b:	5f                   	pop    rdi
    4b4c:	20 30                	and    BYTE PTR [rax],dh
    4b4e:	78 37                	js     4b87 <__FRAME_END__+0x4393>
    4b50:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    4b57:	00 5f 5f 
    4b5a:	55                   	push   rbp
    4b5b:	49                   	rex.WB
    4b5c:	4e 54                	rex.WRX push rsp
    4b5e:	5f                   	pop    rdi
    4b5f:	46                   	rex.RX
    4b60:	41 53                	push   r11
    4b62:	54                   	push   rsp
    4b63:	36 34 5f             	ss xor al,0x5f
    4b66:	54                   	push   rsp
    4b67:	59                   	pop    rcx
    4b68:	50                   	push   rax
    4b69:	45 5f                	rex.RB pop r15
    4b6b:	5f                   	pop    rdi
    4b6c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4b70:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    4b74:	73 69                	jae    4bdf <__FRAME_END__+0x43eb>
    4b76:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4b78:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4b7d:	74 00                	je     4b7f <__FRAME_END__+0x438b>
    4b7f:	5f                   	pop    rdi
    4b80:	5f                   	pop    rdi
    4b81:	73 74                	jae    4bf7 <__FRAME_END__+0x4403>
    4b83:	75 62                	jne    4be7 <__FRAME_END__+0x43f3>
    4b85:	5f                   	pop    rdi
    4b86:	73 73                	jae    4bfb <__FRAME_END__+0x4407>
    4b88:	74 6b                	je     4bf5 <__FRAME_END__+0x4401>
    4b8a:	20 00                	and    BYTE PTR [rax],al
    4b8c:	5f                   	pop    rdi
    4b8d:	49                   	rex.WB
    4b8e:	4f 5f                	rex.WRXB pop r15
    4b90:	66 70 6f             	data16 jo 4c02 <__FRAME_END__+0x440e>
    4b93:	73 36                	jae    4bcb <__FRAME_END__+0x43d7>
    4b95:	34 5f                	xor    al,0x5f
    4b97:	74 20                	je     4bb9 <__FRAME_END__+0x43c5>
    4b99:	5f                   	pop    rdi
    4b9a:	47 5f                	rex.RXB pop r15
    4b9c:	66 70 6f             	data16 jo 4c0e <__FRAME_END__+0x441a>
    4b9f:	73 36                	jae    4bd7 <__FRAME_END__+0x43e3>
    4ba1:	34 5f                	xor    al,0x5f
    4ba3:	74 00                	je     4ba5 <__FRAME_END__+0x43b1>
    4ba5:	5f                   	pop    rdi
    4ba6:	5f                   	pop    rdi
    4ba7:	54                   	push   rsp
    4ba8:	48 52                	rex.W push rdx
    4baa:	4f 57                	rex.WRXB push r15
    4bac:	4e                   	rex.WRX
    4bad:	4c 20 5f 5f          	rex.WR and BYTE PTR [rdi+0x5f],r11b
    4bb1:	61                   	(bad)  
    4bb2:	74 74                	je     4c28 <__FRAME_END__+0x4434>
    4bb4:	72 69                	jb     4c1f <__FRAME_END__+0x442b>
    4bb6:	62                   	(bad)  
    4bb7:	75 74                	jne    4c2d <__FRAME_END__+0x4439>
    4bb9:	65 5f                	gs pop rdi
    4bbb:	5f                   	pop    rdi
    4bbc:	20 28                	and    BYTE PTR [rax],ch
    4bbe:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4bc1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4bc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4bc3:	74 68                	je     4c2d <__FRAME_END__+0x4439>
    4bc5:	72 6f                	jb     4c36 <__FRAME_END__+0x4442>
    4bc7:	77 5f                	ja     4c28 <__FRAME_END__+0x4434>
    4bc9:	5f                   	pop    rdi
    4bca:	29 29                	sub    DWORD PTR [rcx],ebp
    4bcc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bcf:	4c                   	rex.WR
    4bd0:	44                   	rex.R
    4bd1:	42                   	rex.X
    4bd2:	4c 5f                	rex.WR pop rdi
    4bd4:	4d                   	rex.WRB
    4bd5:	41 58                	pop    r8
    4bd7:	5f                   	pop    rdi
    4bd8:	31 30                	xor    DWORD PTR [rax],esi
    4bda:	5f                   	pop    rdi
    4bdb:	45 58                	rex.RB pop r8
    4bdd:	50                   	push   rax
    4bde:	5f                   	pop    rdi
    4bdf:	5f                   	pop    rdi
    4be0:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    4be3:	33 32                	xor    esi,DWORD PTR [rdx]
    4be5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4be8:	44                   	rex.R
    4be9:	45                   	rex.RB
    4bea:	43                   	rex.XB
    4beb:	36 34 5f             	ss xor al,0x5f
    4bee:	4d                   	rex.WRB
    4bef:	49                   	rex.WB
    4bf0:	4e 5f                	rex.WRX pop rdi
    4bf2:	5f                   	pop    rdi
    4bf3:	20 31                	and    BYTE PTR [rcx],dh
    4bf5:	45 2d 33 38 33 44    	rex.RB sub eax,0x44333833
    4bfb:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    4bff:	46                   	rex.RX
    4c00:	4c 54                	rex.WR push rsp
    4c02:	33 32                	xor    esi,DWORD PTR [rdx]
    4c04:	5f                   	pop    rdi
    4c05:	4d                   	rex.WRB
    4c06:	41 58                	pop    r8
    4c08:	5f                   	pop    rdi
    4c09:	5f                   	pop    rdi
    4c0a:	20 33                	and    BYTE PTR [rbx],dh
    4c0c:	2e 34 30             	cs xor al,0x30
    4c0f:	32 38                	xor    bh,BYTE PTR [rax]
    4c11:	32 33                	xor    dh,BYTE PTR [rbx]
    4c13:	34 36                	xor    al,0x36
    4c15:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    4c18:	35 32 38 38 35       	xor    eax,0x35383832
    4c1d:	39 38                	cmp    DWORD PTR [rax],edi
    4c1f:	31 31                	xor    DWORD PTR [rcx],esi
    4c21:	37                   	(bad)  
    4c22:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    4c25:	38 33                	cmp    BYTE PTR [rbx],dh
    4c27:	34 38                	xor    al,0x38
    4c29:	34 35                	xor    al,0x35
    4c2b:	31 36                	xor    DWORD PTR [rsi],esi
    4c2d:	39 32                	cmp    DWORD PTR [rdx],esi
    4c2f:	35 65 2b 33 38       	xor    eax,0x38332b65
    4c34:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    4c37:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c3a:	44                   	rex.R
    4c3b:	42                   	rex.X
    4c3c:	4c 5f                	rex.WR pop rdi
    4c3e:	45 50                	rex.RB push r8
    4c40:	53                   	push   rbx
    4c41:	49                   	rex.WB
    4c42:	4c                   	rex.WR
    4c43:	4f                   	rex.WRXB
    4c44:	4e 5f                	rex.WRX pop rdi
    4c46:	5f                   	pop    rdi
    4c47:	20 28                	and    BYTE PTR [rax],ch
    4c49:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    4c4d:	62                   	(bad)  
    4c4e:	6c                   	ins    BYTE PTR es:[rdi],dx
    4c4f:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    4c52:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    4c55:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    4c58:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    4c5c:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33317f92 <_end+0x33116f7a>
    4c62:	30 38                	xor    BYTE PTR [rax],bh
    4c64:	30 38                	xor    BYTE PTR [rax],bh
    4c66:	34 37                	xor    al,0x37
    4c68:	32 36                	xor    dh,BYTE PTR [rsi]
    4c6a:	33 33                	xor    esi,DWORD PTR [rbx]
    4c6c:	33 36                	xor    esi,DWORD PTR [rsi]
    4c6e:	31 38                	xor    DWORD PTR [rax],edi
    4c70:	31 36                	xor    DWORD PTR [rsi],esi
    4c72:	34 30                	xor    al,0x30
    4c74:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    4c78:	31 36                	xor    DWORD PTR [rsi],esi
    4c7a:	4c 29 00             	sub    QWORD PTR [rax],r8
    4c7d:	5f                   	pop    rdi
    4c7e:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    4c81:	5f                   	pop    rdi
    4c82:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    4c85:	75 6d                	jne    4cf4 <__FRAME_END__+0x4500>
    4c87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4c88:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c8b:	50                   	push   rax
    4c8c:	52                   	push   rdx
    4c8d:	41                   	rex.B
    4c8e:	47                   	rex.RXB
    4c8f:	4d                   	rex.WRB
    4c90:	41 5f                	pop    r15
    4c92:	52                   	push   rdx
    4c93:	45                   	rex.RB
    4c94:	44                   	rex.R
    4c95:	45                   	rex.RB
    4c96:	46                   	rex.RX
    4c97:	49                   	rex.WB
    4c98:	4e                   	rex.WRX
    4c99:	45 5f                	rex.RB pop r15
    4c9b:	45 58                	rex.RB pop r8
    4c9d:	54                   	push   rsp
    4c9e:	4e                   	rex.WRX
    4c9f:	41                   	rex.B
    4ca0:	4d                   	rex.WRB
    4ca1:	45 20 31             	and    BYTE PTR [r9],r14b
    4ca4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4ca7:	53                   	push   rbx
    4ca8:	49                   	rex.WB
    4ca9:	47 5f                	rex.RXB pop r15
    4cab:	41 54                	push   r12
    4cad:	4f                   	rex.WRXB
    4cae:	4d                   	rex.WRB
    4caf:	49                   	rex.WB
    4cb0:	43 5f                	rex.XB pop r15
    4cb2:	54                   	push   rsp
    4cb3:	59                   	pop    rcx
    4cb4:	50                   	push   rax
    4cb5:	45 5f                	rex.RB pop r15
    4cb7:	5f                   	pop    rdi
    4cb8:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    4cbb:	74 00                	je     4cbd <__FRAME_END__+0x44c9>
    4cbd:	5f                   	pop    rdi
    4cbe:	5f                   	pop    rdi
    4cbf:	46                   	rex.RX
    4cc0:	4c 54                	rex.WR push rsp
    4cc2:	36 34 58             	ss xor al,0x58
    4cc5:	5f                   	pop    rdi
    4cc6:	44                   	rex.R
    4cc7:	45                   	rex.RB
    4cc8:	4e                   	rex.WRX
    4cc9:	4f 52                	rex.WRXB push r10
    4ccb:	4d 5f                	rex.WRB pop r15
    4ccd:	4d                   	rex.WRB
    4cce:	49                   	rex.WB
    4ccf:	4e 5f                	rex.WRX pop rdi
    4cd1:	5f                   	pop    rdi
    4cd2:	20 33                	and    BYTE PTR [rbx],dh
    4cd4:	2e 36 34 35          	cs ss xor al,0x35
    4cd8:	31 39                	xor    DWORD PTR [rcx],edi
    4cda:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38387e13 <_end+0x38186dfb>
    4ce0:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    4ce3:	34 36                	xor    al,0x36
    4ce5:	30 32                	xor    BYTE PTR [rdx],dh
    4ce7:	35 32 38 34 30       	xor    eax,0x30343832
    4cec:	35 39 33 33 36       	xor    eax,0x36333339
    4cf1:	31 39                	xor    DWORD PTR [rcx],edi
    4cf3:	34 31                	xor    al,0x31
    4cf5:	39 38                	cmp    DWORD PTR [rax],edi
    4cf7:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4cfa:	34 39                	xor    al,0x39
    4cfc:	35 31 46 36 34       	xor    eax,0x34364631
    4d01:	78 00                	js     4d03 <__FRAME_END__+0x450f>
    4d03:	5f                   	pop    rdi
    4d04:	5f                   	pop    rdi
    4d05:	55                   	push   rbp
    4d06:	53                   	push   rbx
    4d07:	45 5f                	rex.RB pop r15
    4d09:	50                   	push   rax
    4d0a:	4f 53                	rex.WRXB push r11
    4d0c:	49 58                	rex.WB pop r8
    4d0e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d11:	46                   	rex.RX
    4d12:	4c 54                	rex.WR push rsp
    4d14:	31 32                	xor    DWORD PTR [rdx],esi
    4d16:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    4d19:	41 53                	push   r11
    4d1b:	5f                   	pop    rdi
    4d1c:	44                   	rex.R
    4d1d:	45                   	rex.RB
    4d1e:	4e                   	rex.WRX
    4d1f:	4f 52                	rex.WRXB push r10
    4d21:	4d 5f                	rex.WRB pop r15
    4d23:	5f                   	pop    rdi
    4d24:	20 31                	and    BYTE PTR [rcx],dh
    4d26:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4d29:	4f 5f                	rex.WRXB pop r15
    4d2b:	43 55                	rex.XB push r13
    4d2d:	52                   	push   rdx
    4d2e:	52                   	push   rdx
    4d2f:	45                   	rex.RB
    4d30:	4e 54                	rex.WRX push rsp
    4d32:	4c 59                	rex.WR pop rcx
    4d34:	5f                   	pop    rdi
    4d35:	50                   	push   rax
    4d36:	55                   	push   rbp
    4d37:	54                   	push   rsp
    4d38:	54                   	push   rsp
    4d39:	49                   	rex.WB
    4d3a:	4e                   	rex.WRX
    4d3b:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    4d3e:	78 38                	js     4d78 <__FRAME_END__+0x4584>
    4d40:	30 30                	xor    BYTE PTR [rax],dh
    4d42:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d45:	44                   	rex.R
    4d46:	42                   	rex.X
    4d47:	4c 5f                	rex.WR pop rdi
    4d49:	44                   	rex.R
    4d4a:	45                   	rex.RB
    4d4b:	43                   	rex.XB
    4d4c:	49                   	rex.WB
    4d4d:	4d                   	rex.WRB
    4d4e:	41                   	rex.B
    4d4f:	4c 5f                	rex.WR pop rdi
    4d51:	44                   	rex.R
    4d52:	49                   	rex.WB
    4d53:	47 5f                	rex.RXB pop r15
    4d55:	5f                   	pop    rdi
    4d56:	20 31                	and    BYTE PTR [rcx],dh
    4d58:	37                   	(bad)  
    4d59:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d5c:	4c                   	rex.WR
    4d5d:	44                   	rex.R
    4d5e:	42                   	rex.X
    4d5f:	4c 5f                	rex.WR pop rdi
    4d61:	48                   	rex.W
    4d62:	41 53                	push   r11
    4d64:	5f                   	pop    rdi
    4d65:	44                   	rex.R
    4d66:	45                   	rex.RB
    4d67:	4e                   	rex.WRX
    4d68:	4f 52                	rex.WRXB push r10
    4d6a:	4d 5f                	rex.WRB pop r15
    4d6c:	5f                   	pop    rdi
    4d6d:	20 31                	and    BYTE PTR [rcx],dh
    4d6f:	00 5f 75             	add    BYTE PTR [rdi+0x75],bl
    4d72:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d73:	75 73                	jne    4de8 <__FRAME_END__+0x45f4>
    4d75:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    4d79:	5f                   	pop    rdi
    4d7a:	49                   	rex.WB
    4d7b:	4f 5f                	rex.WRXB pop r15
    4d7d:	62                   	(bad)  
    4d7e:	75 66                	jne    4de6 <__FRAME_END__+0x45f2>
    4d80:	5f                   	pop    rdi
    4d81:	62 61                	(bad)  
    4d83:	73 65                	jae    4dea <__FRAME_END__+0x45f6>
    4d85:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d88:	73 74                	jae    4dfe <__FRAME_END__+0x460a>
    4d8a:	75 62                	jne    4dee <__FRAME_END__+0x45fa>
    4d8c:	5f                   	pop    rdi
    4d8d:	6c                   	ins    BYTE PTR es:[rdi],dx
    4d8e:	63 68 6d             	movsxd ebp,DWORD PTR [rax+0x6d]
    4d91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d92:	64 20 00             	and    BYTE PTR fs:[rax],al
    4d95:	5f                   	pop    rdi
    4d96:	5f                   	pop    rdi
    4d97:	46                   	rex.RX
    4d98:	4c 54                	rex.WR push rsp
    4d9a:	36 34 5f             	ss xor al,0x5f
    4d9d:	4d                   	rex.WRB
    4d9e:	41                   	rex.B
    4d9f:	4e 54                	rex.WRX push rsp
    4da1:	5f                   	pop    rdi
    4da2:	44                   	rex.R
    4da3:	49                   	rex.WB
    4da4:	47 5f                	rex.RXB pop r15
    4da6:	5f                   	pop    rdi
    4da7:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f4de0 <_end+0x5f3f3dc8>
    4dad:	44                   	rex.R
    4dae:	45                   	rex.RB
    4daf:	43                   	rex.XB
    4db0:	36 34 5f             	ss xor al,0x5f
    4db3:	4d                   	rex.WRB
    4db4:	41                   	rex.B
    4db5:	4e 54                	rex.WRX push rsp
    4db7:	5f                   	pop    rdi
    4db8:	44                   	rex.R
    4db9:	49                   	rex.WB
    4dba:	47 5f                	rex.RXB pop r15
    4dbc:	5f                   	pop    rdi
    4dbd:	20 31                	and    BYTE PTR [rcx],dh
    4dbf:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4dc3:	46                   	rex.RX
    4dc4:	4c 54                	rex.WR push rsp
    4dc6:	5f                   	pop    rdi
    4dc7:	48                   	rex.W
    4dc8:	41 53                	push   r11
    4dca:	5f                   	pop    rdi
    4dcb:	44                   	rex.R
    4dcc:	45                   	rex.RB
    4dcd:	4e                   	rex.WRX
    4dce:	4f 52                	rex.WRXB push r10
    4dd0:	4d 5f                	rex.WRB pop r15
    4dd2:	5f                   	pop    rdi
    4dd3:	20 31                	and    BYTE PTR [rcx],dh
    4dd5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4dd8:	44                   	rex.R
    4dd9:	45                   	rex.RB
    4dda:	43                   	rex.XB
    4ddb:	49                   	rex.WB
    4ddc:	4d                   	rex.WRB
    4ddd:	41                   	rex.B
    4dde:	4c 5f                	rex.WR pop rdi
    4de0:	44                   	rex.R
    4de1:	49                   	rex.WB
    4de2:	47 5f                	rex.RXB pop r15
    4de4:	5f                   	pop    rdi
    4de5:	20 32                	and    BYTE PTR [rdx],dh
    4de7:	31 00                	xor    DWORD PTR [rax],eax

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
       0:	04 00                	add    al,0x0
       2:	02 00                	add    al,BYTE PTR [rax]
       4:	00 00                	add    BYTE PTR [rax],al
       6:	00 07                	add    BYTE PTR [rdi],al
       8:	0f 01 00             	sgdt   [rax]
       b:	00 03                	add    BYTE PTR [rbx],al
       d:	00 01                	add    BYTE PTR [rcx],al
       f:	03 1f                	add    ebx,DWORD PTR [rdi]
      11:	07                   	(bad)  
      12:	07                   	(bad)  
      13:	17                   	(bad)  
      14:	09 00                	or     DWORD PTR [rax],eax
      16:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      19:	01 05 07 39 09 00    	add    DWORD PTR [rip+0x93907],eax        # 93926 <__FRAME_END__+0x93132>
      1f:	00 03                	add    BYTE PTR [rbx],al
      21:	1b 08                	sbb    ecx,DWORD PTR [rax]
      23:	06                   	(bad)  
      24:	1f                   	(bad)  
      25:	4d                   	rex.WRB
      26:	45 00 00             	add    BYTE PTR [r8],r8b
      29:	03 21                	add    esp,DWORD PTR [rcx]
      2b:	09 07                	or     DWORD PTR [rdi],eax
      2d:	49 09 00             	or     QWORD PTR [r8],rax
      30:	00 03                	add    BYTE PTR [rbx],al
      32:	a8 03                	test   al,0x3
      34:	0a 07                	or     al,BYTE PTR [rdi]
      36:	e7 0a                	out    0xa,eax
      38:	00 00                	add    BYTE PTR [rax],al
      3a:	03 ab 03 0b 07 4f    	add    ebp,DWORD PTR [rbx+0x4f070b03]
      40:	0c 00                	or     al,0x0
      42:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      45:	ac                   	lods   al,BYTE PTR ds:[rsi]
      46:	03 0c 04             	add    ecx,DWORD PTR [rsp+rax*1]
      49:	07                   	(bad)  
      4a:	65 0c 00             	gs or  al,0x0
      4d:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      50:	c0 03 0d             	rol    BYTE PTR [rbx],0xd
      53:	03 0a                	add    ecx,DWORD PTR [rdx]
      55:	0e                   	(bad)  
      56:	07                   	(bad)  
      57:	af                   	scas   eax,DWORD PTR es:[rdi]
      58:	0c 00                	or     al,0x0
      5a:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
      5d:	04 07                	add    al,0x7
      5f:	07                   	(bad)  
      60:	0d 00 00 04 07       	or     eax,0x7040000
      65:	3b 0d 00 00 03 21    	cmp    ecx,DWORD PTR [rip+0x21030000]        # 2103006b <_end+0x20e2f053>
      6b:	02 07                	add    al,BYTE PTR [rdi]
      6d:	4b 0d 00 00 04 03    	rex.WXB or rax,0x3040000
      73:	23 03                	and    eax,DWORD PTR [rbx]
      75:	05 18 5d 14 00       	add    eax,0x145d18
      7a:	00 03                	add    BYTE PTR [rbx],al
      7c:	1b 0b                	sbb    ecx,DWORD PTR [rbx]
      7e:	07                   	(bad)  
      7f:	4f 0c 00             	rex.WRXB or al,0x0
      82:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      85:	e2 0d                	loop   94 <_init-0x424>
      87:	00 00                	add    BYTE PTR [rax],al
      89:	03 82 01 0f 07 40    	add    eax,DWORD PTR [rdx+0x40070f01]
      8f:	0e                   	(bad)  
      90:	00 00                	add    BYTE PTR [rax],al
      92:	04 06                	add    al,0x6
      94:	cc                   	int3   
      95:	01 b8 28 00 00 04    	add    DWORD PTR [rax+0x4000028],edi
      9b:	03 24 10             	add    esp,DWORD PTR [rax+rdx*1]
      9e:	05 02 3c 2c 00       	add    eax,0x2c3c02
      a3:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      a6:	25 11 05 02 3e       	and    eax,0x3e020511
      ab:	2c 00                	sub    al,0x0
      ad:	00 04 05 27 b0 2a 00 	add    BYTE PTR [rax*1+0x2ab027],al
      b4:	00 03                	add    BYTE PTR [rbx],al
      b6:	29 04 05 1d b0 10 00 	sub    DWORD PTR [rax*1+0x10b01d],eax
      bd:	00 03                	add    BYTE PTR [rbx],al
      bf:	23 12                	and    edx,DWORD PTR [rdx]
      c1:	07                   	(bad)  
      c2:	2e 0f 00 00          	sldt   WORD PTR cs:[rax]
      c6:	03 13                	add    edx,DWORD PTR [rbx]
      c8:	02 07                	add    al,BYTE PTR [rdi]
      ca:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
      ce:	04 03                	add    al,0x3
      d0:	15 13 05 02 8d       	adc    eax,0x8d020513
      d5:	1a 00                	sbb    al,BYTE PTR [rax]
      d7:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      da:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
      de:	04 07                	add    al,0x7
      e0:	8c 0f                	mov    WORD PTR [rdi],cs
      e2:	00 00                	add    BYTE PTR [rax],al
      e4:	03 35 14 07 e4 0f    	add    esi,DWORD PTR [rip+0xfe40714]        # fe407fe <_end+0xfc3f7e6>
      ea:	00 00                	add    BYTE PTR [rax],al
      ec:	04 07                	add    al,0x7
      ee:	f4                   	hlt    
      ef:	0f 00 00             	sldt   WORD PTR [rax]
      f2:	04 07                	add    al,0x7
      f4:	c0 11 00             	rcl    BYTE PTR [rcx],0x0
      f7:	00 03                	add    BYTE PTR [rbx],al
      f9:	83 01 15             	add    DWORD PTR [rcx],0x15
      fc:	07                   	(bad)  
      fd:	06                   	(bad)  
      fe:	12 00                	adc    al,BYTE PTR [rax]
     100:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     103:	34 12                	xor    al,0x12
     105:	00 00                	add    BYTE PTR [rax],al
     107:	03 8d 06 06 04 04    	add    ecx,DWORD PTR [rbp+0x4040606]
     10d:	04 00                	add    al,0x0
     10f:	04 00                	add    al,0x0
     111:	00 05 00 17 29 00    	add    BYTE PTR [rip+0x291700],al        # 291817 <_end+0x907ff>
     117:	00 05 00 e5 22 00    	add    BYTE PTR [rip+0x22e500],al        # 22e61d <_end+0x2d605>
     11d:	00 05 00 79 2b 00    	add    BYTE PTR [rip+0x2b7900],al        # 2b7a23 <_end+0xb6a0b>
     123:	00 05 00 3a 0b 00    	add    BYTE PTR [rip+0xb3a00],al        # b3b29 <__FRAME_END__+0xb3335>
     129:	00 05 00 dd 3d 00    	add    BYTE PTR [rip+0x3ddd00],al        # 3dde2f <_end+0x1dce17>
     12f:	00 05 00 52 07 00    	add    BYTE PTR [rip+0x75200],al        # 75335 <__FRAME_END__+0x74b41>
     135:	00 05 00 81 05 00    	add    BYTE PTR [rip+0x58100],al        # 5823b <__FRAME_END__+0x57a47>
     13b:	00 05 00 a2 36 00    	add    BYTE PTR [rip+0x36a200],al        # 36a341 <_end+0x169329>
     141:	00 05 00 2c 20 00    	add    BYTE PTR [rip+0x202c00],al        # 202d47 <_end+0x1d2f>
     147:	00 05 00 83 0c 00    	add    BYTE PTR [rip+0xc8300],al        # c844d <__FRAME_END__+0xc7c59>
     14d:	00 05 00 0a 09 00    	add    BYTE PTR [rip+0x90a00],al        # 90b53 <__FRAME_END__+0x9035f>
     153:	00 05 00 f9 2e 00    	add    BYTE PTR [rip+0x2ef900],al        # 2efa59 <_end+0xeea41>
     159:	00 05 00 60 47 00    	add    BYTE PTR [rip+0x476000],al        # 47615f <_end+0x275147>
     15f:	00 05 00 80 40 00    	add    BYTE PTR [rip+0x408000],al        # 408165 <_end+0x20714d>
     165:	00 05 00 87 29 00    	add    BYTE PTR [rip+0x298700],al        # 29886b <_end+0x97853>
     16b:	00 05 00 56 47 00    	add    BYTE PTR [rip+0x475600],al        # 475771 <_end+0x274759>
     171:	00 05 00 ca 42 00    	add    BYTE PTR [rip+0x42ca00],al        # 42cb77 <_end+0x22bb5f>
     177:	00 05 00 62 10 00    	add    BYTE PTR [rip+0x106200],al        # 10637d <__FRAME_END__+0x105b89>
     17d:	00 05 00 02 10 00    	add    BYTE PTR [rip+0x100200],al        # 100383 <__FRAME_END__+0xffb8f>
     183:	00 05 00 fd 25 00    	add    BYTE PTR [rip+0x25fd00],al        # 25fe89 <_end+0x5ee71>
     189:	00 05 00 e8 24 00    	add    BYTE PTR [rip+0x24e800],al        # 24e98f <_end+0x4d977>
     18f:	00 05 00 71 24 00    	add    BYTE PTR [rip+0x247100],al        # 247295 <_end+0x4627d>
     195:	00 05 00 38 46 00    	add    BYTE PTR [rip+0x463800],al        # 46399b <_end+0x262983>
     19b:	00 05 00 75 29 00    	add    BYTE PTR [rip+0x297500],al        # 2976a1 <_end+0x96689>
     1a1:	00 05 00 2b 39 00    	add    BYTE PTR [rip+0x392b00],al        # 392ca7 <_end+0x191c8f>
     1a7:	00 05 00 3b 09 00    	add    BYTE PTR [rip+0x93b00],al        # 93cad <__FRAME_END__+0x934b9>
     1ad:	00 05 00 22 28 00    	add    BYTE PTR [rip+0x282200],al        # 2823b3 <_end+0x8139b>
     1b3:	00 05 00 c6 2a 00    	add    BYTE PTR [rip+0x2ac600],al        # 2ac7b9 <_end+0xab7a1>
     1b9:	00 05 00 24 14 00    	add    BYTE PTR [rip+0x142400],al        # 1425bf <__FRAME_END__+0x141dcb>
     1bf:	00 05 00 1f 07 00    	add    BYTE PTR [rip+0x71f00],al        # 720c5 <__FRAME_END__+0x718d1>
     1c5:	00 05 00 79 3d 00    	add    BYTE PTR [rip+0x3d7900],al        # 3d7acb <_end+0x1d6ab3>
     1cb:	00 05 00 85 1b 00    	add    BYTE PTR [rip+0x1b8500],al        # 1b86d1 <__FRAME_END__+0x1b7edd>
     1d1:	00 05 00 c6 16 00    	add    BYTE PTR [rip+0x16c600],al        # 16c7d7 <__FRAME_END__+0x16bfe3>
     1d7:	00 05 00 38 07 00    	add    BYTE PTR [rip+0x73800],al        # 739dd <__FRAME_END__+0x731e9>
     1dd:	00 05 00 e1 31 00    	add    BYTE PTR [rip+0x31e100],al        # 31e2e3 <_end+0x11d2cb>
     1e3:	00 05 00 44 0a 00    	add    BYTE PTR [rip+0xa4400],al        # a45e9 <__FRAME_END__+0xa3df5>
     1e9:	00 05 00 8a 2d 00    	add    BYTE PTR [rip+0x2d8a00],al        # 2d8bef <_end+0xd7bd7>
     1ef:	00 05 00 99 3a 00    	add    BYTE PTR [rip+0x3a9900],al        # 3a9af5 <_end+0x1a8add>
     1f5:	00 05 00 49 1e 00    	add    BYTE PTR [rip+0x1e4900],al        # 1e4afb <__FRAME_END__+0x1e4307>
     1fb:	00 05 00 bb 4a 00    	add    BYTE PTR [rip+0x4abb00],al        # 4abd01 <_end+0x2aace9>
     201:	00 05 00 54 12 00    	add    BYTE PTR [rip+0x125400],al        # 125607 <__FRAME_END__+0x124e13>
     207:	00 05 00 fb 29 00    	add    BYTE PTR [rip+0x29fb00],al        # 29fd0d <_end+0x9ecf5>
     20d:	00 05 00 31 48 00    	add    BYTE PTR [rip+0x483100],al        # 483313 <_end+0x2822fb>
     213:	00 05 00 14 30 00    	add    BYTE PTR [rip+0x301400],al        # 301619 <_end+0x100601>
     219:	00 05 00 fc 06 00    	add    BYTE PTR [rip+0x6fc00],al        # 6fe1f <__FRAME_END__+0x6f62b>
     21f:	00 05 00 f8 34 00    	add    BYTE PTR [rip+0x34f800],al        # 34fa25 <_end+0x14ea0d>
     225:	00 05 00 a5 4c 00    	add    BYTE PTR [rip+0x4ca500],al        # 4ca72b <_end+0x2c9713>
     22b:	00 05 00 10 42 00    	add    BYTE PTR [rip+0x421000],al        # 421231 <_end+0x220219>
     231:	00 05 00 82 08 00    	add    BYTE PTR [rip+0x88200],al        # 88437 <__FRAME_END__+0x87c43>
     237:	00 05 00 3e 17 00    	add    BYTE PTR [rip+0x173e00],al        # 17403d <__FRAME_END__+0x173849>
     23d:	00 05 00 24 41 00    	add    BYTE PTR [rip+0x412400],al        # 412643 <_end+0x21162b>
     243:	00 05 00 91 26 00    	add    BYTE PTR [rip+0x269100],al        # 269349 <_end+0x68331>
     249:	00 05 00 ea 1a 00    	add    BYTE PTR [rip+0x1aea00],al        # 1aec4f <__FRAME_END__+0x1ae45b>
     24f:	00 05 00 b5 37 00    	add    BYTE PTR [rip+0x37b500],al        # 37b755 <_end+0x17a73d>
     255:	00 05 00 68 09 00    	add    BYTE PTR [rip+0x96800],al        # 96a5b <__FRAME_END__+0x96267>
     25b:	00 05 00 b1 09 00    	add    BYTE PTR [rip+0x9b100],al        # 9b361 <__FRAME_END__+0x9ab6d>
     261:	00 05 00 74 23 00    	add    BYTE PTR [rip+0x237400],al        # 237667 <_end+0x3664f>
     267:	00 05 00 d4 42 00    	add    BYTE PTR [rip+0x42d400],al        # 42d66d <_end+0x22c655>
     26d:	00 05 00 d5 0a 00    	add    BYTE PTR [rip+0xad500],al        # ad773 <__FRAME_END__+0xacf7f>
     273:	00 05 00 25 0d 00    	add    BYTE PTR [rip+0xd2500],al        # d2779 <__FRAME_END__+0xd1f85>
     279:	00 05 00 e1 1b 00    	add    BYTE PTR [rip+0x1be100],al        # 1be37f <__FRAME_END__+0x1bdb8b>
     27f:	00 05 00 db 09 00    	add    BYTE PTR [rip+0x9db00],al        # 9dd85 <__FRAME_END__+0x9d591>
     285:	00 05 00 ed 42 00    	add    BYTE PTR [rip+0x42ed00],al        # 42ef8b <_end+0x22df73>
     28b:	00 05 00 64 0c 00    	add    BYTE PTR [rip+0xc6400],al        # c6691 <__FRAME_END__+0xc5e9d>
     291:	00 05 00 65 46 00    	add    BYTE PTR [rip+0x466500],al        # 466797 <_end+0x26577f>
     297:	00 05 00 d6 26 00    	add    BYTE PTR [rip+0x26d600],al        # 26d89d <_end+0x6c885>
     29d:	00 05 00 86 22 00    	add    BYTE PTR [rip+0x228600],al        # 2288a3 <_end+0x2788b>
     2a3:	00 05 00 37 36 00    	add    BYTE PTR [rip+0x363700],al        # 3639a9 <_end+0x162991>
     2a9:	00 05 00 77 3c 00    	add    BYTE PTR [rip+0x3c7700],al        # 3c79af <_end+0x1c6997>
     2af:	00 05 00 54 39 00    	add    BYTE PTR [rip+0x395400],al        # 3956b5 <_end+0x19469d>
     2b5:	00 05 00 58 4b 00    	add    BYTE PTR [rip+0x4b5800],al        # 4b5abb <_end+0x2b4aa3>
     2bb:	00 05 00 ac 15 00    	add    BYTE PTR [rip+0x15ac00],al        # 15aec1 <__FRAME_END__+0x15a6cd>
     2c1:	00 05 00 d4 27 00    	add    BYTE PTR [rip+0x27d400],al        # 27d6c7 <_end+0x7c6af>
     2c7:	00 05 00 53 3e 00    	add    BYTE PTR [rip+0x3e5300],al        # 3e55cd <_end+0x1e45b5>
     2cd:	00 05 00 89 03 00    	add    BYTE PTR [rip+0x38900],al        # 38bd3 <__FRAME_END__+0x383df>
     2d3:	00 05 00 3f 47 00    	add    BYTE PTR [rip+0x473f00],al        # 4741d9 <_end+0x2731c1>
     2d9:	00 05 00 f1 0b 00    	add    BYTE PTR [rip+0xbf100],al        # bf3df <__FRAME_END__+0xbebeb>
     2df:	00 05 00 4a 31 00    	add    BYTE PTR [rip+0x314a00],al        # 314ce5 <_end+0x113ccd>
     2e5:	00 05 00 23 08 00    	add    BYTE PTR [rip+0x82300],al        # 825eb <__FRAME_END__+0x81df7>
     2eb:	00 05 00 3c 34 00    	add    BYTE PTR [rip+0x343c00],al        # 343ef1 <_end+0x142ed9>
     2f1:	00 05 00 9e 1b 00    	add    BYTE PTR [rip+0x1b9e00],al        # 1ba0f7 <__FRAME_END__+0x1b9903>
     2f7:	00 05 00 2b 3b 00    	add    BYTE PTR [rip+0x3b2b00],al        # 3b2dfd <_end+0x1b1de5>
     2fd:	00 05 00 f3 0a 00    	add    BYTE PTR [rip+0xaf300],al        # af603 <__FRAME_END__+0xaee0f>
     303:	00 05 00 b8 36 00    	add    BYTE PTR [rip+0x36b800],al        # 36bb09 <_end+0x16aaf1>
     309:	00 05 00 31 2b 00    	add    BYTE PTR [rip+0x2b3100],al        # 2b340f <_end+0xb23f7>
     30f:	00 05 00 3e 23 00    	add    BYTE PTR [rip+0x233e00],al        # 234115 <_end+0x330fd>
     315:	00 05 00 0e 44 00    	add    BYTE PTR [rip+0x440e00],al        # 44111b <_end+0x240103>
     31b:	00 05 00 6d 2a 00    	add    BYTE PTR [rip+0x2a6d00],al        # 2a7021 <_end+0xa6009>
     321:	00 05 00 7b 39 00    	add    BYTE PTR [rip+0x397b00],al        # 397e27 <_end+0x196e0f>
     327:	00 05 00 c7 3b 00    	add    BYTE PTR [rip+0x3bc700],al        # 3bca2d <_end+0x1bba15>
     32d:	00 05 00 6f 3f 00    	add    BYTE PTR [rip+0x3f6f00],al        # 3f7233 <_end+0x1f621b>
     333:	00 05 00 99 06 00    	add    BYTE PTR [rip+0x69900],al        # 69c39 <__FRAME_END__+0x69445>
     339:	00 05 00 49 1b 00    	add    BYTE PTR [rip+0x1b4900],al        # 1b4c3f <__FRAME_END__+0x1b444b>
     33f:	00 05 00 0d 33 00    	add    BYTE PTR [rip+0x330d00],al        # 331045 <_end+0x13002d>
     345:	00 05 00 24 4b 00    	add    BYTE PTR [rip+0x4b2400],al        # 4b274b <_end+0x2b1733>
     34b:	00 05 00 ef 3d 00    	add    BYTE PTR [rip+0x3def00],al        # 3df251 <_end+0x1de239>
     351:	00 05 00 8d 10 00    	add    BYTE PTR [rip+0x108d00],al        # 109057 <__FRAME_END__+0x108863>
     357:	00 05 00 fb 39 00    	add    BYTE PTR [rip+0x39fb00],al        # 39fe5d <_end+0x19ee45>
     35d:	00 05 00 69 42 00    	add    BYTE PTR [rip+0x426900],al        # 426c63 <_end+0x225c4b>
     363:	00 05 00 e1 34 00    	add    BYTE PTR [rip+0x34e100],al        # 34e469 <_end+0x14d451>
     369:	00 05 00 fe 22 00    	add    BYTE PTR [rip+0x22fe00],al        # 23016f <_end+0x2f157>
     36f:	00 05 00 0c 00 00    	add    BYTE PTR [rip+0xc00],al        # f75 <__FRAME_END__+0x781>
     375:	00 05 00 bb 2c 00    	add    BYTE PTR [rip+0x2cbb00],al        # 2cbe7b <_end+0xcae63>
     37b:	00 05 00 d4 30 00    	add    BYTE PTR [rip+0x30d400],al        # 30d781 <_end+0x10c769>
     381:	00 05 00 67 12 00    	add    BYTE PTR [rip+0x126700],al        # 126a87 <__FRAME_END__+0x126293>
     387:	00 05 00 40 2a 00    	add    BYTE PTR [rip+0x2a4000],al        # 2a438d <_end+0xa3375>
     38d:	00 05 00 8c 2e 00    	add    BYTE PTR [rip+0x2e8c00],al        # 2e8f93 <_end+0xe7f7b>
     393:	00 05 00 33 2f 00    	add    BYTE PTR [rip+0x2f3300],al        # 2f3699 <_end+0xf2681>
     399:	00 05 00 d3 21 00    	add    BYTE PTR [rip+0x21d300],al        # 21d69f <_end+0x1c687>
     39f:	00 05 00 3a 22 00    	add    BYTE PTR [rip+0x223a00],al        # 223da5 <_end+0x22d8d>
     3a5:	00 05 00 2c 1f 00    	add    BYTE PTR [rip+0x1f2c00],al        # 1f2fab <__FRAME_END__+0x1f27b7>
     3ab:	00 05 00 81 3f 00    	add    BYTE PTR [rip+0x3f8100],al        # 3f84b1 <_end+0x1f7499>
     3b1:	00 05 00 44 24 00    	add    BYTE PTR [rip+0x244400],al        # 2447b7 <_end+0x4379f>
     3b7:	00 05 00 8b 3a 00    	add    BYTE PTR [rip+0x3a8b00],al        # 3a8ebd <_end+0x1a7ea5>
     3bd:	00 05 00 85 21 00    	add    BYTE PTR [rip+0x218500],al        # 2188c3 <_end+0x178ab>
     3c3:	00 05 00 72 0b 00    	add    BYTE PTR [rip+0xb7200],al        # b75c9 <__FRAME_END__+0xb6dd5>
     3c9:	00 05 00 f7 27 00    	add    BYTE PTR [rip+0x27f700],al        # 27facf <_end+0x7eab7>
     3cf:	00 05 00 82 0e 00    	add    BYTE PTR [rip+0xe8200],al        # e85d5 <__FRAME_END__+0xe7de1>
     3d5:	00 05 00 39 4b 00    	add    BYTE PTR [rip+0x4b3900],al        # 4b3cdb <_end+0x2b2cc3>
     3db:	00 05 00 59 36 00    	add    BYTE PTR [rip+0x365900],al        # 365ce1 <_end+0x164cc9>
     3e1:	00 05 00 2a 42 00    	add    BYTE PTR [rip+0x422a00],al        # 422de7 <_end+0x221dcf>
     3e7:	00 05 00 5d 21 00    	add    BYTE PTR [rip+0x215d00],al        # 2160ed <_end+0x150d5>
     3ed:	00 05 00 ff 45 00    	add    BYTE PTR [rip+0x45ff00],al        # 4602f3 <_end+0x25f2db>
     3f3:	00 05 00 50 3a 00    	add    BYTE PTR [rip+0x3a5000],al        # 3a53f9 <_end+0x1a43e1>
     3f9:	00 05 00 f2 11 00    	add    BYTE PTR [rip+0x11f200],al        # 11f5ff <__FRAME_END__+0x11ee0b>
     3ff:	00 05 00 da 2a 00    	add    BYTE PTR [rip+0x2ada00],al        # 2ade05 <_end+0xacded>
     405:	00 05 00 1c 11 00    	add    BYTE PTR [rip+0x111c00],al        # 11200b <__FRAME_END__+0x111817>
     40b:	00 05 00 0c 2f 00    	add    BYTE PTR [rip+0x2f0c00],al        # 2f1011 <_end+0xefff9>
     411:	00 05 00 9e 49 00    	add    BYTE PTR [rip+0x499e00],al        # 49a217 <_end+0x2991ff>
     417:	00 05 00 7f 2a 00    	add    BYTE PTR [rip+0x2a7f00],al        # 2a831d <_end+0xa7305>
     41d:	00 05 00 3d 27 00    	add    BYTE PTR [rip+0x273d00],al        # 274123 <_end+0x7310b>
     423:	00 05 00 c5 07 00    	add    BYTE PTR [rip+0x7c500],al        # 7c929 <__FRAME_END__+0x7c135>
     429:	00 05 00 8b 33 00    	add    BYTE PTR [rip+0x338b00],al        # 338f2f <_end+0x137f17>
     42f:	00 05 00 c9 19 00    	add    BYTE PTR [rip+0x19c900],al        # 19cd35 <__FRAME_END__+0x19c541>
     435:	00 05 00 c4 44 00    	add    BYTE PTR [rip+0x44c400],al        # 44c83b <_end+0x24b823>
     43b:	00 05 00 1a 10 00    	add    BYTE PTR [rip+0x101a00],al        # 101e41 <__FRAME_END__+0x10164d>
     441:	00 05 00 8a 09 00    	add    BYTE PTR [rip+0x98a00],al        # 98e47 <__FRAME_END__+0x98653>
     447:	00 05 00 27 3a 00    	add    BYTE PTR [rip+0x3a2700],al        # 3a2b4d <_end+0x1a1b35>
     44d:	00 05 00 62 03 00    	add    BYTE PTR [rip+0x36200],al        # 36653 <__FRAME_END__+0x35e5f>
     453:	00 05 00 f2 02 00    	add    BYTE PTR [rip+0x2f200],al        # 2f659 <__FRAME_END__+0x2ee65>
     459:	00 05 00 fb 14 00    	add    BYTE PTR [rip+0x14fb00],al        # 14ff5f <__FRAME_END__+0x14f76b>
     45f:	00 05 00 52 2e 00    	add    BYTE PTR [rip+0x2e5200],al        # 2e5665 <_end+0xe464d>
     465:	00 05 00 d4 25 00    	add    BYTE PTR [rip+0x25d400],al        # 25d86b <_end+0x5c853>
     46b:	00 05 00 38 11 00    	add    BYTE PTR [rip+0x113800],al        # 113c71 <__FRAME_END__+0x11347d>
     471:	00 05 00 04 02 00    	add    BYTE PTR [rip+0x20400],al        # 20877 <__FRAME_END__+0x20083>
     477:	00 05 00 01 36 00    	add    BYTE PTR [rip+0x360100],al        # 36057d <_end+0x15f565>
     47d:	00 05 00 c0 04 00    	add    BYTE PTR [rip+0x4c000],al        # 4c483 <__FRAME_END__+0x4bc8f>
     483:	00 05 00 c0 10 00    	add    BYTE PTR [rip+0x10c000],al        # 10c489 <__FRAME_END__+0x10bc95>
     489:	00 05 00 a3 2c 00    	add    BYTE PTR [rip+0x2ca300],al        # 2ca78f <_end+0xc9777>
     48f:	00 05 00 b1 1f 00    	add    BYTE PTR [rip+0x1fb100],al        # 1fb595 <__FRAME_END__+0x1fada1>
     495:	00 05 00 7d 45 00    	add    BYTE PTR [rip+0x457d00],al        # 45819b <_end+0x257183>
     49b:	00 05 00 a3 1e 00    	add    BYTE PTR [rip+0x1ea300],al        # 1ea7a1 <__FRAME_END__+0x1e9fad>
     4a1:	00 05 00 83 13 00    	add    BYTE PTR [rip+0x138300],al        # 1387a7 <__FRAME_END__+0x137fb3>
     4a7:	00 05 00 c4 1d 00    	add    BYTE PTR [rip+0x1dc400],al        # 1dc8ad <__FRAME_END__+0x1dc0b9>
     4ad:	00 05 00 0c 10 00    	add    BYTE PTR [rip+0x100c00],al        # 1010b3 <__FRAME_END__+0x1008bf>
     4b3:	00 05 00 4a 48 00    	add    BYTE PTR [rip+0x484a00],al        # 484eb9 <_end+0x283ea1>
     4b9:	00 05 00 b6 00 00    	add    BYTE PTR [rip+0xb600],al        # babf <__FRAME_END__+0xb2cb>
     4bf:	00 05 00 fb 48 00    	add    BYTE PTR [rip+0x48fb00],al        # 48ffc5 <_end+0x28efad>
     4c5:	00 05 00 0a 1c 00    	add    BYTE PTR [rip+0x1c0a00],al        # 1c0ecb <__FRAME_END__+0x1c06d7>
     4cb:	00 05 00 65 32 00    	add    BYTE PTR [rip+0x326500],al        # 3269d1 <_end+0x1259b9>
     4d1:	00 05 00 b9 1e 00    	add    BYTE PTR [rip+0x1eb900],al        # 1ebdd7 <__FRAME_END__+0x1eb5e3>
     4d7:	00 05 00 3c 41 00    	add    BYTE PTR [rip+0x413c00],al        # 4140dd <_end+0x2130c5>
     4dd:	00 05 00 eb 44 00    	add    BYTE PTR [rip+0x44eb00],al        # 44efe3 <_end+0x24dfcb>
     4e3:	00 05 00 be 06 00    	add    BYTE PTR [rip+0x6be00],al        # 6c2e9 <__FRAME_END__+0x6baf5>
     4e9:	00 05 00 c1 4d 00    	add    BYTE PTR [rip+0x4dc100],al        # 4dc5ef <_end+0x2db5d7>
     4ef:	00 05 00 8f 28 00    	add    BYTE PTR [rip+0x288f00],al        # 2893f5 <_end+0x883dd>
     4f5:	00 05 00 20 46 00    	add    BYTE PTR [rip+0x462000],al        # 4624fb <_end+0x2614e3>
     4fb:	00 05 00 eb 07 00    	add    BYTE PTR [rip+0x7eb00],al        # 7f001 <__FRAME_END__+0x7e80d>
     501:	00 05 00 13 24 00    	add    BYTE PTR [rip+0x241300],al        # 241807 <_end+0x407ef>
     507:	00 05 00 4a 03 00    	add    BYTE PTR [rip+0x34a00],al        # 34f0d <__FRAME_END__+0x34719>
     50d:	00 05 00 02 1f 00    	add    BYTE PTR [rip+0x1f0200],al        # 1f0713 <__FRAME_END__+0x1eff1f>
     513:	00 05 00 60 29 00    	add    BYTE PTR [rip+0x296000],al        # 296519 <_end+0x95501>
     519:	00 05 00 1b 47 00    	add    BYTE PTR [rip+0x471b00],al        # 47201f <_end+0x271007>
     51f:	00 05 00 43 4d 00    	add    BYTE PTR [rip+0x4d4300],al        # 4d4825 <_end+0x2d380d>
     525:	00 05 00 11 1a 00    	add    BYTE PTR [rip+0x1a1100],al        # 1a162b <__FRAME_END__+0x1a0e37>
     52b:	00 05 00 82 25 00    	add    BYTE PTR [rip+0x258200],al        # 258731 <_end+0x57719>
     531:	00 05 00 38 4c 00    	add    BYTE PTR [rip+0x4c3800],al        # 4c3d37 <_end+0x2c2d1f>
     537:	00 05 00 b0 01 00    	add    BYTE PTR [rip+0x1b000],al        # 1b53d <__FRAME_END__+0x1ad49>
     53d:	00 05 00 c0 0a 00    	add    BYTE PTR [rip+0xac000],al        # ac543 <__FRAME_END__+0xabd4f>
     543:	00 05 00 9e 45 00    	add    BYTE PTR [rip+0x459e00],al        # 45a349 <_end+0x259331>
     549:	00 05 00 3e 14 00    	add    BYTE PTR [rip+0x143e00],al        # 14434f <__FRAME_END__+0x143b5b>
     54f:	00 05 00 41 2b 00    	add    BYTE PTR [rip+0x2b4100],al        # 2b4655 <_end+0xb363d>
     555:	00 05 00 f1 08 00    	add    BYTE PTR [rip+0x8f100],al        # 8f65b <__FRAME_END__+0x8ee67>
     55b:	00 05 00 f3 32 00    	add    BYTE PTR [rip+0x32f300],al        # 32f861 <_end+0x12e849>
     561:	00 05 00 94 2a 00    	add    BYTE PTR [rip+0x2a9400],al        # 2a9967 <_end+0xa894f>
     567:	00 05 00 2f 15 00    	add    BYTE PTR [rip+0x152f00],al        # 15346d <__FRAME_END__+0x152c79>
     56d:	00 05 00 cd 4b 00    	add    BYTE PTR [rip+0x4bcd00],al        # 4bd273 <_end+0x2bc25b>
     573:	00 05 00 d6 4d 00    	add    BYTE PTR [rip+0x4dd600],al        # 4ddb79 <_end+0x2dcb61>
     579:	00 05 00 d8 3b 00    	add    BYTE PTR [rip+0x3bd800],al        # 3bdd7f <_end+0x1bcd67>
     57f:	00 05 00 69 1e 00    	add    BYTE PTR [rip+0x1e6900],al        # 1e6e85 <__FRAME_END__+0x1e6691>
     585:	00 05 00 6b 0a 00    	add    BYTE PTR [rip+0xa6b00],al        # a708b <__FRAME_END__+0xa6897>
     58b:	00 05 00 8b 2b 00    	add    BYTE PTR [rip+0x2b8b00],al        # 2b9091 <_end+0xb8079>
     591:	00 05 00 6d 14 00    	add    BYTE PTR [rip+0x146d00],al        # 147297 <__FRAME_END__+0x146aa3>
     597:	00 05 00 5a 4d 00    	add    BYTE PTR [rip+0x4d5a00],al        # 4d5f9d <_end+0x2d4f85>
     59d:	00 05 00 63 2c 00    	add    BYTE PTR [rip+0x2c6300],al        # 2c68a3 <_end+0xc588b>
     5a3:	00 05 00 89 36 00    	add    BYTE PTR [rip+0x368900],al        # 368ea9 <_end+0x167e91>
     5a9:	00 05 00 65 02 00    	add    BYTE PTR [rip+0x26500],al        # 26aaf <__FRAME_END__+0x262bb>
     5af:	00 05 00 fe 24 00    	add    BYTE PTR [rip+0x24fe00],al        # 2503b5 <_end+0x4f39d>
     5b5:	00 05 00 30 1e 00    	add    BYTE PTR [rip+0x1e3000],al        # 1e35bb <__FRAME_END__+0x1e2dc7>
     5bb:	00 05 00 a5 0a 00    	add    BYTE PTR [rip+0xaa500],al        # aaac1 <__FRAME_END__+0xaa2cd>
     5c1:	00 05 00 93 23 00    	add    BYTE PTR [rip+0x239300],al        # 2398c7 <_end+0x388af>
     5c7:	00 05 00 d5 4a 00    	add    BYTE PTR [rip+0x4ad500],al        # 4adacd <_end+0x2acab5>
     5cd:	00 05 00 c0 1a 00    	add    BYTE PTR [rip+0x1ac000],al        # 1ac5d3 <__FRAME_END__+0x1abddf>
     5d3:	00 05 00 fd 4b 00    	add    BYTE PTR [rip+0x4bfd00],al        # 4c02d9 <_end+0x2bf2c1>
     5d9:	00 05 00 c0 29 00    	add    BYTE PTR [rip+0x29c000],al        # 29c5df <_end+0x9b5c7>
     5df:	00 05 00 b7 33 00    	add    BYTE PTR [rip+0x33b700],al        # 33bce5 <_end+0x13accd>
     5e5:	00 05 00 02 2e 00    	add    BYTE PTR [rip+0x2e0200],al        # 2e07eb <_end+0xdf7d3>
     5eb:	00 05 00 84 0f 00    	add    BYTE PTR [rip+0xf8400],al        # f89f1 <__FRAME_END__+0xf81fd>
     5f1:	00 05 00 86 00 00    	add    BYTE PTR [rip+0x8600],al        # 8bf7 <__FRAME_END__+0x8403>
     5f7:	00 05 00 ec 10 00    	add    BYTE PTR [rip+0x10ec00],al        # 10f1fd <__FRAME_END__+0x10ea09>
{
     5fd:	00 05 00 95 4d 00    	add    BYTE PTR [rip+0x4d9500],al        # 4d9b03 <_end+0x2d8aeb>
     603:	00 05 00 53 0c 00    	add    BYTE PTR [rip+0xc5300],al        # c5909 <__FRAME_END__+0xc5115>
	a = 2;
     609:	00 05 00 25 45 00    	add    BYTE PTR [rip+0x452500],al        # 452b0f <_end+0x251af7>
	b = 3;
     60f:	00 05 00 df 19 00    	add    BYTE PTR [rip+0x19df00],al        # 19e515 <__FRAME_END__+0x19dd21>
	c = a * b;
     615:	00 05 00 9f 00 00    	add    BYTE PTR [rip+0x9f00],al        # a51b <__FRAME_END__+0x9d27>
     61b:	00 05 00 cb 32 00    	add    BYTE PTR [rip+0x32cb00],al        # 32d121 <_end+0x12c109>
     621:	00 05 00 f2 1d 00    	add    BYTE PTR [rip+0x1df200],al        # 1df827 <__FRAME_END__+0x1df033>
     627:	00 05 00 49 26 00    	add    BYTE PTR [rip+0x264900],al        # 264f2d <_end+0x63f15>
     62d:	00 05 00 5d 06 00    	add    BYTE PTR [rip+0x65d00],al        # 66333 <__FRAME_END__+0x65b3f>
     633:	00 05 00 ae 3a 00    	add    BYTE PTR [rip+0x3aae00],al        # 3ab439 <_end+0x1aa421>
     639:	00 05 00 6c 4a 00    	add    BYTE PTR [rip+0x4a6c00],al        # 4a723f <_end+0x2a6227>
     63f:	00 05 00 9a 1f 00    	add    BYTE PTR [rip+0x1f9a00],al        # 1fa045 <__FRAME_END__+0x1f9851>
     645:	00 05 00 e2 14 00    	add    BYTE PTR [rip+0x14e200],al        # 14e84b <__FRAME_END__+0x14e057>
     64b:	00 05 00 2a 00 00    	add    BYTE PTR [rip+0x2a00],al        # 3051 <__FRAME_END__+0x285d>
     651:	00 05 00 ae 16 00    	add    BYTE PTR [rip+0x16ae00],al        # 16b457 <__FRAME_END__+0x16ac63>
     657:	00 05 00 d8 1a 00    	add    BYTE PTR [rip+0x1ad800],al        # 1ade5d <__FRAME_END__+0x1ad669>
     65d:	00 05 00 d0 10 00    	add    BYTE PTR [rip+0x10d000],al        # 10d663 <__FRAME_END__+0x10ce6f>
     663:	00 05 00 6c 2d 00    	add    BYTE PTR [rip+0x2d6c00],al        # 2d7269 <_end+0xd6251>
     669:	00 05 00 6a 13 00    	add    BYTE PTR [rip+0x136a00],al        # 13706f <__FRAME_END__+0x13687b>
     66f:	00 05 00 3c 19 00    	add    BYTE PTR [rip+0x193c00],al        # 194275 <__FRAME_END__+0x193a81>
     675:	00 05 00 0a 4b 00    	add    BYTE PTR [rip+0x4b0a00],al        # 4b107b <_end+0x2b0063>
     67b:	00 05 00 0e 0e 00    	add    BYTE PTR [rip+0xe0e00],al        # e1481 <__FRAME_END__+0xe0c8d>
     681:	00 05 00 57 19 00    	add    BYTE PTR [rip+0x195700],al        # 195d87 <__FRAME_END__+0x195593>
     687:	00 05 00 92 38 00    	add    BYTE PTR [rip+0x389200],al        # 38988d <_end+0x188875>
     68d:	00 05 00 bc 47 00    	add    BYTE PTR [rip+0x47bc00],al        # 47c293 <_end+0x27b27b>
     693:	00 05 00 0f 4d 00    	add    BYTE PTR [rip+0x4d0f00],al        # 4d1599 <_end+0x2d0581>
     699:	00 05 00 53 1f 00    	add    BYTE PTR [rip+0x1f5300],al        # 1f599f <__FRAME_END__+0x1f51ab>
     69f:	00 05 00 ea 0d 00    	add    BYTE PTR [rip+0xdea00],al        # df0a5 <__FRAME_END__+0xde8b1>
     6a5:	00 05 00 c2 24 00    	add    BYTE PTR [rip+0x24c200],al        # 24c8ab <_end+0x4b893>
     6ab:	00 05 00 b0 24 00    	add    BYTE PTR [rip+0x24b000],al        # 24b6b1 <_end+0x4a699>
     6b1:	00 05 00 5b 35 00    	add    BYTE PTR [rip+0x355b00],al        # 3561b7 <_end+0x15519f>
     6b7:	00 05 00 82 34 00    	add    BYTE PTR [rip+0x348200],al        # 3488bd <_end+0x1478a5>
     6bd:	00 05 00 36 01 00    	add    BYTE PTR [rip+0x13600],al        # 13cc3 <__FRAME_END__+0x134cf>
     6c3:	00 05 00 2a 4a 00    	add    BYTE PTR [rip+0x4a2a00],al        # 4a30c9 <_end+0x2a20b1>
     6c9:	00 05 00 27 03 00    	add    BYTE PTR [rip+0x32700],al        # 32dcf <__FRAME_END__+0x325db>
     6cf:	00 05 00 e6 03 00    	add    BYTE PTR [rip+0x3e600],al        # 3ecd5 <__FRAME_END__+0x3e4e1>
     6d5:	00 05 00 96 27 00    	add    BYTE PTR [rip+0x279600],al        # 279cdb <_end+0x78cc3>
     6db:	00 05 00 b1 1c 00    	add    BYTE PTR [rip+0x1cb100],al        # 1cb7e1 <__FRAME_END__+0x1cafed>
     6e1:	00 05 00 93 13 00    	add    BYTE PTR [rip+0x139300],al        # 1399e7 <__FRAME_END__+0x1391f3>
     6e7:	00 05 00 ee 1f 00    	add    BYTE PTR [rip+0x1fee00],al        # 1ff4ed <__FRAME_END__+0x1fecf9>
     6ed:	00 05 00 cc 0c 00    	add    BYTE PTR [rip+0xccc00],al        # cd2f3 <__FRAME_END__+0xccaff>
     6f3:	00 05 00 00 47 00    	add    BYTE PTR [rip+0x470000],al        # 4706f9 <_end+0x26f6e1>
     6f9:	00 05 00 04 3b 00    	add    BYTE PTR [rip+0x3b0400],al        # 3b0aff <_end+0x1afae7>
     6ff:	00 05 00 70 0e 00    	add    BYTE PTR [rip+0xe7000],al        # e7705 <__FRAME_END__+0xe6f11>
     705:	00 05 00 d8 0f 00    	add    BYTE PTR [rip+0xfd800],al        # fdf0b <__FRAME_END__+0xfd717>
     70b:	00 05 00 ae 18 00    	add    BYTE PTR [rip+0x18ae00],al        # 18b511 <__FRAME_END__+0x18ad1d>
     711:	00 05 00 13 20 00    	add    BYTE PTR [rip+0x201300],al        # 201a17 <_end+0x9ff>
     717:	00 05 00 67 25 00    	add    BYTE PTR [rip+0x256700],al        # 256e1d <_end+0x55e05>
     71d:	00 05 00 8a 44 00    	add    BYTE PTR [rip+0x448a00],al        # 449123 <_end+0x24810b>
     723:	00 05 00 b6 20 00    	add    BYTE PTR [rip+0x20b600],al        # 20bd29 <_end+0xad11>
     729:	00 05 00 3e 33 00    	add    BYTE PTR [rip+0x333e00],al        # 33452f <_end+0x133517>
     72f:	00 05 00 f5 00 00    	add    BYTE PTR [rip+0xf500],al        # fc35 <__FRAME_END__+0xf441>
     735:	00 05 00 bd 4c 00    	add    BYTE PTR [rip+0x4cbd00],al        # 4cc43b <_end+0x2cb423>
     73b:	00 05 00 a3 17 00    	add    BYTE PTR [rip+0x17a300],al        # 17aa41 <__FRAME_END__+0x17a24d>
     741:	00 05 00 15 35 00    	add    BYTE PTR [rip+0x351500],al        # 351c47 <_end+0x150c2f>
     747:	00 05 00 74 28 00    	add    BYTE PTR [rip+0x287400],al        # 287b4d <_end+0x86b35>
     74d:	00 05 00 ed 2d 00    	add    BYTE PTR [rip+0x2ded00],al        # 2df453 <_end+0xde43b>
     753:	00 05 00 fb 40 00    	add    BYTE PTR [rip+0x40fb00],al        # 410259 <_end+0x20f241>
     759:	00 05 00 bb 17 00    	add    BYTE PTR [rip+0x17bb00],al        # 17c25f <__FRAME_END__+0x17ba6b>
     75f:	00 05 00 77 10 00    	add    BYTE PTR [rip+0x107700],al        # 107e65 <__FRAME_END__+0x107671>
     765:	00 05 00 12 23 00    	add    BYTE PTR [rip+0x231200],al        # 23196b <_end+0x30953>
     76b:	00 05 00 b4 08 00    	add    BYTE PTR [rip+0x8b400],al        # 8bb71 <__FRAME_END__+0x8b37d>
     771:	00 05 00 35 28 00    	add    BYTE PTR [rip+0x283500],al        # 283c77 <_end+0x82c5f>
     777:	00 05 00 ab 4d 00    	add    BYTE PTR [rip+0x4dab00],al        # 4db27d <_end+0x2da265>
     77d:	00 05 00 4d 40 00    	add    BYTE PTR [rip+0x404d00],al        # 405483 <_end+0x20446b>
     783:	00 05 00 6c 34 00    	add    BYTE PTR [rip+0x346c00],al        # 347389 <_end+0x146371>
     789:	00 05 00 e6 4b 00    	add    BYTE PTR [rip+0x4be600],al        # 4bed8f <_end+0x2bdd77>
     78f:	00 05 00 c5 15 00    	add    BYTE PTR [rip+0x15c500],al        # 15cc95 <__FRAME_END__+0x15c4a1>
     795:	00 05 00 96 01 00    	add    BYTE PTR [rip+0x19600],al        # 19d9b <__FRAME_END__+0x195a7>
     79b:	00 05 00 55 00 00    	add    BYTE PTR [rip+0x5500],al        # 5ca1 <__FRAME_END__+0x54ad>
     7a1:	00 05 00 18 17 00    	add    BYTE PTR [rip+0x171800],al        # 171fa7 <__FRAME_END__+0x1717b3>
     7a7:	00 05 00 22 12 00    	add    BYTE PTR [rip+0x122200],al        # 1229ad <__FRAME_END__+0x1221b9>
     7ad:	00 05 00 57 30 00    	add    BYTE PTR [rip+0x305700],al        # 305eb3 <_end+0x104e9b>
     7b3:	00 05 00 42 35 00    	add    BYTE PTR [rip+0x354200],al        # 3549b9 <_end+0x1539a1>
     7b9:	00 05 00 c1 48 00    	add    BYTE PTR [rip+0x48c100],al        # 48c8bf <_end+0x28b8a7>
     7bf:	00 05 00 92 12 00    	add    BYTE PTR [rip+0x129200],al        # 1299c5 <__FRAME_END__+0x1291d1>
     7c5:	00 05 00 95 46 00    	add    BYTE PTR [rip+0x469500],al        # 469ccb <_end+0x268cb3>
     7cb:	00 05 00 a2 33 00    	add    BYTE PTR [rip+0x33a200],al        # 33a9d1 <_end+0x1399b9>
     7d1:	00 05 00 d5 3c 00    	add    BYTE PTR [rip+0x3cd500],al        # 3cdcd7 <_end+0x1cccbf>
     7d7:	00 05 00 fc 23 00    	add    BYTE PTR [rip+0x23fc00],al        # 2403dd <_end+0x3f3c5>
     7dd:	00 05 00 60 1d 00    	add    BYTE PTR [rip+0x1d6000],al        # 1d67e3 <__FRAME_END__+0x1d5fef>
     7e3:	00 05 00 a6 0f 00    	add    BYTE PTR [rip+0xfa600],al        # fade9 <__FRAME_END__+0xfa5f5>
     7e9:	00 05 00 b7 2d 00    	add    BYTE PTR [rip+0x2db700],al        # 2dbeef <_end+0xdaed7>
     7ef:	00 05 00 0b 1e 00    	add    BYTE PTR [rip+0x1e0b00],al        # 1e12f5 <__FRAME_END__+0x1e0b01>
     7f5:	00 05 00 7b 02 00    	add    BYTE PTR [rip+0x27b00],al        # 282fb <__FRAME_END__+0x27b07>
     7fb:	00 05 00 32 10 00    	add    BYTE PTR [rip+0x103200],al        # 103a01 <__FRAME_END__+0x10320d>
     801:	00 05 00 5c 1b 00    	add    BYTE PTR [rip+0x1b5c00],al        # 1b6407 <__FRAME_END__+0x1b5c13>
     807:	00 05 00 22 24 00    	add    BYTE PTR [rip+0x242200],al        # 242a0d <_end+0x419f5>
     80d:	00 05 00 31 3d 00    	add    BYTE PTR [rip+0x3d3100],al        # 3d3913 <_end+0x1d28fb>
     813:	00 05 00 5e 31 00    	add    BYTE PTR [rip+0x315e00],al        # 316619 <_end+0x115601>
     819:	00 05 00 6b 44 00    	add    BYTE PTR [rip+0x446b00],al        # 44731f <_end+0x246307>
     81f:	00 05 00 f4 15 00    	add    BYTE PTR [rip+0x15f400],al        # 15fc25 <__FRAME_END__+0x15f431>
     825:	00 05 00 92 24 00    	add    BYTE PTR [rip+0x249200],al        # 249a2b <_end+0x48a13>
     82b:	00 05 00 2e 40 00    	add    BYTE PTR [rip+0x402e00],al        # 403631 <_end+0x202619>
     831:	00 05 00 58 01 00    	add    BYTE PTR [rip+0x15800],al        # 16037 <__FRAME_END__+0x15843>
     837:	00 05 00 f0 3b 00    	add    BYTE PTR [rip+0x3bf000],al        # 3bf83d <_end+0x1be825>
     83d:	00 05 00 06 28 00    	add    BYTE PTR [rip+0x280600],al        # 280e43 <_end+0x7fe2b>
     843:	00 05 00 89 4c 00    	add    BYTE PTR [rip+0x4c8900],al        # 4c9149 <_end+0x2c8131>
     849:	00 05 00 61 48 00    	add    BYTE PTR [rip+0x486100],al        # 48694f <_end+0x285937>
     84f:	00 05 00 48 0d 00    	add    BYTE PTR [rip+0xd4800],al        # d5055 <__FRAME_END__+0xd4861>
     855:	00 05 00 1d 2d 00    	add    BYTE PTR [rip+0x2d1d00],al        # 2d255b <_end+0xd1543>
     85b:	00 05 00 58 04 00    	add    BYTE PTR [rip+0x45800],al        # 46061 <__FRAME_END__+0x4586d>
     861:	00 05 00 f3 16 00    	add    BYTE PTR [rip+0x16f300],al        # 16fb67 <__FRAME_END__+0x16f373>
     867:	00 05 00 44 4a 00    	add    BYTE PTR [rip+0x4a4400],al        # 4a4c6d <_end+0x2a3c55>
     86d:	00 05 00 81 1a 00    	add    BYTE PTR [rip+0x1a8100],al        # 1a8973 <__FRAME_END__+0x1a817f>
     873:	00 05 00 5c 25 00    	add    BYTE PTR [rip+0x255c00],al        # 256479 <_end+0x55461>
     879:	00 05 00 06 20 00    	add    BYTE PTR [rip+0x200600],al        # 200e7f <_DYNAMIC+0x7f>
     87f:	00 05 00 ea 46 00    	add    BYTE PTR [rip+0x46ea00],al        # 46f285 <_end+0x26e26d>
     885:	00 05 00 e5 23 00    	add    BYTE PTR [rip+0x23e500],al        # 23ed8b <_end+0x3dd73>
     88b:	00 05 00 ac 3d 00    	add    BYTE PTR [rip+0x3dac00],al        # 3db491 <_end+0x1da479>
     891:	00 05 00 13 15 00    	add    BYTE PTR [rip+0x151300],al        # 151b97 <__FRAME_END__+0x1513a3>
     897:	00 05 00 00 27 00    	add    BYTE PTR [rip+0x270000],al        # 27089d <_end+0x6f885>
     89d:	00 05 00 27 40 00    	add    BYTE PTR [rip+0x402700],al        # 402fa3 <_end+0x201f8b>
     8a3:	00 05 00 41 03 00    	add    BYTE PTR [rip+0x34100],al        # 349a9 <__FRAME_END__+0x341b5>
     8a9:	00 05 00 7f 17 00    	add    BYTE PTR [rip+0x177f00],al        # 1787af <__FRAME_END__+0x177fbb>
     8af:	00 05 00 20 16 00    	add    BYTE PTR [rip+0x162000],al        # 1628b5 <__FRAME_END__+0x1620c1>
     8b5:	00 05 00 73 47 00    	add    BYTE PTR [rip+0x477300],al        # 477bbb <_end+0x276ba3>
     8bb:	00 05 00 42 29 00    	add    BYTE PTR [rip+0x294200],al        # 294ac1 <_end+0x93aa9>
     8c1:	00 05 00 de 41 00    	add    BYTE PTR [rip+0x41de00],al        # 41e6c7 <_end+0x21d6af>
     8c7:	00 05 00 e1 2f 00    	add    BYTE PTR [rip+0x2fe100],al        # 2fe9cd <_end+0xfd9b5>
     8cd:	00 05 00 8d 39 00    	add    BYTE PTR [rip+0x398d00],al        # 3995d3 <_end+0x1985bb>
     8d3:	00 05 00 3a 3c 00    	add    BYTE PTR [rip+0x3c3a00],al        # 3c42d9 <_end+0x1c32c1>
     8d9:	00 05 00 d6 2f 00    	add    BYTE PTR [rip+0x2fd600],al        # 2fdedf <_end+0xfcec7>
     8df:	00 05 00 a9 23 00    	add    BYTE PTR [rip+0x23a900],al        # 23b1e5 <_end+0x3a1cd>
     8e5:	00 05 00 04 37 00    	add    BYTE PTR [rip+0x370400],al        # 370ceb <_end+0x16fcd3>
     8eb:	00 05 00 be 42 00    	add    BYTE PTR [rip+0x42be00],al        # 42c6f1 <_end+0x22b6d9>
     8f1:	00 05 00 06 37 00    	add    BYTE PTR [rip+0x370600],al        # 370ef7 <_end+0x16fedf>
     8f7:	00 05 00 5c 4a 00    	add    BYTE PTR [rip+0x4a5c00],al        # 4a64fd <_end+0x2a54e5>
     8fd:	00 05 00 9b 0f 00    	add    BYTE PTR [rip+0xf9b00],al        # fa403 <__FRAME_END__+0xf9c0f>
     903:	00 05 00 5e 4a 00    	add    BYTE PTR [rip+0x4a5e00],al        # 4a6709 <_end+0x2a56f1>
     909:	00 05 00 8c 27 00    	add    BYTE PTR [rip+0x278c00],al        # 27950f <_end+0x784f7>
     90f:	00 05 00 9b 08 00    	add    BYTE PTR [rip+0x89b00],al        # 8a415 <__FRAME_END__+0x89c21>
     915:	00 00                	add    BYTE PTR [rax],al
     917:	04 00                	add    al,0x0
     919:	00 05 13 bd 02 00    	add    BYTE PTR [rip+0x2bd13],al        # 2c632 <__FRAME_END__+0x2be3e>
     91f:	00 05 26 82 46 00    	add    BYTE PTR [rip+0x468226],al        # 468b4b <_end+0x267b33>
     925:	00 05 2e 68 18 00    	add    BYTE PTR [rip+0x18682e],al        # 187159 <__FRAME_END__+0x186965>
     92b:	00 05 3a e9 18 00    	add    BYTE PTR [rip+0x18e93a],al        # 18f26b <__FRAME_END__+0x18ea77>
     931:	00 05 3d 2e 0a 00    	add    BYTE PTR [rip+0xa2e3d],al        # a3774 <__FRAME_END__+0xa2f80>
     937:	00 00                	add    BYTE PTR [rax],al
     939:	04 00                	add    al,0x0
     93b:	00 05 18 6c 10 00    	add    BYTE PTR [rip+0x106c18],al        # 107559 <__FRAME_END__+0x106d65>
     941:	00 05 1a f5 33 00    	add    BYTE PTR [rip+0x33f51a],al        # 33fe61 <_end+0x13ee49>
     947:	00 00                	add    BYTE PTR [rax],al
     949:	04 00                	add    al,0x0
     94b:	00 05 13 f0 24 00    	add    BYTE PTR [rip+0x24f013],al        # 24f964 <_end+0x4e94c>
     951:	00 06                	add    BYTE PTR [rsi],al
     953:	77 41                	ja     996 <__FRAME_END__+0x1a2>
     955:	49 00 00             	rex.WB add BYTE PTR [r8],al
     958:	06                   	(bad)  
     959:	78 d9                	js     934 <__FRAME_END__+0x140>
     95b:	17                   	(bad)  
     95c:	00 00                	add    BYTE PTR [rax],al
     95e:	06                   	(bad)  
     95f:	79 96                	jns    8f7 <__FRAME_END__+0x103>
     961:	17                   	(bad)  
     962:	00 00                	add    BYTE PTR [rax],al
     964:	06                   	(bad)  
     965:	7a 70                	jp     9d7 <__FRAME_END__+0x1e3>
     967:	07                   	(bad)  
     968:	00 00                	add    BYTE PTR [rax],al
     96a:	06                   	(bad)  
     96b:	7b 03                	jnp    970 <__FRAME_END__+0x17c>
     96d:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
     970:	06                   	(bad)  
     971:	7c 9f                	jl     912 <__FRAME_END__+0x11e>
     973:	34 00                	xor    al,0x0
     975:	00 06                	add    BYTE PTR [rsi],al
     977:	7d 62                	jge    9db <__FRAME_END__+0x1e7>
     979:	23 00                	and    eax,DWORD PTR [rax]
     97b:	00 06                	add    BYTE PTR [rsi],al
     97d:	7e ad                	jle    92c <__FRAME_END__+0x138>
     97f:	12 00                	adc    al,BYTE PTR [rax]
     981:	00 06                	add    BYTE PTR [rsi],al
     983:	7f 86                	jg     90b <__FRAME_END__+0x117>
     985:	38 00                	cmp    BYTE PTR [rax],al
     987:	00 06                	add    BYTE PTR [rsi],al
     989:	80 01 af             	add    BYTE PTR [rcx],0xaf
     98c:	44 00 00             	add    BYTE PTR [rax],r8b
     98f:	06                   	(bad)  
     990:	81 01 e6 0c 00 00    	add    DWORD PTR [rcx],0xce6
     996:	06                   	(bad)  
     997:	82                   	(bad)  
     998:	01 37                	add    DWORD PTR [rdi],esi
     99a:	30 00                	xor    BYTE PTR [rax],al
     99c:	00 06                	add    BYTE PTR [rsi],al
     99e:	83 01 bb             	add    DWORD PTR [rcx],0xffffffbb
     9a1:	3f                   	(bad)  
     9a2:	00 00                	add    BYTE PTR [rax],al
     9a4:	06                   	(bad)  
     9a5:	84 01                	test   BYTE PTR [rcx],al
     9a7:	02 38                	add    bh,BYTE PTR [rax]
     9a9:	00 00                	add    BYTE PTR [rax],al
     9ab:	06                   	(bad)  
     9ac:	85 01                	test   DWORD PTR [rcx],eax
     9ae:	c4                   	(bad)  
     9af:	26 00 00             	add    BYTE PTR es:[rax],al
     9b2:	06                   	(bad)  
     9b3:	86 01                	xchg   BYTE PTR [rcx],al
     9b5:	da 46 00             	fiadd  DWORD PTR [rsi+0x0]
     9b8:	00 06                	add    BYTE PTR [rsi],al
     9ba:	87 01                	xchg   DWORD PTR [rcx],eax
     9bc:	92                   	xchg   edx,eax
     9bd:	05 00 00 06 88       	add    eax,0x88060000
     9c2:	01 9a 29 00 00 06    	add    DWORD PTR [rdx+0x6000029],ebx
     9c8:	89 01                	mov    DWORD PTR [rcx],eax
     9ca:	16                   	(bad)  
     9cb:	2a 00                	sub    al,BYTE PTR [rax]
     9cd:	00 06                	add    BYTE PTR [rsi],al
     9cf:	8a 01                	mov    al,BYTE PTR [rcx]
     9d1:	18 0d 00 00 06 8b    	sbb    BYTE PTR [rip+0xffffffff8b060000],cl        # ffffffff8b0609d7 <_end+0xffffffff8ae5f9bf>
     9d7:	01 b0 41 00 00 06    	add    DWORD PTR [rax+0x6000041],esi
     9dd:	8c 01                	mov    WORD PTR [rcx],es
     9df:	08 2b                	or     BYTE PTR [rbx],ch
     9e1:	00 00                	add    BYTE PTR [rax],al
     9e3:	06                   	(bad)  
     9e4:	8d 01                	lea    eax,[rcx]
     9e6:	51                   	push   rcx
     9e7:	17                   	(bad)  
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	06                   	(bad)  
     9eb:	8e 01                	mov    es,WORD PTR [rcx]
     9ed:	55                   	push   rbp
     9ee:	05 00 00 05 93       	add    eax,0x93050000
     9f3:	01 3d 12 00 00 05    	add    DWORD PTR [rip+0x5000012],edi        # 5000a0b <_end+0x4dff9f3>
     9f9:	9e                   	sahf   
     9fa:	01 6c 04 00          	add    DWORD PTR [rsp+rax*1+0x0],ebp
     9fe:	00 05 ac 01 8e 42    	add    BYTE PTR [rip+0x428e01ac],al        # 428e0bb0 <_end+0x426dfb98>
     a04:	00 00                	add    BYTE PTR [rax],al
     a06:	05 b0 01 65 22       	add    eax,0x226501b0
     a0b:	00 00                	add    BYTE PTR [rax],al
     a0d:	06                   	(bad)  
     a0e:	dc 01                	fadd   QWORD PTR [rcx]
     a10:	1b 3b                	sbb    edi,DWORD PTR [rbx]
     a12:	00 00                	add    BYTE PTR [rax],al
     a14:	05 dd 01 53 1a       	add    eax,0x1a5301dd
     a19:	00 00                	add    BYTE PTR [rax],al
     a1b:	05 e3 01 ce 02       	add    eax,0x2ce01e3
     a20:	00 00                	add    BYTE PTR [rax],al
     a22:	05 e9 01 2f 17       	add    eax,0x172f01e9
     a27:	00 00                	add    BYTE PTR [rax],al
     a29:	05 ef 01 2c 09       	add    eax,0x92c01ef
     a2e:	00 00                	add    BYTE PTR [rax],al
     a30:	05 84 02 08 1d       	add    eax,0x1d080284
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	06                   	(bad)  
     a38:	86 02                	xchg   BYTE PTR [rdx],al
     a3a:	b0 06                	mov    al,0x6
     a3c:	00 00                	add    BYTE PTR [rax],al
     a3e:	05 87 02 c9 43       	add    eax,0x43c90287
     a43:	00 00                	add    BYTE PTR [rax],al
     a45:	06                   	(bad)  
     a46:	88 02                	mov    BYTE PTR [rdx],al
     a48:	ee                   	out    dx,al
     a49:	38 00                	cmp    BYTE PTR [rax],al
     a4b:	00 05 89 02 55 2a    	add    BYTE PTR [rip+0x2a550289],al        # 2a550cda <_end+0x2a34fcc2>
     a51:	00 00                	add    BYTE PTR [rax],al
     a53:	05 ac 02 7b 2c       	add    eax,0x2c7b02ac
     a58:	00 00                	add    BYTE PTR [rax],al
     a5a:	05 b0 02 1d 09       	add    eax,0x91d02b0
     a5f:	00 00                	add    BYTE PTR [rax],al
     a61:	05 b4 02 c3 28       	add    eax,0x28c302b4
     a66:	00 00                	add    BYTE PTR [rax],al
     a68:	05 b8 02 ff 07       	add    eax,0x7ff02b8
     a6d:	00 00                	add    BYTE PTR [rax],al
     a6f:	05 bc 02 e3 16       	add    eax,0x16e302bc
     a74:	00 00                	add    BYTE PTR [rax],al
     a76:	06                   	(bad)  
     a77:	bd 02 96 17 00       	mov    ebp,0x179602
     a7c:	00 05 be 02 2c 09    	add    BYTE PTR [rip+0x92c02be],al        # 92c0d40 <_end+0x90bfd28>
     a82:	00 00                	add    BYTE PTR [rax],al
     a84:	06                   	(bad)  
     a85:	bf 02 d9 17 00       	mov    edi,0x17d902
     a8a:	00 05 c0 02 2f 17    	add    BYTE PTR [rip+0x172f02c0],al        # 172f0d50 <_end+0x170efd38>
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	05 c4 02 3f 3a       	add    eax,0x3a3f02c4
     a97:	00 00                	add    BYTE PTR [rax],al
     a99:	06                   	(bad)  
     a9a:	c5 02 09             	(bad)  
     a9d:	0d 00 00 05 c6       	or     eax,0xc6050000
     aa2:	02 5f 0e             	add    bl,BYTE PTR [rdi+0xe]
     aa5:	00 00                	add    BYTE PTR [rax],al
     aa7:	05 f0 02 32 47       	add    eax,0x473202f0
     aac:	00 00                	add    BYTE PTR [rax],al
     aae:	05 f4 02 7f 07       	add    eax,0x77f02f4
     ab3:	00 00                	add    BYTE PTR [rax],al
     ab5:	05 83 03 f3 0c       	add    eax,0xcf30383
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	05 8b 03 83 18       	add    eax,0x1883038b
     ac1:	00 00                	add    BYTE PTR [rax],al
     ac3:	06                   	(bad)  
     ac4:	9a                   	(bad)  
     ac5:	03 db                	add    ebx,ebx
     ac7:	07                   	(bad)  
     ac8:	00 00                	add    BYTE PTR [rax],al
     aca:	05 9b 03 05 29       	add    eax,0x2905039b
     acf:	00 00                	add    BYTE PTR [rax],al
     ad1:	05 9f 03 9e 3c       	add    eax,0x3c9e039f
     ad6:	00 00                	add    BYTE PTR [rax],al
     ad8:	05 a0 03 c3 2f       	add    eax,0x2fc303a0
     add:	00 00                	add    BYTE PTR [rax],al
     adf:	05 a2 03 f9 05       	add    eax,0x5f903a2
     ae4:	00 00                	add    BYTE PTR [rax],al
     ae6:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     ae9:	00 05 13 d7 03 00    	add    BYTE PTR [rip+0x3d713],al        # 3e202 <__FRAME_END__+0x3da0e>
     aef:	00 02                	add    BYTE PTR [rdx],al
     af1:	22 5f 5f             	and    bl,BYTE PTR [rdi+0x5f]
     af4:	50                   	push   rax
     af5:	00 06                	add    BYTE PTR [rsi],al
     af7:	23 67 27             	and    esp,DWORD PTR [rdi+0x27]
     afa:	00 00                	add    BYTE PTR [rax],al
     afc:	05 2a 45 30 00       	add    eax,0x30452a
     b01:	00 05 2b e9 41 00    	add    BYTE PTR [rip+0x41e92b],al        # 41f432 <_end+0x21e41a>
     b07:	00 05 37 fe 38 00    	add    BYTE PTR [rip+0x38fe37],al        # 390944 <_end+0x18f92c>
     b0d:	00 05 38 a5 4b 00    	add    BYTE PTR [rip+0x4ba538],al        # 4bb04b <_end+0x2ba033>
     b13:	00 05 39 5d 0d 00    	add    BYTE PTR [rip+0xd5d39],al        # d6852 <__FRAME_END__+0xd605e>
     b19:	00 05 3a 42 08 00    	add    BYTE PTR [rip+0x8423a],al        # 84d59 <__FRAME_END__+0x84565>
     b1f:	00 05 59 d8 13 00    	add    BYTE PTR [rip+0x13d859],al        # 13e37e <__FRAME_END__+0x13db8a>
     b25:	00 05 5e 45 3c 00    	add    BYTE PTR [rip+0x3c455e],al        # 3c5089 <_end+0x1c4071>
     b2b:	00 05 5f fb 13 00    	add    BYTE PTR [rip+0x13fb5f],al        # 140690 <__FRAME_END__+0x13fe9c>
     b31:	00 05 64 ec 30 00    	add    BYTE PTR [rip+0x30ec64],al        # 30f79b <_end+0x10e783>
     b37:	00 05 65 e4 32 00    	add    BYTE PTR [rip+0x32e465],al        # 32efa2 <_end+0x12df8a>
     b3d:	00 05 68 10 0a 00    	add    BYTE PTR [rip+0xa1068],al        # a1bab <__FRAME_END__+0xa13b7>
     b43:	00 05 70 04 19 00    	add    BYTE PTR [rip+0x190470],al        # 190fb9 <__FRAME_END__+0x1907c5>
     b49:	00 05 71 13 46 00    	add    BYTE PTR [rip+0x461371],al        # 461ec0 <_end+0x260ea8>
     b4f:	00 05 76 64 2f 00    	add    BYTE PTR [rip+0x2f6476],al        # 2f6fcb <_end+0xf5fb3>
     b55:	00 05 77 c7 2b 00    	add    BYTE PTR [rip+0x2bc777],al        # 2bd2d2 <_end+0xbc2ba>
     b5b:	00 05 7a 7b 32 00    	add    BYTE PTR [rip+0x327b7a],al        # 3286db <_end+0x1276c3>
     b61:	00 05 7c 94 3b 00    	add    BYTE PTR [rip+0x3b947c],al        # 3b9fe3 <_end+0x1b8fcb>
     b67:	00 05 7d 72 48 00    	add    BYTE PTR [rip+0x48727d],al        # 487dea <_end+0x286dd2>
     b6d:	00 05 8a 01 58 02    	add    BYTE PTR [rip+0x258018a],al        # 2580cfd <_end+0x237fce5>
     b73:	00 00                	add    BYTE PTR [rax],al
     b75:	05 8b 01 22 29       	add    eax,0x2922018b
     b7a:	00 00                	add    BYTE PTR [rax],al
     b7c:	05 a9 01 50 20       	add    eax,0x205001a9
     b81:	00 00                	add    BYTE PTR [rax],al
     b83:	05 b0 01 35 38       	add    eax,0x383501b0
     b88:	00 00                	add    BYTE PTR [rax],al
     b8a:	05 b2 01 15 13       	add    eax,0x131501b2
     b8f:	00 00                	add    BYTE PTR [rax],al
     b91:	05 b5 01 ef 49       	add    eax,0x49ef01b5
     b96:	00 00                	add    BYTE PTR [rax],al
     b98:	05 b6 01 8d 3e       	add    eax,0x3e8d01b6
     b9d:	00 00                	add    BYTE PTR [rax],al
     b9f:	05 cb 01 83 37       	add    eax,0x378301cb
     ba4:	00 00                	add    BYTE PTR [rax],al
     ba6:	05 d3 01 cc 3f       	add    eax,0x3fcc01d3
     bab:	00 00                	add    BYTE PTR [rax],al
     bad:	05 dd 01 cd 39       	add    eax,0x39cd01dd
     bb2:	00 00                	add    BYTE PTR [rax],al
     bb4:	05 e4 01 25 05       	add    eax,0x52501e4
     bb9:	00 00                	add    BYTE PTR [rax],al
     bbb:	05 ed 01 73 11       	add    eax,0x117301ed
     bc0:	00 00                	add    BYTE PTR [rax],al
     bc2:	05 ee 01 af 22       	add    eax,0x22af01ee
     bc7:	00 00                	add    BYTE PTR [rax],al
     bc9:	05 f6 01 32 2d       	add    eax,0x2d3201f6
     bce:	00 00                	add    BYTE PTR [rax],al
     bd0:	05 80 02 01 31       	add    eax,0x31010280
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	05 8d 02 fb 2b       	add    eax,0x2bfb028d
     bdc:	00 00                	add    BYTE PTR [rax],al
     bde:	05 97 02 a8 40       	add    eax,0x40a80297
     be3:	00 00                	add    BYTE PTR [rax],al
     be5:	05 a0 02 8e 07       	add    eax,0x78e02a0
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	05 a8 02 b5 45       	add    eax,0x45b502a8
     bf1:	00 00                	add    BYTE PTR [rax],al
     bf3:	05 b1 02 56 14       	add    eax,0x145602b1
     bf8:	00 00                	add    BYTE PTR [rax],al
     bfa:	06                   	(bad)  
     bfb:	b9 02 43 3e 00       	mov    ecx,0x3e4302
     c00:	00 05 ba 02 fd 21    	add    BYTE PTR [rip+0x21fd02ba],al        # 21fd0ec0 <_end+0x21dcfea8>
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	05 c3 02 a1 11       	add    eax,0x11a102c3
     c0d:	00 00                	add    BYTE PTR [rax],al
     c0f:	05 d5 02 25 0f       	add    eax,0xf2502d5
     c14:	00 00                	add    BYTE PTR [rax],al
     c16:	05 d6 02 04 0c       	add    eax,0xc0402d6
     c1b:	00 00                	add    BYTE PTR [rax],al
     c1d:	05 df 02 7b 30       	add    eax,0x307b02df
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	05 e5 02 9b 1d       	add    eax,0x1d9b02e5
     c29:	00 00                	add    BYTE PTR [rax],al
     c2b:	05 e6 02 e5 04       	add    eax,0x4e502e6
     c30:	00 00                	add    BYTE PTR [rax],al
     c32:	05 fa 02 66 40       	add    eax,0x406602fa
     c37:	00 00                	add    BYTE PTR [rax],al
     c39:	05 89 03 24 04       	add    eax,0x4240389
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	05 8a 03 c7 2e       	add    eax,0x2ec7038a
     c45:	00 00                	add    BYTE PTR [rax],al
     c47:	05 a0 03 d1 36       	add    eax,0x36d103a0
     c4c:	00 00                	add    BYTE PTR [rax],al
     c4e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     c51:	00 05 04 4e 4a 00    	add    BYTE PTR [rip+0x4a4e04],al        # 4a5a5b <_end+0x2a4a43>
     c57:	00 05 0c ed 4a 00    	add    BYTE PTR [rip+0x4aed0c],al        # 4af969 <_end+0x2ae951>
     c5d:	00 05 0e 7c 24 00    	add    BYTE PTR [rip+0x247c0e],al        # 248871 <_end+0x47859>
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	04 00                	add    al,0x0
     c67:	00 05 c2 03 58 37    	add    BYTE PTR [rip+0x375803c2],al        # 3758102f <_end+0x37380017>
     c6d:	00 00                	add    BYTE PTR [rax],al
     c6f:	05 c3 03 c7 05       	add    eax,0x5c703c3
     c74:	00 00                	add    BYTE PTR [rax],al
     c76:	05 c4 03 9c 21       	add    eax,0x219c03c4
     c7b:	00 00                	add    BYTE PTR [rax],al
     c7d:	05 c5 03 d2 37       	add    eax,0x37d203c5
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	05 c6 03 8d 0b       	add    eax,0xb8d03c6
     c89:	00 00                	add    BYTE PTR [rax],al
     c8b:	05 c8 03 01 3e       	add    eax,0x3e0103c8
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	05 c9 03 cb 12       	add    eax,0x12cb03c9
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	05 d4 03 fe 3c       	add    eax,0x3cfe03d4
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	05 d5 03 9e 0d       	add    eax,0xd9e03d5
     ca5:	00 00                	add    BYTE PTR [rax],al
     ca7:	05 e7 03 76 16       	add    eax,0x167603e7
     cac:	00 00                	add    BYTE PTR [rax],al
     cae:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     cb1:	00 05 0a 11 3c 00    	add    BYTE PTR [rip+0x3c110a],al        # 3c1dc1 <_end+0x1c0da9>
     cb7:	00 05 0b 13 08 00    	add    BYTE PTR [rip+0x8130b],al        # 81fc8 <__FRAME_END__+0x817d4>
     cbd:	00 05 0c c6 14 00    	add    BYTE PTR [rip+0x14c60c],al        # 14d2cf <__FRAME_END__+0x14cadb>
     cc3:	00 05 0d 71 08 00    	add    BYTE PTR [rip+0x8710d],al        # 87dd6 <__FRAME_END__+0x875e2>
     cc9:	00 05 0e fb 19 00    	add    BYTE PTR [rip+0x19fb0e],al        # 1a07dd <__FRAME_END__+0x19ffe9>
     ccf:	00 05 0f 5d 34 00    	add    BYTE PTR [rip+0x345d0f],al        # 3469e4 <_end+0x1459cc>
     cd5:	00 05 10 46 15 00    	add    BYTE PTR [rip+0x154610],al        # 1552eb <__FRAME_END__+0x154af7>
     cdb:	00 05 11 86 4d 00    	add    BYTE PTR [rip+0x4d8611],al        # 4d92f2 <_end+0x2d82da>
     ce1:	00 05 12 cc 18 00    	add    BYTE PTR [rip+0x18cc12],al        # 18d8f9 <__FRAME_END__+0x18d105>
     ce7:	00 05 13 22 48 00    	add    BYTE PTR [rip+0x482213],al        # 482f00 <_end+0x281ee8>
     ced:	00 05 14 73 0f 00    	add    BYTE PTR [rip+0xf7314],al        # f8007 <__FRAME_END__+0xf7813>
     cf3:	00 05 15 fe 09 00    	add    BYTE PTR [rip+0x9fe15],al        # a0b0e <__FRAME_END__+0xa031a>
     cf9:	00 05 16 7f 4b 00    	add    BYTE PTR [rip+0x4b7f16],al        # 4b8c15 <_end+0x2b7bfd>
     cff:	00 05 17 61 16 00    	add    BYTE PTR [rip+0x166117],al        # 166e1c <__FRAME_END__+0x166628>
     d05:	00 00                	add    BYTE PTR [rax],al
     d07:	04 00                	add    al,0x0
     d09:	00 06                	add    BYTE PTR [rsi],al
     d0b:	25 1c 2b 00 00       	and    eax,0x2b1c
     d10:	05 2a 0b 12 00       	add    eax,0x120b2a
     d15:	00 06                	add    BYTE PTR [rsi],al
     d17:	2f                   	(bad)  
     d18:	f0 43 00 00          	lock rex.XB add BYTE PTR [r8],al
     d1c:	05 33 02 48 00       	add    eax,0x480233
     d21:	00 06                	add    BYTE PTR [rsi],al
     d23:	38 0e                	cmp    BYTE PTR [rsi],cl
     d25:	37                   	(bad)  
     d26:	00 00                	add    BYTE PTR [rax],al
     d28:	05 3c 8c 47 00       	add    eax,0x478c3c
     d2d:	00 06                	add    BYTE PTR [rsi],al
     d2f:	41 ac                	rex.B lods al,BYTE PTR ds:[rsi]
     d31:	0c 00                	or     al,0x0
     d33:	00 05 45 69 3a 00    	add    BYTE PTR [rip+0x3a6945],al        # 3a767e <_end+0x1a6666>
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	04 00                	add    al,0x0
     d3d:	00 05 1f 55 2f 00    	add    BYTE PTR [rip+0x2f551f],al        # 2f6262 <_end+0xf524a>
     d43:	00 05 20 50 06 00    	add    BYTE PTR [rip+0x65020],al        # 65d69 <__FRAME_END__+0x65575>
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	04 00                	add    al,0x0
     d4d:	00 05 bb 01 85 26    	add    BYTE PTR [rip+0x268501bb],al        # 26850f0e <_end+0x2664fef6>
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	05 bc 01 23 21       	add    eax,0x212301bc
     d5a:	00 00                	add    BYTE PTR [rax],al
     d5c:	05 bd 01 6a 0f       	add    eax,0xf6a01bd
     d61:	00 00                	add    BYTE PTR [rax],al
     d63:	05 be 01 11 16       	add    eax,0x161101be
     d68:	00 00                	add    BYTE PTR [rax],al
     d6a:	05 bf 01 d5 0e       	add    eax,0xed501bf
     d6f:	00 00                	add    BYTE PTR [rax],al
     d71:	05 c0 01 05 0e       	add    eax,0xe0501c0
     d76:	00 00                	add    BYTE PTR [rax],al
     d78:	05 c1 01 02 21       	add    eax,0x210201c1
     d7d:	00 00                	add    BYTE PTR [rax],al
     d7f:	05 c2 01 f8 0f       	add    eax,0xff801c2
     d84:	00 00                	add    BYTE PTR [rax],al
     d86:	05 c3 01 f4 0f       	add    eax,0xff401c3
     d8b:	00 00                	add    BYTE PTR [rax],al
     d8d:	05 c4 01 0a 11       	add    eax,0x110a01c4
     d92:	00 00                	add    BYTE PTR [rax],al
     d94:	05 c5 01 44 00       	add    eax,0x4401c5
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	05 c6 01 06 11       	add    eax,0x110601c6
     da0:	00 00                	add    BYTE PTR [rax],al
     da2:	05 c7 01 cd 08       	add    eax,0x8cd01c7
     da7:	00 00                	add    BYTE PTR [rax],al
     da9:	05 c8 01 b6 2e       	add    eax,0x2eb601c8
     dae:	00 00                	add    BYTE PTR [rax],al
     db0:	05 c9 01 66 0f       	add    eax,0xf6601c9
     db5:	00 00                	add    BYTE PTR [rax],al
     db7:	05 ca 01 b3 47       	add    eax,0x47b301ca
     dbc:	00 00                	add    BYTE PTR [rax],al
     dbe:	05 d2 01 d1 09       	add    eax,0x9d101d2
     dc3:	00 00                	add    BYTE PTR [rax],al
     dc5:	06                   	(bad)  
     dc6:	ee                   	out    dx,al
     dc7:	01 44 2e 00          	add    DWORD PTR [rsi+rbp*1+0x0],eax
     dcb:	00 06                	add    BYTE PTR [rsi],al
     dcd:	91                   	xchg   ecx,eax
     dce:	03 c6                	add    eax,esi
     dd0:	12 00                	adc    al,BYTE PTR [rax]
     dd2:	00 05 96 03 f2 1c    	add    BYTE PTR [rip+0x1cf20396],al        # 1cf2116e <_end+0x1cd20156>
     dd8:	00 00                	add    BYTE PTR [rax],al
     dda:	06                   	(bad)  
     ddb:	9c                   	pushf  
     ddc:	03 bf 12 00 00 00    	add    edi,DWORD PTR [rdi+0x12]
     de2:	04 00                	add    al,0x0
     de4:	00 05 62 5c 24 00    	add    BYTE PTR [rip+0x245c62],al        # 246a4c <_end+0x45a34>
     dea:	00 05 63 22 26 00    	add    BYTE PTR [rip+0x262263],al        # 263053 <_end+0x6203b>
     df0:	00 05 64 1f 0a 00    	add    BYTE PTR [rip+0xa1f64],al        # a2d5a <__FRAME_END__+0xa2566>
     df6:	00 05 65 67 17 00    	add    BYTE PTR [rip+0x176765],al        # 177561 <__FRAME_END__+0x176d6d>
     dfc:	00 05 66 33 25 00    	add    BYTE PTR [rip+0x253366],al        # 254168 <_end+0x53150>
     e02:	00 05 67 48 44 00    	add    BYTE PTR [rip+0x444867],al        # 44566f <_end+0x244657>
     e08:	00 05 75 a5 3f 00    	add    BYTE PTR [rip+0x3fa575],al        # 3fb383 <_end+0x1fa36b>
     e0e:	00 05 76 6d 27 00    	add    BYTE PTR [rip+0x276d76],al        # 277b8a <_end+0x76b72>
     e14:	00 05 77 26 34 00    	add    BYTE PTR [rip+0x342677],al        # 343491 <_end+0x142479>
     e1a:	00 05 78 a4 2f 00    	add    BYTE PTR [rip+0x2fa478],al        # 2fb298 <_end+0xfa280>
     e20:	00 05 79 4d 29 00    	add    BYTE PTR [rip+0x294d79],al        # 295b9f <_end+0x94b87>
     e26:	00 05 7a c5 1b 00    	add    BYTE PTR [rip+0x1bc57a],al        # 1bd3a6 <__FRAME_END__+0x1bcbb2>
     e2c:	00 05 7b b9 39 00    	add    BYTE PTR [rip+0x39b97b],al        # 39c7ad <_end+0x19b795>
     e32:	00 05 7c 73 41 00    	add    BYTE PTR [rip+0x41737c],al        # 4181b4 <_end+0x21719c>
     e38:	00 05 7e b9 23 00    	add    BYTE PTR [rip+0x23b97e],al        # 23c7bc <_end+0x3b7a4>
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	04 00                	add    al,0x0
     e42:	00 05 18 53 15 00    	add    BYTE PTR [rip+0x155318],al        # 156160 <__FRAME_END__+0x15596c>
     e48:	00 05 22 43 42 00    	add    BYTE PTR [rip+0x424322],al        # 425170 <_end+0x224158>
     e4e:	00 05 23 cf 00 00    	add    BYTE PTR [rip+0xcf23],al        # dd77 <__FRAME_END__+0xd583>
     e54:	00 05 26 5f 49 00    	add    BYTE PTR [rip+0x495f26],al        # 496d80 <_end+0x295d68>
     e5a:	00 05 27 30 44 00    	add    BYTE PTR [rip+0x443027],al        # 443e87 <_end+0x242e6f>
     e60:	00 05 28 0c 14 00    	add    BYTE PTR [rip+0x140c28],al        # 141a8e <__FRAME_END__+0x14129a>
     e66:	00 05 29 15 36 00    	add    BYTE PTR [rip+0x361529],al        # 362395 <_end+0x16137d>
     e6c:	00 05 2a e9 28 00    	add    BYTE PTR [rip+0x28e92a],al        # 28f79c <_end+0x8e784>
     e72:	00 05 2b cc 23 00    	add    BYTE PTR [rip+0x23cc2b],al        # 23daa3 <_end+0x3ca8b>
     e78:	00 05 2d f0 2f 00    	add    BYTE PTR [rip+0x2ff02d],al        # 2ffeab <_end+0xfee93>
     e7e:	00 05 2e 0e 25 00    	add    BYTE PTR [rip+0x250e2e],al        # 251cb2 <_end+0x50c9a>
     e84:	00 05 33 bf 34 00    	add    BYTE PTR [rip+0x34bf33],al        # 34cdbd <_end+0x14bda5>
     e8a:	00 05 34 25 49 00    	add    BYTE PTR [rip+0x492534],al        # 4933c4 <_end+0x2923ac>
     e90:	00 05 35 ae 14 00    	add    BYTE PTR [rip+0x14ae35],al        # 14bccb <__FRAME_END__+0x14b4d7>
     e96:	00 05 36 a4 05 00    	add    BYTE PTR [rip+0x5a436],al        # 5b2d2 <__FRAME_END__+0x5aade>
     e9c:	00 05 37 91 16 00    	add    BYTE PTR [rip+0x169137],al        # 169fd9 <__FRAME_END__+0x1697e5>
     ea2:	00 05 38 2a 16 00    	add    BYTE PTR [rip+0x162a38],al        # 1638e0 <__FRAME_END__+0x1630ec>
     ea8:	00 05 39 e9 2a 00    	add    BYTE PTR [rip+0x2ae939],al        # 2af7e7 <_end+0xae7cf>
     eae:	00 05 3a c7 1f 00    	add    BYTE PTR [rip+0x1fc73a],al        # 1fd5ee <__FRAME_END__+0x1fcdfa>
     eb4:	00 05 3b 95 20 00    	add    BYTE PTR [rip+0x20953b],al        # 20a3f5 <_end+0x93dd>
     eba:	00 05 3c 59 3b 00    	add    BYTE PTR [rip+0x3b593c],al        # 3b67fc <_end+0x1b57e4>
     ec0:	00 05 3d 68 36 00    	add    BYTE PTR [rip+0x36683d],al        # 367703 <_end+0x1666eb>
     ec6:	00 05 3e 0c 21 00    	add    BYTE PTR [rip+0x210c3e],al        # 211b0a <_end+0x10af2>
     ecc:	00 05 3f 88 3d 00    	add    BYTE PTR [rip+0x3d883f],al        # 3d9711 <_end+0x1d86f9>
     ed2:	00 05 40 54 3c 00    	add    BYTE PTR [rip+0x3c5440],al        # 3c6318 <_end+0x1c5300>
     ed8:	00 05 41 67 15 00    	add    BYTE PTR [rip+0x156741],al        # 15761f <__FRAME_END__+0x156e2b>
     ede:	00 05 42 96 19 00    	add    BYTE PTR [rip+0x199642],al        # 19a526 <__FRAME_END__+0x199d32>
     ee4:	00 05 43 d8 1d 00    	add    BYTE PTR [rip+0x1dd843],al        # 1de72d <__FRAME_END__+0x1ddf39>
     eea:	00 05 44 45 21 00    	add    BYTE PTR [rip+0x214544],al        # 215434 <_end+0x1441c>
     ef0:	00 05 45 49 46 00    	add    BYTE PTR [rip+0x464945],al        # 46583b <_end+0x264823>
     ef6:	00 05 46 ba 41 00    	add    BYTE PTR [rip+0x41ba46],al        # 41c942 <_end+0x21b92a>
     efc:	00 05 47 4c 0b 00    	add    BYTE PTR [rip+0xb4c47],al        # b5b49 <__FRAME_END__+0xb5355>
     f02:	00 05 48 9b 0e 00    	add    BYTE PTR [rip+0xe9b48],al        # eaa50 <__FRAME_END__+0xea25c>
     f08:	00 05 49 9d 39 00    	add    BYTE PTR [rip+0x399d49],al        # 39ac57 <_end+0x199c3f>
     f0e:	00 05 4a 79 49 00    	add    BYTE PTR [rip+0x49794a],al        # 49885e <_end+0x297846>
     f14:	00 05 50 7c 01 00    	add    BYTE PTR [rip+0x17c50],al        # 18b6a <__FRAME_END__+0x18376>
     f1a:	00 05 53 89 2c 00    	add    BYTE PTR [rip+0x2c8953],al        # 2c9873 <_end+0xc885b>
     f20:	00 05 56 65 1a 00    	add    BYTE PTR [rip+0x1a6556],al        # 1a747c <__FRAME_END__+0x1a6c88>
     f26:	00 05 5c df 08 00    	add    BYTE PTR [rip+0x8df5c],al        # 8ee88 <__FRAME_END__+0x8e694>
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	04 00                	add    al,0x0
     f30:	00 05 05 2f 35 00    	add    BYTE PTR [rip+0x352f05],al        # 353e3b <_end+0x152e23>
     f36:	00 05 0e 55 2f 00    	add    BYTE PTR [rip+0x2f550e],al        # 2f644a <_end+0xf5432>
     f3c:	00 05 12 50 06 00    	add    BYTE PTR [rip+0x65012],al        # 65f54 <__FRAME_END__+0x65760>
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	04 00                	add    al,0x0
     f46:	00 06                	add    BYTE PTR [rsi],al
     f48:	ee                   	out    dx,al
     f49:	01 44 2e 00          	add    DWORD PTR [rsi+rbp*1+0x0],eax
     f4d:	00 06                	add    BYTE PTR [rsi],al
     f4f:	91                   	xchg   ecx,eax
     f50:	03 c6                	add    eax,esi
     f52:	12 00                	adc    al,BYTE PTR [rax]
     f54:	00 05 96 03 f2 1c    	add    BYTE PTR [rip+0x1cf20396],al        # 1cf212f0 <_end+0x1cd202d8>
     f5a:	00 00                	add    BYTE PTR [rax],al
     f5c:	06                   	(bad)  
     f5d:	9c                   	pushf  
     f5e:	03 bf 12 00 00 00    	add    edi,DWORD PTR [rdi+0x12]
     f64:	04 00                	add    al,0x0
     f66:	00 05 33 4e 09 00    	add    BYTE PTR [rip+0x94e33],al        # 95d9f <__FRAME_END__+0x955ab>
     f6c:	00 05 35 16 05 00    	add    BYTE PTR [rip+0x51635],al        # 525a7 <__FRAME_END__+0x51db3>
     f72:	00 05 36 dc 2d 00    	add    BYTE PTR [rip+0x2ddc36],al        # 2debae <_end+0xddb96>
     f78:	00 05 38 03 18 00    	add    BYTE PTR [rip+0x180338],al        # 1812b6 <__FRAME_END__+0x180ac2>
     f7e:	00 05 3b 27 02 00    	add    BYTE PTR [rip+0x2273b],al        # 236bf <__FRAME_END__+0x22ecb>
     f84:	00 05 3d 49 37 00    	add    BYTE PTR [rip+0x37493d],al        # 3758c7 <_end+0x1748af>
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	04 00                	add    al,0x0
     f8e:	00 05 25 93 40 00    	add    BYTE PTR [rip+0x409325],al        # 40a2b9 <_end+0x2092a1>
     f94:	00 05 26 8c 4b 00    	add    BYTE PTR [rip+0x4b8c26],al        # 4b9bc0 <_end+0x2b8ba8>
     f9a:	00 05 27 d7 28 00    	add    BYTE PTR [rip+0x28d727],al        # 28e6c7 <_end+0x8d6af>
     fa0:	00 05 28 c7 3d 00    	add    BYTE PTR [rip+0x3dc728],al        # 3dd6ce <_end+0x1dc6b6>
     fa6:	00 05 29 50 10 00    	add    BYTE PTR [rip+0x105029],al        # 105fd5 <__FRAME_END__+0x1057e1>
     fac:	00 05 2a 96 0c 00    	add    BYTE PTR [rip+0xc962a],al        # ca5dc <__FRAME_END__+0xc9de8>
     fb2:	00 05 2b ec 3c 00    	add    BYTE PTR [rip+0x3cec2b],al        # 3cfbe3 <_end+0x1cebcb>
     fb8:	00 05 2c f0 1e 00    	add    BYTE PTR [rip+0x1ef02c],al        # 1effea <__FRAME_END__+0x1ef7f6>
     fbe:	00 05 2d 10 3a 00    	add    BYTE PTR [rip+0x3a102d],al        # 3a1ff1 <_end+0x1a0fd9>
     fc4:	00 05 2e 73 1f 00    	add    BYTE PTR [rip+0x1f732e],al        # 1f82f8 <__FRAME_END__+0x1f7b04>
     fca:	00 05 2f 44 3b 00    	add    BYTE PTR [rip+0x3b442f],al        # 3b53ff <_end+0x1b43e7>
     fd0:	00 05 30 ed 3a 00    	add    BYTE PTR [rip+0x3aed30],al        # 3afd06 <_end+0x1aecee>
     fd6:	00 05 31 15 40 00    	add    BYTE PTR [rip+0x401531],al        # 40250d <_end+0x2014f5>
     fdc:	00 05 34 7b 3e 00    	add    BYTE PTR [rip+0x3e7b34],al        # 3e8b16 <_end+0x1e7afe>
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	04 00                	add    al,0x0
     fe6:	00 06                	add    BYTE PTR [rsi],al
     fe8:	22 7b 2e             	and    bh,BYTE PTR [rbx+0x2e]
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	05 27 2e 23 00       	add    eax,0x232e27
     ff2:	00 00                	add    BYTE PTR [rax],al
     ff4:	04 00                	add    al,0x0
     ff6:	00 06                	add    BYTE PTR [rsi],al
     ff8:	37                   	(bad)  
     ff9:	96                   	xchg   esi,eax
     ffa:	41 00 00             	add    BYTE PTR [r8],al
     ffd:	05 38 2e 37 00       	add    eax,0x372e38
    1002:	00 05 3f fb 31 00    	add    BYTE PTR [rip+0x31fb3f],al        # 320b47 <_end+0x11fb2f>
    1008:	00 05 42 40 26 00    	add    BYTE PTR [rip+0x264042],al        # 265050 <_end+0x64038>
    100e:	00 05 51 f3 26 00    	add    BYTE PTR [rip+0x26f351],al        # 270365 <_end+0x6f34d>
    1014:	00 05 52 7d 33 00    	add    BYTE PTR [rip+0x337d52],al        # 338d6c <_end+0x137d54>
    101a:	00 05 53 91 0d 00    	add    BYTE PTR [rip+0xd9153],al        # da173 <__FRAME_END__+0xd997f>
    1020:	00 05 54 3f 45 00    	add    BYTE PTR [rip+0x453f54],al        # 454f7a <_end+0x253f62>
    1026:	00 05 55 0a 17 00    	add    BYTE PTR [rip+0x170a55],al        # 171a81 <__FRAME_END__+0x17128d>
    102c:	00 05 56 38 1b 00    	add    BYTE PTR [rip+0x1b3856],al        # 1b4888 <__FRAME_END__+0x1b4094>
    1032:	00 05 57 a6 28 00    	add    BYTE PTR [rip+0x28a657],al        # 28b68f <_end+0x8a677>
    1038:	00 05 58 e8 2c 00    	add    BYTE PTR [rip+0x2ce858],al        # 2cf896 <_end+0xce87e>
    103e:	00 05 60 50 22 00    	add    BYTE PTR [rip+0x225060],al        # 2260a4 <_end+0x2508c>
    1044:	00 05 61 1c 1b 00    	add    BYTE PTR [rip+0x1b1c61],al        # 1b2cab <__FRAME_END__+0x1b24b7>
    104a:	00 05 62 ea 36 00    	add    BYTE PTR [rip+0x36ea62],al        # 36fab2 <_end+0x16ea9a>
    1050:	00 05 63 c8 03 00    	add    BYTE PTR [rip+0x3c863],al        # 3d8b9 <__FRAME_END__+0x3d0c5>
    1056:	00 05 64 68 3d 00    	add    BYTE PTR [rip+0x3d6864],al        # 3d78c0 <_end+0x1d68a8>
    105c:	00 05 65 7d 47 00    	add    BYTE PTR [rip+0x477d65],al        # 478dc7 <_end+0x277daf>
    1062:	00 05 66 71 05 00    	add    BYTE PTR [rip+0x57166],al        # 581ce <__FRAME_END__+0x579da>
    1068:	00 05 67 0a 03 00    	add    BYTE PTR [rip+0x30a67],al        # 31ad5 <__FRAME_END__+0x312e1>
    106e:	00 05 68 61 11 00    	add    BYTE PTR [rip+0x116168],al        # 1171dc <__FRAME_END__+0x1169e8>
    1074:	00 05 69 a5 1a 00    	add    BYTE PTR [rip+0x1aa569],al        # 1ab5e3 <__FRAME_END__+0x1aadef>
    107a:	00 05 6a 40 20 00    	add    BYTE PTR [rip+0x20406a],al        # 2050ea <_end+0x40d2>
    1080:	00 05 6b f5 2c 00    	add    BYTE PTR [rip+0x2cf56b],al        # 2d05f1 <_end+0xcf5d9>
    1086:	00 05 6c 5d 07 00    	add    BYTE PTR [rip+0x75d6c],al        # 76df8 <__FRAME_END__+0x76604>
    108c:	00 05 6d 21 18 00    	add    BYTE PTR [rip+0x18216d],al        # 1831ff <__FRAME_END__+0x182a0b>
    1092:	00 05 6e 27 4d 00    	add    BYTE PTR [rip+0x4d276e],al        # 4d3806 <_end+0x2d27ee>
    1098:	00 05 6f 5c 28 00    	add    BYTE PTR [rip+0x285c6f],al        # 286d0d <_end+0x85cf5>
    109e:	00 05 70 0f 49 00    	add    BYTE PTR [rip+0x490f70],al        # 492014 <_end+0x290ffc>
    10a4:	00 05 71 80 3b 00    	add    BYTE PTR [rip+0x3b8071],al        # 3b911b <_end+0x1b8103>
    10aa:	00 05 72 cc 31 00    	add    BYTE PTR [rip+0x31cc72],al        # 31dd22 <_end+0x11cd0a>
    10b0:	00 05 74 ae 29 00    	add    BYTE PTR [rip+0x29ae74],al        # 29bf2a <_end+0x9af12>
    10b6:	00 05 75 e6 21 00    	add    BYTE PTR [rip+0x21e675],al        # 21f731 <_end+0x1e719>
    10bc:	00 05 79 1c 2f 00    	add    BYTE PTR [rip+0x2f1c79],al        # 2f2d3b <_end+0xf1d23>
    10c2:	00 05 82 01 a3 1c    	add    BYTE PTR [rip+0x1ca30182],al        # 1ca3124a <_end+0x1c830232>
    10c8:	00 00                	add    BYTE PTR [rax],al
    10ca:	05 83 01 6f 30       	add    eax,0x306f0183
    10cf:	00 00                	add    BYTE PTR [rax],al
    10d1:	05 84 01 bb 03       	add    eax,0x3bb0184
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	05 85 01 a5 2e       	add    eax,0x2ea50185
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	05 86 01 00 00       	add    eax,0x186
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	05 87 01 47 1f       	add    eax,0x1f470187
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	05 88 01 a1 18       	add    eax,0x18a10188
    10f2:	00 00                	add    BYTE PTR [rax],al
    10f4:	05 89 01 4f 16       	add    eax,0x164f0189
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	05 8a 01 16 0b       	add    eax,0xb16018a
    1100:	00 00                	add    BYTE PTR [rax],al
    1102:	05 8b 01 11 38       	add    eax,0x3811018b
    1107:	00 00                	add    BYTE PTR [rax],al
    1109:	05 8c 01 1f 33       	add    eax,0x331f018c
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	05 8d 01 be 3e       	add    eax,0x3ebe018d
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	05 8e 01 13 41       	add    eax,0x4113018e
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	05 8f 01 ac 34       	add    eax,0x34ac018f
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	05 90 01 4e 49       	add    eax,0x494e0190
    112a:	00 00                	add    BYTE PTR [rax],al
    112c:	05 91 01 d9 43       	add    eax,0x43d90191
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	05 92 01 be 30       	add    eax,0x30be0192
    1138:	00 00                	add    BYTE PTR [rax],al
    113a:	05 f7 01 ae 26       	add    eax,0x26ae01f7
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	05 94 02 0d 1b       	add    eax,0x1b0d0294
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	05 c3 02 13 19       	add    eax,0x191302c3
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	05 c4 02 aa 3c       	add    eax,0x3caa02c4
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	05 c5 02 70 1d       	add    eax,0x1d7002c5
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	05 8f 03 bf 49       	add    eax,0x49bf038f
    1162:	00 00                	add    BYTE PTR [rax],al
    1164:	05 94 03 76 35       	add    eax,0x35760394
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	05 97 03 d3 3e       	add    eax,0x3ed30397
    1170:	00 00                	add    BYTE PTR [rax],al
    1172:	05 9b 03 15 43       	add    eax,0x4315039b
    1177:	00 00                	add    BYTE PTR [rax],al
    1179:	05 ae 03 21 1d       	add    eax,0x1d2103ae
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	05 af 03 e4 0e       	add    eax,0xee403af
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	05 b9 03 7f 31       	add    eax,0x317f03b9
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	05 c0 03 84 15       	add    eax,0x158403c0
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	05 c1 03 09 2d       	add    eax,0x2d0903c1
    119a:	00 00                	add    BYTE PTR [rax],al
    119c:	05 c2 03 2f 21       	add    eax,0x212f03c2
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	05 c3 03 db 11       	add    eax,0x11db03c3
    11a8:	00 00                	add    BYTE PTR [rax],al
    11aa:	05 c5 03 44 18       	add    eax,0x184403c5
    11af:	00 00                	add    BYTE PTR [rax],al
    11b1:	05 c8 03 21 2a       	add    eax,0x2a2103c8
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	05 cb 03 23 32       	add    eax,0x322303cb
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    11c2:	00 05 2f 42 39 00    	add    BYTE PTR [rip+0x39422f],al        # 3953f7 <_end+0x1943df>
    11c8:	00 05 3d 29 0b 00    	add    BYTE PTR [rip+0xb293d],al        # b3b0b <__FRAME_END__+0xb3317>
    11ce:	00 05 48 c2 0e 00    	add    BYTE PTR [rip+0xec248],al        # ed41c <__FRAME_END__+0xecc28>
    11d4:	00 05 57 dd 02 00    	add    BYTE PTR [rip+0x2dd57],al        # 2ef31 <__FRAME_END__+0x2e73d>
    11da:	00 05 58 f2 2b 00    	add    BYTE PTR [rip+0x2bf258],al        # 2c0438 <_end+0xbf420>
    11e0:	00 05 59 d0 17 00    	add    BYTE PTR [rip+0x17d059],al        # 17e23f <__FRAME_END__+0x17da4b>
    11e6:	00 05 5e 4d 0e 00    	add    BYTE PTR [rip+0xe4d5e],al        # e5f4a <__FRAME_END__+0xe5756>
    11ec:	00 05 6b a4 44 00    	add    BYTE PTR [rip+0x44a46b],al        # 44b65d <_end+0x24a645>
    11f2:	00 05 6c 1c 03 00    	add    BYTE PTR [rip+0x31c6c],al        # 32e64 <__FRAME_END__+0x32670>
    11f8:	00 05 6d be 19 00    	add    BYTE PTR [rip+0x19be6d],al        # 19d06b <__FRAME_END__+0x19c877>
    11fe:	00 05 76 25 38 00    	add    BYTE PTR [rip+0x382576],al        # 38377a <_end+0x182762>
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	04 00                	add    al,0x0
    1208:	00 05 13 4f 2c 00    	add    BYTE PTR [rip+0x2c4f13],al        # 2c6121 <_end+0xc5109>
    120e:	00 05 19 38 18 00    	add    BYTE PTR [rip+0x183819],al        # 184a2d <__FRAME_END__+0x184239>
    1214:	00 05 1a 14 32 00    	add    BYTE PTR [rip+0x32141a],al        # 322634 <_end+0x12161c>
    121a:	00 05 1b ab 02 00    	add    BYTE PTR [rip+0x2ab1b],al        # 2bd3b <__FRAME_END__+0x2b547>
    1220:	00 05 1e af 4a 00    	add    BYTE PTR [rip+0x4aaf1e],al        # 4ac144 <_end+0x2ab12c>
    1226:	00 06                	add    BYTE PTR [rsi],al
    1228:	24 2a                	and    al,0x2a
    122a:	3c 00                	cmp    al,0x0
    122c:	00 05 25 d3 38 00    	add    BYTE PTR [rip+0x38d325],al        # 38e557 <_end+0x18d53f>
    1232:	00 00                	add    BYTE PTR [rax],al
    1234:	04 00                	add    al,0x0
    1236:	00 05 8b 01 a3 22    	add    BYTE PTR [rip+0x22a3018b],al        # 22a313c7 <_end+0x228303af>
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	05 8c 01 a2 41       	add    eax,0x41a2018c
    1243:	00 00                	add    BYTE PTR [rax],al
    1245:	05 8d 01 e6 17       	add    eax,0x17e6018d
    124a:	00 00                	add    BYTE PTR [rax],al
    124c:	05 e8 03 79 12       	add    eax,0x127903e8
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	05 90 04 1b 27       	add    eax,0x271b0490
    1258:	00 00                	add    BYTE PTR [rax],al
	...
Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=00000000000004f0..000000000000051b
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=00000000000004d0..00000000000004e0
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 00000000000004d6
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 00000000000004e0
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000044 FDE cie=00000030 pc=00000000000004e0..00000000000004e8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 000000000000001c 0000005c FDE cie=00000030 pc=00000000000005fa..0000000000000624
  DW_CFA_advance_loc: 1 to 00000000000005fb
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 00000000000005fe
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 37 to 0000000000000623
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000a8 0000000000000044 0000007c FDE cie=00000030 pc=0000000000000630..0000000000000695
  DW_CFA_advance_loc: 2 to 0000000000000632
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 2 to 0000000000000634
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 0000000000000639
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 2 to 000000000000063b
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 0000000000000643
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 000000000000064b
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 0000000000000658
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 50 to 000000000000068a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000000068b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000000068c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000000068e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000000000000690
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 0000000000000692
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000000694
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000f0 0000000000000010 000000c4 FDE cie=00000030 pc=00000000000006a0..00000000000006a2
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000104 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    00000000000005fa 000000000000002a 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0x368 (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0xba6): GNU C11 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fstack-protector-strong
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0x2a0): mult_int.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x1c20): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/C/Intel_architecture/AMD64/Integer_Operations/Mult_Int/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x5fa
    <21>   DW_AT_high_pc     : 0x2a
    <29>   DW_AT_stmt_list   : 0x0
    <2d>   DW_AT_GNU_macros  : 0x0
 <1><31>: Abbrev Number: 2 (DW_TAG_typedef)
    <32>   DW_AT_name        : (indirect string, offset: 0x28e2): size_t
    <36>   DW_AT_decl_file   : 2
    <37>   DW_AT_decl_line   : 216
    <38>   DW_AT_type        : <0x3c>
 <1><3c>: Abbrev Number: 3 (DW_TAG_base_type)
    <3d>   DW_AT_byte_size   : 8
    <3e>   DW_AT_encoding    : 7	(unsigned)
    <3f>   DW_AT_name        : (indirect string, offset: 0x3969): long unsigned int
 <1><43>: Abbrev Number: 3 (DW_TAG_base_type)
    <44>   DW_AT_byte_size   : 1
    <45>   DW_AT_encoding    : 8	(unsigned char)
    <46>   DW_AT_name        : (indirect string, offset: 0x26a0): unsigned char
 <1><4a>: Abbrev Number: 3 (DW_TAG_base_type)
    <4b>   DW_AT_byte_size   : 2
    <4c>   DW_AT_encoding    : 7	(unsigned)
    <4d>   DW_AT_name        : (indirect string, offset: 0x70c): short unsigned int
 <1><51>: Abbrev Number: 3 (DW_TAG_base_type)
    <52>   DW_AT_byte_size   : 4
    <53>   DW_AT_encoding    : 7	(unsigned)
    <54>   DW_AT_name        : (indirect string, offset: 0x1bd4): unsigned int
 <1><58>: Abbrev Number: 3 (DW_TAG_base_type)
    <59>   DW_AT_byte_size   : 1
    <5a>   DW_AT_encoding    : 6	(signed char)
    <5b>   DW_AT_name        : (indirect string, offset: 0x421e): signed char
 <1><5f>: Abbrev Number: 3 (DW_TAG_base_type)
    <60>   DW_AT_byte_size   : 2
    <61>   DW_AT_encoding    : 5	(signed)
    <62>   DW_AT_name        : (indirect string, offset: 0x2467): short int
 <1><66>: Abbrev Number: 4 (DW_TAG_base_type)
    <67>   DW_AT_byte_size   : 4
    <68>   DW_AT_encoding    : 5	(signed)
    <69>   DW_AT_name        : int
 <1><6d>: Abbrev Number: 3 (DW_TAG_base_type)
    <6e>   DW_AT_byte_size   : 8
    <6f>   DW_AT_encoding    : 5	(signed)
    <70>   DW_AT_name        : (indirect string, offset: 0x39c4): long int
 <1><74>: Abbrev Number: 2 (DW_TAG_typedef)
    <75>   DW_AT_name        : (indirect string, offset: 0x105a): __off_t
    <79>   DW_AT_decl_file   : 3
    <7a>   DW_AT_decl_line   : 140
    <7b>   DW_AT_type        : <0x6d>
 <1><7f>: Abbrev Number: 2 (DW_TAG_typedef)
    <80>   DW_AT_name        : (indirect string, offset: 0xca2): __off64_t
    <84>   DW_AT_decl_file   : 3
    <85>   DW_AT_decl_line   : 141
    <86>   DW_AT_type        : <0x6d>
 <1><8a>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <8b>   DW_AT_byte_size   : 8
 <1><8c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <8d>   DW_AT_byte_size   : 8
    <8e>   DW_AT_type        : <0x92>
 <1><92>: Abbrev Number: 3 (DW_TAG_base_type)
    <93>   DW_AT_byte_size   : 1
    <94>   DW_AT_encoding    : 6	(signed char)
    <95>   DW_AT_name        : (indirect string, offset: 0x4225): char
 <1><99>: Abbrev Number: 7 (DW_TAG_const_type)
    <9a>   DW_AT_type        : <0x92>
 <1><9e>: Abbrev Number: 8 (DW_TAG_structure_type)
    <9f>   DW_AT_name        : (indirect string, offset: 0x3d5f): _IO_FILE
    <a3>   DW_AT_byte_size   : 216
    <a4>   DW_AT_decl_file   : 4
    <a5>   DW_AT_decl_line   : 245
    <a6>   DW_AT_sibling     : <0x21e>
 <2><aa>: Abbrev Number: 9 (DW_TAG_member)
    <ab>   DW_AT_name        : (indirect string, offset: 0x26bd): _flags
    <af>   DW_AT_decl_file   : 4
    <b0>   DW_AT_decl_line   : 246
    <b1>   DW_AT_type        : <0x66>
    <b5>   DW_AT_data_member_location: 0
 <2><b6>: Abbrev Number: 9 (DW_TAG_member)
    <b7>   DW_AT_name        : (indirect string, offset: 0x20f5): _IO_read_ptr
    <bb>   DW_AT_decl_file   : 4
    <bc>   DW_AT_decl_line   : 251
    <bd>   DW_AT_type        : <0x8c>
    <c1>   DW_AT_data_member_location: 8
 <2><c2>: Abbrev Number: 9 (DW_TAG_member)
    <c3>   DW_AT_name        : (indirect string, offset: 0x3331): _IO_read_end
    <c7>   DW_AT_decl_file   : 4
    <c8>   DW_AT_decl_line   : 252
    <c9>   DW_AT_type        : <0x8c>
    <cd>   DW_AT_data_member_location: 16
 <2><ce>: Abbrev Number: 9 (DW_TAG_member)
    <cf>   DW_AT_name        : (indirect string, offset: 0x18db): _IO_read_base
    <d3>   DW_AT_decl_file   : 4
    <d4>   DW_AT_decl_line   : 253
    <d5>   DW_AT_type        : <0x8c>
    <d9>   DW_AT_data_member_location: 24
 <2><da>: Abbrev Number: 9 (DW_TAG_member)
    <db>   DW_AT_name        : (indirect string, offset: 0x24d9): _IO_write_base
    <df>   DW_AT_decl_file   : 4
    <e0>   DW_AT_decl_line   : 254
    <e1>   DW_AT_type        : <0x8c>
    <e5>   DW_AT_data_member_location: 32
 <2><e6>: Abbrev Number: 9 (DW_TAG_member)
    <e7>   DW_AT_name        : (indirect string, offset: 0x41d0): _IO_write_ptr
    <eb>   DW_AT_decl_file   : 4
    <ec>   DW_AT_decl_line   : 255
    <ed>   DW_AT_type        : <0x8c>
    <f1>   DW_AT_data_member_location: 40
 <2><f2>: Abbrev Number: 10 (DW_TAG_member)
    <f3>   DW_AT_name        : (indirect string, offset: 0x5eb): _IO_write_end
    <f7>   DW_AT_decl_file   : 4
    <f8>   DW_AT_decl_line   : 256
    <fa>   DW_AT_type        : <0x8c>
    <fe>   DW_AT_data_member_location: 48
 <2><ff>: Abbrev Number: 10 (DW_TAG_member)
    <100>   DW_AT_name        : (indirect string, offset: 0x4d79): _IO_buf_base
    <104>   DW_AT_decl_file   : 4
    <105>   DW_AT_decl_line   : 257
    <107>   DW_AT_type        : <0x8c>
    <10b>   DW_AT_data_member_location: 56
 <2><10c>: Abbrev Number: 10 (DW_TAG_member)
    <10d>   DW_AT_name        : (indirect string, offset: 0x2e6): _IO_buf_end
    <111>   DW_AT_decl_file   : 4
    <112>   DW_AT_decl_line   : 258
    <114>   DW_AT_type        : <0x8c>
    <118>   DW_AT_data_member_location: 64
 <2><119>: Abbrev Number: 10 (DW_TAG_member)
    <11a>   DW_AT_name        : (indirect string, offset: 0x2614): _IO_save_base
    <11e>   DW_AT_decl_file   : 4
    <11f>   DW_AT_decl_line   : 260
    <121>   DW_AT_type        : <0x8c>
    <125>   DW_AT_data_member_location: 72
 <2><126>: Abbrev Number: 10 (DW_TAG_member)
    <127>   DW_AT_name        : (indirect string, offset: 0x42ae): _IO_backup_base
    <12b>   DW_AT_decl_file   : 4
    <12c>   DW_AT_decl_line   : 261
    <12e>   DW_AT_type        : <0x8c>
    <132>   DW_AT_data_member_location: 80
 <2><133>: Abbrev Number: 10 (DW_TAG_member)
    <134>   DW_AT_name        : (indirect string, offset: 0xfcb): _IO_save_end
    <138>   DW_AT_decl_file   : 4
    <139>   DW_AT_decl_line   : 262
    <13b>   DW_AT_type        : <0x8c>
    <13f>   DW_AT_data_member_location: 88
 <2><140>: Abbrev Number: 10 (DW_TAG_member)
    <141>   DW_AT_name        : (indirect string, offset: 0x901): _markers
    <145>   DW_AT_decl_file   : 4
    <146>   DW_AT_decl_line   : 264
    <148>   DW_AT_type        : <0x256>
    <14c>   DW_AT_data_member_location: 96
 <2><14d>: Abbrev Number: 10 (DW_TAG_member)
    <14e>   DW_AT_name        : (indirect string, offset: 0x4a65): _chain
    <152>   DW_AT_decl_file   : 4
    <153>   DW_AT_decl_line   : 266
    <155>   DW_AT_type        : <0x25c>
    <159>   DW_AT_data_member_location: 104
 <2><15a>: Abbrev Number: 10 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x166e): _fileno
    <15f>   DW_AT_decl_file   : 4
    <160>   DW_AT_decl_line   : 268
    <162>   DW_AT_type        : <0x66>
    <166>   DW_AT_data_member_location: 112
 <2><167>: Abbrev Number: 10 (DW_TAG_member)
    <168>   DW_AT_name        : (indirect string, offset: 0x83a): _flags2
    <16c>   DW_AT_decl_file   : 4
    <16d>   DW_AT_decl_line   : 272
    <16f>   DW_AT_type        : <0x66>
    <173>   DW_AT_data_member_location: 116
 <2><174>: Abbrev Number: 10 (DW_TAG_member)
    <175>   DW_AT_name        : (indirect string, offset: 0x3d53): _old_offset
    <179>   DW_AT_decl_file   : 4
    <17a>   DW_AT_decl_line   : 274
    <17c>   DW_AT_type        : <0x74>
    <180>   DW_AT_data_member_location: 120
 <2><181>: Abbrev Number: 10 (DW_TAG_member)
    <182>   DW_AT_name        : (indirect string, offset: 0x4c7d): _cur_column
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 278
    <189>   DW_AT_type        : <0x4a>
    <18d>   DW_AT_data_member_location: 128
 <2><18e>: Abbrev Number: 10 (DW_TAG_member)
    <18f>   DW_AT_name        : (indirect string, offset: 0x17f4): _vtable_offset
    <193>   DW_AT_decl_file   : 4
    <194>   DW_AT_decl_line   : 279
    <196>   DW_AT_type        : <0x58>
    <19a>   DW_AT_data_member_location: 130
 <2><19b>: Abbrev Number: 10 (DW_TAG_member)
    <19c>   DW_AT_name        : (indirect string, offset: 0x14e): _shortbuf
    <1a0>   DW_AT_decl_file   : 4
    <1a1>   DW_AT_decl_line   : 280
    <1a3>   DW_AT_type        : <0x262>
    <1a7>   DW_AT_data_member_location: 131
 <2><1a8>: Abbrev Number: 10 (DW_TAG_member)
    <1a9>   DW_AT_name        : (indirect string, offset: 0x3c34): _lock
    <1ad>   DW_AT_decl_file   : 4
    <1ae>   DW_AT_decl_line   : 284
    <1b0>   DW_AT_type        : <0x272>
    <1b4>   DW_AT_data_member_location: 136
 <2><1b5>: Abbrev Number: 10 (DW_TAG_member)
    <1b6>   DW_AT_name        : (indirect string, offset: 0x3d57): _offset
    <1ba>   DW_AT_decl_file   : 4
    <1bb>   DW_AT_decl_line   : 293
    <1bd>   DW_AT_type        : <0x7f>
    <1c1>   DW_AT_data_member_location: 144
 <2><1c2>: Abbrev Number: 10 (DW_TAG_member)
    <1c3>   DW_AT_name        : (indirect string, offset: 0x2b56): __pad1
    <1c7>   DW_AT_decl_file   : 4
    <1c8>   DW_AT_decl_line   : 301
    <1ca>   DW_AT_type        : <0x8a>
    <1ce>   DW_AT_data_member_location: 152
 <2><1cf>: Abbrev Number: 10 (DW_TAG_member)
    <1d0>   DW_AT_name        : (indirect string, offset: 0x2b5d): __pad2
    <1d4>   DW_AT_decl_file   : 4
    <1d5>   DW_AT_decl_line   : 302
    <1d7>   DW_AT_type        : <0x8a>
    <1db>   DW_AT_data_member_location: 160
 <2><1dc>: Abbrev Number: 10 (DW_TAG_member)
    <1dd>   DW_AT_name        : (indirect string, offset: 0x2b64): __pad3
    <1e1>   DW_AT_decl_file   : 4
    <1e2>   DW_AT_decl_line   : 303
    <1e4>   DW_AT_type        : <0x8a>
    <1e8>   DW_AT_data_member_location: 168
 <2><1e9>: Abbrev Number: 10 (DW_TAG_member)
    <1ea>   DW_AT_name        : (indirect string, offset: 0x2b6b): __pad4
    <1ee>   DW_AT_decl_file   : 4
    <1ef>   DW_AT_decl_line   : 304
    <1f1>   DW_AT_type        : <0x8a>
    <1f5>   DW_AT_data_member_location: 176
 <2><1f6>: Abbrev Number: 10 (DW_TAG_member)
    <1f7>   DW_AT_name        : (indirect string, offset: 0x2b72): __pad5
    <1fb>   DW_AT_decl_file   : 4
    <1fc>   DW_AT_decl_line   : 306
    <1fe>   DW_AT_type        : <0x31>
    <202>   DW_AT_data_member_location: 184
 <2><203>: Abbrev Number: 10 (DW_TAG_member)
    <204>   DW_AT_name        : (indirect string, offset: 0x1f6d): _mode
    <208>   DW_AT_decl_file   : 4
    <209>   DW_AT_decl_line   : 307
    <20b>   DW_AT_type        : <0x66>
    <20f>   DW_AT_data_member_location: 192
 <2><210>: Abbrev Number: 10 (DW_TAG_member)
    <211>   DW_AT_name        : (indirect string, offset: 0x4d70): _unused2
    <215>   DW_AT_decl_file   : 4
    <216>   DW_AT_decl_line   : 309
    <218>   DW_AT_type        : <0x278>
    <21c>   DW_AT_data_member_location: 196
 <2><21d>: Abbrev Number: 0
 <1><21e>: Abbrev Number: 11 (DW_TAG_typedef)
    <21f>   DW_AT_name        : (indirect string, offset: 0x1f9): _IO_lock_t
    <223>   DW_AT_decl_file   : 4
    <224>   DW_AT_decl_line   : 154
 <1><225>: Abbrev Number: 8 (DW_TAG_structure_type)
    <226>   DW_AT_name        : (indirect string, offset: 0x1b7a): _IO_marker
    <22a>   DW_AT_byte_size   : 24
    <22b>   DW_AT_decl_file   : 4
    <22c>   DW_AT_decl_line   : 160
    <22d>   DW_AT_sibling     : <0x256>
 <2><231>: Abbrev Number: 9 (DW_TAG_member)
    <232>   DW_AT_name        : (indirect string, offset: 0x1a0b): _next
    <236>   DW_AT_decl_file   : 4
    <237>   DW_AT_decl_line   : 161
    <238>   DW_AT_type        : <0x256>
    <23c>   DW_AT_data_member_location: 0
 <2><23d>: Abbrev Number: 9 (DW_TAG_member)
    <23e>   DW_AT_name        : (indirect string, offset: 0x4190): _sbuf
    <242>   DW_AT_decl_file   : 4
    <243>   DW_AT_decl_line   : 162
    <244>   DW_AT_type        : <0x25c>
    <248>   DW_AT_data_member_location: 8
 <2><249>: Abbrev Number: 9 (DW_TAG_member)
    <24a>   DW_AT_name        : (indirect string, offset: 0xedf): _pos
    <24e>   DW_AT_decl_file   : 4
    <24f>   DW_AT_decl_line   : 166
    <250>   DW_AT_type        : <0x66>
    <254>   DW_AT_data_member_location: 16
 <2><255>: Abbrev Number: 0
 <1><256>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <257>   DW_AT_byte_size   : 8
    <258>   DW_AT_type        : <0x225>
 <1><25c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <25d>   DW_AT_byte_size   : 8
    <25e>   DW_AT_type        : <0x9e>
 <1><262>: Abbrev Number: 12 (DW_TAG_array_type)
    <263>   DW_AT_type        : <0x92>
    <267>   DW_AT_sibling     : <0x272>
 <2><26b>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <26c>   DW_AT_type        : <0x3c>
    <270>   DW_AT_upper_bound : 0
 <2><271>: Abbrev Number: 0
 <1><272>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <273>   DW_AT_byte_size   : 8
    <274>   DW_AT_type        : <0x21e>
 <1><278>: Abbrev Number: 12 (DW_TAG_array_type)
    <279>   DW_AT_type        : <0x92>
    <27d>   DW_AT_sibling     : <0x288>
 <2><281>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <282>   DW_AT_type        : <0x3c>
    <286>   DW_AT_upper_bound : 19
 <2><287>: Abbrev Number: 0
 <1><288>: Abbrev Number: 14 (DW_TAG_structure_type)
    <289>   DW_AT_name        : (indirect string, offset: 0x38e0): _IO_FILE_plus
    <28d>   DW_AT_declaration : 1
 <1><28d>: Abbrev Number: 15 (DW_TAG_variable)
    <28e>   DW_AT_name        : (indirect string, offset: 0x254d): _IO_2_1_stdin_
    <292>   DW_AT_decl_file   : 4
    <293>   DW_AT_decl_line   : 319
    <295>   DW_AT_type        : <0x288>
    <299>   DW_AT_external    : 1
    <299>   DW_AT_declaration : 1
 <1><299>: Abbrev Number: 15 (DW_TAG_variable)
    <29a>   DW_AT_name        : (indirect string, offset: 0x25c4): _IO_2_1_stdout_
    <29e>   DW_AT_decl_file   : 4
    <29f>   DW_AT_decl_line   : 320
    <2a1>   DW_AT_type        : <0x288>
    <2a5>   DW_AT_external    : 1
    <2a5>   DW_AT_declaration : 1
 <1><2a5>: Abbrev Number: 15 (DW_TAG_variable)
    <2a6>   DW_AT_name        : (indirect string, offset: 0x1f1c): _IO_2_1_stderr_
    <2aa>   DW_AT_decl_file   : 4
    <2ab>   DW_AT_decl_line   : 321
    <2ad>   DW_AT_type        : <0x288>
    <2b1>   DW_AT_external    : 1
    <2b1>   DW_AT_declaration : 1
 <1><2b1>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <2b2>   DW_AT_byte_size   : 8
    <2b3>   DW_AT_type        : <0x99>
 <1><2b7>: Abbrev Number: 7 (DW_TAG_const_type)
    <2b8>   DW_AT_type        : <0x2b1>
 <1><2bc>: Abbrev Number: 16 (DW_TAG_variable)
    <2bd>   DW_AT_name        : (indirect string, offset: 0x22a9): stdin
    <2c1>   DW_AT_decl_file   : 5
    <2c2>   DW_AT_decl_line   : 135
    <2c3>   DW_AT_type        : <0x25c>
    <2c7>   DW_AT_external    : 1
    <2c7>   DW_AT_declaration : 1
 <1><2c7>: Abbrev Number: 16 (DW_TAG_variable)
    <2c8>   DW_AT_name        : (indirect string, offset: 0x41a9): stdout
    <2cc>   DW_AT_decl_file   : 5
    <2cd>   DW_AT_decl_line   : 136
    <2ce>   DW_AT_type        : <0x25c>
    <2d2>   DW_AT_external    : 1
    <2d2>   DW_AT_declaration : 1
 <1><2d2>: Abbrev Number: 16 (DW_TAG_variable)
    <2d3>   DW_AT_name        : (indirect string, offset: 0x17ed): stderr
    <2d7>   DW_AT_decl_file   : 5
    <2d8>   DW_AT_decl_line   : 137
    <2d9>   DW_AT_type        : <0x25c>
    <2dd>   DW_AT_external    : 1
    <2dd>   DW_AT_declaration : 1
 <1><2dd>: Abbrev Number: 16 (DW_TAG_variable)
    <2de>   DW_AT_name        : (indirect string, offset: 0x15eb): sys_nerr
    <2e2>   DW_AT_decl_file   : 6
    <2e3>   DW_AT_decl_line   : 26
    <2e4>   DW_AT_type        : <0x66>
    <2e8>   DW_AT_external    : 1
    <2e8>   DW_AT_declaration : 1
 <1><2e8>: Abbrev Number: 12 (DW_TAG_array_type)
    <2e9>   DW_AT_type        : <0x2b7>
    <2ed>   DW_AT_sibling     : <0x2f3>
 <2><2f1>: Abbrev Number: 17 (DW_TAG_subrange_type)
 <2><2f2>: Abbrev Number: 0
 <1><2f3>: Abbrev Number: 7 (DW_TAG_const_type)
    <2f4>   DW_AT_type        : <0x2e8>
 <1><2f8>: Abbrev Number: 16 (DW_TAG_variable)
    <2f9>   DW_AT_name        : (indirect string, offset: 0x14d6): sys_errlist
    <2fd>   DW_AT_decl_file   : 6
    <2fe>   DW_AT_decl_line   : 27
    <2ff>   DW_AT_type        : <0x2f3>
    <303>   DW_AT_external    : 1
    <303>   DW_AT_declaration : 1
 <1><303>: Abbrev Number: 18 (DW_TAG_subprogram)
    <304>   DW_AT_external    : 1
    <304>   DW_AT_name        : (indirect string, offset: 0x47ae): main
    <308>   DW_AT_decl_file   : 1
    <309>   DW_AT_decl_line   : 3
    <30a>   DW_AT_prototyped  : 1
    <30a>   DW_AT_type        : <0x66>
    <30e>   DW_AT_low_pc      : 0x5fa
    <316>   DW_AT_high_pc     : 0x2a
    <31e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <320>   DW_AT_GNU_all_call_sites: 1
    <320>   DW_AT_sibling     : <0x365>
 <2><324>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <325>   DW_AT_name        : (indirect string, offset: 0x733): argc
    <329>   DW_AT_decl_file   : 1
    <32a>   DW_AT_decl_line   : 3
    <32b>   DW_AT_type        : <0x66>
    <32f>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><332>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <333>   DW_AT_name        : (indirect string, offset: 0x1d03): argv
    <337>   DW_AT_decl_file   : 1
    <338>   DW_AT_decl_line   : 3
    <339>   DW_AT_type        : <0x365>
    <33d>   DW_AT_location    : 2 byte block: 91 50 	(DW_OP_fbreg: -48)
 <2><340>: Abbrev Number: 20 (DW_TAG_variable)
    <341>   DW_AT_name        : a
    <343>   DW_AT_decl_file   : 1
    <344>   DW_AT_decl_line   : 5
    <345>   DW_AT_type        : <0x66>
    <349>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><34c>: Abbrev Number: 20 (DW_TAG_variable)
    <34d>   DW_AT_name        : b
    <34f>   DW_AT_decl_file   : 1
    <350>   DW_AT_decl_line   : 5
    <351>   DW_AT_type        : <0x66>
    <355>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><358>: Abbrev Number: 20 (DW_TAG_variable)
    <359>   DW_AT_name        : c
    <35b>   DW_AT_decl_file   : 1
    <35c>   DW_AT_decl_line   : 5
    <35d>   DW_AT_type        : <0x66>
    <361>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><364>: Abbrev Number: 0
 <1><365>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <366>   DW_AT_byte_size   : 8
    <367>   DW_AT_type        : <0x8c>
 <1><36b>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_structure_type    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subrange_type    [no children]
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      553
  DWARF Version:               2
  Prologue Length:             526
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/usr/lib/gcc/x86_64-linux-gnu/7/include
  2	/usr/x86_64-linux-gnu/include/bits
  3	/usr/x86_64-linux-gnu/include
  4	/usr/x86_64-linux-gnu/include/sys
  5	/usr/x86_64-linux-gnu/include/gnu
  6	/usr/x86_64-linux-gnu/include/bits/types

 The File Name Table (offset 0xf2):
  Entry	Dir	Time	Size	Name
  1	0	0	0	mult_int.c
  2	1	0	0	stddef.h
  3	2	0	0	types.h
  4	2	0	0	libio.h
  5	3	0	0	stdio.h
  6	2	0	0	sys_errlist.h
  7	3	0	0	stdc-predef.h
  8	2	0	0	libc-header-start.h
  9	3	0	0	features.h
  10	4	0	0	cdefs.h
  11	2	0	0	wordsize.h
  12	2	0	0	long-double.h
  13	5	0	0	stubs.h
  14	5	0	0	stubs-64.h
  15	2	0	0	typesizes.h
  16	6	0	0	__FILE.h
  17	6	0	0	FILE.h
  18	2	0	0	_G_config.h
  19	6	0	0	__mbstate_t.h
  20	1	0	0	stdarg.h
  21	2	0	0	stdio_lim.h

 Line Number Statements:
  [0x00000218]  Extended opcode 2: set Address to 0x5fa
  [0x00000223]  Special opcode 8: advance Address by 0 to 0x5fa and Line by 3 to 4
  [0x00000224]  Special opcode 162: advance Address by 11 to 0x605 and Line by 3 to 7
  [0x00000225]  Special opcode 104: advance Address by 7 to 0x60c and Line by 1 to 8
  [0x00000226]  Special opcode 105: advance Address by 7 to 0x613 and Line by 2 to 10
  [0x00000227]  Special opcode 216: advance Address by 15 to 0x622 and Line by 1 to 11
  [0x00000228]  Advance PC by 2 to 0x624
  [0x0000022a]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5f494f5f 44454320 30323000 5f5f5349 _IO_DEC 020.__SI
  0x00000010 475f4154 4f4d4943 5f4d4158 5f5f2030 G_ATOMIC_MAX__ 0
  0x00000020 78376666 66666666 66005f5f 464c5436 x7fffffff.__FLT6
  0x00000030 345f4841 535f5155 4945545f 4e414e5f 4_HAS_QUIET_NAN_
  0x00000040 5f203100 5f53495a 455f545f 44454649 _ 1._SIZE_T_DEFI
  0x00000050 4e454420 005f5f44 45433634 5f535542 NED .__DEC64_SUB
  0x00000060 4e4f524d 414c5f4d 494e5f5f 20302e30 NORMAL_MIN__ 0.0
  0x00000070 30303030 30303030 30303030 3031452d 00000000000001E-
  0x00000080 33383344 44005f5f 464c5433 325f4841 383DD.__FLT32_HA
  0x00000090 535f494e 46494e49 54595f5f 2031005f S_INFINITY__ 1._
  0x000000a0 5f464c54 36345f4d 41585f45 58505f5f _FLT64_MAX_EXP__
  0x000000b0 20313032 34005f5f 464c545f 4d494e5f  1024.__FLT_MIN_
  0x000000c0 31305f45 58505f5f 20282d33 3729005f 10_EXP__ (-37)._
  0x000000d0 5f535953 43414c4c 5f554c4f 4e475f54 _SYSCALL_ULONG_T
  0x000000e0 59504520 5f5f554c 4f4e4757 4f52445f YPE __ULONGWORD_
  0x000000f0 54595045 005f5f46 4c543634 585f4550 TYPE.__FLT64X_EP
  0x00000100 53494c4f 4e5f5f20 312e3038 34323032 SILON__ 1.084202
  0x00000110 31373234 38353530 34343334 30303734 1724855044340074
  0x00000120 35323830 30383639 39343137 31652d31 5280086994171e-1
  0x00000130 39463634 78005f5f 464c5433 32585f4d 9F64x.__FLT32X_M
  0x00000140 41585f45 58505f5f 20313032 34005f73 AX_EXP__ 1024._s
  0x00000150 686f7274 62756600 5f5f4743 435f4154 hortbuf.__GCC_AT
  0x00000160 4f4d4943 5f544553 545f414e 445f5345 OMIC_TEST_AND_SE
  0x00000170 545f5452 55455641 4c203100 5f5f4f46 T_TRUEVAL 1.__OF
  0x00000180 465f545f 4d415443 4845535f 4f464636 F_T_MATCHES_OFF6
  0x00000190 345f5420 31005f5f 44454336 345f4550 4_T 1.__DEC64_EP
  0x000001a0 53494c4f 4e5f5f20 31452d31 35444400 SILON__ 1E-15DD.
  0x000001b0 5f5f4442 4c5f4445 4e4f524d 5f4d494e __DBL_DENORM_MIN
  0x000001c0 5f5f2028 28646f75 626c6529 342e3934 __ ((double)4.94
  0x000001d0 30363536 34353834 31323436 35343431 0656458412465441
  0x000001e0 37363536 38373932 38363832 32313337 7656879286822137
  0x000001f0 32652d33 32344c29 005f494f 5f6c6f63 2e-324L)._IO_loc
  0x00000200 6b5f7400 5f5f494e 54505452 5f4d4158 k_t.__INTPTR_MAX
  0x00000210 5f5f2030 78376666 66666666 66666666 __ 0x7ffffffffff
  0x00000220 66666666 664c005f 475f4841 56455f53 fffffL._G_HAVE_S
  0x00000230 545f424c 4b53495a 45206465 66696e65 T_BLKSIZE define
  0x00000240 6420285f 53544154 4255465f 53545f42 d (_STATBUF_ST_B
  0x00000250 4c4b5349 5a452900 5f5f666c 65786172 LKSIZE).__flexar
  0x00000260 72205b5d 005f5f46 4c543332 5f4d414e r [].__FLT32_MAN
  0x00000270 545f4449 475f5f20 3234005f 5f474343 T_DIG__ 24.__GCC
  0x00000280 5f484156 455f5359 4e435f43 4f4d5041 _HAVE_SYNC_COMPA
  0x00000290 52455f41 4e445f53 5741505f 38203100 RE_AND_SWAP_8 1.
  0x000002a0 6d756c74 5f696e74 2e630046 494c454e mult_int.c.FILEN
  0x000002b0 414d455f 4d415820 34303936 005f5354 AME_MAX 4096._ST
  0x000002c0 44435f50 52454445 465f4820 31005f5f DC_PREDEF_H 1.__
  0x000002d0 5553455f 49534f43 31312031 005f494f USE_ISOC11 1._IO
  0x000002e0 46424620 30005f49 4f5f6275 665f656e FBF 0._IO_buf_en
  0x000002f0 64005f5f 494e545f 46415354 36345f57 d.__INT_FAST64_W
  0x00000300 49445448 5f5f2036 34005f49 4f5f454f IDTH__ 64._IO_EO
  0x00000310 465f5345 454e2030 78313000 5345454b F_SEEN 0x10.SEEK
  0x00000320 5f435552 2031005f 5f464c54 3332585f _CUR 1.__FLT32X_
  0x00000330 44454349 4d414c5f 4449475f 5f203137 DECIMAL_DIG__ 17
  0x00000340 005f5f6b 385f5f20 31005f5f 44424c5f .__k8__ 1.__DBL_
  0x00000350 4d494e5f 4558505f 5f20282d 31303231 MIN_EXP__ (-1021
  0x00000360 29005f5f 494e545f 46415354 36345f4d ).__INT_FAST64_M
  0x00000370 41585f5f 20307837 66666666 66666666 AX__ 0x7ffffffff
  0x00000380 66666666 6666664c 005f5f68 61735f69 fffffffL.__has_i
  0x00000390 6e636c75 64655f6e 65787428 53545229 nclude_next(STR)
  0x000003a0 205f5f68 61735f69 6e636c75 64655f6e  __has_include_n
  0x000003b0 6578745f 5f285354 5229005f 494f5f52 ext__(STR)._IO_R
  0x000003c0 49474854 20303400 5f494f5f 55534552 IGHT 04._IO_USER
  0x000003d0 5f425546 2031005f 5359535f 43444546 _BUF 1._SYS_CDEF
  0x000003e0 535f4820 31005f5f 464c5433 32585f4d S_H 1.__FLT32X_M
  0x000003f0 41585f5f 20312e37 39373639 33313334 AX__ 1.797693134
  0x00000400 38363233 31353730 38313435 32373432 8623157081452742
  0x00000410 33373331 37303433 3537652b 33303846 3731704357e+308F
  0x00000420 33327800 5f5f676c 6962635f 756e6c69 32x.__glibc_unli
  0x00000430 6b656c79 28636f6e 6429205f 5f627569 kely(cond) __bui
  0x00000440 6c74696e 5f657870 65637420 2828636f ltin_expect ((co
  0x00000450 6e64292c 20302900 5f5f5349 5a454f46 nd), 0).__SIZEOF
  0x00000460 5f57494e 545f545f 5f203400 5f5f474e _WINT_T__ 4.__GN
  0x00000470 55435f50 52455245 51286d61 6a2c6d69 UC_PREREQ(maj,mi
  0x00000480 6e292028 285f5f47 4e55435f 5f203c3c n) ((__GNUC__ <<
  0x00000490 20313629 202b205f 5f474e55 435f4d49  16) + __GNUC_MI
  0x000004a0 4e4f525f 5f203e3d 2028286d 616a2920 NOR__ >= ((maj) 
  0x000004b0 3c3c2031 3629202b 20286d69 6e292900 << 16) + (min)).
  0x000004c0 5f5f5549 4e545054 525f4d41 585f5f20 __UINTPTR_MAX__ 
  0x000004d0 30786666 66666666 66666666 66666666 0xffffffffffffff
  0x000004e0 6666554c 005f5f76 615f6172 675f7061 ffUL.__va_arg_pa
  0x000004f0 636b5f6c 656e2829 205f5f62 75696c74 ck_len() __built
  0x00000500 696e5f76 615f6172 675f7061 636b5f6c in_va_arg_pack_l
  0x00000510 656e2028 29005f47 5f484156 455f4d4d en ()._G_HAVE_MM
  0x00000520 41502031 005f5f61 74747269 62757465 AP 1.__attribute
  0x00000530 5f636f6e 73745f5f 205f5f61 74747269 _const__ __attri
  0x00000540 62757465 5f5f2028 285f5f63 6f6e7374 bute__ ((__const
  0x00000550 5f5f2929 005f5f47 4c494243 5f555345 __)).__GLIBC_USE
  0x00000560 5f444550 52454341 5445445f 47455453 _DEPRECATED_GETS
  0x00000570 005f494f 5f4e4f5f 57524954 45532038 ._IO_NO_WRITES 8
  0x00000580 005f5f47 4e55435f 4d494e4f 525f5f20 .__GNUC_MINOR__ 
  0x00000590 33005f5f 5553455f 4c415247 4546494c 3.__USE_LARGEFIL
  0x000005a0 45363400 5f5f524c 494d5f54 5f545950 E64.__RLIM_T_TYP
  0x000005b0 45205f5f 53595343 414c4c5f 554c4f4e E __SYSCALL_ULON
  0x000005c0 475f5459 5045005f 5f4c4442 4c5f5245 G_TYPE.__LDBL_RE
  0x000005d0 44495228 6e616d65 2c70726f 746f2920 DIR(name,proto) 
  0x000005e0 6e616d65 2070726f 746f005f 494f5f77 name proto._IO_w
  0x000005f0 72697465 5f656e64 005f5f47 4c494243 rite_end.__GLIBC
  0x00000600 5f505245 52455128 6d616a2c 6d696e29 _PREREQ(maj,min)
  0x00000610 2028285f 5f474c49 42435f5f 203c3c20  ((__GLIBC__ << 
  0x00000620 31362920 2b205f5f 474c4942 435f4d49 16) + __GLIBC_MI
  0x00000630 4e4f525f 5f203e3d 2028286d 616a2920 NOR__ >= ((maj) 
  0x00000640 3c3c2031 3629202b 20286d69 6e292900 << 16) + (min)).
  0x00000650 5f5f6e65 65645f4e 554c4c20 005f5f46 __need_NULL .__F
  0x00000660 4c543634 5f4d494e 5f5f2032 2e323235 LT64_MIN__ 2.225
  0x00000670 30373338 35383530 37323031 33383330 0738585072013830
  0x00000680 39303233 32373137 33333234 30343036 9023271733240406
  0x00000690 652d3330 38463634 005f5f4c 4f4e475f e-308F64.__LONG_
  0x000006a0 4c4f4e47 5f574944 54485f5f 20363400 LONG_WIDTH__ 64.
  0x000006b0 5f504f53 49585f53 4f555243 45005f5f _POSIX_SOURCE.__
  0x000006c0 464c545f 44454e4f 524d5f4d 494e5f5f FLT_DENORM_MIN__
  0x000006d0 20312e34 30313239 38343634 33323438  1.4012984643248
  0x000006e0 31373037 30393233 37323935 38333238 1707092372958328
  0x000006f0 39393136 3133652d 34354600 5f5f4348 991613e-45F.__CH
  0x00000700 41523136 5f545950 455f5f20 73686f72 AR16_TYPE__ shor
  0x00000710 7420756e 7369676e 65642069 6e74005f t unsigned int._
  0x00000720 5f53495a 454f465f 53495a45 5f545f5f _SIZEOF_SIZE_T__
  0x00000730 20380061 72676300 5f5f4f52 4445525f  8.argc.__ORDER_
  0x00000740 4249475f 454e4449 414e5f5f 20343332 BIG_ENDIAN__ 432
  0x00000750 31005f5f 474e5543 5f5f2037 005f494f 1.__GNUC__ 7._IO
  0x00000760 5f4c494e 455f4255 46203078 32303000 _LINE_BUF 0x200.
  0x00000770 5f5f5553 455f4953 4f435858 3131005f __USE_ISOCXX11._
  0x00000780 5f555345 5f415446 494c4520 31005f5f _USE_ATFILE 1.__
  0x00000790 6e6f6e6e 756c6c28 70617261 6d732920 nonnull(params) 
  0x000007a0 5f5f6174 74726962 7574655f 5f202828 __attribute__ ((
  0x000007b0 5f5f6e6f 6e6e756c 6c5f5f20 70617261 __nonnull__ para
  0x000007c0 6d732929 005f5f55 494e5436 345f4328 ms)).__UINT64_C(
  0x000007d0 63292063 20232320 554c005f 5f474e55 c) c ## UL.__GNU
  0x000007e0 5f4c4942 52415259 5f5f005f 5f44424c _LIBRARY__.__DBL
  0x000007f0 5f4d414e 545f4449 475f5f20 3533005f _MANT_DIG__ 53._
  0x00000800 5f555345 5f504f53 49583139 39353036 _USE_POSIX199506
  0x00000810 2031005f 5f737475 625f6368 666c6167  1.__stub_chflag
  0x00000820 7320005f 5f494e54 5f4d4158 5f5f2030 s .__INT_MAX__ 0
  0x00000830 78376666 66666666 66005f66 6c616773 x7fffffff._flags
  0x00000840 32005f5f 4e54484e 4c286663 7429205f 2.__NTHNL(fct) _
  0x00000850 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00000860 5f6e6f74 68726f77 5f5f2929 20666374 _nothrow__)) fct
  0x00000870 005f5f73 7475625f 66636866 6c616773 .__stub_fchflags
  0x00000880 20005f5f 494e5431 365f5459 50455f5f  .__INT16_TYPE__
  0x00000890 2073686f 72742069 6e74005f 5f444543  short int.__DEC
  0x000008a0 494d414c 5f424944 5f464f52 4d41545f IMAL_BID_FORMAT_
  0x000008b0 5f203100 5f5f4445 4333325f 45505349 _ 1.__DEC32_EPSI
  0x000008c0 4c4f4e5f 5f203145 2d364446 005f5349 LON__ 1E-6DF._SI
  0x000008d0 5a455f54 5f444543 4c415245 4420005f ZE_T_DECLARED ._
  0x000008e0 5f46445f 53455453 495a4520 31303234 _FD_SETSIZE 1024
  0x000008f0 005f5f4c 44424c5f 4449475f 5f203138 .__LDBL_DIG__ 18
  0x00000900 005f6d61 726b6572 73005f5f 41544f4d ._markers.__ATOM
  0x00000910 49435f53 45515f43 53542035 005f5f55 IC_SEQ_CST 5.__U
  0x00000920 53455f50 4f534958 32203100 5f5f5553 SE_POSIX2 1.__US
  0x00000930 455f4953 4f433935 2031005f 5f53495a E_ISOC95 1.__SIZ
  0x00000940 454f465f 53484f52 545f5f20 32005f47 EOF_SHORT__ 2._G
  0x00000950 5f76615f 6c697374 205f5f67 6e75635f _va_list __gnuc_
  0x00000960 76615f6c 69737400 5f5f5549 4e543634 va_list.__UINT64
  0x00000970 5f545950 455f5f20 6c6f6e67 20756e73 _TYPE__ long uns
  0x00000980 69676e65 6420696e 74005f5f 494e545f igned int.__INT_
  0x00000990 46415354 33325f4d 41585f5f 20307837 FAST32_MAX__ 0x7
  0x000009a0 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x000009b0 005f5f49 4e545f4c 45415354 385f5459 .__INT_LEAST8_TY
  0x000009c0 50455f5f 20736967 6e656420 63686172 PE__ signed char
  0x000009d0 005f5f73 697a655f 7420005f 5f55494e .__size_t .__UIN
  0x000009e0 545f4c45 41535433 325f5459 50455f5f T_LEAST32_TYPE__
  0x000009f0 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x00000a00 73747562 5f736967 72657475 726e2000 stub_sigreturn .
  0x00000a10 5f5f7074 725f7420 766f6964 202a005f __ptr_t void *._
  0x00000a20 5f533332 5f545950 4520696e 74005f5f _S32_TYPE int.__
  0x00000a30 53544443 5f4e4f5f 54485245 4144535f STDC_NO_THREADS_
  0x00000a40 5f203100 5f5f4259 54455f4f 52444552 _ 1.__BYTE_ORDER
  0x00000a50 5f5f205f 5f4f5244 45525f4c 4954544c __ __ORDER_LITTL
  0x00000a60 455f454e 4449414e 5f5f005f 5f4c4442 E_ENDIAN__.__LDB
  0x00000a70 4c5f4d49 4e5f5f20 332e3336 32313033 L_MIN__ 3.362103
  0x00000a80 31343331 31323039 33353036 32363236 1431120935062626
  0x00000a90 37373831 37333231 37353236 30652d34 7781732175260e-4
  0x00000aa0 3933324c 005f5f46 4c543332 5f4d494e 932L.__FLT32_MIN
  0x00000ab0 5f31305f 4558505f 5f20282d 33372900 _10_EXP__ (-37).
  0x00000ac0 5f5f4442 4c5f4841 535f4445 4e4f524d __DBL_HAS_DENORM
  0x00000ad0 5f5f2031 005f5f49 4e545f4c 45415354 __ 1.__INT_LEAST
  0x00000ae0 36345f54 5950455f 5f206c6f 6e672069 64_TYPE__ long i
  0x00000af0 6e74005f 5f574348 41525f4d 494e5f5f nt.__WCHAR_MIN__
  0x00000b00 20282d5f 5f574348 41525f4d 41585f5f  (-__WCHAR_MAX__
  0x00000b10 202d2031 29005f49 4f5f5348 4f57504f  - 1)._IO_SHOWPO
  0x00000b20 494e5420 30343030 005f5f6f 66665f74 INT 0400.__off_t
  0x00000b30 5f646566 696e6564 20005f5f 53544443 _defined .__STDC
  0x00000b40 5f555446 5f33325f 5f203100 5f5f424c _UTF_32__ 1.__BL
  0x00000b50 4b53495a 455f545f 54595045 205f5f53 KSIZE_T_TYPE __S
  0x00000b60 59534341 4c4c5f53 4c4f4e47 5f545950 YSCALL_SLONG_TYP
  0x00000b70 45005f5f 494e545f 4c454153 5431365f E.__INT_LEAST16_
  0x00000b80 4d41585f 5f203078 37666666 005f5f4c MAX__ 0x7fff.__L
  0x00000b90 44424c5f 52454449 525f4445 434c286e DBL_REDIR_DECL(n
  0x00000ba0 616d6529 2000474e 55204331 3120372e ame) .GNU C11 7.
  0x00000bb0 332e3020 2d6d7475 6e653d67 656e6572 3.0 -mtune=gener
  0x00000bc0 6963202d 6d617263 683d7838 362d3634 ic -march=x86-64
  0x00000bd0 202d6767 64623320 2d667374 61636b2d  -ggdb3 -fstack-
  0x00000be0 70726f74 6563746f 722d7374 726f6e67 protector-strong
  0x00000bf0 005f5f53 43484152 5f4d4158 5f5f2030 .__SCHAR_MAX__ 0
  0x00000c00 78376600 5f5f6578 7465726e 5f616c77 x7f.__extern_alw
  0x00000c10 6179735f 696e6c69 6e652065 78746572 ays_inline exter
  0x00000c20 6e205f5f 616c7761 79735f69 6e6c696e n __always_inlin
  0x00000c30 65205f5f 61747472 69627574 655f5f20 e __attribute__ 
  0x00000c40 28285f5f 676e755f 696e6c69 6e655f5f ((__gnu_inline__
  0x00000c50 2929005f 5f464c54 36345f44 49475f5f )).__FLT64_DIG__
  0x00000c60 20313500 5f5f494e 545f4641 5354385f  15.__INT_FAST8_
  0x00000c70 54595045 5f5f2073 69676e65 64206368 TYPE__ signed ch
  0x00000c80 6172005f 5f41544f 4d49435f 52454c41 ar.__ATOMIC_RELA
  0x00000c90 58454420 30005f49 4f5f6f66 6636345f XED 0._IO_off64_
  0x00000ca0 74205f5f 6f666636 345f7400 5f5f474c t __off64_t.__GL
  0x00000cb0 4942435f 5553455f 4945435f 36303535 IBC_USE_IEC_6055
  0x00000cc0 395f5459 5045535f 45585400 5f5f464c 9_TYPES_EXT.__FL
  0x00000cd0 54333258 5f484153 5f494e46 494e4954 T32X_HAS_INFINIT
  0x00000ce0 595f5f20 31005f5f 5553455f 554e4958 Y__ 1.__USE_UNIX
  0x00000cf0 3938005f 5f555345 5f464f52 54494659 98.__USE_FORTIFY
  0x00000d00 5f4c4556 454c2030 005f4154 46494c45 _LEVEL 0._ATFILE
  0x00000d10 5f534f55 52434500 5f5f5553 455f4154 _SOURCE.__USE_AT
  0x00000d20 46494c45 005f5f55 494e545f 4c454153 FILE.__UINT_LEAS
  0x00000d30 54385f54 5950455f 5f20756e 7369676e T8_TYPE__ unsign
  0x00000d40 65642063 68617200 5f5f5349 5a454f46 ed char.__SIZEOF
  0x00000d50 5f494e54 3132385f 5f203136 005f5f4e _INT128__ 16.__N
  0x00000d60 54482866 63742920 5f5f6174 74726962 TH(fct) __attrib
  0x00000d70 7574655f 5f202828 5f5f6e6f 7468726f ute__ ((__nothro
  0x00000d80 775f5f20 5f5f4c45 41462929 20666374 w__ __LEAF)) fct
  0x00000d90 005f494f 535f4154 454e4420 34005f5f ._IOS_ATEND 4.__
  0x00000da0 676c6962 635f6d61 63726f5f 7761726e glibc_macro_warn
  0x00000db0 696e6728 6d657373 61676529 205f5f67 ing(message) __g
  0x00000dc0 6c696263 5f6d6163 726f5f77 61726e69 libc_macro_warni
  0x00000dd0 6e673120 28474343 20776172 6e696e67 ng1 (GCC warning
  0x00000de0 206d6573 73616765 29005f5f 464c5431  message).__FLT1
  0x00000df0 32385f48 41535f51 55494554 5f4e414e 28_HAS_QUIET_NAN
  0x00000e00 5f5f2031 005f545f 53495a45 20005f5f __ 1._T_SIZE .__
  0x00000e10 464c5431 32385f4d 41585f5f 20312e31 FLT128_MAX__ 1.1
  0x00000e20 38393733 31343935 33353732 33313736 8973149535723176
  0x00000e30 35303835 37353933 32363632 38303037 5085759326628007
  0x00000e40 3032652b 34393332 46313238 00425546 02e+4932F128.BUF
  0x00000e50 53495a20 5f494f5f 42554653 495a005f SIZ _IO_BUFSIZ._
  0x00000e60 41544649 4c455f53 4f555243 45203100 ATFILE_SOURCE 1.
  0x00000e70 5f5f464c 54363458 5f444947 5f5f2031 __FLT64X_DIG__ 1
  0x00000e80 38005f5f 494e545f 4c454153 5431365f 8.__INT_LEAST16_
  0x00000e90 57494454 485f5f20 3136005f 5f465349 WIDTH__ 16.__FSI
  0x00000ea0 445f545f 54595045 20737472 75637420 D_T_TYPE struct 
  0x00000eb0 7b20696e 74205f5f 76616c5b 325d3b20 { int __val[2]; 
  0x00000ec0 7d005f5f 7373697a 655f745f 64656669 }.__ssize_t_defi
  0x00000ed0 6e656420 005f545f 53495a45 5f20005f ned ._T_SIZE_ ._
  0x00000ee0 706f7300 5f494f5f 66657272 6f725f75 pos._IO_ferror_u
  0x00000ef0 6e6c6f63 6b656428 5f5f6670 29202828 nlocked(__fp) ((
  0x00000f00 285f5f66 70292d3e 5f666c61 67732026 (__fp)->_flags &
  0x00000f10 205f494f 5f455252 5f534545 4e292021  _IO_ERR_SEEN) !
  0x00000f20 3d203029 005f5f65 78746572 6e5f696e = 0).__extern_in
  0x00000f30 6c696e65 20657874 65726e20 5f5f696e line extern __in
  0x00000f40 6c696e65 205f5f61 74747269 62757465 line __attribute
  0x00000f50 5f5f2028 285f5f67 6e755f69 6e6c696e __ ((__gnu_inlin
  0x00000f60 655f5f29 29005f47 43435f53 495a455f e__))._GCC_SIZE_
  0x00000f70 5420005f 5f737475 625f7365 746c6f67 T .__stub_setlog
  0x00000f80 696e2000 5f5f464c 5433325f 4841535f in .__FLT32_HAS_
  0x00000f90 44454e4f 524d5f5f 2031005f 5f756e69 DENORM__ 1.__uni
  0x00000fa0 785f5f20 31005f5f 4743435f 48415645 x__ 1.__GCC_HAVE
  0x00000fb0 5f53594e 435f434f 4d504152 455f414e _SYNC_COMPARE_AN
  0x00000fc0 445f5357 41505f31 2031005f 494f5f73 D_SWAP_1 1._IO_s
  0x00000fd0 6176655f 656e6400 5f5f464c 54363458 ave_end.__FLT64X
  0x00000fe0 5f4d494e 5f455850 5f5f2028 2d313633 _MIN_EXP__ (-163
  0x00000ff0 38312900 5f425344 5f53495a 455f545f 81)._BSD_SIZE_T_
  0x00001000 20005f5f 5049455f 5f203200 5f5f464c  .__PIE__ 2.__FL
  0x00001010 545f4449 475f5f20 36005f5f 494e545f T_DIG__ 6.__INT_
  0x00001020 46415354 31365f57 49445448 5f5f2036 FAST16_WIDTH__ 6
  0x00001030 34005f5f 4743435f 41544f4d 49435f42 4.__GCC_ATOMIC_B
  0x00001040 4f4f4c5f 4c4f434b 5f465245 45203200 OOL_LOCK_FREE 2.
  0x00001050 5f494f5f 6f66665f 74205f5f 6f66665f _IO_off_t __off_
  0x00001060 74005f5f 7069655f 5f203200 5f535444 t.__pie__ 2._STD
  0x00001070 494f5f48 2031005f 5f444543 33325f4d IO_H 1.__DEC32_M
  0x00001080 494e5f5f 2031452d 39354446 005f5f49 IN__ 1E-95DF.__I
  0x00001090 4e544d41 585f4d41 585f5f20 30783766 NTMAX_MAX__ 0x7f
  0x000010a0 66666666 66666666 66666666 66664c00 ffffffffffffffL.
  0x000010b0 5f424954 535f4c49 42494f5f 48203100 _BITS_LIBIO_H 1.
  0x000010c0 5f5f4743 435f4945 435f3535 39203200 __GCC_IEC_559 2.
  0x000010d0 5f5f464c 54313238 5f4d494e 5f455850 __FLT128_MIN_EXP
  0x000010e0 5f5f2028 2d313633 38312900 5f5f464c __ (-16381).__FL
  0x000010f0 5433325f 4841535f 51554945 545f4e41 T32_HAS_QUIET_NA
  0x00001100 4e5f5f20 31005f42 53445f53 495a455f N__ 1._BSD_SIZE_
  0x00001110 545f4445 46494e45 445f2000 5f5f5549 T_DEFINED_ .__UI
  0x00001120 4e545f4c 45415354 31365f4d 41585f5f NT_LEAST16_MAX__
  0x00001130 20307866 66666600 5f5f5549 4e545f46  0xffff.__UINT_F
  0x00001140 41535436 345f4d41 585f5f20 30786666 AST64_MAX__ 0xff
  0x00001150 66666666 66666666 66666666 6666554c ffffffffffffffUL
  0x00001160 005f494f 5f455252 5f534545 4e203078 ._IO_ERR_SEEN 0x
  0x00001170 3230005f 5f617474 72696275 74655f75 20.__attribute_u
  0x00001180 7365645f 5f205f5f 61747472 69627574 sed__ __attribut
  0x00001190 655f5f20 28285f5f 75736564 5f5f2929 e__ ((__used__))
  0x000011a0 005f5f61 74747269 62757465 5f617274 .__attribute_art
  0x000011b0 69666963 69616c5f 5f205f5f 61747472 ificial__ __attr
  0x000011c0 69627574 655f5f20 28285f5f 61727469 ibute__ ((__arti
  0x000011d0 66696369 616c5f5f 2929005f 494f5f66 ficial__))._IO_f
  0x000011e0 7472796c 6f636b66 696c6528 5f667029 trylockfile(_fp)
  0x000011f0 20005f5f 55494e54 5f4c4541 5354385f  .__UINT_LEAST8_
  0x00001200 4d41585f 5f203078 6666005f 5f474c49 MAX__ 0xff.__GLI
  0x00001210 42435f55 53455f4c 49425f45 58543220 BC_USE_LIB_EXT2 
  0x00001220 30005f5f 44454331 32385f4d 494e5f45 0.__DEC128_MIN_E
  0x00001230 58505f5f 20282d36 31343229 005f5f4b XP__ (-6142).__K
  0x00001240 45524e45 4c5f5354 52494354 5f4e414d ERNEL_STRICT_NAM
  0x00001250 45532000 5f5f5743 4841525f 54595045 ES .__WCHAR_TYPE
  0x00001260 5f5f2069 6e74005f 5f494e54 385f4d41 __ int.__INT8_MA
  0x00001270 585f5f20 30783766 00676574 63285f66 X__ 0x7f.getc(_f
  0x00001280 7029205f 494f5f67 65746320 285f6670 p) _IO_getc (_fp
  0x00001290 29005f5f 44454331 32385f45 5053494c ).__DEC128_EPSIL
  0x000012a0 4f4e5f5f 2031452d 3333444c 005f5f55 ON__ 1E-33DL.__U
  0x000012b0 53455f50 4f534958 31393935 3036005f SE_POSIX199506._
  0x000012c0 5f6e6565 645f4e55 4c4c005f 5f524544 _need_NULL.__RED
  0x000012d0 49524543 545f4e54 485f4c44 424c286e IRECT_NTH_LDBL(n
  0x000012e0 616d652c 70726f74 6f2c616c 69617329 ame,proto,alias)
  0x000012f0 205f5f52 45444952 4543545f 4e544820  __REDIRECT_NTH 
  0x00001300 286e616d 652c2070 726f746f 2c20616c (name, proto, al
  0x00001310 69617329 005f5f52 45444952 4543545f ias).__REDIRECT_
  0x00001320 4e54484e 4c286e61 6d652c70 726f746f NTHNL(name,proto
  0x00001330 2c616c69 61732920 6e616d65 2070726f ,alias) name pro
  0x00001340 746f205f 5f61736d 5f5f2028 5f5f4153 to __asm__ (__AS
  0x00001350 4d4e414d 45202823 616c6961 73292920 MNAME (#alias)) 
  0x00001360 5f5f5448 524f574e 4c005f5f 464c5431 __THROWNL.__FLT1
  0x00001370 32385f4d 41585f45 58505f5f 20313633 28_MAX_EXP__ 163
  0x00001380 3834005f 5f464c54 5f524144 49585f5f 84.__FLT_RADIX__
  0x00001390 2032005f 5f464c54 3332585f 44454e4f  2.__FLT32X_DENO
  0x000013a0 524d5f4d 494e5f5f 20342e39 34303635 RM_MIN__ 4.94065
  0x000013b0 36343538 34313234 36353434 31373635 6458412465441765
  0x000013c0 36383739 32383638 32323133 3732652d 68792868221372e-
  0x000013d0 33323446 33327800 5f5f676c 6962635f 324F32x.__glibc_
  0x000013e0 636c616e 675f6861 735f6578 74656e73 clang_has_extens
  0x000013f0 696f6e28 65787429 2030005f 5f504d54 ion(ext) 0.__PMT
  0x00001400 28617267 73292061 72677300 5f5f4749 (args) args.__GI
  0x00001410 445f545f 54595045 205f5f55 33325f54 D_T_TYPE __U32_T
  0x00001420 59504500 5f5f5349 5a454f46 5f4c4f4e YPE.__SIZEOF_LON
  0x00001430 475f444f 55424c45 5f5f2031 36005f5f G_DOUBLE__ 16.__
  0x00001440 44424c5f 4841535f 51554945 545f4e41 DBL_HAS_QUIET_NA
  0x00001450 4e5f5f20 31005f5f 77757220 005f4249 N__ 1.__wur ._BI
  0x00001460 54535f54 59504553 5f482031 005f5f4c TS_TYPES_H 1.__L
  0x00001470 44424c5f 44454e4f 524d5f4d 494e5f5f DBL_DENORM_MIN__
  0x00001480 20332e36 34353139 39353331 38383234  3.6451995318824
  0x00001490 37343630 32353238 34303539 33333631 7460252840593361
  0x000014a0 39343139 3832652d 34393531 4c005f5f 941982e-4951L.__
  0x000014b0 5049445f 545f5459 5045205f 5f533332 PID_T_TYPE __S32
  0x000014c0 5f545950 45005f5f 73747562 5f666174 _TYPE.__stub_fat
  0x000014d0 74616368 20007379 735f6572 726c6973 tach .sys_errlis
  0x000014e0 74005f5f 464c5436 345f4841 535f494e t.__FLT64_HAS_IN
  0x000014f0 46494e49 54595f5f 2031005f 5f55494e FINITY__ 1.__UIN
  0x00001500 545f4641 5354385f 4d41585f 5f203078 T_FAST8_MAX__ 0x
  0x00001510 6666005f 5f41544f 4d49435f 484c455f ff.__ATOMIC_HLE_
  0x00001520 52454c45 41534520 31333130 3732005f RELEASE 131072._
  0x00001530 5f4c4442 4c5f4d41 585f4558 505f5f20 _LDBL_MAX_EXP__ 
  0x00001540 31363338 34005f5f 73747562 5f677474 16384.__stub_gtt
  0x00001550 7920005f 42495453 5f545950 4553495a y ._BITS_TYPESIZ
  0x00001560 45535f48 2031005f 5f555345 434f4e44 ES_H 1.__USECOND
  0x00001570 535f545f 54595045 205f5f55 33325f54 S_T_TYPE __U32_T
  0x00001580 59504500 5f494f5f 7065656b 63285f66 YPE._IO_peekc(_f
  0x00001590 7029205f 494f5f70 65656b63 5f756e6c p) _IO_peekc_unl
  0x000015a0 6f636b65 6420285f 66702900 5f5f494e ocked (_fp).__IN
  0x000015b0 54505452 5f545950 455f5f20 6c6f6e67 TPTR_TYPE__ long
  0x000015c0 20696e74 005f5f44 45433634 5f4d4158  int.__DEC64_MAX
  0x000015d0 5f5f2039 2e393939 39393939 39393939 __ 9.99999999999
  0x000015e0 39393939 45333834 44440073 79735f6e 9999E384DD.sys_n
  0x000015f0 65727200 5f5f4743 435f4154 4f4d4943 err.__GCC_ATOMIC
  0x00001600 5f494e54 5f4c4f43 4b5f4652 45452032 _INT_LOCK_FREE 2
  0x00001610 005f5359 535f5349 5a455f54 5f482000 ._SYS_SIZE_T_H .
  0x00001620 5f5f4d4d 585f5f20 31005f5f 424c4b43 __MMX__ 1.__BLKC
  0x00001630 4e545f54 5f545950 45205f5f 53595343 NT_T_TYPE __SYSC
  0x00001640 414c4c5f 534c4f4e 475f5459 5045005f ALL_SLONG_TYPE._
  0x00001650 494f5f53 484f5742 41534520 30323030 IO_SHOWBASE 0200
  0x00001660 005f5f73 7475625f 73747479 20005f66 .__stub_stty ._f
  0x00001670 696c656e 6f005f5f 48415645 5f47454e ileno.__HAVE_GEN
  0x00001680 45524943 5f53454c 45435449 4f4e2031 ERIC_SELECTION 1
  0x00001690 005f5f52 4c494d36 345f545f 54595045 .__RLIM64_T_TYPE
  0x000016a0 205f5f55 51554144 5f545950 45005f5f  __UQUAD_TYPE.__
  0x000016b0 464c5431 32385f4d 414e545f 4449475f FLT128_MANT_DIG_
  0x000016c0 5f203131 33005f5f 4f524445 525f4c49 _ 113.__ORDER_LI
  0x000016d0 54544c45 5f454e44 49414e5f 5f203132 TTLE_ENDIAN__ 12
  0x000016e0 3334005f 5f555345 5f584f50 454e324b 34.__USE_XOPEN2K
  0x000016f0 2031005f 5f53495a 454f465f 50545244  1.__SIZEOF_PTRD
  0x00001700 4946465f 545f5f20 38005f49 4f535f54 IFF_T__ 8._IOS_T
  0x00001710 52554e43 20313600 5f5f4445 43313238 RUNC 16.__DEC128
  0x00001720 5f4d414e 545f4449 475f5f20 3334005f _MANT_DIG__ 34._
  0x00001730 5f555345 5f49534f 43393920 31005f5f _USE_ISOC99 1.__
  0x00001740 494e5433 325f5459 50455f5f 20696e74 INT32_TYPE__ int
  0x00001750 005f5f4b 45524e45 4c5f5354 52494354 .__KERNEL_STRICT
  0x00001760 5f4e414d 4553005f 5f553332 5f545950 _NAMES.__U32_TYP
  0x00001770 4520756e 7369676e 65642069 6e74005f E unsigned int._
  0x00001780 5f636f64 655f6d6f 64656c5f 736d616c _code_model_smal
  0x00001790 6c5f5f20 31005f5f 5553455f 49534f43 l__ 1.__USE_ISOC
  0x000017a0 3935005f 5f464c54 3634585f 4841535f 95.__FLT64X_HAS_
  0x000017b0 44454e4f 524d5f5f 2031005f 5f444543 DENORM__ 1.__DEC
  0x000017c0 33325f4d 41585f45 58505f5f 20393700 32_MAX_EXP__ 97.
  0x000017d0 5f494f4e 42462032 005f5f55 53455f49 _IONBF 2.__USE_I
  0x000017e0 534f4339 39007374 64657272 20737464 SOC99.stderr std
  0x000017f0 65727200 5f767461 626c655f 6f666673 err._vtable_offs
  0x00001800 6574005f 475f494f 5f494f5f 46494c45 et._G_IO_IO_FILE
  0x00001810 5f564552 53494f4e 20307832 30303031 _VERSION 0x20001
  0x00001820 005f494f 5f544945 445f5055 545f4745 ._IO_TIED_PUT_GE
  0x00001830 54203078 34303000 4c5f746d 706e616d T 0x400.L_tmpnam
  0x00001840 20323000 5f494f5f 636c6561 6e75705f  20._IO_cleanup_
  0x00001850 72656769 6f6e5f73 74617274 285f6663 region_start(_fc
  0x00001860 742c5f66 70292000 5f5f5354 44435f49 t,_fp) .__STDC_I
  0x00001870 45435f35 35395f43 4f4d504c 45585f5f EC_559_COMPLEX__
  0x00001880 2031005f 5f474c49 42435f55 53455f44  1.__GLIBC_USE_D
  0x00001890 45505245 43415445 445f4745 54532030 EPRECATED_GETS 0
  0x000018a0 005f494f 5f484558 20303130 30005f5f ._IO_HEX 0100.__
  0x000018b0 464c5436 34585f4d 494e5f31 305f4558 FLT64X_MIN_10_EX
  0x000018c0 505f5f20 282d3439 33312900 5f5f7374 P__ (-4931).__st
  0x000018d0 75625f70 75746d73 6720005f 494f5f72 ub_putmsg ._IO_r
  0x000018e0 6561645f 62617365 005f5f53 5444435f ead_base.__STDC_
  0x000018f0 49534f5f 31303634 365f5f20 32303137 ISO_10646__ 2017
  0x00001900 30364c00 5f5f4245 47494e5f 4445434c 06L.__BEGIN_DECL
  0x00001910 5320005f 494f5f73 7464696e 2028285f S ._IO_stdin ((_
  0x00001920 494f5f46 494c452a 2928265f 494f5f32 IO_FILE*)(&_IO_2
  0x00001930 5f315f73 7464696e 5f292900 5f5f464c _1_stdin_)).__FL
  0x00001940 54313238 5f4d4158 5f31305f 4558505f T128_MAX_10_EXP_
  0x00001950 5f203439 3332005f 5f464c54 3132385f _ 4932.__FLT128_
  0x00001960 4d494e5f 5f20332e 33363231 30333134 MIN__ 3.36210314
  0x00001970 33313132 30393335 30363236 32363737 3112093506262677
  0x00001980 38313733 32313735 32363065 2d343933 81732175260e-493
  0x00001990 32463132 38005f5f 53555345 434f4e44 2F128.__SUSECOND
  0x000019a0 535f545f 54595045 205f5f53 59534341 S_T_TYPE __SYSCA
  0x000019b0 4c4c5f53 4c4f4e47 5f545950 45005345 LL_SLONG_TYPE.SE
  0x000019c0 454b5f45 4e442032 005f5f49 4e545f46 EK_END 2.__INT_F
  0x000019d0 41535438 5f574944 54485f5f 2038005f AST8_WIDTH__ 8._
  0x000019e0 5f464c54 36345f4d 494e5f31 305f4558 _FLT64_MIN_10_EX
  0x000019f0 505f5f20 282d3330 3729005f 5f737475 P__ (-307).__stu
  0x00001a00 625f6664 65746163 6820005f 6e657874 b_fdetach ._next
  0x00001a10 005f5f44 424c5f4d 41585f5f 20282864 .__DBL_MAX__ ((d
  0x00001a20 6f75626c 6529312e 37393736 39333133 ouble)1.79769313
  0x00001a30 34383632 33313537 30383134 35323734 4862315708145274
  0x00001a40 32333733 31373034 33353765 2b333038 23731704357e+308
  0x00001a50 4c29005f 44454641 554c545f 534f5552 L)._DEFAULT_SOUR
  0x00001a60 43452031 005f5f52 4c494d5f 545f4d41 CE 1.__RLIM_T_MA
  0x00001a70 54434845 535f524c 494d3634 5f542031 TCHES_RLIM64_T 1
  0x00001a80 005f5f61 6d643634 5f5f2031 005f5f5f .__amd64__ 1.___
  0x00001a90 5f6d6273 74617465 5f745f64 6566696e _mbstate_t_defin
  0x00001aa0 65642031 005f494f 5f44454c 4554455f ed 1._IO_DELETE_
  0x00001ab0 444f4e54 5f434c4f 53452030 78343000 DONT_CLOSE 0x40.
  0x00001ac0 5f5f464c 5433325f 44454349 4d414c5f __FLT32_DECIMAL_
  0x00001ad0 4449475f 5f203900 5f5f464c 54313238 DIG__ 9.__FLT128
  0x00001ae0 5f444947 5f5f2033 33005f5f 55494e54 _DIG__ 33.__UINT
  0x00001af0 31365f54 5950455f 5f207368 6f727420 16_TYPE__ short 
  0x00001b00 756e7369 676e6564 20696e74 005f5f48 unsigned int.__H
  0x00001b10 4156455f 434f4c55 4d4e2000 5f4f4c44 AVE_COLUMN ._OLD
  0x00001b20 5f535444 494f5f4d 41474943 20307846 _STDIO_MAGIC 0xF
  0x00001b30 41424330 30303000 5f494f53 5f4e4f43 ABC0000._IOS_NOC
  0x00001b40 52454154 45203332 005f5f57 43484152 REATE 32.__WCHAR
  0x00001b50 5f574944 54485f5f 20333200 5f5f4743 _WIDTH__ 32.__GC
  0x00001b60 435f4154 4f4d4943 5f434841 525f4c4f C_ATOMIC_CHAR_LO
  0x00001b70 434b5f46 52454520 32005f49 4f5f6d61 CK_FREE 2._IO_ma
  0x00001b80 726b6572 005f5f42 49474745 53545f41 rker.__BIGGEST_A
  0x00001b90 4c49474e 4d454e54 5f5f2031 36005f5f LIGNMENT__ 16.__
  0x00001ba0 4c4f4e47 5f4c4f4e 475f4d41 585f5f20 LONG_LONG_MAX__ 
  0x00001bb0 30783766 66666666 66666666 66666666 0x7fffffffffffff
  0x00001bc0 66664c4c 005f5f55 4c4f4e47 33325f54 ffLL.__ULONG32_T
  0x00001bd0 59504520 756e7369 676e6564 20696e74 YPE unsigned int
  0x00001be0 005f5f55 494e545f 4c454153 5431365f .__UINT_LEAST16_
  0x00001bf0 54595045 5f5f2073 686f7274 20756e73 TYPE__ short uns
  0x00001c00 69676e65 6420696e 74005f5f 464c545f igned int.__FLT_
  0x00001c10 4d41585f 31305f45 58505f5f 20333800 MAX_10_EXP__ 38.
  0x00001c20 2f686f6d 652f7562 756e7475 2f456e67 /home/ubuntu/Eng
  0x00001c30 696e6565 72696e67 2f50726f 6772616d ineering/Program
  0x00001c40 6d696e67 2f446973 61737365 6d626c69 ming/Disassembli
  0x00001c50 6e672d42 696e6172 6965732f 432f496e ng-Binaries/C/In
  0x00001c60 74656c5f 61726368 69746563 74757265 tel_architecture
  0x00001c70 2f414d44 36342f49 6e746567 65725f4f /AMD64/Integer_O
  0x00001c80 70657261 74696f6e 732f4d75 6c745f49 perations/Mult_I
  0x00001c90 6e742f57 6974685f 44656275 675f496e nt/With_Debug_In
  0x00001ca0 666f005f 494f5f53 4b495057 53203031 fo._IO_SKIPWS 01
  0x00001cb0 005f5f46 4c543332 585f4550 53494c4f .__FLT32X_EPSILO
  0x00001cc0 4e5f5f20 322e3232 30343436 30343932 N__ 2.2204460492
  0x00001cd0 35303331 33303830 38343732 36333333 5031308084726333
  0x00001ce0 36313831 36343036 32652d31 36463332 618164062e-16F32
  0x00001cf0 78004e55 4c4c2028 28766f69 64202a29 x.NULL ((void *)
  0x00001d00 30290061 72677600 5f5f5553 455f504f 0).argv.__USE_PO
  0x00001d10 5349585f 494d504c 49434954 4c592031 SIX_IMPLICITLY 1
  0x00001d20 005f494f 5f66656f 665f756e 6c6f636b ._IO_feof_unlock
  0x00001d30 6564285f 5f667029 20282828 5f5f6670 ed(__fp) (((__fp
  0x00001d40 292d3e5f 666c6167 73202620 5f494f5f )->_flags & _IO_
  0x00001d50 454f465f 5345454e 2920213d 20302900 EOF_SEEN) != 0).
  0x00001d60 5f5f4e4f 5f494e4c 494e455f 5f203100 __NO_INLINE__ 1.
  0x00001d70 5f494f5f 73746465 72722028 285f494f _IO_stderr ((_IO
  0x00001d80 5f46494c 452a2928 265f494f 5f325f31 _FILE*)(&_IO_2_1
  0x00001d90 5f737464 6572725f 2929005f 5f76615f _stderr_)).__va_
  0x00001da0 6172675f 7061636b 2829205f 5f627569 arg_pack() __bui
  0x00001db0 6c74696e 5f76615f 6172675f 7061636b ltin_va_arg_pack
  0x00001dc0 20282900 5f5f464c 545f4d41 4e545f44  ().__FLT_MANT_D
  0x00001dd0 49475f5f 20323400 5f5f4441 4444525f IG__ 24.__DADDR_
  0x00001de0 545f5459 5045205f 5f533332 5f545950 T_TYPE __S32_TYP
  0x00001df0 45005f5f 464c5436 345f4445 43494d41 E.__FLT64_DECIMA
  0x00001e00 4c5f4449 475f5f20 3137005f 5f474343 L_DIG__ 17.__GCC
  0x00001e10 5f484156 455f5359 4e435f43 4f4d5041 _HAVE_SYNC_COMPA
  0x00001e20 52455f41 4e445f53 5741505f 34203100 RE_AND_SWAP_4 1.
  0x00001e30 5f5f464c 5433325f 4d494e5f 4558505f __FLT32_MIN_EXP_
  0x00001e40 5f20282d 31323529 005f5f53 495a455f _ (-125).__SIZE_
  0x00001e50 54595045 5f5f206c 6f6e6720 756e7369 TYPE__ long unsi
  0x00001e60 676e6564 20696e74 005f5f4c 44424c5f gned int.__LDBL_
  0x00001e70 4d41585f 5f20312e 31383937 33313439 MAX__ 1.18973149
  0x00001e80 35333537 32333137 36353032 31323633 5357231765021263
  0x00001e90 38353330 33303937 30323165 2b343933 85303097021e+493
  0x00001ea0 324c005f 5f444543 5f455641 4c5f4d45 2L.__DEC_EVAL_ME
  0x00001eb0 54484f44 5f5f2032 005f5f46 4c545f4d THOD__ 2.__FLT_M
  0x00001ec0 41585f5f 20332e34 30323832 33343636 AX__ 3.402823466
  0x00001ed0 33383532 38383539 38313137 30343138 3852885981170418
  0x00001ee0 33343834 35313639 3235652b 33384600 3484516925e+38F.
  0x00001ef0 5f494f5f 7569645f 74205f5f 7569645f _IO_uid_t __uid_
  0x00001f00 74005f5f 44424c5f 4d494e5f 31305f45 t.__DBL_MIN_10_E
  0x00001f10 58505f5f 20282d33 30372900 5f494f5f XP__ (-307)._IO_
  0x00001f20 325f315f 73746465 72725f00 5f5f5549 2_1_stderr_.__UI
  0x00001f30 4e543332 5f4d4158 5f5f2030 78666666 NT32_MAX__ 0xfff
  0x00001f40 66666666 6655005f 494f5f4f 43542030 fffffU._IO_OCT 0
  0x00001f50 3430005f 5f464c54 3132385f 4841535f 40.__FLT128_HAS_
  0x00001f60 494e4649 4e495459 5f5f2031 005f6d6f INFINITY__ 1._mo
  0x00001f70 6465005f 494f5f48 4156455f 53545f42 de._IO_HAVE_ST_B
  0x00001f80 4c4b5349 5a45205f 475f4841 56455f53 LKSIZE _G_HAVE_S
  0x00001f90 545f424c 4b53495a 45005f5f 464c5436 T_BLKSIZE.__FLT6
  0x00001fa0 345f4841 535f4445 4e4f524d 5f5f2031 4_HAS_DENORM__ 1
  0x00001fb0 005f5f46 4c545f45 56414c5f 4d455448 .__FLT_EVAL_METH
  0x00001fc0 4f445f5f 2030005f 5f465342 4c4b434e OD__ 0.__FSBLKCN
  0x00001fd0 545f545f 54595045 205f5f53 59534341 T_T_TYPE __SYSCA
  0x00001fe0 4c4c5f55 4c4f4e47 5f545950 45005f5f LL_ULONG_TYPE.__
  0x00001ff0 464c5433 32585f48 41535f44 454e4f52 FLT32X_HAS_DENOR
  0x00002000 4d5f5f20 31005f5f 7838365f 36345f5f M__ 1.__x86_64__
  0x00002010 2031005f 5f464c54 3634585f 4d41585f  1.__FLT64X_MAX_
  0x00002020 4558505f 5f203136 33383400 5f5f5645 EXP__ 16384.__VE
  0x00002030 5253494f 4e5f5f20 22372e33 2e302200 RSION__ "7.3.0".
  0x00002040 5f494f5f 4c494e4b 45442030 78383000 _IO_LINKED 0x80.
  0x00002050 5f5f5245 44495245 4354286e 616d652c __REDIRECT(name,
  0x00002060 70726f74 6f2c616c 69617329 206e616d proto,alias) nam
  0x00002070 65207072 6f746f20 5f5f6173 6d5f5f20 e proto __asm__ 
  0x00002080 285f5f41 534d4e41 4d452028 23616c69 (__ASMNAME (#ali
  0x00002090 61732929 005f5f46 53424c4b 434e5436 as)).__FSBLKCNT6
  0x000020a0 345f545f 54595045 205f5f55 51554144 4_T_TYPE __UQUAD
  0x000020b0 5f545950 45005f5f 464c5436 34585f4d _TYPE.__FLT64X_M
  0x000020c0 41585f5f 20312e31 38393733 31343935 AX__ 1.189731495
  0x000020d0 33353732 33313736 35303231 32363338 3572317650212638
  0x000020e0 35333033 30393730 3231652b 34393332 5303097021e+4932
  0x000020f0 46363478 005f494f 5f726561 645f7074 F64x._IO_read_pt
  0x00002100 72005f5f 53495a45 5f542000 5f5f4944 r.__SIZE_T .__ID
  0x00002110 5f545f54 59504520 5f5f5533 325f5459 _T_TYPE __U32_TY
  0x00002120 5045005f 5f53495a 455f545f 5f20005f PE.__SIZE_T__ ._
  0x00002130 494f5f66 756e6c6f 636b6669 6c65285f IO_funlockfile(_
  0x00002140 66702920 005f5f4b 45595f54 5f545950 fp) .__KEY_T_TYP
  0x00002150 45205f5f 5333325f 54595045 005f5f49 E __S32_TYPE.__I
  0x00002160 4e545f4c 45415354 36345f4d 41585f5f NT_LEAST64_MAX__
  0x00002170 20307837 66666666 66666666 66666666  0x7ffffffffffff
  0x00002180 6666664c 005f5f49 4e545f4c 45415354 fffL.__INT_LEAST
  0x00002190 385f5749 4454485f 5f203800 5f5f4c44 8_WIDTH__ 8.__LD
  0x000021a0 424c5f52 45444952 315f4e54 48286e61 BL_REDIR1_NTH(na
  0x000021b0 6d652c70 726f746f 2c616c69 61732920 me,proto,alias) 
  0x000021c0 6e616d65 2070726f 746f205f 5f544852 name proto __THR
  0x000021d0 4f57005f 5f55494e 54385f4d 41585f5f OW.__UINT8_MAX__
  0x000021e0 20307866 66005f49 4f5f464c 41475332  0xff._IO_FLAGS2
  0x000021f0 5f4e4f54 43414e43 454c2032 005f5f61 _NOTCANCEL 2.__a
  0x00002200 6c776179 735f696e 6c696e65 205f5f69 lways_inline __i
  0x00002210 6e6c696e 65205f5f 61747472 69627574 nline __attribut
  0x00002220 655f5f20 28285f5f 616c7761 79735f69 e__ ((__always_i
  0x00002230 6e6c696e 655f5f29 29005f5f 55494e54 nline__)).__UINT
  0x00002240 31365f4d 41585f5f 20307866 66666600 16_MAX__ 0xffff.
  0x00002250 5f494f5f 4d414749 43203078 46424144 _IO_MAGIC 0xFBAD
  0x00002260 30303030 005f5f47 4c494243 5f555345 0000.__GLIBC_USE
  0x00002270 28462920 5f5f474c 4942435f 5553455f (F) __GLIBC_USE_
  0x00002280 20232320 46005f5f 494e545f 46415354  ## F.__INT_FAST
  0x00002290 36345f54 5950455f 5f206c6f 6e672069 64_TYPE__ long i
  0x000022a0 6e740073 7464696e 20737464 696e005f nt.stdin stdin._
  0x000022b0 5f617474 72696275 74655f6e 6f696e6c _attribute_noinl
  0x000022c0 696e655f 5f205f5f 61747472 69627574 ine__ __attribut
  0x000022d0 655f5f20 28285f5f 6e6f696e 6c696e65 e__ ((__noinline
  0x000022e0 5f5f2929 005f5f53 5444435f 56455253 __)).__STDC_VERS
  0x000022f0 494f4e5f 5f203230 31313132 4c005f5f ION__ 201112L.__
  0x00002300 494e544d 41585f57 49445448 5f5f2036 INTMAX_WIDTH__ 6
  0x00002310 34005f5f 44454333 325f4d41 585f5f20 4.__DEC32_MAX__ 
  0x00002320 392e3939 39393939 45393644 46005f5f 9.999999E96DF.__
  0x00002330 474e5543 5f56415f 4c495354 20005f5f GNUC_VA_LIST .__
  0x00002340 50545244 4946465f 4d41585f 5f203078 PTRDIFF_MAX__ 0x
  0x00002350 37666666 66666666 66666666 66666666 7fffffffffffffff
  0x00002360 4c005f5f 5553455f 504f5349 58313939 L.__USE_POSIX199
  0x00002370 33303900 5f5f494e 545f4c45 41535431 309.__INT_LEAST1
  0x00002380 365f5459 50455f5f 2073686f 72742069 6_TYPE__ short i
  0x00002390 6e74005f 5f464c54 33325f4d 41585f45 nt.__FLT32_MAX_E
  0x000023a0 58505f5f 20313238 005f5f67 6e755f6c XP__ 128.__gnu_l
  0x000023b0 696e7578 5f5f2031 005f5f53 54445f54 inux__ 1.__STD_T
  0x000023c0 59504520 74797065 64656600 5f5f4d4f YPE typedef.__MO
  0x000023d0 44455f54 5f545950 45205f5f 5533325f DE_T_TYPE __U32_
  0x000023e0 54595045 005f5f53 495a454f 465f464c TYPE.__SIZEOF_FL
  0x000023f0 4f415431 32385f5f 20313600 5f5f474e OAT128__ 16.__GN
  0x00002400 55435f53 5444435f 494e4c49 4e455f5f UC_STDC_INLINE__
  0x00002410 2031005f 5f44424c 5f444947 5f5f2031  1.__DBL_DIG__ 1
  0x00002420 35005f5f 4743435f 41544f4d 49435f43 5.__GCC_ATOMIC_C
  0x00002430 48415231 365f545f 4c4f434b 5f465245 HAR16_T_LOCK_FRE
  0x00002440 45203200 5f5f494e 545f4c45 41535438 E 2.__INT_LEAST8
  0x00002450 5f4d4158 5f5f2030 78376600 5f5f5331 _MAX__ 0x7f.__S1
  0x00002460 365f5459 50452073 686f7274 20696e74 6_TYPE short int
  0x00002470 005f5f4c 5036345f 5f203100 5f5f5359 .__LP64__ 1.__SY
  0x00002480 5343414c 4c5f574f 52445349 5a452036 SCALL_WORDSIZE 6
  0x00002490 34005f5f 4743435f 41544f4d 49435f4c 4.__GCC_ATOMIC_L
  0x000024a0 4f4e475f 4c4f434b 5f465245 45203200 ONG_LOCK_FREE 2.
  0x000024b0 5f5f464c 54333258 5f444947 5f5f2031 __FLT32X_DIG__ 1
  0x000024c0 35005f5f 464c5433 32585f4d 414e545f 5.__FLT32X_MANT_
  0x000024d0 4449475f 5f203533 005f494f 5f777269 DIG__ 53._IO_wri
  0x000024e0 74655f62 61736500 5f4c5036 34203100 te_base._LP64 1.
  0x000024f0 5f464541 54555245 535f4820 31005f5f _FEATURES_H 1.__
  0x00002500 464c5433 325f4449 475f5f20 36005f5f FLT32_DIG__ 6.__
  0x00002510 4653574f 52445f54 5f545950 45205f5f FSWORD_T_TYPE __
  0x00002520 53595343 414c4c5f 534c4f4e 475f5459 SYSCALL_SLONG_TY
  0x00002530 5045005f 5f534c4f 4e47574f 52445f54 PE.__SLONGWORD_T
  0x00002540 59504520 6c6f6e67 20696e74 005f494f YPE long int._IO
  0x00002550 5f325f31 5f737464 696e5f00 5f5f7838 _2_1_stdin_.__x8
  0x00002560 365f3634 2031005f 5f464c54 3634585f 6_64 1.__FLT64X_
  0x00002570 4d41585f 31305f45 58505f5f 20343933 MAX_10_EXP__ 493
  0x00002580 32005f5f 44424c5f 4d494e5f 5f202828 2.__DBL_MIN__ ((
  0x00002590 646f7562 6c652932 2e323235 30373338 double)2.2250738
  0x000025a0 35383530 37323031 33383330 39303233 5850720138309023
  0x000025b0 32373137 33333234 30343036 652d3330 271733240406e-30
  0x000025c0 384c2900 5f494f5f 325f315f 7374646f 8L)._IO_2_1_stdo
  0x000025d0 75745f00 5f5f5549 4e545f46 41535433 ut_.__UINT_FAST3
  0x000025e0 325f4d41 585f5f20 30786666 66666666 2_MAX__ 0xffffff
  0x000025f0 66666666 66666666 6666554c 005f5f46 ffffffffffUL.__F
  0x00002600 494e4954 455f4d41 54485f4f 4e4c595f INITE_MATH_ONLY_
  0x00002610 5f203000 5f494f5f 73617665 5f626173 _ 0._IO_save_bas
  0x00002620 65005f5f 5531365f 54595045 20756e73 e.__U16_TYPE uns
  0x00002630 69676e65 64207368 6f727420 696e7400 igned short int.
  0x00002640 454f4620 282d3129 005f5f46 4c543634 EOF (-1).__FLT64
  0x00002650 5f4d4158 5f5f2031 2e373937 36393331 _MAX__ 1.7976931
  0x00002660 33343836 32333135 37303831 34353237 3486231570814527
  0x00002670 34323337 33313730 34333537 652b3330 423731704357e+30
  0x00002680 38463634 005f5f73 697a655f 745f5f20 8F64.__size_t__ 
  0x00002690 005f5f55 494e5438 5f545950 455f5f20 .__UINT8_TYPE__ 
  0x000026a0 756e7369 676e6564 20636861 72005f49 unsigned char._I
  0x000026b0 4f5f6669 6c655f66 6c616773 205f666c O_file_flags _fl
  0x000026c0 61677300 5f5f5553 455f584f 50454e32 ags.__USE_XOPEN2
  0x000026d0 4b385853 49005f5f 494e545f 46415354 K8XSI.__INT_FAST
  0x000026e0 33325f54 5950455f 5f206c6f 6e672069 32_TYPE__ long i
  0x000026f0 6e74005f 494f535f 494e5055 54203100 nt._IOS_INPUT 1.
  0x00002700 5f5f4743 435f4153 4d5f464c 41475f4f __GCC_ASM_FLAG_O
  0x00002710 55545055 54535f5f 20310070 75746328 UTPUTS__ 1.putc(
  0x00002720 5f63682c 5f667029 205f494f 5f707574 _ch,_fp) _IO_put
  0x00002730 6320285f 63682c20 5f667029 005f5f55 c (_ch, _fp).__U
  0x00002740 494e545f 4c454153 5436345f 4d41585f INT_LEAST64_MAX_
  0x00002750 5f203078 66666666 66666666 66666666 _ 0xffffffffffff
  0x00002760 66666666 554c005f 5f504d54 005f5f55 ffffUL.__PMT.__U
  0x00002770 51554144 5f545950 4520756e 7369676e QUAD_TYPE unsign
  0x00002780 6564206c 6f6e6720 696e7400 5f5f454c ed long int.__EL
  0x00002790 465f5f20 31005f5f 464c5433 32585f4d F__ 1.__FLT32X_M
  0x000027a0 494e5f5f 20322e32 32353037 33383538 IN__ 2.225073858
  0x000027b0 35303732 30313338 33303930 32333237 5072013830902327
  0x000027c0 31373333 32343034 3036652d 33303846 1733240406e-308F
  0x000027d0 33327800 5f5f5549 4e545054 525f5459 32x.__UINTPTR_TY
  0x000027e0 50455f5f 206c6f6e 6720756e 7369676e PE__ long unsign
  0x000027f0 65642069 6e74005f 5f494e54 31365f43 ed int.__INT16_C
  0x00002800 28632920 63005f5f 4743435f 48415645 (c) c.__GCC_HAVE
  0x00002810 5f445741 5246325f 4346495f 41534d20 _DWARF2_CFI_ASM 
  0x00002820 31005f5f 53495a45 4f465f46 4c4f4154 1.__SIZEOF_FLOAT
  0x00002830 5f5f2034 005f5f44 45433332 5f535542 __ 4.__DEC32_SUB
  0x00002840 4e4f524d 414c5f4d 494e5f5f 20302e30 NORMAL_MIN__ 0.0
  0x00002850 30303030 31452d39 35444600 5f494f5f 00001E-95DF._IO_
  0x00002860 49535f41 5050454e 44494e47 20307831 IS_APPENDING 0x1
  0x00002870 30303000 5f5f464c 54363458 5f484153 000.__FLT64X_HAS
  0x00002880 5f515549 45545f4e 414e5f5f 2031005f _QUIET_NAN__ 1._
  0x00002890 5f464c54 5f484153 5f494e46 494e4954 _FLT_HAS_INFINIT
  0x000028a0 595f5f20 31005f49 4f535f4e 4f524550 Y__ 1._IOS_NOREP
  0x000028b0 4c414345 20363400 5f5f5354 445f5459 LACE 64.__STD_TY
  0x000028c0 5045005f 5f555345 5f504f53 49583139 PE.__USE_POSIX19
  0x000028d0 39333039 2031005f 494f5f73 697a655f 9309 1._IO_size_
  0x000028e0 74207369 7a655f74 005f5f49 4e4f3634 t size_t.__INO64
  0x000028f0 5f545f54 59504520 5f5f5551 5541445f _T_TYPE __UQUAD_
  0x00002900 54595045 005f5f47 4e555f4c 49425241 TYPE.__GNU_LIBRA
  0x00002910 52595f5f 2036005f 5f535444 435f5f20 RY__ 6.__STDC__ 
  0x00002920 31005f5f 676c6962 635f6339 395f666c 1.__glibc_c99_fl
  0x00002930 65786172 725f6176 61696c61 626c6520 exarr_available 
  0x00002940 31005f5f 53534532 5f5f2031 005f5f53 1.__SSE2__ 1.__S
  0x00002950 4c4f4e47 33325f54 59504520 696e7400 LONG32_TYPE int.
  0x00002960 5f5f4442 4c5f4d41 585f4558 505f5f20 __DBL_MAX_EXP__ 
  0x00002970 31303234 005f5f53 495a454f 465f4c4f 1024.__SIZEOF_LO
  0x00002980 4e475f5f 2038005f 5f41544f 4d49435f NG__ 8.__ATOMIC_
  0x00002990 434f4e53 554d4520 31005f5f 5553455f CONSUME 1.__USE_
  0x000029a0 46494c45 5f4f4646 53455436 34005f49 FILE_OFFSET64._I
  0x000029b0 4f5f464c 41475332 5f4d4d41 50203100 O_FLAGS2_MMAP 1.
  0x000029c0 5f5f464c 5433325f 4d494e5f 5f20312e __FLT32_MIN__ 1.
  0x000029d0 31373534 39343335 30383232 32383735 1754943508222875
  0x000029e0 30373936 38373336 35333732 32323234 0796873653722224
  0x000029f0 35363865 2d333846 3332005f 5f57494e 568e-38F32.__WIN
  0x00002a00 545f5459 50455f5f 20756e73 69676e65 T_TYPE__ unsigne
  0x00002a10 6420696e 74005f5f 5553455f 4d495343 d int.__USE_MISC
  0x00002a20 005f494f 5f636c65 616e7570 5f726567 ._IO_cleanup_reg
  0x00002a30 696f6e5f 656e6428 5f446f69 74292000 ion_end(_Doit) .
  0x00002a40 5f5f494e 5431365f 4d41585f 5f203078 __INT16_MAX__ 0x
  0x00002a50 37666666 005f504f 5349585f 435f534f 7fff._POSIX_C_SO
  0x00002a60 55524345 20323030 3830394c 005f5f53 URCE 200809L.__S
  0x00002a70 43484152 5f574944 54485f5f 2038005f CHAR_WIDTH__ 8._
  0x00002a80 5f55494e 5433325f 43286329 20632023 _UINT32_C(c) c #
  0x00002a90 23205500 5f5f4c44 424c5f4d 494e5f31 # U.__LDBL_MIN_1
  0x00002aa0 305f4558 505f5f20 282d3439 33312900 0_EXP__ (-4931).
  0x00002ab0 5f535444 494f5f55 5345535f 494f5354 _STDIO_USES_IOST
  0x00002ac0 5245414d 20005f5f 53495a45 4f465f44 REAM .__SIZEOF_D
  0x00002ad0 4f55424c 455f5f20 38005f5f 55494e54 OUBLE__ 8.__UINT
  0x00002ae0 385f4328 63292063 005f5f42 4c4b434e 8_C(c) c.__BLKCN
  0x00002af0 5436345f 545f5459 5045205f 5f535155 T64_T_TYPE __SQU
  0x00002b00 41445f54 59504500 5f5f5553 455f464f AD_TYPE.__USE_FO
  0x00002b10 52544946 595f4c45 56454c00 5f5f474c RTIFY_LEVEL.__GL
  0x00002b20 4942435f 5553455f 4c49425f 45585432 IBC_USE_LIB_EXT2
  0x00002b30 005f5f57 494e545f 4d494e5f 5f203055 .__WINT_MIN__ 0U
  0x00002b40 005f5f4c 44424c5f 4d414e54 5f444947 .__LDBL_MANT_DIG
  0x00002b50 5f5f2036 34005f5f 70616431 005f5f70 __ 64.__pad1.__p
  0x00002b60 61643200 5f5f7061 6433005f 5f706164 ad2.__pad3.__pad
  0x00002b70 34005f5f 70616435 005f5f53 5444435f 4.__pad5.__STDC_
  0x00002b80 5554465f 31365f5f 2031005f 5f4c4442 UTF_16__ 1.__LDB
  0x00002b90 4c5f4550 53494c4f 4e5f5f20 312e3038 L_EPSILON__ 1.08
  0x00002ba0 34323032 31373234 38353530 34343334 4202172485504434
  0x00002bb0 30303734 35323830 30383639 39343137 0074528008699417
  0x00002bc0 31652d31 394c005f 5f626f73 30287074 1e-19L.__bos0(pt
  0x00002bd0 7229205f 5f627569 6c74696e 5f6f626a r) __builtin_obj
  0x00002be0 6563745f 73697a65 20287074 722c2030 ect_size (ptr, 0
  0x00002bf0 29005f49 4f4c4246 2031005f 5f617474 )._IOLBF 1.__att
  0x00002c00 72696275 74655f66 6f726d61 745f6172 ribute_format_ar
  0x00002c10 675f5f28 7829205f 5f617474 72696275 g__(x) __attribu
  0x00002c20 74655f5f 2028285f 5f666f72 6d61745f te__ ((__format_
  0x00002c30 6172675f 5f202878 29292900 5f5f5f5f arg__ (x))).____
  0x00002c40 46494c45 5f646566 696e6564 2031005f FILE_defined 1._
  0x00002c50 42495453 5f535444 494f5f4c 494d5f48 BITS_STDIO_LIM_H
  0x00002c60 2031005f 5f4c4442 4c5f4841 535f494e  1.__LDBL_HAS_IN
  0x00002c70 46494e49 54595f5f 2031005f 5f555345 FINITY__ 1.__USE
  0x00002c80 5f504f53 49582031 005f5f49 4e4f5f54 _POSIX 1.__INO_T
  0x00002c90 5f4d4154 43484553 5f494e4f 36345f54 _MATCHES_INO64_T
  0x00002ca0 2031005f 5f474343 5f494543 5f353539  1.__GCC_IEC_559
  0x00002cb0 5f434f4d 504c4558 2032005f 5f534947 _COMPLEX 2.__SIG
  0x00002cc0 5f41544f 4d49435f 4d494e5f 5f20282d _ATOMIC_MIN__ (-
  0x00002cd0 5f5f5349 475f4154 4f4d4943 5f4d4158 __SIG_ATOMIC_MAX
  0x00002ce0 5f5f202d 20312900 5f494f53 5f42494e __ - 1)._IOS_BIN
  0x00002cf0 20313238 005f494f 5f494e5f 4241434b  128._IO_IN_BACK
  0x00002d00 55502030 78313030 005f494f 5f666c6f UP 0x100._IO_flo
  0x00002d10 636b6669 6c65285f 66702920 005f5f53 ckfile(_fp) .__S
  0x00002d20 495a454f 465f5743 4841525f 545f5f20 IZEOF_WCHAR_T__ 
  0x00002d30 34005f5f 61747472 69627574 655f6465 4.__attribute_de
  0x00002d40 70726563 61746564 5f5f205f 5f617474 precated__ __att
  0x00002d50 72696275 74655f5f 2028285f 5f646570 ribute__ ((__dep
  0x00002d60 72656361 7465645f 5f292900 5f5f464c recated__)).__FL
  0x00002d70 54313238 5f4d494e 5f31305f 4558505f T128_MIN_10_EXP_
  0x00002d80 5f20282d 34393331 29005f5f 464c4f41 _ (-4931).__FLOA
  0x00002d90 545f574f 52445f4f 52444552 5f5f205f T_WORD_ORDER__ _
  0x00002da0 5f4f5244 45525f4c 4954544c 455f454e _ORDER_LITTLE_EN
  0x00002db0 4449414e 5f5f005f 5f474343 5f484156 DIAN__.__GCC_HAV
  0x00002dc0 455f5359 4e435f43 4f4d5041 52455f41 E_SYNC_COMPARE_A
  0x00002dd0 4e445f53 5741505f 32203100 5f475f48 ND_SWAP_2 1._G_H
  0x00002de0 4156455f 4d52454d 41502031 005f5f44 AVE_MREMAP 1.__D
  0x00002df0 45433332 5f4d414e 545f4449 475f5f20 EC32_MANT_DIG__ 
  0x00002e00 37005f5f 464c5433 325f4445 4e4f524d 7.__FLT32_DENORM
  0x00002e10 5f4d494e 5f5f2031 2e343031 32393834 _MIN__ 1.4012984
  0x00002e20 36343332 34383137 30373039 32333732 6432481707092372
  0x00002e30 39353833 32383939 31363133 652d3435 958328991613e-45
  0x00002e40 46333200 5f5f6e65 65645f73 697a655f F32.__need_size_
  0x00002e50 74005f5f 55494e54 5f464153 5431365f t.__UINT_FAST16_
  0x00002e60 4d41585f 5f203078 66666666 66666666 MAX__ 0xffffffff
  0x00002e70 66666666 66666666 554c005f 5f6e6565 ffffffffUL.__nee
  0x00002e80 645f5f5f 76615f6c 69737400 5f5f494e d___va_list.__IN
  0x00002e90 5433325f 4d41585f 5f203078 37666666 T32_MAX__ 0x7fff
  0x00002ea0 66666666 005f494f 5f494e54 45524e41 ffff._IO_INTERNA
  0x00002eb0 4c203031 30005f5f 5f696e74 5f73697a L 010.___int_siz
  0x00002ec0 655f745f 6820005f 5f676c69 62635f6c e_t_h .__glibc_l
  0x00002ed0 696b656c 7928636f 6e642920 5f5f6275 ikely(cond) __bu
  0x00002ee0 696c7469 6e5f6578 70656374 20282863 iltin_expect ((c
  0x00002ef0 6f6e6429 2c203129 005f5f41 544f4d49 ond), 1).__ATOMI
  0x00002f00 435f4143 51554952 45203200 5f5f5549 C_ACQUIRE 2.__UI
  0x00002f10 4e543136 5f432863 29206300 5f494f5f NT16_C(c) c._IO_
  0x00002f20 464c4147 53325f55 5345525f 57425546 FLAGS2_USER_WBUF
  0x00002f30 2038005f 5f494e54 36345f4d 41585f5f  8.__INT64_MAX__
  0x00002f40 20307837 66666666 66666666 66666666  0x7ffffffffffff
  0x00002f50 6666664c 005f5f6e 6565645f 73697a65 fffL.__need_size
  0x00002f60 5f742000 5f5f626f 73287074 7229205f _t .__bos(ptr) _
  0x00002f70 5f627569 6c74696e 5f6f626a 6563745f _builtin_object_
  0x00002f80 73697a65 20287074 722c205f 5f555345 size (ptr, __USE
  0x00002f90 5f464f52 54494659 5f4c4556 454c203e _FORTIFY_LEVEL >
  0x00002fa0 20312900 5f5f5557 4f52445f 54595045  1).__UWORD_TYPE
  0x00002fb0 20756e73 69676e65 64206c6f 6e672069  unsigned long i
  0x00002fc0 6e74005f 5f474c49 42435f4d 494e4f52 nt.__GLIBC_MINOR
  0x00002fd0 5f5f2032 37005f5f 5345475f 47532031 __ 27.__SEG_GS 1
  0x00002fe0 005f5f53 53455f4d 4154485f 5f203100 .__SSE_MATH__ 1.
  0x00002ff0 5f5f4e4c 494e4b5f 545f5459 5045205f __NLINK_T_TYPE _
  0x00003000 5f535953 43414c4c 5f554c4f 4e475f54 _SYSCALL_ULONG_T
  0x00003010 59504500 5f5f5549 4e544d41 585f5459 YPE.__UINTMAX_TY
  0x00003020 50455f5f 206c6f6e 6720756e 7369676e PE__ long unsign
  0x00003030 65642069 6e74005f 5f555345 5f584f50 ed int.__USE_XOP
  0x00003040 454e324b 005f5f4c 45414620 2c205f5f EN2K.__LEAF , __
  0x00003050 6c656166 5f5f005f 5f444543 3132385f leaf__.__DEC128_
  0x00003060 4d41585f 4558505f 5f203631 3435005f MAX_EXP__ 6145._
  0x00003070 494f5f4c 45465420 3032005f 5f666f72 IO_LEFT 02.__for
  0x00003080 74696679 5f66756e 6374696f 6e205f5f tify_function __
  0x00003090 65787465 726e5f61 6c776179 735f696e extern_always_in
  0x000030a0 6c696e65 205f5f61 74747269 62757465 line __attribute
  0x000030b0 5f617274 69666963 69616c5f 5f005f49 _artificial__._I
  0x000030c0 4f5f424f 4f4c414c 50484120 30323030 O_BOOLALPHA 0200
  0x000030d0 30303000 5f5f5349 475f4154 4f4d4943 000.__SIG_ATOMIC
  0x000030e0 5f574944 54485f5f 20333200 5f5f434f _WIDTH__ 32.__CO
  0x000030f0 4e434154 28782c79 29207820 23232079 NCAT(x,y) x ## y
  0x00003100 005f5f61 74747269 62757465 5f646570 .__attribute_dep
  0x00003110 72656361 7465645f 6d73675f 5f286d73 recated_msg__(ms
  0x00003120 6729205f 5f617474 72696275 74655f5f g) __attribute__
  0x00003130 2028285f 5f646570 72656361 7465645f  ((__deprecated_
  0x00003140 5f20286d 73672929 29005f5f 53485254 _ (msg))).__SHRT
  0x00003150 5f4d4158 5f5f2030 78376666 66005f5f _MAX__ 0x7fff.__
  0x00003160 4743435f 41544f4d 49435f57 43484152 GCC_ATOMIC_WCHAR
  0x00003170 5f545f4c 4f434b5f 46524545 2032005f _T_LOCK_FREE 2._
  0x00003180 494f5f50 454e4449 4e475f4f 55545055 IO_PENDING_OUTPU
  0x00003190 545f434f 554e5428 5f667029 2028285f T_COUNT(_fp) ((_
  0x000031a0 6670292d 3e5f494f 5f777269 74655f70 fp)->_IO_write_p
  0x000031b0 7472202d 20285f66 70292d3e 5f494f5f tr - (_fp)->_IO_
  0x000031c0 77726974 655f6261 73652900 5f494f5f write_base)._IO_
  0x000031d0 55534552 5f4c4f43 4b203078 38303030 USER_LOCK 0x8000
  0x000031e0 005f5f4f 52444552 5f504450 5f454e44 .__ORDER_PDP_END
  0x000031f0 49414e5f 5f203334 3132005f 494f5f55 IAN__ 3412._IO_U
  0x00003200 4e494649 45445f4a 554d5054 41424c45 NIFIED_JUMPTABLE
  0x00003210 53203100 544d505f 4d415820 32333833 S 1.TMP_MAX 2383
  0x00003220 3238005f 494f5f6e 6565645f 6c6f636b 28._IO_need_lock
  0x00003230 285f6670 29202828 285f6670 292d3e5f (_fp) (((_fp)->_
  0x00003240 666c6167 73322026 205f494f 5f464c41 flags2 & _IO_FLA
  0x00003250 4753325f 4e454544 5f4c4f43 4b292021 GS2_NEED_LOCK) !
  0x00003260 3d203029 005f5f46 4c545f44 4543494d = 0).__FLT_DECIM
  0x00003270 414c5f44 49475f5f 2039005f 5f776172 AL_DIG__ 9.__war
  0x00003280 6e646563 6c286e61 6d652c6d 73672920 ndecl(name,msg) 
  0x00003290 65787465 726e2076 6f696420 6e616d65 extern void name
  0x000032a0 2028766f 69642920 5f5f6174 74726962  (void) __attrib
  0x000032b0 7574655f 5f28285f 5f776172 6e696e67 ute__((__warning
  0x000032c0 5f5f2028 6d736729 2929005f 5f464c54 __ (msg))).__FLT
  0x000032d0 36345f4d 41585f31 305f4558 505f5f20 64_MAX_10_EXP__ 
  0x000032e0 33303800 5f5f5354 52494e47 28782920 308.__STRING(x) 
  0x000032f0 2378005f 5f4c4442 4c5f4d49 4e5f4558 #x.__LDBL_MIN_EX
  0x00003300 505f5f20 282d3136 33383129 005f5f57 P__ (-16381).__W
  0x00003310 494e545f 57494454 485f5f20 3332005f INT_WIDTH__ 32._
  0x00003320 494f5f53 484f5750 4f532030 32303030 IO_SHOWPOS 02000
  0x00003330 005f494f 5f726561 645f656e 64005f5f ._IO_read_end.__
  0x00003340 464c5436 34585f4d 494e5f5f 20332e33 FLT64X_MIN__ 3.3
  0x00003350 36323130 33313433 31313230 39333530 6210314311209350
  0x00003360 36323632 36373738 31373332 31373532 6262677817321752
  0x00003370 3630652d 34393332 46363478 005f494f 60e-4932F64x._IO
  0x00003380 535f4f55 54505554 2032005f 5f494e54 S_OUTPUT 2.__INT
  0x00003390 5f464153 54385f4d 41585f5f 20307837 _FAST8_MAX__ 0x7
  0x000033a0 66005f5f 52454749 53544552 5f505245 f.__REGISTER_PRE
  0x000033b0 4649585f 5f20005f 5f464c54 33325f45 FIX__ .__FLT32_E
  0x000033c0 5053494c 4f4e5f5f 20312e31 39323039 PSILON__ 1.19209
  0x000033d0 32383935 35303738 31323530 30303030 2895507812500000
  0x000033e0 30303030 30303030 30303030 3030652d 00000000000000e-
  0x000033f0 37463332 005f5f47 4c494243 5f494e54 7F32.__GLIBC_INT
  0x00003400 45524e41 4c5f5354 41525449 4e475f48 ERNAL_STARTING_H
  0x00003410 45414445 525f494d 504c454d 454e5441 EADER_IMPLEMENTA
  0x00003420 54494f4e 20005f5f 53574f52 445f5459 TION .__SWORD_TY
  0x00003430 5045206c 6f6e6720 696e7400 5f5f4c4f PE long int.__LO
  0x00003440 4e475f4d 41585f5f 20307837 66666666 NG_MAX__ 0x7ffff
  0x00003450 66666666 66666666 6666664c 005f5f73 fffffffffffL.__s
  0x00003460 7475625f 6765746d 73672000 5f5f4445 tub_getmsg .__DE
  0x00003470 4336345f 4d41585f 4558505f 5f203338 C64_MAX_EXP__ 38
  0x00003480 35005f5f 464c5433 32585f4d 494e5f31 5.__FLT32X_MIN_1
  0x00003490 305f4558 505f5f20 282d3330 3729005f 0_EXP__ (-307)._
  0x000034a0 5f555345 5f504f53 49583200 5f494f5f _USE_POSIX2._IO_
  0x000034b0 554e4954 42554620 30323030 3030005f UNITBUF 020000._
  0x000034c0 5f4f4646 5f545f54 59504520 5f5f5359 _OFF_T_TYPE __SY
  0x000034d0 5343414c 4c5f534c 4f4e475f 54595045 SCALL_SLONG_TYPE
  0x000034e0 005f5f55 494e544d 41585f43 28632920 .__UINTMAX_C(c) 
  0x000034f0 63202323 20554c00 5f5f4348 41523332 c ## UL.__CHAR32
  0x00003500 5f545950 455f5f20 756e7369 676e6564 _TYPE__ unsigned
  0x00003510 20696e74 005f5f46 4c543634 585f4841  int.__FLT64X_HA
  0x00003520 535f494e 46494e49 54595f5f 2031005f S_INFINITY__ 1._
  0x00003530 42495453 5f475f43 4f4e4649 475f4820 BITS_G_CONFIG_H 
  0x00003540 31005f5f 44454331 32385f4d 494e5f5f 1.__DEC128_MIN__
  0x00003550 2031452d 36313433 444c005f 5f464c54  1E-6143DL.__FLT
  0x00003560 3332585f 4d494e5f 4558505f 5f20282d 32X_MIN_EXP__ (-
  0x00003570 31303231 29005f49 4f5f6765 74635f75 1021)._IO_getc_u
  0x00003580 6e6c6f63 6b656428 5f667029 20285f49 nlocked(_fp) (_I
  0x00003590 4f5f4245 2028285f 6670292d 3e5f494f O_BE ((_fp)->_IO
  0x000035a0 5f726561 645f7074 72203e3d 20285f66 _read_ptr >= (_f
  0x000035b0 70292d3e 5f494f5f 72656164 5f656e64 p)->_IO_read_end
  0x000035c0 2c203029 203f205f 5f75666c 6f772028 , 0) ? __uflow (
  0x000035d0 5f667029 203a202a 28756e73 69676e65 _fp) : *(unsigne
  0x000035e0 64206368 6172202a 2920285f 6670292d d char *) (_fp)-
  0x000035f0 3e5f494f 5f726561 645f7074 722b2b29 >_IO_read_ptr++)
  0x00003600 005f5f49 4e545054 525f5749 4454485f .__INTPTR_WIDTH_
  0x00003610 5f203634 005f5f49 4e4f5f54 5f545950 _ 64.__INO_T_TYP
  0x00003620 45205f5f 53595343 414c4c5f 554c4f4e E __SYSCALL_ULON
  0x00003630 475f5459 5045005f 5f55494e 545f4641 G_TYPE.__UINT_FA
  0x00003640 5354385f 54595045 5f5f2075 6e736967 ST8_TYPE__ unsig
  0x00003650 6e656420 63686172 005f5f49 4e543332 ned char.__INT32
  0x00003660 5f432863 29206300 5f5f4653 46494c43 _C(c) c.__FSFILC
  0x00003670 4e543634 5f545f54 59504520 5f5f5551 NT64_T_TYPE __UQ
  0x00003680 5541445f 54595045 005f5f4c 44424c5f UAD_TYPE.__LDBL_
  0x00003690 4841535f 51554945 545f4e41 4e5f5f20 HAS_QUIET_NAN__ 
  0x000036a0 31005f5f 474e5543 5f504154 43484c45 1.__GNUC_PATCHLE
  0x000036b0 56454c5f 5f203000 5f5f5749 4e545f4d VEL__ 0.__WINT_M
  0x000036c0 41585f5f 20307866 66666666 66666655 AX__ 0xffffffffU
  0x000036d0 005f5f61 74747269 62757465 5f6e6f6e .__attribute_non
  0x000036e0 73747269 6e675f5f 20005f49 4f5f4d41 string__ ._IO_MA
  0x000036f0 4749435f 4d41534b 20307846 46464630 GIC_MASK 0xFFFF0
  0x00003700 30303000 5f5f6c69 6e757820 31005f5f 000.__linux 1.__
  0x00003710 474c4942 435f5553 455f4945 435f3630 GLIBC_USE_IEC_60
  0x00003720 3535395f 46554e43 535f4558 54005f49 559_FUNCS_EXT._I
  0x00003730 4f5f7661 5f6c6973 74205f5f 676e7563 O_va_list __gnuc
  0x00003740 5f76615f 6c697374 005f475f 42554653 _va_list._G_BUFS
  0x00003750 495a2038 31393200 5f5f4c44 424c5f52 IZ 8192.__LDBL_R
  0x00003760 45444952 31286e61 6d652c70 726f746f EDIR1(name,proto
  0x00003770 2c616c69 61732920 6e616d65 2070726f ,alias) name pro
  0x00003780 746f005f 5f617474 72696275 74655f6d to.__attribute_m
  0x00003790 616c6c6f 635f5f20 5f5f6174 74726962 alloc__ __attrib
  0x000037a0 7574655f 5f202828 5f5f6d61 6c6c6f63 ute__ ((__malloc
  0x000037b0 5f5f2929 005f5f55 494e5433 325f5459 __)).__UINT32_TY
  0x000037c0 50455f5f 20756e73 69676e65 6420696e PE__ unsigned in
  0x000037d0 74005f5f 4c44424c 5f524544 49525f4e t.__LDBL_REDIR_N
  0x000037e0 5448286e 616d652c 70726f74 6f29206e TH(name,proto) n
  0x000037f0 616d6520 70726f74 6f205f5f 5448524f ame proto __THRO
  0x00003800 57005f5f 5553455f 584f5045 4e324b38 W.__USE_XOPEN2K8
  0x00003810 005f494f 5f555050 45524341 53452030 ._IO_UPPERCASE 0
  0x00003820 31303030 00505f74 6d706469 7220222f 1000.P_tmpdir "/
  0x00003830 746d7022 005f5f52 45444952 4543545f tmp".__REDIRECT_
  0x00003840 4e544828 6e616d65 2c70726f 746f2c61 NTH(name,proto,a
  0x00003850 6c696173 29206e61 6d652070 726f746f lias) name proto
  0x00003860 205f5f61 736d5f5f 20285f5f 41534d4e  __asm__ (__ASMN
  0x00003870 414d4520 2823616c 69617329 29205f5f AME (#alias)) __
  0x00003880 5448524f 57005f5f 5553455f 584f5045 THROW.__USE_XOPE
  0x00003890 4e005f5f 464c5431 32385f45 5053494c N.__FLT128_EPSIL
  0x000038a0 4f4e5f5f 20312e39 32353932 39393434 ON__ 1.925929944
  0x000038b0 33383732 33353835 33303535 39373739 3872358530559779
  0x000038c0 34323538 34393237 3332652d 33344631 4258492732e-34F1
  0x000038d0 32380046 4f50454e 5f4d4158 20313600 28.FOPEN_MAX 16.
  0x000038e0 5f494f5f 46494c45 5f706c75 73005f50 _IO_FILE_plus._P
  0x000038f0 4f534958 5f435f53 4f555243 45005f5f OSIX_C_SOURCE.__
  0x00003900 5448524f 57205f5f 61747472 69627574 THROW __attribut
  0x00003910 655f5f20 28285f5f 6e6f7468 726f775f e__ ((__nothrow_
  0x00003920 5f205f5f 4c454146 2929005f 5f53495a _ __LEAF)).__SIZ
  0x00003930 454f465f 4c4f4e47 5f4c4f4e 475f5f20 EOF_LONG_LONG__ 
  0x00003940 38005f56 415f4c49 53545f44 4546494e 8._VA_LIST_DEFIN
  0x00003950 45442000 5f5f5549 4e545f46 41535433 ED .__UINT_FAST3
  0x00003960 325f5459 50455f5f 206c6f6e 6720756e 2_TYPE__ long un
  0x00003970 7369676e 65642069 6e74005f 5f534852 signed int.__SHR
  0x00003980 545f5749 4454485f 5f203136 005f5f53 T_WIDTH__ 16.__S
  0x00003990 5345325f 4d415448 5f5f2031 005f5f53 SE2_MATH__ 1.__S
  0x000039a0 53495a45 5f545f54 59504520 5f5f5357 SIZE_T_TYPE __SW
  0x000039b0 4f52445f 54595045 005f5f53 36345f54 ORD_TYPE.__S64_T
  0x000039c0 59504520 6c6f6e67 20696e74 005f5f61 YPE long int.__a
  0x000039d0 74747269 62757465 5f707572 655f5f20 ttribute_pure__ 
  0x000039e0 5f5f6174 74726962 7574655f 5f202828 __attribute__ ((
  0x000039f0 5f5f7075 72655f5f 2929005f 5f494e54 __pure__)).__INT
  0x00003a00 4d41585f 43286329 20632023 23204c00 MAX_C(c) c ## L.
  0x00003a10 5f494f5f 69636f6e 765f7420 5f475f69 _IO_iconv_t _G_i
  0x00003a20 636f6e76 5f74005f 5f494e54 5f464153 conv_t.__INT_FAS
  0x00003a30 5433325f 57494454 485f5f20 3634005f T32_WIDTH__ 64._
  0x00003a40 5f555345 5f584f50 454e324b 38203100 _USE_XOPEN2K8 1.
  0x00003a50 5f5f494e 545f4c45 41535436 345f5749 __INT_LEAST64_WI
  0x00003a60 4454485f 5f203634 005f5f47 4c494243 DTH__ 64.__GLIBC
  0x00003a70 5f555345 5f494543 5f363035 35395f54 _USE_IEC_60559_T
  0x00003a80 59504553 5f455854 2030005f 5f494e54 YPES_EXT 0.__INT
  0x00003a90 385f4328 63292063 005f5f53 495a454f 8_C(c) c.__SIZEO
  0x00003aa0 465f504f 494e5445 525f5f20 38005f5f F_POINTER__ 8.__
  0x00003ab0 464c5436 345f4550 53494c4f 4e5f5f20 FLT64_EPSILON__ 
  0x00003ac0 322e3232 30343436 30343932 35303331 2.22044604925031
  0x00003ad0 33303830 38343732 36333333 36313831 3080847263336181
  0x00003ae0 36343036 32652d31 36463634 005f494f 64062e-16F64._IO
  0x00003af0 5f76615f 6c697374 205f475f 76615f6c _va_list _G_va_l
  0x00003b00 69737400 5f5f464c 54363458 5f4d414e ist.__FLT64X_MAN
  0x00003b10 545f4449 475f5f20 3634005f 44454641 T_DIG__ 64._DEFA
  0x00003b20 554c545f 534f5552 4345005f 5f574348 ULT_SOURCE.__WCH
  0x00003b30 41525f4d 41585f5f 20307837 66666666 AR_MAX__ 0x7ffff
  0x00003b40 66666600 5f494f5f 42554653 495a205f fff._IO_BUFSIZ _
  0x00003b50 475f4255 4653495a 005f5f46 5346494c G_BUFSIZ.__FSFIL
  0x00003b60 434e545f 545f5459 5045205f 5f535953 CNT_T_TYPE __SYS
  0x00003b70 43414c4c 5f554c4f 4e475f54 59504500 CALL_ULONG_TYPE.
  0x00003b80 5f494f5f 4241445f 5345454e 20307834 _IO_BAD_SEEN 0x4
  0x00003b90 30303000 5f5f7761 726e6174 7472286d 000.__warnattr(m
  0x00003ba0 73672920 5f5f6174 74726962 7574655f sg) __attribute_
  0x00003bb0 5f28285f 5f776172 6e696e67 5f5f2028 _((__warning__ (
  0x00003bc0 6d736729 2929005f 5f494e54 5f574944 msg))).__INT_WID
  0x00003bd0 54485f5f 20333200 5f5f4c44 424c5f44 TH__ 32.__LDBL_D
  0x00003be0 4543494d 414c5f44 49475f5f 20323100 ECIMAL_DIG__ 21.
  0x00003bf0 5f5f4743 435f4154 4f4d4943 5f504f49 __GCC_ATOMIC_POI
  0x00003c00 4e544552 5f4c4f43 4b5f4652 45452032 NTER_LOCK_FREE 2
  0x00003c10 005f5f73 7475625f 5f5f636f 6d706174 .__stub___compat
  0x00003c20 5f626466 6c757368 2000464f 50454e5f _bdflush .FOPEN_
  0x00003c30 4d415800 5f6c6f63 6b005f5f 5345475f MAX._lock.__SEG_
  0x00003c40 46532031 005f5f50 28617267 73292061 FS 1.__P(args) a
  0x00003c50 72677300 5f5f5449 4d455f54 5f545950 rgs.__TIME_T_TYP
  0x00003c60 45205f5f 53595343 414c4c5f 534c4f4e E __SYSCALL_SLON
  0x00003c70 475f5459 5045005f 5f55494e 545f4641 G_TYPE.__UINT_FA
  0x00003c80 53543136 5f545950 455f5f20 6c6f6e67 ST16_TYPE__ long
  0x00003c90 20756e73 69676e65 6420696e 74005f5f  unsigned int.__
  0x00003ca0 474c4942 435f5f20 32005f49 4f5f7374 GLIBC__ 2._IO_st
  0x00003cb0 646f7574 2028285f 494f5f46 494c452a dout ((_IO_FILE*
  0x00003cc0 2928265f 494f5f32 5f315f73 74646f75 )(&_IO_2_1_stdou
  0x00003cd0 745f2929 005f5f55 5345525f 4c414245 t_)).__USER_LABE
  0x00003ce0 4c5f5052 45464958 5f5f2000 5f494f5f L_PREFIX__ ._IO_
  0x00003cf0 7069645f 74205f5f 7069645f 74005f5f pid_t __pid_t.__
  0x00003d00 676c6962 635f6d61 63726f5f 7761726e glibc_macro_warn
  0x00003d10 696e6731 286d6573 73616765 29205f50 ing1(message) _P
  0x00003d20 7261676d 61202823 6d657373 61676529 ragma (#message)
  0x00003d30 005f5f47 43435f41 544f4d49 435f4348 .__GCC_ATOMIC_CH
  0x00003d40 41523332 5f545f4c 4f434b5f 46524545 AR32_T_LOCK_FREE
  0x00003d50 2032005f 6f6c645f 6f666673 6574005f  2._old_offset._
  0x00003d60 494f5f46 494c4500 5f494f5f 554e4255 IO_FILE._IO_UNBU
  0x00003d70 46464552 45442032 005f5f43 4841525f FFERED 2.__CHAR_
  0x00003d80 4249545f 5f203800 5f5f434c 4f434b5f BIT__ 8.__CLOCK_
  0x00003d90 545f5459 5045205f 5f535953 43414c4c T_TYPE __SYSCALL
  0x00003da0 5f534c4f 4e475f54 59504500 5f5f4154 _SLONG_TYPE.__AT
  0x00003db0 4f4d4943 5f484c45 5f414351 55495245 OMIC_HLE_ACQUIRE
  0x00003dc0 20363535 3336005f 494f5f73 73697a65  65536._IO_ssize
  0x00003dd0 5f74205f 5f737369 7a655f74 005f5f53 _t __ssize_t.__S
  0x00003de0 5444435f 484f5354 45445f5f 2031005f TDC_HOSTED__ 1._
  0x00003df0 5f53495a 455f5749 4454485f 5f203634 _SIZE_WIDTH__ 64
  0x00003e00 005f5f52 45444952 4543545f 4c44424c .__REDIRECT_LDBL
  0x00003e10 286e616d 652c7072 6f746f2c 616c6961 (name,proto,alia
  0x00003e20 7329205f 5f524544 49524543 5420286e s) __REDIRECT (n
  0x00003e30 616d652c 2070726f 746f2c20 616c6961 ame, proto, alia
  0x00003e40 7329005f 5f616c77 6179735f 696e6c69 s).__always_inli
  0x00003e50 6e65005f 5f686173 5f696e63 6c756465 ne.__has_include
  0x00003e60 28535452 29205f5f 6861735f 696e636c (STR) __has_incl
  0x00003e70 7564655f 5f285354 5229005f 5f6e6565 ude__(STR).__nee
  0x00003e80 645f5f5f 76615f6c 69737420 005f5f41 d___va_list .__A
  0x00003e90 534d4e41 4d453228 70726566 69782c63 SMNAME2(prefix,c
  0x00003ea0 6e616d65 29205f5f 53545249 4e472028 name) __STRING (
  0x00003eb0 70726566 69782920 636e616d 65005f49 prefix) cname._I
  0x00003ec0 4f5f5343 49454e54 49464943 20303430 O_SCIENTIFIC 040
  0x00003ed0 3030005f 494f5f70 65656b63 5f756e6c 00._IO_peekc_unl
  0x00003ee0 6f636b65 64285f66 70292028 5f494f5f ocked(_fp) (_IO_
  0x00003ef0 42452028 285f6670 292d3e5f 494f5f72 BE ((_fp)->_IO_r
  0x00003f00 6561645f 70747220 3e3d2028 5f667029 ead_ptr >= (_fp)
  0x00003f10 2d3e5f49 4f5f7265 61645f65 6e642c20 ->_IO_read_end, 
  0x00003f20 30292026 26205f5f 756e6465 72666c6f 0) && __underflo
  0x00003f30 7720285f 66702920 3d3d2045 4f46203f w (_fp) == EOF ?
  0x00003f40 20454f46 203a202a 28756e73 69676e65  EOF : *(unsigne
  0x00003f50 64206368 6172202a 2920285f 6670292d d char *) (_fp)-
  0x00003f60 3e5f494f 5f726561 645f7074 7229005f >_IO_read_ptr)._
  0x00003f70 5f4c4f4e 475f5749 4454485f 5f203634 _LONG_WIDTH__ 64
  0x00003f80 005f5f55 494e5436 345f4d41 585f5f20 .__UINT64_MAX__ 
  0x00003f90 30786666 66666666 66666666 66666666 0xffffffffffffff
  0x00003fa0 6666554c 005f5f53 51554144 5f545950 ffUL.__SQUAD_TYP
  0x00003fb0 45206c6f 6e672069 6e74005f 5f555345 E long int.__USE
  0x00003fc0 5f584f50 454e324b 58534900 5f5f6174 _XOPEN2KXSI.__at
  0x00003fd0 74726962 7574655f 616c6c6f 635f7369 tribute_alloc_si
  0x00003fe0 7a655f5f 28706172 616d7329 205f5f61 ze__(params) __a
  0x00003ff0 74747269 62757465 5f5f2028 285f5f61 ttribute__ ((__a
  0x00004000 6c6c6f63 5f73697a 655f5f20 70617261 lloc_size__ para
  0x00004010 6d732929 005f494f 5f77696e 745f7420 ms))._IO_wint_t 
  0x00004020 77696e74 5f74005f 5f6b3820 31005f5f wint_t.__k8 1.__
  0x00004030 4743435f 41544f4d 49435f4c 4c4f4e47 GCC_ATOMIC_LLONG
  0x00004040 5f4c4f43 4b5f4652 45452032 005f5f44 _LOCK_FREE 2.__D
  0x00004050 45433634 5f4d494e 5f455850 5f5f2028 EC64_MIN_EXP__ (
  0x00004060 2d333832 29005f5f 72657374 72696374 -382).__restrict
  0x00004070 5f617272 205f5f72 65737472 69637400 _arr __restrict.
  0x00004080 5f5f4154 4f4d4943 5f414351 5f52454c __ATOMIC_ACQ_REL
  0x00004090 2034005f 494f5f66 706f735f 74205f47  4._IO_fpos_t _G
  0x000040a0 5f66706f 735f7400 5f5f6174 74726962 _fpos_t.__attrib
  0x000040b0 7574655f 666f726d 61745f73 7472666d ute_format_strfm
  0x000040c0 6f6e5f5f 28612c62 29205f5f 61747472 on__(a,b) __attr
  0x000040d0 69627574 655f5f20 28285f5f 666f726d ibute__ ((__form
  0x000040e0 61745f5f 20285f5f 73747266 6d6f6e5f at__ (__strfmon_
  0x000040f0 5f2c2061 2c206229 2929005f 5f444543 _, a, b))).__DEC
  0x00004100 33325f4d 494e5f45 58505f5f 20282d39 32_MIN_EXP__ (-9
  0x00004110 3429005f 494f5f46 49584544 20303130 4)._IO_FIXED 010
  0x00004120 30303000 5f5f494e 5436345f 54595045 000.__INT64_TYPE
  0x00004130 5f5f206c 6f6e6720 696e7400 5f5f464c __ long int.__FL
  0x00004140 545f4d49 4e5f5f20 312e3137 35343934 T_MIN__ 1.175494
  0x00004150 33353038 32323238 37353037 39363837 3508222875079687
  0x00004160 33363533 37323232 32343536 38652d33 3653722224568e-3
  0x00004170 3846005f 5f553634 5f545950 4520756e 8F.__U64_TYPE un
  0x00004180 7369676e 6564206c 6f6e6720 696e7400 signed long int.
  0x00004190 5f736275 66005f49 4f5f7661 5f6c6973 _sbuf._IO_va_lis
  0x000041a0 74007374 646f7574 20737464 6f757400 t.stdout stdout.
  0x000041b0 5f5f5553 455f474e 55005f5f 54494d45 __USE_GNU.__TIME
  0x000041c0 525f545f 54595045 20766f69 64202a00 R_T_TYPE void *.
  0x000041d0 5f494f5f 77726974 655f7074 72005f5f _IO_write_ptr.__
  0x000041e0 46585352 5f5f2031 005f5f4c 4541465f FXSR__ 1.__LEAF_
  0x000041f0 41545452 205f5f61 74747269 62757465 ATTR __attribute
  0x00004200 5f5f2028 285f5f6c 6561665f 5f292900 __ ((__leaf__)).
  0x00004210 5f5f494e 54385f54 5950455f 5f207369 __INT8_TYPE__ si
  0x00004220 676e6564 20636861 72005f5f 494e545f gned char.__INT_
  0x00004230 4c454153 5433325f 57494454 485f5f20 LEAST32_WIDTH__ 
  0x00004240 3332005f 5f535953 43414c4c 5f534c4f 32.__SYSCALL_SLO
  0x00004250 4e475f54 59504520 5f5f534c 4f4e4757 NG_TYPE __SLONGW
  0x00004260 4f52445f 54595045 005f5f55 494e544d ORD_TYPE.__UINTM
  0x00004270 41585f4d 41585f5f 20307866 66666666 AX_MAX__ 0xfffff
  0x00004280 66666666 66666666 66666655 4c005f5f fffffffffffUL.__
  0x00004290 676c6962 635f636c 616e675f 70726572 glibc_clang_prer
  0x000042a0 6571286d 616a2c6d 696e2920 30005f49 eq(maj,min) 0._I
  0x000042b0 4f5f6261 636b7570 5f626173 65005f5f O_backup_base.__
  0x000042c0 6c696e75 785f5f20 31005f5f 5049435f linux__ 1.__PIC_
  0x000042d0 5f203200 5f5f494e 545f4c45 41535433 _ 2.__INT_LEAST3
  0x000042e0 325f5459 50455f5f 20696e74 005f5f55 2_TYPE__ int.__U
  0x000042f0 494e545f 4c454153 5436345f 54595045 INT_LEAST64_TYPE
  0x00004300 5f5f206c 6f6e6720 756e7369 676e6564 __ long unsigned
  0x00004310 20696e74 005f494f 5f707574 635f756e  int._IO_putc_un
  0x00004320 6c6f636b 6564285f 63682c5f 66702920 locked(_ch,_fp) 
  0x00004330 285f494f 5f424520 28285f66 70292d3e (_IO_BE ((_fp)->
  0x00004340 5f494f5f 77726974 655f7074 72203e3d _IO_write_ptr >=
  0x00004350 20285f66 70292d3e 5f494f5f 77726974  (_fp)->_IO_writ
  0x00004360 655f656e 642c2030 29203f20 5f5f6f76 e_end, 0) ? __ov
  0x00004370 6572666c 6f772028 5f66702c 2028756e erflow (_fp, (un
  0x00004380 7369676e 65642063 68617229 20285f63 signed char) (_c
  0x00004390 68292920 3a202875 6e736967 6e656420 h)) : (unsigned 
  0x000043a0 63686172 2920282a 285f6670 292d3e5f char) (*(_fp)->_
  0x000043b0 494f5f77 72697465 5f707472 2b2b203d IO_write_ptr++ =
  0x000043c0 20285f63 68292929 005f504f 5349585f  (_ch)))._POSIX_
  0x000043d0 534f5552 43452031 005f494f 5f444f4e SOURCE 1._IO_DON
  0x000043e0 545f434c 4f534520 30313030 30303000 T_CLOSE 0100000.
  0x000043f0 5f5f474c 4942435f 5553455f 4945435f __GLIBC_USE_IEC_
  0x00004400 36303535 395f4246 505f4558 54005f5f 60559_BFP_EXT.__
  0x00004410 53495a45 5f4d4158 5f5f2030 78666666 SIZE_MAX__ 0xfff
  0x00004420 66666666 66666666 66666666 66554c00 fffffffffffffUL.
  0x00004430 5f5f5549 445f545f 54595045 205f5f55 __UID_T_TYPE __U
  0x00004440 33325f54 59504500 5f5f554c 4f4e4757 32_TYPE.__ULONGW
  0x00004450 4f52445f 54595045 20756e73 69676e65 ORD_TYPE unsigne
  0x00004460 64206c6f 6e672069 6e74005f 5f474343 d long int.__GCC
  0x00004470 5f41544f 4d49435f 53484f52 545f4c4f _ATOMIC_SHORT_LO
  0x00004480 434b5f46 52454520 32005f5f 464c5436 CK_FREE 2.__FLT6
  0x00004490 34585f44 4543494d 414c5f44 49475f5f 4X_DECIMAL_DIG__
  0x000044a0 20323100 5345454b 5f534554 2030005f  21.SEEK_SET 0._
  0x000044b0 5f555345 5f584f50 454e5f45 5854454e _USE_XOPEN_EXTEN
  0x000044c0 44454400 5f5f494e 545f4641 53543136 DED.__INT_FAST16
  0x000044d0 5f4d4158 5f5f2030 78376666 66666666 _MAX__ 0x7ffffff
  0x000044e0 66666666 66666666 664c005f 5f464c54 fffffffffL.__FLT
  0x000044f0 5f455053 494c4f4e 5f5f2031 2e313932 _EPSILON__ 1.192
  0x00004500 30393238 39353530 37383132 35303030 0928955078125000
  0x00004510 30303030 30303030 30303030 30303030 0000000000000000
  0x00004520 652d3746 005f5f46 4c543634 5f4d494e e-7F.__FLT64_MIN
  0x00004530 5f455850 5f5f2028 2d313032 3129005f _EXP__ (-1021)._
  0x00004540 494f535f 41505045 4e442038 005f5f47 IOS_APPEND 8.__G
  0x00004550 4c494243 5f494e54 45524e41 4c5f5354 LIBC_INTERNAL_ST
  0x00004560 41525449 4e475f48 45414445 525f494d ARTING_HEADER_IM
  0x00004570 504c454d 454e5441 54494f4e 005f5f46 PLEMENTATION.__F
  0x00004580 4c545f45 56414c5f 4d455448 4f445f54 LT_EVAL_METHOD_T
  0x00004590 535f3138 3636315f 335f5f20 30005f5f S_18661_3__ 0.__
  0x000045a0 44424c5f 4841535f 494e4649 4e495459 DBL_HAS_INFINITY
  0x000045b0 5f5f2031 005f5f61 74747269 62757465 __ 1.__attribute
  0x000045c0 5f776172 6e5f756e 75736564 5f726573 _warn_unused_res
  0x000045d0 756c745f 5f205f5f 61747472 69627574 ult__ __attribut
  0x000045e0 655f5f20 28285f5f 7761726e 5f756e75 e__ ((__warn_unu
  0x000045f0 7365645f 72657375 6c745f5f 2929005f sed_result__))._
  0x00004600 5f494e54 36345f43 28632920 63202323 _INT64_C(c) c ##
  0x00004610 204c005f 5f454e44 5f444543 4c532000  L.__END_DECLS .
  0x00004620 5f5f464c 545f4841 535f5155 4945545f __FLT_HAS_QUIET_
  0x00004630 4e414e5f 5f203100 5f5f5349 5a454f46 NAN__ 1.__SIZEOF
  0x00004640 5f494e54 5f5f2034 005f5f43 4c4f434b _INT__ 4.__CLOCK
  0x00004650 49445f54 5f545950 45205f5f 5333325f ID_T_TYPE __S32_
  0x00004660 54595045 005f5f49 4e545f46 41535431 TYPE.__INT_FAST1
  0x00004670 365f5459 50455f5f 206c6f6e 6720696e 6_TYPE__ long in
  0x00004680 74005f5f 53544443 5f494543 5f353539 t.__STDC_IEC_559
  0x00004690 5f5f2031 005f5f44 45433132 385f5355 __ 1.__DEC128_SU
  0x000046a0 424e4f52 4d414c5f 4d494e5f 5f20302e BNORMAL_MIN__ 0.
  0x000046b0 30303030 30303030 30303030 30303030 0000000000000000
  0x000046c0 30303030 30303030 30303030 30303030 0000000000000000
  0x000046d0 31452d36 31343344 4c005f5f 5553455f 1E-6143DL.__USE_
  0x000046e0 4c415247 4546494c 45005f5f 53495a45 LARGEFILE.__SIZE
  0x000046f0 4f465f46 4c4f4154 38305f5f 20313600 OF_FLOAT80__ 16.
  0x00004700 5f5f464c 54333258 5f484153 5f515549 __FLT32X_HAS_QUI
  0x00004710 45545f4e 414e5f5f 2031005f 5f44424c ET_NAN__ 1.__DBL
  0x00004720 5f4d4158 5f31305f 4558505f 5f203330 _MAX_10_EXP__ 30
  0x00004730 38005f5f 5553455f 4d495343 2031005f 8.__USE_MISC 1._
  0x00004740 5f475858 5f414249 5f564552 53494f4e _GXX_ABI_VERSION
  0x00004750 20313031 31005f5f 7069635f 5f203200  1011.__pic__ 2.
  0x00004760 5f5f4154 4f4d4943 5f52454c 45415345 __ATOMIC_RELEASE
  0x00004770 2033005f 5f535345 5f5f2031 005f494f  3.__SSE__ 1._IO
  0x00004780 5f4e4f5f 52454144 53203400 5f5f474c _NO_READS 4.__GL
  0x00004790 4942435f 5553455f 4945435f 36303535 IBC_USE_IEC_6055
  0x000047a0 395f4655 4e43535f 45585420 30006d61 9_FUNCS_EXT 0.ma
  0x000047b0 696e005f 53495a45 545f2000 5f5f464c in._SIZET_ .__FL
  0x000047c0 54313238 5f44454e 4f524d5f 4d494e5f T128_DENORM_MIN_
  0x000047d0 5f20362e 34373531 37353131 39343338 _ 6.475175119438
  0x000047e0 30323531 31303932 34343338 39353832 0251109244389582
  0x000047f0 32373634 36353565 2d343936 36463132 2764655e-4966F12
  0x00004800 38005f5f 474c4942 435f5553 455f4945 8.__GLIBC_USE_IE
  0x00004810 435f3630 3535395f 4246505f 45585420 C_60559_BFP_EXT 
  0x00004820 30005f5f 73747562 5f726576 6f6b6520 0.__stub_revoke 
  0x00004830 005f5f49 4e544d41 585f5459 50455f5f .__INTMAX_TYPE__
  0x00004840 206c6f6e 6720696e 74005f5f 464c545f  long int.__FLT_
  0x00004850 4d494e5f 4558505f 5f20282d 31323529 MIN_EXP__ (-125)
  0x00004860 005f5f53 53505f53 54524f4e 475f5f20 .__SSP_STRONG__ 
  0x00004870 33005f5f 6572726f 72646563 6c286e61 3.__errordecl(na
  0x00004880 6d652c6d 73672920 65787465 726e2076 me,msg) extern v
  0x00004890 6f696420 6e616d65 2028766f 69642920 oid name (void) 
  0x000048a0 5f5f6174 74726962 7574655f 5f28285f __attribute__((_
  0x000048b0 5f657272 6f725f5f 20286d73 67292929 _error__ (msg)))
  0x000048c0 005f5f44 45433132 385f4d41 585f5f20 .__DEC128_MAX__ 
  0x000048d0 392e3939 39393939 39393939 39393939 9.99999999999999
  0x000048e0 39393939 39393939 39393939 39393939 9999999999999999
  0x000048f0 39393945 36313434 444c005f 5f464c54 999E6144DL.__FLT
  0x00004900 5f4d4158 5f455850 5f5f2031 3238005f _MAX_EXP__ 128._
  0x00004910 494f5f49 535f4649 4c454255 46203078 IO_IS_FILEBUF 0x
  0x00004920 32303030 005f5f4f 46463634 5f545f54 2000.__OFF64_T_T
  0x00004930 59504520 5f5f5351 5541445f 54595045 YPE __SQUAD_TYPE
  0x00004940 005f5f55 53455f49 534f4331 31005f49 .__USE_ISOC11._I
  0x00004950 4f5f5354 44494f20 30343030 3030005f O_STDIO 040000._
  0x00004960 5f444556 5f545f54 59504520 5f5f5551 _DEV_T_TYPE __UQ
  0x00004970 5541445f 54595045 005f5f43 50555f4d UAD_TYPE.__CPU_M
  0x00004980 41534b5f 54595045 205f5f53 59534341 ASK_TYPE __SYSCA
  0x00004990 4c4c5f55 4c4f4e47 5f545950 45005f5f LL_ULONG_TYPE.__
  0x000049a0 55494e54 5f4c4541 53543332 5f4d4158 UINT_LEAST32_MAX
  0x000049b0 5f5f2030 78666666 66666666 6655005f __ 0xffffffffU._
  0x000049c0 494f5f42 45286578 70722c72 65732920 IO_BE(expr,res) 
  0x000049d0 5f5f6275 696c7469 6e5f6578 70656374 __builtin_expect
  0x000049e0 20282865 78707229 2c207265 7329005f  ((expr), res)._
  0x000049f0 5f41534d 4e414d45 28636e61 6d652920 _ASMNAME(cname) 
  0x00004a00 5f5f4153 4d4e414d 45322028 5f5f5553 __ASMNAME2 (__US
  0x00004a10 45525f4c 4142454c 5f505245 4649585f ER_LABEL_PREFIX_
  0x00004a20 5f2c2063 6e616d65 29005f5f 464c5433 _, cname).__FLT3
  0x00004a30 32585f4d 41585f31 305f4558 505f5f20 2X_MAX_10_EXP__ 
  0x00004a40 33303800 5f5f616d 64363420 31005f5f 308.__amd64 1.__
  0x00004a50 574f5244 53495a45 20363400 5f5f756e WORDSIZE 64.__un
  0x00004a60 69782031 005f6368 61696e00 5f5f464c ix 1._chain.__FL
  0x00004a70 5436345f 44454e4f 524d5f4d 494e5f5f T64_DENORM_MIN__
  0x00004a80 20342e39 34303635 36343538 34313234  4.9406564584124
  0x00004a90 36353434 31373635 36383739 32383638 6544176568792868
  0x00004aa0 32323133 3732652d 33323446 3634004c 221372e-324F64.L
  0x00004ab0 5f637465 726d6964 2039005f 5f505452 _ctermid 9.__PTR
  0x00004ac0 44494646 5f545950 455f5f20 6c6f6e67 DIFF_TYPE__ long
  0x00004ad0 20696e74 005f5f46 4c543332 5f4d4158  int.__FLT32_MAX
  0x00004ae0 5f31305f 4558505f 5f203338 005f5f57 _10_EXP__ 38.__W
  0x00004af0 4f524453 495a455f 54494d45 36345f43 ORDSIZE_TIME64_C
  0x00004b00 4f4d5041 54333220 31005f5f 464c5431 OMPAT32 1.__FLT1
  0x00004b10 32385f44 4543494d 414c5f44 49475f5f 28_DECIMAL_DIG__
  0x00004b20 20333600 5f5f5054 52444946 465f5749  36.__PTRDIFF_WI
  0x00004b30 4454485f 5f203634 005f5f49 4e545f4c DTH__ 64.__INT_L
  0x00004b40 45415354 33325f4d 41585f5f 20307837 EAST32_MAX__ 0x7
  0x00004b50 66666666 66666600 5f5f5549 4e545f46 fffffff.__UINT_F
  0x00004b60 41535436 345f5459 50455f5f 206c6f6e AST64_TYPE__ lon
  0x00004b70 6720756e 7369676e 65642069 6e74005f g unsigned int._
  0x00004b80 5f737475 625f7373 746b2000 5f494f5f _stub_sstk ._IO_
  0x00004b90 66706f73 36345f74 205f475f 66706f73 fpos64_t _G_fpos
  0x00004ba0 36345f74 005f5f54 48524f57 4e4c205f 64_t.__THROWNL _
  0x00004bb0 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00004bc0 5f6e6f74 68726f77 5f5f2929 005f5f4c _nothrow__)).__L
  0x00004bd0 44424c5f 4d41585f 31305f45 58505f5f DBL_MAX_10_EXP__
  0x00004be0 20343933 32005f5f 44454336 345f4d49  4932.__DEC64_MI
  0x00004bf0 4e5f5f20 31452d33 38334444 005f5f46 N__ 1E-383DD.__F
  0x00004c00 4c543332 5f4d4158 5f5f2033 2e343032 LT32_MAX__ 3.402
  0x00004c10 38323334 36363338 35323838 35393831 8234663852885981
  0x00004c20 31373034 31383334 38343531 36393235 1704183484516925
  0x00004c30 652b3338 46333200 5f5f4442 4c5f4550 e+38F32.__DBL_EP
  0x00004c40 53494c4f 4e5f5f20 2828646f 75626c65 SILON__ ((double
  0x00004c50 29322e32 32303434 36303439 32353033 )2.2204460492503
  0x00004c60 31333038 30383437 32363333 33363138 1308084726333618
  0x00004c70 31363430 3632652d 31364c29 005f6375 164062e-16L)._cu
  0x00004c80 725f636f 6c756d6e 005f5f50 5241474d r_column.__PRAGM
  0x00004c90 415f5245 44454649 4e455f45 58544e41 A_REDEFINE_EXTNA
  0x00004ca0 4d452031 005f5f53 49475f41 544f4d49 ME 1.__SIG_ATOMI
  0x00004cb0 435f5459 50455f5f 20696e74 005f5f46 C_TYPE__ int.__F
  0x00004cc0 4c543634 585f4445 4e4f524d 5f4d494e LT64X_DENORM_MIN
  0x00004cd0 5f5f2033 2e363435 31393935 33313838 __ 3.64519953188
  0x00004ce0 32343734 36303235 32383430 35393333 2474602528405933
  0x00004cf0 36313934 31393832 652d3439 35314636 61941982e-4951F6
  0x00004d00 3478005f 5f555345 5f504f53 4958005f 4x.__USE_POSIX._
  0x00004d10 5f464c54 3132385f 4841535f 44454e4f _FLT128_HAS_DENO
  0x00004d20 524d5f5f 2031005f 494f5f43 55525245 RM__ 1._IO_CURRE
  0x00004d30 4e544c59 5f505554 54494e47 20307838 NTLY_PUTTING 0x8
  0x00004d40 3030005f 5f44424c 5f444543 494d414c 00.__DBL_DECIMAL
  0x00004d50 5f444947 5f5f2031 37005f5f 4c44424c _DIG__ 17.__LDBL
  0x00004d60 5f484153 5f44454e 4f524d5f 5f203100 _HAS_DENORM__ 1.
  0x00004d70 5f756e75 73656432 005f494f 5f627566 _unused2._IO_buf
  0x00004d80 5f626173 65005f5f 73747562 5f6c6368 _base.__stub_lch
  0x00004d90 6d6f6420 005f5f46 4c543634 5f4d414e mod .__FLT64_MAN
  0x00004da0 545f4449 475f5f20 3533005f 5f444543 T_DIG__ 53.__DEC
  0x00004db0 36345f4d 414e545f 4449475f 5f203136 64_MANT_DIG__ 16
  0x00004dc0 005f5f46 4c545f48 41535f44 454e4f52 .__FLT_HAS_DENOR
  0x00004dd0 4d5f5f20 31005f5f 44454349 4d414c5f M__ 1.__DECIMAL_
  0x00004de0 4449475f 5f203231 00                DIG__ 21.

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_import - offset : 0x10f
 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: mult_int.c
 DW_MACRO_start_file - lineno: 31 filenum: 7 filename: /usr/x86_64-linux-gnu/include/stdc-predef.h
 DW_MACRO_import - offset : 0x917
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 1 filenum: 5 filename: /usr/x86_64-linux-gnu/include/stdio.h
 DW_MACRO_import - offset : 0x939
 DW_MACRO_start_file - lineno: 27 filenum: 8 filename: /usr/x86_64-linux-gnu/include/bits/libc-header-start.h
 DW_MACRO_undef_strp - lineno : 31 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION
 DW_MACRO_start_file - lineno: 33 filenum: 9 filename: /usr/x86_64-linux-gnu/include/features.h
 DW_MACRO_import - offset : 0x949
 DW_MACRO_start_file - lineno: 424 filenum: 10 filename: /usr/x86_64-linux-gnu/include/sys/cdefs.h
 DW_MACRO_import - offset : 0xae7
 DW_MACRO_start_file - lineno: 427 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 428 filenum: 12 filename: /usr/x86_64-linux-gnu/include/bits/long-double.h
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xc65
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 448 filenum: 13 filename: /usr/x86_64-linux-gnu/include/gnu/stubs.h
 DW_MACRO_start_file - lineno: 10 filenum: 14 filename: /usr/x86_64-linux-gnu/include/gnu/stubs-64.h
 DW_MACRO_import - offset : 0xcaf
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd07
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd3b
 DW_MACRO_start_file - lineno: 33 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xd4b
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 35 filenum: 3 filename: /usr/x86_64-linux-gnu/include/bits/types.h
 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPES_H 1
 DW_MACRO_start_file - lineno: 27 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xde2
 DW_MACRO_start_file - lineno: 130 filenum: 15 filename: /usr/x86_64-linux-gnu/include/bits/typesizes.h
 DW_MACRO_import - offset : 0xe40
 DW_MACRO_end_file
 DW_MACRO_undef_strp - lineno : 204 macro : __STD_TYPE
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 36 filenum: 16 filename: /usr/x86_64-linux-gnu/include/bits/types/__FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : ____FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 37 filenum: 17 filename: /usr/x86_64-linux-gnu/include/bits/types/FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : __FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_define_strp - lineno : 39 macro : _STDIO_USES_IOSTREAM 
 DW_MACRO_start_file - lineno: 41 filenum: 4 filename: /usr/x86_64-linux-gnu/include/bits/libio.h
 DW_MACRO_define_strp - lineno : 29 macro : _BITS_LIBIO_H 1
 DW_MACRO_start_file - lineno: 35 filenum: 18 filename: /usr/x86_64-linux-gnu/include/bits/_G_config.h
 DW_MACRO_import - offset : 0xf2e
 DW_MACRO_start_file - lineno: 19 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xf44
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 21 filenum: 19 filename: /usr/x86_64-linux-gnu/include/bits/types/__mbstate_t.h
 DW_MACRO_define_strp - lineno : 2 macro : ____mbstate_t_defined 1
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf64
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf8c
 DW_MACRO_start_file - lineno: 53 filenum: 20 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h
 DW_MACRO_import - offset : 0xfe4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xff4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x11c0
 DW_MACRO_start_file - lineno: 131 filenum: 21 filename: /usr/x86_64-linux-gnu/include/bits/stdio_lim.h
 DW_MACRO_import - offset : 0x1206
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x1234
 DW_MACRO_start_file - lineno: 781 filenum: 6 filename: /usr/x86_64-linux-gnu/include/bits/sys_errlist.h
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file

  Offset:                      0x10f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 0 macro : __STDC__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_VERSION__ 201112L
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_16__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_32__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_HOSTED__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_MINOR__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_PATCHLEVEL__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __VERSION__ "7.3.0"
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELAXED 0
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_SEQ_CST 5
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQUIRE 2
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELEASE 3
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQ_REL 4
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_CONSUME 1
 DW_MACRO_define_strp - lineno : 0 macro : __pic__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIC__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __pie__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIE__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FINITE_MATH_ONLY__ 0
 DW_MACRO_define_strp - lineno : 0 macro : _LP64 1
 DW_MACRO_define_strp - lineno : 0 macro : __LP64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SHORT__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_DOUBLE__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SIZE_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR_BIT__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412
 DW_MACRO_define_strp - lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_POINTER__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __has_include(STR) __has_include__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __has_include_next(STR) __has_include_next__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __GXX_ABI_VERSION 1011
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_MAX__ 0x7fffffffffffffffLL
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MIN__ 0U
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_C(c) c ## U
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559_COMPLEX 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD_TS_18661_3__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __DEC_EVAL_METHOD__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_RADIX__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MANT_DIG__ 113
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DIG__ 33
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DECIMAL_DIG__ 36
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MANT_DIG__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN_EXP__ (-94)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX_EXP__ 97
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN__ 1E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX__ 9.999999E96DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_EPSILON__ 1E-6DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MANT_DIG__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN_EXP__ (-382)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX_EXP__ 385
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN__ 1E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX__ 9.999999999999999E384DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_EPSILON__ 1E-15DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MANT_DIG__ 34
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN_EXP__ (-6142)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX_EXP__ 6145
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN__ 1E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_EPSILON__ 1E-33DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __REGISTER_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __USER_LABEL_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_STDC_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __NO_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_DWARF2_CFI_ASM 1
 DW_MACRO_define_strp - lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSP_STRONG__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WCHAR_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WINT_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __amd64 1
 DW_MACRO_define_strp - lineno : 0 macro : __amd64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT80__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_ACQUIRE 65536
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_RELEASE 131072
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __code_model_small__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __MMX__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FXSR__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_FS 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_GS 1
 DW_MACRO_define_strp - lineno : 0 macro : __gnu_linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix__ 1
 DW_MACRO_define_strp - lineno : 0 macro : unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __ELF__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_BID_FORMAT__ 1

  Offset:                      0x917
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _STDC_PREDEF_H 1
 DW_MACRO_define_strp - lineno : 38 macro : __STDC_IEC_559__ 1
 DW_MACRO_define_strp - lineno : 46 macro : __STDC_IEC_559_COMPLEX__ 1
 DW_MACRO_define_strp - lineno : 58 macro : __STDC_ISO_10646__ 201706L
 DW_MACRO_define_strp - lineno : 61 macro : __STDC_NO_THREADS__ 1

  Offset:                      0x939
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _STDIO_H 1
 DW_MACRO_define_strp - lineno : 26 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION 

  Offset:                      0x949
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _FEATURES_H 1
 DW_MACRO_undef_strp - lineno : 119 macro : __USE_ISOC11
 DW_MACRO_undef_strp - lineno : 120 macro : __USE_ISOC99
 DW_MACRO_undef_strp - lineno : 121 macro : __USE_ISOC95
 DW_MACRO_undef_strp - lineno : 122 macro : __USE_ISOCXX11
 DW_MACRO_undef_strp - lineno : 123 macro : __USE_POSIX
 DW_MACRO_undef_strp - lineno : 124 macro : __USE_POSIX2
 DW_MACRO_undef_strp - lineno : 125 macro : __USE_POSIX199309
 DW_MACRO_undef_strp - lineno : 126 macro : __USE_POSIX199506
 DW_MACRO_undef_strp - lineno : 127 macro : __USE_XOPEN
 DW_MACRO_undef_strp - lineno : 128 macro : __USE_XOPEN_EXTENDED
 DW_MACRO_undef_strp - lineno : 129 macro : __USE_UNIX98
 DW_MACRO_undef_strp - lineno : 130 macro : __USE_XOPEN2K
 DW_MACRO_undef_strp - lineno : 131 macro : __USE_XOPEN2KXSI
 DW_MACRO_undef_strp - lineno : 132 macro : __USE_XOPEN2K8
 DW_MACRO_undef_strp - lineno : 133 macro : __USE_XOPEN2K8XSI
 DW_MACRO_undef_strp - lineno : 134 macro : __USE_LARGEFILE
 DW_MACRO_undef_strp - lineno : 135 macro : __USE_LARGEFILE64
 DW_MACRO_undef_strp - lineno : 136 macro : __USE_FILE_OFFSET64
 DW_MACRO_undef_strp - lineno : 137 macro : __USE_MISC
 DW_MACRO_undef_strp - lineno : 138 macro : __USE_ATFILE
 DW_MACRO_undef_strp - lineno : 139 macro : __USE_GNU
 DW_MACRO_undef_strp - lineno : 140 macro : __USE_FORTIFY_LEVEL
 DW_MACRO_undef_strp - lineno : 141 macro : __KERNEL_STRICT_NAMES
 DW_MACRO_undef_strp - lineno : 142 macro : __GLIBC_USE_DEPRECATED_GETS
 DW_MACRO_define_strp - lineno : 147 macro : __KERNEL_STRICT_NAMES 
 DW_MACRO_define_strp - lineno : 158 macro : __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
 DW_MACRO_define_strp - lineno : 172 macro : __glibc_clang_prereq(maj,min) 0
 DW_MACRO_define_strp - lineno : 176 macro : __GLIBC_USE(F) __GLIBC_USE_ ## F
 DW_MACRO_undef_strp - lineno : 220 macro : _DEFAULT_SOURCE
 DW_MACRO_define_strp - lineno : 221 macro : _DEFAULT_SOURCE 1
 DW_MACRO_define_strp - lineno : 227 macro : __USE_ISOC11 1
 DW_MACRO_define_strp - lineno : 233 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 239 macro : __USE_ISOC95 1
 DW_MACRO_define_strp - lineno : 260 macro : __USE_POSIX_IMPLICITLY 1
 DW_MACRO_undef_strp - lineno : 262 macro : _POSIX_SOURCE
 DW_MACRO_define_strp - lineno : 263 macro : _POSIX_SOURCE 1
 DW_MACRO_undef_strp - lineno : 264 macro : _POSIX_C_SOURCE
 DW_MACRO_define_strp - lineno : 265 macro : _POSIX_C_SOURCE 200809L
 DW_MACRO_define_strp - lineno : 300 macro : __USE_POSIX 1
 DW_MACRO_define_strp - lineno : 304 macro : __USE_POSIX2 1
 DW_MACRO_define_strp - lineno : 308 macro : __USE_POSIX199309 1
 DW_MACRO_define_strp - lineno : 312 macro : __USE_POSIX199506 1
 DW_MACRO_define_strp - lineno : 316 macro : __USE_XOPEN2K 1
 DW_MACRO_undef_strp - lineno : 317 macro : __USE_ISOC95
 DW_MACRO_define_strp - lineno : 318 macro : __USE_ISOC95 1
 DW_MACRO_undef_strp - lineno : 319 macro : __USE_ISOC99
 DW_MACRO_define_strp - lineno : 320 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 324 macro : __USE_XOPEN2K8 1
 DW_MACRO_undef_strp - lineno : 325 macro : _ATFILE_SOURCE
 DW_MACRO_define_strp - lineno : 326 macro : _ATFILE_SOURCE 1
 DW_MACRO_define_strp - lineno : 368 macro : __USE_MISC 1
 DW_MACRO_define_strp - lineno : 372 macro : __USE_ATFILE 1
 DW_MACRO_define_strp - lineno : 387 macro : __USE_FORTIFY_LEVEL 0
 DW_MACRO_define_strp - lineno : 395 macro : __GLIBC_USE_DEPRECATED_GETS 0
 DW_MACRO_undef_strp - lineno : 410 macro : __GNU_LIBRARY__
 DW_MACRO_define_strp - lineno : 411 macro : __GNU_LIBRARY__ 6
 DW_MACRO_define_strp - lineno : 415 macro : __GLIBC__ 2
 DW_MACRO_define_strp - lineno : 416 macro : __GLIBC_MINOR__ 27
 DW_MACRO_define_strp - lineno : 418 macro : __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))

  Offset:                      0xae7
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _SYS_CDEFS_H 1
 DW_MACRO_undef - lineno : 34 macro : __P
 DW_MACRO_undef_strp - lineno : 35 macro : __PMT
 DW_MACRO_define_strp - lineno : 42 macro : __LEAF , __leaf__
 DW_MACRO_define_strp - lineno : 43 macro : __LEAF_ATTR __attribute__ ((__leaf__))
 DW_MACRO_define_strp - lineno : 55 macro : __THROW __attribute__ ((__nothrow__ __LEAF))
 DW_MACRO_define_strp - lineno : 56 macro : __THROWNL __attribute__ ((__nothrow__))
 DW_MACRO_define_strp - lineno : 57 macro : __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
 DW_MACRO_define_strp - lineno : 58 macro : __NTHNL(fct) __attribute__ ((__nothrow__)) fct
 DW_MACRO_define_strp - lineno : 89 macro : __glibc_clang_has_extension(ext) 0
 DW_MACRO_define_strp - lineno : 94 macro : __P(args) args
 DW_MACRO_define_strp - lineno : 95 macro : __PMT(args) args
 DW_MACRO_define_strp - lineno : 100 macro : __CONCAT(x,y) x ## y
 DW_MACRO_define_strp - lineno : 101 macro : __STRING(x) #x
 DW_MACRO_define_strp - lineno : 104 macro : __ptr_t void *
 DW_MACRO_define_strp - lineno : 112 macro : __BEGIN_DECLS 
 DW_MACRO_define_strp - lineno : 113 macro : __END_DECLS 
 DW_MACRO_define_strp - lineno : 118 macro : __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
 DW_MACRO_define_strp - lineno : 119 macro : __bos0(ptr) __builtin_object_size (ptr, 0)
 DW_MACRO_define_strp - lineno : 122 macro : __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 124 macro : __warnattr(msg) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 125 macro : __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
 DW_MACRO_define_strp - lineno : 138 macro : __flexarr []
 DW_MACRO_define_strp - lineno : 139 macro : __glibc_c99_flexarr_available 1
 DW_MACRO_define_strp - lineno : 169 macro : __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
 DW_MACRO_define_strp - lineno : 176 macro : __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
 DW_MACRO_define_strp - lineno : 178 macro : __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
 DW_MACRO_define_strp - lineno : 181 macro : __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
 DW_MACRO_define_strp - lineno : 182 macro : __ASMNAME2(prefix,cname) __STRING (prefix) cname
 DW_MACRO_define_strp - lineno : 203 macro : __attribute_malloc__ __attribute__ ((__malloc__))
 DW_MACRO_define_strp - lineno : 211 macro : __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
 DW_MACRO_define_strp - lineno : 221 macro : __attribute_pure__ __attribute__ ((__pure__))
 DW_MACRO_define_strp - lineno : 228 macro : __attribute_const__ __attribute__ ((__const__))
 DW_MACRO_define_strp - lineno : 237 macro : __attribute_used__ __attribute__ ((__used__))
 DW_MACRO_define_strp - lineno : 238 macro : __attribute_noinline__ __attribute__ ((__noinline__))
 DW_MACRO_define_strp - lineno : 246 macro : __attribute_deprecated__ __attribute__ ((__deprecated__))
 DW_MACRO_define_strp - lineno : 256 macro : __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
 DW_MACRO_define_strp - lineno : 269 macro : __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
 DW_MACRO_define_strp - lineno : 279 macro : __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
 DW_MACRO_define_strp - lineno : 288 macro : __nonnull(params) __attribute__ ((__nonnull__ params))
 DW_MACRO_define_strp - lineno : 296 macro : __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
 DW_MACRO_define_strp - lineno : 305 macro : __wur 
 DW_MACRO_undef_strp - lineno : 313 macro : __always_inline
 DW_MACRO_define_strp - lineno : 314 macro : __always_inline __inline __attribute__ ((__always_inline__))
 DW_MACRO_define_strp - lineno : 323 macro : __attribute_artificial__ __attribute__ ((__artificial__))
 DW_MACRO_define_strp - lineno : 341 macro : __extern_inline extern __inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 342 macro : __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 351 macro : __fortify_function __extern_always_inline __attribute_artificial__
 DW_MACRO_define_strp - lineno : 357 macro : __va_arg_pack() __builtin_va_arg_pack ()
 DW_MACRO_define_strp - lineno : 358 macro : __va_arg_pack_len() __builtin_va_arg_pack_len ()
 DW_MACRO_define_strp - lineno : 378 macro : __restrict_arr __restrict
 DW_MACRO_define_strp - lineno : 393 macro : __glibc_unlikely(cond) __builtin_expect ((cond), 0)
 DW_MACRO_define_strp - lineno : 394 macro : __glibc_likely(cond) __builtin_expect ((cond), 1)
 DW_MACRO_define_strp - lineno : 416 macro : __attribute_nonstring__ 

  Offset:                      0xc4f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 4 macro : __WORDSIZE 64
 DW_MACRO_define_strp - lineno : 12 macro : __WORDSIZE_TIME64_COMPAT32 1
 DW_MACRO_define_strp - lineno : 14 macro : __SYSCALL_WORDSIZE 64

  Offset:                      0xc65
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 450 macro : __LDBL_REDIR1(name,proto,alias) name proto
 DW_MACRO_define_strp - lineno : 451 macro : __LDBL_REDIR(name,proto) name proto
 DW_MACRO_define_strp - lineno : 452 macro : __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
 DW_MACRO_define_strp - lineno : 453 macro : __LDBL_REDIR_NTH(name,proto) name proto __THROW
 DW_MACRO_define_strp - lineno : 454 macro : __LDBL_REDIR_DECL(name) 
 DW_MACRO_define_strp - lineno : 456 macro : __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
 DW_MACRO_define_strp - lineno : 457 macro : __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
 DW_MACRO_define_strp - lineno : 468 macro : __glibc_macro_warning1(message) _Pragma (#message)
 DW_MACRO_define_strp - lineno : 469 macro : __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
 DW_MACRO_define_strp - lineno : 487 macro : __HAVE_GENERIC_SELECTION 1

  Offset:                      0xcaf
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 10 macro : __stub___compat_bdflush 
 DW_MACRO_define_strp - lineno : 11 macro : __stub_chflags 
 DW_MACRO_define_strp - lineno : 12 macro : __stub_fattach 
 DW_MACRO_define_strp - lineno : 13 macro : __stub_fchflags 
 DW_MACRO_define_strp - lineno : 14 macro : __stub_fdetach 
 DW_MACRO_define_strp - lineno : 15 macro : __stub_getmsg 
 DW_MACRO_define_strp - lineno : 16 macro : __stub_gtty 
 DW_MACRO_define_strp - lineno : 17 macro : __stub_lchmod 
 DW_MACRO_define_strp - lineno : 18 macro : __stub_putmsg 
 DW_MACRO_define_strp - lineno : 19 macro : __stub_revoke 
 DW_MACRO_define_strp - lineno : 20 macro : __stub_setlogin 
 DW_MACRO_define_strp - lineno : 21 macro : __stub_sigreturn 
 DW_MACRO_define_strp - lineno : 22 macro : __stub_sstk 
 DW_MACRO_define_strp - lineno : 23 macro : __stub_stty 

  Offset:                      0xd07
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 37 macro : __GLIBC_USE_LIB_EXT2
 DW_MACRO_define_strp - lineno : 42 macro : __GLIBC_USE_LIB_EXT2 0
 DW_MACRO_undef_strp - lineno : 47 macro : __GLIBC_USE_IEC_60559_BFP_EXT
 DW_MACRO_define_strp - lineno : 51 macro : __GLIBC_USE_IEC_60559_BFP_EXT 0
 DW_MACRO_undef_strp - lineno : 56 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT
 DW_MACRO_define_strp - lineno : 60 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT 0
 DW_MACRO_undef_strp - lineno : 65 macro : __GLIBC_USE_IEC_60559_TYPES_EXT
 DW_MACRO_define_strp - lineno : 69 macro : __GLIBC_USE_IEC_60559_TYPES_EXT 0

  Offset:                      0xd3b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 31 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 32 macro : __need_NULL 

  Offset:                      0xd4b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 187 macro : __size_t__ 
 DW_MACRO_define_strp - lineno : 188 macro : __SIZE_T__ 
 DW_MACRO_define_strp - lineno : 189 macro : _SIZE_T 
 DW_MACRO_define_strp - lineno : 190 macro : _SYS_SIZE_T_H 
 DW_MACRO_define_strp - lineno : 191 macro : _T_SIZE_ 
 DW_MACRO_define_strp - lineno : 192 macro : _T_SIZE 
 DW_MACRO_define_strp - lineno : 193 macro : __SIZE_T 
 DW_MACRO_define_strp - lineno : 194 macro : _SIZE_T_ 
 DW_MACRO_define_strp - lineno : 195 macro : _BSD_SIZE_T_ 
 DW_MACRO_define_strp - lineno : 196 macro : _SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 197 macro : _SIZE_T_DEFINED 
 DW_MACRO_define_strp - lineno : 198 macro : _BSD_SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 199 macro : _SIZE_T_DECLARED 
 DW_MACRO_define_strp - lineno : 200 macro : ___int_size_t_h 
 DW_MACRO_define_strp - lineno : 201 macro : _GCC_SIZE_T 
 DW_MACRO_define_strp - lineno : 202 macro : _SIZET_ 
 DW_MACRO_define_strp - lineno : 210 macro : __size_t 
 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xde2
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 98 macro : __S16_TYPE short int
 DW_MACRO_define_strp - lineno : 99 macro : __U16_TYPE unsigned short int
 DW_MACRO_define_strp - lineno : 100 macro : __S32_TYPE int
 DW_MACRO_define_strp - lineno : 101 macro : __U32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 102 macro : __SLONGWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 103 macro : __ULONGWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 117 macro : __SQUAD_TYPE long int
 DW_MACRO_define_strp - lineno : 118 macro : __UQUAD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 119 macro : __SWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 120 macro : __UWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 121 macro : __SLONG32_TYPE int
 DW_MACRO_define_strp - lineno : 122 macro : __ULONG32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 123 macro : __S64_TYPE long int
 DW_MACRO_define_strp - lineno : 124 macro : __U64_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 126 macro : __STD_TYPE typedef

  Offset:                      0xe40
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPESIZES_H 1
 DW_MACRO_define_strp - lineno : 34 macro : __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 35 macro : __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 38 macro : __DEV_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 39 macro : __UID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 40 macro : __GID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 41 macro : __INO_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 42 macro : __INO64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 43 macro : __MODE_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 45 macro : __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 46 macro : __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 51 macro : __OFF_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 52 macro : __OFF64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 53 macro : __PID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 54 macro : __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 55 macro : __RLIM64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 56 macro : __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 57 macro : __BLKCNT64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 58 macro : __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 59 macro : __FSBLKCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 60 macro : __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 61 macro : __FSFILCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 62 macro : __ID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 63 macro : __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 64 macro : __TIME_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 65 macro : __USECONDS_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 66 macro : __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 67 macro : __DADDR_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 68 macro : __KEY_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 69 macro : __CLOCKID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 70 macro : __TIMER_T_TYPE void *
 DW_MACRO_define_strp - lineno : 71 macro : __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 72 macro : __FSID_T_TYPE struct { int __val[2]; }
 DW_MACRO_define_strp - lineno : 73 macro : __SSIZE_T_TYPE __SWORD_TYPE
 DW_MACRO_define_strp - lineno : 74 macro : __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 80 macro : __OFF_T_MATCHES_OFF64_T 1
 DW_MACRO_define_strp - lineno : 83 macro : __INO_T_MATCHES_INO64_T 1
 DW_MACRO_define_strp - lineno : 86 macro : __RLIM_T_MATCHES_RLIM64_T 1
 DW_MACRO_define_strp - lineno : 92 macro : __FD_SETSIZE 1024

  Offset:                      0xf2e
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 5 macro : _BITS_G_CONFIG_H 1
 DW_MACRO_define_strp - lineno : 14 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 18 macro : __need_NULL 

  Offset:                      0xf44
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xf64
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 51 macro : _G_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 53 macro : _G_HAVE_MMAP 1
 DW_MACRO_define_strp - lineno : 54 macro : _G_HAVE_MREMAP 1
 DW_MACRO_define_strp - lineno : 56 macro : _G_IO_IO_FILE_VERSION 0x20001
 DW_MACRO_define_strp - lineno : 59 macro : _G_HAVE_ST_BLKSIZE defined (_STATBUF_ST_BLKSIZE)
 DW_MACRO_define_strp - lineno : 61 macro : _G_BUFSIZ 8192

  Offset:                      0xf8c
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 37 macro : _IO_fpos_t _G_fpos_t
 DW_MACRO_define_strp - lineno : 38 macro : _IO_fpos64_t _G_fpos64_t
 DW_MACRO_define_strp - lineno : 39 macro : _IO_size_t size_t
 DW_MACRO_define_strp - lineno : 40 macro : _IO_ssize_t __ssize_t
 DW_MACRO_define_strp - lineno : 41 macro : _IO_off_t __off_t
 DW_MACRO_define_strp - lineno : 42 macro : _IO_off64_t __off64_t
 DW_MACRO_define_strp - lineno : 43 macro : _IO_pid_t __pid_t
 DW_MACRO_define_strp - lineno : 44 macro : _IO_uid_t __uid_t
 DW_MACRO_define_strp - lineno : 45 macro : _IO_iconv_t _G_iconv_t
 DW_MACRO_define_strp - lineno : 46 macro : _IO_HAVE_ST_BLKSIZE _G_HAVE_ST_BLKSIZE
 DW_MACRO_define_strp - lineno : 47 macro : _IO_BUFSIZ _G_BUFSIZ
 DW_MACRO_define_strp - lineno : 48 macro : _IO_va_list _G_va_list
 DW_MACRO_define_strp - lineno : 49 macro : _IO_wint_t wint_t
 DW_MACRO_define_strp - lineno : 52 macro : __need___va_list 

  Offset:                      0xfe4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 34 macro : __need___va_list
 DW_MACRO_define_strp - lineno : 39 macro : __GNUC_VA_LIST 

  Offset:                      0xff4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 55 macro : _IO_va_list
 DW_MACRO_define_strp - lineno : 56 macro : _IO_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 63 macro : _IO_UNIFIED_JUMPTABLES 1
 DW_MACRO_define_strp - lineno : 66 macro : EOF (-1)
 DW_MACRO_define_strp - lineno : 81 macro : _IOS_INPUT 1
 DW_MACRO_define_strp - lineno : 82 macro : _IOS_OUTPUT 2
 DW_MACRO_define_strp - lineno : 83 macro : _IOS_ATEND 4
 DW_MACRO_define_strp - lineno : 84 macro : _IOS_APPEND 8
 DW_MACRO_define_strp - lineno : 85 macro : _IOS_TRUNC 16
 DW_MACRO_define_strp - lineno : 86 macro : _IOS_NOCREATE 32
 DW_MACRO_define_strp - lineno : 87 macro : _IOS_NOREPLACE 64
 DW_MACRO_define_strp - lineno : 88 macro : _IOS_BIN 128
 DW_MACRO_define_strp - lineno : 96 macro : _IO_MAGIC 0xFBAD0000
 DW_MACRO_define_strp - lineno : 97 macro : _OLD_STDIO_MAGIC 0xFABC0000
 DW_MACRO_define_strp - lineno : 98 macro : _IO_MAGIC_MASK 0xFFFF0000
 DW_MACRO_define_strp - lineno : 99 macro : _IO_USER_BUF 1
 DW_MACRO_define_strp - lineno : 100 macro : _IO_UNBUFFERED 2
 DW_MACRO_define_strp - lineno : 101 macro : _IO_NO_READS 4
 DW_MACRO_define_strp - lineno : 102 macro : _IO_NO_WRITES 8
 DW_MACRO_define_strp - lineno : 103 macro : _IO_EOF_SEEN 0x10
 DW_MACRO_define_strp - lineno : 104 macro : _IO_ERR_SEEN 0x20
 DW_MACRO_define_strp - lineno : 105 macro : _IO_DELETE_DONT_CLOSE 0x40
 DW_MACRO_define_strp - lineno : 106 macro : _IO_LINKED 0x80
 DW_MACRO_define_strp - lineno : 107 macro : _IO_IN_BACKUP 0x100
 DW_MACRO_define_strp - lineno : 108 macro : _IO_LINE_BUF 0x200
 DW_MACRO_define_strp - lineno : 109 macro : _IO_TIED_PUT_GET 0x400
 DW_MACRO_define_strp - lineno : 110 macro : _IO_CURRENTLY_PUTTING 0x800
 DW_MACRO_define_strp - lineno : 111 macro : _IO_IS_APPENDING 0x1000
 DW_MACRO_define_strp - lineno : 112 macro : _IO_IS_FILEBUF 0x2000
 DW_MACRO_define_strp - lineno : 113 macro : _IO_BAD_SEEN 0x4000
 DW_MACRO_define_strp - lineno : 114 macro : _IO_USER_LOCK 0x8000
 DW_MACRO_define_strp - lineno : 116 macro : _IO_FLAGS2_MMAP 1
 DW_MACRO_define_strp - lineno : 117 macro : _IO_FLAGS2_NOTCANCEL 2
 DW_MACRO_define_strp - lineno : 121 macro : _IO_FLAGS2_USER_WBUF 8
 DW_MACRO_define_strp - lineno : 130 macro : _IO_SKIPWS 01
 DW_MACRO_define_strp - lineno : 131 macro : _IO_LEFT 02
 DW_MACRO_define_strp - lineno : 132 macro : _IO_RIGHT 04
 DW_MACRO_define_strp - lineno : 133 macro : _IO_INTERNAL 010
 DW_MACRO_define_strp - lineno : 134 macro : _IO_DEC 020
 DW_MACRO_define_strp - lineno : 135 macro : _IO_OCT 040
 DW_MACRO_define_strp - lineno : 136 macro : _IO_HEX 0100
 DW_MACRO_define_strp - lineno : 137 macro : _IO_SHOWBASE 0200
 DW_MACRO_define_strp - lineno : 138 macro : _IO_SHOWPOINT 0400
 DW_MACRO_define_strp - lineno : 139 macro : _IO_UPPERCASE 01000
 DW_MACRO_define_strp - lineno : 140 macro : _IO_SHOWPOS 02000
 DW_MACRO_define_strp - lineno : 141 macro : _IO_SCIENTIFIC 04000
 DW_MACRO_define_strp - lineno : 142 macro : _IO_FIXED 010000
 DW_MACRO_define_strp - lineno : 143 macro : _IO_UNITBUF 020000
 DW_MACRO_define_strp - lineno : 144 macro : _IO_STDIO 040000
 DW_MACRO_define_strp - lineno : 145 macro : _IO_DONT_CLOSE 0100000
 DW_MACRO_define_strp - lineno : 146 macro : _IO_BOOLALPHA 0200000
 DW_MACRO_define_strp - lineno : 247 macro : _IO_file_flags _flags
 DW_MACRO_define_strp - lineno : 276 macro : __HAVE_COLUMN 
 DW_MACRO_define_strp - lineno : 323 macro : _IO_stdin ((_IO_FILE*)(&_IO_2_1_stdin_))
 DW_MACRO_define_strp - lineno : 324 macro : _IO_stdout ((_IO_FILE*)(&_IO_2_1_stdout_))
 DW_MACRO_define_strp - lineno : 325 macro : _IO_stderr ((_IO_FILE*)(&_IO_2_1_stderr_))
 DW_MACRO_define_strp - lineno : 399 macro : _IO_BE(expr,res) __builtin_expect ((expr), res)
 DW_MACRO_define_strp - lineno : 404 macro : _IO_getc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
 DW_MACRO_define_strp - lineno : 407 macro : _IO_peekc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)
 DW_MACRO_define_strp - lineno : 411 macro : _IO_putc_unlocked(_ch,_fp) (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
 DW_MACRO_define_strp - lineno : 430 macro : _IO_feof_unlocked(__fp) (((__fp)->_flags & _IO_EOF_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 431 macro : _IO_ferror_unlocked(__fp) (((__fp)->_flags & _IO_ERR_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 441 macro : _IO_PENDING_OUTPUT_COUNT(_fp) ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)
 DW_MACRO_define_strp - lineno : 448 macro : _IO_peekc(_fp) _IO_peekc_unlocked (_fp)
 DW_MACRO_define_strp - lineno : 449 macro : _IO_flockfile(_fp) 
 DW_MACRO_define_strp - lineno : 450 macro : _IO_funlockfile(_fp) 
 DW_MACRO_define_strp - lineno : 451 macro : _IO_ftrylockfile(_fp) 
 DW_MACRO_define_strp - lineno : 453 macro : _IO_cleanup_region_start(_fct,_fp) 
 DW_MACRO_define_strp - lineno : 456 macro : _IO_cleanup_region_end(_Doit) 
 DW_MACRO_define_strp - lineno : 459 macro : _IO_need_lock(_fp) (((_fp)->_flags2 & _IO_FLAGS2_NEED_LOCK) != 0)

  Offset:                      0x11c0
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 47 macro : _VA_LIST_DEFINED 
 DW_MACRO_define_strp - lineno : 61 macro : __off_t_defined 
 DW_MACRO_define_strp - lineno : 72 macro : __ssize_t_defined 
 DW_MACRO_define_strp - lineno : 87 macro : _IOFBF 0
 DW_MACRO_define_strp - lineno : 88 macro : _IOLBF 1
 DW_MACRO_define_strp - lineno : 89 macro : _IONBF 2
 DW_MACRO_define_strp - lineno : 94 macro : BUFSIZ _IO_BUFSIZ
 DW_MACRO_define_strp - lineno : 107 macro : SEEK_SET 0
 DW_MACRO_define_strp - lineno : 108 macro : SEEK_CUR 1
 DW_MACRO_define_strp - lineno : 109 macro : SEEK_END 2
 DW_MACRO_define_strp - lineno : 118 macro : P_tmpdir "/tmp"

  Offset:                      0x1206
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _BITS_STDIO_LIM_H 1
 DW_MACRO_define_strp - lineno : 25 macro : L_tmpnam 20
 DW_MACRO_define_strp - lineno : 26 macro : TMP_MAX 238328
 DW_MACRO_define_strp - lineno : 27 macro : FILENAME_MAX 4096
 DW_MACRO_define_strp - lineno : 30 macro : L_ctermid 9
 DW_MACRO_undef_strp - lineno : 36 macro : FOPEN_MAX
 DW_MACRO_define_strp - lineno : 37 macro : FOPEN_MAX 16

  Offset:                      0x1234
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 139 macro : stdin stdin
 DW_MACRO_define_strp - lineno : 140 macro : stdout stdout
 DW_MACRO_define_strp - lineno : 141 macro : stderr stderr
 DW_MACRO_define_strp - lineno : 488 macro : getc(_fp) _IO_getc (_fp)
 DW_MACRO_define_strp - lineno : 528 macro : putc(_ch,_fp) _IO_putc (_ch, _fp)


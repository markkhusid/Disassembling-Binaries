
if_then_C_AMD64_ggdb3:     file format elf64-x86-64
if_then_C_AMD64_ggdb3
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000000660

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000000a08 memsz 0x0000000000000a08 flags r-x
    LOAD off    0x0000000000000da0 vaddr 0x0000000000200da0 paddr 0x0000000000200da0 align 2**21
         filesz 0x0000000000000270 memsz 0x0000000000000278 flags rw-
 DYNAMIC off    0x0000000000000db0 vaddr 0x0000000000200db0 paddr 0x0000000000200db0 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000008c0 vaddr 0x00000000000008c0 paddr 0x00000000000008c0 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000da0 vaddr 0x0000000000200da0 paddr 0x0000000000200da0 align 2**0
         filesz 0x0000000000000260 memsz 0x0000000000000260 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000000005e0
  FINI                 0x0000000000000864
  INIT_ARRAY           0x0000000000200da0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200da8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x00000000000003a8
  SYMTAB               0x00000000000002b8
  STRSZ                0x00000000000000bd
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fa0
  PLTRELSZ             0x0000000000000060
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000580
  RELA                 0x00000000000004c0
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x0000000000000480
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x0000000000000466
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x0d696917 0x00 04 GLIBC_2.7
    0x0d696914 0x00 03 GLIBC_2.4
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000f0  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       000000bd  00000000000003a8  00000000000003a8  000003a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000014  0000000000000466  0000000000000466  00000466  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000040  0000000000000480  0000000000000480  00000480  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  00000000000004c0  00000000000004c0  000004c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000060  0000000000000580  0000000000000580  00000580  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  00000000000005e0  00000000000005e0  000005e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000050  0000000000000600  0000000000000600  00000600  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000000650  0000000000000650  00000650  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000202  0000000000000660  0000000000000660  00000660  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  0000000000000864  0000000000000864  00000864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000004d  0000000000000870  0000000000000870  00000870  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000003c  00000000000008c0  00000000000008c0  000008c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000108  0000000000000900  0000000000000900  00000900  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000200da0  0000000000200da0  00000da0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000200da8  0000000000200da8  00000da8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001f0  0000000000200db0  0000000000200db0  00000db0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000060  0000000000200fa0  0000000000200fa0  00000fa0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 24 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 25 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103a  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_info   00000360  0000000000000000  0000000000000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_abbrev 00000105  0000000000000000  0000000000000000  000013ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   00000232  0000000000000000  0000000000000000  000014cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    00004dd9  0000000000000000  0000000000000000  00001701  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_macro  0000125b  0000000000000000  0000000000000000  000064da  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
00000000000003a8 l    d  .dynstr	0000000000000000              .dynstr
0000000000000466 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000480 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000004c0 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000580 l    d  .rela.plt	0000000000000000              .rela.plt
00000000000005e0 l    d  .init	0000000000000000              .init
0000000000000600 l    d  .plt	0000000000000000              .plt
0000000000000650 l    d  .plt.got	0000000000000000              .plt.got
0000000000000660 l    d  .text	0000000000000000              .text
0000000000000864 l    d  .fini	0000000000000000              .fini
0000000000000870 l    d  .rodata	0000000000000000              .rodata
00000000000008c0 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000000900 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200da0 l    d  .init_array	0000000000000000              .init_array
0000000000200da8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200db0 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fa0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_macro	0000000000000000              .debug_macro
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000690 l     F .text	0000000000000000              deregister_tm_clones
00000000000006d0 l     F .text	0000000000000000              register_tm_clones
0000000000000720 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200da8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000000760 l     F .text	0000000000000000              frame_dummy
0000000000200da0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              if_then.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000a04 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200da8 l       .init_array	0000000000000000              __init_array_end
0000000000200db0 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200da0 l       .init_array	0000000000000000              __init_array_start
00000000000008c0 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fa0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000000860 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
0000000000201010 g       .data	0000000000000000              _edata
0000000000000864 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000870 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000007f0 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
0000000000000660 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
000000000000076a g     F .text	000000000000007d              main
0000000000000000       F *UND*	0000000000000000              __isoc99_scanf@@GLIBC_2.7
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000005e0 g     F .init	0000000000000000              _init


Contents of section .interp:
 0238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .note.ABI-tag:
 0254 04000000 10000000 01000000 474e5500  ............GNU.
 0264 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 0274 04000000 14000000 03000000 474e5500  ............GNU.
 0284 12ac3d51 b2b023cf ea376a93 29a32289  ..=Q..#..7j.).".
 0294 401497a1                             @...            
Contents of section .gnu.hash:
 0298 01000000 01000000 01000000 00000000  ................
 02a8 00000000 00000000 00000000           ............    
Contents of section .dynsym:
 02b8 00000000 00000000 00000000 00000000  ................
 02c8 00000000 00000000 78000000 20000000  ........x... ...
 02d8 00000000 00000000 00000000 00000000  ................
 02e8 1a000000 12000000 00000000 00000000  ................
 02f8 00000000 00000000 1f000000 12000000  ................
 0308 00000000 00000000 00000000 00000000  ................
 0318 30000000 12000000 00000000 00000000  0...............
 0328 00000000 00000000 46000000 12000000  ........F.......
 0338 00000000 00000000 00000000 00000000  ................
 0348 94000000 20000000 00000000 00000000  .... ...........
 0358 00000000 00000000 0b000000 12000000  ................
 0368 00000000 00000000 00000000 00000000  ................
 0378 a3000000 20000000 00000000 00000000  .... ...........
 0388 00000000 00000000 37000000 22000000  ........7..."...
 0398 00000000 00000000 00000000 00000000  ................
Contents of section .dynstr:
 03a8 006c6962 632e736f 2e36005f 5f69736f  .libc.so.6.__iso
 03b8 6339395f 7363616e 66007075 7473005f  c99_scanf.puts._
 03c8 5f737461 636b5f63 686b5f66 61696c00  _stack_chk_fail.
 03d8 7072696e 7466005f 5f637861 5f66696e  printf.__cxa_fin
 03e8 616c697a 65005f5f 6c696263 5f737461  alize.__libc_sta
 03f8 72745f6d 61696e00 474c4942 435f322e  rt_main.GLIBC_2.
 0408 3700474c 4942435f 322e3400 474c4942  7.GLIBC_2.4.GLIB
 0418 435f322e 322e3500 5f49544d 5f646572  C_2.2.5._ITM_der
 0428 65676973 74657254 4d436c6f 6e655461  egisterTMCloneTa
 0438 626c6500 5f5f676d 6f6e5f73 74617274  ble.__gmon_start
 0448 5f5f005f 49544d5f 72656769 73746572  __._ITM_register
 0458 544d436c 6f6e6554 61626c65 00        TMCloneTable.   
Contents of section .gnu.version:
 0466 00000000 02000300 02000200 00000400  ................
 0476 00000200                             ....            
Contents of section .gnu.version_r:
 0480 01000300 01000000 10000000 00000000  ................
 0490 1769690d 00000400 58000000 10000000  .ii.....X.......
 04a0 1469690d 00000300 62000000 10000000  .ii.....b.......
 04b0 751a6909 00000200 6c000000 00000000  u.i.....l.......
Contents of section .rela.dyn:
 04c0 a00d2000 00000000 08000000 00000000  .. .............
 04d0 60070000 00000000 a80d2000 00000000  `......... .....
 04e0 08000000 00000000 20070000 00000000  ........ .......
 04f0 08102000 00000000 08000000 00000000  .. .............
 0500 08102000 00000000 d80f2000 00000000  .. ....... .....
 0510 06000000 01000000 00000000 00000000  ................
 0520 e00f2000 00000000 06000000 05000000  .. .............
 0530 00000000 00000000 e80f2000 00000000  .......... .....
 0540 06000000 06000000 00000000 00000000  ................
 0550 f00f2000 00000000 06000000 08000000  .. .............
 0560 00000000 00000000 f80f2000 00000000  .......... .....
 0570 06000000 09000000 00000000 00000000  ................
Contents of section .rela.plt:
 0580 b80f2000 00000000 07000000 02000000  .. .............
 0590 00000000 00000000 c00f2000 00000000  .......... .....
 05a0 07000000 03000000 00000000 00000000  ................
 05b0 c80f2000 00000000 07000000 04000000  .. .............
 05c0 00000000 00000000 d00f2000 00000000  .......... .....
 05d0 07000000 07000000 00000000 00000000  ................
Contents of section .init:
 05e0 4883ec08 488b05fd 09200048 85c07402  H...H.... .H..t.
 05f0 ffd04883 c408c3                      ..H....         
Contents of section .plt:
 0600 ff35a209 2000ff25 a4092000 0f1f4000  .5.. ..%.. ...@.
 0610 ff25a209 20006800 000000e9 e0ffffff  .%.. .h.........
 0620 ff259a09 20006801 000000e9 d0ffffff  .%.. .h.........
 0630 ff259209 20006802 000000e9 c0ffffff  .%.. .h.........
 0640 ff258a09 20006803 000000e9 b0ffffff  .%.. .h.........
Contents of section .plt.got:
 0650 ff25a209 20006690                    .%.. .f.        
Contents of section .text:
 0660 31ed4989 d15e4889 e24883e4 f050544c  1.I..^H..H...PTL
 0670 8d05ea01 0000488d 0d730100 00488d3d  ......H..s...H.=
 0680 e6000000 ff155609 2000f40f 1f440000  ......V. ....D..
 0690 488d3d79 09200055 488d0571 09200048  H.=y. .UH..q. .H
 06a0 39f84889 e5741948 8b052a09 20004885  9.H..t.H..*. .H.
 06b0 c0740d5d ffe0662e 0f1f8400 00000000  .t.]..f.........
 06c0 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 06d0 488d3d39 09200048 8d353209 20005548  H.=9. .H.52. .UH
 06e0 29fe4889 e548c1fe 034889f0 48c1e83f  ).H..H...H..H..?
 06f0 4801c648 d1fe7418 488b05f1 08200048  H..H..t.H.... .H
 0700 85c0740c 5dffe066 0f1f8400 00000000  ..t.]..f........
 0710 5dc30f1f 4000662e 0f1f8400 00000000  ]...@.f.........
 0720 803de908 20000075 2f48833d c7082000  .=.. ..u/H.=.. .
 0730 00554889 e5740c48 8b3dca08 2000e80d  .UH..t.H.=.. ...
 0740 ffffffe8 48ffffff c605c108 2000015d  ....H....... ..]
 0750 c30f1f80 00000000 f3c3660f 1f440000  ..........f..D..
 0760 554889e5 5de966ff ffff5548 89e54883  UH..].f...UH..H.
 0770 ec20897d ec488975 e064488b 04252800  . .}.H.u.dH..%(.
 0780 00004889 45f831c0 c745f405 00000048  ..H.E.1..E.....H
 0790 8d3de200 0000b800 000000e8 90feffff  .=..............
 07a0 488d45f0 4889c648 8d3dee00 0000b800  H.E.H..H.=......
 07b0 000000e8 88feffff 8b45f039 45f47d0c  .........E.9E.}.
 07c0 488d3dd8 000000e8 44feffff b8000000  H.=.....D.......
 07d0 00488b55 f8644833 14252800 00007405  .H.U.dH3.%(...t.
 07e0 e83bfeff ffc9c366 0f1f8400 00000000  .;.....f........
 07f0 41574156 4989d741 5541544c 8d259e05  AWAVI..AUATL.%..
 0800 20005548 8d2d9e05 20005341 89fd4989   .UH.-.. .SA..I.
 0810 f64c29e5 4883ec08 48c1fd03 e8bffdff  .L).H...H.......
 0820 ff4885ed 742031db 0f1f8400 00000000  .H..t 1.........
 0830 4c89fa4c 89f64489 ef41ff14 dc4883c3  L..L..D..A...H..
 0840 014839dd 75ea4883 c4085b5d 415c415d  .H9.u.H...[]A\A]
 0850 415e415f c390662e 0f1f8400 00000000  A^A_..f.........
 0860 f3c3                                 ..              
Contents of section .fini:
 0864 4883ec08 4883c408 c3                 H...H....       
Contents of section .rodata:
 0870 01000200 00000000 456e7465 72206120  ........Enter a 
 0880 6e756d62 65722062 65747765 656e2031  number between 1
 0890 20616e64 20313020 2d3e2000 25640054   and 10 -> .%d.T
 08a0 6865206e 756d6265 72207761 73206869  he number was hi
 08b0 67686572 20746861 6e203521 00        gher than 5!.   
Contents of section .eh_frame_hdr:
 08c0 011b033b 3c000000 06000000 40fdffff  ...;<.......@...
 08d0 88000000 90fdffff b0000000 a0fdffff  ................
 08e0 58000000 aafeffff c8000000 30ffffff  X...........0...
 08f0 e8000000 a0ffffff 30010000           ........0...    
Contents of section .eh_frame:
 0900 14000000 00000000 017a5200 01781001  .........zR..x..
 0910 1b0c0708 90010710 14000000 1c000000  ................
 0920 40fdffff 2b000000 00000000 00000000  @...+...........
 0930 14000000 00000000 017a5200 01781001  .........zR..x..
 0940 1b0c0708 90010000 24000000 1c000000  ........$.......
 0950 b0fcffff 50000000 000e1046 0e184a0f  ....P......F..J.
 0960 0b770880 003f1a3b 2a332422 00000000  .w...?.;*3$"....
 0970 14000000 44000000 d8fcffff 08000000  ....D...........
 0980 00000000 00000000 1c000000 5c000000  ............\...
 0990 dafdffff 7d000000 00410e10 8602430d  ....}....A....C.
 09a0 0602780c 07080000 44000000 7c000000  ..x.....D...|...
 09b0 40feffff 65000000 00420e10 8f02420e  @...e....B....B.
 09c0 188e0345 0e208d04 420e288c 05480e30  ...E. ..B.(..H.0
 09d0 8606480e 3883074d 0e40720e 38410e30  ..H.8..M.@r.8A.0
 09e0 410e2842 0e20420e 18420e10 420e0800  A.(B. B..B..B...
 09f0 10000000 c4000000 68feffff 02000000  ........h.......
 0a00 00000000 00000000                    ........        
Contents of section .init_array:
 200da0 60070000 00000000                    `.......        
Contents of section .fini_array:
 200da8 20070000 00000000                     .......        
Contents of section .dynamic:
 200db0 01000000 00000000 01000000 00000000  ................
 200dc0 0c000000 00000000 e0050000 00000000  ................
 200dd0 0d000000 00000000 64080000 00000000  ........d.......
 200de0 19000000 00000000 a00d2000 00000000  .......... .....
 200df0 1b000000 00000000 08000000 00000000  ................
 200e00 1a000000 00000000 a80d2000 00000000  .......... .....
 200e10 1c000000 00000000 08000000 00000000  ................
 200e20 f5feff6f 00000000 98020000 00000000  ...o............
 200e30 05000000 00000000 a8030000 00000000  ................
 200e40 06000000 00000000 b8020000 00000000  ................
 200e50 0a000000 00000000 bd000000 00000000  ................
 200e60 0b000000 00000000 18000000 00000000  ................
 200e70 15000000 00000000 00000000 00000000  ................
 200e80 03000000 00000000 a00f2000 00000000  .......... .....
 200e90 02000000 00000000 60000000 00000000  ........`.......
 200ea0 14000000 00000000 07000000 00000000  ................
 200eb0 17000000 00000000 80050000 00000000  ................
 200ec0 07000000 00000000 c0040000 00000000  ................
 200ed0 08000000 00000000 c0000000 00000000  ................
 200ee0 09000000 00000000 18000000 00000000  ................
 200ef0 1e000000 00000000 08000000 00000000  ................
 200f00 fbffff6f 00000000 01000008 00000000  ...o............
 200f10 feffff6f 00000000 80040000 00000000  ...o............
 200f20 ffffff6f 00000000 01000000 00000000  ...o............
 200f30 f0ffff6f 00000000 66040000 00000000  ...o....f.......
 200f40 f9ffff6f 00000000 03000000 00000000  ...o............
 200f50 00000000 00000000 00000000 00000000  ................
 200f60 00000000 00000000 00000000 00000000  ................
 200f70 00000000 00000000 00000000 00000000  ................
 200f80 00000000 00000000 00000000 00000000  ................
 200f90 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 200fa0 b00d2000 00000000 00000000 00000000  .. .............
 200fb0 00000000 00000000 16060000 00000000  ................
 200fc0 26060000 00000000 36060000 00000000  &.......6.......
 200fd0 46060000 00000000 00000000 00000000  F...............
 200fe0 00000000 00000000 00000000 00000000  ................
 200ff0 00000000 00000000 00000000 00000000  ................
Contents of section .data:
 201000 00000000 00000000 08102000 00000000  .......... .....
Contents of section .comment:
 0000 4743433a 20285562 756e7475 20372e33  GCC: (Ubuntu 7.3
 0010 2e302d32 37756275 6e747531 7e31382e  .0-27ubuntu1~18.
 0020 30342920 372e332e 3000               04) 7.3.0.      
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 6a070000 00000000 7d000000 00000000  j.......}.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 5c030000 04000000 00000801 0f0c0000  \...............
 0010 0c0c0d00 00140700 006a0700 00000000  .........j......
 0020 007d0000 00000000 00000000 00000000  .}..............
 0030 0002bf28 000002d8 3c000000 0308074a  ...(....<......J
 0040 39000003 01087d26 00000302 07174000  9.....}&......@.
 0050 00030407 341c0000 0301061a 42000003  ....4.......B...
 0060 02054424 00000404 05696e74 00030805  ..D$.....int....
 0070 a5390000 02ba1000 00038c6d 00000002  .9.........m....
 0080 020d0000 038d6d00 00000508 06089200  ......m.........
 0090 00000301 06214200 00079200 00000840  .....!B........@
 00a0 3d0000d8 04f51e02 0000099a 26000004  =...........&...
 00b0 f6660000 000009d2 20000004 fb8c0000  .f...... .......
 00c0 00080912 33000004 fc8c0000 0010093b  ....3..........;
 00d0 19000004 fd8c0000 001809b6 24000004  ............$...
 00e0 fe8c0000 002009cc 41000004 ff8c0000  ..... ..A.......
 00f0 00280a03 06000004 00018c00 0000300a  .(............0.
 0100 694d0000 0401018c 00000038 0afe0200  iM.........8....
 0110 00040201 8c000000 400af125 00000404  ........@..%....
 0120 018c0000 00480aaa 42000004 05018c00  .....H..B.......
 0130 0000500a 24100000 0406018c 00000058  ..P.$..........X
 0140 0a6a0900 00040801 56020000 600a554a  .j......V...`.UJ
 0150 0000040a 015c0200 00680ace 16000004  .....\...h......
 0160 0c016600 0000700a a3080000 04100166  ..f...p........f
 0170 00000074 0a343d00 00041201 74000000  ...t.4=.....t...
 0180 780a6d4c 00000416 014a0000 00800a54  x.mL.....J.....T
 0190 18000004 17015800 0000820a 64010000  ......X.....d...
 01a0 04180162 02000083 0a153c00 00041c01  ...b......<.....
 01b0 72020000 880a383d 00000425 017f0000  r.....8=...%....
 01c0 00900a44 2b000004 2d018a00 0000980a  ...D+...-.......
 01d0 4b2b0000 042e018a 000000a0 0a522b00  K+...........R+.
 01e0 00042f01 8a000000 a80a592b 00000430  ../.......Y+...0
 01f0 018a0000 00b00a60 2b000004 32013100  .......`+...2.1.
 0200 0000b80a 4a1f0000 04330166 000000c0  ....J....3.f....
 0210 0a604d00 00043501 78020000 c4000b0f  .`M...5.x.......
 0220 02000004 9a08da1b 00001804 a0560200  .............V..
 0230 00096b1a 000004a1 56020000 00098c41  ..k.....V......A
 0240 000004a2 5c020000 0809490f 000004a6  ....\.....I.....
 0250 66000000 10000608 25020000 06089e00  f.......%.......
 0260 00000c92 00000072 0200000d 3c000000  .......r....<...
 0270 00000608 1e020000 0c920000 00880200  ................
 0280 000d3c00 00001300 0ec13800 000f2a25  ..<.......8...*%
 0290 0000043f 01880200 000fa125 00000440  ...?.......%...@
 02a0 01880200 000ff91e 00000441 01880200  ...........A....
 02b0 00060899 00000007 b1020000 10862200  ..............".
 02c0 0005875c 02000010 a5410000 05885c02  ...\.....A....\.
 02d0 0000104d 18000005 895c0200 00104b16  ...M.....\....K.
 02e0 0000061a 66000000 0cb70200 00f30200  ....f...........
 02f0 00110007 e8020000 10361500 00061bf3  .........6......
 0300 02000012 aa470000 01036600 00006a07  .....G....f...j.
 0310 00000000 00007d00 00000000 0000019c  ......}.........
 0320 59030000 139c0700 00010366 00000002  Y..........f....
 0330 915c13e0 1c000001 03590300 00029150  .\.......Y.....P
 0340 14610001 05660000 00029160 14620001  .a...f.....`.b..
 0350 05660000 00029164 0006088c 00000000  .f.....d........
Contents of section .debug_abbrev:
 0000 01110125 0e130b03 0e1b0e11 01120710  ...%............
 0010 17994217 00000216 00030e3a 0b3b0b49  ..B........:.;.I
 0020 13000003 24000b0b 3e0b030e 00000424  ....$...>......$
 0030 000b0b3e 0b030800 00050f00 0b0b0000  ...>............
 0040 060f000b 0b491300 00072600 49130000  .....I....&.I...
 0050 08130103 0e0b0b3a 0b3b0b01 13000009  .......:.;......
 0060 0d00030e 3a0b3b0b 4913380b 00000a0d  ....:.;.I.8.....
 0070 00030e3a 0b3b0549 13380b00 000b1600  ...:.;.I.8......
 0080 030e3a0b 3b0b0000 0c010149 13011300  ..:.;......I....
 0090 000d2100 49132f0b 00000e13 00030e3c  ..!.I./........<
 00a0 1900000f 3400030e 3a0b3b05 49133f19  ....4...:.;.I.?.
 00b0 3c190000 10340003 0e3a0b3b 0b49133f  <....4...:.;.I.?
 00c0 193c1900 00112100 0000122e 013f1903  .<....!......?..
 00d0 0e3a0b3b 0b271949 13110112 07401896  .:.;.'.I.....@..
 00e0 42190113 00001305 00030e3a 0b3b0b49  B..........:.;.I
 00f0 13021800 00143400 03083a0b 3b0b4913  ......4...:.;.I.
 0100 02180000 00                          .....           
Contents of section .debug_line:
 0000 2e020000 02000d02 00000101 fb0e0d00  ................
 0010 01010101 00000001 0000012f 7573722f  .........../usr/
 0020 6c69622f 6763632f 7838365f 36342d6c  lib/gcc/x86_64-l
 0030 696e7578 2d676e75 2f372f69 6e636c75  inux-gnu/7/inclu
 0040 6465002f 7573722f 7838365f 36342d6c  de./usr/x86_64-l
 0050 696e7578 2d676e75 2f696e63 6c756465  inux-gnu/include
 0060 2f626974 73002f75 73722f78 38365f36  /bits./usr/x86_6
 0070 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 0080 75646500 2f757372 2f783836 5f36342d  ude./usr/x86_64-
 0090 6c696e75 782d676e 752f696e 636c7564  linux-gnu/includ
 00a0 652f7379 73002f75 73722f78 38365f36  e/sys./usr/x86_6
 00b0 342d6c69 6e75782d 676e752f 696e636c  4-linux-gnu/incl
 00c0 7564652f 676e7500 2f757372 2f783836  ude/gnu./usr/x86
 00d0 5f36342d 6c696e75 782d676e 752f696e  _64-linux-gnu/in
 00e0 636c7564 652f6269 74732f74 79706573  clude/bits/types
 00f0 00006966 5f746865 6e2e6300 00000073  ..if_then.c....s
 0100 74646465 662e6800 01000074 79706573  tddef.h....types
 0110 2e680002 00006c69 62696f2e 68000200  .h....libio.h...
 0120 00737464 696f2e68 00030000 7379735f  .stdio.h....sys_
 0130 6572726c 6973742e 68000200 00737464  errlist.h....std
 0140 632d7072 65646566 2e680003 00006c69  c-predef.h....li
 0150 62632d68 65616465 722d7374 6172742e  bc-header-start.
 0160 68000200 00666561 74757265 732e6800  h....features.h.
 0170 03000063 64656673 2e680004 0000776f  ...cdefs.h....wo
 0180 72647369 7a652e68 00020000 6c6f6e67  rdsize.h....long
 0190 2d646f75 626c652e 68000200 00737475  -double.h....stu
 01a0 62732e68 00050000 73747562 732d3634  bs.h....stubs-64
 01b0 2e680005 00007479 70657369 7a65732e  .h....typesizes.
 01c0 68000200 005f5f46 494c452e 68000600  h....__FILE.h...
 01d0 0046494c 452e6800 0600005f 475f636f  .FILE.h...._G_co
 01e0 6e666967 2e680002 00005f5f 6d627374  nfig.h....__mbst
 01f0 6174655f 742e6800 06000073 74646172  ate_t.h....stdar
 0200 672e6800 01000073 7464696f 5f6c696d  g.h....stdio_lim
 0210 2e680002 00000000 09026a07 00000000  .h........j.....
 0220 000014e4 e8760813 08768308 15021600  .....v...v......
 0230 0101                                 ..              
Contents of section .debug_str:
 0000 5f494f5f 44454320 30323000 5f5f5349  _IO_DEC 020.__SI
 0010 475f4154 4f4d4943 5f4d4158 5f5f2030  G_ATOMIC_MAX__ 0
 0020 78376666 66666666 66005f5f 464c5436  x7fffffff.__FLT6
 0030 345f4841 535f5155 4945545f 4e414e5f  4_HAS_QUIET_NAN_
 0040 5f203100 5f53495a 455f545f 44454649  _ 1._SIZE_T_DEFI
 0050 4e454420 005f494f 5f49535f 46494c45  NED ._IO_IS_FILE
 0060 42554620 30783230 3030005f 5f444543  BUF 0x2000.__DEC
 0070 36345f53 55424e4f 524d414c 5f4d494e  64_SUBNORMAL_MIN
 0080 5f5f2030 2e303030 30303030 30303030  __ 0.00000000000
 0090 30303031 452d3338 33444400 5f5f464c  0001E-383DD.__FL
 00a0 5433325f 4841535f 494e4649 4e495459  T32_HAS_INFINITY
 00b0 5f5f2031 005f5f46 4c543634 5f4d4158  __ 1.__FLT64_MAX
 00c0 5f455850 5f5f2031 30323400 5f5f464c  _EXP__ 1024.__FL
 00d0 545f4d49 4e5f3130 5f455850 5f5f2028  T_MIN_10_EXP__ (
 00e0 2d333729 005f5f53 59534341 4c4c5f55  -37).__SYSCALL_U
 00f0 4c4f4e47 5f545950 45205f5f 554c4f4e  LONG_TYPE __ULON
 0100 47574f52 445f5459 5045005f 5f464c54  GWORD_TYPE.__FLT
 0110 3634585f 45505349 4c4f4e5f 5f20312e  64X_EPSILON__ 1.
 0120 30383432 30323137 32343835 35303434  0842021724855044
 0130 33343030 37343532 38303038 36393934  3400745280086994
 0140 31373165 2d313946 36347800 5f5f464c  171e-19F64x.__FL
 0150 54333258 5f4d4158 5f455850 5f5f2031  T32X_MAX_EXP__ 1
 0160 30323400 5f73686f 72746275 66005f5f  024._shortbuf.__
 0170 4743435f 41544f4d 49435f54 4553545f  GCC_ATOMIC_TEST_
 0180 414e445f 5345545f 54525545 56414c20  AND_SET_TRUEVAL 
 0190 31005f5f 4f46465f 545f4d41 54434845  1.__OFF_T_MATCHE
 01a0 535f4f46 4636345f 54203100 5f5f4445  S_OFF64_T 1.__DE
 01b0 4336345f 45505349 4c4f4e5f 5f203145  C64_EPSILON__ 1E
 01c0 2d313544 44005f5f 44424c5f 44454e4f  -15DD.__DBL_DENO
 01d0 524d5f4d 494e5f5f 20282864 6f75626c  RM_MIN__ ((doubl
 01e0 6529342e 39343036 35363435 38343132  e)4.940656458412
 01f0 34363534 34313736 35363837 39323836  4654417656879286
 0200 38323231 33373265 2d333234 4c29005f  8221372e-324L)._
 0210 494f5f6c 6f636b5f 74005f5f 494e5450  IO_lock_t.__INTP
 0220 54525f4d 41585f5f 20307837 66666666  TR_MAX__ 0x7ffff
 0230 66666666 66666666 6666664c 005f475f  fffffffffffL._G_
 0240 48415645 5f53545f 424c4b53 495a4520  HAVE_ST_BLKSIZE 
 0250 64656669 6e656420 285f5354 41544255  defined (_STATBU
 0260 465f5354 5f424c4b 53495a45 29005f5f  F_ST_BLKSIZE).__
 0270 666c6578 61727220 5b5d005f 5f464c54  flexarr [].__FLT
 0280 33325f4d 414e545f 4449475f 5f203234  32_MANT_DIG__ 24
 0290 005f5f47 43435f48 4156455f 53594e43  .__GCC_HAVE_SYNC
 02a0 5f434f4d 50415245 5f414e44 5f535741  _COMPARE_AND_SWA
 02b0 505f3820 31005f49 4f535f42 494e2031  P_8 1._IOS_BIN 1
 02c0 32380046 494c454e 414d455f 4d415820  28.FILENAME_MAX 
 02d0 34303936 005f5354 44435f50 52454445  4096._STDC_PREDE
 02e0 465f4820 31005f5f 5553455f 49534f43  F_H 1.__USE_ISOC
 02f0 31312031 005f494f 46424620 30005f49  11 1._IOFBF 0._I
 0300 4f5f6275 665f656e 64005f5f 494e545f  O_buf_end.__INT_
 0310 46415354 36345f57 49445448 5f5f2036  FAST64_WIDTH__ 6
 0320 34005f49 4f5f454f 465f5345 454e2030  4._IO_EOF_SEEN 0
 0330 78313000 5345454b 5f435552 2031005f  x10.SEEK_CUR 1._
 0340 5f464c54 3332585f 44454349 4d414c5f  _FLT32X_DECIMAL_
 0350 4449475f 5f203137 005f5f6b 385f5f20  DIG__ 17.__k8__ 
 0360 31005f5f 44424c5f 4d494e5f 4558505f  1.__DBL_MIN_EXP_
 0370 5f20282d 31303231 29005f5f 494e545f  _ (-1021).__INT_
 0380 46415354 36345f4d 41585f5f 20307837  FAST64_MAX__ 0x7
 0390 66666666 66666666 66666666 6666664c  fffffffffffffffL
 03a0 005f5f68 61735f69 6e636c75 64655f6e  .__has_include_n
 03b0 65787428 53545229 205f5f68 61735f69  ext(STR) __has_i
 03c0 6e636c75 64655f6e 6578745f 5f285354  nclude_next__(ST
 03d0 5229005f 494f5f52 49474854 20303400  R)._IO_RIGHT 04.
 03e0 5f494f5f 55534552 5f425546 2031005f  _IO_USER_BUF 1._
 03f0 5359535f 43444546 535f4820 31005f5f  SYS_CDEFS_H 1.__
 0400 464c5433 32585f4d 41585f5f 20312e37  FLT32X_MAX__ 1.7
 0410 39373639 33313334 38363233 31353730  9769313486231570
 0420 38313435 32373432 33373331 37303433  8145274237317043
 0430 3537652b 33303846 33327800 5f5f676c  57e+308F32x.__gl
 0440 6962635f 756e6c69 6b656c79 28636f6e  ibc_unlikely(con
 0450 6429205f 5f627569 6c74696e 5f657870  d) __builtin_exp
 0460 65637420 2828636f 6e64292c 20302900  ect ((cond), 0).
 0470 5f5f5349 5a454f46 5f57494e 545f545f  __SIZEOF_WINT_T_
 0480 5f203400 5f5f474e 55435f50 52455245  _ 4.__GNUC_PRERE
 0490 51286d61 6a2c6d69 6e292028 285f5f47  Q(maj,min) ((__G
 04a0 4e55435f 5f203c3c 20313629 202b205f  NUC__ << 16) + _
 04b0 5f474e55 435f4d49 4e4f525f 5f203e3d  _GNUC_MINOR__ >=
 04c0 2028286d 616a2920 3c3c2031 3629202b   ((maj) << 16) +
 04d0 20286d69 6e292900 5f5f5549 4e545054   (min)).__UINTPT
 04e0 525f4d41 585f5f20 30786666 66666666  R_MAX__ 0xffffff
 04f0 66666666 66666666 6666554c 005f5f76  ffffffffffUL.__v
 0500 615f6172 675f7061 636b5f6c 656e2829  a_arg_pack_len()
 0510 205f5f62 75696c74 696e5f76 615f6172   __builtin_va_ar
 0520 675f7061 636b5f6c 656e2028 29005f47  g_pack_len ()._G
 0530 5f484156 455f4d4d 41502031 005f5f61  _HAVE_MMAP 1.__a
 0540 74747269 62757465 5f636f6e 73745f5f  ttribute_const__
 0550 205f5f61 74747269 62757465 5f5f2028   __attribute__ (
 0560 285f5f63 6f6e7374 5f5f2929 005f5f47  (__const__)).__G
 0570 4c494243 5f555345 5f444550 52454341  LIBC_USE_DEPRECA
 0580 5445445f 47455453 005f494f 5f4e4f5f  TED_GETS._IO_NO_
 0590 57524954 45532038 005f5f47 4e55435f  WRITES 8.__GNUC_
 05a0 4d494e4f 525f5f20 33005f5f 5553455f  MINOR__ 3.__USE_
 05b0 4c415247 4546494c 45363400 5f5f524c  LARGEFILE64.__RL
 05c0 494d5f54 5f545950 45205f5f 53595343  IM_T_TYPE __SYSC
 05d0 414c4c5f 554c4f4e 475f5459 5045005f  ALL_ULONG_TYPE._
 05e0 5f4c4442 4c5f5245 44495228 6e616d65  _LDBL_REDIR(name
 05f0 2c70726f 746f2920 6e616d65 2070726f  ,proto) name pro
 0600 746f005f 494f5f77 72697465 5f656e64  to._IO_write_end
 0610 005f5f47 4c494243 5f505245 52455128  .__GLIBC_PREREQ(
 0620 6d616a2c 6d696e29 2028285f 5f474c49  maj,min) ((__GLI
 0630 42435f5f 203c3c20 31362920 2b205f5f  BC__ << 16) + __
 0640 474c4942 435f4d49 4e4f525f 5f203e3d  GLIBC_MINOR__ >=
 0650 2028286d 616a2920 3c3c2031 3629202b   ((maj) << 16) +
 0660 20286d69 6e292900 5f5f6e65 65645f4e   (min)).__need_N
 0670 554c4c20 005f5f46 4c543634 5f4d494e  ULL .__FLT64_MIN
 0680 5f5f2032 2e323235 30373338 35383530  __ 2.22507385850
 0690 37323031 33383330 39303233 32373137  7201383090232717
 06a0 33333234 30343036 652d3330 38463634  33240406e-308F64
 06b0 005f5f4c 4f4e475f 4c4f4e47 5f574944  .__LONG_LONG_WID
 06c0 54485f5f 20363400 5f504f53 49585f53  TH__ 64._POSIX_S
 06d0 4f555243 45005f5f 464c545f 44454e4f  OURCE.__FLT_DENO
 06e0 524d5f4d 494e5f5f 20312e34 30313239  RM_MIN__ 1.40129
 06f0 38343634 33323438 31373037 30393233  8464324817070923
 0700 37323935 38333238 39393136 3133652d  72958328991613e-
 0710 34354600 2f686f6d 652f7562 756e7475  45F./home/ubuntu
 0720 2f456e67 696e6565 72696e67 2f50726f  /Engineering/Pro
 0730 6772616d 6d696e67 2f446973 61737365  gramming/Disasse
 0740 6d626c69 6e672d42 696e6172 6965732f  mbling-Binaries/
 0750 432f496e 74656c5f 61726368 69746563  C/Intel_architec
 0760 74757265 2f414d44 36342f43 6f6e6469  ture/AMD64/Condi
 0770 74696f6e 616c732f 57697468 5f446562  tionals/With_Deb
 0780 75675f49 6e666f00 5f5f5349 5a454f46  ug_Info.__SIZEOF
 0790 5f53495a 455f545f 5f203800 61726763  _SIZE_T__ 8.argc
 07a0 005f5f4f 52444552 5f424947 5f454e44  .__ORDER_BIG_END
 07b0 49414e5f 5f203433 3231005f 5f474e55  IAN__ 4321.__GNU
 07c0 435f5f20 37005f49 4f5f4c49 4e455f42  C__ 7._IO_LINE_B
 07d0 55462030 78323030 005f5f55 53455f49  UF 0x200.__USE_I
 07e0 534f4358 58313100 5f5f5553 455f4154  SOCXX11.__USE_AT
 07f0 46494c45 2031005f 5f6e6f6e 6e756c6c  FILE 1.__nonnull
 0800 28706172 616d7329 205f5f61 74747269  (params) __attri
 0810 62757465 5f5f2028 285f5f6e 6f6e6e75  bute__ ((__nonnu
 0820 6c6c5f5f 20706172 616d7329 29005f5f  ll__ params)).__
 0830 55494e54 36345f43 28632920 63202323  UINT64_C(c) c ##
 0840 20554c00 5f5f474e 555f4c49 42524152   UL.__GNU_LIBRAR
 0850 595f5f00 5f5f4442 4c5f4d41 4e545f44  Y__.__DBL_MANT_D
 0860 49475f5f 20353300 5f5f5553 455f504f  IG__ 53.__USE_PO
 0870 53495831 39393530 36203100 5f5f7374  SIX199506 1.__st
 0880 75625f63 68666c61 67732000 5f5f494e  ub_chflags .__IN
 0890 545f4d41 585f5f20 30783766 66666666  T_MAX__ 0x7fffff
 08a0 6666005f 666c6167 7332005f 5f4e5448  ff._flags2.__NTH
 08b0 4e4c2866 63742920 5f5f6174 74726962  NL(fct) __attrib
 08c0 7574655f 5f202828 5f5f6e6f 7468726f  ute__ ((__nothro
 08d0 775f5f29 29206663 74005f5f 73747562  w__)) fct.__stub
 08e0 5f666368 666c6167 7320005f 5f494e54  _fchflags .__INT
 08f0 31365f54 5950455f 5f207368 6f727420  16_TYPE__ short 
 0900 696e7400 5f5f4445 43494d41 4c5f4249  int.__DECIMAL_BI
 0910 445f464f 524d4154 5f5f2031 005f5f44  D_FORMAT__ 1.__D
 0920 45433332 5f455053 494c4f4e 5f5f2031  EC32_EPSILON__ 1
 0930 452d3644 46005f53 495a455f 545f4445  E-6DF._SIZE_T_DE
 0940 434c4152 45442000 5f5f4644 5f534554  CLARED .__FD_SET
 0950 53495a45 20313032 34005f5f 4c44424c  SIZE 1024.__LDBL
 0960 5f444947 5f5f2031 38005f6d 61726b65  _DIG__ 18._marke
 0970 7273005f 5f41544f 4d49435f 5345515f  rs.__ATOMIC_SEQ_
 0980 43535420 35005f5f 5553455f 504f5349  CST 5.__USE_POSI
 0990 58322031 005f5f55 53455f49 534f4339  X2 1.__USE_ISOC9
 09a0 35203100 5f5f5349 5a454f46 5f53484f  5 1.__SIZEOF_SHO
 09b0 52545f5f 2032005f 475f7661 5f6c6973  RT__ 2._G_va_lis
 09c0 74205f5f 676e7563 5f76615f 6c697374  t __gnuc_va_list
 09d0 005f5f55 494e5436 345f5459 50455f5f  .__UINT64_TYPE__
 09e0 206c6f6e 6720756e 7369676e 65642069   long unsigned i
 09f0 6e74005f 5f494e54 5f464153 5433325f  nt.__INT_FAST32_
 0a00 4d41585f 5f203078 37666666 66666666  MAX__ 0x7fffffff
 0a10 66666666 66666666 4c005f5f 494e545f  ffffffffL.__INT_
 0a20 4c454153 54385f54 5950455f 5f207369  LEAST8_TYPE__ si
 0a30 676e6564 20636861 72005f5f 73697a65  gned char.__size
 0a40 5f742000 5f5f5549 4e545f4c 45415354  _t .__UINT_LEAST
 0a50 33325f54 5950455f 5f20756e 7369676e  32_TYPE__ unsign
 0a60 65642069 6e74005f 5f737475 625f7369  ed int.__stub_si
 0a70 67726574 75726e20 005f5f70 74725f74  greturn .__ptr_t
 0a80 20766f69 64202a00 5f5f5333 325f5459   void *.__S32_TY
 0a90 50452069 6e74005f 5f535444 435f4e4f  PE int.__STDC_NO
 0aa0 5f544852 45414453 5f5f2031 005f5f42  _THREADS__ 1.__B
 0ab0 5954455f 4f524445 525f5f20 5f5f4f52  YTE_ORDER__ __OR
 0ac0 4445525f 4c495454 4c455f45 4e444941  DER_LITTLE_ENDIA
 0ad0 4e5f5f00 5f5f4c44 424c5f4d 494e5f5f  N__.__LDBL_MIN__
 0ae0 20332e33 36323130 33313433 31313230   3.3621031431120
 0af0 39333530 36323632 36373738 31373332  9350626267781732
 0b00 31373532 3630652d 34393332 4c005f5f  175260e-4932L.__
 0b10 464c5433 325f4d49 4e5f3130 5f455850  FLT32_MIN_10_EXP
 0b20 5f5f2028 2d333729 005f5f44 424c5f48  __ (-37).__DBL_H
 0b30 41535f44 454e4f52 4d5f5f20 31005f5f  AS_DENORM__ 1.__
 0b40 494e545f 4c454153 5436345f 54595045  INT_LEAST64_TYPE
 0b50 5f5f206c 6f6e6720 696e7400 5f5f5743  __ long int.__WC
 0b60 4841525f 4d494e5f 5f20282d 5f5f5743  HAR_MIN__ (-__WC
 0b70 4841525f 4d41585f 5f202d20 3129005f  HAR_MAX__ - 1)._
 0b80 494f5f53 484f5750 4f494e54 20303430  IO_SHOWPOINT 040
 0b90 30005f5f 6f66665f 745f6465 66696e65  0.__off_t_define
 0ba0 6420005f 5f535444 435f5554 465f3332  d .__STDC_UTF_32
 0bb0 5f5f2031 005f5f42 4c4b5349 5a455f54  __ 1.__BLKSIZE_T
 0bc0 5f545950 45205f5f 53595343 414c4c5f  _TYPE __SYSCALL_
 0bd0 534c4f4e 475f5459 5045005f 5f494e54  SLONG_TYPE.__INT
 0be0 5f4c4541 53543136 5f4d4158 5f5f2030  _LEAST16_MAX__ 0
 0bf0 78376666 66005f5f 4c44424c 5f524544  x7fff.__LDBL_RED
 0c00 49525f44 45434c28 6e616d65 29200047  IR_DECL(name) .G
 0c10 4e552043 31312037 2e332e30 202d6d74  NU C11 7.3.0 -mt
 0c20 756e653d 67656e65 72696320 2d6d6172  une=generic -mar
 0c30 63683d78 38362d36 34202d67 67646233  ch=x86-64 -ggdb3
 0c40 202d6673 7461636b 2d70726f 74656374   -fstack-protect
 0c50 6f722d73 74726f6e 67005f5f 53434841  or-strong.__SCHA
 0c60 525f4d41 585f5f20 30783766 005f5f65  R_MAX__ 0x7f.__e
 0c70 78746572 6e5f616c 77617973 5f696e6c  xtern_always_inl
 0c80 696e6520 65787465 726e205f 5f616c77  ine extern __alw
 0c90 6179735f 696e6c69 6e65205f 5f617474  ays_inline __att
 0ca0 72696275 74655f5f 2028285f 5f676e75  ribute__ ((__gnu
 0cb0 5f696e6c 696e655f 5f292900 5f5f464c  _inline__)).__FL
 0cc0 5436345f 4449475f 5f203135 005f5f49  T64_DIG__ 15.__I
 0cd0 4e545f46 41535438 5f545950 455f5f20  NT_FAST8_TYPE__ 
 0ce0 7369676e 65642063 68617200 5f5f5049  signed char.__PI
 0cf0 455f5f20 32005f49 4f5f6f66 6636345f  E__ 2._IO_off64_
 0d00 74205f5f 6f666636 345f7400 69665f74  t __off64_t.if_t
 0d10 68656e2e 63005f5f 474c4942 435f5553  hen.c.__GLIBC_US
 0d20 455f4945 435f3630 3535395f 54595045  E_IEC_60559_TYPE
 0d30 535f4558 54005f5f 464c5433 32585f48  S_EXT.__FLT32X_H
 0d40 41535f49 4e46494e 4954595f 5f203100  AS_INFINITY__ 1.
 0d50 5f5f5553 455f554e 49583938 005f5f55  __USE_UNIX98.__U
 0d60 53455f46 4f525449 46595f4c 4556454c  SE_FORTIFY_LEVEL
 0d70 2030005f 41544649 4c455f53 4f555243   0._ATFILE_SOURC
 0d80 45005f5f 5553455f 41544649 4c45005f  E.__USE_ATFILE._
 0d90 5f55494e 545f4c45 41535438 5f545950  _UINT_LEAST8_TYP
 0da0 455f5f20 756e7369 676e6564 20636861  E__ unsigned cha
 0db0 72005f5f 53495a45 4f465f49 4e543132  r.__SIZEOF_INT12
 0dc0 385f5f20 3136005f 5f4e5448 28666374  8__ 16.__NTH(fct
 0dd0 29205f5f 61747472 69627574 655f5f20  ) __attribute__ 
 0de0 28285f5f 6e6f7468 726f775f 5f205f5f  ((__nothrow__ __
 0df0 4c454146 29292066 6374005f 494f535f  LEAF)) fct._IOS_
 0e00 4154454e 44203400 5f5f676c 6962635f  ATEND 4.__glibc_
 0e10 6d616372 6f5f7761 726e696e 67286d65  macro_warning(me
 0e20 73736167 6529205f 5f676c69 62635f6d  ssage) __glibc_m
 0e30 6163726f 5f776172 6e696e67 31202847  acro_warning1 (G
 0e40 43432077 61726e69 6e67206d 65737361  CC warning messa
 0e50 67652900 5f5f464c 54313238 5f484153  ge).__FLT128_HAS
 0e60 5f515549 45545f4e 414e5f5f 2031005f  _QUIET_NAN__ 1._
 0e70 545f5349 5a452000 5f5f464c 54313238  T_SIZE .__FLT128
 0e80 5f4d4158 5f5f2031 2e313839 37333134  _MAX__ 1.1897314
 0e90 39353335 37323331 37363530 38353735  9535723176508575
 0ea0 39333236 36323830 30373032 652b3439  932662800702e+49
 0eb0 33324631 32380042 55465349 5a205f49  32F128.BUFSIZ _I
 0ec0 4f5f4255 4653495a 005f4154 46494c45  O_BUFSIZ._ATFILE
 0ed0 5f534f55 52434520 31005f5f 464c5436  _SOURCE 1.__FLT6
 0ee0 34585f44 49475f5f 20313800 5f5f494e  4X_DIG__ 18.__IN
 0ef0 545f4c45 41535431 365f5749 4454485f  T_LEAST16_WIDTH_
 0f00 5f203136 005f5f46 5349445f 545f5459  _ 16.__FSID_T_TY
 0f10 50452073 74727563 74207b20 696e7420  PE struct { int 
 0f20 5f5f7661 6c5b325d 3b207d00 5f5f7373  __val[2]; }.__ss
 0f30 697a655f 745f6465 66696e65 6420005f  ize_t_defined ._
 0f40 545f5349 5a455f20 005f706f 73005f49  T_SIZE_ ._pos._I
 0f50 4f5f6665 72726f72 5f756e6c 6f636b65  O_ferror_unlocke
 0f60 64285f5f 66702920 2828285f 5f667029  d(__fp) (((__fp)
 0f70 2d3e5f66 6c616773 2026205f 494f5f45  ->_flags & _IO_E
 0f80 52525f53 45454e29 20213d20 3029005f  RR_SEEN) != 0)._
 0f90 5f657874 65726e5f 696e6c69 6e652065  _extern_inline e
 0fa0 78746572 6e205f5f 696e6c69 6e65205f  xtern __inline _
 0fb0 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 0fc0 5f676e75 5f696e6c 696e655f 5f292900  _gnu_inline__)).
 0fd0 5f474343 5f53495a 455f5420 005f5f46  _GCC_SIZE_T .__F
 0fe0 4c543332 5f484153 5f44454e 4f524d5f  LT32_HAS_DENORM_
 0ff0 5f203100 5f5f756e 69785f5f 2031005f  _ 1.__unix__ 1._
 1000 5f474343 5f484156 455f5359 4e435f43  _GCC_HAVE_SYNC_C
 1010 4f4d5041 52455f41 4e445f53 5741505f  OMPARE_AND_SWAP_
 1020 31203100 5f494f5f 73617665 5f656e64  1 1._IO_save_end
 1030 005f5f46 4c543634 585f4d49 4e5f4558  .__FLT64X_MIN_EX
 1040 505f5f20 282d3136 33383129 005f4253  P__ (-16381)._BS
 1050 445f5349 5a455f54 5f20005f 5f737475  D_SIZE_T_ .__stu
 1060 625f7365 746c6f67 696e2000 5f5f464c  b_setlogin .__FL
 1070 545f4449 475f5f20 36005f5f 494e545f  T_DIG__ 6.__INT_
 1080 46415354 31365f57 49445448 5f5f2036  FAST16_WIDTH__ 6
 1090 34005f5f 4743435f 41544f4d 49435f42  4.__GCC_ATOMIC_B
 10a0 4f4f4c5f 4c4f434b 5f465245 45203200  OOL_LOCK_FREE 2.
 10b0 5f494f5f 6f66665f 74205f5f 6f66665f  _IO_off_t __off_
 10c0 74005f5f 7069655f 5f203200 5f535444  t.__pie__ 2._STD
 10d0 494f5f48 2031005f 5f444543 33325f4d  IO_H 1.__DEC32_M
 10e0 494e5f5f 2031452d 39354446 005f5f49  IN__ 1E-95DF.__I
 10f0 4e544d41 585f4d41 585f5f20 30783766  NTMAX_MAX__ 0x7f
 1100 66666666 66666666 66666666 66664c00  ffffffffffffffL.
 1110 5f424954 535f4c49 42494f5f 48203100  _BITS_LIBIO_H 1.
 1120 5f5f4743 435f4945 435f3535 39203200  __GCC_IEC_559 2.
 1130 5f5f464c 54313238 5f4d494e 5f455850  __FLT128_MIN_EXP
 1140 5f5f2028 2d313633 38312900 5f5f464c  __ (-16381).__FL
 1150 5433325f 4841535f 51554945 545f4e41  T32_HAS_QUIET_NA
 1160 4e5f5f20 31005f42 53445f53 495a455f  N__ 1._BSD_SIZE_
 1170 545f4445 46494e45 445f2000 5f5f5549  T_DEFINED_ .__UI
 1180 4e545f4c 45415354 31365f4d 41585f5f  NT_LEAST16_MAX__
 1190 20307866 66666600 5f5f5549 4e545f46   0xffff.__UINT_F
 11a0 41535436 345f4d41 585f5f20 30786666  AST64_MAX__ 0xff
 11b0 66666666 66666666 66666666 6666554c  ffffffffffffffUL
 11c0 005f494f 5f455252 5f534545 4e203078  ._IO_ERR_SEEN 0x
 11d0 3230005f 5f617474 72696275 74655f75  20.__attribute_u
 11e0 7365645f 5f205f5f 61747472 69627574  sed__ __attribut
 11f0 655f5f20 28285f5f 75736564 5f5f2929  e__ ((__used__))
 1200 005f5f61 74747269 62757465 5f617274  .__attribute_art
 1210 69666963 69616c5f 5f205f5f 61747472  ificial__ __attr
 1220 69627574 655f5f20 28285f5f 61727469  ibute__ ((__arti
 1230 66696369 616c5f5f 2929005f 494f5f66  ficial__))._IO_f
 1240 7472796c 6f636b66 696c6528 5f667029  trylockfile(_fp)
 1250 20005f5f 55494e54 5f4c4541 5354385f   .__UINT_LEAST8_
 1260 4d41585f 5f203078 6666005f 5f474c49  MAX__ 0xff.__GLI
 1270 42435f55 53455f4c 49425f45 58543220  BC_USE_LIB_EXT2 
 1280 30005f5f 44454331 32385f4d 494e5f45  0.__DEC128_MIN_E
 1290 58505f5f 20282d36 31343229 005f5f4b  XP__ (-6142).__K
 12a0 45524e45 4c5f5354 52494354 5f4e414d  ERNEL_STRICT_NAM
 12b0 45532000 5f5f5743 4841525f 54595045  ES .__WCHAR_TYPE
 12c0 5f5f2069 6e74005f 5f494e54 385f4d41  __ int.__INT8_MA
 12d0 585f5f20 30783766 00676574 63285f66  X__ 0x7f.getc(_f
 12e0 7029205f 494f5f67 65746320 285f6670  p) _IO_getc (_fp
 12f0 29005f5f 44454331 32385f45 5053494c  ).__DEC128_EPSIL
 1300 4f4e5f5f 2031452d 3333444c 005f5f55  ON__ 1E-33DL.__U
 1310 53455f50 4f534958 31393935 3036005f  SE_POSIX199506._
 1320 5f6e6565 645f4e55 4c4c005f 5f524544  _need_NULL.__RED
 1330 49524543 545f4e54 485f4c44 424c286e  IRECT_NTH_LDBL(n
 1340 616d652c 70726f74 6f2c616c 69617329  ame,proto,alias)
 1350 205f5f52 45444952 4543545f 4e544820   __REDIRECT_NTH 
 1360 286e616d 652c2070 726f746f 2c20616c  (name, proto, al
 1370 69617329 005f5f52 45444952 4543545f  ias).__REDIRECT_
 1380 4e54484e 4c286e61 6d652c70 726f746f  NTHNL(name,proto
 1390 2c616c69 61732920 6e616d65 2070726f  ,alias) name pro
 13a0 746f205f 5f61736d 5f5f2028 5f5f4153  to __asm__ (__AS
 13b0 4d4e414d 45202823 616c6961 73292920  MNAME (#alias)) 
 13c0 5f5f5448 524f574e 4c005f5f 464c5431  __THROWNL.__FLT1
 13d0 32385f4d 41585f45 58505f5f 20313633  28_MAX_EXP__ 163
 13e0 3834005f 5f464c54 5f524144 49585f5f  84.__FLT_RADIX__
 13f0 2032005f 5f464c54 3332585f 44454e4f   2.__FLT32X_DENO
 1400 524d5f4d 494e5f5f 20342e39 34303635  RM_MIN__ 4.94065
 1410 36343538 34313234 36353434 31373635  6458412465441765
 1420 36383739 32383638 32323133 3732652d  68792868221372e-
 1430 33323446 33327800 5f5f676c 6962635f  324F32x.__glibc_
 1440 636c616e 675f6861 735f6578 74656e73  clang_has_extens
 1450 696f6e28 65787429 2030005f 5f504d54  ion(ext) 0.__PMT
 1460 28617267 73292061 72677300 5f5f4749  (args) args.__GI
 1470 445f545f 54595045 205f5f55 33325f54  D_T_TYPE __U32_T
 1480 59504500 5f5f5349 5a454f46 5f4c4f4e  YPE.__SIZEOF_LON
 1490 475f444f 55424c45 5f5f2031 36005f5f  G_DOUBLE__ 16.__
 14a0 44424c5f 4841535f 51554945 545f4e41  DBL_HAS_QUIET_NA
 14b0 4e5f5f20 31005f5f 77757220 005f4249  N__ 1.__wur ._BI
 14c0 54535f54 59504553 5f482031 005f5f4c  TS_TYPES_H 1.__L
 14d0 44424c5f 44454e4f 524d5f4d 494e5f5f  DBL_DENORM_MIN__
 14e0 20332e36 34353139 39353331 38383234   3.6451995318824
 14f0 37343630 32353238 34303539 33333631  7460252840593361
 1500 39343139 3832652d 34393531 4c005f5f  941982e-4951L.__
 1510 5049445f 545f5459 5045205f 5f533332  PID_T_TYPE __S32
 1520 5f545950 45005f5f 73747562 5f666174  _TYPE.__stub_fat
 1530 74616368 20007379 735f6572 726c6973  tach .sys_errlis
 1540 74005f5f 464c5436 345f4841 535f494e  t.__FLT64_HAS_IN
 1550 46494e49 54595f5f 2031005f 5f55494e  FINITY__ 1.__UIN
 1560 545f4641 5354385f 4d41585f 5f203078  T_FAST8_MAX__ 0x
 1570 6666005f 5f41544f 4d49435f 484c455f  ff.__ATOMIC_HLE_
 1580 52454c45 41534520 31333130 3732005f  RELEASE 131072._
 1590 5f4c4442 4c5f4d41 585f4558 505f5f20  _LDBL_MAX_EXP__ 
 15a0 31363338 34005f5f 73747562 5f677474  16384.__stub_gtt
 15b0 7920005f 42495453 5f545950 4553495a  y ._BITS_TYPESIZ
 15c0 45535f48 2031005f 5f555345 434f4e44  ES_H 1.__USECOND
 15d0 535f545f 54595045 205f5f55 33325f54  S_T_TYPE __U32_T
 15e0 59504500 5f494f5f 7065656b 63285f66  YPE._IO_peekc(_f
 15f0 7029205f 494f5f70 65656b63 5f756e6c  p) _IO_peekc_unl
 1600 6f636b65 6420285f 66702900 5f5f494e  ocked (_fp).__IN
 1610 54505452 5f545950 455f5f20 6c6f6e67  TPTR_TYPE__ long
 1620 20696e74 005f5f44 45433634 5f4d4158   int.__DEC64_MAX
 1630 5f5f2039 2e393939 39393939 39393939  __ 9.99999999999
 1640 39393939 45333834 44440073 79735f6e  9999E384DD.sys_n
 1650 65727200 5f5f4743 435f4154 4f4d4943  err.__GCC_ATOMIC
 1660 5f494e54 5f4c4f43 4b5f4652 45452032  _INT_LOCK_FREE 2
 1670 005f5359 535f5349 5a455f54 5f482000  ._SYS_SIZE_T_H .
 1680 5f5f4d4d 585f5f20 31005f5f 424c4b43  __MMX__ 1.__BLKC
 1690 4e545f54 5f545950 45205f5f 53595343  NT_T_TYPE __SYSC
 16a0 414c4c5f 534c4f4e 475f5459 5045005f  ALL_SLONG_TYPE._
 16b0 494f5f53 484f5742 41534520 30323030  IO_SHOWBASE 0200
 16c0 005f5f73 7475625f 73747479 20005f66  .__stub_stty ._f
 16d0 696c656e 6f005f5f 48415645 5f47454e  ileno.__HAVE_GEN
 16e0 45524943 5f53454c 45435449 4f4e2031  ERIC_SELECTION 1
 16f0 005f5f52 4c494d36 345f545f 54595045  .__RLIM64_T_TYPE
 1700 205f5f55 51554144 5f545950 45005f5f   __UQUAD_TYPE.__
 1710 464c5431 32385f4d 414e545f 4449475f  FLT128_MANT_DIG_
 1720 5f203131 33005f5f 4f524445 525f4c49  _ 113.__ORDER_LI
 1730 54544c45 5f454e44 49414e5f 5f203132  TTLE_ENDIAN__ 12
 1740 3334005f 5f555345 5f584f50 454e324b  34.__USE_XOPEN2K
 1750 2031005f 5f53495a 454f465f 50545244   1.__SIZEOF_PTRD
 1760 4946465f 545f5f20 38005f49 4f535f54  IFF_T__ 8._IOS_T
 1770 52554e43 20313600 5f5f4445 43313238  RUNC 16.__DEC128
 1780 5f4d414e 545f4449 475f5f20 3334005f  _MANT_DIG__ 34._
 1790 5f555345 5f49534f 43393920 31005f5f  _USE_ISOC99 1.__
 17a0 494e5433 325f5459 50455f5f 20696e74  INT32_TYPE__ int
 17b0 005f5f4b 45524e45 4c5f5354 52494354  .__KERNEL_STRICT
 17c0 5f4e414d 4553005f 5f553332 5f545950  _NAMES.__U32_TYP
 17d0 4520756e 7369676e 65642069 6e74005f  E unsigned int._
 17e0 5f636f64 655f6d6f 64656c5f 736d616c  _code_model_smal
 17f0 6c5f5f20 31005f5f 5553455f 49534f43  l__ 1.__USE_ISOC
 1800 3935005f 5f464c54 3634585f 4841535f  95.__FLT64X_HAS_
 1810 44454e4f 524d5f5f 2031005f 5f444543  DENORM__ 1.__DEC
 1820 33325f4d 41585f45 58505f5f 20393700  32_MAX_EXP__ 97.
 1830 5f494f4e 42462032 005f5f55 53455f49  _IONBF 2.__USE_I
 1840 534f4339 39007374 64657272 20737464  SOC99.stderr std
 1850 65727200 5f767461 626c655f 6f666673  err._vtable_offs
 1860 6574005f 475f494f 5f494f5f 46494c45  et._G_IO_IO_FILE
 1870 5f564552 53494f4e 20307832 30303031  _VERSION 0x20001
 1880 005f494f 5f544945 445f5055 545f4745  ._IO_TIED_PUT_GE
 1890 54203078 34303000 4c5f746d 706e616d  T 0x400.L_tmpnam
 18a0 20323000 5f494f5f 636c6561 6e75705f   20._IO_cleanup_
 18b0 72656769 6f6e5f73 74617274 285f6663  region_start(_fc
 18c0 742c5f66 70292000 5f5f5354 44435f49  t,_fp) .__STDC_I
 18d0 45435f35 35395f43 4f4d504c 45585f5f  EC_559_COMPLEX__
 18e0 2031005f 5f474c49 42435f55 53455f44   1.__GLIBC_USE_D
 18f0 45505245 43415445 445f4745 54532030  EPRECATED_GETS 0
 1900 005f494f 5f484558 20303130 30005f5f  ._IO_HEX 0100.__
 1910 464c5436 34585f4d 494e5f31 305f4558  FLT64X_MIN_10_EX
 1920 505f5f20 282d3439 33312900 5f5f7374  P__ (-4931).__st
 1930 75625f70 75746d73 6720005f 494f5f72  ub_putmsg ._IO_r
 1940 6561645f 62617365 005f5f53 5444435f  ead_base.__STDC_
 1950 49534f5f 31303634 365f5f20 32303137  ISO_10646__ 2017
 1960 30364c00 5f5f4245 47494e5f 4445434c  06L.__BEGIN_DECL
 1970 5320005f 494f5f73 7464696e 2028285f  S ._IO_stdin ((_
 1980 494f5f46 494c452a 2928265f 494f5f32  IO_FILE*)(&_IO_2
 1990 5f315f73 7464696e 5f292900 5f5f464c  _1_stdin_)).__FL
 19a0 54313238 5f4d4158 5f31305f 4558505f  T128_MAX_10_EXP_
 19b0 5f203439 3332005f 5f464c54 3132385f  _ 4932.__FLT128_
 19c0 4d494e5f 5f20332e 33363231 30333134  MIN__ 3.36210314
 19d0 33313132 30393335 30363236 32363737  3112093506262677
 19e0 38313733 32313735 32363065 2d343933  81732175260e-493
 19f0 32463132 38005f5f 53555345 434f4e44  2F128.__SUSECOND
 1a00 535f545f 54595045 205f5f53 59534341  S_T_TYPE __SYSCA
 1a10 4c4c5f53 4c4f4e47 5f545950 45005345  LL_SLONG_TYPE.SE
 1a20 454b5f45 4e442032 005f5f49 4e545f46  EK_END 2.__INT_F
 1a30 41535438 5f574944 54485f5f 2038005f  AST8_WIDTH__ 8._
 1a40 5f464c54 36345f4d 494e5f31 305f4558  _FLT64_MIN_10_EX
 1a50 505f5f20 282d3330 3729005f 5f737475  P__ (-307).__stu
 1a60 625f6664 65746163 6820005f 6e657874  b_fdetach ._next
 1a70 005f5f44 424c5f4d 41585f5f 20282864  .__DBL_MAX__ ((d
 1a80 6f75626c 6529312e 37393736 39333133  ouble)1.79769313
 1a90 34383632 33313537 30383134 35323734  4862315708145274
 1aa0 32333733 31373034 33353765 2b333038  23731704357e+308
 1ab0 4c29005f 44454641 554c545f 534f5552  L)._DEFAULT_SOUR
 1ac0 43452031 005f5f52 4c494d5f 545f4d41  CE 1.__RLIM_T_MA
 1ad0 54434845 535f524c 494d3634 5f542031  TCHES_RLIM64_T 1
 1ae0 005f5f61 6d643634 5f5f2031 005f5f5f  .__amd64__ 1.___
 1af0 5f6d6273 74617465 5f745f64 6566696e  _mbstate_t_defin
 1b00 65642031 005f494f 5f44454c 4554455f  ed 1._IO_DELETE_
 1b10 444f4e54 5f434c4f 53452030 78343000  DONT_CLOSE 0x40.
 1b20 5f5f464c 5433325f 44454349 4d414c5f  __FLT32_DECIMAL_
 1b30 4449475f 5f203900 5f5f464c 54313238  DIG__ 9.__FLT128
 1b40 5f444947 5f5f2033 33005f5f 55494e54  _DIG__ 33.__UINT
 1b50 31365f54 5950455f 5f207368 6f727420  16_TYPE__ short 
 1b60 756e7369 676e6564 20696e74 005f5f48  unsigned int.__H
 1b70 4156455f 434f4c55 4d4e2000 5f4f4c44  AVE_COLUMN ._OLD
 1b80 5f535444 494f5f4d 41474943 20307846  _STDIO_MAGIC 0xF
 1b90 41424330 30303000 5f494f53 5f4e4f43  ABC0000._IOS_NOC
 1ba0 52454154 45203332 005f5f57 43484152  REATE 32.__WCHAR
 1bb0 5f574944 54485f5f 20333200 5f5f4743  _WIDTH__ 32.__GC
 1bc0 435f4154 4f4d4943 5f434841 525f4c4f  C_ATOMIC_CHAR_LO
 1bd0 434b5f46 52454520 32005f49 4f5f6d61  CK_FREE 2._IO_ma
 1be0 726b6572 005f5f42 49474745 53545f41  rker.__BIGGEST_A
 1bf0 4c49474e 4d454e54 5f5f2031 36005f5f  LIGNMENT__ 16.__
 1c00 4c4f4e47 5f4c4f4e 475f4d41 585f5f20  LONG_LONG_MAX__ 
 1c10 30783766 66666666 66666666 66666666  0x7fffffffffffff
 1c20 66664c4c 005f5f55 4c4f4e47 33325f54  ffLL.__ULONG32_T
 1c30 59504520 756e7369 676e6564 20696e74  YPE unsigned int
 1c40 005f5f55 494e545f 4c454153 5431365f  .__UINT_LEAST16_
 1c50 54595045 5f5f2073 686f7274 20756e73  TYPE__ short uns
 1c60 69676e65 6420696e 74005f5f 464c545f  igned int.__FLT_
 1c70 4d41585f 31305f45 58505f5f 20333800  MAX_10_EXP__ 38.
 1c80 5f494f5f 534b4950 57532030 31005f5f  _IO_SKIPWS 01.__
 1c90 464c5433 32585f45 5053494c 4f4e5f5f  FLT32X_EPSILON__
 1ca0 20322e32 32303434 36303439 32353033   2.2204460492503
 1cb0 31333038 30383437 32363333 33363138  1308084726333618
 1cc0 31363430 3632652d 31364633 3278004e  164062e-16F32x.N
 1cd0 554c4c20 2828766f 6964202a 29302900  ULL ((void *)0).
 1ce0 61726776 005f5f55 53455f50 4f534958  argv.__USE_POSIX
 1cf0 5f494d50 4c494349 544c5920 31005f49  _IMPLICITLY 1._I
 1d00 4f5f6665 6f665f75 6e6c6f63 6b656428  O_feof_unlocked(
 1d10 5f5f6670 29202828 285f5f66 70292d3e  __fp) (((__fp)->
 1d20 5f666c61 67732026 205f494f 5f454f46  _flags & _IO_EOF
 1d30 5f534545 4e292021 3d203029 005f5f4e  _SEEN) != 0).__N
 1d40 4f5f494e 4c494e45 5f5f2031 005f494f  O_INLINE__ 1._IO
 1d50 5f737464 65727220 28285f49 4f5f4649  _stderr ((_IO_FI
 1d60 4c452a29 28265f49 4f5f325f 315f7374  LE*)(&_IO_2_1_st
 1d70 64657272 5f292900 5f5f7661 5f617267  derr_)).__va_arg
 1d80 5f706163 6b282920 5f5f6275 696c7469  _pack() __builti
 1d90 6e5f7661 5f617267 5f706163 6b202829  n_va_arg_pack ()
 1da0 005f5f46 4c545f4d 414e545f 4449475f  .__FLT_MANT_DIG_
 1db0 5f203234 005f5f44 41444452 5f545f54  _ 24.__DADDR_T_T
 1dc0 59504520 5f5f5333 325f5459 5045005f  YPE __S32_TYPE._
 1dd0 5f464c54 36345f44 4543494d 414c5f44  _FLT64_DECIMAL_D
 1de0 49475f5f 20313700 5f5f4743 435f4841  IG__ 17.__GCC_HA
 1df0 56455f53 594e435f 434f4d50 4152455f  VE_SYNC_COMPARE_
 1e00 414e445f 53574150 5f342031 005f5f46  AND_SWAP_4 1.__F
 1e10 4c543332 5f4d494e 5f455850 5f5f2028  LT32_MIN_EXP__ (
 1e20 2d313235 29005f5f 53495a45 5f545950  -125).__SIZE_TYP
 1e30 455f5f20 6c6f6e67 20756e73 69676e65  E__ long unsigne
 1e40 6420696e 74005f5f 4c44424c 5f4d4158  d int.__LDBL_MAX
 1e50 5f5f2031 2e313839 37333134 39353335  __ 1.18973149535
 1e60 37323331 37363530 32313236 33383533  7231765021263853
 1e70 30333039 37303231 652b3439 33324c00  03097021e+4932L.
 1e80 5f5f4445 435f4556 414c5f4d 4554484f  __DEC_EVAL_METHO
 1e90 445f5f20 32005f5f 464c545f 4d41585f  D__ 2.__FLT_MAX_
 1ea0 5f20332e 34303238 32333436 36333835  _ 3.402823466385
 1eb0 32383835 39383131 37303431 38333438  2885981170418348
 1ec0 34353136 39323565 2b333846 005f494f  4516925e+38F._IO
 1ed0 5f756964 5f74205f 5f756964 5f74005f  _uid_t __uid_t._
 1ee0 5f44424c 5f4d494e 5f31305f 4558505f  _DBL_MIN_10_EXP_
 1ef0 5f20282d 33303729 005f494f 5f325f31  _ (-307)._IO_2_1
 1f00 5f737464 6572725f 005f5f55 494e5433  _stderr_.__UINT3
 1f10 325f4d41 585f5f20 30786666 66666666  2_MAX__ 0xffffff
 1f20 66665500 5f494f5f 4f435420 30343000  ffU._IO_OCT 040.
 1f30 5f5f464c 54313238 5f484153 5f494e46  __FLT128_HAS_INF
 1f40 494e4954 595f5f20 31005f6d 6f646500  INITY__ 1._mode.
 1f50 5f494f5f 48415645 5f53545f 424c4b53  _IO_HAVE_ST_BLKS
 1f60 495a4520 5f475f48 4156455f 53545f42  IZE _G_HAVE_ST_B
 1f70 4c4b5349 5a45005f 5f464c54 36345f48  LKSIZE.__FLT64_H
 1f80 41535f44 454e4f52 4d5f5f20 31005f5f  AS_DENORM__ 1.__
 1f90 464c545f 4556414c 5f4d4554 484f445f  FLT_EVAL_METHOD_
 1fa0 5f203000 5f5f4653 424c4b43 4e545f54  _ 0.__FSBLKCNT_T
 1fb0 5f545950 45205f5f 53595343 414c4c5f  _TYPE __SYSCALL_
 1fc0 554c4f4e 475f5459 5045005f 5f464c54  ULONG_TYPE.__FLT
 1fd0 3332585f 4841535f 44454e4f 524d5f5f  32X_HAS_DENORM__
 1fe0 2031005f 5f783836 5f36345f 5f203100   1.__x86_64__ 1.
 1ff0 5f5f464c 54363458 5f4d4158 5f455850  __FLT64X_MAX_EXP
 2000 5f5f2031 36333834 005f5f56 45525349  __ 16384.__VERSI
 2010 4f4e5f5f 2022372e 332e3022 005f494f  ON__ "7.3.0"._IO
 2020 5f4c494e 4b454420 30783830 005f5f52  _LINKED 0x80.__R
 2030 45444952 45435428 6e616d65 2c70726f  EDIRECT(name,pro
 2040 746f2c61 6c696173 29206e61 6d652070  to,alias) name p
 2050 726f746f 205f5f61 736d5f5f 20285f5f  roto __asm__ (__
 2060 41534d4e 414d4520 2823616c 69617329  ASMNAME (#alias)
 2070 29005f5f 4653424c 4b434e54 36345f54  ).__FSBLKCNT64_T
 2080 5f545950 45205f5f 55515541 445f5459  _TYPE __UQUAD_TY
 2090 5045005f 5f464c54 3634585f 4d41585f  PE.__FLT64X_MAX_
 20a0 5f20312e 31383937 33313439 35333537  _ 1.189731495357
 20b0 32333137 36353032 31323633 38353330  2317650212638530
 20c0 33303937 30323165 2b343933 32463634  3097021e+4932F64
 20d0 78005f49 4f5f7265 61645f70 7472005f  x._IO_read_ptr._
 20e0 5f53495a 455f5420 005f5f49 445f545f  _SIZE_T .__ID_T_
 20f0 54595045 205f5f55 33325f54 59504500  TYPE __U32_TYPE.
 2100 5f5f5349 5a455f54 5f5f2000 5f494f5f  __SIZE_T__ ._IO_
 2110 66756e6c 6f636b66 696c6528 5f667029  funlockfile(_fp)
 2120 20005f5f 4b45595f 545f5459 5045205f   .__KEY_T_TYPE _
 2130 5f533332 5f545950 45005f5f 494e545f  _S32_TYPE.__INT_
 2140 4c454153 5436345f 4d41585f 5f203078  LEAST64_MAX__ 0x
 2150 37666666 66666666 66666666 66666666  7fffffffffffffff
 2160 4c005f5f 494e545f 4c454153 54385f57  L.__INT_LEAST8_W
 2170 49445448 5f5f2038 005f5f4c 44424c5f  IDTH__ 8.__LDBL_
 2180 52454449 52315f4e 5448286e 616d652c  REDIR1_NTH(name,
 2190 70726f74 6f2c616c 69617329 206e616d  proto,alias) nam
 21a0 65207072 6f746f20 5f5f5448 524f5700  e proto __THROW.
 21b0 5f5f5549 4e54385f 4d41585f 5f203078  __UINT8_MAX__ 0x
 21c0 6666005f 494f5f46 4c414753 325f4e4f  ff._IO_FLAGS2_NO
 21d0 5443414e 43454c20 32005f5f 616c7761  TCANCEL 2.__alwa
 21e0 79735f69 6e6c696e 65205f5f 696e6c69  ys_inline __inli
 21f0 6e65205f 5f617474 72696275 74655f5f  ne __attribute__
 2200 2028285f 5f616c77 6179735f 696e6c69   ((__always_inli
 2210 6e655f5f 2929005f 5f55494e 5431365f  ne__)).__UINT16_
 2220 4d41585f 5f203078 66666666 005f494f  MAX__ 0xffff._IO
 2230 5f4d4147 49432030 78464241 44303030  _MAGIC 0xFBAD000
 2240 30005f5f 474c4942 435f5553 45284629  0.__GLIBC_USE(F)
 2250 205f5f47 4c494243 5f555345 5f202323   __GLIBC_USE_ ##
 2260 2046005f 5f494e54 5f464153 5436345f   F.__INT_FAST64_
 2270 54595045 5f5f206c 6f6e6720 696e7400  TYPE__ long int.
 2280 73746469 6e207374 64696e00 5f5f6174  stdin stdin.__at
 2290 74726962 7574655f 6e6f696e 6c696e65  tribute_noinline
 22a0 5f5f205f 5f617474 72696275 74655f5f  __ __attribute__
 22b0 2028285f 5f6e6f69 6e6c696e 655f5f29   ((__noinline__)
 22c0 29005f5f 53544443 5f564552 53494f4e  ).__STDC_VERSION
 22d0 5f5f2032 30313131 324c005f 5f494e54  __ 201112L.__INT
 22e0 4d41585f 57494454 485f5f20 3634005f  MAX_WIDTH__ 64._
 22f0 5f444543 33325f4d 41585f5f 20392e39  _DEC32_MAX__ 9.9
 2300 39393939 39453936 4446005f 5f474e55  99999E96DF.__GNU
 2310 435f5641 5f4c4953 5420005f 5f505452  C_VA_LIST .__PTR
 2320 44494646 5f4d4158 5f5f2030 78376666  DIFF_MAX__ 0x7ff
 2330 66666666 66666666 66666666 664c005f  fffffffffffffL._
 2340 5f555345 5f504f53 49583139 39333039  _USE_POSIX199309
 2350 005f5f49 4e545f4c 45415354 31365f54  .__INT_LEAST16_T
 2360 5950455f 5f207368 6f727420 696e7400  YPE__ short int.
 2370 5f5f464c 5433325f 4d41585f 4558505f  __FLT32_MAX_EXP_
 2380 5f203132 38005f5f 676e755f 6c696e75  _ 128.__gnu_linu
 2390 785f5f20 31005f5f 5354445f 54595045  x__ 1.__STD_TYPE
 23a0 20747970 65646566 005f5f4d 4f44455f   typedef.__MODE_
 23b0 545f5459 5045205f 5f553332 5f545950  T_TYPE __U32_TYP
 23c0 45005f5f 53495a45 4f465f46 4c4f4154  E.__SIZEOF_FLOAT
 23d0 3132385f 5f203136 005f5f47 4e55435f  128__ 16.__GNUC_
 23e0 53544443 5f494e4c 494e455f 5f203100  STDC_INLINE__ 1.
 23f0 5f5f4442 4c5f4449 475f5f20 3135005f  __DBL_DIG__ 15._
 2400 5f474343 5f41544f 4d49435f 43484152  _GCC_ATOMIC_CHAR
 2410 31365f54 5f4c4f43 4b5f4652 45452032  16_T_LOCK_FREE 2
 2420 005f5f49 4e545f4c 45415354 385f4d41  .__INT_LEAST8_MA
 2430 585f5f20 30783766 005f5f53 31365f54  X__ 0x7f.__S16_T
 2440 59504520 73686f72 7420696e 74005f5f  YPE short int.__
 2450 4c503634 5f5f2031 005f5f53 59534341  LP64__ 1.__SYSCA
 2460 4c4c5f57 4f524453 495a4520 3634005f  LL_WORDSIZE 64._
 2470 5f474343 5f41544f 4d49435f 4c4f4e47  _GCC_ATOMIC_LONG
 2480 5f4c4f43 4b5f4652 45452032 005f5f46  _LOCK_FREE 2.__F
 2490 4c543332 585f4449 475f5f20 3135005f  LT32X_DIG__ 15._
 24a0 5f464c54 3332585f 4d414e54 5f444947  _FLT32X_MANT_DIG
 24b0 5f5f2035 33005f49 4f5f7772 6974655f  __ 53._IO_write_
 24c0 62617365 005f4c50 36342031 005f4645  base._LP64 1._FE
 24d0 41545552 45535f48 2031005f 5f464c54  ATURES_H 1.__FLT
 24e0 33325f44 49475f5f 2036005f 5f465357  32_DIG__ 6.__FSW
 24f0 4f52445f 545f5459 5045205f 5f535953  ORD_T_TYPE __SYS
 2500 43414c4c 5f534c4f 4e475f54 59504500  CALL_SLONG_TYPE.
 2510 5f5f534c 4f4e4757 4f52445f 54595045  __SLONGWORD_TYPE
 2520 206c6f6e 6720696e 74005f49 4f5f325f   long int._IO_2_
 2530 315f7374 64696e5f 005f5f78 38365f36  1_stdin_.__x86_6
 2540 34203100 5f5f464c 54363458 5f4d4158  4 1.__FLT64X_MAX
 2550 5f31305f 4558505f 5f203439 3332005f  _10_EXP__ 4932._
 2560 5f44424c 5f4d494e 5f5f2028 28646f75  _DBL_MIN__ ((dou
 2570 626c6529 322e3232 35303733 38353835  ble)2.2250738585
 2580 30373230 31333833 30393032 33323731  0720138309023271
 2590 37333332 34303430 36652d33 30384c29  733240406e-308L)
 25a0 005f494f 5f325f31 5f737464 6f75745f  ._IO_2_1_stdout_
 25b0 005f5f55 494e545f 46415354 33325f4d  .__UINT_FAST32_M
 25c0 41585f5f 20307866 66666666 66666666  AX__ 0xfffffffff
 25d0 66666666 66666655 4c005f5f 46494e49  fffffffUL.__FINI
 25e0 54455f4d 4154485f 4f4e4c59 5f5f2030  TE_MATH_ONLY__ 0
 25f0 005f494f 5f736176 655f6261 7365005f  ._IO_save_base._
 2600 5f553136 5f545950 4520756e 7369676e  _U16_TYPE unsign
 2610 65642073 686f7274 20696e74 00454f46  ed short int.EOF
 2620 20282d31 29005f5f 464c5436 345f4d41   (-1).__FLT64_MA
 2630 585f5f20 312e3739 37363933 31333438  X__ 1.7976931348
 2640 36323331 35373038 31343532 37343233  6231570814527423
 2650 37333137 30343335 37652b33 30384636  731704357e+308F6
 2660 34005f5f 73697a65 5f745f5f 20005f5f  4.__size_t__ .__
 2670 55494e54 385f5459 50455f5f 20756e73  UINT8_TYPE__ uns
 2680 69676e65 64206368 6172005f 494f5f66  igned char._IO_f
 2690 696c655f 666c6167 73205f66 6c616773  ile_flags _flags
 26a0 005f5f55 53455f58 4f50454e 324b3858  .__USE_XOPEN2K8X
 26b0 5349005f 5f494e54 5f464153 5433325f  SI.__INT_FAST32_
 26c0 54595045 5f5f206c 6f6e6720 696e7400  TYPE__ long int.
 26d0 5f494f53 5f494e50 55542031 005f5f47  _IOS_INPUT 1.__G
 26e0 43435f41 534d5f46 4c41475f 4f555450  CC_ASM_FLAG_OUTP
 26f0 5554535f 5f203100 70757463 285f6368  UTS__ 1.putc(_ch
 2700 2c5f6670 29205f49 4f5f7075 74632028  ,_fp) _IO_putc (
 2710 5f63682c 205f6670 29005f5f 55494e54  _ch, _fp).__UINT
 2720 5f4c4541 53543634 5f4d4158 5f5f2030  _LEAST64_MAX__ 0
 2730 78666666 66666666 66666666 66666666  xfffffffffffffff
 2740 66554c00 5f5f504d 54005f5f 55515541  fUL.__PMT.__UQUA
 2750 445f5459 50452075 6e736967 6e656420  D_TYPE unsigned 
 2760 6c6f6e67 20696e74 005f5f45 4c465f5f  long int.__ELF__
 2770 2031005f 5f464c54 3332585f 4d494e5f   1.__FLT32X_MIN_
 2780 5f20322e 32323530 37333835 38353037  _ 2.225073858507
 2790 32303133 38333039 30323332 37313733  2013830902327173
 27a0 33323430 34303665 2d333038 46333278  3240406e-308F32x
 27b0 005f5f55 494e5450 54525f54 5950455f  .__UINTPTR_TYPE_
 27c0 5f206c6f 6e672075 6e736967 6e656420  _ long unsigned 
 27d0 696e7400 5f5f494e 5431365f 43286329  int.__INT16_C(c)
 27e0 2063005f 5f474343 5f484156 455f4457   c.__GCC_HAVE_DW
 27f0 41524632 5f434649 5f41534d 2031005f  ARF2_CFI_ASM 1._
 2800 5f53495a 454f465f 464c4f41 545f5f20  _SIZEOF_FLOAT__ 
 2810 34005f5f 44454333 325f5355 424e4f52  4.__DEC32_SUBNOR
 2820 4d414c5f 4d494e5f 5f20302e 30303030  MAL_MIN__ 0.0000
 2830 3031452d 39354446 005f494f 5f49535f  01E-95DF._IO_IS_
 2840 41505045 4e44494e 47203078 31303030  APPENDING 0x1000
 2850 005f5f46 4c543634 585f4841 535f5155  .__FLT64X_HAS_QU
 2860 4945545f 4e414e5f 5f203100 5f5f464c  IET_NAN__ 1.__FL
 2870 545f4841 535f494e 46494e49 54595f5f  T_HAS_INFINITY__
 2880 2031005f 494f535f 4e4f5245 504c4143   1._IOS_NOREPLAC
 2890 45203634 005f5f53 54445f54 59504500  E 64.__STD_TYPE.
 28a0 5f5f5553 455f504f 53495831 39393330  __USE_POSIX19930
 28b0 39203100 5f494f5f 73697a65 5f742073  9 1._IO_size_t s
 28c0 697a655f 74005f5f 494e4f36 345f545f  ize_t.__INO64_T_
 28d0 54595045 205f5f55 51554144 5f545950  TYPE __UQUAD_TYP
 28e0 45005f5f 474e555f 4c494252 4152595f  E.__GNU_LIBRARY_
 28f0 5f203600 5f5f5354 44435f5f 2031005f  _ 6.__STDC__ 1._
 2900 5f676c69 62635f63 39395f66 6c657861  _glibc_c99_flexa
 2910 72725f61 7661696c 61626c65 2031005f  rr_available 1._
 2920 5f535345 325f5f20 31005f5f 534c4f4e  _SSE2__ 1.__SLON
 2930 4733325f 54595045 20696e74 005f5f44  G32_TYPE int.__D
 2940 424c5f4d 41585f45 58505f5f 20313032  BL_MAX_EXP__ 102
 2950 34005f5f 53495a45 4f465f4c 4f4e475f  4.__SIZEOF_LONG_
 2960 5f203800 5f5f4154 4f4d4943 5f434f4e  _ 8.__ATOMIC_CON
 2970 53554d45 2031005f 5f555345 5f46494c  SUME 1.__USE_FIL
 2980 455f4f46 46534554 3634005f 494f5f46  E_OFFSET64._IO_F
 2990 4c414753 325f4d4d 41502031 005f5f46  LAGS2_MMAP 1.__F
 29a0 4c543332 5f4d494e 5f5f2031 2e313735  LT32_MIN__ 1.175
 29b0 34393433 35303832 32323837 35303739  4943508222875079
 29c0 36383733 36353337 32323232 34353638  6873653722224568
 29d0 652d3338 46333200 5f5f5749 4e545f54  e-38F32.__WINT_T
 29e0 5950455f 5f20756e 7369676e 65642069  YPE__ unsigned i
 29f0 6e74005f 5f555345 5f4d4953 43005f49  nt.__USE_MISC._I
 2a00 4f5f636c 65616e75 705f7265 67696f6e  O_cleanup_region
 2a10 5f656e64 285f446f 69742920 005f5f49  _end(_Doit) .__I
 2a20 4e543136 5f4d4158 5f5f2030 78376666  NT16_MAX__ 0x7ff
 2a30 66005f50 4f534958 5f435f53 4f555243  f._POSIX_C_SOURC
 2a40 45203230 30383039 4c005f5f 53434841  E 200809L.__SCHA
 2a50 525f5749 4454485f 5f203800 5f5f5549  R_WIDTH__ 8.__UI
 2a60 4e543332 5f432863 29206320 23232055  NT32_C(c) c ## U
 2a70 005f5f4c 44424c5f 4d494e5f 31305f45  .__LDBL_MIN_10_E
 2a80 58505f5f 20282d34 39333129 005f5354  XP__ (-4931)._ST
 2a90 44494f5f 55534553 5f494f53 54524541  DIO_USES_IOSTREA
 2aa0 4d20005f 5f53495a 454f465f 444f5542  M .__SIZEOF_DOUB
 2ab0 4c455f5f 2038005f 5f55494e 54385f43  LE__ 8.__UINT8_C
 2ac0 28632920 63005f5f 424c4b43 4e543634  (c) c.__BLKCNT64
 2ad0 5f545f54 59504520 5f5f5351 5541445f  _T_TYPE __SQUAD_
 2ae0 54595045 005f494f 5f535444 494f2030  TYPE._IO_STDIO 0
 2af0 34303030 30005f5f 5553455f 464f5254  40000.__USE_FORT
 2b00 4946595f 4c455645 4c005f5f 474c4942  IFY_LEVEL.__GLIB
 2b10 435f5553 455f4c49 425f4558 5432005f  C_USE_LIB_EXT2._
 2b20 5f57494e 545f4d49 4e5f5f20 3055005f  _WINT_MIN__ 0U._
 2b30 5f4c4442 4c5f4d41 4e545f44 49475f5f  _LDBL_MANT_DIG__
 2b40 20363400 5f5f7061 6431005f 5f706164   64.__pad1.__pad
 2b50 32005f5f 70616433 005f5f70 61643400  2.__pad3.__pad4.
 2b60 5f5f7061 6435005f 5f535444 435f5554  __pad5.__STDC_UT
 2b70 465f3136 5f5f2031 005f5f4c 44424c5f  F_16__ 1.__LDBL_
 2b80 45505349 4c4f4e5f 5f20312e 30383432  EPSILON__ 1.0842
 2b90 30323137 32343835 35303434 33343030  0217248550443400
 2ba0 37343532 38303038 36393934 31373165  745280086994171e
 2bb0 2d31394c 005f5f62 6f733028 70747229  -19L.__bos0(ptr)
 2bc0 205f5f62 75696c74 696e5f6f 626a6563   __builtin_objec
 2bd0 745f7369 7a652028 7074722c 20302900  t_size (ptr, 0).
 2be0 5f494f4c 42462031 005f5f61 74747269  _IOLBF 1.__attri
 2bf0 62757465 5f666f72 6d61745f 6172675f  bute_format_arg_
 2c00 5f287829 205f5f61 74747269 62757465  _(x) __attribute
 2c10 5f5f2028 285f5f66 6f726d61 745f6172  __ ((__format_ar
 2c20 675f5f20 28782929 29005f5f 5f5f4649  g__ (x))).____FI
 2c30 4c455f64 6566696e 65642031 005f4249  LE_defined 1._BI
 2c40 54535f53 5444494f 5f4c494d 5f482031  TS_STDIO_LIM_H 1
 2c50 005f5f4c 44424c5f 4841535f 494e4649  .__LDBL_HAS_INFI
 2c60 4e495459 5f5f2031 005f5f55 53455f50  NITY__ 1.__USE_P
 2c70 4f534958 2031005f 5f494e4f 5f545f4d  OSIX 1.__INO_T_M
 2c80 41544348 45535f49 4e4f3634 5f542031  ATCHES_INO64_T 1
 2c90 005f5f47 43435f49 45435f35 35395f43  .__GCC_IEC_559_C
 2ca0 4f4d504c 45582032 005f5f53 49475f41  OMPLEX 2.__SIG_A
 2cb0 544f4d49 435f4d49 4e5f5f20 282d5f5f  TOMIC_MIN__ (-__
 2cc0 5349475f 41544f4d 49435f4d 41585f5f  SIG_ATOMIC_MAX__
 2cd0 202d2031 29005f49 4f5f494e 5f424143   - 1)._IO_IN_BAC
 2ce0 4b555020 30783130 30005f49 4f5f666c  KUP 0x100._IO_fl
 2cf0 6f636b66 696c6528 5f667029 20005f5f  ockfile(_fp) .__
 2d00 53495a45 4f465f57 43484152 5f545f5f  SIZEOF_WCHAR_T__
 2d10 2034005f 5f617474 72696275 74655f64   4.__attribute_d
 2d20 65707265 63617465 645f5f20 5f5f6174  eprecated__ __at
 2d30 74726962 7574655f 5f202828 5f5f6465  tribute__ ((__de
 2d40 70726563 61746564 5f5f2929 005f5f46  precated__)).__F
 2d50 4c543132 385f4d49 4e5f3130 5f455850  LT128_MIN_10_EXP
 2d60 5f5f2028 2d343933 3129005f 5f464c4f  __ (-4931).__FLO
 2d70 41545f57 4f52445f 4f524445 525f5f20  AT_WORD_ORDER__ 
 2d80 5f5f4f52 4445525f 4c495454 4c455f45  __ORDER_LITTLE_E
 2d90 4e444941 4e5f5f00 5f5f4743 435f4841  NDIAN__.__GCC_HA
 2da0 56455f53 594e435f 434f4d50 4152455f  VE_SYNC_COMPARE_
 2db0 414e445f 53574150 5f322031 005f475f  AND_SWAP_2 1._G_
 2dc0 48415645 5f4d5245 4d415020 31005f5f  HAVE_MREMAP 1.__
 2dd0 44454333 325f4d41 4e545f44 49475f5f  DEC32_MANT_DIG__
 2de0 2037005f 5f464c54 33325f44 454e4f52   7.__FLT32_DENOR
 2df0 4d5f4d49 4e5f5f20 312e3430 31323938  M_MIN__ 1.401298
 2e00 34363433 32343831 37303730 39323337  4643248170709237
 2e10 32393538 33323839 39313631 33652d34  2958328991613e-4
 2e20 35463332 005f5f6e 6565645f 73697a65  5F32.__need_size
 2e30 5f74005f 5f55494e 545f4641 53543136  _t.__UINT_FAST16
 2e40 5f4d4158 5f5f2030 78666666 66666666  _MAX__ 0xfffffff
 2e50 66666666 66666666 66554c00 5f5f6e65  fffffffffUL.__ne
 2e60 65645f5f 5f76615f 6c697374 005f5f49  ed___va_list.__I
 2e70 4e543332 5f4d4158 5f5f2030 78376666  NT32_MAX__ 0x7ff
 2e80 66666666 66005f49 4f5f494e 5445524e  fffff._IO_INTERN
 2e90 414c2030 3130005f 5f5f696e 745f7369  AL 010.___int_si
 2ea0 7a655f74 5f682000 5f5f676c 6962635f  ze_t_h .__glibc_
 2eb0 6c696b65 6c792863 6f6e6429 205f5f62  likely(cond) __b
 2ec0 75696c74 696e5f65 78706563 74202828  uiltin_expect ((
 2ed0 636f6e64 292c2031 29005f5f 41544f4d  cond), 1).__ATOM
 2ee0 49435f41 43515549 52452032 005f5f55  IC_ACQUIRE 2.__U
 2ef0 494e5431 365f4328 63292063 005f494f  INT16_C(c) c._IO
 2f00 5f464c41 4753325f 55534552 5f574255  _FLAGS2_USER_WBU
 2f10 46203800 5f5f494e 5436345f 4d41585f  F 8.__INT64_MAX_
 2f20 5f203078 37666666 66666666 66666666  _ 0x7fffffffffff
 2f30 66666666 4c005f5f 6e656564 5f73697a  ffffL.__need_siz
 2f40 655f7420 005f5f62 6f732870 74722920  e_t .__bos(ptr) 
 2f50 5f5f6275 696c7469 6e5f6f62 6a656374  __builtin_object
 2f60 5f73697a 65202870 74722c20 5f5f5553  _size (ptr, __US
 2f70 455f464f 52544946 595f4c45 56454c20  E_FORTIFY_LEVEL 
 2f80 3e203129 005f5f55 574f5244 5f545950  > 1).__UWORD_TYP
 2f90 4520756e 7369676e 6564206c 6f6e6720  E unsigned long 
 2fa0 696e7400 5f5f474c 4942435f 4d494e4f  int.__GLIBC_MINO
 2fb0 525f5f20 3237005f 5f534547 5f475320  R__ 27.__SEG_GS 
 2fc0 31005f5f 5353455f 4d415448 5f5f2031  1.__SSE_MATH__ 1
 2fd0 005f5f4e 4c494e4b 5f545f54 59504520  .__NLINK_T_TYPE 
 2fe0 5f5f5359 5343414c 4c5f554c 4f4e475f  __SYSCALL_ULONG_
 2ff0 54595045 005f5f55 494e544d 41585f54  TYPE.__UINTMAX_T
 3000 5950455f 5f206c6f 6e672075 6e736967  YPE__ long unsig
 3010 6e656420 696e7400 5f5f5553 455f584f  ned int.__USE_XO
 3020 50454e32 4b005f5f 4c454146 202c205f  PEN2K.__LEAF , _
 3030 5f6c6561 665f5f00 5f5f4445 43313238  _leaf__.__DEC128
 3040 5f4d4158 5f455850 5f5f2036 31343500  _MAX_EXP__ 6145.
 3050 5f494f5f 4c454654 20303200 5f5f666f  _IO_LEFT 02.__fo
 3060 72746966 795f6675 6e637469 6f6e205f  rtify_function _
 3070 5f657874 65726e5f 616c7761 79735f69  _extern_always_i
 3080 6e6c696e 65205f5f 61747472 69627574  nline __attribut
 3090 655f6172 74696669 6369616c 5f5f005f  e_artificial__._
 30a0 494f5f42 4f4f4c41 4c504841 20303230  IO_BOOLALPHA 020
 30b0 30303030 005f5f53 49475f41 544f4d49  0000.__SIG_ATOMI
 30c0 435f5749 4454485f 5f203332 005f5f43  C_WIDTH__ 32.__C
 30d0 4f4e4341 5428782c 79292078 20232320  ONCAT(x,y) x ## 
 30e0 79005f5f 61747472 69627574 655f6465  y.__attribute_de
 30f0 70726563 61746564 5f6d7367 5f5f286d  precated_msg__(m
 3100 73672920 5f5f6174 74726962 7574655f  sg) __attribute_
 3110 5f202828 5f5f6465 70726563 61746564  _ ((__deprecated
 3120 5f5f2028 6d736729 2929005f 5f534852  __ (msg))).__SHR
 3130 545f4d41 585f5f20 30783766 6666005f  T_MAX__ 0x7fff._
 3140 5f474343 5f41544f 4d49435f 57434841  _GCC_ATOMIC_WCHA
 3150 525f545f 4c4f434b 5f465245 45203200  R_T_LOCK_FREE 2.
 3160 5f494f5f 50454e44 494e475f 4f555450  _IO_PENDING_OUTP
 3170 55545f43 4f554e54 285f6670 29202828  UT_COUNT(_fp) ((
 3180 5f667029 2d3e5f49 4f5f7772 6974655f  _fp)->_IO_write_
 3190 70747220 2d20285f 6670292d 3e5f494f  ptr - (_fp)->_IO
 31a0 5f777269 74655f62 61736529 005f494f  _write_base)._IO
 31b0 5f555345 525f4c4f 434b2030 78383030  _USER_LOCK 0x800
 31c0 30005f5f 4f524445 525f5044 505f454e  0.__ORDER_PDP_EN
 31d0 4449414e 5f5f2033 34313200 5f494f5f  DIAN__ 3412._IO_
 31e0 554e4946 4945445f 4a554d50 5441424c  UNIFIED_JUMPTABL
 31f0 45532031 00544d50 5f4d4158 20323338  ES 1.TMP_MAX 238
 3200 33323800 5f494f5f 6e656564 5f6c6f63  328._IO_need_loc
 3210 6b285f66 70292028 28285f66 70292d3e  k(_fp) (((_fp)->
 3220 5f666c61 67733220 26205f49 4f5f464c  _flags2 & _IO_FL
 3230 41475332 5f4e4545 445f4c4f 434b2920  AGS2_NEED_LOCK) 
 3240 213d2030 29005f5f 464c545f 44454349  != 0).__FLT_DECI
 3250 4d414c5f 4449475f 5f203900 5f5f7761  MAL_DIG__ 9.__wa
 3260 726e6465 636c286e 616d652c 6d736729  rndecl(name,msg)
 3270 20657874 65726e20 766f6964 206e616d   extern void nam
 3280 65202876 6f696429 205f5f61 74747269  e (void) __attri
 3290 62757465 5f5f2828 5f5f7761 726e696e  bute__((__warnin
 32a0 675f5f20 286d7367 29292900 5f5f464c  g__ (msg))).__FL
 32b0 5436345f 4d41585f 31305f45 58505f5f  T64_MAX_10_EXP__
 32c0 20333038 005f5f53 5452494e 47287829   308.__STRING(x)
 32d0 20237800 5f5f4c44 424c5f4d 494e5f45   #x.__LDBL_MIN_E
 32e0 58505f5f 20282d31 36333831 29005f5f  XP__ (-16381).__
 32f0 57494e54 5f574944 54485f5f 20333200  WINT_WIDTH__ 32.
 3300 5f494f5f 53484f57 504f5320 30323030  _IO_SHOWPOS 0200
 3310 30005f49 4f5f7265 61645f65 6e64005f  0._IO_read_end._
 3320 5f464c54 3634585f 4d494e5f 5f20332e  _FLT64X_MIN__ 3.
 3330 33363231 30333134 33313132 30393335  3621031431120935
 3340 30363236 32363737 38313733 32313735  0626267781732175
 3350 32363065 2d343933 32463634 78005f49  260e-4932F64x._I
 3360 4f535f4f 55545055 54203200 5f5f494e  OS_OUTPUT 2.__IN
 3370 545f4641 5354385f 4d41585f 5f203078  T_FAST8_MAX__ 0x
 3380 3766005f 5f524547 49535445 525f5052  7f.__REGISTER_PR
 3390 45464958 5f5f2000 5f5f464c 5433325f  EFIX__ .__FLT32_
 33a0 45505349 4c4f4e5f 5f20312e 31393230  EPSILON__ 1.1920
 33b0 39323839 35353037 38313235 30303030  9289550781250000
 33c0 30303030 30303030 30303030 30303065  000000000000000e
 33d0 2d374633 32005f5f 474c4942 435f494e  -7F32.__GLIBC_IN
 33e0 5445524e 414c5f53 54415254 494e475f  TERNAL_STARTING_
 33f0 48454144 45525f49 4d504c45 4d454e54  HEADER_IMPLEMENT
 3400 4154494f 4e20005f 5f53574f 52445f54  ATION .__SWORD_T
 3410 59504520 6c6f6e67 20696e74 005f5f4c  YPE long int.__L
 3420 4f4e475f 4d41585f 5f203078 37666666  ONG_MAX__ 0x7fff
 3430 66666666 66666666 66666666 4c005f5f  ffffffffffffL.__
 3440 73747562 5f676574 6d736720 005f5f44  stub_getmsg .__D
 3450 45433634 5f4d4158 5f455850 5f5f2033  EC64_MAX_EXP__ 3
 3460 3835005f 5f464c54 3332585f 4d494e5f  85.__FLT32X_MIN_
 3470 31305f45 58505f5f 20282d33 30372900  10_EXP__ (-307).
 3480 5f5f5553 455f504f 53495832 005f494f  __USE_POSIX2._IO
 3490 5f554e49 54425546 20303230 30303000  _UNITBUF 020000.
 34a0 5f5f4f46 465f545f 54595045 205f5f53  __OFF_T_TYPE __S
 34b0 59534341 4c4c5f53 4c4f4e47 5f545950  YSCALL_SLONG_TYP
 34c0 45005f5f 55494e54 4d41585f 43286329  E.__UINTMAX_C(c)
 34d0 20632023 2320554c 005f5f43 48415233   c ## UL.__CHAR3
 34e0 325f5459 50455f5f 20756e73 69676e65  2_TYPE__ unsigne
 34f0 6420696e 74005f5f 464c5436 34585f48  d int.__FLT64X_H
 3500 41535f49 4e46494e 4954595f 5f203100  AS_INFINITY__ 1.
 3510 5f424954 535f475f 434f4e46 49475f48  _BITS_G_CONFIG_H
 3520 2031005f 5f444543 3132385f 4d494e5f   1.__DEC128_MIN_
 3530 5f203145 2d363134 33444c00 5f5f464c  _ 1E-6143DL.__FL
 3540 54333258 5f4d494e 5f455850 5f5f2028  T32X_MIN_EXP__ (
 3550 2d313032 3129005f 494f5f67 6574635f  -1021)._IO_getc_
 3560 756e6c6f 636b6564 285f6670 2920285f  unlocked(_fp) (_
 3570 494f5f42 45202828 5f667029 2d3e5f49  IO_BE ((_fp)->_I
 3580 4f5f7265 61645f70 7472203e 3d20285f  O_read_ptr >= (_
 3590 6670292d 3e5f494f 5f726561 645f656e  fp)->_IO_read_en
 35a0 642c2030 29203f20 5f5f7566 6c6f7720  d, 0) ? __uflow 
 35b0 285f6670 29203a20 2a28756e 7369676e  (_fp) : *(unsign
 35c0 65642063 68617220 2a292028 5f667029  ed char *) (_fp)
 35d0 2d3e5f49 4f5f7265 61645f70 74722b2b  ->_IO_read_ptr++
 35e0 29005f5f 494e5450 54525f57 49445448  ).__INTPTR_WIDTH
 35f0 5f5f2036 34005f5f 494e4f5f 545f5459  __ 64.__INO_T_TY
 3600 5045205f 5f535953 43414c4c 5f554c4f  PE __SYSCALL_ULO
 3610 4e475f54 59504500 5f5f5549 4e545f46  NG_TYPE.__UINT_F
 3620 41535438 5f545950 455f5f20 756e7369  AST8_TYPE__ unsi
 3630 676e6564 20636861 72005f5f 494e5433  gned char.__INT3
 3640 325f4328 63292063 005f5f46 5346494c  2_C(c) c.__FSFIL
 3650 434e5436 345f545f 54595045 205f5f55  CNT64_T_TYPE __U
 3660 51554144 5f545950 45005f5f 4c44424c  QUAD_TYPE.__LDBL
 3670 5f484153 5f515549 45545f4e 414e5f5f  _HAS_QUIET_NAN__
 3680 2031005f 5f474e55 435f5041 5443484c   1.__GNUC_PATCHL
 3690 4556454c 5f5f2030 005f5f57 494e545f  EVEL__ 0.__WINT_
 36a0 4d41585f 5f203078 66666666 66666666  MAX__ 0xffffffff
 36b0 55005f5f 61747472 69627574 655f6e6f  U.__attribute_no
 36c0 6e737472 696e675f 5f20005f 494f5f4d  nstring__ ._IO_M
 36d0 41474943 5f4d4153 4b203078 46464646  AGIC_MASK 0xFFFF
 36e0 30303030 005f5f6c 696e7578 2031005f  0000.__linux 1._
 36f0 5f474c49 42435f55 53455f49 45435f36  _GLIBC_USE_IEC_6
 3700 30353539 5f46554e 43535f45 5854005f  0559_FUNCS_EXT._
 3710 494f5f76 615f6c69 7374205f 5f676e75  IO_va_list __gnu
 3720 635f7661 5f6c6973 74005f47 5f425546  c_va_list._G_BUF
 3730 53495a20 38313932 005f5f4c 44424c5f  SIZ 8192.__LDBL_
 3740 52454449 5231286e 616d652c 70726f74  REDIR1(name,prot
 3750 6f2c616c 69617329 206e616d 65207072  o,alias) name pr
 3760 6f746f00 5f5f6174 74726962 7574655f  oto.__attribute_
 3770 6d616c6c 6f635f5f 205f5f61 74747269  malloc__ __attri
 3780 62757465 5f5f2028 285f5f6d 616c6c6f  bute__ ((__mallo
 3790 635f5f29 29005f5f 55494e54 33325f54  c__)).__UINT32_T
 37a0 5950455f 5f20756e 7369676e 65642069  YPE__ unsigned i
 37b0 6e74005f 5f4c4442 4c5f5245 4449525f  nt.__LDBL_REDIR_
 37c0 4e544828 6e616d65 2c70726f 746f2920  NTH(name,proto) 
 37d0 6e616d65 2070726f 746f205f 5f544852  name proto __THR
 37e0 4f57005f 5f555345 5f584f50 454e324b  OW.__USE_XOPEN2K
 37f0 38005f49 4f5f5550 50455243 41534520  8._IO_UPPERCASE 
 3800 30313030 3000505f 746d7064 69722022  01000.P_tmpdir "
 3810 2f746d70 22005f5f 52454449 52454354  /tmp".__REDIRECT
 3820 5f4e5448 286e616d 652c7072 6f746f2c  _NTH(name,proto,
 3830 616c6961 7329206e 616d6520 70726f74  alias) name prot
 3840 6f205f5f 61736d5f 5f20285f 5f41534d  o __asm__ (__ASM
 3850 4e414d45 20282361 6c696173 2929205f  NAME (#alias)) _
 3860 5f544852 4f57005f 5f555345 5f584f50  _THROW.__USE_XOP
 3870 454e005f 5f464c54 3132385f 45505349  EN.__FLT128_EPSI
 3880 4c4f4e5f 5f20312e 39323539 32393934  LON__ 1.92592994
 3890 34333837 32333538 35333035 35393737  4387235853055977
 38a0 39343235 38343932 37333265 2d333446  94258492732e-34F
 38b0 31323800 464f5045 4e5f4d41 58203136  128.FOPEN_MAX 16
 38c0 005f494f 5f46494c 455f706c 7573005f  ._IO_FILE_plus._
 38d0 504f5349 585f435f 534f5552 4345005f  POSIX_C_SOURCE._
 38e0 5f544852 4f57205f 5f617474 72696275  _THROW __attribu
 38f0 74655f5f 2028285f 5f6e6f74 68726f77  te__ ((__nothrow
 3900 5f5f205f 5f4c4541 46292900 5f5f5349  __ __LEAF)).__SI
 3910 5a454f46 5f4c4f4e 475f4c4f 4e475f5f  ZEOF_LONG_LONG__
 3920 2038005f 56415f4c 4953545f 44454649   8._VA_LIST_DEFI
 3930 4e454420 005f5f55 494e545f 46415354  NED .__UINT_FAST
 3940 33325f54 5950455f 5f206c6f 6e672075  32_TYPE__ long u
 3950 6e736967 6e656420 696e7400 5f5f5348  nsigned int.__SH
 3960 52545f57 49445448 5f5f2031 36005f5f  RT_WIDTH__ 16.__
 3970 53534532 5f4d4154 485f5f20 31005f5f  SSE2_MATH__ 1.__
 3980 5353495a 455f545f 54595045 205f5f53  SSIZE_T_TYPE __S
 3990 574f5244 5f545950 45005f5f 5336345f  WORD_TYPE.__S64_
 39a0 54595045 206c6f6e 6720696e 74005f5f  TYPE long int.__
 39b0 61747472 69627574 655f7075 72655f5f  attribute_pure__
 39c0 205f5f61 74747269 62757465 5f5f2028   __attribute__ (
 39d0 285f5f70 7572655f 5f292900 5f5f494e  (__pure__)).__IN
 39e0 544d4158 5f432863 29206320 2323204c  TMAX_C(c) c ## L
 39f0 005f494f 5f69636f 6e765f74 205f475f  ._IO_iconv_t _G_
 3a00 69636f6e 765f7400 5f5f494e 545f4641  iconv_t.__INT_FA
 3a10 53543332 5f574944 54485f5f 20363400  ST32_WIDTH__ 64.
 3a20 5f5f5553 455f584f 50454e32 4b382031  __USE_XOPEN2K8 1
 3a30 005f5f49 4e545f4c 45415354 36345f57  .__INT_LEAST64_W
 3a40 49445448 5f5f2036 34005f5f 474c4942  IDTH__ 64.__GLIB
 3a50 435f5553 455f4945 435f3630 3535395f  C_USE_IEC_60559_
 3a60 54595045 535f4558 54203000 5f5f494e  TYPES_EXT 0.__IN
 3a70 54385f43 28632920 63005f5f 53495a45  T8_C(c) c.__SIZE
 3a80 4f465f50 4f494e54 45525f5f 2038005f  OF_POINTER__ 8._
 3a90 5f464c54 36345f45 5053494c 4f4e5f5f  _FLT64_EPSILON__
 3aa0 20322e32 32303434 36303439 32353033   2.2204460492503
 3ab0 31333038 30383437 32363333 33363138  1308084726333618
 3ac0 31363430 3632652d 31364636 34005f49  164062e-16F64._I
 3ad0 4f5f7661 5f6c6973 74205f47 5f76615f  O_va_list _G_va_
 3ae0 6c697374 005f5f46 4c543634 585f4d41  list.__FLT64X_MA
 3af0 4e545f44 49475f5f 20363400 5f444546  NT_DIG__ 64._DEF
 3b00 41554c54 5f534f55 52434500 5f5f5743  AULT_SOURCE.__WC
 3b10 4841525f 4d41585f 5f203078 37666666  HAR_MAX__ 0x7fff
 3b20 66666666 005f494f 5f425546 53495a20  ffff._IO_BUFSIZ 
 3b30 5f475f42 55465349 5a005f5f 46534649  _G_BUFSIZ.__FSFI
 3b40 4c434e54 5f545f54 59504520 5f5f5359  LCNT_T_TYPE __SY
 3b50 5343414c 4c5f554c 4f4e475f 54595045  SCALL_ULONG_TYPE
 3b60 005f494f 5f424144 5f534545 4e203078  ._IO_BAD_SEEN 0x
 3b70 34303030 005f5f77 61726e61 74747228  4000.__warnattr(
 3b80 6d736729 205f5f61 74747269 62757465  msg) __attribute
 3b90 5f5f2828 5f5f7761 726e696e 675f5f20  __((__warning__ 
 3ba0 286d7367 29292900 5f5f494e 545f5749  (msg))).__INT_WI
 3bb0 4454485f 5f203332 005f5f4c 44424c5f  DTH__ 32.__LDBL_
 3bc0 44454349 4d414c5f 4449475f 5f203231  DECIMAL_DIG__ 21
 3bd0 005f5f47 43435f41 544f4d49 435f504f  .__GCC_ATOMIC_PO
 3be0 494e5445 525f4c4f 434b5f46 52454520  INTER_LOCK_FREE 
 3bf0 32005f5f 73747562 5f5f5f63 6f6d7061  2.__stub___compa
 3c00 745f6264 666c7573 68200046 4f50454e  t_bdflush .FOPEN
 3c10 5f4d4158 005f6c6f 636b005f 5f534547  _MAX._lock.__SEG
 3c20 5f465320 31005f5f 50286172 67732920  _FS 1.__P(args) 
 3c30 61726773 005f5f54 494d455f 545f5459  args.__TIME_T_TY
 3c40 5045205f 5f535953 43414c4c 5f534c4f  PE __SYSCALL_SLO
 3c50 4e475f54 59504500 5f5f5549 4e545f46  NG_TYPE.__UINT_F
 3c60 41535431 365f5459 50455f5f 206c6f6e  AST16_TYPE__ lon
 3c70 6720756e 7369676e 65642069 6e74005f  g unsigned int._
 3c80 5f474c49 42435f5f 2032005f 494f5f73  _GLIBC__ 2._IO_s
 3c90 74646f75 74202828 5f494f5f 46494c45  tdout ((_IO_FILE
 3ca0 2a292826 5f494f5f 325f315f 7374646f  *)(&_IO_2_1_stdo
 3cb0 75745f29 29005f5f 55534552 5f4c4142  ut_)).__USER_LAB
 3cc0 454c5f50 52454649 585f5f20 005f494f  EL_PREFIX__ ._IO
 3cd0 5f706964 5f74205f 5f706964 5f74005f  _pid_t __pid_t._
 3ce0 5f676c69 62635f6d 6163726f 5f776172  _glibc_macro_war
 3cf0 6e696e67 31286d65 73736167 6529205f  ning1(message) _
 3d00 50726167 6d612028 236d6573 73616765  Pragma (#message
 3d10 29005f5f 4743435f 41544f4d 49435f43  ).__GCC_ATOMIC_C
 3d20 48415233 325f545f 4c4f434b 5f465245  HAR32_T_LOCK_FRE
 3d30 45203200 5f6f6c64 5f6f6666 73657400  E 2._old_offset.
 3d40 5f494f5f 46494c45 005f494f 5f554e42  _IO_FILE._IO_UNB
 3d50 55464645 52454420 32005f5f 43484152  UFFERED 2.__CHAR
 3d60 5f424954 5f5f2038 005f5f43 4c4f434b  _BIT__ 8.__CLOCK
 3d70 5f545f54 59504520 5f5f5359 5343414c  _T_TYPE __SYSCAL
 3d80 4c5f534c 4f4e475f 54595045 005f5f41  L_SLONG_TYPE.__A
 3d90 544f4d49 435f5245 4c415845 44203000  TOMIC_RELAXED 0.
 3da0 5f494f5f 7373697a 655f7420 5f5f7373  _IO_ssize_t __ss
 3db0 697a655f 74005f5f 53544443 5f484f53  ize_t.__STDC_HOS
 3dc0 5445445f 5f203100 5f5f5349 5a455f57  TED__ 1.__SIZE_W
 3dd0 49445448 5f5f2036 34005f5f 52454449  IDTH__ 64.__REDI
 3de0 52454354 5f4c4442 4c286e61 6d652c70  RECT_LDBL(name,p
 3df0 726f746f 2c616c69 61732920 5f5f5245  roto,alias) __RE
 3e00 44495245 43542028 6e616d65 2c207072  DIRECT (name, pr
 3e10 6f746f2c 20616c69 61732900 5f5f616c  oto, alias).__al
 3e20 77617973 5f696e6c 696e6500 5f5f6861  ways_inline.__ha
 3e30 735f696e 636c7564 65285354 5229205f  s_include(STR) _
 3e40 5f686173 5f696e63 6c756465 5f5f2853  _has_include__(S
 3e50 54522900 5f5f6e65 65645f5f 5f76615f  TR).__need___va_
 3e60 6c697374 20005f5f 41534d4e 414d4532  list .__ASMNAME2
 3e70 28707265 6669782c 636e616d 6529205f  (prefix,cname) _
 3e80 5f535452 494e4720 28707265 66697829  _STRING (prefix)
 3e90 20636e61 6d65005f 494f5f53 4349454e   cname._IO_SCIEN
 3ea0 54494649 43203034 30303000 5f494f5f  TIFIC 04000._IO_
 3eb0 7065656b 635f756e 6c6f636b 6564285f  peekc_unlocked(_
 3ec0 66702920 285f494f 5f424520 28285f66  fp) (_IO_BE ((_f
 3ed0 70292d3e 5f494f5f 72656164 5f707472  p)->_IO_read_ptr
 3ee0 203e3d20 285f6670 292d3e5f 494f5f72   >= (_fp)->_IO_r
 3ef0 6561645f 656e642c 20302920 2626205f  ead_end, 0) && _
 3f00 5f756e64 6572666c 6f772028 5f667029  _underflow (_fp)
 3f10 203d3d20 454f4620 3f20454f 46203a20   == EOF ? EOF : 
 3f20 2a28756e 7369676e 65642063 68617220  *(unsigned char 
 3f30 2a292028 5f667029 2d3e5f49 4f5f7265  *) (_fp)->_IO_re
 3f40 61645f70 74722900 5f5f4c4f 4e475f57  ad_ptr).__LONG_W
 3f50 49445448 5f5f2036 34005f5f 55494e54  IDTH__ 64.__UINT
 3f60 36345f4d 41585f5f 20307866 66666666  64_MAX__ 0xfffff
 3f70 66666666 66666666 66666655 4c005f5f  fffffffffffUL.__
 3f80 53515541 445f5459 5045206c 6f6e6720  SQUAD_TYPE long 
 3f90 696e7400 5f5f5553 455f584f 50454e32  int.__USE_XOPEN2
 3fa0 4b585349 005f5f61 74747269 62757465  KXSI.__attribute
 3fb0 5f616c6c 6f635f73 697a655f 5f287061  _alloc_size__(pa
 3fc0 72616d73 29205f5f 61747472 69627574  rams) __attribut
 3fd0 655f5f20 28285f5f 616c6c6f 635f7369  e__ ((__alloc_si
 3fe0 7a655f5f 20706172 616d7329 29005f49  ze__ params))._I
 3ff0 4f5f7769 6e745f74 2077696e 745f7400  O_wint_t wint_t.
 4000 5f5f6b38 2031005f 5f434841 5231365f  __k8 1.__CHAR16_
 4010 54595045 5f5f2073 686f7274 20756e73  TYPE__ short uns
 4020 69676e65 6420696e 74005f5f 4743435f  igned int.__GCC_
 4030 41544f4d 49435f4c 4c4f4e47 5f4c4f43  ATOMIC_LLONG_LOC
 4040 4b5f4652 45452032 005f5f44 45433634  K_FREE 2.__DEC64
 4050 5f4d494e 5f455850 5f5f2028 2d333832  _MIN_EXP__ (-382
 4060 29005f5f 72657374 72696374 5f617272  ).__restrict_arr
 4070 205f5f72 65737472 69637400 5f5f4154   __restrict.__AT
 4080 4f4d4943 5f414351 5f52454c 2034005f  OMIC_ACQ_REL 4._
 4090 494f5f66 706f735f 74205f47 5f66706f  IO_fpos_t _G_fpo
 40a0 735f7400 5f5f6174 74726962 7574655f  s_t.__attribute_
 40b0 666f726d 61745f73 7472666d 6f6e5f5f  format_strfmon__
 40c0 28612c62 29205f5f 61747472 69627574  (a,b) __attribut
 40d0 655f5f20 28285f5f 666f726d 61745f5f  e__ ((__format__
 40e0 20285f5f 73747266 6d6f6e5f 5f2c2061   (__strfmon__, a
 40f0 2c206229 2929005f 5f444543 33325f4d  , b))).__DEC32_M
 4100 494e5f45 58505f5f 20282d39 3429005f  IN_EXP__ (-94)._
 4110 494f5f46 49584544 20303130 30303000  IO_FIXED 010000.
 4120 5f5f494e 5436345f 54595045 5f5f206c  __INT64_TYPE__ l
 4130 6f6e6720 696e7400 5f5f464c 545f4d49  ong int.__FLT_MI
 4140 4e5f5f20 312e3137 35343934 33353038  N__ 1.1754943508
 4150 32323238 37353037 39363837 33363533  2228750796873653
 4160 37323232 32343536 38652d33 3846005f  722224568e-38F._
 4170 5f553634 5f545950 4520756e 7369676e  _U64_TYPE unsign
 4180 6564206c 6f6e6720 696e7400 5f736275  ed long int._sbu
 4190 66005f49 4f5f7661 5f6c6973 74007374  f._IO_va_list.st
 41a0 646f7574 20737464 6f757400 5f5f5553  dout stdout.__US
 41b0 455f474e 55005f5f 54494d45 525f545f  E_GNU.__TIMER_T_
 41c0 54595045 20766f69 64202a00 5f494f5f  TYPE void *._IO_
 41d0 77726974 655f7074 72005f5f 46585352  write_ptr.__FXSR
 41e0 5f5f2031 005f5f4c 4541465f 41545452  __ 1.__LEAF_ATTR
 41f0 205f5f61 74747269 62757465 5f5f2028   __attribute__ (
 4200 285f5f6c 6561665f 5f292900 5f5f494e  (__leaf__)).__IN
 4210 54385f54 5950455f 5f207369 676e6564  T8_TYPE__ signed
 4220 20636861 72005f5f 494e545f 4c454153   char.__INT_LEAS
 4230 5433325f 57494454 485f5f20 3332005f  T32_WIDTH__ 32._
 4240 5f535953 43414c4c 5f534c4f 4e475f54  _SYSCALL_SLONG_T
 4250 59504520 5f5f534c 4f4e4757 4f52445f  YPE __SLONGWORD_
 4260 54595045 005f5f55 494e544d 41585f4d  TYPE.__UINTMAX_M
 4270 41585f5f 20307866 66666666 66666666  AX__ 0xfffffffff
 4280 66666666 66666655 4c005f5f 676c6962  fffffffUL.__glib
 4290 635f636c 616e675f 70726572 6571286d  c_clang_prereq(m
 42a0 616a2c6d 696e2920 30005f49 4f5f6261  aj,min) 0._IO_ba
 42b0 636b7570 5f626173 65005f5f 6c696e75  ckup_base.__linu
 42c0 785f5f20 31005f5f 5049435f 5f203200  x__ 1.__PIC__ 2.
 42d0 5f5f494e 545f4c45 41535433 325f5459  __INT_LEAST32_TY
 42e0 50455f5f 20696e74 005f5f55 494e545f  PE__ int.__UINT_
 42f0 4c454153 5436345f 54595045 5f5f206c  LEAST64_TYPE__ l
 4300 6f6e6720 756e7369 676e6564 20696e74  ong unsigned int
 4310 005f494f 5f707574 635f756e 6c6f636b  ._IO_putc_unlock
 4320 6564285f 63682c5f 66702920 285f494f  ed(_ch,_fp) (_IO
 4330 5f424520 28285f66 70292d3e 5f494f5f  _BE ((_fp)->_IO_
 4340 77726974 655f7074 72203e3d 20285f66  write_ptr >= (_f
 4350 70292d3e 5f494f5f 77726974 655f656e  p)->_IO_write_en
 4360 642c2030 29203f20 5f5f6f76 6572666c  d, 0) ? __overfl
 4370 6f772028 5f66702c 2028756e 7369676e  ow (_fp, (unsign
 4380 65642063 68617229 20285f63 68292920  ed char) (_ch)) 
 4390 3a202875 6e736967 6e656420 63686172  : (unsigned char
 43a0 2920282a 285f6670 292d3e5f 494f5f77  ) (*(_fp)->_IO_w
 43b0 72697465 5f707472 2b2b203d 20285f63  rite_ptr++ = (_c
 43c0 68292929 005f504f 5349585f 534f5552  h)))._POSIX_SOUR
 43d0 43452031 005f494f 5f444f4e 545f434c  CE 1._IO_DONT_CL
 43e0 4f534520 30313030 30303000 5f5f474c  OSE 0100000.__GL
 43f0 4942435f 5553455f 4945435f 36303535  IBC_USE_IEC_6055
 4400 395f4246 505f4558 54005f5f 53495a45  9_BFP_EXT.__SIZE
 4410 5f4d4158 5f5f2030 78666666 66666666  _MAX__ 0xfffffff
 4420 66666666 66666666 66554c00 5f5f5549  fffffffffUL.__UI
 4430 445f545f 54595045 205f5f55 33325f54  D_T_TYPE __U32_T
 4440 59504500 5f5f554c 4f4e4757 4f52445f  YPE.__ULONGWORD_
 4450 54595045 20756e73 69676e65 64206c6f  TYPE unsigned lo
 4460 6e672069 6e74005f 5f474343 5f41544f  ng int.__GCC_ATO
 4470 4d49435f 53484f52 545f4c4f 434b5f46  MIC_SHORT_LOCK_F
 4480 52454520 32005f5f 464c5436 34585f44  REE 2.__FLT64X_D
 4490 4543494d 414c5f44 49475f5f 20323100  ECIMAL_DIG__ 21.
 44a0 5345454b 5f534554 2030005f 5f555345  SEEK_SET 0.__USE
 44b0 5f584f50 454e5f45 5854454e 44454400  _XOPEN_EXTENDED.
 44c0 5f5f494e 545f4641 53543136 5f4d4158  __INT_FAST16_MAX
 44d0 5f5f2030 78376666 66666666 66666666  __ 0x7ffffffffff
 44e0 66666666 664c005f 5f464c54 5f455053  fffffL.__FLT_EPS
 44f0 494c4f4e 5f5f2031 2e313932 30393238  ILON__ 1.1920928
 4500 39353530 37383132 35303030 30303030  9550781250000000
 4510 30303030 30303030 30303030 652d3746  000000000000e-7F
 4520 005f5f46 4c543634 5f4d494e 5f455850  .__FLT64_MIN_EXP
 4530 5f5f2028 2d313032 3129005f 494f535f  __ (-1021)._IOS_
 4540 41505045 4e442038 005f5f47 4c494243  APPEND 8.__GLIBC
 4550 5f494e54 45524e41 4c5f5354 41525449  _INTERNAL_STARTI
 4560 4e475f48 45414445 525f494d 504c454d  NG_HEADER_IMPLEM
 4570 454e5441 54494f4e 005f5f46 4c545f45  ENTATION.__FLT_E
 4580 56414c5f 4d455448 4f445f54 535f3138  VAL_METHOD_TS_18
 4590 3636315f 335f5f20 30005f5f 44424c5f  661_3__ 0.__DBL_
 45a0 4841535f 494e4649 4e495459 5f5f2031  HAS_INFINITY__ 1
 45b0 005f5f61 74747269 62757465 5f776172  .__attribute_war
 45c0 6e5f756e 75736564 5f726573 756c745f  n_unused_result_
 45d0 5f205f5f 61747472 69627574 655f5f20  _ __attribute__ 
 45e0 28285f5f 7761726e 5f756e75 7365645f  ((__warn_unused_
 45f0 72657375 6c745f5f 2929005f 5f494e54  result__)).__INT
 4600 36345f43 28632920 63202323 204c005f  64_C(c) c ## L._
 4610 5f454e44 5f444543 4c532000 5f5f464c  _END_DECLS .__FL
 4620 545f4841 535f5155 4945545f 4e414e5f  T_HAS_QUIET_NAN_
 4630 5f203100 5f5f5349 5a454f46 5f494e54  _ 1.__SIZEOF_INT
 4640 5f5f2034 005f5f43 4c4f434b 49445f54  __ 4.__CLOCKID_T
 4650 5f545950 45205f5f 5333325f 54595045  _TYPE __S32_TYPE
 4660 005f5f49 4e545f46 41535431 365f5459  .__INT_FAST16_TY
 4670 50455f5f 206c6f6e 6720696e 74005f5f  PE__ long int.__
 4680 53544443 5f494543 5f353539 5f5f2031  STDC_IEC_559__ 1
 4690 005f5f44 45433132 385f5355 424e4f52  .__DEC128_SUBNOR
 46a0 4d414c5f 4d494e5f 5f20302e 30303030  MAL_MIN__ 0.0000
 46b0 30303030 30303030 30303030 30303030  0000000000000000
 46c0 30303030 30303030 30303030 31452d36  0000000000001E-6
 46d0 31343344 4c005f5f 5553455f 4c415247  143DL.__USE_LARG
 46e0 4546494c 45005f5f 53495a45 4f465f46  EFILE.__SIZEOF_F
 46f0 4c4f4154 38305f5f 20313600 5f5f464c  LOAT80__ 16.__FL
 4700 54333258 5f484153 5f515549 45545f4e  T32X_HAS_QUIET_N
 4710 414e5f5f 2031005f 5f44424c 5f4d4158  AN__ 1.__DBL_MAX
 4720 5f31305f 4558505f 5f203330 38005f5f  _10_EXP__ 308.__
 4730 5553455f 4d495343 2031005f 5f475858  USE_MISC 1.__GXX
 4740 5f414249 5f564552 53494f4e 20313031  _ABI_VERSION 101
 4750 31005f5f 7069635f 5f203200 5f5f4154  1.__pic__ 2.__AT
 4760 4f4d4943 5f52454c 45415345 2033005f  OMIC_RELEASE 3._
 4770 5f535345 5f5f2031 005f494f 5f4e4f5f  _SSE__ 1._IO_NO_
 4780 52454144 53203400 5f5f474c 4942435f  READS 4.__GLIBC_
 4790 5553455f 4945435f 36303535 395f4655  USE_IEC_60559_FU
 47a0 4e43535f 45585420 30006d61 696e005f  NCS_EXT 0.main._
 47b0 53495a45 545f2000 5f5f464c 54313238  SIZET_ .__FLT128
 47c0 5f44454e 4f524d5f 4d494e5f 5f20362e  _DENORM_MIN__ 6.
 47d0 34373531 37353131 39343338 30323531  4751751194380251
 47e0 31303932 34343338 39353832 32373634  1092443895822764
 47f0 36353565 2d343936 36463132 38005f5f  655e-4966F128.__
 4800 474c4942 435f5553 455f4945 435f3630  GLIBC_USE_IEC_60
 4810 3535395f 4246505f 45585420 30005f5f  559_BFP_EXT 0.__
 4820 73747562 5f726576 6f6b6520 005f5f49  stub_revoke .__I
 4830 4e544d41 585f5459 50455f5f 206c6f6e  NTMAX_TYPE__ lon
 4840 6720696e 74005f5f 464c545f 4d494e5f  g int.__FLT_MIN_
 4850 4558505f 5f20282d 31323529 005f5f53  EXP__ (-125).__S
 4860 53505f53 54524f4e 475f5f20 33005f5f  SP_STRONG__ 3.__
 4870 6572726f 72646563 6c286e61 6d652c6d  errordecl(name,m
 4880 73672920 65787465 726e2076 6f696420  sg) extern void 
 4890 6e616d65 2028766f 69642920 5f5f6174  name (void) __at
 48a0 74726962 7574655f 5f28285f 5f657272  tribute__((__err
 48b0 6f725f5f 20286d73 67292929 005f5f44  or__ (msg))).__D
 48c0 45433132 385f4d41 585f5f20 392e3939  EC128_MAX__ 9.99
 48d0 39393939 39393939 39393939 39393939  9999999999999999
 48e0 39393939 39393939 39393939 39393945  999999999999999E
 48f0 36313434 444c005f 5f464c54 5f4d4158  6144DL.__FLT_MAX
 4900 5f455850 5f5f2031 3238005f 5f41544f  _EXP__ 128.__ATO
 4910 4d49435f 484c455f 41435155 49524520  MIC_HLE_ACQUIRE 
 4920 36353533 36005f5f 4f464636 345f545f  65536.__OFF64_T_
 4930 54595045 205f5f53 51554144 5f545950  TYPE __SQUAD_TYP
 4940 45005f5f 5553455f 49534f43 3131005f  E.__USE_ISOC11._
 4950 5f444556 5f545f54 59504520 5f5f5551  _DEV_T_TYPE __UQ
 4960 5541445f 54595045 005f5f43 50555f4d  UAD_TYPE.__CPU_M
 4970 41534b5f 54595045 205f5f53 59534341  ASK_TYPE __SYSCA
 4980 4c4c5f55 4c4f4e47 5f545950 45005f5f  LL_ULONG_TYPE.__
 4990 55494e54 5f4c4541 53543332 5f4d4158  UINT_LEAST32_MAX
 49a0 5f5f2030 78666666 66666666 6655005f  __ 0xffffffffU._
 49b0 494f5f42 45286578 70722c72 65732920  IO_BE(expr,res) 
 49c0 5f5f6275 696c7469 6e5f6578 70656374  __builtin_expect
 49d0 20282865 78707229 2c207265 7329005f   ((expr), res)._
 49e0 5f41534d 4e414d45 28636e61 6d652920  _ASMNAME(cname) 
 49f0 5f5f4153 4d4e414d 45322028 5f5f5553  __ASMNAME2 (__US
 4a00 45525f4c 4142454c 5f505245 4649585f  ER_LABEL_PREFIX_
 4a10 5f2c2063 6e616d65 29005f5f 464c5433  _, cname).__FLT3
 4a20 32585f4d 41585f31 305f4558 505f5f20  2X_MAX_10_EXP__ 
 4a30 33303800 5f5f616d 64363420 31005f5f  308.__amd64 1.__
 4a40 574f5244 53495a45 20363400 5f5f756e  WORDSIZE 64.__un
 4a50 69782031 005f6368 61696e00 5f5f464c  ix 1._chain.__FL
 4a60 5436345f 44454e4f 524d5f4d 494e5f5f  T64_DENORM_MIN__
 4a70 20342e39 34303635 36343538 34313234   4.9406564584124
 4a80 36353434 31373635 36383739 32383638  6544176568792868
 4a90 32323133 3732652d 33323446 3634004c  221372e-324F64.L
 4aa0 5f637465 726d6964 2039005f 5f505452  _ctermid 9.__PTR
 4ab0 44494646 5f545950 455f5f20 6c6f6e67  DIFF_TYPE__ long
 4ac0 20696e74 005f5f46 4c543332 5f4d4158   int.__FLT32_MAX
 4ad0 5f31305f 4558505f 5f203338 005f5f57  _10_EXP__ 38.__W
 4ae0 4f524453 495a455f 54494d45 36345f43  ORDSIZE_TIME64_C
 4af0 4f4d5041 54333220 31005f5f 464c5431  OMPAT32 1.__FLT1
 4b00 32385f44 4543494d 414c5f44 49475f5f  28_DECIMAL_DIG__
 4b10 20333600 5f5f5054 52444946 465f5749   36.__PTRDIFF_WI
 4b20 4454485f 5f203634 005f5f49 4e545f4c  DTH__ 64.__INT_L
 4b30 45415354 33325f4d 41585f5f 20307837  EAST32_MAX__ 0x7
 4b40 66666666 66666600 5f5f5549 4e545f46  fffffff.__UINT_F
 4b50 41535436 345f5459 50455f5f 206c6f6e  AST64_TYPE__ lon
 4b60 6720756e 7369676e 65642069 6e74005f  g unsigned int._
 4b70 5f737475 625f7373 746b2000 5f494f5f  _stub_sstk ._IO_
 4b80 66706f73 36345f74 205f475f 66706f73  fpos64_t _G_fpos
 4b90 36345f74 005f5f54 48524f57 4e4c205f  64_t.__THROWNL _
 4ba0 5f617474 72696275 74655f5f 2028285f  _attribute__ ((_
 4bb0 5f6e6f74 68726f77 5f5f2929 005f5f4c  _nothrow__)).__L
 4bc0 44424c5f 4d41585f 31305f45 58505f5f  DBL_MAX_10_EXP__
 4bd0 20343933 32005f5f 44454336 345f4d49   4932.__DEC64_MI
 4be0 4e5f5f20 31452d33 38334444 005f5f46  N__ 1E-383DD.__F
 4bf0 4c543332 5f4d4158 5f5f2033 2e343032  LT32_MAX__ 3.402
 4c00 38323334 36363338 35323838 35393831  8234663852885981
 4c10 31373034 31383334 38343531 36393235  1704183484516925
 4c20 652b3338 46333200 5f5f4442 4c5f4550  e+38F32.__DBL_EP
 4c30 53494c4f 4e5f5f20 2828646f 75626c65  SILON__ ((double
 4c40 29322e32 32303434 36303439 32353033  )2.2204460492503
 4c50 31333038 30383437 32363333 33363138  1308084726333618
 4c60 31363430 3632652d 31364c29 005f6375  164062e-16L)._cu
 4c70 725f636f 6c756d6e 005f5f50 5241474d  r_column.__PRAGM
 4c80 415f5245 44454649 4e455f45 58544e41  A_REDEFINE_EXTNA
 4c90 4d452031 005f5f53 49475f41 544f4d49  ME 1.__SIG_ATOMI
 4ca0 435f5459 50455f5f 20696e74 005f5f46  C_TYPE__ int.__F
 4cb0 4c543634 585f4445 4e4f524d 5f4d494e  LT64X_DENORM_MIN
 4cc0 5f5f2033 2e363435 31393935 33313838  __ 3.64519953188
 4cd0 32343734 36303235 32383430 35393333  2474602528405933
 4ce0 36313934 31393832 652d3439 35314636  61941982e-4951F6
 4cf0 3478005f 5f555345 5f504f53 4958005f  4x.__USE_POSIX._
 4d00 5f464c54 3132385f 4841535f 44454e4f  _FLT128_HAS_DENO
 4d10 524d5f5f 2031005f 494f5f43 55525245  RM__ 1._IO_CURRE
 4d20 4e544c59 5f505554 54494e47 20307838  NTLY_PUTTING 0x8
 4d30 3030005f 5f44424c 5f444543 494d414c  00.__DBL_DECIMAL
 4d40 5f444947 5f5f2031 37005f5f 4c44424c  _DIG__ 17.__LDBL
 4d50 5f484153 5f44454e 4f524d5f 5f203100  _HAS_DENORM__ 1.
 4d60 5f756e75 73656432 005f494f 5f627566  _unused2._IO_buf
 4d70 5f626173 65005f5f 73747562 5f6c6368  _base.__stub_lch
 4d80 6d6f6420 005f5f46 4c543634 5f4d414e  mod .__FLT64_MAN
 4d90 545f4449 475f5f20 3533005f 5f444543  T_DIG__ 53.__DEC
 4da0 36345f4d 414e545f 4449475f 5f203136  64_MANT_DIG__ 16
 4db0 005f5f46 4c545f48 41535f44 454e4f52  .__FLT_HAS_DENOR
 4dc0 4d5f5f20 31005f5f 44454349 4d414c5f  M__ 1.__DECIMAL_
 4dd0 4449475f 5f203231 00                 DIG__ 21.       
Contents of section .debug_macro:
 0000 04000200 00000007 0f010000 03000103  ................
 0010 1f070717 09000004 03010507 39090000  ............9...
 0020 031b0806 1f494500 00032109 07490900  .....IE...!..I..
 0030 0003a803 0a07e70a 000003ab 030b074f  ...............O
 0040 0c000004 03ac030c 0407650c 00000403  ..........e.....
 0050 c0030d03 0a0e07af 0c000004 04040707  ................
 0060 0d000004 073b0d00 00032102 074b0d00  .....;....!..K..
 0070 00040323 030518bd 14000003 1b0b074f  ...#...........O
 0080 0c000004 07e20d00 00038201 0f07400e  ..............@.
 0090 00000406 cc019528 00000403 24100502  .......(....$...
 00a0 2a2c0000 04032511 05022c2c 00000405  *,....%...,,....
 00b0 278d2a00 00032904 051d1011 00000323  '.*...)........#
 00c0 12072e0f 00000313 0207440f 00000403  ..........D.....
 00d0 15130502 ed1a0000 0407640f 00000407  ..........d.....
 00e0 8c0f0000 03351407 e40f0000 0407f40f  .....5..........
 00f0 00000407 c0110000 03830115 07061200  ................
 0100 00040734 12000003 8d060604 04040004  ...4............
 0110 00000500 f4280000 0500c222 00000500  .....(....."....
 0120 672b0000 0500a30b 00000500 b63d0000  g+...........=..
 0130 0500bb07 00000500 99050000 05008336  ...............6
 0140 00000500 09200000 05008d3d 00000500  ..... .....=....
 0150 73090000 0500da2e 00000500 5c470000  s...........\G..
 0160 05007c40 00000500 64290000 05005247  ..|@....d)....RG
 0170 00000500 c6420000 0500c210 00000500  .....B..........
 0180 ec0c0000 0500da25 00000500 c5240000  .......%.....$..
 0190 05004e24 00000500 34460000 05005229  ..N$....4F....R)
 01a0 00000500 0c390000 0500a409 00000500  .....9..........
 01b0 ff270000 0500a32a 00000500 84140000  .'.....*........
 01c0 05008807 00000500 5a3d0000 0500e51b  ........Z=......
 01d0 00000500 26170000 0500a107 00000500  ....&...........
 01e0 c2310000 0500ad0a 00000500 6b2d0000  .1..........k-..
 01f0 05007a3a 00000500 261e0000 0500ab4a  ..z:....&......J
 0200 00000500 b4120000 0500d829 00000500  ...........)....
 0210 2d480000 0500f52f 00000500 07400000  -H...../.....@..
 0220 0500d934 00000500 954c0000 05000c42  ...4.....L.....B
 0230 00000500 eb080000 05009e17 00000500  ................
 0240 20410000 05006e26 00000500 4a1b0000   A....n&....J...
 0250 05009637 00000500 d1090000 05001a0a  ...7............
 0260 00000500 51230000 0500d042 00000500  ....Q#.....B....
 0270 3e0b0000 05008f0d 00000500 411c0000  >...........A...
 0280 0500440a 00000500 e9420000 0500cd0c  ..D......B......
 0290 00000500 61460000 0500b326 00000500  ....aF.....&....
 02a0 63220000 05001836 00000500 583c0000  c".....6....X<..
 02b0 05003539 00000500 484b0000 05000c16  ..59....HK......
 02c0 00000500 b1270000 05002c3e 00000500  .....'....,>....
 02d0 a1030000 05003b47 00000500 5a0c0000  ......;G....Z...
 02e0 05002b31 00000500 8c080000 05001d34  ..+1...........4
 02f0 00000500 fe1b0000 05000c3b 00000500  ...........;....
 0300 5c0b0000 05009936 00000500 1f2b0000  \......6.....+..
 0310 05001b23 00000500 0a440000 05004a2a  ...#.....D....J*
 0320 00000500 5c390000 0500a83b 00000500  ....\9.....;....
 0330 483f0000 0500b106 00000500 a91b0000  H?..............
 0340 0500ee32 00000500 144b0000 0500c83d  ...2.....K.....=
 0350 00000500 ed100000 0500dc39 00000500  ...........9....
 0360 65420000 0500c234 00000500 db220000  eB.....4....."..
 0370 05000c00 00000500 a92c0000 0500b530  .........,.....0
 0380 00000500 c7120000 05001d2a 00000500  ...........*....
 0390 6d2e0000 0500142f 00000500 b0210000  m....../.....!..
 03a0 05001722 00000500 091f0000 05005a3f  ..."..........Z?
 03b0 00000500 21240000 05006c3a 00000500  ....!$....l:....
 03c0 62210000 0500db0b 00000500 d4270000  b!...........'..
 03d0 0500ec0e 00000500 294b0000 05003a36  ........)K....:6
 03e0 00000500 26420000 05003a21 00000500  ....&B....:!....
 03f0 fb450000 0500313a 00000500 52120000  .E....1:....R...
 0400 0500b72a 00000500 7c110000 0500ed2e  ...*....|.......
 0410 00000500 8e490000 05005c2a 00000500  .....I....\*....
 0420 1a270000 05002e08 00000500 6c330000  .'..........l3..
 0430 0500291a 00000500 c0440000 05007a10  ..)......D....z.
 0440 00000500 f3090000 0500083a 00000500  ...........:....
 0450 7a030000 05000a03 00000500 5b150000  z...........[...
 0460 0500332e 00000500 b1250000 05009811  ..3......%......
 0470 00000500 1a020000 0500e235 00000500  ...........5....
 0480 d8040000 05002011 00000500 912c0000  ...... ......,..
 0490 05008e1f 00000500 79450000 0500801e  ........yE......
 04a0 00000500 e3130000 0500a11d 00000500  ................
 04b0 6c100000 05004648 00000500 cc000000  l.....FH........
 04c0 0500f748 00000500 6a1c0000 05004632  ...H....j.....F2
 04d0 00000500 961e0000 05003841 00000500  ..........8A....
 04e0 e7440000 0500d606 00000500 b14d0000  .D...........M..
 04f0 05006c28 00000500 1c460000 05005408  ..l(.....F....T.
 0500 00000500 f0230000 05006203 00000500  .....#....b.....
 0510 df1e0000 05003d29 00000500 17470000  ......=).....G..
 0520 0500334d 00000500 711a0000 05005f25  ..3M....q....._%
 0530 00000500 284c0000 0500c601 00000500  ....(L..........
 0540 290b0000 05009a45 00000500 9e140000  )......E........
 0550 05002f2b 00000500 5a090000 0500d432  ../+....Z......2
 0560 00000500 712a0000 05008f15 00000500  ....q*..........
 0570 bd4b0000 0500c64d 00000500 b93b0000  .K.....M.....;..
 0580 0500461e 00000500 d40a0000 0500792b  ..F...........y+
 0590 00000500 cd140000 05004a4d 00000500  ..........JM....
 05a0 512c0000 05006a36 00000500 7b020000  Q,....j6....{...
 05b0 0500db24 00000500 0d1e0000 05000e0b  ...$............
 05c0 00000500 70230000 0500c54a 00000500  ....p#.....J....
 05d0 201b0000 0500ed4b 00000500 9d290000   ......K.....)..
 05e0 05009833 00000500 e32d0000 0500dd0f  ...3.....-......
 05f0 00000500 9c000000 05004c11 00000500  ..........L.....
 0600 854d0000 0500bc0c 00000500 21450000  .M..........!E..
 0610 05003f1a 00000500 b5000000 0500ac32  ..?............2
 0620 00000500 cf1d0000 05002626 00000500  ..........&&....
 0630 75060000 05008f3a 00000500 5c4a0000  u......:....\J..
 0640 0500771f 00000500 42150000 05002a00  ..w.....B.....*.
 0650 00000500 0e170000 0500381b 00000500  ..........8.....
 0660 30110000 05004d2d 00000500 ca130000  0.....M-........
 0670 05009c19 00000500 fa4a0000 0500780e  .........J....x.
 0680 00000500 b7190000 05007338 00000500  ..........s8....
 0690 b8470000 0500ff4c 00000500 301f0000  .G.....L....0...
 06a0 0500540e 00000500 9f240000 05008d24  ..T......$.....$
 06b0 00000500 3c350000 05006334 00000500  ....<5....c4....
 06c0 4c010000 05001a4a 00000500 3f030000  L......J....?...
 06d0 0500fe03 00000500 73270000 05008e1c  ........s'......
 06e0 00000500 f3130000 0500cb1f 00000500  ................
 06f0 360d0000 0500fc46 00000500 e53a0000  6......F.....:..
 0700 0500da0e 00000500 31100000 05000e19  ........1.......
 0710 00000500 f01f0000 05004425 00000500  ..........D%....
 0720 86440000 05009320 00000500 1f330000  .D..... .....3..
 0730 05000b01 00000500 ad4c0000 05000318  .........L......
 0740 00000500 f6340000 05005128 00000500  .....4....Q(....
 0750 ce2d0000 0500f740 00000500 1b180000  .-.....@........
 0760 0500d710 00000500 ef220000 05001d09  ........."......
 0770 00000500 12280000 05009b4d 00000500  .....(.....M....
 0780 49400000 05004d34 00000500 d64b0000  I@....M4.....K..
 0790 05002516 00000500 ac010000 05006b00  ..%...........k.
 07a0 00000500 78170000 05008212 00000500  ....x...........
 07b0 38300000 05002335 00000500 bd480000  80....#5.....H..
 07c0 0500f212 00000500 91460000 05008333  .........F.....3
 07d0 00000500 b63c0000 0500d923 00000500  .....<.....#....
 07e0 3d1d0000 0500ff0f 00000500 982d0000  =............-..
 07f0 0500e81d 00000500 91020000 05009210  ................
 0800 00000500 bc1b0000 0500ff23 00000500  ...........#....
 0810 123d0000 05003f31 00000500 67440000  .=....?1....gD..
 0820 05005416 00000500 6f240000 05002a40  ..T.....o$....*@
 0830 00000500 6e010000 0500d13b 00000500  ....n......;....
 0840 e3270000 0500794c 00000500 5d480000  .'....yL....]H..
 0850 0500b20d 00000500 fe2c0000 05007004  .........,....p.
 0860 00000500 53170000 0500344a 00000500  ....S.....4J....
 0870 e11a0000 05003925 00000500 e31f0000  ......9%........
 0880 0500e646 00000500 c2230000 05000b49  ...F.....#.....I
 0890 00000500 73150000 0500dd26 00000500  ....s......&....
 08a0 00400000 05005903 00000500 df170000  .@....Y.........
 08b0 05008016 00000500 6f470000 05001f29  ........oG.....)
 08c0 00000500 da410000 0500c22f 00000500  .....A...../....
 08d0 6e390000 05001b3c 00000500 b72f0000  n9.....<...../..
 08e0 05008623 00000500 e5360000 0500ba42  ...#.....6.....B
 08f0 00000500 e7360000 05004c4a 00000500  .....6....LJ....
 0900 f40f0000 05004e4a 00000500 69270000  ......NJ....i'..
 0910 05000409 00000004 00000513 d5020000  ................
 0920 05267e46 0000052e c8180000 053a4919  .&~F.........:I.
 0930 0000053d 970a0000 00040000 0518cc10  ...=............
 0940 0000051a d6330000 00040000 0513cd24  .....3.........$
 0950 00000677 42490000 06783918 00000679  ...wBI...x9....y
 0960 f6170000 067ad907 0000067b f34c0000  .....z.....{.L..
 0970 067c8034 0000067d 3f230000 067e0d13  .|.4...}?#...~..
 0980 0000067f 67380000 068001ab 44000006  ....g8......D...
 0990 8101500d 00000682 01183000 00068301  ..P.......0.....
 09a0 943f0000 068401e3 37000006 8501a126  .?......7......&
 09b0 00000686 01d64600 00068701 aa050000  ......F.........
 09c0 06880177 29000006 8901f329 0000068a  ...w)......)....
 09d0 01820d00 00068b01 ac410000 068c01f6  .........A......
 09e0 2a000006 8d01b117 0000068e 016d0500  *............m..
 09f0 00059301 9d120000 059e0184 04000005  ................
 0a00 ac018a42 000005b0 01422200 0006dc01  ...B.....B".....
 0a10 fc3a0000 05dd01b3 1a000005 e301e602  .:..............
 0a20 000005e9 018f1700 0005ef01 95090000  ................
 0a30 058402e5 1c000006 8602c806 00000587  ................
 0a40 02c54300 00068802 cf380000 05890232  ..C......8.....2
 0a50 2a000005 ac02692c 000005b0 02860900  *.....i,........
 0a60 0005b402 a0280000 05b80268 08000005  .....(.....h....
 0a70 bc024317 000006bd 02f61700 0005be02  ..C.............
 0a80 95090000 06bf0239 18000005 c0028f17  .......9........
 0a90 000005c4 02203a00 0006c502 730d0000  ..... :.....s...
 0aa0 05c602c9 0e000005 f0022e47 000005f4  ...........G....
 0ab0 02e80700 00058303 5d0d0000 058b03e3  ........].......
 0ac0 18000006 9a034408 0000059b 03e22800  ......D.......(.
 0ad0 00059f03 7f3c0000 05a003a4 2f000005  .....<....../...
 0ae0 a2031106 00000004 00000513 ef030000  ................
 0af0 02225f5f 50000623 44270000 052a2630  ."__P..#D'...*&0
 0b00 0000052b e5410000 0537df38 00000538  ...+.A...7.8...8
 0b10 954b0000 0539c70d 0000053a ab080000  .K...9.....:....
 0b20 05593814 0000055e 263c0000 055f5b14  .Y8....^&<..._[.
 0b30 00000564 cd300000 0565c532 00000568  ...d.0...e.2...h
 0b40 790a0000 05706419 00000571 0f460000  y....pd....q.F..
 0b50 0576452f 00000577 b52b0000 057a5c32  .vE/...w.+...z\2
 0b60 0000057c 753b0000 057d6e48 0000058a  ...|u;...}nH....
 0b70 016e0200 00058b01 ff280000 05a9012d  .n.......(.....-
 0b80 20000005 b0011638 000005b2 01751300   ......8.....u..
 0b90 0005b501 df490000 05b60166 3e000005  .....I.....f>...
 0ba0 cb016437 000005d3 01a53f00 0005dd01  ..d7......?.....
 0bb0 ae390000 05e4013d 05000005 ed01d311  .9.....=........
 0bc0 000005ee 018c2200 0005f601 132d0000  ......"......-..
 0bd0 058002e2 30000005 8d02e92b 00000597  ....0......+....
 0be0 02a44000 0005a002 f7070000 05a802b1  ..@.............
 0bf0 45000005 b102b614 000006b9 021c3e00  E.............>.
 0c00 0005ba02 da210000 05c30201 12000005  .....!..........
 0c10 d5028f0f 000005d6 026d0c00 0005df02  .........m......
 0c20 5c300000 05e50278 1d000005 e602fd04  \0.....x........
 0c30 000005fa 02624000 00058903 3c040000  .....b@.....<...
 0c40 058a03a8 2e000005 a003b236 00000004  ...........6....
 0c50 00000504 3e4a0000 050cdd4a 0000050e  ....>J.....J....
 0c60 59240000 00040000 05c20339 37000005  Y$.........97...
 0c70 c303df05 000005c4 03792100 0005c503  .........y!.....
 0c80 b3370000 05c603f6 0b000005 c803da3d  .7.............=
 0c90 000005c9 032b1300 0005d403 df3c0000  .....+.......<..
 0ca0 05d50308 0e000005 e703d616 00000004  ................
 0cb0 0000050a f23b0000 050b7c08 0000050c  .....;....|.....
 0cc0 26150000 050dda08 0000050e 5b1a0000  &...........[...
 0cd0 050f3e34 00000510 a6150000 0511764d  ..>4..........vM
 0ce0 00000512 2c190000 05131e48 00000514  ....,......H....
 0cf0 5b100000 0515670a 00000516 6f4b0000  [.....g.....oK..
 0d00 0517c116 00000004 00000625 0a2b0000  ...........%.+..
 0d10 052a6b12 0000062f ec430000 0533fe47  .*k..../.C...3.G
 0d20 00000638 ef360000 053c8847 00000641  ...8.6...<.G...A
 0d30 160d0000 05454a3a 00000004 0000051f  .....EJ:........
 0d40 362f0000 05206806 00000004 000005bb  6/... h.........
 0d50 01622600 0005bc01 00210000 05bd01d4  .b&......!......
 0d60 0f000005 be017116 000005bf 013f0f00  ......q......?..
 0d70 0005c001 6f0e0000 05c101df 20000005  ....o....... ...
 0d80 c2015110 000005c3 014d1000 0005c401  ..Q......M......
 0d90 6a110000 05c50144 00000005 c6016611  j......D......f.
 0da0 000005c7 01360900 0005c801 972e0000  .....6..........
 0db0 05c901d0 0f000005 ca01af47 000005d2  ...........G....
 0dc0 013a0a00 0006ee01 252e0000 06910326  .:......%......&
 0dd0 13000005 9603cf1c 0000069c 031f1300  ................
 0de0 00000400 00056239 24000005 63ff2500  ......b9$...c.%.
 0df0 00056488 0a000005 65c71700 00056610  ..d.....e.....f.
 0e00 25000005 67444400 0005757e 3f000005  %...gDD...u~?...
 0e10 764a2700 00057707 34000005 78852f00  vJ'...w.4...x./.
 0e20 0005792a 29000005 7a251c00 00057b9a  ..y*)...z%....{.
 0e30 39000005 7c6f4100 00057e96 23000000  9...|oA...~.#...
 0e40 04000005 18b31500 0005223f 42000005  .........."?B...
 0e50 23e50000 0005264f 49000005 272c4400  #.....&OI...',D.
 0e60 0005286c 14000005 29f63500 00052ac6  ..(l....).5...*.
 0e70 28000005 2ba92300 00052dd1 2f000005  (...+.#...-./...
 0e80 2eeb2400 000533a0 34000005 34264900  ..$...3.4...4&I.
 0e90 0005350e 15000005 36bc0500 000537f1  ..5.....6.....7.
 0ea0 16000005 388a1600 000539c6 2a000005  ....8.....9.*...
 0eb0 3aa41f00 00053b72 20000005 3c3a3b00  :.....;r ...<:;.
 0ec0 00053d49 36000005 3ee92000 00053f69  ..=I6...>. ...?i
 0ed0 3d000005 40353c00 000541c7 15000005  =...@5<...A.....
 0ee0 42f61900 000543b5 1d000005 44222100  B.....C.....D"!.
 0ef0 00054545 46000005 46b64100 000547b5  ..EEF...F.A...G.
 0f00 0b000005 48050f00 0005497e 39000005  ....H.....I~9...
 0f10 4a694900 00055092 01000005 53772c00  JiI...P.....Sw,.
 0f20 000556c5 1a000005 5c480900 00000400  ..V.....\H......
 0f30 00050510 35000005 0e362f00 00051268  ....5....6/....h
 0f40 06000000 04000006 ee01252e 00000691  ..........%.....
 0f50 03261300 00059603 cf1c0000 069c031f  .&..............
 0f60 13000000 04000005 33b70900 0005352e  ........3.....5.
 0f70 05000005 36bd2d00 00053863 18000005  ....6.-...8c....
 0f80 3b3d0200 00053d2a 37000000 04000005  ;=....=*7.......
 0f90 258f4000 0005267c 4b000005 27b42800  %.@...&|K...'.(.
 0fa0 000528a0 3d000005 29b01000 00052af6  ..(.=...).....*.
 0fb0 0c000005 2bcd3c00 00052ccd 1e000005  ....+.<...,.....
 0fc0 2df13900 00052e50 1f000005 2f253b00  -.9....P..../%;.
 0fd0 000530ce 3a000005 31ee3f00 00053454  ..0.:...1.?...4T
 0fe0 3e000000 04000006 225c2e00 0005270b  >......."\....'.
 0ff0 23000000 04000006 37924100 0005380f  #.......7.A...8.
 1000 37000005 3fdc3100 0005421d 26000005  7...?.1...B.&...
 1010 51d02600 0005525e 33000005 53fb0d00  Q.&...R^3...S...
 1020 0005543b 45000005 556a1700 00055698  ..T;E...Uj....V.
 1030 1b000005 57832800 000558b6 02000005  ....W.(...X.....
 1040 602d2200 0005617c 1b000005 62cb3600  `-"...a|....b.6.
 1050 000563e0 03000005 64493d00 00056579  ..c.....dI=...ey
 1060 47000005 66890500 00056722 03000005  G...f.....g"....
 1070 68c11100 00056905 1b000005 6a1d2000  h.....i.....j. .
 1080 00056bd6 2c000005 6cc60700 00056d81  ..k.,...l.....m.
 1090 18000005 6e174d00 00056f39 28000005  ....n.M...o9(...
 10a0 70550000 00057161 3b000005 72ad3100  pU....qa;...r.1.
 10b0 0005748b 29000005 75c32100 000579fd  ..t.)...u.!...y.
 10c0 2e000005 8201801c 00000583 01503000  .............P0.
 10d0 00058401 d3030000 05850186 2e000005  ................
 10e0 86010000 00000587 01241f00 00058801  .........$......
 10f0 01190000 058901af 16000005 8a017f0b  ................
 1100 0000058b 01f23700 00058c01 00330000  ......7......3..
 1110 058d0197 3e000005 8e010f41 0000058f  ....>......A....
 1120 018d3400 00059001 e52a0000 059101d5  ..4......*......
 1130 43000005 92019f30 000005f7 018b2600  C......0......&.
 1140 00059402 6d1b0000 05c30273 19000005  ....m......s....
 1150 c4028b3c 000005c5 024d1d00 00058f03  ...<.....M......
 1160 af490000 05940357 35000005 9703ac3e  .I.....W5......>
 1170 0000059b 03114300 0005ae03 fe1c0000  ......C.........
 1180 05af034e 0f000005 b9036031 000005c0  ...N......`1....
 1190 03e41500 0005c103 ea2c0000 05c2030c  .........,......
 11a0 21000005 c3033b12 000005c5 03a41800  !.....;.........
 11b0 0005c803 fe290000 05cb0304 32000000  .....)......2...
 11c0 04000005 2f233900 00053d92 0b000005  ..../#9...=.....
 11d0 482c0f00 000557f5 02000005 58e02b00  H,....W.....X.+.
 11e0 00055930 18000005 5eb70e00 00056ba0  ..Y0....^.....k.
 11f0 44000005 6c340300 00056d1e 1a000005  D...l4....m.....
 1200 76063800 00000400 0005133d 2c000005  v.8........=,...
 1210 19981800 00051af5 31000005 1bc30200  ........1.......
 1220 00051e9f 4a000006 240b3c00 000525b4  ....J...$.<...%.
 1230 38000000 04000005 8b018022 0000058c  8.........."....
 1240 019e4100 00058d01 46180000 05e803d9  ..A.....F.......
 1250 12000005 9004f826 000000             .......&...     

Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x36b>
 248:	78 38                	js     282 <_init-0x35e>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 12                	add    BYTE PTR [rdx],dl
 285:	ac                   	lods   al,BYTE PTR ds:[rsi]
 286:	3d 51 b2 b0 23       	cmp    eax,0x23b0b251
 28b:	cf                   	iret   
 28c:	ea                   	(bad)  
 28d:	37                   	(bad)  
 28e:	6a 93                	push   0xffffffffffffff93
 290:	29 a3 22 89 40 14    	sub    DWORD PTR [rbx+0x14408922],esp
 296:	97                   	xchg   edi,eax
 297:	a1                   	.byte 0xa1

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	78 00                	js     2d2 <_init-0x30e>
 2d2:	00 00                	add    BYTE PTR [rax],al
 2d4:	20 00                	and    BYTE PTR [rax],al
	...
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	1a 00                	sbb    al,BYTE PTR [rax]
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 2fe:	00 00                	add    BYTE PTR [rax],al
 300:	1f                   	(bad)  
 301:	00 00                	add    BYTE PTR [rax],al
 303:	00 12                	add    BYTE PTR [rdx],dl
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 30                	add    BYTE PTR [rax],dh
 319:	00 00                	add    BYTE PTR [rax],al
 31b:	00 12                	add    BYTE PTR [rdx],dl
	...
 32d:	00 00                	add    BYTE PTR [rax],al
 32f:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 332:	00 00                	add    BYTE PTR [rax],al
 334:	12 00                	adc    al,BYTE PTR [rax]
	...
 346:	00 00                	add    BYTE PTR [rax],al
 348:	94                   	xchg   esp,eax
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	00 20                	add    BYTE PTR [rax],ah
	...
 35d:	00 00                	add    BYTE PTR [rax],al
 35f:	00 0b                	add    BYTE PTR [rbx],cl
 361:	00 00                	add    BYTE PTR [rax],al
 363:	00 12                	add    BYTE PTR [rdx],dl
	...
 375:	00 00                	add    BYTE PTR [rax],al
 377:	00 a3 00 00 00 20    	add    BYTE PTR [rbx+0x20000000],ah
	...
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 37                	add    BYTE PTR [rdi],dh
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

00000000000003a8 <.dynstr>:
 3a8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 3ac:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 3ae:	73 6f                	jae    41f <_init-0x1c1>
 3b0:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
 3b5:	69 73 6f 63 39 39 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f393963
 3bc:	73 63                	jae    421 <_init-0x1bf>
 3be:	61                   	(bad)  
 3bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c0:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
 3c4:	74 73                	je     439 <_init-0x1a7>
 3c6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 3c9:	73 74                	jae    43f <_init-0x1a1>
 3cb:	61                   	(bad)  
 3cc:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3cf:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 3d2:	5f                   	pop    rdi
 3d3:	66 61                	data16 (bad) 
 3d5:	69 6c 00 70 72 69 6e 	imul   ebp,DWORD PTR [rax+rax*1+0x70],0x746e6972
 3dc:	74 
 3dd:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
 3e1:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 3e4:	5f                   	pop    rdi
 3e5:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 3eb:	7a 65                	jp     452 <_init-0x18e>
 3ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 3f0:	6c                   	ins    BYTE PTR es:[rdi],dx
 3f1:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 3f8:	72 74                	jb     46e <_init-0x172>
 3fa:	5f                   	pop    rdi
 3fb:	6d                   	ins    DWORD PTR es:[rdi],dx
 3fc:	61                   	(bad)  
 3fd:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 404:	43 5f                	rex.XB pop r15
 406:	32 2e                	xor    ch,BYTE PTR [rsi]
 408:	37                   	(bad)  
 409:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 40c:	49                   	rex.WB
 40d:	42                   	rex.X
 40e:	43 5f                	rex.XB pop r15
 410:	32 2e                	xor    ch,BYTE PTR [rsi]
 412:	34 00                	xor    al,0x0
 414:	47                   	rex.RXB
 415:	4c                   	rex.WR
 416:	49                   	rex.WB
 417:	42                   	rex.X
 418:	43 5f                	rex.XB pop r15
 41a:	32 2e                	xor    ch,BYTE PTR [rsi]
 41c:	32 2e                	xor    ch,BYTE PTR [rsi]
 41e:	35 00 5f 49 54       	xor    eax,0x54495f00
 423:	4d 5f                	rex.WRB pop r15
 425:	64 65 72 65          	fs gs jb 48e <_init-0x152>
 429:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 430:	4d 
 431:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 433:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 434:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 435:	65 54                	gs push rsp
 437:	61                   	(bad)  
 438:	62                   	(bad)  
 439:	6c                   	ins    BYTE PTR es:[rdi],dx
 43a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 43e:	67 6d                	ins    DWORD PTR es:[edi],dx
 440:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 441:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 442:	5f                   	pop    rdi
 443:	73 74                	jae    4b9 <_init-0x127>
 445:	61                   	(bad)  
 446:	72 74                	jb     4bc <_init-0x124>
 448:	5f                   	pop    rdi
 449:	5f                   	pop    rdi
 44a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 44d:	54                   	push   rsp
 44e:	4d 5f                	rex.WRB pop r15
 450:	72 65                	jb     4b7 <_init-0x129>
 452:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 459:	4d 
 45a:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 45c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 45d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 45e:	65 54                	gs push rsp
 460:	61                   	(bad)  
 461:	62                   	.byte 0x62
 462:	6c                   	ins    BYTE PTR es:[rdi],dx
 463:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000466 <.gnu.version>:
 466:	00 00                	add    BYTE PTR [rax],al
 468:	00 00                	add    BYTE PTR [rax],al
 46a:	02 00                	add    al,BYTE PTR [rax]
 46c:	03 00                	add    eax,DWORD PTR [rax]
 46e:	02 00                	add    al,BYTE PTR [rax]
 470:	02 00                	add    al,BYTE PTR [rax]
 472:	00 00                	add    BYTE PTR [rax],al
 474:	04 00                	add    al,0x0
 476:	00 00                	add    BYTE PTR [rax],al
 478:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000480 <.gnu.version_r>:
 480:	01 00                	add    DWORD PTR [rax],eax
 482:	03 00                	add    eax,DWORD PTR [rax]
 484:	01 00                	add    DWORD PTR [rax],eax
 486:	00 00                	add    BYTE PTR [rax],al
 488:	10 00                	adc    BYTE PTR [rax],al
 48a:	00 00                	add    BYTE PTR [rax],al
 48c:	00 00                	add    BYTE PTR [rax],al
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	17                   	(bad)  
 491:	69 69 0d 00 00 04 00 	imul   ebp,DWORD PTR [rcx+0xd],0x40000
 498:	58                   	pop    rax
 499:	00 00                	add    BYTE PTR [rax],al
 49b:	00 10                	add    BYTE PTR [rax],dl
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 4a2:	69 0d 00 00 03 00 62 	imul   ecx,DWORD PTR [rip+0x30000],0x62        # 304ac <__FRAME_END__+0x2faa8>
 4a9:	00 00 00 
 4ac:	10 00                	adc    BYTE PTR [rax],al
 4ae:	00 00                	add    BYTE PTR [rax],al
 4b0:	75 1a                	jne    4cc <_init-0x114>
 4b2:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 4b8:	6c                   	ins    BYTE PTR es:[rdi],dx
 4b9:	00 00                	add    BYTE PTR [rax],al
 4bb:	00 00                	add    BYTE PTR [rax],al
 4bd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000004c0 <.rela.dyn>:
 4c0:	a0 0d 20 00 00 00 00 	movabs al,ds:0x80000000000200d
 4c7:	00 08 
 4c9:	00 00                	add    BYTE PTR [rax],al
 4cb:	00 00                	add    BYTE PTR [rax],al
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 60 07             	add    BYTE PTR [rax+0x7],ah
 4d2:	00 00                	add    BYTE PTR [rax],al
 4d4:	00 00                	add    BYTE PTR [rax],al
 4d6:	00 00                	add    BYTE PTR [rax],al
 4d8:	a8 0d                	test   al,0xd
 4da:	20 00                	and    BYTE PTR [rax],al
 4dc:	00 00                	add    BYTE PTR [rax],al
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	08 00                	or     BYTE PTR [rax],al
 4e2:	00 00                	add    BYTE PTR [rax],al
 4e4:	00 00                	add    BYTE PTR [rax],al
 4e6:	00 00                	add    BYTE PTR [rax],al
 4e8:	20 07                	and    BYTE PTR [rdi],al
 4ea:	00 00                	add    BYTE PTR [rax],al
 4ec:	00 00                	add    BYTE PTR [rax],al
 4ee:	00 00                	add    BYTE PTR [rax],al
 4f0:	08 10                	or     BYTE PTR [rax],dl
 4f2:	20 00                	and    BYTE PTR [rax],al
 4f4:	00 00                	add    BYTE PTR [rax],al
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	08 00                	or     BYTE PTR [rax],al
 4fa:	00 00                	add    BYTE PTR [rax],al
 4fc:	00 00                	add    BYTE PTR [rax],al
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	08 10                	or     BYTE PTR [rax],dl
 502:	20 00                	and    BYTE PTR [rax],al
 504:	00 00                	add    BYTE PTR [rax],al
 506:	00 00                	add    BYTE PTR [rax],al
 508:	d8 0f                	fmul   DWORD PTR [rdi]
 50a:	20 00                	and    BYTE PTR [rax],al
 50c:	00 00                	add    BYTE PTR [rax],al
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	06                   	(bad)  
 511:	00 00                	add    BYTE PTR [rax],al
 513:	00 01                	add    BYTE PTR [rcx],al
	...
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 e0                	add    al,ah
 521:	0f 20 00             	mov    rax,cr0
 524:	00 00                	add    BYTE PTR [rax],al
 526:	00 00                	add    BYTE PTR [rax],al
 528:	06                   	(bad)  
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 531 <_init-0xaf>
 531:	00 00                	add    BYTE PTR [rax],al
 533:	00 00                	add    BYTE PTR [rax],al
 535:	00 00                	add    BYTE PTR [rax],al
 537:	00 e8                	add    al,ch
 539:	0f 20 00             	mov    rax,cr0
 53c:	00 00                	add    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	06                   	(bad)  
 541:	00 00                	add    BYTE PTR [rax],al
 543:	00 06                	add    BYTE PTR [rsi],al
	...
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 f0                	add    al,dh
 551:	0f 20 00             	mov    rax,cr0
 554:	00 00                	add    BYTE PTR [rax],al
 556:	00 00                	add    BYTE PTR [rax],al
 558:	06                   	(bad)  
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 08                	add    BYTE PTR [rax],cl
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 f8                	add    al,bh
 569:	0f 20 00             	mov    rax,cr0
 56c:	00 00                	add    BYTE PTR [rax],al
 56e:	00 00                	add    BYTE PTR [rax],al
 570:	06                   	(bad)  
 571:	00 00                	add    BYTE PTR [rax],al
 573:	00 09                	add    BYTE PTR [rcx],cl
	...

Disassembly of section .rela.plt:

0000000000000580 <.rela.plt>:
 580:	b8 0f 20 00 00       	mov    eax,0x200f
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 07                	add    BYTE PTR [rdi],al
 589:	00 00                	add    BYTE PTR [rax],al
 58b:	00 02                	add    BYTE PTR [rdx],al
	...
 595:	00 00                	add    BYTE PTR [rax],al
 597:	00 c0                	add    al,al
 599:	0f 20 00             	mov    rax,cr0
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	07                   	(bad)  
 5a1:	00 00                	add    BYTE PTR [rax],al
 5a3:	00 03                	add    BYTE PTR [rbx],al
	...
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 c8                	add    al,cl
 5b1:	0f 20 00             	mov    rax,cr0
 5b4:	00 00                	add    BYTE PTR [rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	07                   	(bad)  
 5b9:	00 00                	add    BYTE PTR [rax],al
 5bb:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	d0 0f                	ror    BYTE PTR [rdi],1
 5ca:	20 00                	and    BYTE PTR [rax],al
 5cc:	00 00                	add    BYTE PTR [rax],al
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	07                   	(bad)  
 5d1:	00 00                	add    BYTE PTR [rax],al
 5d3:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .init:

00000000000005e0 <_init>:
 5e0:	48 83 ec 08          	sub    rsp,0x8
 5e4:	48 8b 05 fd 09 20 00 	mov    rax,QWORD PTR [rip+0x2009fd]        # 200fe8 <__gmon_start__>
 5eb:	48 85 c0             	test   rax,rax
 5ee:	74 02                	je     5f2 <_init+0x12>
 5f0:	ff d0                	call   rax
 5f2:	48 83 c4 08          	add    rsp,0x8
 5f6:	c3                   	ret    

Disassembly of section .plt:

0000000000000600 <.plt>:
 600:	ff 35 a2 09 20 00    	push   QWORD PTR [rip+0x2009a2]        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
 606:	ff 25 a4 09 20 00    	jmp    QWORD PTR [rip+0x2009a4]        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
 60c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000610 <puts@plt>:
 610:	ff 25 a2 09 20 00    	jmp    QWORD PTR [rip+0x2009a2]        # 200fb8 <puts@GLIBC_2.2.5>
 616:	68 00 00 00 00       	push   0x0
 61b:	e9 e0 ff ff ff       	jmp    600 <.plt>

0000000000000620 <__stack_chk_fail@plt>:
 620:	ff 25 9a 09 20 00    	jmp    QWORD PTR [rip+0x20099a]        # 200fc0 <__stack_chk_fail@GLIBC_2.4>
 626:	68 01 00 00 00       	push   0x1
 62b:	e9 d0 ff ff ff       	jmp    600 <.plt>

0000000000000630 <printf@plt>:
 630:	ff 25 92 09 20 00    	jmp    QWORD PTR [rip+0x200992]        # 200fc8 <printf@GLIBC_2.2.5>
 636:	68 02 00 00 00       	push   0x2
 63b:	e9 c0 ff ff ff       	jmp    600 <.plt>

0000000000000640 <__isoc99_scanf@plt>:
 640:	ff 25 8a 09 20 00    	jmp    QWORD PTR [rip+0x20098a]        # 200fd0 <__isoc99_scanf@GLIBC_2.7>
 646:	68 03 00 00 00       	push   0x3
 64b:	e9 b0 ff ff ff       	jmp    600 <.plt>

Disassembly of section .plt.got:

0000000000000650 <__cxa_finalize@plt>:
 650:	ff 25 a2 09 20 00    	jmp    QWORD PTR [rip+0x2009a2]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 656:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000660 <_start>:
 660:	31 ed                	xor    ebp,ebp
 662:	49 89 d1             	mov    r9,rdx
 665:	5e                   	pop    rsi
 666:	48 89 e2             	mov    rdx,rsp
 669:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 66d:	50                   	push   rax
 66e:	54                   	push   rsp
 66f:	4c 8d 05 ea 01 00 00 	lea    r8,[rip+0x1ea]        # 860 <__libc_csu_fini>
 676:	48 8d 0d 73 01 00 00 	lea    rcx,[rip+0x173]        # 7f0 <__libc_csu_init>
 67d:	48 8d 3d e6 00 00 00 	lea    rdi,[rip+0xe6]        # 76a <main>
 684:	ff 15 56 09 20 00    	call   QWORD PTR [rip+0x200956]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 68a:	f4                   	hlt    
 68b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000690 <deregister_tm_clones>:
 690:	48 8d 3d 79 09 20 00 	lea    rdi,[rip+0x200979]        # 201010 <__TMC_END__>
 697:	55                   	push   rbp
 698:	48 8d 05 71 09 20 00 	lea    rax,[rip+0x200971]        # 201010 <__TMC_END__>
 69f:	48 39 f8             	cmp    rax,rdi
 6a2:	48 89 e5             	mov    rbp,rsp
 6a5:	74 19                	je     6c0 <deregister_tm_clones+0x30>
 6a7:	48 8b 05 2a 09 20 00 	mov    rax,QWORD PTR [rip+0x20092a]        # 200fd8 <_ITM_deregisterTMCloneTable>
 6ae:	48 85 c0             	test   rax,rax
 6b1:	74 0d                	je     6c0 <deregister_tm_clones+0x30>
 6b3:	5d                   	pop    rbp
 6b4:	ff e0                	jmp    rax
 6b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6bd:	00 00 00 
 6c0:	5d                   	pop    rbp
 6c1:	c3                   	ret    
 6c2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 6c6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 6cd:	00 00 00 

00000000000006d0 <register_tm_clones>:
 6d0:	48 8d 3d 39 09 20 00 	lea    rdi,[rip+0x200939]        # 201010 <__TMC_END__>
 6d7:	48 8d 35 32 09 20 00 	lea    rsi,[rip+0x200932]        # 201010 <__TMC_END__>
 6de:	55                   	push   rbp
 6df:	48 29 fe             	sub    rsi,rdi
 6e2:	48 89 e5             	mov    rbp,rsp
 6e5:	48 c1 fe 03          	sar    rsi,0x3
 6e9:	48 89 f0             	mov    rax,rsi
 6ec:	48 c1 e8 3f          	shr    rax,0x3f
 6f0:	48 01 c6             	add    rsi,rax
 6f3:	48 d1 fe             	sar    rsi,1
 6f6:	74 18                	je     710 <register_tm_clones+0x40>
 6f8:	48 8b 05 f1 08 20 00 	mov    rax,QWORD PTR [rip+0x2008f1]        # 200ff0 <_ITM_registerTMCloneTable>
 6ff:	48 85 c0             	test   rax,rax
 702:	74 0c                	je     710 <register_tm_clones+0x40>
 704:	5d                   	pop    rbp
 705:	ff e0                	jmp    rax
 707:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 70e:	00 00 
 710:	5d                   	pop    rbp
 711:	c3                   	ret    
 712:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 716:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 71d:	00 00 00 

0000000000000720 <__do_global_dtors_aux>:
 720:	80 3d e9 08 20 00 00 	cmp    BYTE PTR [rip+0x2008e9],0x0        # 201010 <__TMC_END__>
 727:	75 2f                	jne    758 <__do_global_dtors_aux+0x38>
 729:	48 83 3d c7 08 20 00 	cmp    QWORD PTR [rip+0x2008c7],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 730:	00 
 731:	55                   	push   rbp
 732:	48 89 e5             	mov    rbp,rsp
 735:	74 0c                	je     743 <__do_global_dtors_aux+0x23>
 737:	48 8b 3d ca 08 20 00 	mov    rdi,QWORD PTR [rip+0x2008ca]        # 201008 <__dso_handle>
 73e:	e8 0d ff ff ff       	call   650 <__cxa_finalize@plt>
 743:	e8 48 ff ff ff       	call   690 <deregister_tm_clones>
 748:	c6 05 c1 08 20 00 01 	mov    BYTE PTR [rip+0x2008c1],0x1        # 201010 <__TMC_END__>
 74f:	5d                   	pop    rbp
 750:	c3                   	ret    
 751:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 758:	f3 c3                	repz ret 
 75a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000760 <frame_dummy>:
 760:	55                   	push   rbp
 761:	48 89 e5             	mov    rbp,rsp
 764:	5d                   	pop    rbp
 765:	e9 66 ff ff ff       	jmp    6d0 <register_tm_clones>

000000000000076a <main>:
#include <stdio.h>

int main(int argc, char * argv[]) {
 76a:	55                   	push   rbp
 76b:	48 89 e5             	mov    rbp,rsp
 76e:	48 83 ec 20          	sub    rsp,0x20
 772:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
 775:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
 779:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
 780:	00 00 
 782:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 786:	31 c0                	xor    eax,eax

	int a, b;

	b = 5;
 788:	c7 45 f4 05 00 00 00 	mov    DWORD PTR [rbp-0xc],0x5

	printf ("Enter a number between 1 and 10 -> ");
 78f:	48 8d 3d e2 00 00 00 	lea    rdi,[rip+0xe2]        # 878 <_IO_stdin_used+0x8>
 796:	b8 00 00 00 00       	mov    eax,0x0
 79b:	e8 90 fe ff ff       	call   630 <printf@plt>
	scanf ("%d", &a);
 7a0:	48 8d 45 f0          	lea    rax,[rbp-0x10]
 7a4:	48 89 c6             	mov    rsi,rax
 7a7:	48 8d 3d ee 00 00 00 	lea    rdi,[rip+0xee]        # 89c <_IO_stdin_used+0x2c>
 7ae:	b8 00 00 00 00       	mov    eax,0x0
 7b3:	e8 88 fe ff ff       	call   640 <__isoc99_scanf@plt>

	if (a > b) {
 7b8:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
 7bb:	39 45 f4             	cmp    DWORD PTR [rbp-0xc],eax
 7be:	7d 0c                	jge    7cc <main+0x62>
		printf ("The number was higher than 5!\n");
 7c0:	48 8d 3d d8 00 00 00 	lea    rdi,[rip+0xd8]        # 89f <_IO_stdin_used+0x2f>
 7c7:	e8 44 fe ff ff       	call   610 <puts@plt>
 7cc:	b8 00 00 00 00       	mov    eax,0x0
	}

}
 7d1:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 7d5:	64 48 33 14 25 28 00 	xor    rdx,QWORD PTR fs:0x28
 7dc:	00 00 
 7de:	74 05                	je     7e5 <main+0x7b>
 7e0:	e8 3b fe ff ff       	call   620 <__stack_chk_fail@plt>
 7e5:	c9                   	leave  
 7e6:	c3                   	ret    
 7e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 7ee:	00 00 

00000000000007f0 <__libc_csu_init>:
 7f0:	41 57                	push   r15
 7f2:	41 56                	push   r14
 7f4:	49 89 d7             	mov    r15,rdx
 7f7:	41 55                	push   r13
 7f9:	41 54                	push   r12
 7fb:	4c 8d 25 9e 05 20 00 	lea    r12,[rip+0x20059e]        # 200da0 <__frame_dummy_init_array_entry>
 802:	55                   	push   rbp
 803:	48 8d 2d 9e 05 20 00 	lea    rbp,[rip+0x20059e]        # 200da8 <__init_array_end>
 80a:	53                   	push   rbx
 80b:	41 89 fd             	mov    r13d,edi
 80e:	49 89 f6             	mov    r14,rsi
 811:	4c 29 e5             	sub    rbp,r12
 814:	48 83 ec 08          	sub    rsp,0x8
 818:	48 c1 fd 03          	sar    rbp,0x3
 81c:	e8 bf fd ff ff       	call   5e0 <_init>
 821:	48 85 ed             	test   rbp,rbp
 824:	74 20                	je     846 <__libc_csu_init+0x56>
 826:	31 db                	xor    ebx,ebx
 828:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 82f:	00 
 830:	4c 89 fa             	mov    rdx,r15
 833:	4c 89 f6             	mov    rsi,r14
 836:	44 89 ef             	mov    edi,r13d
 839:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 83d:	48 83 c3 01          	add    rbx,0x1
 841:	48 39 dd             	cmp    rbp,rbx
 844:	75 ea                	jne    830 <__libc_csu_init+0x40>
 846:	48 83 c4 08          	add    rsp,0x8
 84a:	5b                   	pop    rbx
 84b:	5d                   	pop    rbp
 84c:	41 5c                	pop    r12
 84e:	41 5d                	pop    r13
 850:	41 5e                	pop    r14
 852:	41 5f                	pop    r15
 854:	c3                   	ret    
 855:	90                   	nop
 856:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 85d:	00 00 00 

0000000000000860 <__libc_csu_fini>:
 860:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000864 <_fini>:
 864:	48 83 ec 08          	sub    rsp,0x8
 868:	48 83 c4 08          	add    rsp,0x8
 86c:	c3                   	ret    

Disassembly of section .rodata:

0000000000000870 <_IO_stdin_used>:
 870:	01 00                	add    DWORD PTR [rax],eax
 872:	02 00                	add    al,BYTE PTR [rax]
 874:	00 00                	add    BYTE PTR [rax],al
 876:	00 00                	add    BYTE PTR [rax],al
 878:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
 87a:	74 65                	je     8e1 <__GNU_EH_FRAME_HDR+0x21>
 87c:	72 20                	jb     89e <_IO_stdin_used+0x2e>
 87e:	61                   	(bad)  
 87f:	20 6e 75             	and    BYTE PTR [rsi+0x75],ch
 882:	6d                   	ins    DWORD PTR es:[rdi],dx
 883:	62                   	(bad)  
 884:	65 72 20             	gs jb  8a7 <_IO_stdin_used+0x37>
 887:	62                   	(bad)  
 888:	65 74 77             	gs je  902 <__GNU_EH_FRAME_HDR+0x42>
 88b:	65 65 6e             	gs outs dx,BYTE PTR gs:[rsi]
 88e:	20 31                	and    BYTE PTR [rcx],dh
 890:	20 61 6e             	and    BYTE PTR [rcx+0x6e],ah
 893:	64 20 31             	and    BYTE PTR fs:[rcx],dh
 896:	30 20                	xor    BYTE PTR [rax],ah
 898:	2d 3e 20 00 25       	sub    eax,0x2500203e
 89d:	64 00 54 68 65       	add    BYTE PTR fs:[rax+rbp*2+0x65],dl
 8a2:	20 6e 75             	and    BYTE PTR [rsi+0x75],ch
 8a5:	6d                   	ins    DWORD PTR es:[rdi],dx
 8a6:	62                   	(bad)  
 8a7:	65 72 20             	gs jb  8ca <__GNU_EH_FRAME_HDR+0xa>
 8aa:	77 61                	ja     90d <__GNU_EH_FRAME_HDR+0x4d>
 8ac:	73 20                	jae    8ce <__GNU_EH_FRAME_HDR+0xe>
 8ae:	68 69 67 68 65       	push   0x65686769
 8b3:	72 20                	jb     8d5 <__GNU_EH_FRAME_HDR+0x15>
 8b5:	74 68                	je     91f <__GNU_EH_FRAME_HDR+0x5f>
 8b7:	61                   	(bad)  
 8b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 8b9:	20                   	.byte 0x20
 8ba:	35                   	.byte 0x35
 8bb:	21 00                	and    DWORD PTR [rax],eax

Disassembly of section .eh_frame_hdr:

00000000000008c0 <__GNU_EH_FRAME_HDR>:
 8c0:	01 1b                	add    DWORD PTR [rbx],ebx
 8c2:	03 3b                	add    edi,DWORD PTR [rbx]
 8c4:	3c 00                	cmp    al,0x0
 8c6:	00 00                	add    BYTE PTR [rax],al
 8c8:	06                   	(bad)  
 8c9:	00 00                	add    BYTE PTR [rax],al
 8cb:	00 40 fd             	add    BYTE PTR [rax-0x3],al
 8ce:	ff                   	(bad)  
 8cf:	ff 88 00 00 00 90    	dec    DWORD PTR [rax-0x70000000]
 8d5:	fd                   	std    
 8d6:	ff                   	(bad)  
 8d7:	ff b0 00 00 00 a0    	push   QWORD PTR [rax-0x60000000]
 8dd:	fd                   	std    
 8de:	ff                   	(bad)  
 8df:	ff 58 00             	call   FWORD PTR [rax+0x0]
 8e2:	00 00                	add    BYTE PTR [rax],al
 8e4:	aa                   	stos   BYTE PTR es:[rdi],al
 8e5:	fe                   	(bad)  
 8e6:	ff                   	(bad)  
 8e7:	ff c8                	dec    eax
 8e9:	00 00                	add    BYTE PTR [rax],al
 8eb:	00 30                	add    BYTE PTR [rax],dh
 8ed:	ff                   	(bad)  
 8ee:	ff                   	(bad)  
 8ef:	ff                   	(bad)  
 8f0:	e8 00 00 00 a0       	call   ffffffffa00008f5 <_end+0xffffffff9fdff8dd>
 8f5:	ff                   	(bad)  
 8f6:	ff                   	(bad)  
 8f7:	ff 30                	push   QWORD PTR [rax]
 8f9:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .eh_frame:

0000000000000900 <__FRAME_END__-0x104>:
 900:	14 00                	adc    al,0x0
 902:	00 00                	add    BYTE PTR [rax],al
 904:	00 00                	add    BYTE PTR [rax],al
 906:	00 00                	add    BYTE PTR [rax],al
 908:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 90b:	00 01                	add    BYTE PTR [rcx],al
 90d:	78 10                	js     91f <__GNU_EH_FRAME_HDR+0x5f>
 90f:	01 1b                	add    DWORD PTR [rbx],ebx
 911:	0c 07                	or     al,0x7
 913:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 919:	00 00                	add    BYTE PTR [rax],al
 91b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 91e:	00 00                	add    BYTE PTR [rax],al
 920:	40 fd                	rex std 
 922:	ff                   	(bad)  
 923:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 92d:	00 00                	add    BYTE PTR [rax],al
 92f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 932:	00 00                	add    BYTE PTR [rax],al
 934:	00 00                	add    BYTE PTR [rax],al
 936:	00 00                	add    BYTE PTR [rax],al
 938:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 93b:	00 01                	add    BYTE PTR [rcx],al
 93d:	78 10                	js     94f <__GNU_EH_FRAME_HDR+0x8f>
 93f:	01 1b                	add    DWORD PTR [rbx],ebx
 941:	0c 07                	or     al,0x7
 943:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 949:	00 00                	add    BYTE PTR [rax],al
 94b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 94e:	00 00                	add    BYTE PTR [rax],al
 950:	b0 fc                	mov    al,0xfc
 952:	ff                   	(bad)  
 953:	ff 50 00             	call   QWORD PTR [rax+0x0]
 956:	00 00                	add    BYTE PTR [rax],al
 958:	00 0e                	add    BYTE PTR [rsi],cl
 95a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 95d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 960:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 963:	80 00 3f             	add    BYTE PTR [rax],0x3f
 966:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 968:	2a 33                	sub    dh,BYTE PTR [rbx]
 96a:	24 22                	and    al,0x22
 96c:	00 00                	add    BYTE PTR [rax],al
 96e:	00 00                	add    BYTE PTR [rax],al
 970:	14 00                	adc    al,0x0
 972:	00 00                	add    BYTE PTR [rax],al
 974:	44 00 00             	add    BYTE PTR [rax],r8b
 977:	00 d8                	add    al,bl
 979:	fc                   	cld    
 97a:	ff                   	(bad)  
 97b:	ff 08                	dec    DWORD PTR [rax]
	...
 985:	00 00                	add    BYTE PTR [rax],al
 987:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	5c                   	pop    rsp
 98d:	00 00                	add    BYTE PTR [rax],al
 98f:	00 da                	add    dl,bl
 991:	fd                   	std    
 992:	ff                   	(bad)  
 993:	ff                   	(bad)  
 994:	7d 00                	jge    996 <__GNU_EH_FRAME_HDR+0xd6>
 996:	00 00                	add    BYTE PTR [rax],al
 998:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
 99b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 9a1:	02 78 0c             	add    bh,BYTE PTR [rax+0xc]
 9a4:	07                   	(bad)  
 9a5:	08 00                	or     BYTE PTR [rax],al
 9a7:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
 9ab:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
 9af:	00 40 fe             	add    BYTE PTR [rax-0x2],al
 9b2:	ff                   	(bad)  
 9b3:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
 9b6:	00 00                	add    BYTE PTR [rax],al
 9b8:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
 9bb:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 9c1:	8e 03                	mov    es,WORD PTR [rbx]
 9c3:	45 0e                	rex.RB (bad) 
 9c5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 9cb:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301819 <_end+0xffffffff86100801>
 9d1:	06                   	(bad)  
 9d2:	48 0e                	rex.W (bad) 
 9d4:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 9da:	72 0e                	jb     9ea <__GNU_EH_FRAME_HDR+0x12a>
 9dc:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 9df:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 9e2:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 9e5:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 9e8:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 9eb:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 9ee:	08 00                	or     BYTE PTR [rax],al
 9f0:	10 00                	adc    BYTE PTR [rax],al
 9f2:	00 00                	add    BYTE PTR [rax],al
 9f4:	c4                   	(bad)  
 9f5:	00 00                	add    BYTE PTR [rax],al
 9f7:	00 68 fe             	add    BYTE PTR [rax-0x2],ch
 9fa:	ff                   	(bad)  
 9fb:	ff 02                	inc    DWORD PTR [rdx]
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 00                	add    BYTE PTR [rax],al
 a01:	00 00                	add    BYTE PTR [rax],al
	...

0000000000000a04 <__FRAME_END__>:
 a04:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200da0 <__frame_dummy_init_array_entry>:
  200da0:	60                   	(bad)  
  200da1:	07                   	(bad)  
  200da2:	00 00                	add    BYTE PTR [rax],al
  200da4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200da8 <__do_global_dtors_aux_fini_array_entry>:
  200da8:	20 07                	and    BYTE PTR [rdi],al
  200daa:	00 00                	add    BYTE PTR [rax],al
  200dac:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200db0 <_DYNAMIC>:
  200db0:	01 00                	add    DWORD PTR [rax],eax
  200db2:	00 00                	add    BYTE PTR [rax],al
  200db4:	00 00                	add    BYTE PTR [rax],al
  200db6:	00 00                	add    BYTE PTR [rax],al
  200db8:	01 00                	add    DWORD PTR [rax],eax
  200dba:	00 00                	add    BYTE PTR [rax],al
  200dbc:	00 00                	add    BYTE PTR [rax],al
  200dbe:	00 00                	add    BYTE PTR [rax],al
  200dc0:	0c 00                	or     al,0x0
  200dc2:	00 00                	add    BYTE PTR [rax],al
  200dc4:	00 00                	add    BYTE PTR [rax],al
  200dc6:	00 00                	add    BYTE PTR [rax],al
  200dc8:	e0 05                	loopne 200dcf <_DYNAMIC+0x1f>
  200dca:	00 00                	add    BYTE PTR [rax],al
  200dcc:	00 00                	add    BYTE PTR [rax],al
  200dce:	00 00                	add    BYTE PTR [rax],al
  200dd0:	0d 00 00 00 00       	or     eax,0x0
  200dd5:	00 00                	add    BYTE PTR [rax],al
  200dd7:	00 64 08 00          	add    BYTE PTR [rax+rcx*1+0x0],ah
  200ddb:	00 00                	add    BYTE PTR [rax],al
  200ddd:	00 00                	add    BYTE PTR [rax],al
  200ddf:	00 19                	add    BYTE PTR [rcx],bl
  200de1:	00 00                	add    BYTE PTR [rax],al
  200de3:	00 00                	add    BYTE PTR [rax],al
  200de5:	00 00                	add    BYTE PTR [rax],al
  200de7:	00 a0 0d 20 00 00    	add    BYTE PTR [rax+0x200d],ah
  200ded:	00 00                	add    BYTE PTR [rax],al
  200def:	00 1b                	add    BYTE PTR [rbx],bl
  200df1:	00 00                	add    BYTE PTR [rax],al
  200df3:	00 00                	add    BYTE PTR [rax],al
  200df5:	00 00                	add    BYTE PTR [rax],al
  200df7:	00 08                	add    BYTE PTR [rax],cl
  200df9:	00 00                	add    BYTE PTR [rax],al
  200dfb:	00 00                	add    BYTE PTR [rax],al
  200dfd:	00 00                	add    BYTE PTR [rax],al
  200dff:	00 1a                	add    BYTE PTR [rdx],bl
  200e01:	00 00                	add    BYTE PTR [rax],al
  200e03:	00 00                	add    BYTE PTR [rax],al
  200e05:	00 00                	add    BYTE PTR [rax],al
  200e07:	00 a8 0d 20 00 00    	add    BYTE PTR [rax+0x200d],ch
  200e0d:	00 00                	add    BYTE PTR [rax],al
  200e0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  200e12:	00 00                	add    BYTE PTR [rax],al
  200e14:	00 00                	add    BYTE PTR [rax],al
  200e16:	00 00                	add    BYTE PTR [rax],al
  200e18:	08 00                	or     BYTE PTR [rax],al
  200e1a:	00 00                	add    BYTE PTR [rax],al
  200e1c:	00 00                	add    BYTE PTR [rax],al
  200e1e:	00 00                	add    BYTE PTR [rax],al
  200e20:	f5                   	cmc    
  200e21:	fe                   	(bad)  
  200e22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e25:	00 00                	add    BYTE PTR [rax],al
  200e27:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e2d:	00 00                	add    BYTE PTR [rax],al
  200e2f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e35 <_DYNAMIC+0x85>
  200e35:	00 00                	add    BYTE PTR [rax],al
  200e37:	00 a8 03 00 00 00    	add    BYTE PTR [rax+0x3],ch
  200e3d:	00 00                	add    BYTE PTR [rax],al
  200e3f:	00 06                	add    BYTE PTR [rsi],al
  200e41:	00 00                	add    BYTE PTR [rax],al
  200e43:	00 00                	add    BYTE PTR [rax],al
  200e45:	00 00                	add    BYTE PTR [rax],al
  200e47:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e4d:	00 00                	add    BYTE PTR [rax],al
  200e4f:	00 0a                	add    BYTE PTR [rdx],cl
  200e51:	00 00                	add    BYTE PTR [rax],al
  200e53:	00 00                	add    BYTE PTR [rax],al
  200e55:	00 00                	add    BYTE PTR [rax],al
  200e57:	00 bd 00 00 00 00    	add    BYTE PTR [rbp+0x0],bh
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 0b                	add    BYTE PTR [rbx],cl
  200e61:	00 00                	add    BYTE PTR [rax],al
  200e63:	00 00                	add    BYTE PTR [rax],al
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 18                	add    BYTE PTR [rax],bl
  200e69:	00 00                	add    BYTE PTR [rax],al
  200e6b:	00 00                	add    BYTE PTR [rax],al
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 200e75 <_DYNAMIC+0xc5>
	...
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 03                	add    BYTE PTR [rbx],al
  200e81:	00 00                	add    BYTE PTR [rax],al
  200e83:	00 00                	add    BYTE PTR [rax],al
  200e85:	00 00                	add    BYTE PTR [rax],al
  200e87:	00 a0 0f 20 00 00    	add    BYTE PTR [rax+0x200f],ah
  200e8d:	00 00                	add    BYTE PTR [rax],al
  200e8f:	00 02                	add    BYTE PTR [rdx],al
  200e91:	00 00                	add    BYTE PTR [rax],al
  200e93:	00 00                	add    BYTE PTR [rax],al
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 60 00             	add    BYTE PTR [rax+0x0],ah
  200e9a:	00 00                	add    BYTE PTR [rax],al
  200e9c:	00 00                	add    BYTE PTR [rax],al
  200e9e:	00 00                	add    BYTE PTR [rax],al
  200ea0:	14 00                	adc    al,0x0
  200ea2:	00 00                	add    BYTE PTR [rax],al
  200ea4:	00 00                	add    BYTE PTR [rax],al
  200ea6:	00 00                	add    BYTE PTR [rax],al
  200ea8:	07                   	(bad)  
  200ea9:	00 00                	add    BYTE PTR [rax],al
  200eab:	00 00                	add    BYTE PTR [rax],al
  200ead:	00 00                	add    BYTE PTR [rax],al
  200eaf:	00 17                	add    BYTE PTR [rdi],dl
  200eb1:	00 00                	add    BYTE PTR [rax],al
  200eb3:	00 00                	add    BYTE PTR [rax],al
  200eb5:	00 00                	add    BYTE PTR [rax],al
  200eb7:	00 80 05 00 00 00    	add    BYTE PTR [rax+0x5],al
  200ebd:	00 00                	add    BYTE PTR [rax],al
  200ebf:	00 07                	add    BYTE PTR [rdi],al
  200ec1:	00 00                	add    BYTE PTR [rax],al
  200ec3:	00 00                	add    BYTE PTR [rax],al
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 c0                	add    al,al
  200ec9:	04 00                	add    al,0x0
  200ecb:	00 00                	add    BYTE PTR [rax],al
  200ecd:	00 00                	add    BYTE PTR [rax],al
  200ecf:	00 08                	add    BYTE PTR [rax],cl
  200ed1:	00 00                	add    BYTE PTR [rax],al
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 c0                	add    al,al
  200ed9:	00 00                	add    BYTE PTR [rax],al
  200edb:	00 00                	add    BYTE PTR [rax],al
  200edd:	00 00                	add    BYTE PTR [rax],al
  200edf:	00 09                	add    BYTE PTR [rcx],cl
  200ee1:	00 00                	add    BYTE PTR [rax],al
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 18                	add    BYTE PTR [rax],bl
  200ee9:	00 00                	add    BYTE PTR [rax],al
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 1e                	add    BYTE PTR [rsi],bl
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 08                	add    BYTE PTR [rax],cl
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 fb                	add    bl,bh
  200f01:	ff                   	(bad)  
  200f02:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 01                	add    BYTE PTR [rcx],al
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	08 00                	or     BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 fe                	add    dh,bh
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 80 04 00 00 00    	add    BYTE PTR [rax+0x4],al
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 ff                	add    bh,bh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 01                	add    BYTE PTR [rcx],al
  200f29:	00 00                	add    BYTE PTR [rax],al
  200f2b:	00 00                	add    BYTE PTR [rax],al
  200f2d:	00 00                	add    BYTE PTR [rax],al
  200f2f:	00 f0                	add    al,dh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
  200f3a:	00 00                	add    BYTE PTR [rax],al
  200f3c:	00 00                	add    BYTE PTR [rax],al
  200f3e:	00 00                	add    BYTE PTR [rax],al
  200f40:	f9                   	stc    
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fa0 <_GLOBAL_OFFSET_TABLE_>:
  200fa0:	b0 0d                	mov    al,0xd
  200fa2:	20 00                	and    BYTE PTR [rax],al
	...
  200fb8:	16                   	(bad)  
  200fb9:	06                   	(bad)  
  200fba:	00 00                	add    BYTE PTR [rax],al
  200fbc:	00 00                	add    BYTE PTR [rax],al
  200fbe:	00 00                	add    BYTE PTR [rax],al
  200fc0:	26 06                	es (bad) 
  200fc2:	00 00                	add    BYTE PTR [rax],al
  200fc4:	00 00                	add    BYTE PTR [rax],al
  200fc6:	00 00                	add    BYTE PTR [rax],al
  200fc8:	36 06                	ss (bad) 
  200fca:	00 00                	add    BYTE PTR [rax],al
  200fcc:	00 00                	add    BYTE PTR [rax],al
  200fce:	00 00                	add    BYTE PTR [rax],al
  200fd0:	46 06                	rex.RX (bad) 
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x568>
   a:	74 75                	je     81 <_init-0x55f>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x559>
  19:	74 75                	je     90 <_init-0x550>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	6a 07                	push   0x7
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	7d 00                	jge    1a <_init-0x5c6>
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	5c                   	pop    rsp
   1:	03 00                	add    eax,DWORD PTR [rax]
   3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	0f 0c                	(bad)  
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0c 0c                	or     al,0xc
  12:	0d 00 00 14 07       	or     eax,0x7140000
  17:	00 00                	add    BYTE PTR [rax],al
  19:	6a 07                	push   0x7
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	7d 00                	jge    23 <_init-0x5bd>
	...
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	02 bf 28 00 00 02    	add    bh,BYTE PTR [rdi+0x2000028]
  37:	d8 3c 00             	fdivr  DWORD PTR [rax+rax*1]
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	03 08                	add    ecx,DWORD PTR [rax]
  3e:	07                   	(bad)  
  3f:	4a 39 00             	rex.WX cmp QWORD PTR [rax],rax
  42:	00 03                	add    BYTE PTR [rbx],al
  44:	01 08                	add    DWORD PTR [rax],ecx
  46:	7d 26                	jge    6e <_init-0x572>
  48:	00 00                	add    BYTE PTR [rax],al
  4a:	03 02                	add    eax,DWORD PTR [rdx]
  4c:	07                   	(bad)  
  4d:	17                   	(bad)  
  4e:	40 00 00             	add    BYTE PTR [rax],al
  51:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
  54:	34 1c                	xor    al,0x1c
  56:	00 00                	add    BYTE PTR [rax],al
  58:	03 01                	add    eax,DWORD PTR [rcx]
  5a:	06                   	(bad)  
  5b:	1a 42 00             	sbb    al,BYTE PTR [rdx+0x0]
  5e:	00 03                	add    BYTE PTR [rbx],al
  60:	02 05 44 24 00 00    	add    al,BYTE PTR [rip+0x2444]        # 24aa <__FRAME_END__+0x1aa6>
  66:	04 04                	add    al,0x4
  68:	05 69 6e 74 00       	add    eax,0x746e69
  6d:	03 08                	add    ecx,DWORD PTR [rax]
  6f:	05 a5 39 00 00       	add    eax,0x39a5
  74:	02 ba 10 00 00 03    	add    bh,BYTE PTR [rdx+0x3000010]
  7a:	8c 6d 00             	mov    WORD PTR [rbp+0x0],gs
  7d:	00 00                	add    BYTE PTR [rax],al
  7f:	02 02                	add    al,BYTE PTR [rdx]
  81:	0d 00 00 03 8d       	or     eax,0x8d030000
  86:	6d                   	ins    DWORD PTR es:[rdi],dx
  87:	00 00                	add    BYTE PTR [rax],al
  89:	00 05 08 06 08 92    	add    BYTE PTR [rip+0xffffffff92080608],al        # ffffffff92080697 <_end+0xffffffff91e7f67f>
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	00 03                	add    BYTE PTR [rbx],al
  93:	01 06                	add    DWORD PTR [rsi],eax
  95:	21 42 00             	and    DWORD PTR [rdx+0x0],eax
  98:	00 07                	add    BYTE PTR [rdi],al
  9a:	92                   	xchg   edx,eax
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 08                	add    BYTE PTR [rax],cl
  9f:	40 3d 00 00 d8 04    	rex cmp eax,0x4d80000
  a5:	f5                   	cmc    
  a6:	1e                   	(bad)  
  a7:	02 00                	add    al,BYTE PTR [rax]
  a9:	00 09                	add    BYTE PTR [rcx],cl
  ab:	9a                   	(bad)  
  ac:	26 00 00             	add    BYTE PTR es:[rax],al
  af:	04 f6                	add    al,0xf6
  b1:	66 00 00             	data16 add BYTE PTR [rax],al
  b4:	00 00                	add    BYTE PTR [rax],al
  b6:	09 d2                	or     edx,edx
  b8:	20 00                	and    BYTE PTR [rax],al
  ba:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
  bd:	8c 00                	mov    WORD PTR [rax],es
  bf:	00 00                	add    BYTE PTR [rax],al
  c1:	08 09                	or     BYTE PTR [rcx],cl
  c3:	12 33                	adc    dh,BYTE PTR [rbx]
  c5:	00 00                	add    BYTE PTR [rax],al
  c7:	04 fc                	add    al,0xfc
  c9:	8c 00                	mov    WORD PTR [rax],es
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	10 09                	adc    BYTE PTR [rcx],cl
  cf:	3b 19                	cmp    ebx,DWORD PTR [rcx]
  d1:	00 00                	add    BYTE PTR [rax],al
  d3:	04 fd                	add    al,0xfd
  d5:	8c 00                	mov    WORD PTR [rax],es
  d7:	00 00                	add    BYTE PTR [rax],al
  d9:	18 09                	sbb    BYTE PTR [rcx],cl
  db:	b6 24                	mov    dh,0x24
  dd:	00 00                	add    BYTE PTR [rax],al
  df:	04 fe                	add    al,0xfe
  e1:	8c 00                	mov    WORD PTR [rax],es
  e3:	00 00                	add    BYTE PTR [rax],al
  e5:	20 09                	and    BYTE PTR [rcx],cl
  e7:	cc                   	int3   
  e8:	41 00 00             	add    BYTE PTR [r8],al
  eb:	04 ff                	add    al,0xff
  ed:	8c 00                	mov    WORD PTR [rax],es
  ef:	00 00                	add    BYTE PTR [rax],al
  f1:	28 0a                	sub    BYTE PTR [rdx],cl
  f3:	03 06                	add    eax,DWORD PTR [rsi]
  f5:	00 00                	add    BYTE PTR [rax],al
  f7:	04 00                	add    al,0x0
  f9:	01 8c 00 00 00 30 0a 	add    DWORD PTR [rax+rax*1+0xa300000],ecx
 100:	69 4d 00 00 04 01 01 	imul   ecx,DWORD PTR [rbp+0x0],0x1010400
 107:	8c 00                	mov    WORD PTR [rax],es
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	38 0a                	cmp    BYTE PTR [rdx],cl
 10d:	fe 02                	inc    BYTE PTR [rdx]
 10f:	00 00                	add    BYTE PTR [rax],al
 111:	04 02                	add    al,0x2
 113:	01 8c 00 00 00 40 0a 	add    DWORD PTR [rax+rax*1+0xa400000],ecx
 11a:	f1                   	icebp  
 11b:	25 00 00 04 04       	and    eax,0x4040000
 120:	01 8c 00 00 00 48 0a 	add    DWORD PTR [rax+rax*1+0xa480000],ecx
 127:	aa                   	stos   BYTE PTR es:[rdi],al
 128:	42 00 00             	rex.X add BYTE PTR [rax],al
 12b:	04 05                	add    al,0x5
 12d:	01 8c 00 00 00 50 0a 	add    DWORD PTR [rax+rax*1+0xa500000],ecx
 134:	24 10                	and    al,0x10
 136:	00 00                	add    BYTE PTR [rax],al
 138:	04 06                	add    al,0x6
 13a:	01 8c 00 00 00 58 0a 	add    DWORD PTR [rax+rax*1+0xa580000],ecx
 141:	6a 09                	push   0x9
 143:	00 00                	add    BYTE PTR [rax],al
 145:	04 08                	add    al,0x8
 147:	01 56 02             	add    DWORD PTR [rsi+0x2],edx
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	60                   	(bad)  
 14d:	0a 55 4a             	or     dl,BYTE PTR [rbp+0x4a]
 150:	00 00                	add    BYTE PTR [rax],al
 152:	04 0a                	add    al,0xa
 154:	01 5c 02 00          	add    DWORD PTR [rdx+rax*1+0x0],ebx
 158:	00 68 0a             	add    BYTE PTR [rax+0xa],ch
 15b:	ce                   	(bad)  
 15c:	16                   	(bad)  
 15d:	00 00                	add    BYTE PTR [rax],al
 15f:	04 0c                	add    al,0xc
 161:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 164:	00 00                	add    BYTE PTR [rax],al
 166:	70 0a                	jo     172 <_init-0x46e>
 168:	a3 08 00 00 04 10 01 	movabs ds:0x66011004000008,eax
 16f:	66 00 
 171:	00 00                	add    BYTE PTR [rax],al
 173:	74 0a                	je     17f <_init-0x461>
 175:	34 3d                	xor    al,0x3d
 177:	00 00                	add    BYTE PTR [rax],al
 179:	04 12                	add    al,0x12
 17b:	01 74 00 00          	add    DWORD PTR [rax+rax*1+0x0],esi
 17f:	00 78 0a             	add    BYTE PTR [rax+0xa],bh
 182:	6d                   	ins    DWORD PTR es:[rdi],dx
 183:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
 186:	04 16                	add    al,0x16
 188:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
 18b:	00 00                	add    BYTE PTR [rax],al
 18d:	80 0a 54             	or     BYTE PTR [rdx],0x54
 190:	18 00                	sbb    BYTE PTR [rax],al
 192:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
 195:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
 198:	00 00                	add    BYTE PTR [rax],al
 19a:	82                   	(bad)  
 19b:	0a 64 01 00          	or     ah,BYTE PTR [rcx+rax*1+0x0]
 19f:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
 1a2:	01 62 02             	add    DWORD PTR [rdx+0x2],esp
 1a5:	00 00                	add    BYTE PTR [rax],al
 1a7:	83 0a 15             	or     DWORD PTR [rdx],0x15
 1aa:	3c 00                	cmp    al,0x0
 1ac:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
 1af:	01 72 02             	add    DWORD PTR [rdx+0x2],esi
 1b2:	00 00                	add    BYTE PTR [rax],al
 1b4:	88 0a                	mov    BYTE PTR [rdx],cl
 1b6:	38 3d 00 00 04 25    	cmp    BYTE PTR [rip+0x25040000],bh        # 250401bc <_end+0x24e3f1a4>
 1bc:	01 7f 00             	add    DWORD PTR [rdi+0x0],edi
 1bf:	00 00                	add    BYTE PTR [rax],al
 1c1:	90                   	nop
 1c2:	0a 44 2b 00          	or     al,BYTE PTR [rbx+rbp*1+0x0]
 1c6:	00 04 2d 01 8a 00 00 	add    BYTE PTR [rbp*1+0x8a01],al
 1cd:	00 98 0a 4b 2b 00    	add    BYTE PTR [rax+0x2b4b0a],bl
 1d3:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
 1d6:	01 8a 00 00 00 a0    	add    DWORD PTR [rdx-0x60000000],ecx
 1dc:	0a 52 2b             	or     dl,BYTE PTR [rdx+0x2b]
 1df:	00 00                	add    BYTE PTR [rax],al
 1e1:	04 2f                	add    al,0x2f
 1e3:	01 8a 00 00 00 a8    	add    DWORD PTR [rdx-0x58000000],ecx
 1e9:	0a 59 2b             	or     bl,BYTE PTR [rcx+0x2b]
 1ec:	00 00                	add    BYTE PTR [rax],al
 1ee:	04 30                	add    al,0x30
 1f0:	01 8a 00 00 00 b0    	add    DWORD PTR [rdx-0x50000000],ecx
 1f6:	0a 60 2b             	or     ah,BYTE PTR [rax+0x2b]
 1f9:	00 00                	add    BYTE PTR [rax],al
 1fb:	04 32                	add    al,0x32
 1fd:	01 31                	add    DWORD PTR [rcx],esi
 1ff:	00 00                	add    BYTE PTR [rax],al
 201:	00 b8 0a 4a 1f 00    	add    BYTE PTR [rax+0x1f4a0a],bh
 207:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
 20a:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	c0 0a 60             	ror    BYTE PTR [rdx],0x60
 212:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 215:	04 35                	add    al,0x35
 217:	01 78 02             	add    DWORD PTR [rax+0x2],edi
 21a:	00 00                	add    BYTE PTR [rax],al
 21c:	c4                   	(bad)  
 21d:	00 0b                	add    BYTE PTR [rbx],cl
 21f:	0f 02 00             	lar    eax,WORD PTR [rax]
 222:	00 04 9a             	add    BYTE PTR [rdx+rbx*4],al
 225:	08 da                	or     dl,bl
 227:	1b 00                	sbb    eax,DWORD PTR [rax]
 229:	00 18                	add    BYTE PTR [rax],bl
 22b:	04 a0                	add    al,0xa0
 22d:	56                   	push   rsi
 22e:	02 00                	add    al,BYTE PTR [rax]
 230:	00 09                	add    BYTE PTR [rcx],cl
 232:	6b 1a 00             	imul   ebx,DWORD PTR [rdx],0x0
 235:	00 04 a1             	add    BYTE PTR [rcx+riz*4],al
 238:	56                   	push   rsi
 239:	02 00                	add    al,BYTE PTR [rax]
 23b:	00 00                	add    BYTE PTR [rax],al
 23d:	09 8c 41 00 00 04 a2 	or     DWORD PTR [rcx+rax*2-0x5dfc0000],ecx
 244:	5c                   	pop    rsp
 245:	02 00                	add    al,BYTE PTR [rax]
 247:	00 08                	add    BYTE PTR [rax],cl
 249:	09 49 0f             	or     DWORD PTR [rcx+0xf],ecx
 24c:	00 00                	add    BYTE PTR [rax],al
 24e:	04 a6                	add    al,0xa6
 250:	66 00 00             	data16 add BYTE PTR [rax],al
 253:	00 10                	add    BYTE PTR [rax],dl
 255:	00 06                	add    BYTE PTR [rsi],al
 257:	08 25 02 00 00 06    	or     BYTE PTR [rip+0x6000002],ah        # 600025f <_end+0x5dff247>
 25d:	08 9e 00 00 00 0c    	or     BYTE PTR [rsi+0xc000000],bl
 263:	92                   	xchg   edx,eax
 264:	00 00                	add    BYTE PTR [rax],al
 266:	00 72 02             	add    BYTE PTR [rdx+0x2],dh
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	0d 3c 00 00 00       	or     eax,0x3c
 270:	00 00                	add    BYTE PTR [rax],al
 272:	06                   	(bad)  
 273:	08 1e                	or     BYTE PTR [rsi],bl
 275:	02 00                	add    al,BYTE PTR [rax]
 277:	00 0c 92             	add    BYTE PTR [rdx+rdx*4],cl
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	00 88 02 00 00 0d    	add    BYTE PTR [rax+0xd000002],cl
 282:	3c 00                	cmp    al,0x0
 284:	00 00                	add    BYTE PTR [rax],al
 286:	13 00                	adc    eax,DWORD PTR [rax]
 288:	0e                   	(bad)  
 289:	c1 38 00             	sar    DWORD PTR [rax],0x0
 28c:	00 0f                	add    BYTE PTR [rdi],cl
 28e:	2a 25 00 00 04 3f    	sub    ah,BYTE PTR [rip+0x3f040000]        # 3f040294 <_end+0x3ee3f27c>
 294:	01 88 02 00 00 0f    	add    DWORD PTR [rax+0xf000002],ecx
 29a:	a1 25 00 00 04 40 01 	movabs eax,ds:0x288014004000025
 2a1:	88 02 
 2a3:	00 00                	add    BYTE PTR [rax],al
 2a5:	0f f9 1e             	psubw  mm3,QWORD PTR [rsi]
 2a8:	00 00                	add    BYTE PTR [rax],al
 2aa:	04 41                	add    al,0x41
 2ac:	01 88 02 00 00 06    	add    DWORD PTR [rax+0x6000002],ecx
 2b2:	08 99 00 00 00 07    	or     BYTE PTR [rcx+0x7000000],bl
 2b8:	b1 02                	mov    cl,0x2
 2ba:	00 00                	add    BYTE PTR [rax],al
 2bc:	10 86 22 00 00 05    	adc    BYTE PTR [rsi+0x5000022],al
 2c2:	87 5c 02 00          	xchg   DWORD PTR [rdx+rax*1+0x0],ebx
 2c6:	00 10                	add    BYTE PTR [rax],dl
 2c8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 2c9:	41 00 00             	add    BYTE PTR [r8],al
 2cc:	05 88 5c 02 00       	add    eax,0x25c88
 2d1:	00 10                	add    BYTE PTR [rax],dl
 2d3:	4d 18 00             	rex.WRB sbb BYTE PTR [r8],r8b
 2d6:	00 05 89 5c 02 00    	add    BYTE PTR [rip+0x25c89],al        # 25f65 <__FRAME_END__+0x25561>
 2dc:	00 10                	add    BYTE PTR [rax],dl
 2de:	4b 16                	rex.WXB (bad) 
 2e0:	00 00                	add    BYTE PTR [rax],al
 2e2:	06                   	(bad)  
 2e3:	1a 66 00             	sbb    ah,BYTE PTR [rsi+0x0]
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	0c b7                	or     al,0xb7
 2ea:	02 00                	add    al,BYTE PTR [rax]
 2ec:	00 f3                	add    bl,dh
 2ee:	02 00                	add    al,BYTE PTR [rax]
 2f0:	00 11                	add    BYTE PTR [rcx],dl
 2f2:	00 07                	add    BYTE PTR [rdi],al
 2f4:	e8 02 00 00 10       	call   100002fb <_end+0xfdff2e3>
 2f9:	36 15 00 00 06 1b    	ss adc eax,0x1b060000
 2ff:	f3 02 00             	repz add al,BYTE PTR [rax]
 302:	00 12                	add    BYTE PTR [rdx],dl
 304:	aa                   	stos   BYTE PTR es:[rdi],al
 305:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
 308:	01 03                	add    DWORD PTR [rbx],eax
 30a:	66 00 00             	data16 add BYTE PTR [rax],al
 30d:	00 6a 07             	add    BYTE PTR [rdx+0x7],ch
 310:	00 00                	add    BYTE PTR [rax],al
 312:	00 00                	add    BYTE PTR [rax],al
 314:	00 00                	add    BYTE PTR [rax],al
 316:	7d 00                	jge    318 <_init-0x2c8>
 318:	00 00                	add    BYTE PTR [rax],al
 31a:	00 00                	add    BYTE PTR [rax],al
 31c:	00 00                	add    BYTE PTR [rax],al
 31e:	01 9c 59 03 00 00 13 	add    DWORD PTR [rcx+rbx*2+0x13000003],ebx
 325:	9c                   	pushf  
 326:	07                   	(bad)  
 327:	00 00                	add    BYTE PTR [rax],al
 329:	01 03                	add    DWORD PTR [rbx],eax
 32b:	66 00 00             	data16 add BYTE PTR [rax],al
 32e:	00 02                	add    BYTE PTR [rdx],al
 330:	91                   	xchg   ecx,eax
 331:	5c                   	pop    rsp
 332:	13 e0                	adc    esp,eax
 334:	1c 00                	sbb    al,0x0
 336:	00 01                	add    BYTE PTR [rcx],al
 338:	03 59 03             	add    ebx,DWORD PTR [rcx+0x3]
 33b:	00 00                	add    BYTE PTR [rax],al
 33d:	02 91 50 14 61 00    	add    dl,BYTE PTR [rcx+0x611450]
 343:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3af <_init-0x231>
 349:	02 91 60 14 62 00    	add    dl,BYTE PTR [rcx+0x621460]
 34f:	01 05 66 00 00 00    	add    DWORD PTR [rip+0x66],eax        # 3bb <_init-0x225>
 355:	02 91 64 00 06 08    	add    dl,BYTE PTR [rcx+0x8060064]
 35b:	8c 00                	mov    WORD PTR [rax],es
 35d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <_end+0x2eb02fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	99                   	cdq    
  12:	42 17                	rex.X (bad) 
  14:	00 00                	add    BYTE PTR [rax],al
  16:	02 16                	add    dl,BYTE PTR [rsi]
  18:	00 03                	add    BYTE PTR [rbx],al
  1a:	0e                   	(bad)  
  1b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  1d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  1f:	49 13 00             	adc    rax,QWORD PTR [r8]
  22:	00 03                	add    BYTE PTR [rbx],al
  24:	24 00                	and    al,0x0
  26:	0b 0b                	or     ecx,DWORD PTR [rbx]
  28:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  2b:	0e                   	(bad)  
  2c:	00 00                	add    BYTE PTR [rax],al
  2e:	04 24                	add    al,0x24
  30:	00 0b                	add    BYTE PTR [rbx],cl
  32:	0b 3e                	or     edi,DWORD PTR [rsi]
  34:	0b 03                	or     eax,DWORD PTR [rbx]
  36:	08 00                	or     BYTE PTR [rax],al
  38:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b004d <_end+0xaeaf035>
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	06                   	(bad)  
  41:	0f 00 0b             	str    WORD PTR [rbx]
  44:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  47:	00 00                	add    BYTE PTR [rax],al
  49:	07                   	(bad)  
  4a:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	08 13                	or     BYTE PTR [rbx],dl
  52:	01 03                	add    DWORD PTR [rbx],eax
  54:	0e                   	(bad)  
  55:	0b 0b                	or     ecx,DWORD PTR [rbx]
  57:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  59:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  5b:	01 13                	add    DWORD PTR [rbx],edx
  5d:	00 00                	add    BYTE PTR [rax],al
  5f:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0365 <_end+0x39edf34d>
  65:	0b 3b                	or     edi,DWORD PTR [rbx]
  67:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  6a:	38 0b                	cmp    BYTE PTR [rbx],cl
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0374 <_end+0x39edf35c>
  74:	0b 3b                	or     edi,DWORD PTR [rbx]
  76:	05 49 13 38 0b       	add    eax,0xb381349
  7b:	00 00                	add    BYTE PTR [rax],al
  7d:	0b 16                	or     edx,DWORD PTR [rsi]
  7f:	00 03                	add    BYTE PTR [rbx],al
  81:	0e                   	(bad)  
  82:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  84:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  86:	00 00                	add    BYTE PTR [rax],al
  88:	0c 01                	or     al,0x1
  8a:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
  8d:	01 13                	add    DWORD PTR [rbx],edx
  8f:	00 00                	add    BYTE PTR [rax],al
  91:	0d 21 00 49 13       	or     eax,0x13490021
  96:	2f                   	(bad)  
  97:	0b 00                	or     eax,DWORD PTR [rax]
  99:	00 0e                	add    BYTE PTR [rsi],cl
  9b:	13 00                	adc    eax,DWORD PTR [rax]
  9d:	03 0e                	add    ecx,DWORD PTR [rsi]
  9f:	3c 19                	cmp    al,0x19
  a1:	00 00                	add    BYTE PTR [rax],al
  a3:	0f 34                	sysenter 
  a5:	00 03                	add    BYTE PTR [rbx],al
  a7:	0e                   	(bad)  
  a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  aa:	3b 05 49 13 3f 19    	cmp    eax,DWORD PTR [rip+0x193f1349]        # 193f13f9 <_end+0x191f03e1>
  b0:	3c 19                	cmp    al,0x19
  b2:	00 00                	add    BYTE PTR [rax],al
  b4:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
  b7:	03 0e                	add    ecx,DWORD PTR [rsi]
  b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  bb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  bd:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  c0:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c3:	00 00                	add    BYTE PTR [rax],al
  c5:	11 21                	adc    DWORD PTR [rcx],esp
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 12                	add    BYTE PTR [rdx],dl
  cb:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  ce:	19 03                	sbb    DWORD PTR [rbx],eax
  d0:	0e                   	(bad)  
  d1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  d3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  d5:	27                   	(bad)  
  d6:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  d9:	11 01                	adc    DWORD PTR [rcx],eax
  db:	12 07                	adc    al,BYTE PTR [rdi]
  dd:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
  e4:	00 00                	add    BYTE PTR [rax],al
  e6:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e03ec <_end+0x39edf3d4>
  ec:	0b 3b                	or     edi,DWORD PTR [rbx]
  ee:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  f1:	02 18                	add    bl,BYTE PTR [rax]
  f3:	00 00                	add    BYTE PTR [rax],al
  f5:	14 34                	adc    al,0x34
  f7:	00 03                	add    BYTE PTR [rbx],al
  f9:	08 3a                	or     BYTE PTR [rdx],bh
  fb:	0b 3b                	or     edi,DWORD PTR [rbx]
  fd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 100:	02 18                	add    bl,BYTE PTR [rax]
 102:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	2e 02 00             	add    al,BYTE PTR cs:[rax]
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 0d 02 00 00 01    	add    BYTE PTR [rip+0x1000002],cl        # 100000d <_end+0xdfeff5>
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0x54f>
  1e:	72 2f                	jb     4f <_init-0x591>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0x57e>
  2a:	36 5f                	ss pop rdi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[rdi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0x578>
  39:	37                   	(bad)  
  3a:	2f                   	(bad)  
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [rdi],ch
  44:	75 73                	jne    b9 <_init-0x527>
  46:	72 2f                	jb     77 <_init-0x569>
  48:	78 38                	js     82 <_init-0x55e>
  4a:	36 5f                	ss pop rdi
  4c:	36 34 2d             	ss xor al,0x2d
  4f:	6c                   	ins    BYTE PTR es:[rdi],dx
  50:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  57:	75 2f                	jne    88 <_init-0x558>
  59:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  60:	2f                   	(bad)  
  61:	62                   	(bad)  
  62:	69 74 73 00 2f 75 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7273752f
  69:	72 
  6a:	2f                   	(bad)  
  6b:	78 38                	js     a5 <_init-0x53b>
  6d:	36 5f                	ss pop rdi
  6f:	36 34 2d             	ss xor al,0x2d
  72:	6c                   	ins    BYTE PTR es:[rdi],dx
  73:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  7a:	75 2f                	jne    ab <_init-0x535>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	00 2f                	add    BYTE PTR [rdi],ch
  85:	75 73                	jne    fa <_init-0x4e6>
  87:	72 2f                	jb     b8 <_init-0x528>
  89:	78 38                	js     c3 <_init-0x51d>
  8b:	36 5f                	ss pop rdi
  8d:	36 34 2d             	ss xor al,0x2d
  90:	6c                   	ins    BYTE PTR es:[rdi],dx
  91:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  98:	75 2f                	jne    c9 <_init-0x517>
  9a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a1:	2f                   	(bad)  
  a2:	73 79                	jae    11d <_init-0x4c3>
  a4:	73 00                	jae    a6 <_init-0x53a>
  a6:	2f                   	(bad)  
  a7:	75 73                	jne    11c <_init-0x4c4>
  a9:	72 2f                	jb     da <_init-0x506>
  ab:	78 38                	js     e5 <_init-0x4fb>
  ad:	36 5f                	ss pop rdi
  af:	36 34 2d             	ss xor al,0x2d
  b2:	6c                   	ins    BYTE PTR es:[rdi],dx
  b3:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  ba:	75 2f                	jne    eb <_init-0x4f5>
  bc:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  c3:	2f                   	(bad)  
  c4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  c6:	75 00                	jne    c8 <_init-0x518>
  c8:	2f                   	(bad)  
  c9:	75 73                	jne    13e <_init-0x4a2>
  cb:	72 2f                	jb     fc <_init-0x4e4>
  cd:	78 38                	js     107 <_init-0x4d9>
  cf:	36 5f                	ss pop rdi
  d1:	36 34 2d             	ss xor al,0x2d
  d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  d5:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  dc:	75 2f                	jne    10d <_init-0x4d3>
  de:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e5:	2f                   	(bad)  
  e6:	62                   	(bad)  
  e7:	69 74 73 2f 74 79 70 	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x65707974
  ee:	65 
  ef:	73 00                	jae    f1 <_init-0x4ef>
  f1:	00 69 66             	add    BYTE PTR [rcx+0x66],ch
  f4:	5f                   	pop    rdi
  f5:	74 68                	je     15f <_init-0x481>
  f7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  f9:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
  fc:	00 00                	add    BYTE PTR [rax],al
  fe:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 101:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
 108:	01 
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	74 79                	je     186 <_init-0x45a>
 10d:	70 65                	jo     174 <_init-0x46c>
 10f:	73 2e                	jae    13f <_init-0x4a1>
 111:	68 00 02 00 00       	push   0x200
 116:	6c                   	ins    BYTE PTR es:[rdi],dx
 117:	69 62 69 6f 2e 68 00 	imul   esp,DWORD PTR [rdx+0x69],0x682e6f
 11e:	02 00                	add    al,BYTE PTR [rax]
 120:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 123:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[rdi+0x2e],0x30068
 12a:	00 
 12b:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
 12e:	73 5f                	jae    18f <_init-0x451>
 130:	65 72 72             	gs jb  1a5 <_init-0x43b>
 133:	6c                   	ins    BYTE PTR es:[rdi],dx
 134:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [rbx+0x74],0x200682e
 13b:	00 00                	add    BYTE PTR [rax],al
 13d:	73 74                	jae    1b3 <_init-0x42d>
 13f:	64 63 2d 70 72 65 64 	movsxd ebp,DWORD PTR fs:[rip+0x64657270]        # 646573b6 <_end+0x6445639e>
 146:	65 66 2e 68 00 03    	gs cs pushw 0x300
 14c:	00 00                	add    BYTE PTR [rax],al
 14e:	6c                   	ins    BYTE PTR es:[rdi],dx
 14f:	69 62 63 2d 68 65 61 	imul   esp,DWORD PTR [rdx+0x63],0x6165682d
 156:	64 65 72 2d          	fs gs jb 187 <_init-0x459>
 15a:	73 74                	jae    1d0 <_init-0x410>
 15c:	61                   	(bad)  
 15d:	72 74                	jb     1d3 <_init-0x40d>
 15f:	2e 68 00 02 00 00    	cs push 0x200
 165:	66 65 61             	data16 gs (bad) 
 168:	74 75                	je     1df <_init-0x401>
 16a:	72 65                	jb     1d1 <_init-0x40f>
 16c:	73 2e                	jae    19c <_init-0x444>
 16e:	68 00 03 00 00       	push   0x300
 173:	63 64 65 66          	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
 177:	73 2e                	jae    1a7 <_init-0x439>
 179:	68 00 04 00 00       	push   0x400
 17e:	77 6f                	ja     1ef <_init-0x3f1>
 180:	72 64                	jb     1e6 <_init-0x3fa>
 182:	73 69                	jae    1ed <_init-0x3f3>
 184:	7a 65                	jp     1eb <_init-0x3f5>
 186:	2e 68 00 02 00 00    	cs push 0x200
 18c:	6c                   	ins    BYTE PTR es:[rdi],dx
 18d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 18e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 18f:	67 2d 64 6f 75 62    	addr32 sub eax,0x62756f64
 195:	6c                   	ins    BYTE PTR es:[rdi],dx
 196:	65 2e 68 00 02 00 00 	gs cs push 0x200
 19d:	73 74                	jae    213 <_init-0x3cd>
 19f:	75 62                	jne    203 <_init-0x3dd>
 1a1:	73 2e                	jae    1d1 <_init-0x40f>
 1a3:	68 00 05 00 00       	push   0x500
 1a8:	73 74                	jae    21e <_init-0x3c2>
 1aa:	75 62                	jne    20e <_init-0x3d2>
 1ac:	73 2d                	jae    1db <_init-0x405>
 1ae:	36 34 2e             	ss xor al,0x2e
 1b1:	68 00 05 00 00       	push   0x500
 1b6:	74 79                	je     231 <_init-0x3af>
 1b8:	70 65                	jo     21f <_init-0x3c1>
 1ba:	73 69                	jae    225 <_init-0x3bb>
 1bc:	7a 65                	jp     223 <_init-0x3bd>
 1be:	73 2e                	jae    1ee <_init-0x3f2>
 1c0:	68 00 02 00 00       	push   0x200
 1c5:	5f                   	pop    rdi
 1c6:	5f                   	pop    rdi
 1c7:	46                   	rex.RX
 1c8:	49                   	rex.WB
 1c9:	4c                   	rex.WR
 1ca:	45                   	rex.RB
 1cb:	2e 68 00 06 00 00    	cs push 0x600
 1d1:	46                   	rex.RX
 1d2:	49                   	rex.WB
 1d3:	4c                   	rex.WR
 1d4:	45                   	rex.RB
 1d5:	2e 68 00 06 00 00    	cs push 0x600
 1db:	5f                   	pop    rdi
 1dc:	47 5f                	rex.RXB pop r15
 1de:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 1e1:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 1e7:	02 00                	add    al,BYTE PTR [rax]
 1e9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 1ec:	6d                   	ins    DWORD PTR es:[rdi],dx
 1ed:	62 73 74 61 74       	(bad)  {k1}
 1f2:	65 5f                	gs pop rdi
 1f4:	74 2e                	je     224 <_init-0x3bc>
 1f6:	68 00 06 00 00       	push   0x600
 1fb:	73 74                	jae    271 <_init-0x36f>
 1fd:	64 61                	fs (bad) 
 1ff:	72 67                	jb     268 <_init-0x378>
 201:	2e 68 00 01 00 00    	cs push 0x100
 207:	73 74                	jae    27d <_init-0x363>
 209:	64 69 6f 5f 6c 69 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x2e6d696c
 210:	2e 
 211:	68 00 02 00 00       	push   0x200
 216:	00 00                	add    BYTE PTR [rax],al
 218:	09 02                	or     DWORD PTR [rdx],eax
 21a:	6a 07                	push   0x7
 21c:	00 00                	add    BYTE PTR [rax],al
 21e:	00 00                	add    BYTE PTR [rax],al
 220:	00 00                	add    BYTE PTR [rax],al
 222:	14 e4                	adc    al,0xe4
 224:	e8 76 08 13 08       	call   8130a9f <_end+0x7f2fa87>
 229:	76 83                	jbe    1ae <_init-0x432>
 22b:	08 15 02 16 00 01    	or     BYTE PTR [rip+0x1001602],dl        # 1001833 <_end+0xe0081b>
 231:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	49                   	rex.WB
       2:	4f 5f                	rex.WRXB pop r15
       4:	44                   	rex.R
       5:	45                   	rex.RB
       6:	43 20 30             	rex.XB and BYTE PTR [r8],sil
       9:	32 30                	xor    dh,BYTE PTR [rax]
       b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
       e:	53                   	push   rbx
       f:	49                   	rex.WB
      10:	47 5f                	rex.RXB pop r15
      12:	41 54                	push   r12
      14:	4f                   	rex.WRXB
      15:	4d                   	rex.WRB
      16:	49                   	rex.WB
      17:	43 5f                	rex.XB pop r15
      19:	4d                   	rex.WRB
      1a:	41 58                	pop    r8
      1c:	5f                   	pop    rdi
      1d:	5f                   	pop    rdi
      1e:	20 30                	and    BYTE PTR [rax],dh
      20:	78 37                	js     59 <_init-0x587>
      22:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
      29:	00 5f 5f 
      2c:	46                   	rex.RX
      2d:	4c 54                	rex.WR push rsp
      2f:	36 34 5f             	ss xor al,0x5f
      32:	48                   	rex.W
      33:	41 53                	push   r11
      35:	5f                   	pop    rdi
      36:	51                   	push   rcx
      37:	55                   	push   rbp
      38:	49                   	rex.WB
      39:	45 54                	rex.RB push r12
      3b:	5f                   	pop    rdi
      3c:	4e                   	rex.WRX
      3d:	41                   	rex.B
      3e:	4e 5f                	rex.WRX pop rdi
      40:	5f                   	pop    rdi
      41:	20 31                	and    BYTE PTR [rcx],dh
      43:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
      46:	49 5a                	rex.WB pop r10
      48:	45 5f                	rex.RB pop r15
      4a:	54                   	push   rsp
      4b:	5f                   	pop    rdi
      4c:	44                   	rex.R
      4d:	45                   	rex.RB
      4e:	46                   	rex.RX
      4f:	49                   	rex.WB
      50:	4e                   	rex.WRX
      51:	45                   	rex.RB
      52:	44 20 00             	and    BYTE PTR [rax],r8b
      55:	5f                   	pop    rdi
      56:	49                   	rex.WB
      57:	4f 5f                	rex.WRXB pop r15
      59:	49 53                	rex.WB push r11
      5b:	5f                   	pop    rdi
      5c:	46                   	rex.RX
      5d:	49                   	rex.WB
      5e:	4c                   	rex.WR
      5f:	45                   	rex.RB
      60:	42 55                	rex.X push rbp
      62:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
      65:	78 32                	js     99 <_init-0x547>
      67:	30 30                	xor    BYTE PTR [rax],dh
      69:	30 00                	xor    BYTE PTR [rax],al
      6b:	5f                   	pop    rdi
      6c:	5f                   	pop    rdi
      6d:	44                   	rex.R
      6e:	45                   	rex.RB
      6f:	43                   	rex.XB
      70:	36 34 5f             	ss xor al,0x5f
      73:	53                   	push   rbx
      74:	55                   	push   rbp
      75:	42                   	rex.X
      76:	4e                   	rex.WRX
      77:	4f 52                	rex.WRXB push r10
      79:	4d                   	rex.WRB
      7a:	41                   	rex.B
      7b:	4c 5f                	rex.WR pop rdi
      7d:	4d                   	rex.WRB
      7e:	49                   	rex.WB
      7f:	4e 5f                	rex.WRX pop rdi
      81:	5f                   	pop    rdi
      82:	20 30                	and    BYTE PTR [rax],dh
      84:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
      87:	30 30                	xor    BYTE PTR [rax],dh
      89:	30 30                	xor    BYTE PTR [rax],dh
      8b:	30 30                	xor    BYTE PTR [rax],dh
      8d:	30 30                	xor    BYTE PTR [rax],dh
      8f:	30 30                	xor    BYTE PTR [rax],dh
      91:	30 30                	xor    BYTE PTR [rax],dh
      93:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
      96:	33 38                	xor    edi,DWORD PTR [rax]
      98:	33 44 44 00          	xor    eax,DWORD PTR [rsp+rax*2+0x0]
      9c:	5f                   	pop    rdi
      9d:	5f                   	pop    rdi
      9e:	46                   	rex.RX
      9f:	4c 54                	rex.WR push rsp
      a1:	33 32                	xor    esi,DWORD PTR [rdx]
      a3:	5f                   	pop    rdi
      a4:	48                   	rex.W
      a5:	41 53                	push   r11
      a7:	5f                   	pop    rdi
      a8:	49                   	rex.WB
      a9:	4e                   	rex.WRX
      aa:	46                   	rex.RX
      ab:	49                   	rex.WB
      ac:	4e                   	rex.WRX
      ad:	49 54                	rex.WB push r12
      af:	59                   	pop    rcx
      b0:	5f                   	pop    rdi
      b1:	5f                   	pop    rdi
      b2:	20 31                	and    BYTE PTR [rcx],dh
      b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
      b7:	46                   	rex.RX
      b8:	4c 54                	rex.WR push rsp
      ba:	36 34 5f             	ss xor al,0x5f
      bd:	4d                   	rex.WRB
      be:	41 58                	pop    r8
      c0:	5f                   	pop    rdi
      c1:	45 58                	rex.RB pop r8
      c3:	50                   	push   rax
      c4:	5f                   	pop    rdi
      c5:	5f                   	pop    rdi
      c6:	20 31                	and    BYTE PTR [rcx],dh
      c8:	30 32                	xor    BYTE PTR [rdx],dh
      ca:	34 00                	xor    al,0x0
      cc:	5f                   	pop    rdi
      cd:	5f                   	pop    rdi
      ce:	46                   	rex.RX
      cf:	4c 54                	rex.WR push rsp
      d1:	5f                   	pop    rdi
      d2:	4d                   	rex.WRB
      d3:	49                   	rex.WB
      d4:	4e 5f                	rex.WRX pop rdi
      d6:	31 30                	xor    DWORD PTR [rax],esi
      d8:	5f                   	pop    rdi
      d9:	45 58                	rex.RB pop r8
      db:	50                   	push   rax
      dc:	5f                   	pop    rdi
      dd:	5f                   	pop    rdi
      de:	20 28                	and    BYTE PTR [rax],ch
      e0:	2d 33 37 29 00       	sub    eax,0x293733
      e5:	5f                   	pop    rdi
      e6:	5f                   	pop    rdi
      e7:	53                   	push   rbx
      e8:	59                   	pop    rcx
      e9:	53                   	push   rbx
      ea:	43                   	rex.XB
      eb:	41                   	rex.B
      ec:	4c                   	rex.WR
      ed:	4c 5f                	rex.WR pop rdi
      ef:	55                   	push   rbp
      f0:	4c                   	rex.WR
      f1:	4f                   	rex.WRXB
      f2:	4e                   	rex.WRX
      f3:	47 5f                	rex.RXB pop r15
      f5:	54                   	push   rsp
      f6:	59                   	pop    rcx
      f7:	50                   	push   rax
      f8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
      fc:	55                   	push   rbp
      fd:	4c                   	rex.WR
      fe:	4f                   	rex.WRXB
      ff:	4e                   	rex.WRX
     100:	47 57                	rex.RXB push r15
     102:	4f 52                	rex.WRXB push r10
     104:	44 5f                	rex.R pop rdi
     106:	54                   	push   rsp
     107:	59                   	pop    rcx
     108:	50                   	push   rax
     109:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     10d:	46                   	rex.RX
     10e:	4c 54                	rex.WR push rsp
     110:	36 34 58             	ss xor al,0x58
     113:	5f                   	pop    rdi
     114:	45 50                	rex.RB push r8
     116:	53                   	push   rbx
     117:	49                   	rex.WB
     118:	4c                   	rex.WR
     119:	4f                   	rex.WRXB
     11a:	4e 5f                	rex.WRX pop rdi
     11c:	5f                   	pop    rdi
     11d:	20 31                	and    BYTE PTR [rcx],dh
     11f:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
     122:	34 32                	xor    al,0x32
     124:	30 32                	xor    BYTE PTR [rdx],dh
     126:	31 37                	xor    DWORD PTR [rdi],esi
     128:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     12b:	35 35 30 34 34       	xor    eax,0x34343035
     130:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
     133:	30 37                	xor    BYTE PTR [rdi],dh
     135:	34 35                	xor    al,0x35
     137:	32 38                	xor    bh,BYTE PTR [rax]
     139:	30 30                	xor    BYTE PTR [rax],dh
     13b:	38 36                	cmp    BYTE PTR [rsi],dh
     13d:	39 39                	cmp    DWORD PTR [rcx],edi
     13f:	34 31                	xor    al,0x31
     141:	37                   	(bad)  
     142:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
     145:	31 39                	xor    DWORD PTR [rcx],edi
     147:	46                   	rex.RX
     148:	36 34 78             	ss xor al,0x78
     14b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     14e:	46                   	rex.RX
     14f:	4c 54                	rex.WR push rsp
     151:	33 32                	xor    esi,DWORD PTR [rdx]
     153:	58                   	pop    rax
     154:	5f                   	pop    rdi
     155:	4d                   	rex.WRB
     156:	41 58                	pop    r8
     158:	5f                   	pop    rdi
     159:	45 58                	rex.RB pop r8
     15b:	50                   	push   rax
     15c:	5f                   	pop    rdi
     15d:	5f                   	pop    rdi
     15e:	20 31                	and    BYTE PTR [rcx],dh
     160:	30 32                	xor    BYTE PTR [rdx],dh
     162:	34 00                	xor    al,0x0
     164:	5f                   	pop    rdi
     165:	73 68                	jae    1cf <_init-0x411>
     167:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     168:	72 74                	jb     1de <_init-0x402>
     16a:	62                   	(bad)  
     16b:	75 66                	jne    1d3 <_init-0x40d>
     16d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     170:	47                   	rex.RXB
     171:	43                   	rex.XB
     172:	43 5f                	rex.XB pop r15
     174:	41 54                	push   r12
     176:	4f                   	rex.WRXB
     177:	4d                   	rex.WRB
     178:	49                   	rex.WB
     179:	43 5f                	rex.XB pop r15
     17b:	54                   	push   rsp
     17c:	45 53                	rex.RB push r11
     17e:	54                   	push   rsp
     17f:	5f                   	pop    rdi
     180:	41                   	rex.B
     181:	4e                   	rex.WRX
     182:	44 5f                	rex.R pop rdi
     184:	53                   	push   rbx
     185:	45 54                	rex.RB push r12
     187:	5f                   	pop    rdi
     188:	54                   	push   rsp
     189:	52                   	push   rdx
     18a:	55                   	push   rbp
     18b:	45 56                	rex.RB push r14
     18d:	41                   	rex.B
     18e:	4c 20 31             	rex.WR and BYTE PTR [rcx],r14b
     191:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     194:	4f                   	rex.WRXB
     195:	46                   	rex.RX
     196:	46 5f                	rex.RX pop rdi
     198:	54                   	push   rsp
     199:	5f                   	pop    rdi
     19a:	4d                   	rex.WRB
     19b:	41 54                	push   r12
     19d:	43                   	rex.XB
     19e:	48                   	rex.W
     19f:	45 53                	rex.RB push r11
     1a1:	5f                   	pop    rdi
     1a2:	4f                   	rex.WRXB
     1a3:	46                   	rex.RX
     1a4:	46                   	rex.RX
     1a5:	36 34 5f             	ss xor al,0x5f
     1a8:	54                   	push   rsp
     1a9:	20 31                	and    BYTE PTR [rcx],dh
     1ab:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1ae:	44                   	rex.R
     1af:	45                   	rex.RB
     1b0:	43                   	rex.XB
     1b1:	36 34 5f             	ss xor al,0x5f
     1b4:	45 50                	rex.RB push r8
     1b6:	53                   	push   rbx
     1b7:	49                   	rex.WB
     1b8:	4c                   	rex.WR
     1b9:	4f                   	rex.WRXB
     1ba:	4e 5f                	rex.WRX pop rdi
     1bc:	5f                   	pop    rdi
     1bd:	20 31                	and    BYTE PTR [rcx],dh
     1bf:	45 2d 31 35 44 44    	rex.RB sub eax,0x44443531
     1c5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     1c8:	44                   	rex.R
     1c9:	42                   	rex.X
     1ca:	4c 5f                	rex.WR pop rdi
     1cc:	44                   	rex.R
     1cd:	45                   	rex.RB
     1ce:	4e                   	rex.WRX
     1cf:	4f 52                	rex.WRXB push r10
     1d1:	4d 5f                	rex.WRB pop r15
     1d3:	4d                   	rex.WRB
     1d4:	49                   	rex.WB
     1d5:	4e 5f                	rex.WRX pop rdi
     1d7:	5f                   	pop    rdi
     1d8:	20 28                	and    BYTE PTR [rax],ch
     1da:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
     1de:	62                   	(bad)  
     1df:	6c                   	ins    BYTE PTR es:[rdi],dx
     1e0:	65 29 34 2e          	sub    DWORD PTR gs:[rsi+rbp*1],esi
     1e4:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
     1e7:	36 35 36 34 35 38    	ss xor eax,0x38353436
     1ed:	34 31                	xor    al,0x31
     1ef:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
     1f2:	35 34 34 31 37       	xor    eax,0x37313434
     1f7:	36 35 36 38 37 39    	ss xor eax,0x39373836
     1fd:	32 38                	xor    bh,BYTE PTR [rax]
     1ff:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
     202:	32 31                	xor    dh,BYTE PTR [rcx]
     204:	33 37                	xor    esi,DWORD PTR [rdi]
     206:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
     209:	33 32                	xor    esi,DWORD PTR [rdx]
     20b:	34 4c                	xor    al,0x4c
     20d:	29 00                	sub    DWORD PTR [rax],eax
     20f:	5f                   	pop    rdi
     210:	49                   	rex.WB
     211:	4f 5f                	rex.WRXB pop r15
     213:	6c                   	ins    BYTE PTR es:[rdi],dx
     214:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     215:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     218:	74 00                	je     21a <_init-0x3c6>
     21a:	5f                   	pop    rdi
     21b:	5f                   	pop    rdi
     21c:	49                   	rex.WB
     21d:	4e 54                	rex.WRX push rsp
     21f:	50                   	push   rax
     220:	54                   	push   rsp
     221:	52                   	push   rdx
     222:	5f                   	pop    rdi
     223:	4d                   	rex.WRB
     224:	41 58                	pop    r8
     226:	5f                   	pop    rdi
     227:	5f                   	pop    rdi
     228:	20 30                	and    BYTE PTR [rax],dh
     22a:	78 37                	js     263 <_init-0x37d>
     22c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     233:	66 66 66 66 66 66 66 
     23a:	66 4c 00 5f 47       	data16 rex.WR add BYTE PTR [rdi+0x47],r11b
     23f:	5f                   	pop    rdi
     240:	48                   	rex.W
     241:	41 56                	push   r14
     243:	45 5f                	rex.RB pop r15
     245:	53                   	push   rbx
     246:	54                   	push   rsp
     247:	5f                   	pop    rdi
     248:	42                   	rex.X
     249:	4c                   	rex.WR
     24a:	4b 53                	rex.WXB push r11
     24c:	49 5a                	rex.WB pop r10
     24e:	45 20 64 65 66       	and    BYTE PTR [r13+riz*2+0x66],r12b
     253:	69 6e 65 64 20 28 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f282064
     25a:	53                   	push   rbx
     25b:	54                   	push   rsp
     25c:	41 54                	push   r12
     25e:	42 55                	rex.X push rbp
     260:	46 5f                	rex.RX pop rdi
     262:	53                   	push   rbx
     263:	54                   	push   rsp
     264:	5f                   	pop    rdi
     265:	42                   	rex.X
     266:	4c                   	rex.WR
     267:	4b 53                	rex.WXB push r11
     269:	49 5a                	rex.WB pop r10
     26b:	45 29 00             	sub    DWORD PTR [r8],r8d
     26e:	5f                   	pop    rdi
     26f:	5f                   	pop    rdi
     270:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     272:	65 78 61             	gs js  2d6 <_init-0x30a>
     275:	72 72                	jb     2e9 <_init-0x2f7>
     277:	20 5b 5d             	and    BYTE PTR [rbx+0x5d],bl
     27a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     27d:	46                   	rex.RX
     27e:	4c 54                	rex.WR push rsp
     280:	33 32                	xor    esi,DWORD PTR [rdx]
     282:	5f                   	pop    rdi
     283:	4d                   	rex.WRB
     284:	41                   	rex.B
     285:	4e 54                	rex.WRX push rsp
     287:	5f                   	pop    rdi
     288:	44                   	rex.R
     289:	49                   	rex.WB
     28a:	47 5f                	rex.RXB pop r15
     28c:	5f                   	pop    rdi
     28d:	20 32                	and    BYTE PTR [rdx],dh
     28f:	34 00                	xor    al,0x0
     291:	5f                   	pop    rdi
     292:	5f                   	pop    rdi
     293:	47                   	rex.RXB
     294:	43                   	rex.XB
     295:	43 5f                	rex.XB pop r15
     297:	48                   	rex.W
     298:	41 56                	push   r14
     29a:	45 5f                	rex.RB pop r15
     29c:	53                   	push   rbx
     29d:	59                   	pop    rcx
     29e:	4e                   	rex.WRX
     29f:	43 5f                	rex.XB pop r15
     2a1:	43                   	rex.XB
     2a2:	4f                   	rex.WRXB
     2a3:	4d 50                	rex.WRB push r8
     2a5:	41 52                	push   r10
     2a7:	45 5f                	rex.RB pop r15
     2a9:	41                   	rex.B
     2aa:	4e                   	rex.WRX
     2ab:	44 5f                	rex.R pop rdi
     2ad:	53                   	push   rbx
     2ae:	57                   	push   rdi
     2af:	41 50                	push   r8
     2b1:	5f                   	pop    rdi
     2b2:	38 20                	cmp    BYTE PTR [rax],ah
     2b4:	31 00                	xor    DWORD PTR [rax],eax
     2b6:	5f                   	pop    rdi
     2b7:	49                   	rex.WB
     2b8:	4f 53                	rex.WRXB push r11
     2ba:	5f                   	pop    rdi
     2bb:	42                   	rex.X
     2bc:	49                   	rex.WB
     2bd:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
     2c0:	32 38                	xor    bh,BYTE PTR [rax]
     2c2:	00 46 49             	add    BYTE PTR [rsi+0x49],al
     2c5:	4c                   	rex.WR
     2c6:	45                   	rex.RB
     2c7:	4e                   	rex.WRX
     2c8:	41                   	rex.B
     2c9:	4d                   	rex.WRB
     2ca:	45 5f                	rex.RB pop r15
     2cc:	4d                   	rex.WRB
     2cd:	41 58                	pop    r8
     2cf:	20 34 30             	and    BYTE PTR [rax+rsi*1],dh
     2d2:	39 36                	cmp    DWORD PTR [rsi],esi
     2d4:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     2d7:	54                   	push   rsp
     2d8:	44                   	rex.R
     2d9:	43 5f                	rex.XB pop r15
     2db:	50                   	push   rax
     2dc:	52                   	push   rdx
     2dd:	45                   	rex.RB
     2de:	44                   	rex.R
     2df:	45                   	rex.RB
     2e0:	46 5f                	rex.RX pop rdi
     2e2:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     2e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2e8:	55                   	push   rbp
     2e9:	53                   	push   rbx
     2ea:	45 5f                	rex.RB pop r15
     2ec:	49 53                	rex.WB push r11
     2ee:	4f                   	rex.WRXB
     2ef:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
     2f2:	20 31                	and    BYTE PTR [rcx],dh
     2f4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     2f7:	4f                   	rex.WRXB
     2f8:	46                   	rex.RX
     2f9:	42                   	rex.X
     2fa:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     2fd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     300:	4f 5f                	rex.WRXB pop r15
     302:	62                   	(bad)  
     303:	75 66                	jne    36b <_init-0x275>
     305:	5f                   	pop    rdi
     306:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     308:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     30c:	49                   	rex.WB
     30d:	4e 54                	rex.WRX push rsp
     30f:	5f                   	pop    rdi
     310:	46                   	rex.RX
     311:	41 53                	push   r11
     313:	54                   	push   rsp
     314:	36 34 5f             	ss xor al,0x5f
     317:	57                   	push   rdi
     318:	49                   	rex.WB
     319:	44 54                	rex.R push rsp
     31b:	48 5f                	rex.W pop rdi
     31d:	5f                   	pop    rdi
     31e:	20 36                	and    BYTE PTR [rsi],dh
     320:	34 00                	xor    al,0x0
     322:	5f                   	pop    rdi
     323:	49                   	rex.WB
     324:	4f 5f                	rex.WRXB pop r15
     326:	45                   	rex.RB
     327:	4f                   	rex.WRXB
     328:	46 5f                	rex.RX pop rdi
     32a:	53                   	push   rbx
     32b:	45                   	rex.RB
     32c:	45                   	rex.RB
     32d:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
     330:	78 31                	js     363 <_init-0x27d>
     332:	30 00                	xor    BYTE PTR [rax],al
     334:	53                   	push   rbx
     335:	45                   	rex.RB
     336:	45                   	rex.RB
     337:	4b 5f                	rex.WXB pop r15
     339:	43 55                	rex.XB push r13
     33b:	52                   	push   rdx
     33c:	20 31                	and    BYTE PTR [rcx],dh
     33e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     341:	46                   	rex.RX
     342:	4c 54                	rex.WR push rsp
     344:	33 32                	xor    esi,DWORD PTR [rdx]
     346:	58                   	pop    rax
     347:	5f                   	pop    rdi
     348:	44                   	rex.R
     349:	45                   	rex.RB
     34a:	43                   	rex.XB
     34b:	49                   	rex.WB
     34c:	4d                   	rex.WRB
     34d:	41                   	rex.B
     34e:	4c 5f                	rex.WR pop rdi
     350:	44                   	rex.R
     351:	49                   	rex.WB
     352:	47 5f                	rex.RXB pop r15
     354:	5f                   	pop    rdi
     355:	20 31                	and    BYTE PTR [rcx],dh
     357:	37                   	(bad)  
     358:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     35b:	6b 38 5f             	imul   edi,DWORD PTR [rax],0x5f
     35e:	5f                   	pop    rdi
     35f:	20 31                	and    BYTE PTR [rcx],dh
     361:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     364:	44                   	rex.R
     365:	42                   	rex.X
     366:	4c 5f                	rex.WR pop rdi
     368:	4d                   	rex.WRB
     369:	49                   	rex.WB
     36a:	4e 5f                	rex.WRX pop rdi
     36c:	45 58                	rex.RB pop r8
     36e:	50                   	push   rax
     36f:	5f                   	pop    rdi
     370:	5f                   	pop    rdi
     371:	20 28                	and    BYTE PTR [rax],ch
     373:	2d 31 30 32 31       	sub    eax,0x31323031
     378:	29 00                	sub    DWORD PTR [rax],eax
     37a:	5f                   	pop    rdi
     37b:	5f                   	pop    rdi
     37c:	49                   	rex.WB
     37d:	4e 54                	rex.WRX push rsp
     37f:	5f                   	pop    rdi
     380:	46                   	rex.RX
     381:	41 53                	push   r11
     383:	54                   	push   rsp
     384:	36 34 5f             	ss xor al,0x5f
     387:	4d                   	rex.WRB
     388:	41 58                	pop    r8
     38a:	5f                   	pop    rdi
     38b:	5f                   	pop    rdi
     38c:	20 30                	and    BYTE PTR [rax],dh
     38e:	78 37                	js     3c7 <_init-0x219>
     390:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     397:	66 66 66 66 66 66 66 
     39e:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     3a3:	68 61 73 5f 69       	push   0x695f7361
     3a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3a9:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     3ad:	65 5f                	gs pop rdi
     3af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3b0:	65 78 74             	gs js  427 <_init-0x1b9>
     3b3:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     3b6:	52                   	push   rdx
     3b7:	29 20                	sub    DWORD PTR [rax],esp
     3b9:	5f                   	pop    rdi
     3ba:	5f                   	pop    rdi
     3bb:	68 61 73 5f 69       	push   0x695f7361
     3c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3c1:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
     3c5:	65 5f                	gs pop rdi
     3c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3c8:	65 78 74             	gs js  43f <_init-0x1a1>
     3cb:	5f                   	pop    rdi
     3cc:	5f                   	pop    rdi
     3cd:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
     3d0:	52                   	push   rdx
     3d1:	29 00                	sub    DWORD PTR [rax],eax
     3d3:	5f                   	pop    rdi
     3d4:	49                   	rex.WB
     3d5:	4f 5f                	rex.WRXB pop r15
     3d7:	52                   	push   rdx
     3d8:	49                   	rex.WB
     3d9:	47                   	rex.RXB
     3da:	48 54                	rex.W push rsp
     3dc:	20 30                	and    BYTE PTR [rax],dh
     3de:	34 00                	xor    al,0x0
     3e0:	5f                   	pop    rdi
     3e1:	49                   	rex.WB
     3e2:	4f 5f                	rex.WRXB pop r15
     3e4:	55                   	push   rbp
     3e5:	53                   	push   rbx
     3e6:	45 52                	rex.RB push r10
     3e8:	5f                   	pop    rdi
     3e9:	42 55                	rex.X push rbp
     3eb:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
     3ee:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     3f1:	59                   	pop    rcx
     3f2:	53                   	push   rbx
     3f3:	5f                   	pop    rdi
     3f4:	43                   	rex.XB
     3f5:	44                   	rex.R
     3f6:	45                   	rex.RB
     3f7:	46 53                	rex.RX push rbx
     3f9:	5f                   	pop    rdi
     3fa:	48 20 31             	rex.W and BYTE PTR [rcx],sil
     3fd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     400:	46                   	rex.RX
     401:	4c 54                	rex.WR push rsp
     403:	33 32                	xor    esi,DWORD PTR [rdx]
     405:	58                   	pop    rax
     406:	5f                   	pop    rdi
     407:	4d                   	rex.WRB
     408:	41 58                	pop    r8
     40a:	5f                   	pop    rdi
     40b:	5f                   	pop    rdi
     40c:	20 31                	and    BYTE PTR [rcx],dh
     40e:	2e 37                	cs (bad) 
     410:	39 37                	cmp    DWORD PTR [rdi],esi
     412:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
     415:	31 33                	xor    DWORD PTR [rbx],esi
     417:	34 38                	xor    al,0x38
     419:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
     41c:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31383459 <_end+0x31182441>
     422:	34 35                	xor    al,0x35
     424:	32 37                	xor    dh,BYTE PTR [rdi]
     426:	34 32                	xor    al,0x32
     428:	33 37                	xor    esi,DWORD PTR [rdi]
     42a:	33 31                	xor    esi,DWORD PTR [rcx]
     42c:	37                   	(bad)  
     42d:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
     430:	35 37 65 2b 33       	xor    eax,0x332b6537
     435:	30 38                	xor    BYTE PTR [rax],bh
     437:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
     43a:	78 00                	js     43c <_init-0x1a4>
     43c:	5f                   	pop    rdi
     43d:	5f                   	pop    rdi
     43e:	67 6c                	ins    BYTE PTR es:[edi],dx
     440:	69 62 63 5f 75 6e 6c 	imul   esp,DWORD PTR [rdx+0x63],0x6c6e755f
     447:	69 6b 65 6c 79 28 63 	imul   ebp,DWORD PTR [rbx+0x65],0x6328796c
     44e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     44f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     450:	64 29 20             	sub    DWORD PTR fs:[rax],esp
     453:	5f                   	pop    rdi
     454:	5f                   	pop    rdi
     455:	62                   	(bad)  
     456:	75 69                	jne    4c1 <_init-0x11f>
     458:	6c                   	ins    BYTE PTR es:[rdi],dx
     459:	74 69                	je     4c4 <_init-0x11c>
     45b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     45c:	5f                   	pop    rdi
     45d:	65 78 70             	gs js  4d0 <_init-0x110>
     460:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
     465:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
     468:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     469:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
     46d:	30 29                	xor    BYTE PTR [rcx],ch
     46f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     472:	53                   	push   rbx
     473:	49 5a                	rex.WB pop r10
     475:	45                   	rex.RB
     476:	4f                   	rex.WRXB
     477:	46 5f                	rex.RX pop rdi
     479:	57                   	push   rdi
     47a:	49                   	rex.WB
     47b:	4e 54                	rex.WRX push rsp
     47d:	5f                   	pop    rdi
     47e:	54                   	push   rsp
     47f:	5f                   	pop    rdi
     480:	5f                   	pop    rdi
     481:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     484:	5f                   	pop    rdi
     485:	5f                   	pop    rdi
     486:	47                   	rex.RXB
     487:	4e 55                	rex.WRX push rbp
     489:	43 5f                	rex.XB pop r15
     48b:	50                   	push   rax
     48c:	52                   	push   rdx
     48d:	45 52                	rex.RB push r10
     48f:	45 51                	rex.RB push r9
     491:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     494:	6a 2c                	push   0x2c
     496:	6d                   	ins    DWORD PTR es:[rdi],dx
     497:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
     49e:	5f                   	pop    rdi
     49f:	47                   	rex.RXB
     4a0:	4e 55                	rex.WRX push rbp
     4a2:	43 5f                	rex.XB pop r15
     4a4:	5f                   	pop    rdi
     4a5:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     4a8:	20 31                	and    BYTE PTR [rcx],dh
     4aa:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     4ad:	2b 20                	sub    esp,DWORD PTR [rax]
     4af:	5f                   	pop    rdi
     4b0:	5f                   	pop    rdi
     4b1:	47                   	rex.RXB
     4b2:	4e 55                	rex.WRX push rbp
     4b4:	43 5f                	rex.XB pop r15
     4b6:	4d                   	rex.WRB
     4b7:	49                   	rex.WB
     4b8:	4e                   	rex.WRX
     4b9:	4f 52                	rex.WRXB push r10
     4bb:	5f                   	pop    rdi
     4bc:	5f                   	pop    rdi
     4bd:	20 3e                	and    BYTE PTR [rsi],bh
     4bf:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     4c4:	61                   	(bad)  
     4c5:	6a 29                	push   0x29
     4c7:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     4ca:	20 31                	and    BYTE PTR [rcx],dh
     4cc:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     4cf:	2b 20                	sub    esp,DWORD PTR [rax]
     4d1:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     4d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4d5:	29 29                	sub    DWORD PTR [rcx],ebp
     4d7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     4da:	55                   	push   rbp
     4db:	49                   	rex.WB
     4dc:	4e 54                	rex.WRX push rsp
     4de:	50                   	push   rax
     4df:	54                   	push   rsp
     4e0:	52                   	push   rdx
     4e1:	5f                   	pop    rdi
     4e2:	4d                   	rex.WRB
     4e3:	41 58                	pop    r8
     4e5:	5f                   	pop    rdi
     4e6:	5f                   	pop    rdi
     4e7:	20 30                	and    BYTE PTR [rax],dh
     4e9:	78 66                	js     551 <_init-0x8f>
     4eb:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     4f2:	66 66 66 66 66 66 66 
     4f9:	66 55                	push   bp
     4fb:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     4ff:	76 61                	jbe    562 <_init-0x7e>
     501:	5f                   	pop    rdi
     502:	61                   	(bad)  
     503:	72 67                	jb     56c <_init-0x74>
     505:	5f                   	pop    rdi
     506:	70 61                	jo     569 <_init-0x77>
     508:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     50b:	6c                   	ins    BYTE PTR es:[rdi],dx
     50c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     50e:	28 29                	sub    BYTE PTR [rcx],ch
     510:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     513:	62                   	(bad)  
     514:	75 69                	jne    57f <_init-0x61>
     516:	6c                   	ins    BYTE PTR es:[rdi],dx
     517:	74 69                	je     582 <_init-0x5e>
     519:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     51a:	5f                   	pop    rdi
     51b:	76 61                	jbe    57e <_init-0x62>
     51d:	5f                   	pop    rdi
     51e:	61                   	(bad)  
     51f:	72 67                	jb     588 <_init-0x58>
     521:	5f                   	pop    rdi
     522:	70 61                	jo     585 <_init-0x5b>
     524:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     527:	6c                   	ins    BYTE PTR es:[rdi],dx
     528:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     52a:	20 28                	and    BYTE PTR [rax],ch
     52c:	29 00                	sub    DWORD PTR [rax],eax
     52e:	5f                   	pop    rdi
     52f:	47 5f                	rex.RXB pop r15
     531:	48                   	rex.W
     532:	41 56                	push   r14
     534:	45 5f                	rex.RB pop r15
     536:	4d                   	rex.WRB
     537:	4d                   	rex.WRB
     538:	41 50                	push   r8
     53a:	20 31                	and    BYTE PTR [rcx],dh
     53c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     53f:	61                   	(bad)  
     540:	74 74                	je     5b6 <_init-0x2a>
     542:	72 69                	jb     5ad <_init-0x33>
     544:	62                   	(bad)  
     545:	75 74                	jne    5bb <_init-0x25>
     547:	65 5f                	gs pop rdi
     549:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     54c:	73 74                	jae    5c2 <_init-0x1e>
     54e:	5f                   	pop    rdi
     54f:	5f                   	pop    rdi
     550:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     553:	61                   	(bad)  
     554:	74 74                	je     5ca <_init-0x16>
     556:	72 69                	jb     5c1 <_init-0x1f>
     558:	62                   	(bad)  
     559:	75 74                	jne    5cf <_init-0x11>
     55b:	65 5f                	gs pop rdi
     55d:	5f                   	pop    rdi
     55e:	20 28                	and    BYTE PTR [rax],ch
     560:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     563:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     566:	73 74                	jae    5dc <_init-0x4>
     568:	5f                   	pop    rdi
     569:	5f                   	pop    rdi
     56a:	29 29                	sub    DWORD PTR [rcx],ebp
     56c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     56f:	47                   	rex.RXB
     570:	4c                   	rex.WR
     571:	49                   	rex.WB
     572:	42                   	rex.X
     573:	43 5f                	rex.XB pop r15
     575:	55                   	push   rbp
     576:	53                   	push   rbx
     577:	45 5f                	rex.RB pop r15
     579:	44                   	rex.R
     57a:	45 50                	rex.RB push r8
     57c:	52                   	push   rdx
     57d:	45                   	rex.RB
     57e:	43                   	rex.XB
     57f:	41 54                	push   r12
     581:	45                   	rex.RB
     582:	44 5f                	rex.R pop rdi
     584:	47                   	rex.RXB
     585:	45 54                	rex.RB push r12
     587:	53                   	push   rbx
     588:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     58b:	4f 5f                	rex.WRXB pop r15
     58d:	4e                   	rex.WRX
     58e:	4f 5f                	rex.WRXB pop r15
     590:	57                   	push   rdi
     591:	52                   	push   rdx
     592:	49 54                	rex.WB push r12
     594:	45 53                	rex.RB push r11
     596:	20 38                	and    BYTE PTR [rax],bh
     598:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     59b:	47                   	rex.RXB
     59c:	4e 55                	rex.WRX push rbp
     59e:	43 5f                	rex.XB pop r15
     5a0:	4d                   	rex.WRB
     5a1:	49                   	rex.WB
     5a2:	4e                   	rex.WRX
     5a3:	4f 52                	rex.WRXB push r10
     5a5:	5f                   	pop    rdi
     5a6:	5f                   	pop    rdi
     5a7:	20 33                	and    BYTE PTR [rbx],dh
     5a9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5ac:	55                   	push   rbp
     5ad:	53                   	push   rbx
     5ae:	45 5f                	rex.RB pop r15
     5b0:	4c                   	rex.WR
     5b1:	41 52                	push   r10
     5b3:	47                   	rex.RXB
     5b4:	45                   	rex.RB
     5b5:	46                   	rex.RX
     5b6:	49                   	rex.WB
     5b7:	4c                   	rex.WR
     5b8:	45                   	rex.RB
     5b9:	36 34 00             	ss xor al,0x0
     5bc:	5f                   	pop    rdi
     5bd:	5f                   	pop    rdi
     5be:	52                   	push   rdx
     5bf:	4c                   	rex.WR
     5c0:	49                   	rex.WB
     5c1:	4d 5f                	rex.WRB pop r15
     5c3:	54                   	push   rsp
     5c4:	5f                   	pop    rdi
     5c5:	54                   	push   rsp
     5c6:	59                   	pop    rcx
     5c7:	50                   	push   rax
     5c8:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     5cc:	53                   	push   rbx
     5cd:	59                   	pop    rcx
     5ce:	53                   	push   rbx
     5cf:	43                   	rex.XB
     5d0:	41                   	rex.B
     5d1:	4c                   	rex.WR
     5d2:	4c 5f                	rex.WR pop rdi
     5d4:	55                   	push   rbp
     5d5:	4c                   	rex.WR
     5d6:	4f                   	rex.WRXB
     5d7:	4e                   	rex.WRX
     5d8:	47 5f                	rex.RXB pop r15
     5da:	54                   	push   rsp
     5db:	59                   	pop    rcx
     5dc:	50                   	push   rax
     5dd:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     5e1:	4c                   	rex.WR
     5e2:	44                   	rex.R
     5e3:	42                   	rex.X
     5e4:	4c 5f                	rex.WR pop rdi
     5e6:	52                   	push   rdx
     5e7:	45                   	rex.RB
     5e8:	44                   	rex.R
     5e9:	49 52                	rex.WB push r10
     5eb:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
     5ee:	6d                   	ins    DWORD PTR es:[rdi],dx
     5ef:	65 2c 70             	gs sub al,0x70
     5f2:	72 6f                	jb     663 <_start+0x3>
     5f4:	74 6f                	je     665 <_start+0x5>
     5f6:	29 20                	sub    DWORD PTR [rax],esp
     5f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5f9:	61                   	(bad)  
     5fa:	6d                   	ins    DWORD PTR es:[rdi],dx
     5fb:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
     5ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     600:	74 6f                	je     671 <_start+0x11>
     602:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     605:	4f 5f                	rex.WRXB pop r15
     607:	77 72                	ja     67b <_start+0x1b>
     609:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
     610:	00 
     611:	5f                   	pop    rdi
     612:	5f                   	pop    rdi
     613:	47                   	rex.RXB
     614:	4c                   	rex.WR
     615:	49                   	rex.WB
     616:	42                   	rex.X
     617:	43 5f                	rex.XB pop r15
     619:	50                   	push   rax
     61a:	52                   	push   rdx
     61b:	45 52                	rex.RB push r10
     61d:	45 51                	rex.RB push r9
     61f:	28 6d 61             	sub    BYTE PTR [rbp+0x61],ch
     622:	6a 2c                	push   0x2c
     624:	6d                   	ins    DWORD PTR es:[rdi],dx
     625:	69 6e 29 20 28 28 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f282820
     62c:	5f                   	pop    rdi
     62d:	47                   	rex.RXB
     62e:	4c                   	rex.WR
     62f:	49                   	rex.WB
     630:	42                   	rex.X
     631:	43 5f                	rex.XB pop r15
     633:	5f                   	pop    rdi
     634:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     637:	20 31                	and    BYTE PTR [rcx],dh
     639:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     63c:	2b 20                	sub    esp,DWORD PTR [rax]
     63e:	5f                   	pop    rdi
     63f:	5f                   	pop    rdi
     640:	47                   	rex.RXB
     641:	4c                   	rex.WR
     642:	49                   	rex.WB
     643:	42                   	rex.X
     644:	43 5f                	rex.XB pop r15
     646:	4d                   	rex.WRB
     647:	49                   	rex.WB
     648:	4e                   	rex.WRX
     649:	4f 52                	rex.WRXB push r10
     64b:	5f                   	pop    rdi
     64c:	5f                   	pop    rdi
     64d:	20 3e                	and    BYTE PTR [rsi],bh
     64f:	3d 20 28 28 6d       	cmp    eax,0x6d282820
     654:	61                   	(bad)  
     655:	6a 29                	push   0x29
     657:	20 3c 3c             	and    BYTE PTR [rsp+rdi*1],bh
     65a:	20 31                	and    BYTE PTR [rcx],dh
     65c:	36 29 20             	sub    DWORD PTR ss:[rax],esp
     65f:	2b 20                	sub    esp,DWORD PTR [rax]
     661:	28 6d 69             	sub    BYTE PTR [rbp+0x69],ch
     664:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     665:	29 29                	sub    DWORD PTR [rcx],ebp
     667:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     66a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     66b:	65 65 64 5f          	gs gs fs pop rdi
     66f:	4e 55                	rex.WRX push rbp
     671:	4c                   	rex.WR
     672:	4c 20 00             	rex.WR and BYTE PTR [rax],r8b
     675:	5f                   	pop    rdi
     676:	5f                   	pop    rdi
     677:	46                   	rex.RX
     678:	4c 54                	rex.WR push rsp
     67a:	36 34 5f             	ss xor al,0x5f
     67d:	4d                   	rex.WRB
     67e:	49                   	rex.WB
     67f:	4e 5f                	rex.WRX pop rdi
     681:	5f                   	pop    rdi
     682:	20 32                	and    BYTE PTR [rdx],dh
     684:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
     687:	35 30 37 33 38       	xor    eax,0x38333730
     68c:	35 38 35 30 37       	xor    eax,0x37303538
     691:	32 30                	xor    dh,BYTE PTR [rax]
     693:	31 33                	xor    DWORD PTR [rbx],esi
     695:	38 33                	cmp    BYTE PTR [rbx],dh
     697:	30 39                	xor    BYTE PTR [rcx],bh
     699:	30 32                	xor    BYTE PTR [rdx],dh
     69b:	33 32                	xor    esi,DWORD PTR [rdx]
     69d:	37                   	(bad)  
     69e:	31 37                	xor    DWORD PTR [rdi],esi
     6a0:	33 33                	xor    esi,DWORD PTR [rbx]
     6a2:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
     6a5:	34 30                	xor    al,0x30
     6a7:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
     6ae:	36 34 00             	ss xor al,0x0
     6b1:	5f                   	pop    rdi
     6b2:	5f                   	pop    rdi
     6b3:	4c                   	rex.WR
     6b4:	4f                   	rex.WRXB
     6b5:	4e                   	rex.WRX
     6b6:	47 5f                	rex.RXB pop r15
     6b8:	4c                   	rex.WR
     6b9:	4f                   	rex.WRXB
     6ba:	4e                   	rex.WRX
     6bb:	47 5f                	rex.RXB pop r15
     6bd:	57                   	push   rdi
     6be:	49                   	rex.WB
     6bf:	44 54                	rex.R push rsp
     6c1:	48 5f                	rex.W pop rdi
     6c3:	5f                   	pop    rdi
     6c4:	20 36                	and    BYTE PTR [rsi],dh
     6c6:	34 00                	xor    al,0x0
     6c8:	5f                   	pop    rdi
     6c9:	50                   	push   rax
     6ca:	4f 53                	rex.WRXB push r11
     6cc:	49 58                	rex.WB pop r8
     6ce:	5f                   	pop    rdi
     6cf:	53                   	push   rbx
     6d0:	4f 55                	rex.WRXB push r13
     6d2:	52                   	push   rdx
     6d3:	43                   	rex.XB
     6d4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     6d8:	46                   	rex.RX
     6d9:	4c 54                	rex.WR push rsp
     6db:	5f                   	pop    rdi
     6dc:	44                   	rex.R
     6dd:	45                   	rex.RB
     6de:	4e                   	rex.WRX
     6df:	4f 52                	rex.WRXB push r10
     6e1:	4d 5f                	rex.WRB pop r15
     6e3:	4d                   	rex.WRB
     6e4:	49                   	rex.WB
     6e5:	4e 5f                	rex.WRX pop rdi
     6e7:	5f                   	pop    rdi
     6e8:	20 31                	and    BYTE PTR [rcx],dh
     6ea:	2e 34 30             	cs xor al,0x30
     6ed:	31 32                	xor    DWORD PTR [rdx],esi
     6ef:	39 38                	cmp    DWORD PTR [rax],edi
     6f1:	34 36                	xor    al,0x36
     6f3:	34 33                	xor    al,0x33
     6f5:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
     6f8:	31 37                	xor    DWORD PTR [rdi],esi
     6fa:	30 37                	xor    BYTE PTR [rdi],dh
     6fc:	30 39                	xor    BYTE PTR [rcx],bh
     6fe:	32 33                	xor    dh,BYTE PTR [rbx]
     700:	37                   	(bad)  
     701:	32 39                	xor    bh,BYTE PTR [rcx]
     703:	35 38 33 32 38       	xor    eax,0x38323338
     708:	39 39                	cmp    DWORD PTR [rcx],edi
     70a:	31 36                	xor    DWORD PTR [rsi],esi
     70c:	31 33                	xor    DWORD PTR [rbx],esi
     70e:	65 2d 34 35 46 00    	gs sub eax,0x463534
     714:	2f                   	(bad)  
     715:	68 6f 6d 65 2f       	push   0x2f656d6f
     71a:	75 62                	jne    77e <main+0x14>
     71c:	75 6e                	jne    78c <main+0x22>
     71e:	74 75                	je     795 <main+0x2b>
     720:	2f                   	(bad)  
     721:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
     723:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
     72a:	6e 
     72b:	67 2f                	addr32 (bad) 
     72d:	50                   	push   rax
     72e:	72 6f                	jb     79f <main+0x35>
     730:	67 72 61             	addr32 jb 794 <main+0x2a>
     733:	6d                   	ins    DWORD PTR es:[rdi],dx
     734:	6d                   	ins    DWORD PTR es:[rdi],dx
     735:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
     73c:	61                   	(bad)  
     73d:	73 73                	jae    7b2 <main+0x48>
     73f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     741:	62                   	(bad)  
     742:	6c                   	ins    BYTE PTR es:[rdi],dx
     743:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
     74a:	61                   	(bad)  
     74b:	72 69                	jb     7b6 <main+0x4c>
     74d:	65 73 2f             	gs jae 77f <main+0x15>
     750:	43 2f                	rex.XB (bad) 
     752:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
     754:	74 65                	je     7bb <main+0x51>
     756:	6c                   	ins    BYTE PTR es:[rdi],dx
     757:	5f                   	pop    rdi
     758:	61                   	(bad)  
     759:	72 63                	jb     7be <main+0x54>
     75b:	68 69 74 65 63       	push   0x63657469
     760:	74 75                	je     7d7 <main+0x6d>
     762:	72 65                	jb     7c9 <main+0x5f>
     764:	2f                   	(bad)  
     765:	41                   	rex.B
     766:	4d                   	rex.WRB
     767:	44                   	rex.R
     768:	36 34 2f             	ss xor al,0x2f
int main(int argc, char * argv[]) {
     76b:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
     76d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     76e:	64 69 74 69 6f 6e 61 	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x736c616e
     775:	6c 73 
     777:	2f                   	(bad)  
     778:	57                   	push   rdi
     779:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
     780:	75 
     781:	67 5f                	addr32 pop rdi
     783:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
     785:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     787:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
	b = 5;
     78a:	53                   	push   rbx
     78b:	49 5a                	rex.WB pop r10
     78d:	45                   	rex.RB
     78e:	4f                   	rex.WRXB
	printf ("Enter a number between 1 and 10 -> ");
     78f:	46 5f                	rex.RX pop rdi
     791:	53                   	push   rbx
     792:	49 5a                	rex.WB pop r10
     794:	45 5f                	rex.RB pop r15
     796:	54                   	push   rsp
     797:	5f                   	pop    rdi
     798:	5f                   	pop    rdi
     799:	20 38                	and    BYTE PTR [rax],bh
     79b:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
     79e:	67 63 00             	movsxd eax,DWORD PTR [eax]
	scanf ("%d", &a);
     7a1:	5f                   	pop    rdi
     7a2:	5f                   	pop    rdi
     7a3:	4f 52                	rex.WRXB push r10
     7a5:	44                   	rex.R
     7a6:	45 52                	rex.RB push r10
     7a8:	5f                   	pop    rdi
     7a9:	42                   	rex.X
     7aa:	49                   	rex.WB
     7ab:	47 5f                	rex.RXB pop r15
     7ad:	45                   	rex.RB
     7ae:	4e                   	rex.WRX
     7af:	44                   	rex.R
     7b0:	49                   	rex.WB
     7b1:	41                   	rex.B
     7b2:	4e 5f                	rex.WRX pop rdi
     7b4:	5f                   	pop    rdi
     7b5:	20 34 33             	and    BYTE PTR [rbx+rsi*1],dh
	if (a > b) {
     7b8:	32 31                	xor    dh,BYTE PTR [rcx]
     7ba:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7bd:	47                   	rex.RXB
     7be:	4e 55                	rex.WRX push rbp
		printf ("The number was higher than 5!\n");
     7c0:	43 5f                	rex.XB pop r15
     7c2:	5f                   	pop    rdi
     7c3:	20 37                	and    BYTE PTR [rdi],dh
     7c5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     7c8:	4f 5f                	rex.WRXB pop r15
     7ca:	4c                   	rex.WR
     7cb:	49                   	rex.WB
     7cc:	4e                   	rex.WRX
     7cd:	45 5f                	rex.RB pop r15
     7cf:	42 55                	rex.X push rbp
}
     7d1:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
     7d4:	78 32                	js     808 <__libc_csu_init+0x18>
     7d6:	30 30                	xor    BYTE PTR [rax],dh
     7d8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7db:	55                   	push   rbp
     7dc:	53                   	push   rbx
     7dd:	45 5f                	rex.RB pop r15
     7df:	49 53                	rex.WB push r11
     7e1:	4f                   	rex.WRXB
     7e2:	43 58                	rex.XB pop r8
     7e4:	58                   	pop    rax
     7e5:	31 31                	xor    DWORD PTR [rcx],esi
     7e7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7ea:	55                   	push   rbp
     7eb:	53                   	push   rbx
     7ec:	45 5f                	rex.RB pop r15
     7ee:	41 54                	push   r12
     7f0:	46                   	rex.RX
     7f1:	49                   	rex.WB
     7f2:	4c                   	rex.WR
     7f3:	45 20 31             	and    BYTE PTR [r9],r14b
     7f6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fd:	75 6c                	jne    86b <_fini+0x7>
     7ff:	6c                   	ins    BYTE PTR es:[rdi],dx
     800:	28 70 61             	sub    BYTE PTR [rax+0x61],dh
     803:	72 61                	jb     866 <_fini+0x2>
     805:	6d                   	ins    DWORD PTR es:[rdi],dx
     806:	73 29                	jae    831 <__libc_csu_init+0x41>
     808:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     80b:	61                   	(bad)  
     80c:	74 74                	je     882 <_IO_stdin_used+0x12>
     80e:	72 69                	jb     879 <_IO_stdin_used+0x9>
     810:	62                   	(bad)  
     811:	75 74                	jne    887 <_IO_stdin_used+0x17>
     813:	65 5f                	gs pop rdi
     815:	5f                   	pop    rdi
     816:	20 28                	and    BYTE PTR [rax],ch
     818:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     81b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     81d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81f:	75 6c                	jne    88d <_IO_stdin_used+0x1d>
     821:	6c                   	ins    BYTE PTR es:[rdi],dx
     822:	5f                   	pop    rdi
     823:	5f                   	pop    rdi
     824:	20 70 61             	and    BYTE PTR [rax+0x61],dh
     827:	72 61                	jb     88a <_IO_stdin_used+0x1a>
     829:	6d                   	ins    DWORD PTR es:[rdi],dx
     82a:	73 29                	jae    855 <__libc_csu_init+0x65>
     82c:	29 00                	sub    DWORD PTR [rax],eax
     82e:	5f                   	pop    rdi
     82f:	5f                   	pop    rdi
     830:	55                   	push   rbp
     831:	49                   	rex.WB
     832:	4e 54                	rex.WRX push rsp
     834:	36 34 5f             	ss xor al,0x5f
     837:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
     83b:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
     83e:	23 23                	and    esp,DWORD PTR [rbx]
     840:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
     843:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     846:	47                   	rex.RXB
     847:	4e 55                	rex.WRX push rbp
     849:	5f                   	pop    rdi
     84a:	4c                   	rex.WR
     84b:	49                   	rex.WB
     84c:	42 52                	rex.X push rdx
     84e:	41 52                	push   r10
     850:	59                   	pop    rcx
     851:	5f                   	pop    rdi
     852:	5f                   	pop    rdi
     853:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     856:	44                   	rex.R
     857:	42                   	rex.X
     858:	4c 5f                	rex.WR pop rdi
     85a:	4d                   	rex.WRB
     85b:	41                   	rex.B
     85c:	4e 54                	rex.WRX push rsp
     85e:	5f                   	pop    rdi
     85f:	44                   	rex.R
     860:	49                   	rex.WB
     861:	47 5f                	rex.RXB pop r15
     863:	5f                   	pop    rdi
     864:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f089d <_end+0x5f3ef885>
     86a:	55                   	push   rbp
     86b:	53                   	push   rbx
     86c:	45 5f                	rex.RB pop r15
     86e:	50                   	push   rax
     86f:	4f 53                	rex.WRXB push r11
     871:	49 58                	rex.WB pop r8
     873:	31 39                	xor    DWORD PTR [rcx],edi
     875:	39 35 30 36 20 31    	cmp    DWORD PTR [rip+0x31203630],esi        # 31203eab <_end+0x31002e93>
     87b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     87e:	73 74                	jae    8f4 <__GNU_EH_FRAME_HDR+0x34>
     880:	75 62                	jne    8e4 <__GNU_EH_FRAME_HDR+0x24>
     882:	5f                   	pop    rdi
     883:	63 68 66             	movsxd ebp,DWORD PTR [rax+0x66]
     886:	6c                   	ins    BYTE PTR es:[rdi],dx
     887:	61                   	(bad)  
     888:	67 73 20             	addr32 jae 8ab <_IO_stdin_used+0x3b>
     88b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     88e:	49                   	rex.WB
     88f:	4e 54                	rex.WRX push rsp
     891:	5f                   	pop    rdi
     892:	4d                   	rex.WRB
     893:	41 58                	pop    r8
     895:	5f                   	pop    rdi
     896:	5f                   	pop    rdi
     897:	20 30                	and    BYTE PTR [rax],dh
     899:	78 37                	js     8d2 <__GNU_EH_FRAME_HDR+0x12>
     89b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x66],bl
     8a2:	00 5f 66 
     8a5:	6c                   	ins    BYTE PTR es:[rdi],dx
     8a6:	61                   	(bad)  
     8a7:	67 73 32             	addr32 jae 8dc <__GNU_EH_FRAME_HDR+0x1c>
     8aa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8ad:	4e 54                	rex.WRX push rsp
     8af:	48                   	rex.W
     8b0:	4e                   	rex.WRX
     8b1:	4c 28 66 63          	rex.WR sub BYTE PTR [rsi+0x63],r12b
     8b5:	74 29                	je     8e0 <__GNU_EH_FRAME_HDR+0x20>
     8b7:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     8ba:	61                   	(bad)  
     8bb:	74 74                	je     931 <__GNU_EH_FRAME_HDR+0x71>
     8bd:	72 69                	jb     928 <__GNU_EH_FRAME_HDR+0x68>
     8bf:	62                   	(bad)  
     8c0:	75 74                	jne    936 <__GNU_EH_FRAME_HDR+0x76>
     8c2:	65 5f                	gs pop rdi
     8c4:	5f                   	pop    rdi
     8c5:	20 28                	and    BYTE PTR [rax],ch
     8c7:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     8ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8cc:	74 68                	je     936 <__GNU_EH_FRAME_HDR+0x76>
     8ce:	72 6f                	jb     93f <__GNU_EH_FRAME_HDR+0x7f>
     8d0:	77 5f                	ja     931 <__GNU_EH_FRAME_HDR+0x71>
     8d2:	5f                   	pop    rdi
     8d3:	29 29                	sub    DWORD PTR [rcx],ebp
     8d5:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     8d8:	74 00                	je     8da <__GNU_EH_FRAME_HDR+0x1a>
     8da:	5f                   	pop    rdi
     8db:	5f                   	pop    rdi
     8dc:	73 74                	jae    952 <__GNU_EH_FRAME_HDR+0x92>
     8de:	75 62                	jne    942 <__GNU_EH_FRAME_HDR+0x82>
     8e0:	5f                   	pop    rdi
     8e1:	66 63 68 66          	movsxd bp,DWORD PTR [rax+0x66]
     8e5:	6c                   	ins    BYTE PTR es:[rdi],dx
     8e6:	61                   	(bad)  
     8e7:	67 73 20             	addr32 jae 90a <__GNU_EH_FRAME_HDR+0x4a>
     8ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8ed:	49                   	rex.WB
     8ee:	4e 54                	rex.WRX push rsp
     8f0:	31 36                	xor    DWORD PTR [rsi],esi
     8f2:	5f                   	pop    rdi
     8f3:	54                   	push   rsp
     8f4:	59                   	pop    rcx
     8f5:	50                   	push   rax
     8f6:	45 5f                	rex.RB pop r15
     8f8:	5f                   	pop    rdi
     8f9:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
     8fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8fd:	72 74                	jb     973 <__GNU_EH_FRAME_HDR+0xb3>
     8ff:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     902:	74 00                	je     904 <__GNU_EH_FRAME_HDR+0x44>
     904:	5f                   	pop    rdi
     905:	5f                   	pop    rdi
     906:	44                   	rex.R
     907:	45                   	rex.RB
     908:	43                   	rex.XB
     909:	49                   	rex.WB
     90a:	4d                   	rex.WRB
     90b:	41                   	rex.B
     90c:	4c 5f                	rex.WR pop rdi
     90e:	42                   	rex.X
     90f:	49                   	rex.WB
     910:	44 5f                	rex.R pop rdi
     912:	46                   	rex.RX
     913:	4f 52                	rex.WRXB push r10
     915:	4d                   	rex.WRB
     916:	41 54                	push   r12
     918:	5f                   	pop    rdi
     919:	5f                   	pop    rdi
     91a:	20 31                	and    BYTE PTR [rcx],dh
     91c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     91f:	44                   	rex.R
     920:	45                   	rex.RB
     921:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
     924:	5f                   	pop    rdi
     925:	45 50                	rex.RB push r8
     927:	53                   	push   rbx
     928:	49                   	rex.WB
     929:	4c                   	rex.WR
     92a:	4f                   	rex.WRXB
     92b:	4e 5f                	rex.WRX pop rdi
     92d:	5f                   	pop    rdi
     92e:	20 31                	and    BYTE PTR [rcx],dh
     930:	45 2d 36 44 46 00    	rex.RB sub eax,0x464436
     936:	5f                   	pop    rdi
     937:	53                   	push   rbx
     938:	49 5a                	rex.WB pop r10
     93a:	45 5f                	rex.RB pop r15
     93c:	54                   	push   rsp
     93d:	5f                   	pop    rdi
     93e:	44                   	rex.R
     93f:	45                   	rex.RB
     940:	43                   	rex.XB
     941:	4c                   	rex.WR
     942:	41 52                	push   r10
     944:	45                   	rex.RB
     945:	44 20 00             	and    BYTE PTR [rax],r8b
     948:	5f                   	pop    rdi
     949:	5f                   	pop    rdi
     94a:	46                   	rex.RX
     94b:	44 5f                	rex.R pop rdi
     94d:	53                   	push   rbx
     94e:	45 54                	rex.RB push r12
     950:	53                   	push   rbx
     951:	49 5a                	rex.WB pop r10
     953:	45 20 31             	and    BYTE PTR [r9],r14b
     956:	30 32                	xor    BYTE PTR [rdx],dh
     958:	34 00                	xor    al,0x0
     95a:	5f                   	pop    rdi
     95b:	5f                   	pop    rdi
     95c:	4c                   	rex.WR
     95d:	44                   	rex.R
     95e:	42                   	rex.X
     95f:	4c 5f                	rex.WR pop rdi
     961:	44                   	rex.R
     962:	49                   	rex.WB
     963:	47 5f                	rex.RXB pop r15
     965:	5f                   	pop    rdi
     966:	20 31                	and    BYTE PTR [rcx],dh
     968:	38 00                	cmp    BYTE PTR [rax],al
     96a:	5f                   	pop    rdi
     96b:	6d                   	ins    DWORD PTR es:[rdi],dx
     96c:	61                   	(bad)  
     96d:	72 6b                	jb     9da <__GNU_EH_FRAME_HDR+0x11a>
     96f:	65 72 73             	gs jb  9e5 <__GNU_EH_FRAME_HDR+0x125>
     972:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     975:	41 54                	push   r12
     977:	4f                   	rex.WRXB
     978:	4d                   	rex.WRB
     979:	49                   	rex.WB
     97a:	43 5f                	rex.XB pop r15
     97c:	53                   	push   rbx
     97d:	45 51                	rex.RB push r9
     97f:	5f                   	pop    rdi
     980:	43 53                	rex.XB push r11
     982:	54                   	push   rsp
     983:	20 35 00 5f 5f 55    	and    BYTE PTR [rip+0x555f5f00],dh        # 555f6889 <_end+0x553f5871>
     989:	53                   	push   rbx
     98a:	45 5f                	rex.RB pop r15
     98c:	50                   	push   rax
     98d:	4f 53                	rex.WRXB push r11
     98f:	49 58                	rex.WB pop r8
     991:	32 20                	xor    ah,BYTE PTR [rax]
     993:	31 00                	xor    DWORD PTR [rax],eax
     995:	5f                   	pop    rdi
     996:	5f                   	pop    rdi
     997:	55                   	push   rbp
     998:	53                   	push   rbx
     999:	45 5f                	rex.RB pop r15
     99b:	49 53                	rex.WB push r11
     99d:	4f                   	rex.WRXB
     99e:	43 39 35 20 31 00 5f 	rex.XB cmp DWORD PTR [rip+0x5f003120],esi        # 5f003ac5 <_end+0x5ee02aad>
     9a5:	5f                   	pop    rdi
     9a6:	53                   	push   rbx
     9a7:	49 5a                	rex.WB pop r10
     9a9:	45                   	rex.RB
     9aa:	4f                   	rex.WRXB
     9ab:	46 5f                	rex.RX pop rdi
     9ad:	53                   	push   rbx
     9ae:	48                   	rex.W
     9af:	4f 52                	rex.WRXB push r10
     9b1:	54                   	push   rsp
     9b2:	5f                   	pop    rdi
     9b3:	5f                   	pop    rdi
     9b4:	20 32                	and    BYTE PTR [rdx],dh
     9b6:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     9b9:	5f                   	pop    rdi
     9ba:	76 61                	jbe    a1d <__FRAME_END__+0x19>
     9bc:	5f                   	pop    rdi
     9bd:	6c                   	ins    BYTE PTR es:[rdi],dx
     9be:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
     9c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9c6:	75 63                	jne    a2b <__FRAME_END__+0x27>
     9c8:	5f                   	pop    rdi
     9c9:	76 61                	jbe    a2c <__FRAME_END__+0x28>
     9cb:	5f                   	pop    rdi
     9cc:	6c                   	ins    BYTE PTR es:[rdi],dx
     9cd:	69 73 74 00 5f 5f 55 	imul   esi,DWORD PTR [rbx+0x74],0x555f5f00
     9d4:	49                   	rex.WB
     9d5:	4e 54                	rex.WRX push rsp
     9d7:	36 34 5f             	ss xor al,0x5f
     9da:	54                   	push   rsp
     9db:	59                   	pop    rcx
     9dc:	50                   	push   rax
     9dd:	45 5f                	rex.RB pop r15
     9df:	5f                   	pop    rdi
     9e0:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     9e4:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
     9e8:	73 69                	jae    a53 <__FRAME_END__+0x4f>
     9ea:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     9ec:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     9f1:	74 00                	je     9f3 <__GNU_EH_FRAME_HDR+0x133>
     9f3:	5f                   	pop    rdi
     9f4:	5f                   	pop    rdi
     9f5:	49                   	rex.WB
     9f6:	4e 54                	rex.WRX push rsp
     9f8:	5f                   	pop    rdi
     9f9:	46                   	rex.RX
     9fa:	41 53                	push   r11
     9fc:	54                   	push   rsp
     9fd:	33 32                	xor    esi,DWORD PTR [rdx]
     9ff:	5f                   	pop    rdi
     a00:	4d                   	rex.WRB
     a01:	41 58                	pop    r8
     a03:	5f                   	pop    rdi
     a04:	5f                   	pop    rdi
     a05:	20 30                	and    BYTE PTR [rax],dh
     a07:	78 37                	js     a40 <__FRAME_END__+0x3c>
     a09:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
     a10:	66 66 66 66 66 66 66 
     a17:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
     a1c:	49                   	rex.WB
     a1d:	4e 54                	rex.WRX push rsp
     a1f:	5f                   	pop    rdi
     a20:	4c                   	rex.WR
     a21:	45                   	rex.RB
     a22:	41 53                	push   r11
     a24:	54                   	push   rsp
     a25:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     a28:	59                   	pop    rcx
     a29:	50                   	push   rax
     a2a:	45 5f                	rex.RB pop r15
     a2c:	5f                   	pop    rdi
     a2d:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     a30:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     a32:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     a37:	61                   	(bad)  
     a38:	72 00                	jb     a3a <__FRAME_END__+0x36>
     a3a:	5f                   	pop    rdi
     a3b:	5f                   	pop    rdi
     a3c:	73 69                	jae    aa7 <__FRAME_END__+0xa3>
     a3e:	7a 65                	jp     aa5 <__FRAME_END__+0xa1>
     a40:	5f                   	pop    rdi
     a41:	74 20                	je     a63 <__FRAME_END__+0x5f>
     a43:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a46:	55                   	push   rbp
     a47:	49                   	rex.WB
     a48:	4e 54                	rex.WRX push rsp
     a4a:	5f                   	pop    rdi
     a4b:	4c                   	rex.WR
     a4c:	45                   	rex.RB
     a4d:	41 53                	push   r11
     a4f:	54                   	push   rsp
     a50:	33 32                	xor    esi,DWORD PTR [rdx]
     a52:	5f                   	pop    rdi
     a53:	54                   	push   rsp
     a54:	59                   	pop    rcx
     a55:	50                   	push   rax
     a56:	45 5f                	rex.RB pop r15
     a58:	5f                   	pop    rdi
     a59:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     a5c:	73 69                	jae    ac7 <__FRAME_END__+0xc3>
     a5e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     a60:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     a65:	74 00                	je     a67 <__FRAME_END__+0x63>
     a67:	5f                   	pop    rdi
     a68:	5f                   	pop    rdi
     a69:	73 74                	jae    adf <__FRAME_END__+0xdb>
     a6b:	75 62                	jne    acf <__FRAME_END__+0xcb>
     a6d:	5f                   	pop    rdi
     a6e:	73 69                	jae    ad9 <__FRAME_END__+0xd5>
     a70:	67 72 65             	addr32 jb ad8 <__FRAME_END__+0xd4>
     a73:	74 75                	je     aea <__FRAME_END__+0xe6>
     a75:	72 6e                	jb     ae5 <__FRAME_END__+0xe1>
     a77:	20 00                	and    BYTE PTR [rax],al
     a79:	5f                   	pop    rdi
     a7a:	5f                   	pop    rdi
     a7b:	70 74                	jo     af1 <__FRAME_END__+0xed>
     a7d:	72 5f                	jb     ade <__FRAME_END__+0xda>
     a7f:	74 20                	je     aa1 <__FRAME_END__+0x9d>
     a81:	76 6f                	jbe    af2 <__FRAME_END__+0xee>
     a83:	69 64 20 2a 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x535f5f00
     a8a:	53 
     a8b:	33 32                	xor    esi,DWORD PTR [rdx]
     a8d:	5f                   	pop    rdi
     a8e:	54                   	push   rsp
     a8f:	59                   	pop    rcx
     a90:	50                   	push   rax
     a91:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
     a95:	74 00                	je     a97 <__FRAME_END__+0x93>
     a97:	5f                   	pop    rdi
     a98:	5f                   	pop    rdi
     a99:	53                   	push   rbx
     a9a:	54                   	push   rsp
     a9b:	44                   	rex.R
     a9c:	43 5f                	rex.XB pop r15
     a9e:	4e                   	rex.WRX
     a9f:	4f 5f                	rex.WRXB pop r15
     aa1:	54                   	push   rsp
     aa2:	48 52                	rex.W push rdx
     aa4:	45                   	rex.RB
     aa5:	41                   	rex.B
     aa6:	44 53                	rex.R push rbx
     aa8:	5f                   	pop    rdi
     aa9:	5f                   	pop    rdi
     aaa:	20 31                	and    BYTE PTR [rcx],dh
     aac:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     aaf:	42 59                	rex.X pop rcx
     ab1:	54                   	push   rsp
     ab2:	45 5f                	rex.RB pop r15
     ab4:	4f 52                	rex.WRXB push r10
     ab6:	44                   	rex.R
     ab7:	45 52                	rex.RB push r10
     ab9:	5f                   	pop    rdi
     aba:	5f                   	pop    rdi
     abb:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     abe:	4f 52                	rex.WRXB push r10
     ac0:	44                   	rex.R
     ac1:	45 52                	rex.RB push r10
     ac3:	5f                   	pop    rdi
     ac4:	4c                   	rex.WR
     ac5:	49 54                	rex.WB push r12
     ac7:	54                   	push   rsp
     ac8:	4c                   	rex.WR
     ac9:	45 5f                	rex.RB pop r15
     acb:	45                   	rex.RB
     acc:	4e                   	rex.WRX
     acd:	44                   	rex.R
     ace:	49                   	rex.WB
     acf:	41                   	rex.B
     ad0:	4e 5f                	rex.WRX pop rdi
     ad2:	5f                   	pop    rdi
     ad3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ad6:	4c                   	rex.WR
     ad7:	44                   	rex.R
     ad8:	42                   	rex.X
     ad9:	4c 5f                	rex.WR pop rdi
     adb:	4d                   	rex.WRB
     adc:	49                   	rex.WB
     add:	4e 5f                	rex.WRX pop rdi
     adf:	5f                   	pop    rdi
     ae0:	20 33                	and    BYTE PTR [rbx],dh
     ae2:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
     ae5:	32 31                	xor    dh,BYTE PTR [rcx]
     ae7:	30 33                	xor    BYTE PTR [rbx],dh
     ae9:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
     aec:	31 31                	xor    DWORD PTR [rcx],esi
     aee:	32 30                	xor    dh,BYTE PTR [rax]
     af0:	39 33                	cmp    DWORD PTR [rbx],esi
     af2:	35 30 36 32 36       	xor    eax,0x36323630
     af7:	32 36                	xor    dh,BYTE PTR [rsi]
     af9:	37                   	(bad)  
     afa:	37                   	(bad)  
     afb:	38 31                	cmp    BYTE PTR [rcx],dh
     afd:	37                   	(bad)  
     afe:	33 32                	xor    esi,DWORD PTR [rdx]
     b00:	31 37                	xor    DWORD PTR [rdi],esi
     b02:	35 32 36 30 65       	xor    eax,0x65303632
     b07:	2d 34 39 33 32       	sub    eax,0x32333934
     b0c:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
     b10:	46                   	rex.RX
     b11:	4c 54                	rex.WR push rsp
     b13:	33 32                	xor    esi,DWORD PTR [rdx]
     b15:	5f                   	pop    rdi
     b16:	4d                   	rex.WRB
     b17:	49                   	rex.WB
     b18:	4e 5f                	rex.WRX pop rdi
     b1a:	31 30                	xor    DWORD PTR [rax],esi
     b1c:	5f                   	pop    rdi
     b1d:	45 58                	rex.RB pop r8
     b1f:	50                   	push   rax
     b20:	5f                   	pop    rdi
     b21:	5f                   	pop    rdi
     b22:	20 28                	and    BYTE PTR [rax],ch
     b24:	2d 33 37 29 00       	sub    eax,0x293733
     b29:	5f                   	pop    rdi
     b2a:	5f                   	pop    rdi
     b2b:	44                   	rex.R
     b2c:	42                   	rex.X
     b2d:	4c 5f                	rex.WR pop rdi
     b2f:	48                   	rex.W
     b30:	41 53                	push   r11
     b32:	5f                   	pop    rdi
     b33:	44                   	rex.R
     b34:	45                   	rex.RB
     b35:	4e                   	rex.WRX
     b36:	4f 52                	rex.WRXB push r10
     b38:	4d 5f                	rex.WRB pop r15
     b3a:	5f                   	pop    rdi
     b3b:	20 31                	and    BYTE PTR [rcx],dh
     b3d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b40:	49                   	rex.WB
     b41:	4e 54                	rex.WRX push rsp
     b43:	5f                   	pop    rdi
     b44:	4c                   	rex.WR
     b45:	45                   	rex.RB
     b46:	41 53                	push   r11
     b48:	54                   	push   rsp
     b49:	36 34 5f             	ss xor al,0x5f
     b4c:	54                   	push   rsp
     b4d:	59                   	pop    rcx
     b4e:	50                   	push   rax
     b4f:	45 5f                	rex.RB pop r15
     b51:	5f                   	pop    rdi
     b52:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
     b56:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     b5a:	74 00                	je     b5c <__FRAME_END__+0x158>
     b5c:	5f                   	pop    rdi
     b5d:	5f                   	pop    rdi
     b5e:	57                   	push   rdi
     b5f:	43                   	rex.XB
     b60:	48                   	rex.W
     b61:	41 52                	push   r10
     b63:	5f                   	pop    rdi
     b64:	4d                   	rex.WRB
     b65:	49                   	rex.WB
     b66:	4e 5f                	rex.WRX pop rdi
     b68:	5f                   	pop    rdi
     b69:	20 28                	and    BYTE PTR [rax],ch
     b6b:	2d 5f 5f 57 43       	sub    eax,0x43575f5f
     b70:	48                   	rex.W
     b71:	41 52                	push   r10
     b73:	5f                   	pop    rdi
     b74:	4d                   	rex.WRB
     b75:	41 58                	pop    r8
     b77:	5f                   	pop    rdi
     b78:	5f                   	pop    rdi
     b79:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 293c9f <_end+0x92c87>
     b7f:	5f                   	pop    rdi
     b80:	49                   	rex.WB
     b81:	4f 5f                	rex.WRXB pop r15
     b83:	53                   	push   rbx
     b84:	48                   	rex.W
     b85:	4f 57                	rex.WRXB push r15
     b87:	50                   	push   rax
     b88:	4f                   	rex.WRXB
     b89:	49                   	rex.WB
     b8a:	4e 54                	rex.WRX push rsp
     b8c:	20 30                	and    BYTE PTR [rax],dh
     b8e:	34 30                	xor    al,0x30
     b90:	30 00                	xor    BYTE PTR [rax],al
     b92:	5f                   	pop    rdi
     b93:	5f                   	pop    rdi
     b94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b95:	66 66 5f             	data16 pop di
     b98:	74 5f                	je     bf9 <__FRAME_END__+0x1f5>
     b9a:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
     ba1:	20 
     ba2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ba5:	53                   	push   rbx
     ba6:	54                   	push   rsp
     ba7:	44                   	rex.R
     ba8:	43 5f                	rex.XB pop r15
     baa:	55                   	push   rbp
     bab:	54                   	push   rsp
     bac:	46 5f                	rex.RX pop rdi
     bae:	33 32                	xor    esi,DWORD PTR [rdx]
     bb0:	5f                   	pop    rdi
     bb1:	5f                   	pop    rdi
     bb2:	20 31                	and    BYTE PTR [rcx],dh
     bb4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     bb7:	42                   	rex.X
     bb8:	4c                   	rex.WR
     bb9:	4b 53                	rex.WXB push r11
     bbb:	49 5a                	rex.WB pop r10
     bbd:	45 5f                	rex.RB pop r15
     bbf:	54                   	push   rsp
     bc0:	5f                   	pop    rdi
     bc1:	54                   	push   rsp
     bc2:	59                   	pop    rcx
     bc3:	50                   	push   rax
     bc4:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
     bc8:	53                   	push   rbx
     bc9:	59                   	pop    rcx
     bca:	53                   	push   rbx
     bcb:	43                   	rex.XB
     bcc:	41                   	rex.B
     bcd:	4c                   	rex.WR
     bce:	4c 5f                	rex.WR pop rdi
     bd0:	53                   	push   rbx
     bd1:	4c                   	rex.WR
     bd2:	4f                   	rex.WRXB
     bd3:	4e                   	rex.WRX
     bd4:	47 5f                	rex.RXB pop r15
     bd6:	54                   	push   rsp
     bd7:	59                   	pop    rcx
     bd8:	50                   	push   rax
     bd9:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     bdd:	49                   	rex.WB
     bde:	4e 54                	rex.WRX push rsp
     be0:	5f                   	pop    rdi
     be1:	4c                   	rex.WR
     be2:	45                   	rex.RB
     be3:	41 53                	push   r11
     be5:	54                   	push   rsp
     be6:	31 36                	xor    DWORD PTR [rsi],esi
     be8:	5f                   	pop    rdi
     be9:	4d                   	rex.WRB
     bea:	41 58                	pop    r8
     bec:	5f                   	pop    rdi
     bed:	5f                   	pop    rdi
     bee:	20 30                	and    BYTE PTR [rax],dh
     bf0:	78 37                	js     c29 <__FRAME_END__+0x225>
     bf2:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
     bf8:	4c                   	rex.WR
     bf9:	44                   	rex.R
     bfa:	42                   	rex.X
     bfb:	4c 5f                	rex.WR pop rdi
     bfd:	52                   	push   rdx
     bfe:	45                   	rex.RB
     bff:	44                   	rex.R
     c00:	49 52                	rex.WB push r10
     c02:	5f                   	pop    rdi
     c03:	44                   	rex.R
     c04:	45                   	rex.RB
     c05:	43                   	rex.XB
     c06:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
     c0a:	6d                   	ins    DWORD PTR es:[rdi],dx
     c0b:	65 29 20             	sub    DWORD PTR gs:[rax],esp
     c0e:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     c11:	55                   	push   rbp
     c12:	20 43 31             	and    BYTE PTR [rbx+0x31],al
     c15:	31 20                	xor    DWORD PTR [rax],esp
     c17:	37                   	(bad)  
     c18:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
     c1b:	30 20                	xor    BYTE PTR [rax],ah
     c1d:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     c22:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     c28:	72 69                	jb     c93 <__FRAME_END__+0x28f>
     c2a:	63 20                	movsxd esp,DWORD PTR [rax]
     c2c:	2d 6d 61 72 63       	sub    eax,0x6372616d
     c31:	68 3d 78 38 36       	push   0x3638783d
     c36:	2d 36 34 20 2d       	sub    eax,0x2d203436
     c3b:	67 67 64 62 33       	addr32 addr32 fs (bad) 
     c40:	20 2d 66 73 74 61    	and    BYTE PTR [rip+0x61747366],ch        # 61747fac <_end+0x61546f94>
     c46:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     c49:	70 72                	jo     cbd <__FRAME_END__+0x2b9>
     c4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c4c:	74 65                	je     cb3 <__FRAME_END__+0x2af>
     c4e:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     c52:	2d 73 74 72 6f       	sub    eax,0x6f727473
     c57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c58:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     c5c:	53                   	push   rbx
     c5d:	43                   	rex.XB
     c5e:	48                   	rex.W
     c5f:	41 52                	push   r10
     c61:	5f                   	pop    rdi
     c62:	4d                   	rex.WRB
     c63:	41 58                	pop    r8
     c65:	5f                   	pop    rdi
     c66:	5f                   	pop    rdi
     c67:	20 30                	and    BYTE PTR [rax],dh
     c69:	78 37                	js     ca2 <__FRAME_END__+0x29e>
     c6b:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     c6f:	65 78 74             	gs js  ce6 <__FRAME_END__+0x2e2>
     c72:	65 72 6e             	gs jb  ce3 <__FRAME_END__+0x2df>
     c75:	5f                   	pop    rdi
     c76:	61                   	(bad)  
     c77:	6c                   	ins    BYTE PTR es:[rdi],dx
     c78:	77 61                	ja     cdb <__FRAME_END__+0x2d7>
     c7a:	79 73                	jns    cef <__FRAME_END__+0x2eb>
     c7c:	5f                   	pop    rdi
     c7d:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c84:	65 78 74             	gs js  cfb <__FRAME_END__+0x2f7>
     c87:	65 72 6e             	gs jb  cf8 <__FRAME_END__+0x2f4>
     c8a:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     c8d:	61                   	(bad)  
     c8e:	6c                   	ins    BYTE PTR es:[rdi],dx
     c8f:	77 61                	ja     cf2 <__FRAME_END__+0x2ee>
     c91:	79 73                	jns    d06 <__FRAME_END__+0x302>
     c93:	5f                   	pop    rdi
     c94:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     c9b:	5f                   	pop    rdi
     c9c:	5f                   	pop    rdi
     c9d:	61                   	(bad)  
     c9e:	74 74                	je     d14 <__FRAME_END__+0x310>
     ca0:	72 69                	jb     d0b <__FRAME_END__+0x307>
     ca2:	62                   	(bad)  
     ca3:	75 74                	jne    d19 <__FRAME_END__+0x315>
     ca5:	65 5f                	gs pop rdi
     ca7:	5f                   	pop    rdi
     ca8:	20 28                	and    BYTE PTR [rax],ch
     caa:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     cad:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     caf:	75 5f                	jne    d10 <__FRAME_END__+0x30c>
     cb1:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     cb8:	5f                   	pop    rdi
     cb9:	29 29                	sub    DWORD PTR [rcx],ebp
     cbb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     cbe:	46                   	rex.RX
     cbf:	4c 54                	rex.WR push rsp
     cc1:	36 34 5f             	ss xor al,0x5f
     cc4:	44                   	rex.R
     cc5:	49                   	rex.WB
     cc6:	47 5f                	rex.RXB pop r15
     cc8:	5f                   	pop    rdi
     cc9:	20 31                	and    BYTE PTR [rcx],dh
     ccb:	35 00 5f 5f 49       	xor    eax,0x495f5f00
     cd0:	4e 54                	rex.WRX push rsp
     cd2:	5f                   	pop    rdi
     cd3:	46                   	rex.RX
     cd4:	41 53                	push   r11
     cd6:	54                   	push   rsp
     cd7:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     cda:	59                   	pop    rcx
     cdb:	50                   	push   rax
     cdc:	45 5f                	rex.RB pop r15
     cde:	5f                   	pop    rdi
     cdf:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
     ce2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     ce4:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     ce9:	61                   	(bad)  
     cea:	72 00                	jb     cec <__FRAME_END__+0x2e8>
     cec:	5f                   	pop    rdi
     ced:	5f                   	pop    rdi
     cee:	50                   	push   rax
     cef:	49                   	rex.WB
     cf0:	45 5f                	rex.RB pop r15
     cf2:	5f                   	pop    rdi
     cf3:	20 32                	and    BYTE PTR [rdx],dh
     cf5:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     cf8:	4f 5f                	rex.WRXB pop r15
     cfa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cfb:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     d00:	74 20                	je     d22 <__FRAME_END__+0x31e>
     d02:	5f                   	pop    rdi
     d03:	5f                   	pop    rdi
     d04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d05:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
     d0a:	74 00                	je     d0c <__FRAME_END__+0x308>
     d0c:	69 66 5f 74 68 65 6e 	imul   esp,DWORD PTR [rsi+0x5f],0x6e656874
     d13:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
     d16:	5f                   	pop    rdi
     d17:	5f                   	pop    rdi
     d18:	47                   	rex.RXB
     d19:	4c                   	rex.WR
     d1a:	49                   	rex.WB
     d1b:	42                   	rex.X
     d1c:	43 5f                	rex.XB pop r15
     d1e:	55                   	push   rbp
     d1f:	53                   	push   rbx
     d20:	45 5f                	rex.RB pop r15
     d22:	49                   	rex.WB
     d23:	45                   	rex.RB
     d24:	43 5f                	rex.XB pop r15
     d26:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f4662 <_end+0x543f364a>
     d2d:	59                   	pop    rcx
     d2e:	50                   	push   rax
     d2f:	45 53                	rex.RB push r11
     d31:	5f                   	pop    rdi
     d32:	45 58                	rex.RB pop r8
     d34:	54                   	push   rsp
     d35:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d38:	46                   	rex.RX
     d39:	4c 54                	rex.WR push rsp
     d3b:	33 32                	xor    esi,DWORD PTR [rdx]
     d3d:	58                   	pop    rax
     d3e:	5f                   	pop    rdi
     d3f:	48                   	rex.W
     d40:	41 53                	push   r11
     d42:	5f                   	pop    rdi
     d43:	49                   	rex.WB
     d44:	4e                   	rex.WRX
     d45:	46                   	rex.RX
     d46:	49                   	rex.WB
     d47:	4e                   	rex.WRX
     d48:	49 54                	rex.WB push r12
     d4a:	59                   	pop    rcx
     d4b:	5f                   	pop    rdi
     d4c:	5f                   	pop    rdi
     d4d:	20 31                	and    BYTE PTR [rcx],dh
     d4f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d52:	55                   	push   rbp
     d53:	53                   	push   rbx
     d54:	45 5f                	rex.RB pop r15
     d56:	55                   	push   rbp
     d57:	4e                   	rex.WRX
     d58:	49 58                	rex.WB pop r8
     d5a:	39 38                	cmp    DWORD PTR [rax],edi
     d5c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     d5f:	55                   	push   rbp
     d60:	53                   	push   rbx
     d61:	45 5f                	rex.RB pop r15
     d63:	46                   	rex.RX
     d64:	4f 52                	rex.WRXB push r10
     d66:	54                   	push   rsp
     d67:	49                   	rex.WB
     d68:	46 59                	rex.RX pop rcx
     d6a:	5f                   	pop    rdi
     d6b:	4c                   	rex.WR
     d6c:	45 56                	rex.RB push r14
     d6e:	45                   	rex.RB
     d6f:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
     d72:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     d75:	54                   	push   rsp
     d76:	46                   	rex.RX
     d77:	49                   	rex.WB
     d78:	4c                   	rex.WR
     d79:	45 5f                	rex.RB pop r15
     d7b:	53                   	push   rbx
     d7c:	4f 55                	rex.WRXB push r13
     d7e:	52                   	push   rdx
     d7f:	43                   	rex.XB
     d80:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d84:	55                   	push   rbp
     d85:	53                   	push   rbx
     d86:	45 5f                	rex.RB pop r15
     d88:	41 54                	push   r12
     d8a:	46                   	rex.RX
     d8b:	49                   	rex.WB
     d8c:	4c                   	rex.WR
     d8d:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     d91:	55                   	push   rbp
     d92:	49                   	rex.WB
     d93:	4e 54                	rex.WRX push rsp
     d95:	5f                   	pop    rdi
     d96:	4c                   	rex.WR
     d97:	45                   	rex.RB
     d98:	41 53                	push   r11
     d9a:	54                   	push   rsp
     d9b:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
     d9e:	59                   	pop    rcx
     d9f:	50                   	push   rax
     da0:	45 5f                	rex.RB pop r15
     da2:	5f                   	pop    rdi
     da3:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     da6:	73 69                	jae    e11 <__FRAME_END__+0x40d>
     da8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     daa:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     daf:	61                   	(bad)  
     db0:	72 00                	jb     db2 <__FRAME_END__+0x3ae>
     db2:	5f                   	pop    rdi
     db3:	5f                   	pop    rdi
     db4:	53                   	push   rbx
     db5:	49 5a                	rex.WB pop r10
     db7:	45                   	rex.RB
     db8:	4f                   	rex.WRXB
     db9:	46 5f                	rex.RX pop rdi
     dbb:	49                   	rex.WB
     dbc:	4e 54                	rex.WRX push rsp
     dbe:	31 32                	xor    DWORD PTR [rdx],esi
     dc0:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
     dc3:	20 31                	and    BYTE PTR [rcx],dh
     dc5:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     dc9:	4e 54                	rex.WRX push rsp
     dcb:	48 28 66 63          	rex.W sub BYTE PTR [rsi+0x63],spl
     dcf:	74 29                	je     dfa <__FRAME_END__+0x3f6>
     dd1:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     dd4:	61                   	(bad)  
     dd5:	74 74                	je     e4b <__FRAME_END__+0x447>
     dd7:	72 69                	jb     e42 <__FRAME_END__+0x43e>
     dd9:	62                   	(bad)  
     dda:	75 74                	jne    e50 <__FRAME_END__+0x44c>
     ddc:	65 5f                	gs pop rdi
     dde:	5f                   	pop    rdi
     ddf:	20 28                	and    BYTE PTR [rax],ch
     de1:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     de4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     de5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     de6:	74 68                	je     e50 <__FRAME_END__+0x44c>
     de8:	72 6f                	jb     e59 <__FRAME_END__+0x455>
     dea:	77 5f                	ja     e4b <__FRAME_END__+0x447>
     dec:	5f                   	pop    rdi
     ded:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     df0:	4c                   	rex.WR
     df1:	45                   	rex.RB
     df2:	41                   	rex.B
     df3:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
     df6:	20 66 63             	and    BYTE PTR [rsi+0x63],ah
     df9:	74 00                	je     dfb <__FRAME_END__+0x3f7>
     dfb:	5f                   	pop    rdi
     dfc:	49                   	rex.WB
     dfd:	4f 53                	rex.WRXB push r11
     dff:	5f                   	pop    rdi
     e00:	41 54                	push   r12
     e02:	45                   	rex.RB
     e03:	4e                   	rex.WRX
     e04:	44 20 34 00          	and    BYTE PTR [rax+rax*1],r14b
     e08:	5f                   	pop    rdi
     e09:	5f                   	pop    rdi
     e0a:	67 6c                	ins    BYTE PTR es:[edi],dx
     e0c:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     e13:	72 6f                	jb     e84 <__FRAME_END__+0x480>
     e15:	5f                   	pop    rdi
     e16:	77 61                	ja     e79 <__FRAME_END__+0x475>
     e18:	72 6e                	jb     e88 <__FRAME_END__+0x484>
     e1a:	69 6e 67 28 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d28
     e21:	73 61                	jae    e84 <__FRAME_END__+0x480>
     e23:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
     e27:	5f                   	pop    rdi
     e28:	5f                   	pop    rdi
     e29:	67 6c                	ins    BYTE PTR es:[edi],dx
     e2b:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
     e32:	72 6f                	jb     ea3 <__FRAME_END__+0x49f>
     e34:	5f                   	pop    rdi
     e35:	77 61                	ja     e98 <__FRAME_END__+0x494>
     e37:	72 6e                	jb     ea7 <__FRAME_END__+0x4a3>
     e39:	69 6e 67 31 20 28 47 	imul   ebp,DWORD PTR [rsi+0x67],0x47282031
     e40:	43                   	rex.XB
     e41:	43 20 77 61          	rex.XB and BYTE PTR [r15+0x61],sil
     e45:	72 6e                	jb     eb5 <__FRAME_END__+0x4b1>
     e47:	69 6e 67 20 6d 65 73 	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
     e4e:	73 61                	jae    eb1 <__FRAME_END__+0x4ad>
     e50:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
     e54:	5f                   	pop    rdi
     e55:	5f                   	pop    rdi
     e56:	46                   	rex.RX
     e57:	4c 54                	rex.WR push rsp
     e59:	31 32                	xor    DWORD PTR [rdx],esi
     e5b:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
     e5e:	41 53                	push   r11
     e60:	5f                   	pop    rdi
     e61:	51                   	push   rcx
     e62:	55                   	push   rbp
     e63:	49                   	rex.WB
     e64:	45 54                	rex.RB push r12
     e66:	5f                   	pop    rdi
     e67:	4e                   	rex.WRX
     e68:	41                   	rex.B
     e69:	4e 5f                	rex.WRX pop rdi
     e6b:	5f                   	pop    rdi
     e6c:	20 31                	and    BYTE PTR [rcx],dh
     e6e:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     e71:	5f                   	pop    rdi
     e72:	53                   	push   rbx
     e73:	49 5a                	rex.WB pop r10
     e75:	45 20 00             	and    BYTE PTR [r8],r8b
     e78:	5f                   	pop    rdi
     e79:	5f                   	pop    rdi
     e7a:	46                   	rex.RX
     e7b:	4c 54                	rex.WR push rsp
     e7d:	31 32                	xor    DWORD PTR [rdx],esi
     e7f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     e82:	41 58                	pop    r8
     e84:	5f                   	pop    rdi
     e85:	5f                   	pop    rdi
     e86:	20 31                	and    BYTE PTR [rcx],dh
     e88:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
     e8b:	39 37                	cmp    DWORD PTR [rdi],esi
     e8d:	33 31                	xor    esi,DWORD PTR [rcx]
     e8f:	34 39                	xor    al,0x39
     e91:	35 33 35 37 32       	xor    eax,0x32373533
     e96:	33 31                	xor    esi,DWORD PTR [rcx]
     e98:	37                   	(bad)  
     e99:	36 35 30 38 35 37    	ss xor eax,0x37353830
     e9f:	35 39 33 32 36       	xor    eax,0x36323339
     ea4:	36 32 38             	xor    bh,BYTE PTR ss:[rax]
     ea7:	30 30                	xor    BYTE PTR [rax],dh
     ea9:	37                   	(bad)  
     eaa:	30 32                	xor    BYTE PTR [rdx],dh
     eac:	65 2b 34 39          	sub    esi,DWORD PTR gs:[rcx+rdi*1]
     eb0:	33 32                	xor    esi,DWORD PTR [rdx]
     eb2:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
     eb5:	38 00                	cmp    BYTE PTR [rax],al
     eb7:	42 55                	rex.X push rbp
     eb9:	46 53                	rex.RX push rbx
     ebb:	49 5a                	rex.WB pop r10
     ebd:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
     ec0:	4f 5f                	rex.WRXB pop r15
     ec2:	42 55                	rex.X push rbp
     ec4:	46 53                	rex.RX push rbx
     ec6:	49 5a                	rex.WB pop r10
     ec8:	00 5f 41             	add    BYTE PTR [rdi+0x41],bl
     ecb:	54                   	push   rsp
     ecc:	46                   	rex.RX
     ecd:	49                   	rex.WB
     ece:	4c                   	rex.WR
     ecf:	45 5f                	rex.RB pop r15
     ed1:	53                   	push   rbx
     ed2:	4f 55                	rex.WRXB push r13
     ed4:	52                   	push   rdx
     ed5:	43                   	rex.XB
     ed6:	45 20 31             	and    BYTE PTR [r9],r14b
     ed9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     edc:	46                   	rex.RX
     edd:	4c 54                	rex.WR push rsp
     edf:	36 34 58             	ss xor al,0x58
     ee2:	5f                   	pop    rdi
     ee3:	44                   	rex.R
     ee4:	49                   	rex.WB
     ee5:	47 5f                	rex.RXB pop r15
     ee7:	5f                   	pop    rdi
     ee8:	20 31                	and    BYTE PTR [rcx],dh
     eea:	38 00                	cmp    BYTE PTR [rax],al
     eec:	5f                   	pop    rdi
     eed:	5f                   	pop    rdi
     eee:	49                   	rex.WB
     eef:	4e 54                	rex.WRX push rsp
     ef1:	5f                   	pop    rdi
     ef2:	4c                   	rex.WR
     ef3:	45                   	rex.RB
     ef4:	41 53                	push   r11
     ef6:	54                   	push   rsp
     ef7:	31 36                	xor    DWORD PTR [rsi],esi
     ef9:	5f                   	pop    rdi
     efa:	57                   	push   rdi
     efb:	49                   	rex.WB
     efc:	44 54                	rex.R push rsp
     efe:	48 5f                	rex.W pop rdi
     f00:	5f                   	pop    rdi
     f01:	20 31                	and    BYTE PTR [rcx],dh
     f03:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
     f07:	46 53                	rex.RX push rbx
     f09:	49                   	rex.WB
     f0a:	44 5f                	rex.R pop rdi
     f0c:	54                   	push   rsp
     f0d:	5f                   	pop    rdi
     f0e:	54                   	push   rsp
     f0f:	59                   	pop    rcx
     f10:	50                   	push   rax
     f11:	45 20 73 74          	and    BYTE PTR [r11+0x74],r14b
     f15:	72 75                	jb     f8c <__FRAME_END__+0x588>
     f17:	63 74 20 7b          	movsxd esi,DWORD PTR [rax+riz*1+0x7b]
     f1b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     f1e:	74 20                	je     f40 <__FRAME_END__+0x53c>
     f20:	5f                   	pop    rdi
     f21:	5f                   	pop    rdi
     f22:	76 61                	jbe    f85 <__FRAME_END__+0x581>
     f24:	6c                   	ins    BYTE PTR es:[rdi],dx
     f25:	5b                   	pop    rbx
     f26:	32 5d 3b             	xor    bl,BYTE PTR [rbp+0x3b]
     f29:	20 7d 00             	and    BYTE PTR [rbp+0x0],bh
     f2c:	5f                   	pop    rdi
     f2d:	5f                   	pop    rdi
     f2e:	73 73                	jae    fa3 <__FRAME_END__+0x59f>
     f30:	69 7a 65 5f 74 5f 64 	imul   edi,DWORD PTR [rdx+0x65],0x645f745f
     f37:	65 66 69 6e 65 64 20 	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
     f3e:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
     f41:	5f                   	pop    rdi
     f42:	53                   	push   rbx
     f43:	49 5a                	rex.WB pop r10
     f45:	45 5f                	rex.RB pop r15
     f47:	20 00                	and    BYTE PTR [rax],al
     f49:	5f                   	pop    rdi
     f4a:	70 6f                	jo     fbb <__FRAME_END__+0x5b7>
     f4c:	73 00                	jae    f4e <__FRAME_END__+0x54a>
     f4e:	5f                   	pop    rdi
     f4f:	49                   	rex.WB
     f50:	4f 5f                	rex.WRXB pop r15
     f52:	66 65 72 72          	data16 gs jb fc8 <__FRAME_END__+0x5c4>
     f56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f57:	72 5f                	jb     fb8 <__FRAME_END__+0x5b4>
     f59:	75 6e                	jne    fc9 <__FRAME_END__+0x5c5>
     f5b:	6c                   	ins    BYTE PTR es:[rdi],dx
     f5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f5d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
     f60:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
     f64:	66 70 29             	data16 jo f90 <__FRAME_END__+0x58c>
     f67:	20 28                	and    BYTE PTR [rax],ch
     f69:	28 28                	sub    BYTE PTR [rax],ch
     f6b:	5f                   	pop    rdi
     f6c:	5f                   	pop    rdi
     f6d:	66 70 29             	data16 jo f99 <__FRAME_END__+0x595>
     f70:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
     f75:	61                   	(bad)  
     f76:	67 73 20             	addr32 jae f99 <__FRAME_END__+0x595>
     f79:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
     f7d:	4f 5f                	rex.WRXB pop r15
     f7f:	45 52                	rex.RB push r10
     f81:	52                   	push   rdx
     f82:	5f                   	pop    rdi
     f83:	53                   	push   rbx
     f84:	45                   	rex.RB
     f85:	45                   	rex.RB
     f86:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
     f89:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 293faf <_end+0x92f97>
     f8f:	5f                   	pop    rdi
     f90:	5f                   	pop    rdi
     f91:	65 78 74             	gs js  1008 <__FRAME_END__+0x604>
     f94:	65 72 6e             	gs jb  1005 <__FRAME_END__+0x601>
     f97:	5f                   	pop    rdi
     f98:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     f9f:	65 78 74             	gs js  1016 <__FRAME_END__+0x612>
     fa2:	65 72 6e             	gs jb  1013 <__FRAME_END__+0x60f>
     fa5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
     fa8:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
     faf:	5f                   	pop    rdi
     fb0:	5f                   	pop    rdi
     fb1:	61                   	(bad)  
     fb2:	74 74                	je     1028 <__FRAME_END__+0x624>
     fb4:	72 69                	jb     101f <__FRAME_END__+0x61b>
     fb6:	62                   	(bad)  
     fb7:	75 74                	jne    102d <__FRAME_END__+0x629>
     fb9:	65 5f                	gs pop rdi
     fbb:	5f                   	pop    rdi
     fbc:	20 28                	and    BYTE PTR [rax],ch
     fbe:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
     fc1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     fc3:	75 5f                	jne    1024 <__FRAME_END__+0x620>
     fc5:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
     fcc:	5f                   	pop    rdi
     fcd:	29 29                	sub    DWORD PTR [rcx],ebp
     fcf:	00 5f 47             	add    BYTE PTR [rdi+0x47],bl
     fd2:	43                   	rex.XB
     fd3:	43 5f                	rex.XB pop r15
     fd5:	53                   	push   rbx
     fd6:	49 5a                	rex.WB pop r10
     fd8:	45 5f                	rex.RB pop r15
     fda:	54                   	push   rsp
     fdb:	20 00                	and    BYTE PTR [rax],al
     fdd:	5f                   	pop    rdi
     fde:	5f                   	pop    rdi
     fdf:	46                   	rex.RX
     fe0:	4c 54                	rex.WR push rsp
     fe2:	33 32                	xor    esi,DWORD PTR [rdx]
     fe4:	5f                   	pop    rdi
     fe5:	48                   	rex.W
     fe6:	41 53                	push   r11
     fe8:	5f                   	pop    rdi
     fe9:	44                   	rex.R
     fea:	45                   	rex.RB
     feb:	4e                   	rex.WRX
     fec:	4f 52                	rex.WRXB push r10
     fee:	4d 5f                	rex.WRB pop r15
     ff0:	5f                   	pop    rdi
     ff1:	20 31                	and    BYTE PTR [rcx],dh
     ff3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ff6:	75 6e                	jne    1066 <__FRAME_END__+0x662>
     ff8:	69 78 5f 5f 20 31 00 	imul   edi,DWORD PTR [rax+0x5f],0x31205f
     fff:	5f                   	pop    rdi
    1000:	5f                   	pop    rdi
    1001:	47                   	rex.RXB
    1002:	43                   	rex.XB
    1003:	43 5f                	rex.XB pop r15
    1005:	48                   	rex.W
    1006:	41 56                	push   r14
    1008:	45 5f                	rex.RB pop r15
    100a:	53                   	push   rbx
    100b:	59                   	pop    rcx
    100c:	4e                   	rex.WRX
    100d:	43 5f                	rex.XB pop r15
    100f:	43                   	rex.XB
    1010:	4f                   	rex.WRXB
    1011:	4d 50                	rex.WRB push r8
    1013:	41 52                	push   r10
    1015:	45 5f                	rex.RB pop r15
    1017:	41                   	rex.B
    1018:	4e                   	rex.WRX
    1019:	44 5f                	rex.R pop rdi
    101b:	53                   	push   rbx
    101c:	57                   	push   rdi
    101d:	41 50                	push   r8
    101f:	5f                   	pop    rdi
    1020:	31 20                	xor    DWORD PTR [rax],esp
    1022:	31 00                	xor    DWORD PTR [rax],eax
    1024:	5f                   	pop    rdi
    1025:	49                   	rex.WB
    1026:	4f 5f                	rex.WRXB pop r15
    1028:	73 61                	jae    108b <__FRAME_END__+0x687>
    102a:	76 65                	jbe    1091 <__FRAME_END__+0x68d>
    102c:	5f                   	pop    rdi
    102d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    102f:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1033:	46                   	rex.RX
    1034:	4c 54                	rex.WR push rsp
    1036:	36 34 58             	ss xor al,0x58
    1039:	5f                   	pop    rdi
    103a:	4d                   	rex.WRB
    103b:	49                   	rex.WB
    103c:	4e 5f                	rex.WRX pop rdi
    103e:	45 58                	rex.RB pop r8
    1040:	50                   	push   rax
    1041:	5f                   	pop    rdi
    1042:	5f                   	pop    rdi
    1043:	20 28                	and    BYTE PTR [rax],ch
    1045:	2d 31 36 33 38       	sub    eax,0x38333631
    104a:	31 29                	xor    DWORD PTR [rcx],ebp
    104c:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    104f:	53                   	push   rbx
    1050:	44 5f                	rex.R pop rdi
    1052:	53                   	push   rbx
    1053:	49 5a                	rex.WB pop r10
    1055:	45 5f                	rex.RB pop r15
    1057:	54                   	push   rsp
    1058:	5f                   	pop    rdi
    1059:	20 00                	and    BYTE PTR [rax],al
    105b:	5f                   	pop    rdi
    105c:	5f                   	pop    rdi
    105d:	73 74                	jae    10d3 <__FRAME_END__+0x6cf>
    105f:	75 62                	jne    10c3 <__FRAME_END__+0x6bf>
    1061:	5f                   	pop    rdi
    1062:	73 65                	jae    10c9 <__FRAME_END__+0x6c5>
    1064:	74 6c                	je     10d2 <__FRAME_END__+0x6ce>
    1066:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1067:	67 69 6e 20 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x20],0x465f5f00
    106e:	46 
    106f:	4c 54                	rex.WR push rsp
    1071:	5f                   	pop    rdi
    1072:	44                   	rex.R
    1073:	49                   	rex.WB
    1074:	47 5f                	rex.RXB pop r15
    1076:	5f                   	pop    rdi
    1077:	20 36                	and    BYTE PTR [rsi],dh
    1079:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    107c:	49                   	rex.WB
    107d:	4e 54                	rex.WRX push rsp
    107f:	5f                   	pop    rdi
    1080:	46                   	rex.RX
    1081:	41 53                	push   r11
    1083:	54                   	push   rsp
    1084:	31 36                	xor    DWORD PTR [rsi],esi
    1086:	5f                   	pop    rdi
    1087:	57                   	push   rdi
    1088:	49                   	rex.WB
    1089:	44 54                	rex.R push rsp
    108b:	48 5f                	rex.W pop rdi
    108d:	5f                   	pop    rdi
    108e:	20 36                	and    BYTE PTR [rsi],dh
    1090:	34 00                	xor    al,0x0
    1092:	5f                   	pop    rdi
    1093:	5f                   	pop    rdi
    1094:	47                   	rex.RXB
    1095:	43                   	rex.XB
    1096:	43 5f                	rex.XB pop r15
    1098:	41 54                	push   r12
    109a:	4f                   	rex.WRXB
    109b:	4d                   	rex.WRB
    109c:	49                   	rex.WB
    109d:	43 5f                	rex.XB pop r15
    109f:	42                   	rex.X
    10a0:	4f                   	rex.WRXB
    10a1:	4f                   	rex.WRXB
    10a2:	4c 5f                	rex.WR pop rdi
    10a4:	4c                   	rex.WR
    10a5:	4f                   	rex.WRXB
    10a6:	43                   	rex.XB
    10a7:	4b 5f                	rex.WXB pop r15
    10a9:	46 52                	rex.RX push rdx
    10ab:	45                   	rex.RB
    10ac:	45 20 32             	and    BYTE PTR [r10],r14b
    10af:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    10b2:	4f 5f                	rex.WRXB pop r15
    10b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10b5:	66 66 5f             	data16 pop di
    10b8:	74 20                	je     10da <__FRAME_END__+0x6d6>
    10ba:	5f                   	pop    rdi
    10bb:	5f                   	pop    rdi
    10bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10bd:	66 66 5f             	data16 pop di
    10c0:	74 00                	je     10c2 <__FRAME_END__+0x6be>
    10c2:	5f                   	pop    rdi
    10c3:	5f                   	pop    rdi
    10c4:	70 69                	jo     112f <__FRAME_END__+0x72b>
    10c6:	65 5f                	gs pop rdi
    10c8:	5f                   	pop    rdi
    10c9:	20 32                	and    BYTE PTR [rdx],dh
    10cb:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    10ce:	54                   	push   rsp
    10cf:	44                   	rex.R
    10d0:	49                   	rex.WB
    10d1:	4f 5f                	rex.WRXB pop r15
    10d3:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    10d6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10d9:	44                   	rex.R
    10da:	45                   	rex.RB
    10db:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    10de:	5f                   	pop    rdi
    10df:	4d                   	rex.WRB
    10e0:	49                   	rex.WB
    10e1:	4e 5f                	rex.WRX pop rdi
    10e3:	5f                   	pop    rdi
    10e4:	20 31                	and    BYTE PTR [rcx],dh
    10e6:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    10ec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    10ef:	49                   	rex.WB
    10f0:	4e 54                	rex.WRX push rsp
    10f2:	4d                   	rex.WRB
    10f3:	41 58                	pop    r8
    10f5:	5f                   	pop    rdi
    10f6:	4d                   	rex.WRB
    10f7:	41 58                	pop    r8
    10f9:	5f                   	pop    rdi
    10fa:	5f                   	pop    rdi
    10fb:	20 30                	and    BYTE PTR [rax],dh
    10fd:	78 37                	js     1136 <__FRAME_END__+0x732>
    10ff:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1106:	66 66 66 66 66 66 66 
    110d:	66 4c 00 5f 42       	data16 rex.WR add BYTE PTR [rdi+0x42],r11b
    1112:	49 54                	rex.WB push r12
    1114:	53                   	push   rbx
    1115:	5f                   	pop    rdi
    1116:	4c                   	rex.WR
    1117:	49                   	rex.WB
    1118:	42                   	rex.X
    1119:	49                   	rex.WB
    111a:	4f 5f                	rex.WRXB pop r15
    111c:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    111f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1122:	47                   	rex.RXB
    1123:	43                   	rex.XB
    1124:	43 5f                	rex.XB pop r15
    1126:	49                   	rex.WB
    1127:	45                   	rex.RB
    1128:	43 5f                	rex.XB pop r15
    112a:	35 35 39 20 32       	xor    eax,0x32203935
    112f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1132:	46                   	rex.RX
    1133:	4c 54                	rex.WR push rsp
    1135:	31 32                	xor    DWORD PTR [rdx],esi
    1137:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    113a:	49                   	rex.WB
    113b:	4e 5f                	rex.WRX pop rdi
    113d:	45 58                	rex.RB pop r8
    113f:	50                   	push   rax
    1140:	5f                   	pop    rdi
    1141:	5f                   	pop    rdi
    1142:	20 28                	and    BYTE PTR [rax],ch
    1144:	2d 31 36 33 38       	sub    eax,0x38333631
    1149:	31 29                	xor    DWORD PTR [rcx],ebp
    114b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    114e:	46                   	rex.RX
    114f:	4c 54                	rex.WR push rsp
    1151:	33 32                	xor    esi,DWORD PTR [rdx]
    1153:	5f                   	pop    rdi
    1154:	48                   	rex.W
    1155:	41 53                	push   r11
    1157:	5f                   	pop    rdi
    1158:	51                   	push   rcx
    1159:	55                   	push   rbp
    115a:	49                   	rex.WB
    115b:	45 54                	rex.RB push r12
    115d:	5f                   	pop    rdi
    115e:	4e                   	rex.WRX
    115f:	41                   	rex.B
    1160:	4e 5f                	rex.WRX pop rdi
    1162:	5f                   	pop    rdi
    1163:	20 31                	and    BYTE PTR [rcx],dh
    1165:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    1168:	53                   	push   rbx
    1169:	44 5f                	rex.R pop rdi
    116b:	53                   	push   rbx
    116c:	49 5a                	rex.WB pop r10
    116e:	45 5f                	rex.RB pop r15
    1170:	54                   	push   rsp
    1171:	5f                   	pop    rdi
    1172:	44                   	rex.R
    1173:	45                   	rex.RB
    1174:	46                   	rex.RX
    1175:	49                   	rex.WB
    1176:	4e                   	rex.WRX
    1177:	45                   	rex.RB
    1178:	44 5f                	rex.R pop rdi
    117a:	20 00                	and    BYTE PTR [rax],al
    117c:	5f                   	pop    rdi
    117d:	5f                   	pop    rdi
    117e:	55                   	push   rbp
    117f:	49                   	rex.WB
    1180:	4e 54                	rex.WRX push rsp
    1182:	5f                   	pop    rdi
    1183:	4c                   	rex.WR
    1184:	45                   	rex.RB
    1185:	41 53                	push   r11
    1187:	54                   	push   rsp
    1188:	31 36                	xor    DWORD PTR [rsi],esi
    118a:	5f                   	pop    rdi
    118b:	4d                   	rex.WRB
    118c:	41 58                	pop    r8
    118e:	5f                   	pop    rdi
    118f:	5f                   	pop    rdi
    1190:	20 30                	and    BYTE PTR [rax],dh
    1192:	78 66                	js     11fa <__FRAME_END__+0x7f6>
    1194:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    119a:	55                   	push   rbp
    119b:	49                   	rex.WB
    119c:	4e 54                	rex.WRX push rsp
    119e:	5f                   	pop    rdi
    119f:	46                   	rex.RX
    11a0:	41 53                	push   r11
    11a2:	54                   	push   rsp
    11a3:	36 34 5f             	ss xor al,0x5f
    11a6:	4d                   	rex.WRB
    11a7:	41 58                	pop    r8
    11a9:	5f                   	pop    rdi
    11aa:	5f                   	pop    rdi
    11ab:	20 30                	and    BYTE PTR [rax],dh
    11ad:	78 66                	js     1215 <__FRAME_END__+0x811>
    11af:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    11b6:	66 66 66 66 66 66 66 
    11bd:	66 55                	push   bp
    11bf:	4c 00 5f 49          	rex.WR add BYTE PTR [rdi+0x49],r11b
    11c3:	4f 5f                	rex.WRXB pop r15
    11c5:	45 52                	rex.RB push r10
    11c7:	52                   	push   rdx
    11c8:	5f                   	pop    rdi
    11c9:	53                   	push   rbx
    11ca:	45                   	rex.RB
    11cb:	45                   	rex.RB
    11cc:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    11cf:	78 32                	js     1203 <__FRAME_END__+0x7ff>
    11d1:	30 00                	xor    BYTE PTR [rax],al
    11d3:	5f                   	pop    rdi
    11d4:	5f                   	pop    rdi
    11d5:	61                   	(bad)  
    11d6:	74 74                	je     124c <__FRAME_END__+0x848>
    11d8:	72 69                	jb     1243 <__FRAME_END__+0x83f>
    11da:	62                   	(bad)  
    11db:	75 74                	jne    1251 <__FRAME_END__+0x84d>
    11dd:	65 5f                	gs pop rdi
    11df:	75 73                	jne    1254 <__FRAME_END__+0x850>
    11e1:	65 64 5f             	gs fs pop rdi
    11e4:	5f                   	pop    rdi
    11e5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    11e8:	61                   	(bad)  
    11e9:	74 74                	je     125f <__FRAME_END__+0x85b>
    11eb:	72 69                	jb     1256 <__FRAME_END__+0x852>
    11ed:	62                   	(bad)  
    11ee:	75 74                	jne    1264 <__FRAME_END__+0x860>
    11f0:	65 5f                	gs pop rdi
    11f2:	5f                   	pop    rdi
    11f3:	20 28                	and    BYTE PTR [rax],ch
    11f5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    11f8:	75 73                	jne    126d <__FRAME_END__+0x869>
    11fa:	65 64 5f             	gs fs pop rdi
    11fd:	5f                   	pop    rdi
    11fe:	29 29                	sub    DWORD PTR [rcx],ebp
    1200:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1203:	61                   	(bad)  
    1204:	74 74                	je     127a <__FRAME_END__+0x876>
    1206:	72 69                	jb     1271 <__FRAME_END__+0x86d>
    1208:	62                   	(bad)  
    1209:	75 74                	jne    127f <__FRAME_END__+0x87b>
    120b:	65 5f                	gs pop rdi
    120d:	61                   	(bad)  
    120e:	72 74                	jb     1284 <__FRAME_END__+0x880>
    1210:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    1217:	5f                   	pop    rdi
    1218:	5f                   	pop    rdi
    1219:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    121c:	61                   	(bad)  
    121d:	74 74                	je     1293 <__FRAME_END__+0x88f>
    121f:	72 69                	jb     128a <__FRAME_END__+0x886>
    1221:	62                   	(bad)  
    1222:	75 74                	jne    1298 <__FRAME_END__+0x894>
    1224:	65 5f                	gs pop rdi
    1226:	5f                   	pop    rdi
    1227:	20 28                	and    BYTE PTR [rax],ch
    1229:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    122c:	61                   	(bad)  
    122d:	72 74                	jb     12a3 <__FRAME_END__+0x89f>
    122f:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    1236:	5f                   	pop    rdi
    1237:	5f                   	pop    rdi
    1238:	29 29                	sub    DWORD PTR [rcx],ebp
    123a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    123d:	4f 5f                	rex.WRXB pop r15
    123f:	66 74 72             	data16 je 12b4 <__FRAME_END__+0x8b0>
    1242:	79 6c                	jns    12b0 <__FRAME_END__+0x8ac>
    1244:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1245:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    1248:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    124f:	29 
    1250:	20 00                	and    BYTE PTR [rax],al
    1252:	5f                   	pop    rdi
    1253:	5f                   	pop    rdi
    1254:	55                   	push   rbp
    1255:	49                   	rex.WB
    1256:	4e 54                	rex.WRX push rsp
    1258:	5f                   	pop    rdi
    1259:	4c                   	rex.WR
    125a:	45                   	rex.RB
    125b:	41 53                	push   r11
    125d:	54                   	push   rsp
    125e:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1261:	41 58                	pop    r8
    1263:	5f                   	pop    rdi
    1264:	5f                   	pop    rdi
    1265:	20 30                	and    BYTE PTR [rax],dh
    1267:	78 66                	js     12cf <__FRAME_END__+0x8cb>
    1269:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    126d:	47                   	rex.RXB
    126e:	4c                   	rex.WR
    126f:	49                   	rex.WB
    1270:	42                   	rex.X
    1271:	43 5f                	rex.XB pop r15
    1273:	55                   	push   rbp
    1274:	53                   	push   rbx
    1275:	45 5f                	rex.RB pop r15
    1277:	4c                   	rex.WR
    1278:	49                   	rex.WB
    1279:	42 5f                	rex.X pop rdi
    127b:	45 58                	rex.RB pop r8
    127d:	54                   	push   rsp
    127e:	32 20                	xor    ah,BYTE PTR [rax]
    1280:	30 00                	xor    BYTE PTR [rax],al
    1282:	5f                   	pop    rdi
    1283:	5f                   	pop    rdi
    1284:	44                   	rex.R
    1285:	45                   	rex.RB
    1286:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    1289:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    128c:	49                   	rex.WB
    128d:	4e 5f                	rex.WRX pop rdi
    128f:	45 58                	rex.RB pop r8
    1291:	50                   	push   rax
    1292:	5f                   	pop    rdi
    1293:	5f                   	pop    rdi
    1294:	20 28                	and    BYTE PTR [rax],ch
    1296:	2d 36 31 34 32       	sub    eax,0x32343136
    129b:	29 00                	sub    DWORD PTR [rax],eax
    129d:	5f                   	pop    rdi
    129e:	5f                   	pop    rdi
    129f:	4b                   	rex.WXB
    12a0:	45 52                	rex.RB push r10
    12a2:	4e                   	rex.WRX
    12a3:	45                   	rex.RB
    12a4:	4c 5f                	rex.WR pop rdi
    12a6:	53                   	push   rbx
    12a7:	54                   	push   rsp
    12a8:	52                   	push   rdx
    12a9:	49                   	rex.WB
    12aa:	43 54                	rex.XB push r12
    12ac:	5f                   	pop    rdi
    12ad:	4e                   	rex.WRX
    12ae:	41                   	rex.B
    12af:	4d                   	rex.WRB
    12b0:	45 53                	rex.RB push r11
    12b2:	20 00                	and    BYTE PTR [rax],al
    12b4:	5f                   	pop    rdi
    12b5:	5f                   	pop    rdi
    12b6:	57                   	push   rdi
    12b7:	43                   	rex.XB
    12b8:	48                   	rex.W
    12b9:	41 52                	push   r10
    12bb:	5f                   	pop    rdi
    12bc:	54                   	push   rsp
    12bd:	59                   	pop    rcx
    12be:	50                   	push   rax
    12bf:	45 5f                	rex.RB pop r15
    12c1:	5f                   	pop    rdi
    12c2:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    12c5:	74 00                	je     12c7 <__FRAME_END__+0x8c3>
    12c7:	5f                   	pop    rdi
    12c8:	5f                   	pop    rdi
    12c9:	49                   	rex.WB
    12ca:	4e 54                	rex.WRX push rsp
    12cc:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    12cf:	41 58                	pop    r8
    12d1:	5f                   	pop    rdi
    12d2:	5f                   	pop    rdi
    12d3:	20 30                	and    BYTE PTR [rax],dh
    12d5:	78 37                	js     130e <__FRAME_END__+0x90a>
    12d7:	66 00 67 65          	data16 add BYTE PTR [rdi+0x65],ah
    12db:	74 63                	je     1340 <__FRAME_END__+0x93c>
    12dd:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    12e0:	70 29                	jo     130b <__FRAME_END__+0x907>
    12e2:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    12e5:	4f 5f                	rex.WRXB pop r15
    12e7:	67 65 74 63          	addr32 gs je 134e <__FRAME_END__+0x94a>
    12eb:	20 28                	and    BYTE PTR [rax],ch
    12ed:	5f                   	pop    rdi
    12ee:	66 70 29             	data16 jo 131a <__FRAME_END__+0x916>
    12f1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12f4:	44                   	rex.R
    12f5:	45                   	rex.RB
    12f6:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    12f9:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    12fc:	50                   	push   rax
    12fd:	53                   	push   rbx
    12fe:	49                   	rex.WB
    12ff:	4c                   	rex.WR
    1300:	4f                   	rex.WRXB
    1301:	4e 5f                	rex.WRX pop rdi
    1303:	5f                   	pop    rdi
    1304:	20 31                	and    BYTE PTR [rcx],dh
    1306:	45 2d 33 33 44 4c    	rex.RB sub eax,0x4c443333
    130c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    130f:	55                   	push   rbp
    1310:	53                   	push   rbx
    1311:	45 5f                	rex.RB pop r15
    1313:	50                   	push   rax
    1314:	4f 53                	rex.WRXB push r11
    1316:	49 58                	rex.WB pop r8
    1318:	31 39                	xor    DWORD PTR [rcx],edi
    131a:	39 35 30 36 00 5f    	cmp    DWORD PTR [rip+0x5f003630],esi        # 5f004950 <_end+0x5ee03938>
    1320:	5f                   	pop    rdi
    1321:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1322:	65 65 64 5f          	gs gs fs pop rdi
    1326:	4e 55                	rex.WRX push rbp
    1328:	4c                   	rex.WR
    1329:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    132d:	52                   	push   rdx
    132e:	45                   	rex.RB
    132f:	44                   	rex.R
    1330:	49 52                	rex.WB push r10
    1332:	45                   	rex.RB
    1333:	43 54                	rex.XB push r12
    1335:	5f                   	pop    rdi
    1336:	4e 54                	rex.WRX push rsp
    1338:	48 5f                	rex.W pop rdi
    133a:	4c                   	rex.WR
    133b:	44                   	rex.R
    133c:	42                   	rex.X
    133d:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    1341:	6d                   	ins    DWORD PTR es:[rdi],dx
    1342:	65 2c 70             	gs sub al,0x70
    1345:	72 6f                	jb     13b6 <__FRAME_END__+0x9b2>
    1347:	74 6f                	je     13b8 <__FRAME_END__+0x9b4>
    1349:	2c 61                	sub    al,0x61
    134b:	6c                   	ins    BYTE PTR es:[rdi],dx
    134c:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    1353:	52                   	push   rdx
    1354:	45                   	rex.RB
    1355:	44                   	rex.R
    1356:	49 52                	rex.WB push r10
    1358:	45                   	rex.RB
    1359:	43 54                	rex.XB push r12
    135b:	5f                   	pop    rdi
    135c:	4e 54                	rex.WRX push rsp
    135e:	48 20 28             	rex.W and BYTE PTR [rax],bpl
    1361:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1362:	61                   	(bad)  
    1363:	6d                   	ins    DWORD PTR es:[rdi],dx
    1364:	65 2c 20             	gs sub al,0x20
    1367:	70 72                	jo     13db <__FRAME_END__+0x9d7>
    1369:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    136a:	74 6f                	je     13db <__FRAME_END__+0x9d7>
    136c:	2c 20                	sub    al,0x20
    136e:	61                   	(bad)  
    136f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1370:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    1377:	52                   	push   rdx
    1378:	45                   	rex.RB
    1379:	44                   	rex.R
    137a:	49 52                	rex.WB push r10
    137c:	45                   	rex.RB
    137d:	43 54                	rex.XB push r12
    137f:	5f                   	pop    rdi
    1380:	4e 54                	rex.WRX push rsp
    1382:	48                   	rex.W
    1383:	4e                   	rex.WRX
    1384:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    1388:	6d                   	ins    DWORD PTR es:[rdi],dx
    1389:	65 2c 70             	gs sub al,0x70
    138c:	72 6f                	jb     13fd <__FRAME_END__+0x9f9>
    138e:	74 6f                	je     13ff <__FRAME_END__+0x9fb>
    1390:	2c 61                	sub    al,0x61
    1392:	6c                   	ins    BYTE PTR es:[rdi],dx
    1393:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    139a:	6d                   	ins    DWORD PTR es:[rdi],dx
    139b:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    139f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13a0:	74 6f                	je     1411 <__FRAME_END__+0xa0d>
    13a2:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    13a5:	61                   	(bad)  
    13a6:	73 6d                	jae    1415 <__FRAME_END__+0xa11>
    13a8:	5f                   	pop    rdi
    13a9:	5f                   	pop    rdi
    13aa:	20 28                	and    BYTE PTR [rax],ch
    13ac:	5f                   	pop    rdi
    13ad:	5f                   	pop    rdi
    13ae:	41 53                	push   r11
    13b0:	4d                   	rex.WRB
    13b1:	4e                   	rex.WRX
    13b2:	41                   	rex.B
    13b3:	4d                   	rex.WRB
    13b4:	45 20 28             	and    BYTE PTR [r8],r13b
    13b7:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    13ba:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    13c1:	5f                   	pop    rdi
    13c2:	54                   	push   rsp
    13c3:	48 52                	rex.W push rdx
    13c5:	4f 57                	rex.WRXB push r15
    13c7:	4e                   	rex.WRX
    13c8:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    13cc:	46                   	rex.RX
    13cd:	4c 54                	rex.WR push rsp
    13cf:	31 32                	xor    DWORD PTR [rdx],esi
    13d1:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    13d4:	41 58                	pop    r8
    13d6:	5f                   	pop    rdi
    13d7:	45 58                	rex.RB pop r8
    13d9:	50                   	push   rax
    13da:	5f                   	pop    rdi
    13db:	5f                   	pop    rdi
    13dc:	20 31                	and    BYTE PTR [rcx],dh
    13de:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    13e1:	34 00                	xor    al,0x0
    13e3:	5f                   	pop    rdi
    13e4:	5f                   	pop    rdi
    13e5:	46                   	rex.RX
    13e6:	4c 54                	rex.WR push rsp
    13e8:	5f                   	pop    rdi
    13e9:	52                   	push   rdx
    13ea:	41                   	rex.B
    13eb:	44                   	rex.R
    13ec:	49 58                	rex.WB pop r8
    13ee:	5f                   	pop    rdi
    13ef:	5f                   	pop    rdi
    13f0:	20 32                	and    BYTE PTR [rdx],dh
    13f2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    13f5:	46                   	rex.RX
    13f6:	4c 54                	rex.WR push rsp
    13f8:	33 32                	xor    esi,DWORD PTR [rdx]
    13fa:	58                   	pop    rax
    13fb:	5f                   	pop    rdi
    13fc:	44                   	rex.R
    13fd:	45                   	rex.RB
    13fe:	4e                   	rex.WRX
    13ff:	4f 52                	rex.WRXB push r10
    1401:	4d 5f                	rex.WRB pop r15
    1403:	4d                   	rex.WRB
    1404:	49                   	rex.WB
    1405:	4e 5f                	rex.WRX pop rdi
    1407:	5f                   	pop    rdi
    1408:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    140b:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    140e:	36 35 36 34 35 38    	ss xor eax,0x38353436
    1414:	34 31                	xor    al,0x31
    1416:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    1419:	35 34 34 31 37       	xor    eax,0x37313434
    141e:	36 35 36 38 37 39    	ss xor eax,0x39373836
    1424:	32 38                	xor    bh,BYTE PTR [rax]
    1426:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    1429:	32 31                	xor    dh,BYTE PTR [rcx]
    142b:	33 37                	xor    esi,DWORD PTR [rdi]
    142d:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1430:	33 32                	xor    esi,DWORD PTR [rdx]
    1432:	34 46                	xor    al,0x46
    1434:	33 32                	xor    esi,DWORD PTR [rdx]
    1436:	78 00                	js     1438 <__FRAME_END__+0xa34>
    1438:	5f                   	pop    rdi
    1439:	5f                   	pop    rdi
    143a:	67 6c                	ins    BYTE PTR es:[edi],dx
    143c:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    1443:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1444:	67 5f                	addr32 pop rdi
    1446:	68 61 73 5f 65       	push   0x655f7361
    144b:	78 74                	js     14c1 <__FRAME_END__+0xabd>
    144d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    144f:	73 69                	jae    14ba <__FRAME_END__+0xab6>
    1451:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1452:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1453:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    1456:	74 29                	je     1481 <__FRAME_END__+0xa7d>
    1458:	20 30                	and    BYTE PTR [rax],dh
    145a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    145d:	50                   	push   rax
    145e:	4d 54                	rex.WRB push r12
    1460:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    1463:	67 73 29             	addr32 jae 148f <__FRAME_END__+0xa8b>
    1466:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    1469:	67 73 00             	addr32 jae 146c <__FRAME_END__+0xa68>
    146c:	5f                   	pop    rdi
    146d:	5f                   	pop    rdi
    146e:	47                   	rex.RXB
    146f:	49                   	rex.WB
    1470:	44 5f                	rex.R pop rdi
    1472:	54                   	push   rsp
    1473:	5f                   	pop    rdi
    1474:	54                   	push   rsp
    1475:	59                   	pop    rcx
    1476:	50                   	push   rax
    1477:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    147b:	55                   	push   rbp
    147c:	33 32                	xor    esi,DWORD PTR [rdx]
    147e:	5f                   	pop    rdi
    147f:	54                   	push   rsp
    1480:	59                   	pop    rcx
    1481:	50                   	push   rax
    1482:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1486:	53                   	push   rbx
    1487:	49 5a                	rex.WB pop r10
    1489:	45                   	rex.RB
    148a:	4f                   	rex.WRXB
    148b:	46 5f                	rex.RX pop rdi
    148d:	4c                   	rex.WR
    148e:	4f                   	rex.WRXB
    148f:	4e                   	rex.WRX
    1490:	47 5f                	rex.RXB pop r15
    1492:	44                   	rex.R
    1493:	4f 55                	rex.WRXB push r13
    1495:	42                   	rex.X
    1496:	4c                   	rex.WR
    1497:	45 5f                	rex.RB pop r15
    1499:	5f                   	pop    rdi
    149a:	20 31                	and    BYTE PTR [rcx],dh
    149c:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    14a0:	44                   	rex.R
    14a1:	42                   	rex.X
    14a2:	4c 5f                	rex.WR pop rdi
    14a4:	48                   	rex.W
    14a5:	41 53                	push   r11
    14a7:	5f                   	pop    rdi
    14a8:	51                   	push   rcx
    14a9:	55                   	push   rbp
    14aa:	49                   	rex.WB
    14ab:	45 54                	rex.RB push r12
    14ad:	5f                   	pop    rdi
    14ae:	4e                   	rex.WRX
    14af:	41                   	rex.B
    14b0:	4e 5f                	rex.WRX pop rdi
    14b2:	5f                   	pop    rdi
    14b3:	20 31                	and    BYTE PTR [rcx],dh
    14b5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14b8:	77 75                	ja     152f <__FRAME_END__+0xb2b>
    14ba:	72 20                	jb     14dc <__FRAME_END__+0xad8>
    14bc:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    14bf:	49 54                	rex.WB push r12
    14c1:	53                   	push   rbx
    14c2:	5f                   	pop    rdi
    14c3:	54                   	push   rsp
    14c4:	59                   	pop    rcx
    14c5:	50                   	push   rax
    14c6:	45 53                	rex.RB push r11
    14c8:	5f                   	pop    rdi
    14c9:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    14cc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    14cf:	4c                   	rex.WR
    14d0:	44                   	rex.R
    14d1:	42                   	rex.X
    14d2:	4c 5f                	rex.WR pop rdi
    14d4:	44                   	rex.R
    14d5:	45                   	rex.RB
    14d6:	4e                   	rex.WRX
    14d7:	4f 52                	rex.WRXB push r10
    14d9:	4d 5f                	rex.WRB pop r15
    14db:	4d                   	rex.WRB
    14dc:	49                   	rex.WB
    14dd:	4e 5f                	rex.WRX pop rdi
    14df:	5f                   	pop    rdi
    14e0:	20 33                	and    BYTE PTR [rbx],dh
    14e2:	2e 36 34 35          	cs ss xor al,0x35
    14e6:	31 39                	xor    DWORD PTR [rcx],edi
    14e8:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38384621 <_end+0x38183609>
    14ee:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    14f1:	34 36                	xor    al,0x36
    14f3:	30 32                	xor    BYTE PTR [rdx],dh
    14f5:	35 32 38 34 30       	xor    eax,0x30343832
    14fa:	35 39 33 33 36       	xor    eax,0x36333339
    14ff:	31 39                	xor    DWORD PTR [rcx],edi
    1501:	34 31                	xor    al,0x31
    1503:	39 38                	cmp    DWORD PTR [rax],edi
    1505:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    1508:	34 39                	xor    al,0x39
    150a:	35 31 4c 00 5f       	xor    eax,0x5f004c31
    150f:	5f                   	pop    rdi
    1510:	50                   	push   rax
    1511:	49                   	rex.WB
    1512:	44 5f                	rex.R pop rdi
    1514:	54                   	push   rsp
    1515:	5f                   	pop    rdi
    1516:	54                   	push   rsp
    1517:	59                   	pop    rcx
    1518:	50                   	push   rax
    1519:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    151d:	53                   	push   rbx
    151e:	33 32                	xor    esi,DWORD PTR [rdx]
    1520:	5f                   	pop    rdi
    1521:	54                   	push   rsp
    1522:	59                   	pop    rcx
    1523:	50                   	push   rax
    1524:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1528:	73 74                	jae    159e <__FRAME_END__+0xb9a>
    152a:	75 62                	jne    158e <__FRAME_END__+0xb8a>
    152c:	5f                   	pop    rdi
    152d:	66 61                	data16 (bad) 
    152f:	74 74                	je     15a5 <__FRAME_END__+0xba1>
    1531:	61                   	(bad)  
    1532:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1535:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
    1538:	73 5f                	jae    1599 <__FRAME_END__+0xb95>
    153a:	65 72 72             	gs jb  15af <__FRAME_END__+0xbab>
    153d:	6c                   	ins    BYTE PTR es:[rdi],dx
    153e:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    1545:	4c 54                	rex.WR push rsp
    1547:	36 34 5f             	ss xor al,0x5f
    154a:	48                   	rex.W
    154b:	41 53                	push   r11
    154d:	5f                   	pop    rdi
    154e:	49                   	rex.WB
    154f:	4e                   	rex.WRX
    1550:	46                   	rex.RX
    1551:	49                   	rex.WB
    1552:	4e                   	rex.WRX
    1553:	49 54                	rex.WB push r12
    1555:	59                   	pop    rcx
    1556:	5f                   	pop    rdi
    1557:	5f                   	pop    rdi
    1558:	20 31                	and    BYTE PTR [rcx],dh
    155a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    155d:	55                   	push   rbp
    155e:	49                   	rex.WB
    155f:	4e 54                	rex.WRX push rsp
    1561:	5f                   	pop    rdi
    1562:	46                   	rex.RX
    1563:	41 53                	push   r11
    1565:	54                   	push   rsp
    1566:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1569:	41 58                	pop    r8
    156b:	5f                   	pop    rdi
    156c:	5f                   	pop    rdi
    156d:	20 30                	and    BYTE PTR [rax],dh
    156f:	78 66                	js     15d7 <__FRAME_END__+0xbd3>
    1571:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1575:	41 54                	push   r12
    1577:	4f                   	rex.WRXB
    1578:	4d                   	rex.WRB
    1579:	49                   	rex.WB
    157a:	43 5f                	rex.XB pop r15
    157c:	48                   	rex.W
    157d:	4c                   	rex.WR
    157e:	45 5f                	rex.RB pop r15
    1580:	52                   	push   rdx
    1581:	45                   	rex.RB
    1582:	4c                   	rex.WR
    1583:	45                   	rex.RB
    1584:	41 53                	push   r11
    1586:	45 20 31             	and    BYTE PTR [r9],r14b
    1589:	33 31                	xor    esi,DWORD PTR [rcx]
    158b:	30 37                	xor    BYTE PTR [rdi],dh
    158d:	32 00                	xor    al,BYTE PTR [rax]
    158f:	5f                   	pop    rdi
    1590:	5f                   	pop    rdi
    1591:	4c                   	rex.WR
    1592:	44                   	rex.R
    1593:	42                   	rex.X
    1594:	4c 5f                	rex.WR pop rdi
    1596:	4d                   	rex.WRB
    1597:	41 58                	pop    r8
    1599:	5f                   	pop    rdi
    159a:	45 58                	rex.RB pop r8
    159c:	50                   	push   rax
    159d:	5f                   	pop    rdi
    159e:	5f                   	pop    rdi
    159f:	20 31                	and    BYTE PTR [rcx],dh
    15a1:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    15a4:	34 00                	xor    al,0x0
    15a6:	5f                   	pop    rdi
    15a7:	5f                   	pop    rdi
    15a8:	73 74                	jae    161e <__FRAME_END__+0xc1a>
    15aa:	75 62                	jne    160e <__FRAME_END__+0xc0a>
    15ac:	5f                   	pop    rdi
    15ad:	67 74 74             	addr32 je 1624 <__FRAME_END__+0xc20>
    15b0:	79 20                	jns    15d2 <__FRAME_END__+0xbce>
    15b2:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    15b5:	49 54                	rex.WB push r12
    15b7:	53                   	push   rbx
    15b8:	5f                   	pop    rdi
    15b9:	54                   	push   rsp
    15ba:	59                   	pop    rcx
    15bb:	50                   	push   rax
    15bc:	45 53                	rex.RB push r11
    15be:	49 5a                	rex.WB pop r10
    15c0:	45 53                	rex.RB push r11
    15c2:	5f                   	pop    rdi
    15c3:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    15c6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    15c9:	55                   	push   rbp
    15ca:	53                   	push   rbx
    15cb:	45                   	rex.RB
    15cc:	43                   	rex.XB
    15cd:	4f                   	rex.WRXB
    15ce:	4e                   	rex.WRX
    15cf:	44 53                	rex.R push rbx
    15d1:	5f                   	pop    rdi
    15d2:	54                   	push   rsp
    15d3:	5f                   	pop    rdi
    15d4:	54                   	push   rsp
    15d5:	59                   	pop    rcx
    15d6:	50                   	push   rax
    15d7:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    15db:	55                   	push   rbp
    15dc:	33 32                	xor    esi,DWORD PTR [rdx]
    15de:	5f                   	pop    rdi
    15df:	54                   	push   rsp
    15e0:	59                   	pop    rcx
    15e1:	50                   	push   rax
    15e2:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    15e6:	4f 5f                	rex.WRXB pop r15
    15e8:	70 65                	jo     164f <__FRAME_END__+0xc4b>
    15ea:	65 6b 63 28 5f       	imul   esp,DWORD PTR gs:[rbx+0x28],0x5f
    15ef:	66 70 29             	data16 jo 161b <__FRAME_END__+0xc17>
    15f2:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    15f5:	4f 5f                	rex.WRXB pop r15
    15f7:	70 65                	jo     165e <__FRAME_END__+0xc5a>
    15f9:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    15fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    1600:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1601:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1604:	64 20 28             	and    BYTE PTR fs:[rax],ch
    1607:	5f                   	pop    rdi
    1608:	66 70 29             	data16 jo 1634 <__FRAME_END__+0xc30>
    160b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    160e:	49                   	rex.WB
    160f:	4e 54                	rex.WRX push rsp
    1611:	50                   	push   rax
    1612:	54                   	push   rsp
    1613:	52                   	push   rdx
    1614:	5f                   	pop    rdi
    1615:	54                   	push   rsp
    1616:	59                   	pop    rcx
    1617:	50                   	push   rax
    1618:	45 5f                	rex.RB pop r15
    161a:	5f                   	pop    rdi
    161b:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    161f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1623:	74 00                	je     1625 <__FRAME_END__+0xc21>
    1625:	5f                   	pop    rdi
    1626:	5f                   	pop    rdi
    1627:	44                   	rex.R
    1628:	45                   	rex.RB
    1629:	43                   	rex.XB
    162a:	36 34 5f             	ss xor al,0x5f
    162d:	4d                   	rex.WRB
    162e:	41 58                	pop    r8
    1630:	5f                   	pop    rdi
    1631:	5f                   	pop    rdi
    1632:	20 39                	and    BYTE PTR [rcx],bh
    1634:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    1637:	39 39                	cmp    DWORD PTR [rcx],edi
    1639:	39 39                	cmp    DWORD PTR [rcx],edi
    163b:	39 39                	cmp    DWORD PTR [rcx],edi
    163d:	39 39                	cmp    DWORD PTR [rcx],edi
    163f:	39 39                	cmp    DWORD PTR [rcx],edi
    1641:	39 39                	cmp    DWORD PTR [rcx],edi
    1643:	39 45 33             	cmp    DWORD PTR [rbp+0x33],eax
    1646:	38 34 44             	cmp    BYTE PTR [rsp+rax*2],dh
    1649:	44 00 73 79          	add    BYTE PTR [rbx+0x79],r14b
    164d:	73 5f                	jae    16ae <__FRAME_END__+0xcaa>
    164f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1650:	65 72 72             	gs jb  16c5 <__FRAME_END__+0xcc1>
    1653:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1656:	47                   	rex.RXB
    1657:	43                   	rex.XB
    1658:	43 5f                	rex.XB pop r15
    165a:	41 54                	push   r12
    165c:	4f                   	rex.WRXB
    165d:	4d                   	rex.WRB
    165e:	49                   	rex.WB
    165f:	43 5f                	rex.XB pop r15
    1661:	49                   	rex.WB
    1662:	4e 54                	rex.WRX push rsp
    1664:	5f                   	pop    rdi
    1665:	4c                   	rex.WR
    1666:	4f                   	rex.WRXB
    1667:	43                   	rex.XB
    1668:	4b 5f                	rex.WXB pop r15
    166a:	46 52                	rex.RX push rdx
    166c:	45                   	rex.RB
    166d:	45 20 32             	and    BYTE PTR [r10],r14b
    1670:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    1673:	59                   	pop    rcx
    1674:	53                   	push   rbx
    1675:	5f                   	pop    rdi
    1676:	53                   	push   rbx
    1677:	49 5a                	rex.WB pop r10
    1679:	45 5f                	rex.RB pop r15
    167b:	54                   	push   rsp
    167c:	5f                   	pop    rdi
    167d:	48 20 00             	rex.W and BYTE PTR [rax],al
    1680:	5f                   	pop    rdi
    1681:	5f                   	pop    rdi
    1682:	4d                   	rex.WRB
    1683:	4d 58                	rex.WRB pop r8
    1685:	5f                   	pop    rdi
    1686:	5f                   	pop    rdi
    1687:	20 31                	and    BYTE PTR [rcx],dh
    1689:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    168c:	42                   	rex.X
    168d:	4c                   	rex.WR
    168e:	4b                   	rex.WXB
    168f:	43                   	rex.XB
    1690:	4e 54                	rex.WRX push rsp
    1692:	5f                   	pop    rdi
    1693:	54                   	push   rsp
    1694:	5f                   	pop    rdi
    1695:	54                   	push   rsp
    1696:	59                   	pop    rcx
    1697:	50                   	push   rax
    1698:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    169c:	53                   	push   rbx
    169d:	59                   	pop    rcx
    169e:	53                   	push   rbx
    169f:	43                   	rex.XB
    16a0:	41                   	rex.B
    16a1:	4c                   	rex.WR
    16a2:	4c 5f                	rex.WR pop rdi
    16a4:	53                   	push   rbx
    16a5:	4c                   	rex.WR
    16a6:	4f                   	rex.WRXB
    16a7:	4e                   	rex.WRX
    16a8:	47 5f                	rex.RXB pop r15
    16aa:	54                   	push   rsp
    16ab:	59                   	pop    rcx
    16ac:	50                   	push   rax
    16ad:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    16b1:	4f 5f                	rex.WRXB pop r15
    16b3:	53                   	push   rbx
    16b4:	48                   	rex.W
    16b5:	4f 57                	rex.WRXB push r15
    16b7:	42                   	rex.X
    16b8:	41 53                	push   r11
    16ba:	45 20 30             	and    BYTE PTR [r8],r14b
    16bd:	32 30                	xor    dh,BYTE PTR [rax]
    16bf:	30 00                	xor    BYTE PTR [rax],al
    16c1:	5f                   	pop    rdi
    16c2:	5f                   	pop    rdi
    16c3:	73 74                	jae    1739 <__FRAME_END__+0xd35>
    16c5:	75 62                	jne    1729 <__FRAME_END__+0xd25>
    16c7:	5f                   	pop    rdi
    16c8:	73 74                	jae    173e <__FRAME_END__+0xd3a>
    16ca:	74 79                	je     1745 <__FRAME_END__+0xd41>
    16cc:	20 00                	and    BYTE PTR [rax],al
    16ce:	5f                   	pop    rdi
    16cf:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
    16d6:	5f                   	pop    rdi
    16d7:	5f                   	pop    rdi
    16d8:	48                   	rex.W
    16d9:	41 56                	push   r14
    16db:	45 5f                	rex.RB pop r15
    16dd:	47                   	rex.RXB
    16de:	45                   	rex.RB
    16df:	4e                   	rex.WRX
    16e0:	45 52                	rex.RB push r10
    16e2:	49                   	rex.WB
    16e3:	43 5f                	rex.XB pop r15
    16e5:	53                   	push   rbx
    16e6:	45                   	rex.RB
    16e7:	4c                   	rex.WR
    16e8:	45                   	rex.RB
    16e9:	43 54                	rex.XB push r12
    16eb:	49                   	rex.WB
    16ec:	4f                   	rex.WRXB
    16ed:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    16f0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16f3:	52                   	push   rdx
    16f4:	4c                   	rex.WR
    16f5:	49                   	rex.WB
    16f6:	4d                   	rex.WRB
    16f7:	36 34 5f             	ss xor al,0x5f
    16fa:	54                   	push   rsp
    16fb:	5f                   	pop    rdi
    16fc:	54                   	push   rsp
    16fd:	59                   	pop    rcx
    16fe:	50                   	push   rax
    16ff:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1703:	55                   	push   rbp
    1704:	51                   	push   rcx
    1705:	55                   	push   rbp
    1706:	41                   	rex.B
    1707:	44 5f                	rex.R pop rdi
    1709:	54                   	push   rsp
    170a:	59                   	pop    rcx
    170b:	50                   	push   rax
    170c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1710:	46                   	rex.RX
    1711:	4c 54                	rex.WR push rsp
    1713:	31 32                	xor    DWORD PTR [rdx],esi
    1715:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1718:	41                   	rex.B
    1719:	4e 54                	rex.WRX push rsp
    171b:	5f                   	pop    rdi
    171c:	44                   	rex.R
    171d:	49                   	rex.WB
    171e:	47 5f                	rex.RXB pop r15
    1720:	5f                   	pop    rdi
    1721:	20 31                	and    BYTE PTR [rcx],dh
    1723:	31 33                	xor    DWORD PTR [rbx],esi
    1725:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1728:	4f 52                	rex.WRXB push r10
    172a:	44                   	rex.R
    172b:	45 52                	rex.RB push r10
    172d:	5f                   	pop    rdi
    172e:	4c                   	rex.WR
    172f:	49 54                	rex.WB push r12
    1731:	54                   	push   rsp
    1732:	4c                   	rex.WR
    1733:	45 5f                	rex.RB pop r15
    1735:	45                   	rex.RB
    1736:	4e                   	rex.WRX
    1737:	44                   	rex.R
    1738:	49                   	rex.WB
    1739:	41                   	rex.B
    173a:	4e 5f                	rex.WRX pop rdi
    173c:	5f                   	pop    rdi
    173d:	20 31                	and    BYTE PTR [rcx],dh
    173f:	32 33                	xor    dh,BYTE PTR [rbx]
    1741:	34 00                	xor    al,0x0
    1743:	5f                   	pop    rdi
    1744:	5f                   	pop    rdi
    1745:	55                   	push   rbp
    1746:	53                   	push   rbx
    1747:	45 5f                	rex.RB pop r15
    1749:	58                   	pop    rax
    174a:	4f 50                	rex.WRXB push r8
    174c:	45                   	rex.RB
    174d:	4e 32 4b 20          	rex.WRX xor r9b,BYTE PTR [rbx+0x20]
    1751:	31 00                	xor    DWORD PTR [rax],eax
    1753:	5f                   	pop    rdi
    1754:	5f                   	pop    rdi
    1755:	53                   	push   rbx
    1756:	49 5a                	rex.WB pop r10
    1758:	45                   	rex.RB
    1759:	4f                   	rex.WRXB
    175a:	46 5f                	rex.RX pop rdi
    175c:	50                   	push   rax
    175d:	54                   	push   rsp
    175e:	52                   	push   rdx
    175f:	44                   	rex.R
    1760:	49                   	rex.WB
    1761:	46                   	rex.RX
    1762:	46 5f                	rex.RX pop rdi
    1764:	54                   	push   rsp
    1765:	5f                   	pop    rdi
    1766:	5f                   	pop    rdi
    1767:	20 38                	and    BYTE PTR [rax],bh
    1769:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    176c:	4f 53                	rex.WRXB push r11
    176e:	5f                   	pop    rdi
    176f:	54                   	push   rsp
    1770:	52                   	push   rdx
    1771:	55                   	push   rbp
    1772:	4e                   	rex.WRX
    1773:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    1776:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    177a:	44                   	rex.R
    177b:	45                   	rex.RB
    177c:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    177f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    1782:	41                   	rex.B
    1783:	4e 54                	rex.WRX push rsp
    1785:	5f                   	pop    rdi
    1786:	44                   	rex.R
    1787:	49                   	rex.WB
    1788:	47 5f                	rex.RXB pop r15
    178a:	5f                   	pop    rdi
    178b:	20 33                	and    BYTE PTR [rbx],dh
    178d:	34 00                	xor    al,0x0
    178f:	5f                   	pop    rdi
    1790:	5f                   	pop    rdi
    1791:	55                   	push   rbp
    1792:	53                   	push   rbx
    1793:	45 5f                	rex.RB pop r15
    1795:	49 53                	rex.WB push r11
    1797:	4f                   	rex.WRXB
    1798:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    179b:	20 31                	and    BYTE PTR [rcx],dh
    179d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17a0:	49                   	rex.WB
    17a1:	4e 54                	rex.WRX push rsp
    17a3:	33 32                	xor    esi,DWORD PTR [rdx]
    17a5:	5f                   	pop    rdi
    17a6:	54                   	push   rsp
    17a7:	59                   	pop    rcx
    17a8:	50                   	push   rax
    17a9:	45 5f                	rex.RB pop r15
    17ab:	5f                   	pop    rdi
    17ac:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    17af:	74 00                	je     17b1 <__FRAME_END__+0xdad>
    17b1:	5f                   	pop    rdi
    17b2:	5f                   	pop    rdi
    17b3:	4b                   	rex.WXB
    17b4:	45 52                	rex.RB push r10
    17b6:	4e                   	rex.WRX
    17b7:	45                   	rex.RB
    17b8:	4c 5f                	rex.WR pop rdi
    17ba:	53                   	push   rbx
    17bb:	54                   	push   rsp
    17bc:	52                   	push   rdx
    17bd:	49                   	rex.WB
    17be:	43 54                	rex.XB push r12
    17c0:	5f                   	pop    rdi
    17c1:	4e                   	rex.WRX
    17c2:	41                   	rex.B
    17c3:	4d                   	rex.WRB
    17c4:	45 53                	rex.RB push r11
    17c6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17c9:	55                   	push   rbp
    17ca:	33 32                	xor    esi,DWORD PTR [rdx]
    17cc:	5f                   	pop    rdi
    17cd:	54                   	push   rsp
    17ce:	59                   	pop    rcx
    17cf:	50                   	push   rax
    17d0:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    17d4:	73 69                	jae    183f <__FRAME_END__+0xe3b>
    17d6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17d8:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    17dd:	74 00                	je     17df <__FRAME_END__+0xddb>
    17df:	5f                   	pop    rdi
    17e0:	5f                   	pop    rdi
    17e1:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    17e4:	65 5f                	gs pop rdi
    17e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    17e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17e8:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
    17eb:	5f                   	pop    rdi
    17ec:	73 6d                	jae    185b <__FRAME_END__+0xe57>
    17ee:	61                   	(bad)  
    17ef:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f1:	5f                   	pop    rdi
    17f2:	5f                   	pop    rdi
    17f3:	20 31                	and    BYTE PTR [rcx],dh
    17f5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    17f8:	55                   	push   rbp
    17f9:	53                   	push   rbx
    17fa:	45 5f                	rex.RB pop r15
    17fc:	49 53                	rex.WB push r11
    17fe:	4f                   	rex.WRXB
    17ff:	43 39 35 00 5f 5f 46 	rex.XB cmp DWORD PTR [rip+0x465f5f00],esi        # 465f7706 <_end+0x463f66ee>
    1806:	4c 54                	rex.WR push rsp
    1808:	36 34 58             	ss xor al,0x58
    180b:	5f                   	pop    rdi
    180c:	48                   	rex.W
    180d:	41 53                	push   r11
    180f:	5f                   	pop    rdi
    1810:	44                   	rex.R
    1811:	45                   	rex.RB
    1812:	4e                   	rex.WRX
    1813:	4f 52                	rex.WRXB push r10
    1815:	4d 5f                	rex.WRB pop r15
    1817:	5f                   	pop    rdi
    1818:	20 31                	and    BYTE PTR [rcx],dh
    181a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    181d:	44                   	rex.R
    181e:	45                   	rex.RB
    181f:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    1822:	5f                   	pop    rdi
    1823:	4d                   	rex.WRB
    1824:	41 58                	pop    r8
    1826:	5f                   	pop    rdi
    1827:	45 58                	rex.RB pop r8
    1829:	50                   	push   rax
    182a:	5f                   	pop    rdi
    182b:	5f                   	pop    rdi
    182c:	20 39                	and    BYTE PTR [rcx],bh
    182e:	37                   	(bad)  
    182f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1832:	4f                   	rex.WRXB
    1833:	4e                   	rex.WRX
    1834:	42                   	rex.X
    1835:	46 20 32             	rex.RX and BYTE PTR [rdx],r14b
    1838:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    183b:	55                   	push   rbp
    183c:	53                   	push   rbx
    183d:	45 5f                	rex.RB pop r15
    183f:	49 53                	rex.WB push r11
    1841:	4f                   	rex.WRXB
    1842:	43 39 39             	rex.XB cmp DWORD PTR [r9],edi
    1845:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    1848:	64 65 72 72          	fs gs jb 18be <__FRAME_END__+0xeba>
    184c:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    184f:	64 65 72 72          	fs gs jb 18c5 <__FRAME_END__+0xec1>
    1853:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    1856:	74 61                	je     18b9 <__FRAME_END__+0xeb5>
    1858:	62                   	(bad)  
    1859:	6c                   	ins    BYTE PTR es:[rdi],dx
    185a:	65 5f                	gs pop rdi
    185c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    185d:	66 66 73 65          	data16 data16 jae 18c6 <__FRAME_END__+0xec2>
    1861:	74 00                	je     1863 <__FRAME_END__+0xe5f>
    1863:	5f                   	pop    rdi
    1864:	47 5f                	rex.RXB pop r15
    1866:	49                   	rex.WB
    1867:	4f 5f                	rex.WRXB pop r15
    1869:	49                   	rex.WB
    186a:	4f 5f                	rex.WRXB pop r15
    186c:	46                   	rex.RX
    186d:	49                   	rex.WB
    186e:	4c                   	rex.WR
    186f:	45 5f                	rex.RB pop r15
    1871:	56                   	push   rsi
    1872:	45 52                	rex.RB push r10
    1874:	53                   	push   rbx
    1875:	49                   	rex.WB
    1876:	4f                   	rex.WRXB
    1877:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    187a:	78 32                	js     18ae <__FRAME_END__+0xeaa>
    187c:	30 30                	xor    BYTE PTR [rax],dh
    187e:	30 31                	xor    BYTE PTR [rcx],dh
    1880:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1883:	4f 5f                	rex.WRXB pop r15
    1885:	54                   	push   rsp
    1886:	49                   	rex.WB
    1887:	45                   	rex.RB
    1888:	44 5f                	rex.R pop rdi
    188a:	50                   	push   rax
    188b:	55                   	push   rbp
    188c:	54                   	push   rsp
    188d:	5f                   	pop    rdi
    188e:	47                   	rex.RXB
    188f:	45 54                	rex.RB push r12
    1891:	20 30                	and    BYTE PTR [rax],dh
    1893:	78 34                	js     18c9 <__FRAME_END__+0xec5>
    1895:	30 30                	xor    BYTE PTR [rax],dh
    1897:	00 4c 5f 74          	add    BYTE PTR [rdi+rbx*2+0x74],cl
    189b:	6d                   	ins    DWORD PTR es:[rdi],dx
    189c:	70 6e                	jo     190c <__FRAME_END__+0xf08>
    189e:	61                   	(bad)  
    189f:	6d                   	ins    DWORD PTR es:[rdi],dx
    18a0:	20 32                	and    BYTE PTR [rdx],dh
    18a2:	30 00                	xor    BYTE PTR [rax],al
    18a4:	5f                   	pop    rdi
    18a5:	49                   	rex.WB
    18a6:	4f 5f                	rex.WRXB pop r15
    18a8:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    18ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18ad:	75 70                	jne    191f <__FRAME_END__+0xf1b>
    18af:	5f                   	pop    rdi
    18b0:	72 65                	jb     1917 <__FRAME_END__+0xf13>
    18b2:	67 69 6f 6e 5f 73 74 	imul   ebp,DWORD PTR [edi+0x6e],0x6174735f
    18b9:	61 
    18ba:	72 74                	jb     1930 <__FRAME_END__+0xf2c>
    18bc:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    18bf:	63 74 2c 5f          	movsxd esi,DWORD PTR [rsp+rbp*1+0x5f]
    18c3:	66 70 29             	data16 jo 18ef <__FRAME_END__+0xeeb>
    18c6:	20 00                	and    BYTE PTR [rax],al
    18c8:	5f                   	pop    rdi
    18c9:	5f                   	pop    rdi
    18ca:	53                   	push   rbx
    18cb:	54                   	push   rsp
    18cc:	44                   	rex.R
    18cd:	43 5f                	rex.XB pop r15
    18cf:	49                   	rex.WB
    18d0:	45                   	rex.RB
    18d1:	43 5f                	rex.XB pop r15
    18d3:	35 35 39 5f 43       	xor    eax,0x435f3935
    18d8:	4f                   	rex.WRXB
    18d9:	4d 50                	rex.WRB push r8
    18db:	4c                   	rex.WR
    18dc:	45 58                	rex.RB pop r8
    18de:	5f                   	pop    rdi
    18df:	5f                   	pop    rdi
    18e0:	20 31                	and    BYTE PTR [rcx],dh
    18e2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    18e5:	47                   	rex.RXB
    18e6:	4c                   	rex.WR
    18e7:	49                   	rex.WB
    18e8:	42                   	rex.X
    18e9:	43 5f                	rex.XB pop r15
    18eb:	55                   	push   rbp
    18ec:	53                   	push   rbx
    18ed:	45 5f                	rex.RB pop r15
    18ef:	44                   	rex.R
    18f0:	45 50                	rex.RB push r8
    18f2:	52                   	push   rdx
    18f3:	45                   	rex.RB
    18f4:	43                   	rex.XB
    18f5:	41 54                	push   r12
    18f7:	45                   	rex.RB
    18f8:	44 5f                	rex.R pop rdi
    18fa:	47                   	rex.RXB
    18fb:	45 54                	rex.RB push r12
    18fd:	53                   	push   rbx
    18fe:	20 30                	and    BYTE PTR [rax],dh
    1900:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1903:	4f 5f                	rex.WRXB pop r15
    1905:	48                   	rex.W
    1906:	45 58                	rex.RB pop r8
    1908:	20 30                	and    BYTE PTR [rax],dh
    190a:	31 30                	xor    DWORD PTR [rax],esi
    190c:	30 00                	xor    BYTE PTR [rax],al
    190e:	5f                   	pop    rdi
    190f:	5f                   	pop    rdi
    1910:	46                   	rex.RX
    1911:	4c 54                	rex.WR push rsp
    1913:	36 34 58             	ss xor al,0x58
    1916:	5f                   	pop    rdi
    1917:	4d                   	rex.WRB
    1918:	49                   	rex.WB
    1919:	4e 5f                	rex.WRX pop rdi
    191b:	31 30                	xor    DWORD PTR [rax],esi
    191d:	5f                   	pop    rdi
    191e:	45 58                	rex.RB pop r8
    1920:	50                   	push   rax
    1921:	5f                   	pop    rdi
    1922:	5f                   	pop    rdi
    1923:	20 28                	and    BYTE PTR [rax],ch
    1925:	2d 34 39 33 31       	sub    eax,0x31333934
    192a:	29 00                	sub    DWORD PTR [rax],eax
    192c:	5f                   	pop    rdi
    192d:	5f                   	pop    rdi
    192e:	73 74                	jae    19a4 <__FRAME_END__+0xfa0>
    1930:	75 62                	jne    1994 <__FRAME_END__+0xf90>
    1932:	5f                   	pop    rdi
    1933:	70 75                	jo     19aa <__FRAME_END__+0xfa6>
    1935:	74 6d                	je     19a4 <__FRAME_END__+0xfa0>
    1937:	73 67                	jae    19a0 <__FRAME_END__+0xf9c>
    1939:	20 00                	and    BYTE PTR [rax],al
    193b:	5f                   	pop    rdi
    193c:	49                   	rex.WB
    193d:	4f 5f                	rex.WRXB pop r15
    193f:	72 65                	jb     19a6 <__FRAME_END__+0xfa2>
    1941:	61                   	(bad)  
    1942:	64 5f                	fs pop rdi
    1944:	62 61                	(bad)  
    1946:	73 65                	jae    19ad <__FRAME_END__+0xfa9>
    1948:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    194b:	53                   	push   rbx
    194c:	54                   	push   rsp
    194d:	44                   	rex.R
    194e:	43 5f                	rex.XB pop r15
    1950:	49 53                	rex.WB push r11
    1952:	4f 5f                	rex.WRXB pop r15
    1954:	31 30                	xor    DWORD PTR [rax],esi
    1956:	36 34 36             	ss xor al,0x36
    1959:	5f                   	pop    rdi
    195a:	5f                   	pop    rdi
    195b:	20 32                	and    BYTE PTR [rdx],dh
    195d:	30 31                	xor    BYTE PTR [rcx],dh
    195f:	37                   	(bad)  
    1960:	30 36                	xor    BYTE PTR [rsi],dh
    1962:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1966:	42                   	rex.X
    1967:	45                   	rex.RB
    1968:	47                   	rex.RXB
    1969:	49                   	rex.WB
    196a:	4e 5f                	rex.WRX pop rdi
    196c:	44                   	rex.R
    196d:	45                   	rex.RB
    196e:	43                   	rex.XB
    196f:	4c 53                	rex.WR push rbx
    1971:	20 00                	and    BYTE PTR [rax],al
    1973:	5f                   	pop    rdi
    1974:	49                   	rex.WB
    1975:	4f 5f                	rex.WRXB pop r15
    1977:	73 74                	jae    19ed <__FRAME_END__+0xfe9>
    1979:	64 69 6e 20 28 28 5f 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x495f2828
    1980:	49 
    1981:	4f 5f                	rex.WRXB pop r15
    1983:	46                   	rex.RX
    1984:	49                   	rex.WB
    1985:	4c                   	rex.WR
    1986:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1989:	28 26                	sub    BYTE PTR [rsi],ah
    198b:	5f                   	pop    rdi
    198c:	49                   	rex.WB
    198d:	4f 5f                	rex.WRXB pop r15
    198f:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1992:	5f                   	pop    rdi
    1993:	73 74                	jae    1a09 <__FRAME_END__+0x1005>
    1995:	64 69 6e 5f 29 29 00 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x5f002929
    199c:	5f 
    199d:	5f                   	pop    rdi
    199e:	46                   	rex.RX
    199f:	4c 54                	rex.WR push rsp
    19a1:	31 32                	xor    DWORD PTR [rdx],esi
    19a3:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    19a6:	41 58                	pop    r8
    19a8:	5f                   	pop    rdi
    19a9:	31 30                	xor    DWORD PTR [rax],esi
    19ab:	5f                   	pop    rdi
    19ac:	45 58                	rex.RB pop r8
    19ae:	50                   	push   rax
    19af:	5f                   	pop    rdi
    19b0:	5f                   	pop    rdi
    19b1:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    19b4:	33 32                	xor    esi,DWORD PTR [rdx]
    19b6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    19b9:	46                   	rex.RX
    19ba:	4c 54                	rex.WR push rsp
    19bc:	31 32                	xor    DWORD PTR [rdx],esi
    19be:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    19c1:	49                   	rex.WB
    19c2:	4e 5f                	rex.WRX pop rdi
    19c4:	5f                   	pop    rdi
    19c5:	20 33                	and    BYTE PTR [rbx],dh
    19c7:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    19ca:	32 31                	xor    dh,BYTE PTR [rcx]
    19cc:	30 33                	xor    BYTE PTR [rbx],dh
    19ce:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    19d1:	31 31                	xor    DWORD PTR [rcx],esi
    19d3:	32 30                	xor    dh,BYTE PTR [rax]
    19d5:	39 33                	cmp    DWORD PTR [rbx],esi
    19d7:	35 30 36 32 36       	xor    eax,0x36323630
    19dc:	32 36                	xor    dh,BYTE PTR [rsi]
    19de:	37                   	(bad)  
    19df:	37                   	(bad)  
    19e0:	38 31                	cmp    BYTE PTR [rcx],dh
    19e2:	37                   	(bad)  
    19e3:	33 32                	xor    esi,DWORD PTR [rdx]
    19e5:	31 37                	xor    DWORD PTR [rdi],esi
    19e7:	35 32 36 30 65       	xor    eax,0x65303632
    19ec:	2d 34 39 33 32       	sub    eax,0x32333934
    19f1:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    19f4:	38 00                	cmp    BYTE PTR [rax],al
    19f6:	5f                   	pop    rdi
    19f7:	5f                   	pop    rdi
    19f8:	53                   	push   rbx
    19f9:	55                   	push   rbp
    19fa:	53                   	push   rbx
    19fb:	45                   	rex.RB
    19fc:	43                   	rex.XB
    19fd:	4f                   	rex.WRXB
    19fe:	4e                   	rex.WRX
    19ff:	44 53                	rex.R push rbx
    1a01:	5f                   	pop    rdi
    1a02:	54                   	push   rsp
    1a03:	5f                   	pop    rdi
    1a04:	54                   	push   rsp
    1a05:	59                   	pop    rcx
    1a06:	50                   	push   rax
    1a07:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1a0b:	53                   	push   rbx
    1a0c:	59                   	pop    rcx
    1a0d:	53                   	push   rbx
    1a0e:	43                   	rex.XB
    1a0f:	41                   	rex.B
    1a10:	4c                   	rex.WR
    1a11:	4c 5f                	rex.WR pop rdi
    1a13:	53                   	push   rbx
    1a14:	4c                   	rex.WR
    1a15:	4f                   	rex.WRXB
    1a16:	4e                   	rex.WRX
    1a17:	47 5f                	rex.RXB pop r15
    1a19:	54                   	push   rsp
    1a1a:	59                   	pop    rcx
    1a1b:	50                   	push   rax
    1a1c:	45 00 53 45          	add    BYTE PTR [r11+0x45],r10b
    1a20:	45                   	rex.RB
    1a21:	4b 5f                	rex.WXB pop r15
    1a23:	45                   	rex.RB
    1a24:	4e                   	rex.WRX
    1a25:	44 20 32             	and    BYTE PTR [rdx],r14b
    1a28:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a2b:	49                   	rex.WB
    1a2c:	4e 54                	rex.WRX push rsp
    1a2e:	5f                   	pop    rdi
    1a2f:	46                   	rex.RX
    1a30:	41 53                	push   r11
    1a32:	54                   	push   rsp
    1a33:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    1a36:	49                   	rex.WB
    1a37:	44 54                	rex.R push rsp
    1a39:	48 5f                	rex.W pop rdi
    1a3b:	5f                   	pop    rdi
    1a3c:	20 38                	and    BYTE PTR [rax],bh
    1a3e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a41:	46                   	rex.RX
    1a42:	4c 54                	rex.WR push rsp
    1a44:	36 34 5f             	ss xor al,0x5f
    1a47:	4d                   	rex.WRB
    1a48:	49                   	rex.WB
    1a49:	4e 5f                	rex.WRX pop rdi
    1a4b:	31 30                	xor    DWORD PTR [rax],esi
    1a4d:	5f                   	pop    rdi
    1a4e:	45 58                	rex.RB pop r8
    1a50:	50                   	push   rax
    1a51:	5f                   	pop    rdi
    1a52:	5f                   	pop    rdi
    1a53:	20 28                	and    BYTE PTR [rax],ch
    1a55:	2d 33 30 37 29       	sub    eax,0x29373033
    1a5a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a5d:	73 74                	jae    1ad3 <__FRAME_END__+0x10cf>
    1a5f:	75 62                	jne    1ac3 <__FRAME_END__+0x10bf>
    1a61:	5f                   	pop    rdi
    1a62:	66 64 65 74 61       	data16 fs gs je 1ac8 <__FRAME_END__+0x10c4>
    1a67:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
    1a6a:	00 5f 6e             	add    BYTE PTR [rdi+0x6e],bl
    1a6d:	65 78 74             	gs js  1ae4 <__FRAME_END__+0x10e0>
    1a70:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1a73:	44                   	rex.R
    1a74:	42                   	rex.X
    1a75:	4c 5f                	rex.WR pop rdi
    1a77:	4d                   	rex.WRB
    1a78:	41 58                	pop    r8
    1a7a:	5f                   	pop    rdi
    1a7b:	5f                   	pop    rdi
    1a7c:	20 28                	and    BYTE PTR [rax],ch
    1a7e:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    1a82:	62                   	(bad)  
    1a83:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a84:	65 29 31             	sub    DWORD PTR gs:[rcx],esi
    1a87:	2e 37                	cs (bad) 
    1a89:	39 37                	cmp    DWORD PTR [rdi],esi
    1a8b:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    1a8e:	31 33                	xor    DWORD PTR [rbx],esi
    1a90:	34 38                	xor    al,0x38
    1a92:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    1a95:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31384ad2 <_end+0x31183aba>
    1a9b:	34 35                	xor    al,0x35
    1a9d:	32 37                	xor    dh,BYTE PTR [rdi]
    1a9f:	34 32                	xor    al,0x32
    1aa1:	33 37                	xor    esi,DWORD PTR [rdi]
    1aa3:	33 31                	xor    esi,DWORD PTR [rcx]
    1aa5:	37                   	(bad)  
    1aa6:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    1aa9:	35 37 65 2b 33       	xor    eax,0x332b6537
    1aae:	30 38                	xor    BYTE PTR [rax],bh
    1ab0:	4c 29 00             	sub    QWORD PTR [rax],r8
    1ab3:	5f                   	pop    rdi
    1ab4:	44                   	rex.R
    1ab5:	45                   	rex.RB
    1ab6:	46                   	rex.RX
    1ab7:	41 55                	push   r13
    1ab9:	4c 54                	rex.WR push rsp
    1abb:	5f                   	pop    rdi
    1abc:	53                   	push   rbx
    1abd:	4f 55                	rex.WRXB push r13
    1abf:	52                   	push   rdx
    1ac0:	43                   	rex.XB
    1ac1:	45 20 31             	and    BYTE PTR [r9],r14b
    1ac4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ac7:	52                   	push   rdx
    1ac8:	4c                   	rex.WR
    1ac9:	49                   	rex.WB
    1aca:	4d 5f                	rex.WRB pop r15
    1acc:	54                   	push   rsp
    1acd:	5f                   	pop    rdi
    1ace:	4d                   	rex.WRB
    1acf:	41 54                	push   r12
    1ad1:	43                   	rex.XB
    1ad2:	48                   	rex.W
    1ad3:	45 53                	rex.RB push r11
    1ad5:	5f                   	pop    rdi
    1ad6:	52                   	push   rdx
    1ad7:	4c                   	rex.WR
    1ad8:	49                   	rex.WB
    1ad9:	4d                   	rex.WRB
    1ada:	36 34 5f             	ss xor al,0x5f
    1add:	54                   	push   rsp
    1ade:	20 31                	and    BYTE PTR [rcx],dh
    1ae0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ae3:	61                   	(bad)  
    1ae4:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ae5:	64 36 34 5f          	fs ss xor al,0x5f
    1ae9:	5f                   	pop    rdi
    1aea:	20 31                	and    BYTE PTR [rcx],dh
    1aec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1aef:	5f                   	pop    rdi
    1af0:	5f                   	pop    rdi
    1af1:	6d                   	ins    DWORD PTR es:[rdi],dx
    1af2:	62 73 74 61 74       	(bad)  {k1}
    1af7:	65 5f                	gs pop rdi
    1af9:	74 5f                	je     1b5a <__FRAME_END__+0x1156>
    1afb:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    1b02:	20 
    1b03:	31 00                	xor    DWORD PTR [rax],eax
    1b05:	5f                   	pop    rdi
    1b06:	49                   	rex.WB
    1b07:	4f 5f                	rex.WRXB pop r15
    1b09:	44                   	rex.R
    1b0a:	45                   	rex.RB
    1b0b:	4c                   	rex.WR
    1b0c:	45 54                	rex.RB push r12
    1b0e:	45 5f                	rex.RB pop r15
    1b10:	44                   	rex.R
    1b11:	4f                   	rex.WRXB
    1b12:	4e 54                	rex.WRX push rsp
    1b14:	5f                   	pop    rdi
    1b15:	43                   	rex.XB
    1b16:	4c                   	rex.WR
    1b17:	4f 53                	rex.WRXB push r11
    1b19:	45 20 30             	and    BYTE PTR [r8],r14b
    1b1c:	78 34                	js     1b52 <__FRAME_END__+0x114e>
    1b1e:	30 00                	xor    BYTE PTR [rax],al
    1b20:	5f                   	pop    rdi
    1b21:	5f                   	pop    rdi
    1b22:	46                   	rex.RX
    1b23:	4c 54                	rex.WR push rsp
    1b25:	33 32                	xor    esi,DWORD PTR [rdx]
    1b27:	5f                   	pop    rdi
    1b28:	44                   	rex.R
    1b29:	45                   	rex.RB
    1b2a:	43                   	rex.XB
    1b2b:	49                   	rex.WB
    1b2c:	4d                   	rex.WRB
    1b2d:	41                   	rex.B
    1b2e:	4c 5f                	rex.WR pop rdi
    1b30:	44                   	rex.R
    1b31:	49                   	rex.WB
    1b32:	47 5f                	rex.RXB pop r15
    1b34:	5f                   	pop    rdi
    1b35:	20 39                	and    BYTE PTR [rcx],bh
    1b37:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1b3a:	46                   	rex.RX
    1b3b:	4c 54                	rex.WR push rsp
    1b3d:	31 32                	xor    DWORD PTR [rdx],esi
    1b3f:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    1b42:	49                   	rex.WB
    1b43:	47 5f                	rex.RXB pop r15
    1b45:	5f                   	pop    rdi
    1b46:	20 33                	and    BYTE PTR [rbx],dh
    1b48:	33 00                	xor    eax,DWORD PTR [rax]
    1b4a:	5f                   	pop    rdi
    1b4b:	5f                   	pop    rdi
    1b4c:	55                   	push   rbp
    1b4d:	49                   	rex.WB
    1b4e:	4e 54                	rex.WRX push rsp
    1b50:	31 36                	xor    DWORD PTR [rsi],esi
    1b52:	5f                   	pop    rdi
    1b53:	54                   	push   rsp
    1b54:	59                   	pop    rcx
    1b55:	50                   	push   rax
    1b56:	45 5f                	rex.RB pop r15
    1b58:	5f                   	pop    rdi
    1b59:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1b5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b5d:	72 74                	jb     1bd3 <__FRAME_END__+0x11cf>
    1b5f:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1b62:	73 69                	jae    1bcd <__FRAME_END__+0x11c9>
    1b64:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1b66:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1b6b:	74 00                	je     1b6d <__FRAME_END__+0x1169>
    1b6d:	5f                   	pop    rdi
    1b6e:	5f                   	pop    rdi
    1b6f:	48                   	rex.W
    1b70:	41 56                	push   r14
    1b72:	45 5f                	rex.RB pop r15
    1b74:	43                   	rex.XB
    1b75:	4f                   	rex.WRXB
    1b76:	4c 55                	rex.WR push rbp
    1b78:	4d                   	rex.WRB
    1b79:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    1b7c:	5f                   	pop    rdi
    1b7d:	4f                   	rex.WRXB
    1b7e:	4c                   	rex.WR
    1b7f:	44 5f                	rex.R pop rdi
    1b81:	53                   	push   rbx
    1b82:	54                   	push   rsp
    1b83:	44                   	rex.R
    1b84:	49                   	rex.WB
    1b85:	4f 5f                	rex.WRXB pop r15
    1b87:	4d                   	rex.WRB
    1b88:	41                   	rex.B
    1b89:	47                   	rex.RXB
    1b8a:	49                   	rex.WB
    1b8b:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    1b8e:	78 46                	js     1bd6 <__FRAME_END__+0x11d2>
    1b90:	41                   	rex.B
    1b91:	42                   	rex.X
    1b92:	43 30 30             	rex.XB xor BYTE PTR [r8],sil
    1b95:	30 30                	xor    BYTE PTR [rax],dh
    1b97:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1b9a:	4f 53                	rex.WRXB push r11
    1b9c:	5f                   	pop    rdi
    1b9d:	4e                   	rex.WRX
    1b9e:	4f                   	rex.WRXB
    1b9f:	43 52                	rex.XB push r10
    1ba1:	45                   	rex.RB
    1ba2:	41 54                	push   r12
    1ba4:	45 20 33             	and    BYTE PTR [r11],r14b
    1ba7:	32 00                	xor    al,BYTE PTR [rax]
    1ba9:	5f                   	pop    rdi
    1baa:	5f                   	pop    rdi
    1bab:	57                   	push   rdi
    1bac:	43                   	rex.XB
    1bad:	48                   	rex.W
    1bae:	41 52                	push   r10
    1bb0:	5f                   	pop    rdi
    1bb1:	57                   	push   rdi
    1bb2:	49                   	rex.WB
    1bb3:	44 54                	rex.R push rsp
    1bb5:	48 5f                	rex.W pop rdi
    1bb7:	5f                   	pop    rdi
    1bb8:	20 33                	and    BYTE PTR [rbx],dh
    1bba:	32 00                	xor    al,BYTE PTR [rax]
    1bbc:	5f                   	pop    rdi
    1bbd:	5f                   	pop    rdi
    1bbe:	47                   	rex.RXB
    1bbf:	43                   	rex.XB
    1bc0:	43 5f                	rex.XB pop r15
    1bc2:	41 54                	push   r12
    1bc4:	4f                   	rex.WRXB
    1bc5:	4d                   	rex.WRB
    1bc6:	49                   	rex.WB
    1bc7:	43 5f                	rex.XB pop r15
    1bc9:	43                   	rex.XB
    1bca:	48                   	rex.W
    1bcb:	41 52                	push   r10
    1bcd:	5f                   	pop    rdi
    1bce:	4c                   	rex.WR
    1bcf:	4f                   	rex.WRXB
    1bd0:	43                   	rex.XB
    1bd1:	4b 5f                	rex.WXB pop r15
    1bd3:	46 52                	rex.RX push rdx
    1bd5:	45                   	rex.RB
    1bd6:	45 20 32             	and    BYTE PTR [r10],r14b
    1bd9:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1bdc:	4f 5f                	rex.WRXB pop r15
    1bde:	6d                   	ins    DWORD PTR es:[rdi],dx
    1bdf:	61                   	(bad)  
    1be0:	72 6b                	jb     1c4d <__FRAME_END__+0x1249>
    1be2:	65 72 00             	gs jb  1be5 <__FRAME_END__+0x11e1>
    1be5:	5f                   	pop    rdi
    1be6:	5f                   	pop    rdi
    1be7:	42                   	rex.X
    1be8:	49                   	rex.WB
    1be9:	47                   	rex.RXB
    1bea:	47                   	rex.RXB
    1beb:	45 53                	rex.RB push r11
    1bed:	54                   	push   rsp
    1bee:	5f                   	pop    rdi
    1bef:	41                   	rex.B
    1bf0:	4c                   	rex.WR
    1bf1:	49                   	rex.WB
    1bf2:	47                   	rex.RXB
    1bf3:	4e                   	rex.WRX
    1bf4:	4d                   	rex.WRB
    1bf5:	45                   	rex.RB
    1bf6:	4e 54                	rex.WRX push rsp
    1bf8:	5f                   	pop    rdi
    1bf9:	5f                   	pop    rdi
    1bfa:	20 31                	and    BYTE PTR [rcx],dh
    1bfc:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    1c00:	4c                   	rex.WR
    1c01:	4f                   	rex.WRXB
    1c02:	4e                   	rex.WRX
    1c03:	47 5f                	rex.RXB pop r15
    1c05:	4c                   	rex.WR
    1c06:	4f                   	rex.WRXB
    1c07:	4e                   	rex.WRX
    1c08:	47 5f                	rex.RXB pop r15
    1c0a:	4d                   	rex.WRB
    1c0b:	41 58                	pop    r8
    1c0d:	5f                   	pop    rdi
    1c0e:	5f                   	pop    rdi
    1c0f:	20 30                	and    BYTE PTR [rax],dh
    1c11:	78 37                	js     1c4a <__FRAME_END__+0x1246>
    1c13:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    1c1a:	66 66 66 66 66 66 66 
    1c21:	66 4c                	data16 rex.WR
    1c23:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1c27:	55                   	push   rbp
    1c28:	4c                   	rex.WR
    1c29:	4f                   	rex.WRXB
    1c2a:	4e                   	rex.WRX
    1c2b:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    1c2e:	5f                   	pop    rdi
    1c2f:	54                   	push   rsp
    1c30:	59                   	pop    rcx
    1c31:	50                   	push   rax
    1c32:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    1c36:	73 69                	jae    1ca1 <__FRAME_END__+0x129d>
    1c38:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c3a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c3f:	74 00                	je     1c41 <__FRAME_END__+0x123d>
    1c41:	5f                   	pop    rdi
    1c42:	5f                   	pop    rdi
    1c43:	55                   	push   rbp
    1c44:	49                   	rex.WB
    1c45:	4e 54                	rex.WRX push rsp
    1c47:	5f                   	pop    rdi
    1c48:	4c                   	rex.WR
    1c49:	45                   	rex.RB
    1c4a:	41 53                	push   r11
    1c4c:	54                   	push   rsp
    1c4d:	31 36                	xor    DWORD PTR [rsi],esi
    1c4f:	5f                   	pop    rdi
    1c50:	54                   	push   rsp
    1c51:	59                   	pop    rcx
    1c52:	50                   	push   rax
    1c53:	45 5f                	rex.RB pop r15
    1c55:	5f                   	pop    rdi
    1c56:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    1c59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c5a:	72 74                	jb     1cd0 <__FRAME_END__+0x12cc>
    1c5c:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    1c5f:	73 69                	jae    1cca <__FRAME_END__+0x12c6>
    1c61:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c63:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1c68:	74 00                	je     1c6a <__FRAME_END__+0x1266>
    1c6a:	5f                   	pop    rdi
    1c6b:	5f                   	pop    rdi
    1c6c:	46                   	rex.RX
    1c6d:	4c 54                	rex.WR push rsp
    1c6f:	5f                   	pop    rdi
    1c70:	4d                   	rex.WRB
    1c71:	41 58                	pop    r8
    1c73:	5f                   	pop    rdi
    1c74:	31 30                	xor    DWORD PTR [rax],esi
    1c76:	5f                   	pop    rdi
    1c77:	45 58                	rex.RB pop r8
    1c79:	50                   	push   rax
    1c7a:	5f                   	pop    rdi
    1c7b:	5f                   	pop    rdi
    1c7c:	20 33                	and    BYTE PTR [rbx],dh
    1c7e:	38 00                	cmp    BYTE PTR [rax],al
    1c80:	5f                   	pop    rdi
    1c81:	49                   	rex.WB
    1c82:	4f 5f                	rex.WRXB pop r15
    1c84:	53                   	push   rbx
    1c85:	4b                   	rex.WXB
    1c86:	49 50                	rex.WB push r8
    1c88:	57                   	push   rdi
    1c89:	53                   	push   rbx
    1c8a:	20 30                	and    BYTE PTR [rax],dh
    1c8c:	31 00                	xor    DWORD PTR [rax],eax
    1c8e:	5f                   	pop    rdi
    1c8f:	5f                   	pop    rdi
    1c90:	46                   	rex.RX
    1c91:	4c 54                	rex.WR push rsp
    1c93:	33 32                	xor    esi,DWORD PTR [rdx]
    1c95:	58                   	pop    rax
    1c96:	5f                   	pop    rdi
    1c97:	45 50                	rex.RB push r8
    1c99:	53                   	push   rbx
    1c9a:	49                   	rex.WB
    1c9b:	4c                   	rex.WR
    1c9c:	4f                   	rex.WRXB
    1c9d:	4e 5f                	rex.WRX pop rdi
    1c9f:	5f                   	pop    rdi
    1ca0:	20 32                	and    BYTE PTR [rdx],dh
    1ca2:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    1ca5:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    1ca8:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    1cac:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33314fe2 <_end+0x33113fca>
    1cb2:	30 38                	xor    BYTE PTR [rax],bh
    1cb4:	30 38                	xor    BYTE PTR [rax],bh
    1cb6:	34 37                	xor    al,0x37
    1cb8:	32 36                	xor    dh,BYTE PTR [rsi]
    1cba:	33 33                	xor    esi,DWORD PTR [rbx]
    1cbc:	33 36                	xor    esi,DWORD PTR [rsi]
    1cbe:	31 38                	xor    DWORD PTR [rax],edi
    1cc0:	31 36                	xor    DWORD PTR [rsi],esi
    1cc2:	34 30                	xor    al,0x30
    1cc4:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    1cc8:	31 36                	xor    DWORD PTR [rsi],esi
    1cca:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    1ccd:	78 00                	js     1ccf <__FRAME_END__+0x12cb>
    1ccf:	4e 55                	rex.WRX push rbp
    1cd1:	4c                   	rex.WR
    1cd2:	4c 20 28             	rex.WR and BYTE PTR [rax],r13b
    1cd5:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    1cd8:	69 64 20 2a 29 30 29 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x293029
    1cdf:	00 
    1ce0:	61                   	(bad)  
    1ce1:	72 67                	jb     1d4a <__FRAME_END__+0x1346>
    1ce3:	76 00                	jbe    1ce5 <__FRAME_END__+0x12e1>
    1ce5:	5f                   	pop    rdi
    1ce6:	5f                   	pop    rdi
    1ce7:	55                   	push   rbp
    1ce8:	53                   	push   rbx
    1ce9:	45 5f                	rex.RB pop r15
    1ceb:	50                   	push   rax
    1cec:	4f 53                	rex.WRXB push r11
    1cee:	49 58                	rex.WB pop r8
    1cf0:	5f                   	pop    rdi
    1cf1:	49                   	rex.WB
    1cf2:	4d 50                	rex.WRB push r8
    1cf4:	4c                   	rex.WR
    1cf5:	49                   	rex.WB
    1cf6:	43                   	rex.XB
    1cf7:	49 54                	rex.WB push r12
    1cf9:	4c 59                	rex.WR pop rcx
    1cfb:	20 31                	and    BYTE PTR [rcx],dh
    1cfd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d00:	4f 5f                	rex.WRXB pop r15
    1d02:	66 65 6f             	outs   dx,WORD PTR gs:[rsi]
    1d05:	66 5f                	pop    di
    1d07:	75 6e                	jne    1d77 <__FRAME_END__+0x1373>
    1d09:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d0a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d0b:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    1d0e:	64 28 5f 5f          	sub    BYTE PTR fs:[rdi+0x5f],bl
    1d12:	66 70 29             	data16 jo 1d3e <__FRAME_END__+0x133a>
    1d15:	20 28                	and    BYTE PTR [rax],ch
    1d17:	28 28                	sub    BYTE PTR [rax],ch
    1d19:	5f                   	pop    rdi
    1d1a:	5f                   	pop    rdi
    1d1b:	66 70 29             	data16 jo 1d47 <__FRAME_END__+0x1343>
    1d1e:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    1d23:	61                   	(bad)  
    1d24:	67 73 20             	addr32 jae 1d47 <__FRAME_END__+0x1343>
    1d27:	26 20 5f 49          	and    BYTE PTR es:[rdi+0x49],bl
    1d2b:	4f 5f                	rex.WRXB pop r15
    1d2d:	45                   	rex.RB
    1d2e:	4f                   	rex.WRXB
    1d2f:	46 5f                	rex.RX pop rdi
    1d31:	53                   	push   rbx
    1d32:	45                   	rex.RB
    1d33:	45                   	rex.RB
    1d34:	4e 29 20             	rex.WRX sub QWORD PTR [rax],r12
    1d37:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 294d5d <_end+0x93d45>
    1d3d:	5f                   	pop    rdi
    1d3e:	5f                   	pop    rdi
    1d3f:	4e                   	rex.WRX
    1d40:	4f 5f                	rex.WRXB pop r15
    1d42:	49                   	rex.WB
    1d43:	4e                   	rex.WRX
    1d44:	4c                   	rex.WR
    1d45:	49                   	rex.WB
    1d46:	4e                   	rex.WRX
    1d47:	45 5f                	rex.RB pop r15
    1d49:	5f                   	pop    rdi
    1d4a:	20 31                	and    BYTE PTR [rcx],dh
    1d4c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1d4f:	4f 5f                	rex.WRXB pop r15
    1d51:	73 74                	jae    1dc7 <__FRAME_END__+0x13c3>
    1d53:	64 65 72 72          	fs gs jb 1dc9 <__FRAME_END__+0x13c5>
    1d57:	20 28                	and    BYTE PTR [rax],ch
    1d59:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    1d5c:	4f 5f                	rex.WRXB pop r15
    1d5e:	46                   	rex.RX
    1d5f:	49                   	rex.WB
    1d60:	4c                   	rex.WR
    1d61:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    1d64:	28 26                	sub    BYTE PTR [rsi],ah
    1d66:	5f                   	pop    rdi
    1d67:	49                   	rex.WB
    1d68:	4f 5f                	rex.WRXB pop r15
    1d6a:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1d6d:	5f                   	pop    rdi
    1d6e:	73 74                	jae    1de4 <__FRAME_END__+0x13e0>
    1d70:	64 65 72 72          	fs gs jb 1de6 <__FRAME_END__+0x13e2>
    1d74:	5f                   	pop    rdi
    1d75:	29 29                	sub    DWORD PTR [rcx],ebp
    1d77:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1d7a:	76 61                	jbe    1ddd <__FRAME_END__+0x13d9>
    1d7c:	5f                   	pop    rdi
    1d7d:	61                   	(bad)  
    1d7e:	72 67                	jb     1de7 <__FRAME_END__+0x13e3>
    1d80:	5f                   	pop    rdi
    1d81:	70 61                	jo     1de4 <__FRAME_END__+0x13e0>
    1d83:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    1d86:	29 20                	sub    DWORD PTR [rax],esp
    1d88:	5f                   	pop    rdi
    1d89:	5f                   	pop    rdi
    1d8a:	62                   	(bad)  
    1d8b:	75 69                	jne    1df6 <__FRAME_END__+0x13f2>
    1d8d:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d8e:	74 69                	je     1df9 <__FRAME_END__+0x13f5>
    1d90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d91:	5f                   	pop    rdi
    1d92:	76 61                	jbe    1df5 <__FRAME_END__+0x13f1>
    1d94:	5f                   	pop    rdi
    1d95:	61                   	(bad)  
    1d96:	72 67                	jb     1dff <__FRAME_END__+0x13fb>
    1d98:	5f                   	pop    rdi
    1d99:	70 61                	jo     1dfc <__FRAME_END__+0x13f8>
    1d9b:	63 6b 20             	movsxd ebp,DWORD PTR [rbx+0x20]
    1d9e:	28 29                	sub    BYTE PTR [rcx],ch
    1da0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1da3:	46                   	rex.RX
    1da4:	4c 54                	rex.WR push rsp
    1da6:	5f                   	pop    rdi
    1da7:	4d                   	rex.WRB
    1da8:	41                   	rex.B
    1da9:	4e 54                	rex.WRX push rsp
    1dab:	5f                   	pop    rdi
    1dac:	44                   	rex.R
    1dad:	49                   	rex.WB
    1dae:	47 5f                	rex.RXB pop r15
    1db0:	5f                   	pop    rdi
    1db1:	20 32                	and    BYTE PTR [rdx],dh
    1db3:	34 00                	xor    al,0x0
    1db5:	5f                   	pop    rdi
    1db6:	5f                   	pop    rdi
    1db7:	44                   	rex.R
    1db8:	41                   	rex.B
    1db9:	44                   	rex.R
    1dba:	44 52                	rex.R push rdx
    1dbc:	5f                   	pop    rdi
    1dbd:	54                   	push   rsp
    1dbe:	5f                   	pop    rdi
    1dbf:	54                   	push   rsp
    1dc0:	59                   	pop    rcx
    1dc1:	50                   	push   rax
    1dc2:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1dc6:	53                   	push   rbx
    1dc7:	33 32                	xor    esi,DWORD PTR [rdx]
    1dc9:	5f                   	pop    rdi
    1dca:	54                   	push   rsp
    1dcb:	59                   	pop    rcx
    1dcc:	50                   	push   rax
    1dcd:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1dd1:	46                   	rex.RX
    1dd2:	4c 54                	rex.WR push rsp
    1dd4:	36 34 5f             	ss xor al,0x5f
    1dd7:	44                   	rex.R
    1dd8:	45                   	rex.RB
    1dd9:	43                   	rex.XB
    1dda:	49                   	rex.WB
    1ddb:	4d                   	rex.WRB
    1ddc:	41                   	rex.B
    1ddd:	4c 5f                	rex.WR pop rdi
    1ddf:	44                   	rex.R
    1de0:	49                   	rex.WB
    1de1:	47 5f                	rex.RXB pop r15
    1de3:	5f                   	pop    rdi
    1de4:	20 31                	and    BYTE PTR [rcx],dh
    1de6:	37                   	(bad)  
    1de7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1dea:	47                   	rex.RXB
    1deb:	43                   	rex.XB
    1dec:	43 5f                	rex.XB pop r15
    1dee:	48                   	rex.W
    1def:	41 56                	push   r14
    1df1:	45 5f                	rex.RB pop r15
    1df3:	53                   	push   rbx
    1df4:	59                   	pop    rcx
    1df5:	4e                   	rex.WRX
    1df6:	43 5f                	rex.XB pop r15
    1df8:	43                   	rex.XB
    1df9:	4f                   	rex.WRXB
    1dfa:	4d 50                	rex.WRB push r8
    1dfc:	41 52                	push   r10
    1dfe:	45 5f                	rex.RB pop r15
    1e00:	41                   	rex.B
    1e01:	4e                   	rex.WRX
    1e02:	44 5f                	rex.R pop rdi
    1e04:	53                   	push   rbx
    1e05:	57                   	push   rdi
    1e06:	41 50                	push   r8
    1e08:	5f                   	pop    rdi
    1e09:	34 20                	xor    al,0x20
    1e0b:	31 00                	xor    DWORD PTR [rax],eax
    1e0d:	5f                   	pop    rdi
    1e0e:	5f                   	pop    rdi
    1e0f:	46                   	rex.RX
    1e10:	4c 54                	rex.WR push rsp
    1e12:	33 32                	xor    esi,DWORD PTR [rdx]
    1e14:	5f                   	pop    rdi
    1e15:	4d                   	rex.WRB
    1e16:	49                   	rex.WB
    1e17:	4e 5f                	rex.WRX pop rdi
    1e19:	45 58                	rex.RB pop r8
    1e1b:	50                   	push   rax
    1e1c:	5f                   	pop    rdi
    1e1d:	5f                   	pop    rdi
    1e1e:	20 28                	and    BYTE PTR [rax],ch
    1e20:	2d 31 32 35 29       	sub    eax,0x29353231
    1e25:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e28:	53                   	push   rbx
    1e29:	49 5a                	rex.WB pop r10
    1e2b:	45 5f                	rex.RB pop r15
    1e2d:	54                   	push   rsp
    1e2e:	59                   	pop    rcx
    1e2f:	50                   	push   rax
    1e30:	45 5f                	rex.RB pop r15
    1e32:	5f                   	pop    rdi
    1e33:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    1e37:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    1e3b:	73 69                	jae    1ea6 <__FRAME_END__+0x14a2>
    1e3d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1e3f:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    1e44:	74 00                	je     1e46 <__FRAME_END__+0x1442>
    1e46:	5f                   	pop    rdi
    1e47:	5f                   	pop    rdi
    1e48:	4c                   	rex.WR
    1e49:	44                   	rex.R
    1e4a:	42                   	rex.X
    1e4b:	4c 5f                	rex.WR pop rdi
    1e4d:	4d                   	rex.WRB
    1e4e:	41 58                	pop    r8
    1e50:	5f                   	pop    rdi
    1e51:	5f                   	pop    rdi
    1e52:	20 31                	and    BYTE PTR [rcx],dh
    1e54:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    1e57:	39 37                	cmp    DWORD PTR [rdi],esi
    1e59:	33 31                	xor    esi,DWORD PTR [rcx]
    1e5b:	34 39                	xor    al,0x39
    1e5d:	35 33 35 37 32       	xor    eax,0x32373533
    1e62:	33 31                	xor    esi,DWORD PTR [rcx]
    1e64:	37                   	(bad)  
    1e65:	36 35 30 32 31 32    	ss xor eax,0x32313230
    1e6b:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1e6e:	35 33 30 33 30       	xor    eax,0x30333033
    1e73:	39 37                	cmp    DWORD PTR [rdi],esi
    1e75:	30 32                	xor    BYTE PTR [rdx],dh
    1e77:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    1e7a:	34 39                	xor    al,0x39
    1e7c:	33 32                	xor    esi,DWORD PTR [rdx]
    1e7e:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    1e82:	44                   	rex.R
    1e83:	45                   	rex.RB
    1e84:	43 5f                	rex.XB pop r15
    1e86:	45 56                	rex.RB push r14
    1e88:	41                   	rex.B
    1e89:	4c 5f                	rex.WR pop rdi
    1e8b:	4d                   	rex.WRB
    1e8c:	45 54                	rex.RB push r12
    1e8e:	48                   	rex.W
    1e8f:	4f                   	rex.WRXB
    1e90:	44 5f                	rex.R pop rdi
    1e92:	5f                   	pop    rdi
    1e93:	20 32                	and    BYTE PTR [rdx],dh
    1e95:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1e98:	46                   	rex.RX
    1e99:	4c 54                	rex.WR push rsp
    1e9b:	5f                   	pop    rdi
    1e9c:	4d                   	rex.WRB
    1e9d:	41 58                	pop    r8
    1e9f:	5f                   	pop    rdi
    1ea0:	5f                   	pop    rdi
    1ea1:	20 33                	and    BYTE PTR [rbx],dh
    1ea3:	2e 34 30             	cs xor al,0x30
    1ea6:	32 38                	xor    bh,BYTE PTR [rax]
    1ea8:	32 33                	xor    dh,BYTE PTR [rbx]
    1eaa:	34 36                	xor    al,0x36
    1eac:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    1eaf:	35 32 38 38 35       	xor    eax,0x35383832
    1eb4:	39 38                	cmp    DWORD PTR [rax],edi
    1eb6:	31 31                	xor    DWORD PTR [rcx],esi
    1eb8:	37                   	(bad)  
    1eb9:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    1ebc:	38 33                	cmp    BYTE PTR [rbx],dh
    1ebe:	34 38                	xor    al,0x38
    1ec0:	34 35                	xor    al,0x35
    1ec2:	31 36                	xor    DWORD PTR [rsi],esi
    1ec4:	39 32                	cmp    DWORD PTR [rdx],esi
    1ec6:	35 65 2b 33 38       	xor    eax,0x38332b65
    1ecb:	46 00 5f 49          	rex.RX add BYTE PTR [rdi+0x49],r11b
    1ecf:	4f 5f                	rex.WRXB pop r15
    1ed1:	75 69                	jne    1f3c <__FRAME_END__+0x1538>
    1ed3:	64 5f                	fs pop rdi
    1ed5:	74 20                	je     1ef7 <__FRAME_END__+0x14f3>
    1ed7:	5f                   	pop    rdi
    1ed8:	5f                   	pop    rdi
    1ed9:	75 69                	jne    1f44 <__FRAME_END__+0x1540>
    1edb:	64 5f                	fs pop rdi
    1edd:	74 00                	je     1edf <__FRAME_END__+0x14db>
    1edf:	5f                   	pop    rdi
    1ee0:	5f                   	pop    rdi
    1ee1:	44                   	rex.R
    1ee2:	42                   	rex.X
    1ee3:	4c 5f                	rex.WR pop rdi
    1ee5:	4d                   	rex.WRB
    1ee6:	49                   	rex.WB
    1ee7:	4e 5f                	rex.WRX pop rdi
    1ee9:	31 30                	xor    DWORD PTR [rax],esi
    1eeb:	5f                   	pop    rdi
    1eec:	45 58                	rex.RB pop r8
    1eee:	50                   	push   rax
    1eef:	5f                   	pop    rdi
    1ef0:	5f                   	pop    rdi
    1ef1:	20 28                	and    BYTE PTR [rax],ch
    1ef3:	2d 33 30 37 29       	sub    eax,0x29373033
    1ef8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1efb:	4f 5f                	rex.WRXB pop r15
    1efd:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    1f00:	5f                   	pop    rdi
    1f01:	73 74                	jae    1f77 <__FRAME_END__+0x1573>
    1f03:	64 65 72 72          	fs gs jb 1f79 <__FRAME_END__+0x1575>
    1f07:	5f                   	pop    rdi
    1f08:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f0b:	55                   	push   rbp
    1f0c:	49                   	rex.WB
    1f0d:	4e 54                	rex.WRX push rsp
    1f0f:	33 32                	xor    esi,DWORD PTR [rdx]
    1f11:	5f                   	pop    rdi
    1f12:	4d                   	rex.WRB
    1f13:	41 58                	pop    r8
    1f15:	5f                   	pop    rdi
    1f16:	5f                   	pop    rdi
    1f17:	20 30                	and    BYTE PTR [rax],dh
    1f19:	78 66                	js     1f81 <__FRAME_END__+0x157d>
    1f1b:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    1f22:	55 
    1f23:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1f26:	4f 5f                	rex.WRXB pop r15
    1f28:	4f                   	rex.WRXB
    1f29:	43 54                	rex.XB push r12
    1f2b:	20 30                	and    BYTE PTR [rax],dh
    1f2d:	34 30                	xor    al,0x30
    1f2f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f32:	46                   	rex.RX
    1f33:	4c 54                	rex.WR push rsp
    1f35:	31 32                	xor    DWORD PTR [rdx],esi
    1f37:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    1f3a:	41 53                	push   r11
    1f3c:	5f                   	pop    rdi
    1f3d:	49                   	rex.WB
    1f3e:	4e                   	rex.WRX
    1f3f:	46                   	rex.RX
    1f40:	49                   	rex.WB
    1f41:	4e                   	rex.WRX
    1f42:	49 54                	rex.WB push r12
    1f44:	59                   	pop    rcx
    1f45:	5f                   	pop    rdi
    1f46:	5f                   	pop    rdi
    1f47:	20 31                	and    BYTE PTR [rcx],dh
    1f49:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    1f4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f4d:	64 65 00 5f 49       	fs add BYTE PTR gs:[rdi+0x49],bl
    1f52:	4f 5f                	rex.WRXB pop r15
    1f54:	48                   	rex.W
    1f55:	41 56                	push   r14
    1f57:	45 5f                	rex.RB pop r15
    1f59:	53                   	push   rbx
    1f5a:	54                   	push   rsp
    1f5b:	5f                   	pop    rdi
    1f5c:	42                   	rex.X
    1f5d:	4c                   	rex.WR
    1f5e:	4b 53                	rex.WXB push r11
    1f60:	49 5a                	rex.WB pop r10
    1f62:	45 20 5f 47          	and    BYTE PTR [r15+0x47],r11b
    1f66:	5f                   	pop    rdi
    1f67:	48                   	rex.W
    1f68:	41 56                	push   r14
    1f6a:	45 5f                	rex.RB pop r15
    1f6c:	53                   	push   rbx
    1f6d:	54                   	push   rsp
    1f6e:	5f                   	pop    rdi
    1f6f:	42                   	rex.X
    1f70:	4c                   	rex.WR
    1f71:	4b 53                	rex.WXB push r11
    1f73:	49 5a                	rex.WB pop r10
    1f75:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1f79:	46                   	rex.RX
    1f7a:	4c 54                	rex.WR push rsp
    1f7c:	36 34 5f             	ss xor al,0x5f
    1f7f:	48                   	rex.W
    1f80:	41 53                	push   r11
    1f82:	5f                   	pop    rdi
    1f83:	44                   	rex.R
    1f84:	45                   	rex.RB
    1f85:	4e                   	rex.WRX
    1f86:	4f 52                	rex.WRXB push r10
    1f88:	4d 5f                	rex.WRB pop r15
    1f8a:	5f                   	pop    rdi
    1f8b:	20 31                	and    BYTE PTR [rcx],dh
    1f8d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1f90:	46                   	rex.RX
    1f91:	4c 54                	rex.WR push rsp
    1f93:	5f                   	pop    rdi
    1f94:	45 56                	rex.RB push r14
    1f96:	41                   	rex.B
    1f97:	4c 5f                	rex.WR pop rdi
    1f99:	4d                   	rex.WRB
    1f9a:	45 54                	rex.RB push r12
    1f9c:	48                   	rex.W
    1f9d:	4f                   	rex.WRXB
    1f9e:	44 5f                	rex.R pop rdi
    1fa0:	5f                   	pop    rdi
    1fa1:	20 30                	and    BYTE PTR [rax],dh
    1fa3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fa6:	46 53                	rex.RX push rbx
    1fa8:	42                   	rex.X
    1fa9:	4c                   	rex.WR
    1faa:	4b                   	rex.WXB
    1fab:	43                   	rex.XB
    1fac:	4e 54                	rex.WRX push rsp
    1fae:	5f                   	pop    rdi
    1faf:	54                   	push   rsp
    1fb0:	5f                   	pop    rdi
    1fb1:	54                   	push   rsp
    1fb2:	59                   	pop    rcx
    1fb3:	50                   	push   rax
    1fb4:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    1fb8:	53                   	push   rbx
    1fb9:	59                   	pop    rcx
    1fba:	53                   	push   rbx
    1fbb:	43                   	rex.XB
    1fbc:	41                   	rex.B
    1fbd:	4c                   	rex.WR
    1fbe:	4c 5f                	rex.WR pop rdi
    1fc0:	55                   	push   rbp
    1fc1:	4c                   	rex.WR
    1fc2:	4f                   	rex.WRXB
    1fc3:	4e                   	rex.WRX
    1fc4:	47 5f                	rex.RXB pop r15
    1fc6:	54                   	push   rsp
    1fc7:	59                   	pop    rcx
    1fc8:	50                   	push   rax
    1fc9:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1fcd:	46                   	rex.RX
    1fce:	4c 54                	rex.WR push rsp
    1fd0:	33 32                	xor    esi,DWORD PTR [rdx]
    1fd2:	58                   	pop    rax
    1fd3:	5f                   	pop    rdi
    1fd4:	48                   	rex.W
    1fd5:	41 53                	push   r11
    1fd7:	5f                   	pop    rdi
    1fd8:	44                   	rex.R
    1fd9:	45                   	rex.RB
    1fda:	4e                   	rex.WRX
    1fdb:	4f 52                	rex.WRXB push r10
    1fdd:	4d 5f                	rex.WRB pop r15
    1fdf:	5f                   	pop    rdi
    1fe0:	20 31                	and    BYTE PTR [rcx],dh
    1fe2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1fe5:	78 38                	js     201f <__FRAME_END__+0x161b>
    1fe7:	36 5f                	ss pop rdi
    1fe9:	36 34 5f             	ss xor al,0x5f
    1fec:	5f                   	pop    rdi
    1fed:	20 31                	and    BYTE PTR [rcx],dh
    1fef:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1ff2:	46                   	rex.RX
    1ff3:	4c 54                	rex.WR push rsp
    1ff5:	36 34 58             	ss xor al,0x58
    1ff8:	5f                   	pop    rdi
    1ff9:	4d                   	rex.WRB
    1ffa:	41 58                	pop    r8
    1ffc:	5f                   	pop    rdi
    1ffd:	45 58                	rex.RB pop r8
    1fff:	50                   	push   rax
    2000:	5f                   	pop    rdi
    2001:	5f                   	pop    rdi
    2002:	20 31                	and    BYTE PTR [rcx],dh
    2004:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    2007:	34 00                	xor    al,0x0
    2009:	5f                   	pop    rdi
    200a:	5f                   	pop    rdi
    200b:	56                   	push   rsi
    200c:	45 52                	rex.RB push r10
    200e:	53                   	push   rbx
    200f:	49                   	rex.WB
    2010:	4f                   	rex.WRXB
    2011:	4e 5f                	rex.WRX pop rdi
    2013:	5f                   	pop    rdi
    2014:	20 22                	and    BYTE PTR [rdx],ah
    2016:	37                   	(bad)  
    2017:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
    201a:	30 22                	xor    BYTE PTR [rdx],ah
    201c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    201f:	4f 5f                	rex.WRXB pop r15
    2021:	4c                   	rex.WR
    2022:	49                   	rex.WB
    2023:	4e                   	rex.WRX
    2024:	4b                   	rex.WXB
    2025:	45                   	rex.RB
    2026:	44 20 30             	and    BYTE PTR [rax],r14b
    2029:	78 38                	js     2063 <__FRAME_END__+0x165f>
    202b:	30 00                	xor    BYTE PTR [rax],al
    202d:	5f                   	pop    rdi
    202e:	5f                   	pop    rdi
    202f:	52                   	push   rdx
    2030:	45                   	rex.RB
    2031:	44                   	rex.R
    2032:	49 52                	rex.WB push r10
    2034:	45                   	rex.RB
    2035:	43 54                	rex.XB push r12
    2037:	28 6e 61             	sub    BYTE PTR [rsi+0x61],ch
    203a:	6d                   	ins    DWORD PTR es:[rdi],dx
    203b:	65 2c 70             	gs sub al,0x70
    203e:	72 6f                	jb     20af <__FRAME_END__+0x16ab>
    2040:	74 6f                	je     20b1 <__FRAME_END__+0x16ad>
    2042:	2c 61                	sub    al,0x61
    2044:	6c                   	ins    BYTE PTR es:[rdi],dx
    2045:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    204c:	6d                   	ins    DWORD PTR es:[rdi],dx
    204d:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    2051:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2052:	74 6f                	je     20c3 <__FRAME_END__+0x16bf>
    2054:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2057:	61                   	(bad)  
    2058:	73 6d                	jae    20c7 <__FRAME_END__+0x16c3>
    205a:	5f                   	pop    rdi
    205b:	5f                   	pop    rdi
    205c:	20 28                	and    BYTE PTR [rax],ch
    205e:	5f                   	pop    rdi
    205f:	5f                   	pop    rdi
    2060:	41 53                	push   r11
    2062:	4d                   	rex.WRB
    2063:	4e                   	rex.WRX
    2064:	41                   	rex.B
    2065:	4d                   	rex.WRB
    2066:	45 20 28             	and    BYTE PTR [r8],r13b
    2069:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    206c:	69 61 73 29 29 00 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f002929
    2073:	5f                   	pop    rdi
    2074:	46 53                	rex.RX push rbx
    2076:	42                   	rex.X
    2077:	4c                   	rex.WR
    2078:	4b                   	rex.WXB
    2079:	43                   	rex.XB
    207a:	4e 54                	rex.WRX push rsp
    207c:	36 34 5f             	ss xor al,0x5f
    207f:	54                   	push   rsp
    2080:	5f                   	pop    rdi
    2081:	54                   	push   rsp
    2082:	59                   	pop    rcx
    2083:	50                   	push   rax
    2084:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2088:	55                   	push   rbp
    2089:	51                   	push   rcx
    208a:	55                   	push   rbp
    208b:	41                   	rex.B
    208c:	44 5f                	rex.R pop rdi
    208e:	54                   	push   rsp
    208f:	59                   	pop    rcx
    2090:	50                   	push   rax
    2091:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2095:	46                   	rex.RX
    2096:	4c 54                	rex.WR push rsp
    2098:	36 34 58             	ss xor al,0x58
    209b:	5f                   	pop    rdi
    209c:	4d                   	rex.WRB
    209d:	41 58                	pop    r8
    209f:	5f                   	pop    rdi
    20a0:	5f                   	pop    rdi
    20a1:	20 31                	and    BYTE PTR [rcx],dh
    20a3:	2e 31 38             	xor    DWORD PTR cs:[rax],edi
    20a6:	39 37                	cmp    DWORD PTR [rdi],esi
    20a8:	33 31                	xor    esi,DWORD PTR [rcx]
    20aa:	34 39                	xor    al,0x39
    20ac:	35 33 35 37 32       	xor    eax,0x32373533
    20b1:	33 31                	xor    esi,DWORD PTR [rcx]
    20b3:	37                   	(bad)  
    20b4:	36 35 30 32 31 32    	ss xor eax,0x32313230
    20ba:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    20bd:	35 33 30 33 30       	xor    eax,0x30333033
    20c2:	39 37                	cmp    DWORD PTR [rdi],esi
    20c4:	30 32                	xor    BYTE PTR [rdx],dh
    20c6:	31 65 2b             	xor    DWORD PTR [rbp+0x2b],esp
    20c9:	34 39                	xor    al,0x39
    20cb:	33 32                	xor    esi,DWORD PTR [rdx]
    20cd:	46                   	rex.RX
    20ce:	36 34 78             	ss xor al,0x78
    20d1:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    20d4:	4f 5f                	rex.WRXB pop r15
    20d6:	72 65                	jb     213d <__FRAME_END__+0x1739>
    20d8:	61                   	(bad)  
    20d9:	64 5f                	fs pop rdi
    20db:	70 74                	jo     2151 <__FRAME_END__+0x174d>
    20dd:	72 00                	jb     20df <__FRAME_END__+0x16db>
    20df:	5f                   	pop    rdi
    20e0:	5f                   	pop    rdi
    20e1:	53                   	push   rbx
    20e2:	49 5a                	rex.WB pop r10
    20e4:	45 5f                	rex.RB pop r15
    20e6:	54                   	push   rsp
    20e7:	20 00                	and    BYTE PTR [rax],al
    20e9:	5f                   	pop    rdi
    20ea:	5f                   	pop    rdi
    20eb:	49                   	rex.WB
    20ec:	44 5f                	rex.R pop rdi
    20ee:	54                   	push   rsp
    20ef:	5f                   	pop    rdi
    20f0:	54                   	push   rsp
    20f1:	59                   	pop    rcx
    20f2:	50                   	push   rax
    20f3:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    20f7:	55                   	push   rbp
    20f8:	33 32                	xor    esi,DWORD PTR [rdx]
    20fa:	5f                   	pop    rdi
    20fb:	54                   	push   rsp
    20fc:	59                   	pop    rcx
    20fd:	50                   	push   rax
    20fe:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2102:	53                   	push   rbx
    2103:	49 5a                	rex.WB pop r10
    2105:	45 5f                	rex.RB pop r15
    2107:	54                   	push   rsp
    2108:	5f                   	pop    rdi
    2109:	5f                   	pop    rdi
    210a:	20 00                	and    BYTE PTR [rax],al
    210c:	5f                   	pop    rdi
    210d:	49                   	rex.WB
    210e:	4f 5f                	rex.WRXB pop r15
    2110:	66 75 6e             	data16 jne 2181 <__FRAME_END__+0x177d>
    2113:	6c                   	ins    BYTE PTR es:[rdi],dx
    2114:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2115:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    2118:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    211f:	29 
    2120:	20 00                	and    BYTE PTR [rax],al
    2122:	5f                   	pop    rdi
    2123:	5f                   	pop    rdi
    2124:	4b                   	rex.WXB
    2125:	45 59                	rex.RB pop r9
    2127:	5f                   	pop    rdi
    2128:	54                   	push   rsp
    2129:	5f                   	pop    rdi
    212a:	54                   	push   rsp
    212b:	59                   	pop    rcx
    212c:	50                   	push   rax
    212d:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2131:	53                   	push   rbx
    2132:	33 32                	xor    esi,DWORD PTR [rdx]
    2134:	5f                   	pop    rdi
    2135:	54                   	push   rsp
    2136:	59                   	pop    rcx
    2137:	50                   	push   rax
    2138:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    213c:	49                   	rex.WB
    213d:	4e 54                	rex.WRX push rsp
    213f:	5f                   	pop    rdi
    2140:	4c                   	rex.WR
    2141:	45                   	rex.RB
    2142:	41 53                	push   r11
    2144:	54                   	push   rsp
    2145:	36 34 5f             	ss xor al,0x5f
    2148:	4d                   	rex.WRB
    2149:	41 58                	pop    r8
    214b:	5f                   	pop    rdi
    214c:	5f                   	pop    rdi
    214d:	20 30                	and    BYTE PTR [rax],dh
    214f:	78 37                	js     2188 <__FRAME_END__+0x1784>
    2151:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2158:	66 66 66 66 66 66 66 
    215f:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2164:	49                   	rex.WB
    2165:	4e 54                	rex.WRX push rsp
    2167:	5f                   	pop    rdi
    2168:	4c                   	rex.WR
    2169:	45                   	rex.RB
    216a:	41 53                	push   r11
    216c:	54                   	push   rsp
    216d:	38 5f 57             	cmp    BYTE PTR [rdi+0x57],bl
    2170:	49                   	rex.WB
    2171:	44 54                	rex.R push rsp
    2173:	48 5f                	rex.W pop rdi
    2175:	5f                   	pop    rdi
    2176:	20 38                	and    BYTE PTR [rax],bh
    2178:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    217b:	4c                   	rex.WR
    217c:	44                   	rex.R
    217d:	42                   	rex.X
    217e:	4c 5f                	rex.WR pop rdi
    2180:	52                   	push   rdx
    2181:	45                   	rex.RB
    2182:	44                   	rex.R
    2183:	49 52                	rex.WB push r10
    2185:	31 5f 4e             	xor    DWORD PTR [rdi+0x4e],ebx
    2188:	54                   	push   rsp
    2189:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    218d:	6d                   	ins    DWORD PTR es:[rdi],dx
    218e:	65 2c 70             	gs sub al,0x70
    2191:	72 6f                	jb     2202 <__FRAME_END__+0x17fe>
    2193:	74 6f                	je     2204 <__FRAME_END__+0x1800>
    2195:	2c 61                	sub    al,0x61
    2197:	6c                   	ins    BYTE PTR es:[rdi],dx
    2198:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    219f:	6d                   	ins    DWORD PTR es:[rdi],dx
    21a0:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    21a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21a5:	74 6f                	je     2216 <__FRAME_END__+0x1812>
    21a7:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    21aa:	54                   	push   rsp
    21ab:	48 52                	rex.W push rdx
    21ad:	4f 57                	rex.WRXB push r15
    21af:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21b2:	55                   	push   rbp
    21b3:	49                   	rex.WB
    21b4:	4e 54                	rex.WRX push rsp
    21b6:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    21b9:	41 58                	pop    r8
    21bb:	5f                   	pop    rdi
    21bc:	5f                   	pop    rdi
    21bd:	20 30                	and    BYTE PTR [rax],dh
    21bf:	78 66                	js     2227 <__FRAME_END__+0x1823>
    21c1:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    21c5:	4f 5f                	rex.WRXB pop r15
    21c7:	46                   	rex.RX
    21c8:	4c                   	rex.WR
    21c9:	41                   	rex.B
    21ca:	47 53                	rex.RXB push r11
    21cc:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    21cf:	4f 54                	rex.WRXB push r12
    21d1:	43                   	rex.XB
    21d2:	41                   	rex.B
    21d3:	4e                   	rex.WRX
    21d4:	43                   	rex.XB
    21d5:	45                   	rex.RB
    21d6:	4c 20 32             	rex.WR and BYTE PTR [rdx],r14b
    21d9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    21dc:	61                   	(bad)  
    21dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    21de:	77 61                	ja     2241 <__FRAME_END__+0x183d>
    21e0:	79 73                	jns    2255 <__FRAME_END__+0x1851>
    21e2:	5f                   	pop    rdi
    21e3:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    21ea:	5f                   	pop    rdi
    21eb:	5f                   	pop    rdi
    21ec:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    21f3:	5f                   	pop    rdi
    21f4:	5f                   	pop    rdi
    21f5:	61                   	(bad)  
    21f6:	74 74                	je     226c <__FRAME_END__+0x1868>
    21f8:	72 69                	jb     2263 <__FRAME_END__+0x185f>
    21fa:	62                   	(bad)  
    21fb:	75 74                	jne    2271 <__FRAME_END__+0x186d>
    21fd:	65 5f                	gs pop rdi
    21ff:	5f                   	pop    rdi
    2200:	20 28                	and    BYTE PTR [rax],ch
    2202:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2205:	61                   	(bad)  
    2206:	6c                   	ins    BYTE PTR es:[rdi],dx
    2207:	77 61                	ja     226a <__FRAME_END__+0x1866>
    2209:	79 73                	jns    227e <__FRAME_END__+0x187a>
    220b:	5f                   	pop    rdi
    220c:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    2213:	5f                   	pop    rdi
    2214:	29 29                	sub    DWORD PTR [rcx],ebp
    2216:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2219:	55                   	push   rbp
    221a:	49                   	rex.WB
    221b:	4e 54                	rex.WRX push rsp
    221d:	31 36                	xor    DWORD PTR [rsi],esi
    221f:	5f                   	pop    rdi
    2220:	4d                   	rex.WRB
    2221:	41 58                	pop    r8
    2223:	5f                   	pop    rdi
    2224:	5f                   	pop    rdi
    2225:	20 30                	and    BYTE PTR [rax],dh
    2227:	78 66                	js     228f <__FRAME_END__+0x188b>
    2229:	66 66 66 00 5f 49    	data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    222f:	4f 5f                	rex.WRXB pop r15
    2231:	4d                   	rex.WRB
    2232:	41                   	rex.B
    2233:	47                   	rex.RXB
    2234:	49                   	rex.WB
    2235:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    2238:	78 46                	js     2280 <__FRAME_END__+0x187c>
    223a:	42                   	rex.X
    223b:	41                   	rex.B
    223c:	44 30 30             	xor    BYTE PTR [rax],r14b
    223f:	30 30                	xor    BYTE PTR [rax],dh
    2241:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2244:	47                   	rex.RXB
    2245:	4c                   	rex.WR
    2246:	49                   	rex.WB
    2247:	42                   	rex.X
    2248:	43 5f                	rex.XB pop r15
    224a:	55                   	push   rbp
    224b:	53                   	push   rbx
    224c:	45 28 46 29          	sub    BYTE PTR [r14+0x29],r8b
    2250:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2253:	47                   	rex.RXB
    2254:	4c                   	rex.WR
    2255:	49                   	rex.WB
    2256:	42                   	rex.X
    2257:	43 5f                	rex.XB pop r15
    2259:	55                   	push   rbp
    225a:	53                   	push   rbx
    225b:	45 5f                	rex.RB pop r15
    225d:	20 23                	and    BYTE PTR [rbx],ah
    225f:	23 20                	and    esp,DWORD PTR [rax]
    2261:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    2265:	49                   	rex.WB
    2266:	4e 54                	rex.WRX push rsp
    2268:	5f                   	pop    rdi
    2269:	46                   	rex.RX
    226a:	41 53                	push   r11
    226c:	54                   	push   rsp
    226d:	36 34 5f             	ss xor al,0x5f
    2270:	54                   	push   rsp
    2271:	59                   	pop    rcx
    2272:	50                   	push   rax
    2273:	45 5f                	rex.RB pop r15
    2275:	5f                   	pop    rdi
    2276:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    227a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    227e:	74 00                	je     2280 <__FRAME_END__+0x187c>
    2280:	73 74                	jae    22f6 <__FRAME_END__+0x18f2>
    2282:	64 69 6e 20 73 74 64 	imul   ebp,DWORD PTR fs:[rsi+0x20],0x69647473
    2289:	69 
    228a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    228b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    228e:	61                   	(bad)  
    228f:	74 74                	je     2305 <__FRAME_END__+0x1901>
    2291:	72 69                	jb     22fc <__FRAME_END__+0x18f8>
    2293:	62                   	(bad)  
    2294:	75 74                	jne    230a <__FRAME_END__+0x1906>
    2296:	65 5f                	gs pop rdi
    2298:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2299:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    229a:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22a1:	5f                   	pop    rdi
    22a2:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    22a5:	61                   	(bad)  
    22a6:	74 74                	je     231c <__FRAME_END__+0x1918>
    22a8:	72 69                	jb     2313 <__FRAME_END__+0x190f>
    22aa:	62                   	(bad)  
    22ab:	75 74                	jne    2321 <__FRAME_END__+0x191d>
    22ad:	65 5f                	gs pop rdi
    22af:	5f                   	pop    rdi
    22b0:	20 28                	and    BYTE PTR [rax],ch
    22b2:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    22b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22b7:	69 6e 6c 69 6e 65 5f 	imul   ebp,DWORD PTR [rsi+0x6c],0x5f656e69
    22be:	5f                   	pop    rdi
    22bf:	29 29                	sub    DWORD PTR [rcx],ebp
    22c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22c4:	53                   	push   rbx
    22c5:	54                   	push   rsp
    22c6:	44                   	rex.R
    22c7:	43 5f                	rex.XB pop r15
    22c9:	56                   	push   rsi
    22ca:	45 52                	rex.RB push r10
    22cc:	53                   	push   rbx
    22cd:	49                   	rex.WB
    22ce:	4f                   	rex.WRXB
    22cf:	4e 5f                	rex.WRX pop rdi
    22d1:	5f                   	pop    rdi
    22d2:	20 32                	and    BYTE PTR [rdx],dh
    22d4:	30 31                	xor    BYTE PTR [rcx],dh
    22d6:	31 31                	xor    DWORD PTR [rcx],esi
    22d8:	32 4c 00 5f          	xor    cl,BYTE PTR [rax+rax*1+0x5f]
    22dc:	5f                   	pop    rdi
    22dd:	49                   	rex.WB
    22de:	4e 54                	rex.WRX push rsp
    22e0:	4d                   	rex.WRB
    22e1:	41 58                	pop    r8
    22e3:	5f                   	pop    rdi
    22e4:	57                   	push   rdi
    22e5:	49                   	rex.WB
    22e6:	44 54                	rex.R push rsp
    22e8:	48 5f                	rex.W pop rdi
    22ea:	5f                   	pop    rdi
    22eb:	20 36                	and    BYTE PTR [rsi],dh
    22ed:	34 00                	xor    al,0x0
    22ef:	5f                   	pop    rdi
    22f0:	5f                   	pop    rdi
    22f1:	44                   	rex.R
    22f2:	45                   	rex.RB
    22f3:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    22f6:	5f                   	pop    rdi
    22f7:	4d                   	rex.WRB
    22f8:	41 58                	pop    r8
    22fa:	5f                   	pop    rdi
    22fb:	5f                   	pop    rdi
    22fc:	20 39                	and    BYTE PTR [rcx],bh
    22fe:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    2301:	39 39                	cmp    DWORD PTR [rcx],edi
    2303:	39 39                	cmp    DWORD PTR [rcx],edi
    2305:	45 39 36             	cmp    DWORD PTR [r14],r14d
    2308:	44                   	rex.R
    2309:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    230d:	47                   	rex.RXB
    230e:	4e 55                	rex.WRX push rbp
    2310:	43 5f                	rex.XB pop r15
    2312:	56                   	push   rsi
    2313:	41 5f                	pop    r15
    2315:	4c                   	rex.WR
    2316:	49 53                	rex.WB push r11
    2318:	54                   	push   rsp
    2319:	20 00                	and    BYTE PTR [rax],al
    231b:	5f                   	pop    rdi
    231c:	5f                   	pop    rdi
    231d:	50                   	push   rax
    231e:	54                   	push   rsp
    231f:	52                   	push   rdx
    2320:	44                   	rex.R
    2321:	49                   	rex.WB
    2322:	46                   	rex.RX
    2323:	46 5f                	rex.RX pop rdi
    2325:	4d                   	rex.WRB
    2326:	41 58                	pop    r8
    2328:	5f                   	pop    rdi
    2329:	5f                   	pop    rdi
    232a:	20 30                	and    BYTE PTR [rax],dh
    232c:	78 37                	js     2365 <__FRAME_END__+0x1961>
    232e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2335:	66 66 66 66 66 66 66 
    233c:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2341:	55                   	push   rbp
    2342:	53                   	push   rbx
    2343:	45 5f                	rex.RB pop r15
    2345:	50                   	push   rax
    2346:	4f 53                	rex.WRXB push r11
    2348:	49 58                	rex.WB pop r8
    234a:	31 39                	xor    DWORD PTR [rcx],edi
    234c:	39 33                	cmp    DWORD PTR [rbx],esi
    234e:	30 39                	xor    BYTE PTR [rcx],bh
    2350:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2353:	49                   	rex.WB
    2354:	4e 54                	rex.WRX push rsp
    2356:	5f                   	pop    rdi
    2357:	4c                   	rex.WR
    2358:	45                   	rex.RB
    2359:	41 53                	push   r11
    235b:	54                   	push   rsp
    235c:	31 36                	xor    DWORD PTR [rsi],esi
    235e:	5f                   	pop    rdi
    235f:	54                   	push   rsp
    2360:	59                   	pop    rcx
    2361:	50                   	push   rax
    2362:	45 5f                	rex.RB pop r15
    2364:	5f                   	pop    rdi
    2365:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    2368:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2369:	72 74                	jb     23df <__FRAME_END__+0x19db>
    236b:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    236e:	74 00                	je     2370 <__FRAME_END__+0x196c>
    2370:	5f                   	pop    rdi
    2371:	5f                   	pop    rdi
    2372:	46                   	rex.RX
    2373:	4c 54                	rex.WR push rsp
    2375:	33 32                	xor    esi,DWORD PTR [rdx]
    2377:	5f                   	pop    rdi
    2378:	4d                   	rex.WRB
    2379:	41 58                	pop    r8
    237b:	5f                   	pop    rdi
    237c:	45 58                	rex.RB pop r8
    237e:	50                   	push   rax
    237f:	5f                   	pop    rdi
    2380:	5f                   	pop    rdi
    2381:	20 31                	and    BYTE PTR [rcx],dh
    2383:	32 38                	xor    bh,BYTE PTR [rax]
    2385:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2388:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    238a:	75 5f                	jne    23eb <__FRAME_END__+0x19e7>
    238c:	6c                   	ins    BYTE PTR es:[rdi],dx
    238d:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    2394:	31 00                	xor    DWORD PTR [rax],eax
    2396:	5f                   	pop    rdi
    2397:	5f                   	pop    rdi
    2398:	53                   	push   rbx
    2399:	54                   	push   rsp
    239a:	44 5f                	rex.R pop rdi
    239c:	54                   	push   rsp
    239d:	59                   	pop    rcx
    239e:	50                   	push   rax
    239f:	45 20 74 79 70       	and    BYTE PTR [r9+rdi*2+0x70],r14b
    23a4:	65 64 65 66 00 5f 5f 	gs fs data16 add BYTE PTR gs:[rdi+0x5f],bl
    23ab:	4d                   	rex.WRB
    23ac:	4f                   	rex.WRXB
    23ad:	44                   	rex.R
    23ae:	45 5f                	rex.RB pop r15
    23b0:	54                   	push   rsp
    23b1:	5f                   	pop    rdi
    23b2:	54                   	push   rsp
    23b3:	59                   	pop    rcx
    23b4:	50                   	push   rax
    23b5:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    23b9:	55                   	push   rbp
    23ba:	33 32                	xor    esi,DWORD PTR [rdx]
    23bc:	5f                   	pop    rdi
    23bd:	54                   	push   rsp
    23be:	59                   	pop    rcx
    23bf:	50                   	push   rax
    23c0:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    23c4:	53                   	push   rbx
    23c5:	49 5a                	rex.WB pop r10
    23c7:	45                   	rex.RB
    23c8:	4f                   	rex.WRXB
    23c9:	46 5f                	rex.RX pop rdi
    23cb:	46                   	rex.RX
    23cc:	4c                   	rex.WR
    23cd:	4f                   	rex.WRXB
    23ce:	41 54                	push   r12
    23d0:	31 32                	xor    DWORD PTR [rdx],esi
    23d2:	38 5f 5f             	cmp    BYTE PTR [rdi+0x5f],bl
    23d5:	20 31                	and    BYTE PTR [rcx],dh
    23d7:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    23db:	47                   	rex.RXB
    23dc:	4e 55                	rex.WRX push rbp
    23de:	43 5f                	rex.XB pop r15
    23e0:	53                   	push   rbx
    23e1:	54                   	push   rsp
    23e2:	44                   	rex.R
    23e3:	43 5f                	rex.XB pop r15
    23e5:	49                   	rex.WB
    23e6:	4e                   	rex.WRX
    23e7:	4c                   	rex.WR
    23e8:	49                   	rex.WB
    23e9:	4e                   	rex.WRX
    23ea:	45 5f                	rex.RB pop r15
    23ec:	5f                   	pop    rdi
    23ed:	20 31                	and    BYTE PTR [rcx],dh
    23ef:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    23f2:	44                   	rex.R
    23f3:	42                   	rex.X
    23f4:	4c 5f                	rex.WR pop rdi
    23f6:	44                   	rex.R
    23f7:	49                   	rex.WB
    23f8:	47 5f                	rex.RXB pop r15
    23fa:	5f                   	pop    rdi
    23fb:	20 31                	and    BYTE PTR [rcx],dh
    23fd:	35 00 5f 5f 47       	xor    eax,0x475f5f00
    2402:	43                   	rex.XB
    2403:	43 5f                	rex.XB pop r15
    2405:	41 54                	push   r12
    2407:	4f                   	rex.WRXB
    2408:	4d                   	rex.WRB
    2409:	49                   	rex.WB
    240a:	43 5f                	rex.XB pop r15
    240c:	43                   	rex.XB
    240d:	48                   	rex.W
    240e:	41 52                	push   r10
    2410:	31 36                	xor    DWORD PTR [rsi],esi
    2412:	5f                   	pop    rdi
    2413:	54                   	push   rsp
    2414:	5f                   	pop    rdi
    2415:	4c                   	rex.WR
    2416:	4f                   	rex.WRXB
    2417:	43                   	rex.XB
    2418:	4b 5f                	rex.WXB pop r15
    241a:	46 52                	rex.RX push rdx
    241c:	45                   	rex.RB
    241d:	45 20 32             	and    BYTE PTR [r10],r14b
    2420:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2423:	49                   	rex.WB
    2424:	4e 54                	rex.WRX push rsp
    2426:	5f                   	pop    rdi
    2427:	4c                   	rex.WR
    2428:	45                   	rex.RB
    2429:	41 53                	push   r11
    242b:	54                   	push   rsp
    242c:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    242f:	41 58                	pop    r8
    2431:	5f                   	pop    rdi
    2432:	5f                   	pop    rdi
    2433:	20 30                	and    BYTE PTR [rax],dh
    2435:	78 37                	js     246e <__FRAME_END__+0x1a6a>
    2437:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    243b:	53                   	push   rbx
    243c:	31 36                	xor    DWORD PTR [rsi],esi
    243e:	5f                   	pop    rdi
    243f:	54                   	push   rsp
    2440:	59                   	pop    rcx
    2441:	50                   	push   rax
    2442:	45 20 73 68          	and    BYTE PTR [r11+0x68],r14b
    2446:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2447:	72 74                	jb     24bd <__FRAME_END__+0x1ab9>
    2449:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    244c:	74 00                	je     244e <__FRAME_END__+0x1a4a>
    244e:	5f                   	pop    rdi
    244f:	5f                   	pop    rdi
    2450:	4c 50                	rex.WR push rax
    2452:	36 34 5f             	ss xor al,0x5f
    2455:	5f                   	pop    rdi
    2456:	20 31                	and    BYTE PTR [rcx],dh
    2458:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    245b:	53                   	push   rbx
    245c:	59                   	pop    rcx
    245d:	53                   	push   rbx
    245e:	43                   	rex.XB
    245f:	41                   	rex.B
    2460:	4c                   	rex.WR
    2461:	4c 5f                	rex.WR pop rdi
    2463:	57                   	push   rdi
    2464:	4f 52                	rex.WRXB push r10
    2466:	44 53                	rex.R push rbx
    2468:	49 5a                	rex.WB pop r10
    246a:	45 20 36             	and    BYTE PTR [r14],r14b
    246d:	34 00                	xor    al,0x0
    246f:	5f                   	pop    rdi
    2470:	5f                   	pop    rdi
    2471:	47                   	rex.RXB
    2472:	43                   	rex.XB
    2473:	43 5f                	rex.XB pop r15
    2475:	41 54                	push   r12
    2477:	4f                   	rex.WRXB
    2478:	4d                   	rex.WRB
    2479:	49                   	rex.WB
    247a:	43 5f                	rex.XB pop r15
    247c:	4c                   	rex.WR
    247d:	4f                   	rex.WRXB
    247e:	4e                   	rex.WRX
    247f:	47 5f                	rex.RXB pop r15
    2481:	4c                   	rex.WR
    2482:	4f                   	rex.WRXB
    2483:	43                   	rex.XB
    2484:	4b 5f                	rex.WXB pop r15
    2486:	46 52                	rex.RX push rdx
    2488:	45                   	rex.RB
    2489:	45 20 32             	and    BYTE PTR [r10],r14b
    248c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    248f:	46                   	rex.RX
    2490:	4c 54                	rex.WR push rsp
    2492:	33 32                	xor    esi,DWORD PTR [rdx]
    2494:	58                   	pop    rax
    2495:	5f                   	pop    rdi
    2496:	44                   	rex.R
    2497:	49                   	rex.WB
    2498:	47 5f                	rex.RXB pop r15
    249a:	5f                   	pop    rdi
    249b:	20 31                	and    BYTE PTR [rcx],dh
    249d:	35 00 5f 5f 46       	xor    eax,0x465f5f00
    24a2:	4c 54                	rex.WR push rsp
    24a4:	33 32                	xor    esi,DWORD PTR [rdx]
    24a6:	58                   	pop    rax
    24a7:	5f                   	pop    rdi
    24a8:	4d                   	rex.WRB
    24a9:	41                   	rex.B
    24aa:	4e 54                	rex.WRX push rsp
    24ac:	5f                   	pop    rdi
    24ad:	44                   	rex.R
    24ae:	49                   	rex.WB
    24af:	47 5f                	rex.RXB pop r15
    24b1:	5f                   	pop    rdi
    24b2:	20 35 33 00 5f 49    	and    BYTE PTR [rip+0x495f0033],dh        # 495f24eb <_end+0x493f14d3>
    24b8:	4f 5f                	rex.WRXB pop r15
    24ba:	77 72                	ja     252e <__FRAME_END__+0x1b2a>
    24bc:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    24c3:	65 
    24c4:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
    24c7:	50                   	push   rax
    24c8:	36 34 20             	ss xor al,0x20
    24cb:	31 00                	xor    DWORD PTR [rax],eax
    24cd:	5f                   	pop    rdi
    24ce:	46                   	rex.RX
    24cf:	45                   	rex.RB
    24d0:	41 54                	push   r12
    24d2:	55                   	push   rbp
    24d3:	52                   	push   rdx
    24d4:	45 53                	rex.RB push r11
    24d6:	5f                   	pop    rdi
    24d7:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    24da:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24dd:	46                   	rex.RX
    24de:	4c 54                	rex.WR push rsp
    24e0:	33 32                	xor    esi,DWORD PTR [rdx]
    24e2:	5f                   	pop    rdi
    24e3:	44                   	rex.R
    24e4:	49                   	rex.WB
    24e5:	47 5f                	rex.RXB pop r15
    24e7:	5f                   	pop    rdi
    24e8:	20 36                	and    BYTE PTR [rsi],dh
    24ea:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24ed:	46 53                	rex.RX push rbx
    24ef:	57                   	push   rdi
    24f0:	4f 52                	rex.WRXB push r10
    24f2:	44 5f                	rex.R pop rdi
    24f4:	54                   	push   rsp
    24f5:	5f                   	pop    rdi
    24f6:	54                   	push   rsp
    24f7:	59                   	pop    rcx
    24f8:	50                   	push   rax
    24f9:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    24fd:	53                   	push   rbx
    24fe:	59                   	pop    rcx
    24ff:	53                   	push   rbx
    2500:	43                   	rex.XB
    2501:	41                   	rex.B
    2502:	4c                   	rex.WR
    2503:	4c 5f                	rex.WR pop rdi
    2505:	53                   	push   rbx
    2506:	4c                   	rex.WR
    2507:	4f                   	rex.WRXB
    2508:	4e                   	rex.WRX
    2509:	47 5f                	rex.RXB pop r15
    250b:	54                   	push   rsp
    250c:	59                   	pop    rcx
    250d:	50                   	push   rax
    250e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2512:	53                   	push   rbx
    2513:	4c                   	rex.WR
    2514:	4f                   	rex.WRXB
    2515:	4e                   	rex.WRX
    2516:	47 57                	rex.RXB push r15
    2518:	4f 52                	rex.WRXB push r10
    251a:	44 5f                	rex.R pop rdi
    251c:	54                   	push   rsp
    251d:	59                   	pop    rcx
    251e:	50                   	push   rax
    251f:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    2524:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2528:	74 00                	je     252a <__FRAME_END__+0x1b26>
    252a:	5f                   	pop    rdi
    252b:	49                   	rex.WB
    252c:	4f 5f                	rex.WRXB pop r15
    252e:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    2531:	5f                   	pop    rdi
    2532:	73 74                	jae    25a8 <__FRAME_END__+0x1ba4>
    2534:	64 69 6e 5f 00 5f 5f 	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x785f5f00
    253b:	78 
    253c:	38 36                	cmp    BYTE PTR [rsi],dh
    253e:	5f                   	pop    rdi
    253f:	36 34 20             	ss xor al,0x20
    2542:	31 00                	xor    DWORD PTR [rax],eax
    2544:	5f                   	pop    rdi
    2545:	5f                   	pop    rdi
    2546:	46                   	rex.RX
    2547:	4c 54                	rex.WR push rsp
    2549:	36 34 58             	ss xor al,0x58
    254c:	5f                   	pop    rdi
    254d:	4d                   	rex.WRB
    254e:	41 58                	pop    r8
    2550:	5f                   	pop    rdi
    2551:	31 30                	xor    DWORD PTR [rax],esi
    2553:	5f                   	pop    rdi
    2554:	45 58                	rex.RB pop r8
    2556:	50                   	push   rax
    2557:	5f                   	pop    rdi
    2558:	5f                   	pop    rdi
    2559:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    255c:	33 32                	xor    esi,DWORD PTR [rdx]
    255e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2561:	44                   	rex.R
    2562:	42                   	rex.X
    2563:	4c 5f                	rex.WR pop rdi
    2565:	4d                   	rex.WRB
    2566:	49                   	rex.WB
    2567:	4e 5f                	rex.WRX pop rdi
    2569:	5f                   	pop    rdi
    256a:	20 28                	and    BYTE PTR [rax],ch
    256c:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    2570:	62                   	(bad)  
    2571:	6c                   	ins    BYTE PTR es:[rdi],dx
    2572:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    2575:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    2578:	35 30 37 33 38       	xor    eax,0x38333730
    257d:	35 38 35 30 37       	xor    eax,0x37303538
    2582:	32 30                	xor    dh,BYTE PTR [rax]
    2584:	31 33                	xor    DWORD PTR [rbx],esi
    2586:	38 33                	cmp    BYTE PTR [rbx],dh
    2588:	30 39                	xor    BYTE PTR [rcx],bh
    258a:	30 32                	xor    BYTE PTR [rdx],dh
    258c:	33 32                	xor    esi,DWORD PTR [rdx]
    258e:	37                   	(bad)  
    258f:	31 37                	xor    DWORD PTR [rdi],esi
    2591:	33 33                	xor    esi,DWORD PTR [rbx]
    2593:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    2596:	34 30                	xor    al,0x30
    2598:	36 65 2d 33 30 38 4c 	ss gs sub eax,0x4c383033
    259f:	29 00                	sub    DWORD PTR [rax],eax
    25a1:	5f                   	pop    rdi
    25a2:	49                   	rex.WB
    25a3:	4f 5f                	rex.WRXB pop r15
    25a5:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    25a8:	5f                   	pop    rdi
    25a9:	73 74                	jae    261f <__FRAME_END__+0x1c1b>
    25ab:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    25ad:	75 74                	jne    2623 <__FRAME_END__+0x1c1f>
    25af:	5f                   	pop    rdi
    25b0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25b3:	55                   	push   rbp
    25b4:	49                   	rex.WB
    25b5:	4e 54                	rex.WRX push rsp
    25b7:	5f                   	pop    rdi
    25b8:	46                   	rex.RX
    25b9:	41 53                	push   r11
    25bb:	54                   	push   rsp
    25bc:	33 32                	xor    esi,DWORD PTR [rdx]
    25be:	5f                   	pop    rdi
    25bf:	4d                   	rex.WRB
    25c0:	41 58                	pop    r8
    25c2:	5f                   	pop    rdi
    25c3:	5f                   	pop    rdi
    25c4:	20 30                	and    BYTE PTR [rax],dh
    25c6:	78 66                	js     262e <__FRAME_END__+0x1c2a>
    25c8:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    25cf:	66 66 66 66 66 66 66 
    25d6:	66 55                	push   bp
    25d8:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    25dc:	46                   	rex.RX
    25dd:	49                   	rex.WB
    25de:	4e                   	rex.WRX
    25df:	49 54                	rex.WB push r12
    25e1:	45 5f                	rex.RB pop r15
    25e3:	4d                   	rex.WRB
    25e4:	41 54                	push   r12
    25e6:	48 5f                	rex.W pop rdi
    25e8:	4f                   	rex.WRXB
    25e9:	4e                   	rex.WRX
    25ea:	4c 59                	rex.WR pop rcx
    25ec:	5f                   	pop    rdi
    25ed:	5f                   	pop    rdi
    25ee:	20 30                	and    BYTE PTR [rax],dh
    25f0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    25f3:	4f 5f                	rex.WRXB pop r15
    25f5:	73 61                	jae    2658 <__FRAME_END__+0x1c54>
    25f7:	76 65                	jbe    265e <__FRAME_END__+0x1c5a>
    25f9:	5f                   	pop    rdi
    25fa:	62 61                	(bad)  
    25fc:	73 65                	jae    2663 <__FRAME_END__+0x1c5f>
    25fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2601:	55                   	push   rbp
    2602:	31 36                	xor    DWORD PTR [rsi],esi
    2604:	5f                   	pop    rdi
    2605:	54                   	push   rsp
    2606:	59                   	pop    rcx
    2607:	50                   	push   rax
    2608:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    260c:	73 69                	jae    2677 <__FRAME_END__+0x1c73>
    260e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2610:	65 64 20 73 68       	gs and BYTE PTR fs:[rbx+0x68],dh
    2615:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2616:	72 74                	jb     268c <__FRAME_END__+0x1c88>
    2618:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    261b:	74 00                	je     261d <__FRAME_END__+0x1c19>
    261d:	45                   	rex.RB
    261e:	4f                   	rex.WRXB
    261f:	46 20 28             	rex.RX and BYTE PTR [rax],r13b
    2622:	2d 31 29 00 5f       	sub    eax,0x5f002931
    2627:	5f                   	pop    rdi
    2628:	46                   	rex.RX
    2629:	4c 54                	rex.WR push rsp
    262b:	36 34 5f             	ss xor al,0x5f
    262e:	4d                   	rex.WRB
    262f:	41 58                	pop    r8
    2631:	5f                   	pop    rdi
    2632:	5f                   	pop    rdi
    2633:	20 31                	and    BYTE PTR [rcx],dh
    2635:	2e 37                	cs (bad) 
    2637:	39 37                	cmp    DWORD PTR [rdi],esi
    2639:	36 39 33             	cmp    DWORD PTR ss:[rbx],esi
    263c:	31 33                	xor    DWORD PTR [rbx],esi
    263e:	34 38                	xor    al,0x38
    2640:	36 32 33             	xor    dh,BYTE PTR ss:[rbx]
    2643:	31 35 37 30 38 31    	xor    DWORD PTR [rip+0x31383037],esi        # 31385680 <_end+0x31184668>
    2649:	34 35                	xor    al,0x35
    264b:	32 37                	xor    dh,BYTE PTR [rdi]
    264d:	34 32                	xor    al,0x32
    264f:	33 37                	xor    esi,DWORD PTR [rdi]
    2651:	33 31                	xor    esi,DWORD PTR [rcx]
    2653:	37                   	(bad)  
    2654:	30 34 33             	xor    BYTE PTR [rbx+rsi*1],dh
    2657:	35 37 65 2b 33       	xor    eax,0x332b6537
    265c:	30 38                	xor    BYTE PTR [rax],bh
    265e:	46                   	rex.RX
    265f:	36 34 00             	ss xor al,0x0
    2662:	5f                   	pop    rdi
    2663:	5f                   	pop    rdi
    2664:	73 69                	jae    26cf <__FRAME_END__+0x1ccb>
    2666:	7a 65                	jp     26cd <__FRAME_END__+0x1cc9>
    2668:	5f                   	pop    rdi
    2669:	74 5f                	je     26ca <__FRAME_END__+0x1cc6>
    266b:	5f                   	pop    rdi
    266c:	20 00                	and    BYTE PTR [rax],al
    266e:	5f                   	pop    rdi
    266f:	5f                   	pop    rdi
    2670:	55                   	push   rbp
    2671:	49                   	rex.WB
    2672:	4e 54                	rex.WRX push rsp
    2674:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    2677:	59                   	pop    rcx
    2678:	50                   	push   rax
    2679:	45 5f                	rex.RB pop r15
    267b:	5f                   	pop    rdi
    267c:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    267f:	73 69                	jae    26ea <__FRAME_END__+0x1ce6>
    2681:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2683:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    2688:	61                   	(bad)  
    2689:	72 00                	jb     268b <__FRAME_END__+0x1c87>
    268b:	5f                   	pop    rdi
    268c:	49                   	rex.WB
    268d:	4f 5f                	rex.WRXB pop r15
    268f:	66 69 6c 65 5f 66 6c 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6c66
    2696:	61                   	(bad)  
    2697:	67 73 20             	addr32 jae 26ba <__FRAME_END__+0x1cb6>
    269a:	5f                   	pop    rdi
    269b:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    269d:	61                   	(bad)  
    269e:	67 73 00             	addr32 jae 26a1 <__FRAME_END__+0x1c9d>
    26a1:	5f                   	pop    rdi
    26a2:	5f                   	pop    rdi
    26a3:	55                   	push   rbp
    26a4:	53                   	push   rbx
    26a5:	45 5f                	rex.RB pop r15
    26a7:	58                   	pop    rax
    26a8:	4f 50                	rex.WRXB push r8
    26aa:	45                   	rex.RB
    26ab:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    26af:	58                   	pop    rax
    26b0:	53                   	push   rbx
    26b1:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    26b5:	49                   	rex.WB
    26b6:	4e 54                	rex.WRX push rsp
    26b8:	5f                   	pop    rdi
    26b9:	46                   	rex.RX
    26ba:	41 53                	push   r11
    26bc:	54                   	push   rsp
    26bd:	33 32                	xor    esi,DWORD PTR [rdx]
    26bf:	5f                   	pop    rdi
    26c0:	54                   	push   rsp
    26c1:	59                   	pop    rcx
    26c2:	50                   	push   rax
    26c3:	45 5f                	rex.RB pop r15
    26c5:	5f                   	pop    rdi
    26c6:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    26ca:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    26ce:	74 00                	je     26d0 <__FRAME_END__+0x1ccc>
    26d0:	5f                   	pop    rdi
    26d1:	49                   	rex.WB
    26d2:	4f 53                	rex.WRXB push r11
    26d4:	5f                   	pop    rdi
    26d5:	49                   	rex.WB
    26d6:	4e 50                	rex.WRX push rax
    26d8:	55                   	push   rbp
    26d9:	54                   	push   rsp
    26da:	20 31                	and    BYTE PTR [rcx],dh
    26dc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26df:	47                   	rex.RXB
    26e0:	43                   	rex.XB
    26e1:	43 5f                	rex.XB pop r15
    26e3:	41 53                	push   r11
    26e5:	4d 5f                	rex.WRB pop r15
    26e7:	46                   	rex.RX
    26e8:	4c                   	rex.WR
    26e9:	41                   	rex.B
    26ea:	47 5f                	rex.RXB pop r15
    26ec:	4f 55                	rex.WRXB push r13
    26ee:	54                   	push   rsp
    26ef:	50                   	push   rax
    26f0:	55                   	push   rbp
    26f1:	54                   	push   rsp
    26f2:	53                   	push   rbx
    26f3:	5f                   	pop    rdi
    26f4:	5f                   	pop    rdi
    26f5:	20 31                	and    BYTE PTR [rcx],dh
    26f7:	00 70 75             	add    BYTE PTR [rax+0x75],dh
    26fa:	74 63                	je     275f <__FRAME_END__+0x1d5b>
    26fc:	28 5f 63             	sub    BYTE PTR [rdi+0x63],bl
    26ff:	68 2c 5f 66 70       	push   0x70665f2c
    2704:	29 20                	sub    DWORD PTR [rax],esp
    2706:	5f                   	pop    rdi
    2707:	49                   	rex.WB
    2708:	4f 5f                	rex.WRXB pop r15
    270a:	70 75                	jo     2781 <__FRAME_END__+0x1d7d>
    270c:	74 63                	je     2771 <__FRAME_END__+0x1d6d>
    270e:	20 28                	and    BYTE PTR [rax],ch
    2710:	5f                   	pop    rdi
    2711:	63 68 2c             	movsxd ebp,DWORD PTR [rax+0x2c]
    2714:	20 5f 66             	and    BYTE PTR [rdi+0x66],bl
    2717:	70 29                	jo     2742 <__FRAME_END__+0x1d3e>
    2719:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    271c:	55                   	push   rbp
    271d:	49                   	rex.WB
    271e:	4e 54                	rex.WRX push rsp
    2720:	5f                   	pop    rdi
    2721:	4c                   	rex.WR
    2722:	45                   	rex.RB
    2723:	41 53                	push   r11
    2725:	54                   	push   rsp
    2726:	36 34 5f             	ss xor al,0x5f
    2729:	4d                   	rex.WRB
    272a:	41 58                	pop    r8
    272c:	5f                   	pop    rdi
    272d:	5f                   	pop    rdi
    272e:	20 30                	and    BYTE PTR [rax],dh
    2730:	78 66                	js     2798 <__FRAME_END__+0x1d94>
    2732:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2739:	66 66 66 66 66 66 66 
    2740:	66 55                	push   bp
    2742:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2746:	50                   	push   rax
    2747:	4d 54                	rex.WRB push r12
    2749:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    274c:	55                   	push   rbp
    274d:	51                   	push   rcx
    274e:	55                   	push   rbp
    274f:	41                   	rex.B
    2750:	44 5f                	rex.R pop rdi
    2752:	54                   	push   rsp
    2753:	59                   	pop    rcx
    2754:	50                   	push   rax
    2755:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    2759:	73 69                	jae    27c4 <__FRAME_END__+0x1dc0>
    275b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    275d:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2763:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2767:	74 00                	je     2769 <__FRAME_END__+0x1d65>
    2769:	5f                   	pop    rdi
    276a:	5f                   	pop    rdi
    276b:	45                   	rex.RB
    276c:	4c                   	rex.WR
    276d:	46 5f                	rex.RX pop rdi
    276f:	5f                   	pop    rdi
    2770:	20 31                	and    BYTE PTR [rcx],dh
    2772:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2775:	46                   	rex.RX
    2776:	4c 54                	rex.WR push rsp
    2778:	33 32                	xor    esi,DWORD PTR [rdx]
    277a:	58                   	pop    rax
    277b:	5f                   	pop    rdi
    277c:	4d                   	rex.WRB
    277d:	49                   	rex.WB
    277e:	4e 5f                	rex.WRX pop rdi
    2780:	5f                   	pop    rdi
    2781:	20 32                	and    BYTE PTR [rdx],dh
    2783:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    2786:	35 30 37 33 38       	xor    eax,0x38333730
    278b:	35 38 35 30 37       	xor    eax,0x37303538
    2790:	32 30                	xor    dh,BYTE PTR [rax]
    2792:	31 33                	xor    DWORD PTR [rbx],esi
    2794:	38 33                	cmp    BYTE PTR [rbx],dh
    2796:	30 39                	xor    BYTE PTR [rcx],bh
    2798:	30 32                	xor    BYTE PTR [rdx],dh
    279a:	33 32                	xor    esi,DWORD PTR [rdx]
    279c:	37                   	(bad)  
    279d:	31 37                	xor    DWORD PTR [rdi],esi
    279f:	33 33                	xor    esi,DWORD PTR [rbx]
    27a1:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    27a4:	34 30                	xor    al,0x30
    27a6:	36 65 2d 33 30 38 46 	ss gs sub eax,0x46383033
    27ad:	33 32                	xor    esi,DWORD PTR [rdx]
    27af:	78 00                	js     27b1 <__FRAME_END__+0x1dad>
    27b1:	5f                   	pop    rdi
    27b2:	5f                   	pop    rdi
    27b3:	55                   	push   rbp
    27b4:	49                   	rex.WB
    27b5:	4e 54                	rex.WRX push rsp
    27b7:	50                   	push   rax
    27b8:	54                   	push   rsp
    27b9:	52                   	push   rdx
    27ba:	5f                   	pop    rdi
    27bb:	54                   	push   rsp
    27bc:	59                   	pop    rcx
    27bd:	50                   	push   rax
    27be:	45 5f                	rex.RB pop r15
    27c0:	5f                   	pop    rdi
    27c1:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    27c5:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    27c9:	73 69                	jae    2834 <__FRAME_END__+0x1e30>
    27cb:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    27cd:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    27d2:	74 00                	je     27d4 <__FRAME_END__+0x1dd0>
    27d4:	5f                   	pop    rdi
    27d5:	5f                   	pop    rdi
    27d6:	49                   	rex.WB
    27d7:	4e 54                	rex.WRX push rsp
    27d9:	31 36                	xor    DWORD PTR [rsi],esi
    27db:	5f                   	pop    rdi
    27dc:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    27e0:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    27e3:	5f                   	pop    rdi
    27e4:	5f                   	pop    rdi
    27e5:	47                   	rex.RXB
    27e6:	43                   	rex.XB
    27e7:	43 5f                	rex.XB pop r15
    27e9:	48                   	rex.W
    27ea:	41 56                	push   r14
    27ec:	45 5f                	rex.RB pop r15
    27ee:	44 57                	rex.R push rdi
    27f0:	41 52                	push   r10
    27f2:	46 32 5f 43          	rex.RX xor r11b,BYTE PTR [rdi+0x43]
    27f6:	46                   	rex.RX
    27f7:	49 5f                	rex.WB pop r15
    27f9:	41 53                	push   r11
    27fb:	4d 20 31             	rex.WRB and BYTE PTR [r9],r14b
    27fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2801:	53                   	push   rbx
    2802:	49 5a                	rex.WB pop r10
    2804:	45                   	rex.RB
    2805:	4f                   	rex.WRXB
    2806:	46 5f                	rex.RX pop rdi
    2808:	46                   	rex.RX
    2809:	4c                   	rex.WR
    280a:	4f                   	rex.WRXB
    280b:	41 54                	push   r12
    280d:	5f                   	pop    rdi
    280e:	5f                   	pop    rdi
    280f:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2812:	5f                   	pop    rdi
    2813:	5f                   	pop    rdi
    2814:	44                   	rex.R
    2815:	45                   	rex.RB
    2816:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2819:	5f                   	pop    rdi
    281a:	53                   	push   rbx
    281b:	55                   	push   rbp
    281c:	42                   	rex.X
    281d:	4e                   	rex.WRX
    281e:	4f 52                	rex.WRXB push r10
    2820:	4d                   	rex.WRB
    2821:	41                   	rex.B
    2822:	4c 5f                	rex.WR pop rdi
    2824:	4d                   	rex.WRB
    2825:	49                   	rex.WB
    2826:	4e 5f                	rex.WRX pop rdi
    2828:	5f                   	pop    rdi
    2829:	20 30                	and    BYTE PTR [rax],dh
    282b:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    282e:	30 30                	xor    BYTE PTR [rax],dh
    2830:	30 31                	xor    BYTE PTR [rcx],dh
    2832:	45 2d 39 35 44 46    	rex.RB sub eax,0x46443539
    2838:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    283b:	4f 5f                	rex.WRXB pop r15
    283d:	49 53                	rex.WB push r11
    283f:	5f                   	pop    rdi
    2840:	41 50                	push   r8
    2842:	50                   	push   rax
    2843:	45                   	rex.RB
    2844:	4e                   	rex.WRX
    2845:	44                   	rex.R
    2846:	49                   	rex.WB
    2847:	4e                   	rex.WRX
    2848:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    284b:	78 31                	js     287e <__FRAME_END__+0x1e7a>
    284d:	30 30                	xor    BYTE PTR [rax],dh
    284f:	30 00                	xor    BYTE PTR [rax],al
    2851:	5f                   	pop    rdi
    2852:	5f                   	pop    rdi
    2853:	46                   	rex.RX
    2854:	4c 54                	rex.WR push rsp
    2856:	36 34 58             	ss xor al,0x58
    2859:	5f                   	pop    rdi
    285a:	48                   	rex.W
    285b:	41 53                	push   r11
    285d:	5f                   	pop    rdi
    285e:	51                   	push   rcx
    285f:	55                   	push   rbp
    2860:	49                   	rex.WB
    2861:	45 54                	rex.RB push r12
    2863:	5f                   	pop    rdi
    2864:	4e                   	rex.WRX
    2865:	41                   	rex.B
    2866:	4e 5f                	rex.WRX pop rdi
    2868:	5f                   	pop    rdi
    2869:	20 31                	and    BYTE PTR [rcx],dh
    286b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    286e:	46                   	rex.RX
    286f:	4c 54                	rex.WR push rsp
    2871:	5f                   	pop    rdi
    2872:	48                   	rex.W
    2873:	41 53                	push   r11
    2875:	5f                   	pop    rdi
    2876:	49                   	rex.WB
    2877:	4e                   	rex.WRX
    2878:	46                   	rex.RX
    2879:	49                   	rex.WB
    287a:	4e                   	rex.WRX
    287b:	49 54                	rex.WB push r12
    287d:	59                   	pop    rcx
    287e:	5f                   	pop    rdi
    287f:	5f                   	pop    rdi
    2880:	20 31                	and    BYTE PTR [rcx],dh
    2882:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2885:	4f 53                	rex.WRXB push r11
    2887:	5f                   	pop    rdi
    2888:	4e                   	rex.WRX
    2889:	4f 52                	rex.WRXB push r10
    288b:	45 50                	rex.RB push r8
    288d:	4c                   	rex.WR
    288e:	41                   	rex.B
    288f:	43                   	rex.XB
    2890:	45 20 36             	and    BYTE PTR [r14],r14b
    2893:	34 00                	xor    al,0x0
    2895:	5f                   	pop    rdi
    2896:	5f                   	pop    rdi
    2897:	53                   	push   rbx
    2898:	54                   	push   rsp
    2899:	44 5f                	rex.R pop rdi
    289b:	54                   	push   rsp
    289c:	59                   	pop    rcx
    289d:	50                   	push   rax
    289e:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    28a2:	55                   	push   rbp
    28a3:	53                   	push   rbx
    28a4:	45 5f                	rex.RB pop r15
    28a6:	50                   	push   rax
    28a7:	4f 53                	rex.WRXB push r11
    28a9:	49 58                	rex.WB pop r8
    28ab:	31 39                	xor    DWORD PTR [rcx],edi
    28ad:	39 33                	cmp    DWORD PTR [rbx],esi
    28af:	30 39                	xor    BYTE PTR [rcx],bh
    28b1:	20 31                	and    BYTE PTR [rcx],dh
    28b3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    28b6:	4f 5f                	rex.WRXB pop r15
    28b8:	73 69                	jae    2923 <__FRAME_END__+0x1f1f>
    28ba:	7a 65                	jp     2921 <__FRAME_END__+0x1f1d>
    28bc:	5f                   	pop    rdi
    28bd:	74 20                	je     28df <__FRAME_END__+0x1edb>
    28bf:	73 69                	jae    292a <__FRAME_END__+0x1f26>
    28c1:	7a 65                	jp     2928 <__FRAME_END__+0x1f24>
    28c3:	5f                   	pop    rdi
    28c4:	74 00                	je     28c6 <__FRAME_END__+0x1ec2>
    28c6:	5f                   	pop    rdi
    28c7:	5f                   	pop    rdi
    28c8:	49                   	rex.WB
    28c9:	4e                   	rex.WRX
    28ca:	4f                   	rex.WRXB
    28cb:	36 34 5f             	ss xor al,0x5f
    28ce:	54                   	push   rsp
    28cf:	5f                   	pop    rdi
    28d0:	54                   	push   rsp
    28d1:	59                   	pop    rcx
    28d2:	50                   	push   rax
    28d3:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    28d7:	55                   	push   rbp
    28d8:	51                   	push   rcx
    28d9:	55                   	push   rbp
    28da:	41                   	rex.B
    28db:	44 5f                	rex.R pop rdi
    28dd:	54                   	push   rsp
    28de:	59                   	pop    rcx
    28df:	50                   	push   rax
    28e0:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    28e4:	47                   	rex.RXB
    28e5:	4e 55                	rex.WRX push rbp
    28e7:	5f                   	pop    rdi
    28e8:	4c                   	rex.WR
    28e9:	49                   	rex.WB
    28ea:	42 52                	rex.X push rdx
    28ec:	41 52                	push   r10
    28ee:	59                   	pop    rcx
    28ef:	5f                   	pop    rdi
    28f0:	5f                   	pop    rdi
    28f1:	20 36                	and    BYTE PTR [rsi],dh
    28f3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    28f6:	53                   	push   rbx
    28f7:	54                   	push   rsp
    28f8:	44                   	rex.R
    28f9:	43 5f                	rex.XB pop r15
    28fb:	5f                   	pop    rdi
    28fc:	20 31                	and    BYTE PTR [rcx],dh
    28fe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2901:	67 6c                	ins    BYTE PTR es:[edi],dx
    2903:	69 62 63 5f 63 39 39 	imul   esp,DWORD PTR [rdx+0x63],0x3939635f
    290a:	5f                   	pop    rdi
    290b:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    290d:	65 78 61             	gs js  2971 <__FRAME_END__+0x1f6d>
    2910:	72 72                	jb     2984 <__FRAME_END__+0x1f80>
    2912:	5f                   	pop    rdi
    2913:	61                   	(bad)  
    2914:	76 61                	jbe    2977 <__FRAME_END__+0x1f73>
    2916:	69 6c 61 62 6c 65 20 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x3120656c
    291d:	31 
    291e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2921:	53                   	push   rbx
    2922:	53                   	push   rbx
    2923:	45 32 5f 5f          	xor    r11b,BYTE PTR [r15+0x5f]
    2927:	20 31                	and    BYTE PTR [rcx],dh
    2929:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    292c:	53                   	push   rbx
    292d:	4c                   	rex.WR
    292e:	4f                   	rex.WRXB
    292f:	4e                   	rex.WRX
    2930:	47 33 32             	rex.RXB xor r14d,DWORD PTR [r10]
    2933:	5f                   	pop    rdi
    2934:	54                   	push   rsp
    2935:	59                   	pop    rcx
    2936:	50                   	push   rax
    2937:	45 20 69 6e          	and    BYTE PTR [r9+0x6e],r13b
    293b:	74 00                	je     293d <__FRAME_END__+0x1f39>
    293d:	5f                   	pop    rdi
    293e:	5f                   	pop    rdi
    293f:	44                   	rex.R
    2940:	42                   	rex.X
    2941:	4c 5f                	rex.WR pop rdi
    2943:	4d                   	rex.WRB
    2944:	41 58                	pop    r8
    2946:	5f                   	pop    rdi
    2947:	45 58                	rex.RB pop r8
    2949:	50                   	push   rax
    294a:	5f                   	pop    rdi
    294b:	5f                   	pop    rdi
    294c:	20 31                	and    BYTE PTR [rcx],dh
    294e:	30 32                	xor    BYTE PTR [rdx],dh
    2950:	34 00                	xor    al,0x0
    2952:	5f                   	pop    rdi
    2953:	5f                   	pop    rdi
    2954:	53                   	push   rbx
    2955:	49 5a                	rex.WB pop r10
    2957:	45                   	rex.RB
    2958:	4f                   	rex.WRXB
    2959:	46 5f                	rex.RX pop rdi
    295b:	4c                   	rex.WR
    295c:	4f                   	rex.WRXB
    295d:	4e                   	rex.WRX
    295e:	47 5f                	rex.RXB pop r15
    2960:	5f                   	pop    rdi
    2961:	20 38                	and    BYTE PTR [rax],bh
    2963:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2966:	41 54                	push   r12
    2968:	4f                   	rex.WRXB
    2969:	4d                   	rex.WRB
    296a:	49                   	rex.WB
    296b:	43 5f                	rex.XB pop r15
    296d:	43                   	rex.XB
    296e:	4f                   	rex.WRXB
    296f:	4e 53                	rex.WRX push rbx
    2971:	55                   	push   rbp
    2972:	4d                   	rex.WRB
    2973:	45 20 31             	and    BYTE PTR [r9],r14b
    2976:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2979:	55                   	push   rbp
    297a:	53                   	push   rbx
    297b:	45 5f                	rex.RB pop r15
    297d:	46                   	rex.RX
    297e:	49                   	rex.WB
    297f:	4c                   	rex.WR
    2980:	45 5f                	rex.RB pop r15
    2982:	4f                   	rex.WRXB
    2983:	46                   	rex.RX
    2984:	46 53                	rex.RX push rbx
    2986:	45 54                	rex.RB push r12
    2988:	36 34 00             	ss xor al,0x0
    298b:	5f                   	pop    rdi
    298c:	49                   	rex.WB
    298d:	4f 5f                	rex.WRXB pop r15
    298f:	46                   	rex.RX
    2990:	4c                   	rex.WR
    2991:	41                   	rex.B
    2992:	47 53                	rex.RXB push r11
    2994:	32 5f 4d             	xor    bl,BYTE PTR [rdi+0x4d]
    2997:	4d                   	rex.WRB
    2998:	41 50                	push   r8
    299a:	20 31                	and    BYTE PTR [rcx],dh
    299c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    299f:	46                   	rex.RX
    29a0:	4c 54                	rex.WR push rsp
    29a2:	33 32                	xor    esi,DWORD PTR [rdx]
    29a4:	5f                   	pop    rdi
    29a5:	4d                   	rex.WRB
    29a6:	49                   	rex.WB
    29a7:	4e 5f                	rex.WRX pop rdi
    29a9:	5f                   	pop    rdi
    29aa:	20 31                	and    BYTE PTR [rcx],dh
    29ac:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    29af:	35 34 39 34 33       	xor    eax,0x33343934
    29b4:	35 30 38 32 32       	xor    eax,0x32323830
    29b9:	32 38                	xor    bh,BYTE PTR [rax]
    29bb:	37                   	(bad)  
    29bc:	35 30 37 39 36       	xor    eax,0x36393730
    29c1:	38 37                	cmp    BYTE PTR [rdi],dh
    29c3:	33 36                	xor    esi,DWORD PTR [rsi]
    29c5:	35 33 37 32 32       	xor    eax,0x32323733
    29ca:	32 32                	xor    dh,BYTE PTR [rdx]
    29cc:	34 35                	xor    al,0x35
    29ce:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    29d2:	33 38                	xor    edi,DWORD PTR [rax]
    29d4:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    29d7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29da:	57                   	push   rdi
    29db:	49                   	rex.WB
    29dc:	4e 54                	rex.WRX push rsp
    29de:	5f                   	pop    rdi
    29df:	54                   	push   rsp
    29e0:	59                   	pop    rcx
    29e1:	50                   	push   rax
    29e2:	45 5f                	rex.RB pop r15
    29e4:	5f                   	pop    rdi
    29e5:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    29e8:	73 69                	jae    2a53 <__FRAME_END__+0x204f>
    29ea:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    29ec:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    29f1:	74 00                	je     29f3 <__FRAME_END__+0x1fef>
    29f3:	5f                   	pop    rdi
    29f4:	5f                   	pop    rdi
    29f5:	55                   	push   rbp
    29f6:	53                   	push   rbx
    29f7:	45 5f                	rex.RB pop r15
    29f9:	4d                   	rex.WRB
    29fa:	49 53                	rex.WB push r11
    29fc:	43 00 5f 49          	rex.XB add BYTE PTR [r15+0x49],bl
    2a00:	4f 5f                	rex.WRXB pop r15
    2a02:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    2a06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a07:	75 70                	jne    2a79 <__FRAME_END__+0x2075>
    2a09:	5f                   	pop    rdi
    2a0a:	72 65                	jb     2a71 <__FRAME_END__+0x206d>
    2a0c:	67 69 6f 6e 5f 65 6e 	imul   ebp,DWORD PTR [edi+0x6e],0x646e655f
    2a13:	64 
    2a14:	28 5f 44             	sub    BYTE PTR [rdi+0x44],bl
    2a17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a18:	69 74 29 20 00 5f 5f 	imul   esi,DWORD PTR [rcx+rbp*1+0x20],0x495f5f00
    2a1f:	49 
    2a20:	4e 54                	rex.WRX push rsp
    2a22:	31 36                	xor    DWORD PTR [rsi],esi
    2a24:	5f                   	pop    rdi
    2a25:	4d                   	rex.WRB
    2a26:	41 58                	pop    r8
    2a28:	5f                   	pop    rdi
    2a29:	5f                   	pop    rdi
    2a2a:	20 30                	and    BYTE PTR [rax],dh
    2a2c:	78 37                	js     2a65 <__FRAME_END__+0x2061>
    2a2e:	66 66 66 00 5f 50    	data16 data16 data16 add BYTE PTR [rdi+0x50],bl
    2a34:	4f 53                	rex.WRXB push r11
    2a36:	49 58                	rex.WB pop r8
    2a38:	5f                   	pop    rdi
    2a39:	43 5f                	rex.XB pop r15
    2a3b:	53                   	push   rbx
    2a3c:	4f 55                	rex.WRXB push r13
    2a3e:	52                   	push   rdx
    2a3f:	43                   	rex.XB
    2a40:	45 20 32             	and    BYTE PTR [r10],r14b
    2a43:	30 30                	xor    BYTE PTR [rax],dh
    2a45:	38 30                	cmp    BYTE PTR [rax],dh
    2a47:	39 4c 00 5f          	cmp    DWORD PTR [rax+rax*1+0x5f],ecx
    2a4b:	5f                   	pop    rdi
    2a4c:	53                   	push   rbx
    2a4d:	43                   	rex.XB
    2a4e:	48                   	rex.W
    2a4f:	41 52                	push   r10
    2a51:	5f                   	pop    rdi
    2a52:	57                   	push   rdi
    2a53:	49                   	rex.WB
    2a54:	44 54                	rex.R push rsp
    2a56:	48 5f                	rex.W pop rdi
    2a58:	5f                   	pop    rdi
    2a59:	20 38                	and    BYTE PTR [rax],bh
    2a5b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2a5e:	55                   	push   rbp
    2a5f:	49                   	rex.WB
    2a60:	4e 54                	rex.WRX push rsp
    2a62:	33 32                	xor    esi,DWORD PTR [rdx]
    2a64:	5f                   	pop    rdi
    2a65:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2a69:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    2a6c:	23 23                	and    esp,DWORD PTR [rbx]
    2a6e:	20 55 00             	and    BYTE PTR [rbp+0x0],dl
    2a71:	5f                   	pop    rdi
    2a72:	5f                   	pop    rdi
    2a73:	4c                   	rex.WR
    2a74:	44                   	rex.R
    2a75:	42                   	rex.X
    2a76:	4c 5f                	rex.WR pop rdi
    2a78:	4d                   	rex.WRB
    2a79:	49                   	rex.WB
    2a7a:	4e 5f                	rex.WRX pop rdi
    2a7c:	31 30                	xor    DWORD PTR [rax],esi
    2a7e:	5f                   	pop    rdi
    2a7f:	45 58                	rex.RB pop r8
    2a81:	50                   	push   rax
    2a82:	5f                   	pop    rdi
    2a83:	5f                   	pop    rdi
    2a84:	20 28                	and    BYTE PTR [rax],ch
    2a86:	2d 34 39 33 31       	sub    eax,0x31333934
    2a8b:	29 00                	sub    DWORD PTR [rax],eax
    2a8d:	5f                   	pop    rdi
    2a8e:	53                   	push   rbx
    2a8f:	54                   	push   rsp
    2a90:	44                   	rex.R
    2a91:	49                   	rex.WB
    2a92:	4f 5f                	rex.WRXB pop r15
    2a94:	55                   	push   rbp
    2a95:	53                   	push   rbx
    2a96:	45 53                	rex.RB push r11
    2a98:	5f                   	pop    rdi
    2a99:	49                   	rex.WB
    2a9a:	4f 53                	rex.WRXB push r11
    2a9c:	54                   	push   rsp
    2a9d:	52                   	push   rdx
    2a9e:	45                   	rex.RB
    2a9f:	41                   	rex.B
    2aa0:	4d 20 00             	rex.WRB and BYTE PTR [r8],r8b
    2aa3:	5f                   	pop    rdi
    2aa4:	5f                   	pop    rdi
    2aa5:	53                   	push   rbx
    2aa6:	49 5a                	rex.WB pop r10
    2aa8:	45                   	rex.RB
    2aa9:	4f                   	rex.WRXB
    2aaa:	46 5f                	rex.RX pop rdi
    2aac:	44                   	rex.R
    2aad:	4f 55                	rex.WRXB push r13
    2aaf:	42                   	rex.X
    2ab0:	4c                   	rex.WR
    2ab1:	45 5f                	rex.RB pop r15
    2ab3:	5f                   	pop    rdi
    2ab4:	20 38                	and    BYTE PTR [rax],bh
    2ab6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ab9:	55                   	push   rbp
    2aba:	49                   	rex.WB
    2abb:	4e 54                	rex.WRX push rsp
    2abd:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    2ac0:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    2ac3:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2ac6:	5f                   	pop    rdi
    2ac7:	5f                   	pop    rdi
    2ac8:	42                   	rex.X
    2ac9:	4c                   	rex.WR
    2aca:	4b                   	rex.WXB
    2acb:	43                   	rex.XB
    2acc:	4e 54                	rex.WRX push rsp
    2ace:	36 34 5f             	ss xor al,0x5f
    2ad1:	54                   	push   rsp
    2ad2:	5f                   	pop    rdi
    2ad3:	54                   	push   rsp
    2ad4:	59                   	pop    rcx
    2ad5:	50                   	push   rax
    2ad6:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2ada:	53                   	push   rbx
    2adb:	51                   	push   rcx
    2adc:	55                   	push   rbp
    2add:	41                   	rex.B
    2ade:	44 5f                	rex.R pop rdi
    2ae0:	54                   	push   rsp
    2ae1:	59                   	pop    rcx
    2ae2:	50                   	push   rax
    2ae3:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    2ae7:	4f 5f                	rex.WRXB pop r15
    2ae9:	53                   	push   rbx
    2aea:	54                   	push   rsp
    2aeb:	44                   	rex.R
    2aec:	49                   	rex.WB
    2aed:	4f 20 30             	rex.WRXB and BYTE PTR [r8],r14b
    2af0:	34 30                	xor    al,0x30
    2af2:	30 30                	xor    BYTE PTR [rax],dh
    2af4:	30 00                	xor    BYTE PTR [rax],al
    2af6:	5f                   	pop    rdi
    2af7:	5f                   	pop    rdi
    2af8:	55                   	push   rbp
    2af9:	53                   	push   rbx
    2afa:	45 5f                	rex.RB pop r15
    2afc:	46                   	rex.RX
    2afd:	4f 52                	rex.WRXB push r10
    2aff:	54                   	push   rsp
    2b00:	49                   	rex.WB
    2b01:	46 59                	rex.RX pop rcx
    2b03:	5f                   	pop    rdi
    2b04:	4c                   	rex.WR
    2b05:	45 56                	rex.RB push r14
    2b07:	45                   	rex.RB
    2b08:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2b0c:	47                   	rex.RXB
    2b0d:	4c                   	rex.WR
    2b0e:	49                   	rex.WB
    2b0f:	42                   	rex.X
    2b10:	43 5f                	rex.XB pop r15
    2b12:	55                   	push   rbp
    2b13:	53                   	push   rbx
    2b14:	45 5f                	rex.RB pop r15
    2b16:	4c                   	rex.WR
    2b17:	49                   	rex.WB
    2b18:	42 5f                	rex.X pop rdi
    2b1a:	45 58                	rex.RB pop r8
    2b1c:	54                   	push   rsp
    2b1d:	32 00                	xor    al,BYTE PTR [rax]
    2b1f:	5f                   	pop    rdi
    2b20:	5f                   	pop    rdi
    2b21:	57                   	push   rdi
    2b22:	49                   	rex.WB
    2b23:	4e 54                	rex.WRX push rsp
    2b25:	5f                   	pop    rdi
    2b26:	4d                   	rex.WRB
    2b27:	49                   	rex.WB
    2b28:	4e 5f                	rex.WRX pop rdi
    2b2a:	5f                   	pop    rdi
    2b2b:	20 30                	and    BYTE PTR [rax],dh
    2b2d:	55                   	push   rbp
    2b2e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b31:	4c                   	rex.WR
    2b32:	44                   	rex.R
    2b33:	42                   	rex.X
    2b34:	4c 5f                	rex.WR pop rdi
    2b36:	4d                   	rex.WRB
    2b37:	41                   	rex.B
    2b38:	4e 54                	rex.WRX push rsp
    2b3a:	5f                   	pop    rdi
    2b3b:	44                   	rex.R
    2b3c:	49                   	rex.WB
    2b3d:	47 5f                	rex.RXB pop r15
    2b3f:	5f                   	pop    rdi
    2b40:	20 36                	and    BYTE PTR [rsi],dh
    2b42:	34 00                	xor    al,0x0
    2b44:	5f                   	pop    rdi
    2b45:	5f                   	pop    rdi
    2b46:	70 61                	jo     2ba9 <__FRAME_END__+0x21a5>
    2b48:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    2b4b:	5f                   	pop    rdi
    2b4c:	5f                   	pop    rdi
    2b4d:	70 61                	jo     2bb0 <__FRAME_END__+0x21ac>
    2b4f:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2b52:	5f                   	pop    rdi
    2b53:	5f                   	pop    rdi
    2b54:	70 61                	jo     2bb7 <__FRAME_END__+0x21b3>
    2b56:	64 33 00             	xor    eax,DWORD PTR fs:[rax]
    2b59:	5f                   	pop    rdi
    2b5a:	5f                   	pop    rdi
    2b5b:	70 61                	jo     2bbe <__FRAME_END__+0x21ba>
    2b5d:	64 34 00             	fs xor al,0x0
    2b60:	5f                   	pop    rdi
    2b61:	5f                   	pop    rdi
    2b62:	70 61                	jo     2bc5 <__FRAME_END__+0x21c1>
    2b64:	64 35 00 5f 5f 53    	fs xor eax,0x535f5f00
    2b6a:	54                   	push   rsp
    2b6b:	44                   	rex.R
    2b6c:	43 5f                	rex.XB pop r15
    2b6e:	55                   	push   rbp
    2b6f:	54                   	push   rsp
    2b70:	46 5f                	rex.RX pop rdi
    2b72:	31 36                	xor    DWORD PTR [rsi],esi
    2b74:	5f                   	pop    rdi
    2b75:	5f                   	pop    rdi
    2b76:	20 31                	and    BYTE PTR [rcx],dh
    2b78:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2b7b:	4c                   	rex.WR
    2b7c:	44                   	rex.R
    2b7d:	42                   	rex.X
    2b7e:	4c 5f                	rex.WR pop rdi
    2b80:	45 50                	rex.RB push r8
    2b82:	53                   	push   rbx
    2b83:	49                   	rex.WB
    2b84:	4c                   	rex.WR
    2b85:	4f                   	rex.WRXB
    2b86:	4e 5f                	rex.WRX pop rdi
    2b88:	5f                   	pop    rdi
    2b89:	20 31                	and    BYTE PTR [rcx],dh
    2b8b:	2e 30 38             	xor    BYTE PTR cs:[rax],bh
    2b8e:	34 32                	xor    al,0x32
    2b90:	30 32                	xor    BYTE PTR [rdx],dh
    2b92:	31 37                	xor    DWORD PTR [rdi],esi
    2b94:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2b97:	35 35 30 34 34       	xor    eax,0x34343035
    2b9c:	33 34 30             	xor    esi,DWORD PTR [rax+rsi*1]
    2b9f:	30 37                	xor    BYTE PTR [rdi],dh
    2ba1:	34 35                	xor    al,0x35
    2ba3:	32 38                	xor    bh,BYTE PTR [rax]
    2ba5:	30 30                	xor    BYTE PTR [rax],dh
    2ba7:	38 36                	cmp    BYTE PTR [rsi],dh
    2ba9:	39 39                	cmp    DWORD PTR [rcx],edi
    2bab:	34 31                	xor    al,0x31
    2bad:	37                   	(bad)  
    2bae:	31 65 2d             	xor    DWORD PTR [rbp+0x2d],esp
    2bb1:	31 39                	xor    DWORD PTR [rcx],edi
    2bb3:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2bb7:	62                   	(bad)  
    2bb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bb9:	73 30                	jae    2beb <__FRAME_END__+0x21e7>
    2bbb:	28 70 74             	sub    BYTE PTR [rax+0x74],dh
    2bbe:	72 29                	jb     2be9 <__FRAME_END__+0x21e5>
    2bc0:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2bc3:	62                   	(bad)  
    2bc4:	75 69                	jne    2c2f <__FRAME_END__+0x222b>
    2bc6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc7:	74 69                	je     2c32 <__FRAME_END__+0x222e>
    2bc9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bca:	5f                   	pop    rdi
    2bcb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bcc:	62                   	(bad)  
    2bcd:	6a 65                	push   0x65
    2bcf:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2bd3:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2bda:	72 2c                	jb     2c08 <__FRAME_END__+0x2204>
    2bdc:	20 30                	and    BYTE PTR [rax],dh
    2bde:	29 00                	sub    DWORD PTR [rax],eax
    2be0:	5f                   	pop    rdi
    2be1:	49                   	rex.WB
    2be2:	4f                   	rex.WRXB
    2be3:	4c                   	rex.WR
    2be4:	42                   	rex.X
    2be5:	46 20 31             	rex.RX and BYTE PTR [rcx],r14b
    2be8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2beb:	61                   	(bad)  
    2bec:	74 74                	je     2c62 <__FRAME_END__+0x225e>
    2bee:	72 69                	jb     2c59 <__FRAME_END__+0x2255>
    2bf0:	62                   	(bad)  
    2bf1:	75 74                	jne    2c67 <__FRAME_END__+0x2263>
    2bf3:	65 5f                	gs pop rdi
    2bf5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2bf7:	72 6d                	jb     2c66 <__FRAME_END__+0x2262>
    2bf9:	61                   	(bad)  
    2bfa:	74 5f                	je     2c5b <__FRAME_END__+0x2257>
    2bfc:	61                   	(bad)  
    2bfd:	72 67                	jb     2c66 <__FRAME_END__+0x2262>
    2bff:	5f                   	pop    rdi
    2c00:	5f                   	pop    rdi
    2c01:	28 78 29             	sub    BYTE PTR [rax+0x29],bh
    2c04:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2c07:	61                   	(bad)  
    2c08:	74 74                	je     2c7e <__FRAME_END__+0x227a>
    2c0a:	72 69                	jb     2c75 <__FRAME_END__+0x2271>
    2c0c:	62                   	(bad)  
    2c0d:	75 74                	jne    2c83 <__FRAME_END__+0x227f>
    2c0f:	65 5f                	gs pop rdi
    2c11:	5f                   	pop    rdi
    2c12:	20 28                	and    BYTE PTR [rax],ch
    2c14:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2c17:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2c19:	72 6d                	jb     2c88 <__FRAME_END__+0x2284>
    2c1b:	61                   	(bad)  
    2c1c:	74 5f                	je     2c7d <__FRAME_END__+0x2279>
    2c1e:	61                   	(bad)  
    2c1f:	72 67                	jb     2c88 <__FRAME_END__+0x2284>
    2c21:	5f                   	pop    rdi
    2c22:	5f                   	pop    rdi
    2c23:	20 28                	and    BYTE PTR [rax],ch
    2c25:	78 29                	js     2c50 <__FRAME_END__+0x224c>
    2c27:	29 29                	sub    DWORD PTR [rcx],ebp
    2c29:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c2c:	5f                   	pop    rdi
    2c2d:	5f                   	pop    rdi
    2c2e:	46                   	rex.RX
    2c2f:	49                   	rex.WB
    2c30:	4c                   	rex.WR
    2c31:	45 5f                	rex.RB pop r15
    2c33:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
    2c3a:	20 
    2c3b:	31 00                	xor    DWORD PTR [rax],eax
    2c3d:	5f                   	pop    rdi
    2c3e:	42                   	rex.X
    2c3f:	49 54                	rex.WB push r12
    2c41:	53                   	push   rbx
    2c42:	5f                   	pop    rdi
    2c43:	53                   	push   rbx
    2c44:	54                   	push   rsp
    2c45:	44                   	rex.R
    2c46:	49                   	rex.WB
    2c47:	4f 5f                	rex.WRXB pop r15
    2c49:	4c                   	rex.WR
    2c4a:	49                   	rex.WB
    2c4b:	4d 5f                	rex.WRB pop r15
    2c4d:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    2c50:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c53:	4c                   	rex.WR
    2c54:	44                   	rex.R
    2c55:	42                   	rex.X
    2c56:	4c 5f                	rex.WR pop rdi
    2c58:	48                   	rex.W
    2c59:	41 53                	push   r11
    2c5b:	5f                   	pop    rdi
    2c5c:	49                   	rex.WB
    2c5d:	4e                   	rex.WRX
    2c5e:	46                   	rex.RX
    2c5f:	49                   	rex.WB
    2c60:	4e                   	rex.WRX
    2c61:	49 54                	rex.WB push r12
    2c63:	59                   	pop    rcx
    2c64:	5f                   	pop    rdi
    2c65:	5f                   	pop    rdi
    2c66:	20 31                	and    BYTE PTR [rcx],dh
    2c68:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c6b:	55                   	push   rbp
    2c6c:	53                   	push   rbx
    2c6d:	45 5f                	rex.RB pop r15
    2c6f:	50                   	push   rax
    2c70:	4f 53                	rex.WRXB push r11
    2c72:	49 58                	rex.WB pop r8
    2c74:	20 31                	and    BYTE PTR [rcx],dh
    2c76:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c79:	49                   	rex.WB
    2c7a:	4e                   	rex.WRX
    2c7b:	4f 5f                	rex.WRXB pop r15
    2c7d:	54                   	push   rsp
    2c7e:	5f                   	pop    rdi
    2c7f:	4d                   	rex.WRB
    2c80:	41 54                	push   r12
    2c82:	43                   	rex.XB
    2c83:	48                   	rex.W
    2c84:	45 53                	rex.RB push r11
    2c86:	5f                   	pop    rdi
    2c87:	49                   	rex.WB
    2c88:	4e                   	rex.WRX
    2c89:	4f                   	rex.WRXB
    2c8a:	36 34 5f             	ss xor al,0x5f
    2c8d:	54                   	push   rsp
    2c8e:	20 31                	and    BYTE PTR [rcx],dh
    2c90:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2c93:	47                   	rex.RXB
    2c94:	43                   	rex.XB
    2c95:	43 5f                	rex.XB pop r15
    2c97:	49                   	rex.WB
    2c98:	45                   	rex.RB
    2c99:	43 5f                	rex.XB pop r15
    2c9b:	35 35 39 5f 43       	xor    eax,0x435f3935
    2ca0:	4f                   	rex.WRXB
    2ca1:	4d 50                	rex.WRB push r8
    2ca3:	4c                   	rex.WR
    2ca4:	45 58                	rex.RB pop r8
    2ca6:	20 32                	and    BYTE PTR [rdx],dh
    2ca8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2cab:	53                   	push   rbx
    2cac:	49                   	rex.WB
    2cad:	47 5f                	rex.RXB pop r15
    2caf:	41 54                	push   r12
    2cb1:	4f                   	rex.WRXB
    2cb2:	4d                   	rex.WRB
    2cb3:	49                   	rex.WB
    2cb4:	43 5f                	rex.XB pop r15
    2cb6:	4d                   	rex.WRB
    2cb7:	49                   	rex.WB
    2cb8:	4e 5f                	rex.WRX pop rdi
    2cba:	5f                   	pop    rdi
    2cbb:	20 28                	and    BYTE PTR [rax],ch
    2cbd:	2d 5f 5f 53 49       	sub    eax,0x49535f5f
    2cc2:	47 5f                	rex.RXB pop r15
    2cc4:	41 54                	push   r12
    2cc6:	4f                   	rex.WRXB
    2cc7:	4d                   	rex.WRB
    2cc8:	49                   	rex.WB
    2cc9:	43 5f                	rex.XB pop r15
    2ccb:	4d                   	rex.WRB
    2ccc:	41 58                	pop    r8
    2cce:	5f                   	pop    rdi
    2ccf:	5f                   	pop    rdi
    2cd0:	20 2d 20 31 29 00    	and    BYTE PTR [rip+0x293120],ch        # 295df6 <_end+0x94dde>
    2cd6:	5f                   	pop    rdi
    2cd7:	49                   	rex.WB
    2cd8:	4f 5f                	rex.WRXB pop r15
    2cda:	49                   	rex.WB
    2cdb:	4e 5f                	rex.WRX pop rdi
    2cdd:	42                   	rex.X
    2cde:	41                   	rex.B
    2cdf:	43                   	rex.XB
    2ce0:	4b 55                	rex.WXB push r13
    2ce2:	50                   	push   rax
    2ce3:	20 30                	and    BYTE PTR [rax],dh
    2ce5:	78 31                	js     2d18 <__FRAME_END__+0x2314>
    2ce7:	30 30                	xor    BYTE PTR [rax],dh
    2ce9:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2cec:	4f 5f                	rex.WRXB pop r15
    2cee:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2cf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cf1:	63 6b 66             	movsxd ebp,DWORD PTR [rbx+0x66]
    2cf4:	69 6c 65 28 5f 66 70 	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x2970665f
    2cfb:	29 
    2cfc:	20 00                	and    BYTE PTR [rax],al
    2cfe:	5f                   	pop    rdi
    2cff:	5f                   	pop    rdi
    2d00:	53                   	push   rbx
    2d01:	49 5a                	rex.WB pop r10
    2d03:	45                   	rex.RB
    2d04:	4f                   	rex.WRXB
    2d05:	46 5f                	rex.RX pop rdi
    2d07:	57                   	push   rdi
    2d08:	43                   	rex.XB
    2d09:	48                   	rex.W
    2d0a:	41 52                	push   r10
    2d0c:	5f                   	pop    rdi
    2d0d:	54                   	push   rsp
    2d0e:	5f                   	pop    rdi
    2d0f:	5f                   	pop    rdi
    2d10:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    2d13:	5f                   	pop    rdi
    2d14:	5f                   	pop    rdi
    2d15:	61                   	(bad)  
    2d16:	74 74                	je     2d8c <__FRAME_END__+0x2388>
    2d18:	72 69                	jb     2d83 <__FRAME_END__+0x237f>
    2d1a:	62                   	(bad)  
    2d1b:	75 74                	jne    2d91 <__FRAME_END__+0x238d>
    2d1d:	65 5f                	gs pop rdi
    2d1f:	64 65 70 72          	fs gs jo 2d95 <__FRAME_END__+0x2391>
    2d23:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d27:	65 64 5f             	gs fs pop rdi
    2d2a:	5f                   	pop    rdi
    2d2b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2d2e:	61                   	(bad)  
    2d2f:	74 74                	je     2da5 <__FRAME_END__+0x23a1>
    2d31:	72 69                	jb     2d9c <__FRAME_END__+0x2398>
    2d33:	62                   	(bad)  
    2d34:	75 74                	jne    2daa <__FRAME_END__+0x23a6>
    2d36:	65 5f                	gs pop rdi
    2d38:	5f                   	pop    rdi
    2d39:	20 28                	and    BYTE PTR [rax],ch
    2d3b:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    2d3e:	64 65 70 72          	fs gs jo 2db4 <__FRAME_END__+0x23b0>
    2d42:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    2d46:	65 64 5f             	gs fs pop rdi
    2d49:	5f                   	pop    rdi
    2d4a:	29 29                	sub    DWORD PTR [rcx],ebp
    2d4c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d4f:	46                   	rex.RX
    2d50:	4c 54                	rex.WR push rsp
    2d52:	31 32                	xor    DWORD PTR [rdx],esi
    2d54:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    2d57:	49                   	rex.WB
    2d58:	4e 5f                	rex.WRX pop rdi
    2d5a:	31 30                	xor    DWORD PTR [rax],esi
    2d5c:	5f                   	pop    rdi
    2d5d:	45 58                	rex.RB pop r8
    2d5f:	50                   	push   rax
    2d60:	5f                   	pop    rdi
    2d61:	5f                   	pop    rdi
    2d62:	20 28                	and    BYTE PTR [rax],ch
    2d64:	2d 34 39 33 31       	sub    eax,0x31333934
    2d69:	29 00                	sub    DWORD PTR [rax],eax
    2d6b:	5f                   	pop    rdi
    2d6c:	5f                   	pop    rdi
    2d6d:	46                   	rex.RX
    2d6e:	4c                   	rex.WR
    2d6f:	4f                   	rex.WRXB
    2d70:	41 54                	push   r12
    2d72:	5f                   	pop    rdi
    2d73:	57                   	push   rdi
    2d74:	4f 52                	rex.WRXB push r10
    2d76:	44 5f                	rex.R pop rdi
    2d78:	4f 52                	rex.WRXB push r10
    2d7a:	44                   	rex.R
    2d7b:	45 52                	rex.RB push r10
    2d7d:	5f                   	pop    rdi
    2d7e:	5f                   	pop    rdi
    2d7f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2d82:	4f 52                	rex.WRXB push r10
    2d84:	44                   	rex.R
    2d85:	45 52                	rex.RB push r10
    2d87:	5f                   	pop    rdi
    2d88:	4c                   	rex.WR
    2d89:	49 54                	rex.WB push r12
    2d8b:	54                   	push   rsp
    2d8c:	4c                   	rex.WR
    2d8d:	45 5f                	rex.RB pop r15
    2d8f:	45                   	rex.RB
    2d90:	4e                   	rex.WRX
    2d91:	44                   	rex.R
    2d92:	49                   	rex.WB
    2d93:	41                   	rex.B
    2d94:	4e 5f                	rex.WRX pop rdi
    2d96:	5f                   	pop    rdi
    2d97:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d9a:	47                   	rex.RXB
    2d9b:	43                   	rex.XB
    2d9c:	43 5f                	rex.XB pop r15
    2d9e:	48                   	rex.W
    2d9f:	41 56                	push   r14
    2da1:	45 5f                	rex.RB pop r15
    2da3:	53                   	push   rbx
    2da4:	59                   	pop    rcx
    2da5:	4e                   	rex.WRX
    2da6:	43 5f                	rex.XB pop r15
    2da8:	43                   	rex.XB
    2da9:	4f                   	rex.WRXB
    2daa:	4d 50                	rex.WRB push r8
    2dac:	41 52                	push   r10
    2dae:	45 5f                	rex.RB pop r15
    2db0:	41                   	rex.B
    2db1:	4e                   	rex.WRX
    2db2:	44 5f                	rex.R pop rdi
    2db4:	53                   	push   rbx
    2db5:	57                   	push   rdi
    2db6:	41 50                	push   r8
    2db8:	5f                   	pop    rdi
    2db9:	32 20                	xor    ah,BYTE PTR [rax]
    2dbb:	31 00                	xor    DWORD PTR [rax],eax
    2dbd:	5f                   	pop    rdi
    2dbe:	47 5f                	rex.RXB pop r15
    2dc0:	48                   	rex.W
    2dc1:	41 56                	push   r14
    2dc3:	45 5f                	rex.RB pop r15
    2dc5:	4d 52                	rex.WRB push r10
    2dc7:	45                   	rex.RB
    2dc8:	4d                   	rex.WRB
    2dc9:	41 50                	push   r8
    2dcb:	20 31                	and    BYTE PTR [rcx],dh
    2dcd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dd0:	44                   	rex.R
    2dd1:	45                   	rex.RB
    2dd2:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    2dd5:	5f                   	pop    rdi
    2dd6:	4d                   	rex.WRB
    2dd7:	41                   	rex.B
    2dd8:	4e 54                	rex.WRX push rsp
    2dda:	5f                   	pop    rdi
    2ddb:	44                   	rex.R
    2ddc:	49                   	rex.WB
    2ddd:	47 5f                	rex.RXB pop r15
    2ddf:	5f                   	pop    rdi
    2de0:	20 37                	and    BYTE PTR [rdi],dh
    2de2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2de5:	46                   	rex.RX
    2de6:	4c 54                	rex.WR push rsp
    2de8:	33 32                	xor    esi,DWORD PTR [rdx]
    2dea:	5f                   	pop    rdi
    2deb:	44                   	rex.R
    2dec:	45                   	rex.RB
    2ded:	4e                   	rex.WRX
    2dee:	4f 52                	rex.WRXB push r10
    2df0:	4d 5f                	rex.WRB pop r15
    2df2:	4d                   	rex.WRB
    2df3:	49                   	rex.WB
    2df4:	4e 5f                	rex.WRX pop rdi
    2df6:	5f                   	pop    rdi
    2df7:	20 31                	and    BYTE PTR [rcx],dh
    2df9:	2e 34 30             	cs xor al,0x30
    2dfc:	31 32                	xor    DWORD PTR [rdx],esi
    2dfe:	39 38                	cmp    DWORD PTR [rax],edi
    2e00:	34 36                	xor    al,0x36
    2e02:	34 33                	xor    al,0x33
    2e04:	32 34 38             	xor    dh,BYTE PTR [rax+rdi*1]
    2e07:	31 37                	xor    DWORD PTR [rdi],esi
    2e09:	30 37                	xor    BYTE PTR [rdi],dh
    2e0b:	30 39                	xor    BYTE PTR [rcx],bh
    2e0d:	32 33                	xor    dh,BYTE PTR [rbx]
    2e0f:	37                   	(bad)  
    2e10:	32 39                	xor    bh,BYTE PTR [rcx]
    2e12:	35 38 33 32 38       	xor    eax,0x38323338
    2e17:	39 39                	cmp    DWORD PTR [rcx],edi
    2e19:	31 36                	xor    DWORD PTR [rsi],esi
    2e1b:	31 33                	xor    DWORD PTR [rbx],esi
    2e1d:	65 2d 34 35 46 33    	gs sub eax,0x33463534
    2e23:	32 00                	xor    al,BYTE PTR [rax]
    2e25:	5f                   	pop    rdi
    2e26:	5f                   	pop    rdi
    2e27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e28:	65 65 64 5f          	gs gs fs pop rdi
    2e2c:	73 69                	jae    2e97 <__FRAME_END__+0x2493>
    2e2e:	7a 65                	jp     2e95 <__FRAME_END__+0x2491>
    2e30:	5f                   	pop    rdi
    2e31:	74 00                	je     2e33 <__FRAME_END__+0x242f>
    2e33:	5f                   	pop    rdi
    2e34:	5f                   	pop    rdi
    2e35:	55                   	push   rbp
    2e36:	49                   	rex.WB
    2e37:	4e 54                	rex.WRX push rsp
    2e39:	5f                   	pop    rdi
    2e3a:	46                   	rex.RX
    2e3b:	41 53                	push   r11
    2e3d:	54                   	push   rsp
    2e3e:	31 36                	xor    DWORD PTR [rsi],esi
    2e40:	5f                   	pop    rdi
    2e41:	4d                   	rex.WRB
    2e42:	41 58                	pop    r8
    2e44:	5f                   	pop    rdi
    2e45:	5f                   	pop    rdi
    2e46:	20 30                	and    BYTE PTR [rax],dh
    2e48:	78 66                	js     2eb0 <__FRAME_END__+0x24ac>
    2e4a:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2e51:	66 66 66 66 66 66 66 
    2e58:	66 55                	push   bp
    2e5a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    2e5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e5f:	65 65 64 5f          	gs gs fs pop rdi
    2e63:	5f                   	pop    rdi
    2e64:	5f                   	pop    rdi
    2e65:	76 61                	jbe    2ec8 <__FRAME_END__+0x24c4>
    2e67:	5f                   	pop    rdi
    2e68:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e69:	69 73 74 00 5f 5f 49 	imul   esi,DWORD PTR [rbx+0x74],0x495f5f00
    2e70:	4e 54                	rex.WRX push rsp
    2e72:	33 32                	xor    esi,DWORD PTR [rdx]
    2e74:	5f                   	pop    rdi
    2e75:	4d                   	rex.WRB
    2e76:	41 58                	pop    r8
    2e78:	5f                   	pop    rdi
    2e79:	5f                   	pop    rdi
    2e7a:	20 30                	and    BYTE PTR [rax],dh
    2e7c:	78 37                	js     2eb5 <__FRAME_END__+0x24b1>
    2e7e:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    2e85:	00 5f 49 
    2e88:	4f 5f                	rex.WRXB pop r15
    2e8a:	49                   	rex.WB
    2e8b:	4e 54                	rex.WRX push rsp
    2e8d:	45 52                	rex.RB push r10
    2e8f:	4e                   	rex.WRX
    2e90:	41                   	rex.B
    2e91:	4c 20 30             	rex.WR and BYTE PTR [rax],r14b
    2e94:	31 30                	xor    DWORD PTR [rax],esi
    2e96:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2e99:	5f                   	pop    rdi
    2e9a:	69 6e 74 5f 73 69 7a 	imul   ebp,DWORD PTR [rsi+0x74],0x7a69735f
    2ea1:	65 5f                	gs pop rdi
    2ea3:	74 5f                	je     2f04 <__FRAME_END__+0x2500>
    2ea5:	68 20 00 5f 5f       	push   0x5f5f0020
    2eaa:	67 6c                	ins    BYTE PTR es:[edi],dx
    2eac:	69 62 63 5f 6c 69 6b 	imul   esp,DWORD PTR [rdx+0x63],0x6b696c5f
    2eb3:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2eb5:	79 28                	jns    2edf <__FRAME_END__+0x24db>
    2eb7:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2eba:	64 29 20             	sub    DWORD PTR fs:[rax],esp
    2ebd:	5f                   	pop    rdi
    2ebe:	5f                   	pop    rdi
    2ebf:	62                   	(bad)  
    2ec0:	75 69                	jne    2f2b <__FRAME_END__+0x2527>
    2ec2:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ec3:	74 69                	je     2f2e <__FRAME_END__+0x252a>
    2ec5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ec6:	5f                   	pop    rdi
    2ec7:	65 78 70             	gs js  2f3a <__FRAME_END__+0x2536>
    2eca:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    2ecf:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    2ed2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed3:	64 29 2c 20          	sub    DWORD PTR fs:[rax+riz*1],ebp
    2ed7:	31 29                	xor    DWORD PTR [rcx],ebp
    2ed9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2edc:	41 54                	push   r12
    2ede:	4f                   	rex.WRXB
    2edf:	4d                   	rex.WRB
    2ee0:	49                   	rex.WB
    2ee1:	43 5f                	rex.XB pop r15
    2ee3:	41                   	rex.B
    2ee4:	43 51                	rex.XB push r9
    2ee6:	55                   	push   rbp
    2ee7:	49 52                	rex.WB push r10
    2ee9:	45 20 32             	and    BYTE PTR [r10],r14b
    2eec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eef:	55                   	push   rbp
    2ef0:	49                   	rex.WB
    2ef1:	4e 54                	rex.WRX push rsp
    2ef3:	31 36                	xor    DWORD PTR [rsi],esi
    2ef5:	5f                   	pop    rdi
    2ef6:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    2efa:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    2efd:	5f                   	pop    rdi
    2efe:	49                   	rex.WB
    2eff:	4f 5f                	rex.WRXB pop r15
    2f01:	46                   	rex.RX
    2f02:	4c                   	rex.WR
    2f03:	41                   	rex.B
    2f04:	47 53                	rex.RXB push r11
    2f06:	32 5f 55             	xor    bl,BYTE PTR [rdi+0x55]
    2f09:	53                   	push   rbx
    2f0a:	45 52                	rex.RB push r10
    2f0c:	5f                   	pop    rdi
    2f0d:	57                   	push   rdi
    2f0e:	42 55                	rex.X push rbp
    2f10:	46 20 38             	rex.RX and BYTE PTR [rax],r15b
    2f13:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f16:	49                   	rex.WB
    2f17:	4e 54                	rex.WRX push rsp
    2f19:	36 34 5f             	ss xor al,0x5f
    2f1c:	4d                   	rex.WRB
    2f1d:	41 58                	pop    r8
    2f1f:	5f                   	pop    rdi
    2f20:	5f                   	pop    rdi
    2f21:	20 30                	and    BYTE PTR [rax],dh
    2f23:	78 37                	js     2f5c <__FRAME_END__+0x2558>
    2f25:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    2f2c:	66 66 66 66 66 66 66 
    2f33:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    2f38:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f39:	65 65 64 5f          	gs gs fs pop rdi
    2f3d:	73 69                	jae    2fa8 <__FRAME_END__+0x25a4>
    2f3f:	7a 65                	jp     2fa6 <__FRAME_END__+0x25a2>
    2f41:	5f                   	pop    rdi
    2f42:	74 20                	je     2f64 <__FRAME_END__+0x2560>
    2f44:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f47:	62                   	(bad)  
    2f48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f49:	73 28                	jae    2f73 <__FRAME_END__+0x256f>
    2f4b:	70 74                	jo     2fc1 <__FRAME_END__+0x25bd>
    2f4d:	72 29                	jb     2f78 <__FRAME_END__+0x2574>
    2f4f:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f52:	62                   	(bad)  
    2f53:	75 69                	jne    2fbe <__FRAME_END__+0x25ba>
    2f55:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f56:	74 69                	je     2fc1 <__FRAME_END__+0x25bd>
    2f58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f59:	5f                   	pop    rdi
    2f5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f5b:	62                   	(bad)  
    2f5c:	6a 65                	push   0x65
    2f5e:	63 74 5f 73          	movsxd esi,DWORD PTR [rdi+rbx*2+0x73]
    2f62:	69 7a 65 20 28 70 74 	imul   edi,DWORD PTR [rdx+0x65],0x74702820
    2f69:	72 2c                	jb     2f97 <__FRAME_END__+0x2593>
    2f6b:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2f6e:	55                   	push   rbp
    2f6f:	53                   	push   rbx
    2f70:	45 5f                	rex.RB pop r15
    2f72:	46                   	rex.RX
    2f73:	4f 52                	rex.WRXB push r10
    2f75:	54                   	push   rsp
    2f76:	49                   	rex.WB
    2f77:	46 59                	rex.RX pop rcx
    2f79:	5f                   	pop    rdi
    2f7a:	4c                   	rex.WR
    2f7b:	45 56                	rex.RB push r14
    2f7d:	45                   	rex.RB
    2f7e:	4c 20 3e             	rex.WR and BYTE PTR [rsi],r15b
    2f81:	20 31                	and    BYTE PTR [rcx],dh
    2f83:	29 00                	sub    DWORD PTR [rax],eax
    2f85:	5f                   	pop    rdi
    2f86:	5f                   	pop    rdi
    2f87:	55                   	push   rbp
    2f88:	57                   	push   rdi
    2f89:	4f 52                	rex.WRXB push r10
    2f8b:	44 5f                	rex.R pop rdi
    2f8d:	54                   	push   rsp
    2f8e:	59                   	pop    rcx
    2f8f:	50                   	push   rax
    2f90:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    2f94:	73 69                	jae    2fff <__FRAME_END__+0x25fb>
    2f96:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2f98:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    2f9e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2fa2:	74 00                	je     2fa4 <__FRAME_END__+0x25a0>
    2fa4:	5f                   	pop    rdi
    2fa5:	5f                   	pop    rdi
    2fa6:	47                   	rex.RXB
    2fa7:	4c                   	rex.WR
    2fa8:	49                   	rex.WB
    2fa9:	42                   	rex.X
    2faa:	43 5f                	rex.XB pop r15
    2fac:	4d                   	rex.WRB
    2fad:	49                   	rex.WB
    2fae:	4e                   	rex.WRX
    2faf:	4f 52                	rex.WRXB push r10
    2fb1:	5f                   	pop    rdi
    2fb2:	5f                   	pop    rdi
    2fb3:	20 32                	and    BYTE PTR [rdx],dh
    2fb5:	37                   	(bad)  
    2fb6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fb9:	53                   	push   rbx
    2fba:	45                   	rex.RB
    2fbb:	47 5f                	rex.RXB pop r15
    2fbd:	47 53                	rex.RXB push r11
    2fbf:	20 31                	and    BYTE PTR [rcx],dh
    2fc1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fc4:	53                   	push   rbx
    2fc5:	53                   	push   rbx
    2fc6:	45 5f                	rex.RB pop r15
    2fc8:	4d                   	rex.WRB
    2fc9:	41 54                	push   r12
    2fcb:	48 5f                	rex.W pop rdi
    2fcd:	5f                   	pop    rdi
    2fce:	20 31                	and    BYTE PTR [rcx],dh
    2fd0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2fd3:	4e                   	rex.WRX
    2fd4:	4c                   	rex.WR
    2fd5:	49                   	rex.WB
    2fd6:	4e                   	rex.WRX
    2fd7:	4b 5f                	rex.WXB pop r15
    2fd9:	54                   	push   rsp
    2fda:	5f                   	pop    rdi
    2fdb:	54                   	push   rsp
    2fdc:	59                   	pop    rcx
    2fdd:	50                   	push   rax
    2fde:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    2fe2:	53                   	push   rbx
    2fe3:	59                   	pop    rcx
    2fe4:	53                   	push   rbx
    2fe5:	43                   	rex.XB
    2fe6:	41                   	rex.B
    2fe7:	4c                   	rex.WR
    2fe8:	4c 5f                	rex.WR pop rdi
    2fea:	55                   	push   rbp
    2feb:	4c                   	rex.WR
    2fec:	4f                   	rex.WRXB
    2fed:	4e                   	rex.WRX
    2fee:	47 5f                	rex.RXB pop r15
    2ff0:	54                   	push   rsp
    2ff1:	59                   	pop    rcx
    2ff2:	50                   	push   rax
    2ff3:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    2ff7:	55                   	push   rbp
    2ff8:	49                   	rex.WB
    2ff9:	4e 54                	rex.WRX push rsp
    2ffb:	4d                   	rex.WRB
    2ffc:	41 58                	pop    r8
    2ffe:	5f                   	pop    rdi
    2fff:	54                   	push   rsp
    3000:	59                   	pop    rcx
    3001:	50                   	push   rax
    3002:	45 5f                	rex.RB pop r15
    3004:	5f                   	pop    rdi
    3005:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3009:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    300d:	73 69                	jae    3078 <__FRAME_END__+0x2674>
    300f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3011:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3016:	74 00                	je     3018 <__FRAME_END__+0x2614>
    3018:	5f                   	pop    rdi
    3019:	5f                   	pop    rdi
    301a:	55                   	push   rbp
    301b:	53                   	push   rbx
    301c:	45 5f                	rex.RB pop r15
    301e:	58                   	pop    rax
    301f:	4f 50                	rex.WRXB push r8
    3021:	45                   	rex.RB
    3022:	4e 32 4b 00          	rex.WRX xor r9b,BYTE PTR [rbx+0x0]
    3026:	5f                   	pop    rdi
    3027:	5f                   	pop    rdi
    3028:	4c                   	rex.WR
    3029:	45                   	rex.RB
    302a:	41                   	rex.B
    302b:	46 20 2c 20          	and    BYTE PTR [rax+r12*1],r13b
    302f:	5f                   	pop    rdi
    3030:	5f                   	pop    rdi
    3031:	6c                   	ins    BYTE PTR es:[rdi],dx
    3032:	65 61                	gs (bad) 
    3034:	66 5f                	pop    di
    3036:	5f                   	pop    rdi
    3037:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    303a:	44                   	rex.R
    303b:	45                   	rex.RB
    303c:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    303f:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    3042:	41 58                	pop    r8
    3044:	5f                   	pop    rdi
    3045:	45 58                	rex.RB pop r8
    3047:	50                   	push   rax
    3048:	5f                   	pop    rdi
    3049:	5f                   	pop    rdi
    304a:	20 36                	and    BYTE PTR [rsi],dh
    304c:	31 34 35 00 5f 49 4f 	xor    DWORD PTR [rsi*1+0x4f495f00],esi
    3053:	5f                   	pop    rdi
    3054:	4c                   	rex.WR
    3055:	45                   	rex.RB
    3056:	46 54                	rex.RX push rsp
    3058:	20 30                	and    BYTE PTR [rax],dh
    305a:	32 00                	xor    al,BYTE PTR [rax]
    305c:	5f                   	pop    rdi
    305d:	5f                   	pop    rdi
    305e:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    3060:	72 74                	jb     30d6 <__FRAME_END__+0x26d2>
    3062:	69 66 79 5f 66 75 6e 	imul   esp,DWORD PTR [rsi+0x79],0x6e75665f
    3069:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    306d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    306e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3071:	65 78 74             	gs js  30e8 <__FRAME_END__+0x26e4>
    3074:	65 72 6e             	gs jb  30e5 <__FRAME_END__+0x26e1>
    3077:	5f                   	pop    rdi
    3078:	61                   	(bad)  
    3079:	6c                   	ins    BYTE PTR es:[rdi],dx
    307a:	77 61                	ja     30dd <__FRAME_END__+0x26d9>
    307c:	79 73                	jns    30f1 <__FRAME_END__+0x26ed>
    307e:	5f                   	pop    rdi
    307f:	69 6e 6c 69 6e 65 20 	imul   ebp,DWORD PTR [rsi+0x6c],0x20656e69
    3086:	5f                   	pop    rdi
    3087:	5f                   	pop    rdi
    3088:	61                   	(bad)  
    3089:	74 74                	je     30ff <__FRAME_END__+0x26fb>
    308b:	72 69                	jb     30f6 <__FRAME_END__+0x26f2>
    308d:	62                   	(bad)  
    308e:	75 74                	jne    3104 <__FRAME_END__+0x2700>
    3090:	65 5f                	gs pop rdi
    3092:	61                   	(bad)  
    3093:	72 74                	jb     3109 <__FRAME_END__+0x2705>
    3095:	69 66 69 63 69 61 6c 	imul   esp,DWORD PTR [rsi+0x69],0x6c616963
    309c:	5f                   	pop    rdi
    309d:	5f                   	pop    rdi
    309e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    30a1:	4f 5f                	rex.WRXB pop r15
    30a3:	42                   	rex.X
    30a4:	4f                   	rex.WRXB
    30a5:	4f                   	rex.WRXB
    30a6:	4c                   	rex.WR
    30a7:	41                   	rex.B
    30a8:	4c 50                	rex.WR push rax
    30aa:	48                   	rex.W
    30ab:	41 20 30             	and    BYTE PTR [r8],sil
    30ae:	32 30                	xor    dh,BYTE PTR [rax]
    30b0:	30 30                	xor    BYTE PTR [rax],dh
    30b2:	30 30                	xor    BYTE PTR [rax],dh
    30b4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    30b7:	53                   	push   rbx
    30b8:	49                   	rex.WB
    30b9:	47 5f                	rex.RXB pop r15
    30bb:	41 54                	push   r12
    30bd:	4f                   	rex.WRXB
    30be:	4d                   	rex.WRB
    30bf:	49                   	rex.WB
    30c0:	43 5f                	rex.XB pop r15
    30c2:	57                   	push   rdi
    30c3:	49                   	rex.WB
    30c4:	44 54                	rex.R push rsp
    30c6:	48 5f                	rex.W pop rdi
    30c8:	5f                   	pop    rdi
    30c9:	20 33                	and    BYTE PTR [rbx],dh
    30cb:	32 00                	xor    al,BYTE PTR [rax]
    30cd:	5f                   	pop    rdi
    30ce:	5f                   	pop    rdi
    30cf:	43                   	rex.XB
    30d0:	4f                   	rex.WRXB
    30d1:	4e                   	rex.WRX
    30d2:	43                   	rex.XB
    30d3:	41 54                	push   r12
    30d5:	28 78 2c             	sub    BYTE PTR [rax+0x2c],bh
    30d8:	79 29                	jns    3103 <__FRAME_END__+0x26ff>
    30da:	20 78 20             	and    BYTE PTR [rax+0x20],bh
    30dd:	23 23                	and    esp,DWORD PTR [rbx]
    30df:	20 79 00             	and    BYTE PTR [rcx+0x0],bh
    30e2:	5f                   	pop    rdi
    30e3:	5f                   	pop    rdi
    30e4:	61                   	(bad)  
    30e5:	74 74                	je     315b <__FRAME_END__+0x2757>
    30e7:	72 69                	jb     3152 <__FRAME_END__+0x274e>
    30e9:	62                   	(bad)  
    30ea:	75 74                	jne    3160 <__FRAME_END__+0x275c>
    30ec:	65 5f                	gs pop rdi
    30ee:	64 65 70 72          	fs gs jo 3164 <__FRAME_END__+0x2760>
    30f2:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    30f6:	65 64 5f             	gs fs pop rdi
    30f9:	6d                   	ins    DWORD PTR es:[rdi],dx
    30fa:	73 67                	jae    3163 <__FRAME_END__+0x275f>
    30fc:	5f                   	pop    rdi
    30fd:	5f                   	pop    rdi
    30fe:	28 6d 73             	sub    BYTE PTR [rbp+0x73],ch
    3101:	67 29 20             	sub    DWORD PTR [eax],esp
    3104:	5f                   	pop    rdi
    3105:	5f                   	pop    rdi
    3106:	61                   	(bad)  
    3107:	74 74                	je     317d <__FRAME_END__+0x2779>
    3109:	72 69                	jb     3174 <__FRAME_END__+0x2770>
    310b:	62                   	(bad)  
    310c:	75 74                	jne    3182 <__FRAME_END__+0x277e>
    310e:	65 5f                	gs pop rdi
    3110:	5f                   	pop    rdi
    3111:	20 28                	and    BYTE PTR [rax],ch
    3113:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3116:	64 65 70 72          	fs gs jo 318c <__FRAME_END__+0x2788>
    311a:	65 63 61 74          	movsxd esp,DWORD PTR gs:[rcx+0x74]
    311e:	65 64 5f             	gs fs pop rdi
    3121:	5f                   	pop    rdi
    3122:	20 28                	and    BYTE PTR [rax],ch
    3124:	6d                   	ins    DWORD PTR es:[rdi],dx
    3125:	73 67                	jae    318e <__FRAME_END__+0x278a>
    3127:	29 29                	sub    DWORD PTR [rcx],ebp
    3129:	29 00                	sub    DWORD PTR [rax],eax
    312b:	5f                   	pop    rdi
    312c:	5f                   	pop    rdi
    312d:	53                   	push   rbx
    312e:	48 52                	rex.W push rdx
    3130:	54                   	push   rsp
    3131:	5f                   	pop    rdi
    3132:	4d                   	rex.WRB
    3133:	41 58                	pop    r8
    3135:	5f                   	pop    rdi
    3136:	5f                   	pop    rdi
    3137:	20 30                	and    BYTE PTR [rax],dh
    3139:	78 37                	js     3172 <__FRAME_END__+0x276e>
    313b:	66 66 66 00 5f 5f    	data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    3141:	47                   	rex.RXB
    3142:	43                   	rex.XB
    3143:	43 5f                	rex.XB pop r15
    3145:	41 54                	push   r12
    3147:	4f                   	rex.WRXB
    3148:	4d                   	rex.WRB
    3149:	49                   	rex.WB
    314a:	43 5f                	rex.XB pop r15
    314c:	57                   	push   rdi
    314d:	43                   	rex.XB
    314e:	48                   	rex.W
    314f:	41 52                	push   r10
    3151:	5f                   	pop    rdi
    3152:	54                   	push   rsp
    3153:	5f                   	pop    rdi
    3154:	4c                   	rex.WR
    3155:	4f                   	rex.WRXB
    3156:	43                   	rex.XB
    3157:	4b 5f                	rex.WXB pop r15
    3159:	46 52                	rex.RX push rdx
    315b:	45                   	rex.RB
    315c:	45 20 32             	and    BYTE PTR [r10],r14b
    315f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3162:	4f 5f                	rex.WRXB pop r15
    3164:	50                   	push   rax
    3165:	45                   	rex.RB
    3166:	4e                   	rex.WRX
    3167:	44                   	rex.R
    3168:	49                   	rex.WB
    3169:	4e                   	rex.WRX
    316a:	47 5f                	rex.RXB pop r15
    316c:	4f 55                	rex.WRXB push r13
    316e:	54                   	push   rsp
    316f:	50                   	push   rax
    3170:	55                   	push   rbp
    3171:	54                   	push   rsp
    3172:	5f                   	pop    rdi
    3173:	43                   	rex.XB
    3174:	4f 55                	rex.WRXB push r13
    3176:	4e 54                	rex.WRX push rsp
    3178:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    317b:	70 29                	jo     31a6 <__FRAME_END__+0x27a2>
    317d:	20 28                	and    BYTE PTR [rax],ch
    317f:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3182:	70 29                	jo     31ad <__FRAME_END__+0x27a9>
    3184:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3189:	5f                   	pop    rdi
    318a:	77 72                	ja     31fe <__FRAME_END__+0x27fa>
    318c:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    3193:	20 
    3194:	2d 20 28 5f 66       	sub    eax,0x665f2820
    3199:	70 29                	jo     31c4 <__FRAME_END__+0x27c0>
    319b:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    31a0:	5f                   	pop    rdi
    31a1:	77 72                	ja     3215 <__FRAME_END__+0x2811>
    31a3:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    31aa:	65 
    31ab:	29 00                	sub    DWORD PTR [rax],eax
    31ad:	5f                   	pop    rdi
    31ae:	49                   	rex.WB
    31af:	4f 5f                	rex.WRXB pop r15
    31b1:	55                   	push   rbp
    31b2:	53                   	push   rbx
    31b3:	45 52                	rex.RB push r10
    31b5:	5f                   	pop    rdi
    31b6:	4c                   	rex.WR
    31b7:	4f                   	rex.WRXB
    31b8:	43                   	rex.XB
    31b9:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    31bc:	78 38                	js     31f6 <__FRAME_END__+0x27f2>
    31be:	30 30                	xor    BYTE PTR [rax],dh
    31c0:	30 00                	xor    BYTE PTR [rax],al
    31c2:	5f                   	pop    rdi
    31c3:	5f                   	pop    rdi
    31c4:	4f 52                	rex.WRXB push r10
    31c6:	44                   	rex.R
    31c7:	45 52                	rex.RB push r10
    31c9:	5f                   	pop    rdi
    31ca:	50                   	push   rax
    31cb:	44 50                	rex.R push rax
    31cd:	5f                   	pop    rdi
    31ce:	45                   	rex.RB
    31cf:	4e                   	rex.WRX
    31d0:	44                   	rex.R
    31d1:	49                   	rex.WB
    31d2:	41                   	rex.B
    31d3:	4e 5f                	rex.WRX pop rdi
    31d5:	5f                   	pop    rdi
    31d6:	20 33                	and    BYTE PTR [rbx],dh
    31d8:	34 31                	xor    al,0x31
    31da:	32 00                	xor    al,BYTE PTR [rax]
    31dc:	5f                   	pop    rdi
    31dd:	49                   	rex.WB
    31de:	4f 5f                	rex.WRXB pop r15
    31e0:	55                   	push   rbp
    31e1:	4e                   	rex.WRX
    31e2:	49                   	rex.WB
    31e3:	46                   	rex.RX
    31e4:	49                   	rex.WB
    31e5:	45                   	rex.RB
    31e6:	44 5f                	rex.R pop rdi
    31e8:	4a 55                	rex.WX push rbp
    31ea:	4d 50                	rex.WRB push r8
    31ec:	54                   	push   rsp
    31ed:	41                   	rex.B
    31ee:	42                   	rex.X
    31ef:	4c                   	rex.WR
    31f0:	45 53                	rex.RB push r11
    31f2:	20 31                	and    BYTE PTR [rcx],dh
    31f4:	00 54 4d 50          	add    BYTE PTR [rbp+rcx*2+0x50],dl
    31f8:	5f                   	pop    rdi
    31f9:	4d                   	rex.WRB
    31fa:	41 58                	pop    r8
    31fc:	20 32                	and    BYTE PTR [rdx],dh
    31fe:	33 38                	xor    edi,DWORD PTR [rax]
    3200:	33 32                	xor    esi,DWORD PTR [rdx]
    3202:	38 00                	cmp    BYTE PTR [rax],al
    3204:	5f                   	pop    rdi
    3205:	49                   	rex.WB
    3206:	4f 5f                	rex.WRXB pop r15
    3208:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3209:	65 65 64 5f          	gs gs fs pop rdi
    320d:	6c                   	ins    BYTE PTR es:[rdi],dx
    320e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    320f:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
    3212:	5f                   	pop    rdi
    3213:	66 70 29             	data16 jo 323f <__FRAME_END__+0x283b>
    3216:	20 28                	and    BYTE PTR [rax],ch
    3218:	28 28                	sub    BYTE PTR [rax],ch
    321a:	5f                   	pop    rdi
    321b:	66 70 29             	data16 jo 3247 <__FRAME_END__+0x2843>
    321e:	2d 3e 5f 66 6c       	sub    eax,0x6c665f3e
    3223:	61                   	(bad)  
    3224:	67 73 32             	addr32 jae 3259 <__FRAME_END__+0x2855>
    3227:	20 26                	and    BYTE PTR [rsi],ah
    3229:	20 5f 49             	and    BYTE PTR [rdi+0x49],bl
    322c:	4f 5f                	rex.WRXB pop r15
    322e:	46                   	rex.RX
    322f:	4c                   	rex.WR
    3230:	41                   	rex.B
    3231:	47 53                	rex.RXB push r11
    3233:	32 5f 4e             	xor    bl,BYTE PTR [rdi+0x4e]
    3236:	45                   	rex.RB
    3237:	45                   	rex.RB
    3238:	44 5f                	rex.R pop rdi
    323a:	4c                   	rex.WR
    323b:	4f                   	rex.WRXB
    323c:	43                   	rex.XB
    323d:	4b 29 20             	rex.WXB sub QWORD PTR [r8],rsp
    3240:	21 3d 20 30 29 00    	and    DWORD PTR [rip+0x293020],edi        # 296266 <_end+0x9524e>
    3246:	5f                   	pop    rdi
    3247:	5f                   	pop    rdi
    3248:	46                   	rex.RX
    3249:	4c 54                	rex.WR push rsp
    324b:	5f                   	pop    rdi
    324c:	44                   	rex.R
    324d:	45                   	rex.RB
    324e:	43                   	rex.XB
    324f:	49                   	rex.WB
    3250:	4d                   	rex.WRB
    3251:	41                   	rex.B
    3252:	4c 5f                	rex.WR pop rdi
    3254:	44                   	rex.R
    3255:	49                   	rex.WB
    3256:	47 5f                	rex.RXB pop r15
    3258:	5f                   	pop    rdi
    3259:	20 39                	and    BYTE PTR [rcx],bh
    325b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    325e:	77 61                	ja     32c1 <__FRAME_END__+0x28bd>
    3260:	72 6e                	jb     32d0 <__FRAME_END__+0x28cc>
    3262:	64 65 63 6c 28 6e    	fs movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    3268:	61                   	(bad)  
    3269:	6d                   	ins    DWORD PTR es:[rdi],dx
    326a:	65 2c 6d             	gs sub al,0x6d
    326d:	73 67                	jae    32d6 <__FRAME_END__+0x28d2>
    326f:	29 20                	sub    DWORD PTR [rax],esp
    3271:	65 78 74             	gs js  32e8 <__FRAME_END__+0x28e4>
    3274:	65 72 6e             	gs jb  32e5 <__FRAME_END__+0x28e1>
    3277:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    327a:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    3281:	20 
    3282:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    3285:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    328c:	74 
    328d:	74 72                	je     3301 <__FRAME_END__+0x28fd>
    328f:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    3296:	28 28                	sub    BYTE PTR [rax],ch
    3298:	5f                   	pop    rdi
    3299:	5f                   	pop    rdi
    329a:	77 61                	ja     32fd <__FRAME_END__+0x28f9>
    329c:	72 6e                	jb     330c <__FRAME_END__+0x2908>
    329e:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    32a5:	6d                   	ins    DWORD PTR es:[rdi],dx
    32a6:	73 67                	jae    330f <__FRAME_END__+0x290b>
    32a8:	29 29                	sub    DWORD PTR [rcx],ebp
    32aa:	29 00                	sub    DWORD PTR [rax],eax
    32ac:	5f                   	pop    rdi
    32ad:	5f                   	pop    rdi
    32ae:	46                   	rex.RX
    32af:	4c 54                	rex.WR push rsp
    32b1:	36 34 5f             	ss xor al,0x5f
    32b4:	4d                   	rex.WRB
    32b5:	41 58                	pop    r8
    32b7:	5f                   	pop    rdi
    32b8:	31 30                	xor    DWORD PTR [rax],esi
    32ba:	5f                   	pop    rdi
    32bb:	45 58                	rex.RB pop r8
    32bd:	50                   	push   rax
    32be:	5f                   	pop    rdi
    32bf:	5f                   	pop    rdi
    32c0:	20 33                	and    BYTE PTR [rbx],dh
    32c2:	30 38                	xor    BYTE PTR [rax],bh
    32c4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32c7:	53                   	push   rbx
    32c8:	54                   	push   rsp
    32c9:	52                   	push   rdx
    32ca:	49                   	rex.WB
    32cb:	4e                   	rex.WRX
    32cc:	47 28 78 29          	rex.RXB sub BYTE PTR [r8+0x29],r15b
    32d0:	20 23                	and    BYTE PTR [rbx],ah
    32d2:	78 00                	js     32d4 <__FRAME_END__+0x28d0>
    32d4:	5f                   	pop    rdi
    32d5:	5f                   	pop    rdi
    32d6:	4c                   	rex.WR
    32d7:	44                   	rex.R
    32d8:	42                   	rex.X
    32d9:	4c 5f                	rex.WR pop rdi
    32db:	4d                   	rex.WRB
    32dc:	49                   	rex.WB
    32dd:	4e 5f                	rex.WRX pop rdi
    32df:	45 58                	rex.RB pop r8
    32e1:	50                   	push   rax
    32e2:	5f                   	pop    rdi
    32e3:	5f                   	pop    rdi
    32e4:	20 28                	and    BYTE PTR [rax],ch
    32e6:	2d 31 36 33 38       	sub    eax,0x38333631
    32eb:	31 29                	xor    DWORD PTR [rcx],ebp
    32ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    32f0:	57                   	push   rdi
    32f1:	49                   	rex.WB
    32f2:	4e 54                	rex.WRX push rsp
    32f4:	5f                   	pop    rdi
    32f5:	57                   	push   rdi
    32f6:	49                   	rex.WB
    32f7:	44 54                	rex.R push rsp
    32f9:	48 5f                	rex.W pop rdi
    32fb:	5f                   	pop    rdi
    32fc:	20 33                	and    BYTE PTR [rbx],dh
    32fe:	32 00                	xor    al,BYTE PTR [rax]
    3300:	5f                   	pop    rdi
    3301:	49                   	rex.WB
    3302:	4f 5f                	rex.WRXB pop r15
    3304:	53                   	push   rbx
    3305:	48                   	rex.W
    3306:	4f 57                	rex.WRXB push r15
    3308:	50                   	push   rax
    3309:	4f 53                	rex.WRXB push r11
    330b:	20 30                	and    BYTE PTR [rax],dh
    330d:	32 30                	xor    dh,BYTE PTR [rax]
    330f:	30 30                	xor    BYTE PTR [rax],dh
    3311:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3314:	4f 5f                	rex.WRXB pop r15
    3316:	72 65                	jb     337d <__FRAME_END__+0x2979>
    3318:	61                   	(bad)  
    3319:	64 5f                	fs pop rdi
    331b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    331d:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    3321:	46                   	rex.RX
    3322:	4c 54                	rex.WR push rsp
    3324:	36 34 58             	ss xor al,0x58
    3327:	5f                   	pop    rdi
    3328:	4d                   	rex.WRB
    3329:	49                   	rex.WB
    332a:	4e 5f                	rex.WRX pop rdi
    332c:	5f                   	pop    rdi
    332d:	20 33                	and    BYTE PTR [rbx],dh
    332f:	2e 33 36             	xor    esi,DWORD PTR cs:[rsi]
    3332:	32 31                	xor    dh,BYTE PTR [rcx]
    3334:	30 33                	xor    BYTE PTR [rbx],dh
    3336:	31 34 33             	xor    DWORD PTR [rbx+rsi*1],esi
    3339:	31 31                	xor    DWORD PTR [rcx],esi
    333b:	32 30                	xor    dh,BYTE PTR [rax]
    333d:	39 33                	cmp    DWORD PTR [rbx],esi
    333f:	35 30 36 32 36       	xor    eax,0x36323630
    3344:	32 36                	xor    dh,BYTE PTR [rsi]
    3346:	37                   	(bad)  
    3347:	37                   	(bad)  
    3348:	38 31                	cmp    BYTE PTR [rcx],dh
    334a:	37                   	(bad)  
    334b:	33 32                	xor    esi,DWORD PTR [rdx]
    334d:	31 37                	xor    DWORD PTR [rdi],esi
    334f:	35 32 36 30 65       	xor    eax,0x65303632
    3354:	2d 34 39 33 32       	sub    eax,0x32333934
    3359:	46                   	rex.RX
    335a:	36 34 78             	ss xor al,0x78
    335d:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3360:	4f 53                	rex.WRXB push r11
    3362:	5f                   	pop    rdi
    3363:	4f 55                	rex.WRXB push r13
    3365:	54                   	push   rsp
    3366:	50                   	push   rax
    3367:	55                   	push   rbp
    3368:	54                   	push   rsp
    3369:	20 32                	and    BYTE PTR [rdx],dh
    336b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    336e:	49                   	rex.WB
    336f:	4e 54                	rex.WRX push rsp
    3371:	5f                   	pop    rdi
    3372:	46                   	rex.RX
    3373:	41 53                	push   r11
    3375:	54                   	push   rsp
    3376:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    3379:	41 58                	pop    r8
    337b:	5f                   	pop    rdi
    337c:	5f                   	pop    rdi
    337d:	20 30                	and    BYTE PTR [rax],dh
    337f:	78 37                	js     33b8 <__FRAME_END__+0x29b4>
    3381:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    3385:	52                   	push   rdx
    3386:	45                   	rex.RB
    3387:	47                   	rex.RXB
    3388:	49 53                	rex.WB push r11
    338a:	54                   	push   rsp
    338b:	45 52                	rex.RB push r10
    338d:	5f                   	pop    rdi
    338e:	50                   	push   rax
    338f:	52                   	push   rdx
    3390:	45                   	rex.RB
    3391:	46                   	rex.RX
    3392:	49 58                	rex.WB pop r8
    3394:	5f                   	pop    rdi
    3395:	5f                   	pop    rdi
    3396:	20 00                	and    BYTE PTR [rax],al
    3398:	5f                   	pop    rdi
    3399:	5f                   	pop    rdi
    339a:	46                   	rex.RX
    339b:	4c 54                	rex.WR push rsp
    339d:	33 32                	xor    esi,DWORD PTR [rdx]
    339f:	5f                   	pop    rdi
    33a0:	45 50                	rex.RB push r8
    33a2:	53                   	push   rbx
    33a3:	49                   	rex.WB
    33a4:	4c                   	rex.WR
    33a5:	4f                   	rex.WRXB
    33a6:	4e 5f                	rex.WRX pop rdi
    33a8:	5f                   	pop    rdi
    33a9:	20 31                	and    BYTE PTR [rcx],dh
    33ab:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    33ae:	32 30                	xor    dh,BYTE PTR [rax]
    33b0:	39 32                	cmp    DWORD PTR [rdx],esi
    33b2:	38 39                	cmp    BYTE PTR [rcx],bh
    33b4:	35 35 30 37 38       	xor    eax,0x38373035
    33b9:	31 32                	xor    DWORD PTR [rdx],esi
    33bb:	35 30 30 30 30       	xor    eax,0x30303030
    33c0:	30 30                	xor    BYTE PTR [rax],dh
    33c2:	30 30                	xor    BYTE PTR [rax],dh
    33c4:	30 30                	xor    BYTE PTR [rax],dh
    33c6:	30 30                	xor    BYTE PTR [rax],dh
    33c8:	30 30                	xor    BYTE PTR [rax],dh
    33ca:	30 30                	xor    BYTE PTR [rax],dh
    33cc:	30 30                	xor    BYTE PTR [rax],dh
    33ce:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    33d1:	37                   	(bad)  
    33d2:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    33d5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    33d8:	47                   	rex.RXB
    33d9:	4c                   	rex.WR
    33da:	49                   	rex.WB
    33db:	42                   	rex.X
    33dc:	43 5f                	rex.XB pop r15
    33de:	49                   	rex.WB
    33df:	4e 54                	rex.WRX push rsp
    33e1:	45 52                	rex.RB push r10
    33e3:	4e                   	rex.WRX
    33e4:	41                   	rex.B
    33e5:	4c 5f                	rex.WR pop rdi
    33e7:	53                   	push   rbx
    33e8:	54                   	push   rsp
    33e9:	41 52                	push   r10
    33eb:	54                   	push   rsp
    33ec:	49                   	rex.WB
    33ed:	4e                   	rex.WRX
    33ee:	47 5f                	rex.RXB pop r15
    33f0:	48                   	rex.W
    33f1:	45                   	rex.RB
    33f2:	41                   	rex.B
    33f3:	44                   	rex.R
    33f4:	45 52                	rex.RB push r10
    33f6:	5f                   	pop    rdi
    33f7:	49                   	rex.WB
    33f8:	4d 50                	rex.WRB push r8
    33fa:	4c                   	rex.WR
    33fb:	45                   	rex.RB
    33fc:	4d                   	rex.WRB
    33fd:	45                   	rex.RB
    33fe:	4e 54                	rex.WRX push rsp
    3400:	41 54                	push   r12
    3402:	49                   	rex.WB
    3403:	4f                   	rex.WRXB
    3404:	4e 20 00             	rex.WRX and BYTE PTR [rax],r8b
    3407:	5f                   	pop    rdi
    3408:	5f                   	pop    rdi
    3409:	53                   	push   rbx
    340a:	57                   	push   rdi
    340b:	4f 52                	rex.WRXB push r10
    340d:	44 5f                	rex.R pop rdi
    340f:	54                   	push   rsp
    3410:	59                   	pop    rcx
    3411:	50                   	push   rax
    3412:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3417:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    341b:	74 00                	je     341d <__FRAME_END__+0x2a19>
    341d:	5f                   	pop    rdi
    341e:	5f                   	pop    rdi
    341f:	4c                   	rex.WR
    3420:	4f                   	rex.WRXB
    3421:	4e                   	rex.WRX
    3422:	47 5f                	rex.RXB pop r15
    3424:	4d                   	rex.WRB
    3425:	41 58                	pop    r8
    3427:	5f                   	pop    rdi
    3428:	5f                   	pop    rdi
    3429:	20 30                	and    BYTE PTR [rax],dh
    342b:	78 37                	js     3464 <__FRAME_END__+0x2a60>
    342d:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3434:	66 66 66 66 66 66 66 
    343b:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    3440:	73 74                	jae    34b6 <__FRAME_END__+0x2ab2>
    3442:	75 62                	jne    34a6 <__FRAME_END__+0x2aa2>
    3444:	5f                   	pop    rdi
    3445:	67 65 74 6d          	addr32 gs je 34b6 <__FRAME_END__+0x2ab2>
    3449:	73 67                	jae    34b2 <__FRAME_END__+0x2aae>
    344b:	20 00                	and    BYTE PTR [rax],al
    344d:	5f                   	pop    rdi
    344e:	5f                   	pop    rdi
    344f:	44                   	rex.R
    3450:	45                   	rex.RB
    3451:	43                   	rex.XB
    3452:	36 34 5f             	ss xor al,0x5f
    3455:	4d                   	rex.WRB
    3456:	41 58                	pop    r8
    3458:	5f                   	pop    rdi
    3459:	45 58                	rex.RB pop r8
    345b:	50                   	push   rax
    345c:	5f                   	pop    rdi
    345d:	5f                   	pop    rdi
    345e:	20 33                	and    BYTE PTR [rbx],dh
    3460:	38 35 00 5f 5f 46    	cmp    BYTE PTR [rip+0x465f5f00],dh        # 465f9366 <_end+0x463f834e>
    3466:	4c 54                	rex.WR push rsp
    3468:	33 32                	xor    esi,DWORD PTR [rdx]
    346a:	58                   	pop    rax
    346b:	5f                   	pop    rdi
    346c:	4d                   	rex.WRB
    346d:	49                   	rex.WB
    346e:	4e 5f                	rex.WRX pop rdi
    3470:	31 30                	xor    DWORD PTR [rax],esi
    3472:	5f                   	pop    rdi
    3473:	45 58                	rex.RB pop r8
    3475:	50                   	push   rax
    3476:	5f                   	pop    rdi
    3477:	5f                   	pop    rdi
    3478:	20 28                	and    BYTE PTR [rax],ch
    347a:	2d 33 30 37 29       	sub    eax,0x29373033
    347f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3482:	55                   	push   rbp
    3483:	53                   	push   rbx
    3484:	45 5f                	rex.RB pop r15
    3486:	50                   	push   rax
    3487:	4f 53                	rex.WRXB push r11
    3489:	49 58                	rex.WB pop r8
    348b:	32 00                	xor    al,BYTE PTR [rax]
    348d:	5f                   	pop    rdi
    348e:	49                   	rex.WB
    348f:	4f 5f                	rex.WRXB pop r15
    3491:	55                   	push   rbp
    3492:	4e                   	rex.WRX
    3493:	49 54                	rex.WB push r12
    3495:	42 55                	rex.X push rbp
    3497:	46 20 30             	rex.RX and BYTE PTR [rax],r14b
    349a:	32 30                	xor    dh,BYTE PTR [rax]
    349c:	30 30                	xor    BYTE PTR [rax],dh
    349e:	30 00                	xor    BYTE PTR [rax],al
    34a0:	5f                   	pop    rdi
    34a1:	5f                   	pop    rdi
    34a2:	4f                   	rex.WRXB
    34a3:	46                   	rex.RX
    34a4:	46 5f                	rex.RX pop rdi
    34a6:	54                   	push   rsp
    34a7:	5f                   	pop    rdi
    34a8:	54                   	push   rsp
    34a9:	59                   	pop    rcx
    34aa:	50                   	push   rax
    34ab:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    34af:	53                   	push   rbx
    34b0:	59                   	pop    rcx
    34b1:	53                   	push   rbx
    34b2:	43                   	rex.XB
    34b3:	41                   	rex.B
    34b4:	4c                   	rex.WR
    34b5:	4c 5f                	rex.WR pop rdi
    34b7:	53                   	push   rbx
    34b8:	4c                   	rex.WR
    34b9:	4f                   	rex.WRXB
    34ba:	4e                   	rex.WRX
    34bb:	47 5f                	rex.RXB pop r15
    34bd:	54                   	push   rsp
    34be:	59                   	pop    rcx
    34bf:	50                   	push   rax
    34c0:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    34c4:	55                   	push   rbp
    34c5:	49                   	rex.WB
    34c6:	4e 54                	rex.WRX push rsp
    34c8:	4d                   	rex.WRB
    34c9:	41 58                	pop    r8
    34cb:	5f                   	pop    rdi
    34cc:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    34d0:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    34d3:	23 23                	and    esp,DWORD PTR [rbx]
    34d5:	20 55 4c             	and    BYTE PTR [rbp+0x4c],dl
    34d8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    34db:	43                   	rex.XB
    34dc:	48                   	rex.W
    34dd:	41 52                	push   r10
    34df:	33 32                	xor    esi,DWORD PTR [rdx]
    34e1:	5f                   	pop    rdi
    34e2:	54                   	push   rsp
    34e3:	59                   	pop    rcx
    34e4:	50                   	push   rax
    34e5:	45 5f                	rex.RB pop r15
    34e7:	5f                   	pop    rdi
    34e8:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    34eb:	73 69                	jae    3556 <__FRAME_END__+0x2b52>
    34ed:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    34ef:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    34f4:	74 00                	je     34f6 <__FRAME_END__+0x2af2>
    34f6:	5f                   	pop    rdi
    34f7:	5f                   	pop    rdi
    34f8:	46                   	rex.RX
    34f9:	4c 54                	rex.WR push rsp
    34fb:	36 34 58             	ss xor al,0x58
    34fe:	5f                   	pop    rdi
    34ff:	48                   	rex.W
    3500:	41 53                	push   r11
    3502:	5f                   	pop    rdi
    3503:	49                   	rex.WB
    3504:	4e                   	rex.WRX
    3505:	46                   	rex.RX
    3506:	49                   	rex.WB
    3507:	4e                   	rex.WRX
    3508:	49 54                	rex.WB push r12
    350a:	59                   	pop    rcx
    350b:	5f                   	pop    rdi
    350c:	5f                   	pop    rdi
    350d:	20 31                	and    BYTE PTR [rcx],dh
    350f:	00 5f 42             	add    BYTE PTR [rdi+0x42],bl
    3512:	49 54                	rex.WB push r12
    3514:	53                   	push   rbx
    3515:	5f                   	pop    rdi
    3516:	47 5f                	rex.RXB pop r15
    3518:	43                   	rex.XB
    3519:	4f                   	rex.WRXB
    351a:	4e                   	rex.WRX
    351b:	46                   	rex.RX
    351c:	49                   	rex.WB
    351d:	47 5f                	rex.RXB pop r15
    351f:	48 20 31             	rex.W and BYTE PTR [rcx],sil
    3522:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3525:	44                   	rex.R
    3526:	45                   	rex.RB
    3527:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    352a:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    352d:	49                   	rex.WB
    352e:	4e 5f                	rex.WRX pop rdi
    3530:	5f                   	pop    rdi
    3531:	20 31                	and    BYTE PTR [rcx],dh
    3533:	45 2d 36 31 34 33    	rex.RB sub eax,0x33343136
    3539:	44                   	rex.R
    353a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    353e:	46                   	rex.RX
    353f:	4c 54                	rex.WR push rsp
    3541:	33 32                	xor    esi,DWORD PTR [rdx]
    3543:	58                   	pop    rax
    3544:	5f                   	pop    rdi
    3545:	4d                   	rex.WRB
    3546:	49                   	rex.WB
    3547:	4e 5f                	rex.WRX pop rdi
    3549:	45 58                	rex.RB pop r8
    354b:	50                   	push   rax
    354c:	5f                   	pop    rdi
    354d:	5f                   	pop    rdi
    354e:	20 28                	and    BYTE PTR [rax],ch
    3550:	2d 31 30 32 31       	sub    eax,0x31323031
    3555:	29 00                	sub    DWORD PTR [rax],eax
    3557:	5f                   	pop    rdi
    3558:	49                   	rex.WB
    3559:	4f 5f                	rex.WRXB pop r15
    355b:	67 65 74 63          	addr32 gs je 35c2 <__FRAME_END__+0x2bbe>
    355f:	5f                   	pop    rdi
    3560:	75 6e                	jne    35d0 <__FRAME_END__+0x2bcc>
    3562:	6c                   	ins    BYTE PTR es:[rdi],dx
    3563:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3564:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3567:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    356b:	70 29                	jo     3596 <__FRAME_END__+0x2b92>
    356d:	20 28                	and    BYTE PTR [rax],ch
    356f:	5f                   	pop    rdi
    3570:	49                   	rex.WB
    3571:	4f 5f                	rex.WRXB pop r15
    3573:	42                   	rex.X
    3574:	45 20 28             	and    BYTE PTR [r8],r13b
    3577:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    357a:	70 29                	jo     35a5 <__FRAME_END__+0x2ba1>
    357c:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3581:	5f                   	pop    rdi
    3582:	72 65                	jb     35e9 <__FRAME_END__+0x2be5>
    3584:	61                   	(bad)  
    3585:	64 5f                	fs pop rdi
    3587:	70 74                	jo     35fd <__FRAME_END__+0x2bf9>
    3589:	72 20                	jb     35ab <__FRAME_END__+0x2ba7>
    358b:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    3591:	70 29                	jo     35bc <__FRAME_END__+0x2bb8>
    3593:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3598:	5f                   	pop    rdi
    3599:	72 65                	jb     3600 <__FRAME_END__+0x2bfc>
    359b:	61                   	(bad)  
    359c:	64 5f                	fs pop rdi
    359e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    35a0:	64 2c 20             	fs sub al,0x20
    35a3:	30 29                	xor    BYTE PTR [rcx],ch
    35a5:	20 3f                	and    BYTE PTR [rdi],bh
    35a7:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    35aa:	75 66                	jne    3612 <__FRAME_END__+0x2c0e>
    35ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    35ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35ae:	77 20                	ja     35d0 <__FRAME_END__+0x2bcc>
    35b0:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    35b3:	70 29                	jo     35de <__FRAME_END__+0x2bda>
    35b5:	20 3a                	and    BYTE PTR [rdx],bh
    35b7:	20 2a                	and    BYTE PTR [rdx],ch
    35b9:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    35bc:	73 69                	jae    3627 <__FRAME_END__+0x2c23>
    35be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    35c0:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    35c5:	61                   	(bad)  
    35c6:	72 20                	jb     35e8 <__FRAME_END__+0x2be4>
    35c8:	2a 29                	sub    ch,BYTE PTR [rcx]
    35ca:	20 28                	and    BYTE PTR [rax],ch
    35cc:	5f                   	pop    rdi
    35cd:	66 70 29             	data16 jo 35f9 <__FRAME_END__+0x2bf5>
    35d0:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    35d5:	5f                   	pop    rdi
    35d6:	72 65                	jb     363d <__FRAME_END__+0x2c39>
    35d8:	61                   	(bad)  
    35d9:	64 5f                	fs pop rdi
    35db:	70 74                	jo     3651 <__FRAME_END__+0x2c4d>
    35dd:	72 2b                	jb     360a <__FRAME_END__+0x2c06>
    35df:	2b 29                	sub    ebp,DWORD PTR [rcx]
    35e1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    35e4:	49                   	rex.WB
    35e5:	4e 54                	rex.WRX push rsp
    35e7:	50                   	push   rax
    35e8:	54                   	push   rsp
    35e9:	52                   	push   rdx
    35ea:	5f                   	pop    rdi
    35eb:	57                   	push   rdi
    35ec:	49                   	rex.WB
    35ed:	44 54                	rex.R push rsp
    35ef:	48 5f                	rex.W pop rdi
    35f1:	5f                   	pop    rdi
    35f2:	20 36                	and    BYTE PTR [rsi],dh
    35f4:	34 00                	xor    al,0x0
    35f6:	5f                   	pop    rdi
    35f7:	5f                   	pop    rdi
    35f8:	49                   	rex.WB
    35f9:	4e                   	rex.WRX
    35fa:	4f 5f                	rex.WRXB pop r15
    35fc:	54                   	push   rsp
    35fd:	5f                   	pop    rdi
    35fe:	54                   	push   rsp
    35ff:	59                   	pop    rcx
    3600:	50                   	push   rax
    3601:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3605:	53                   	push   rbx
    3606:	59                   	pop    rcx
    3607:	53                   	push   rbx
    3608:	43                   	rex.XB
    3609:	41                   	rex.B
    360a:	4c                   	rex.WR
    360b:	4c 5f                	rex.WR pop rdi
    360d:	55                   	push   rbp
    360e:	4c                   	rex.WR
    360f:	4f                   	rex.WRXB
    3610:	4e                   	rex.WRX
    3611:	47 5f                	rex.RXB pop r15
    3613:	54                   	push   rsp
    3614:	59                   	pop    rcx
    3615:	50                   	push   rax
    3616:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    361a:	55                   	push   rbp
    361b:	49                   	rex.WB
    361c:	4e 54                	rex.WRX push rsp
    361e:	5f                   	pop    rdi
    361f:	46                   	rex.RX
    3620:	41 53                	push   r11
    3622:	54                   	push   rsp
    3623:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    3626:	59                   	pop    rcx
    3627:	50                   	push   rax
    3628:	45 5f                	rex.RB pop r15
    362a:	5f                   	pop    rdi
    362b:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    362e:	73 69                	jae    3699 <__FRAME_END__+0x2c95>
    3630:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3632:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3637:	61                   	(bad)  
    3638:	72 00                	jb     363a <__FRAME_END__+0x2c36>
    363a:	5f                   	pop    rdi
    363b:	5f                   	pop    rdi
    363c:	49                   	rex.WB
    363d:	4e 54                	rex.WRX push rsp
    363f:	33 32                	xor    esi,DWORD PTR [rdx]
    3641:	5f                   	pop    rdi
    3642:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    3646:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3649:	5f                   	pop    rdi
    364a:	5f                   	pop    rdi
    364b:	46 53                	rex.RX push rbx
    364d:	46                   	rex.RX
    364e:	49                   	rex.WB
    364f:	4c                   	rex.WR
    3650:	43                   	rex.XB
    3651:	4e 54                	rex.WRX push rsp
    3653:	36 34 5f             	ss xor al,0x5f
    3656:	54                   	push   rsp
    3657:	5f                   	pop    rdi
    3658:	54                   	push   rsp
    3659:	59                   	pop    rcx
    365a:	50                   	push   rax
    365b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    365f:	55                   	push   rbp
    3660:	51                   	push   rcx
    3661:	55                   	push   rbp
    3662:	41                   	rex.B
    3663:	44 5f                	rex.R pop rdi
    3665:	54                   	push   rsp
    3666:	59                   	pop    rcx
    3667:	50                   	push   rax
    3668:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    366c:	4c                   	rex.WR
    366d:	44                   	rex.R
    366e:	42                   	rex.X
    366f:	4c 5f                	rex.WR pop rdi
    3671:	48                   	rex.W
    3672:	41 53                	push   r11
    3674:	5f                   	pop    rdi
    3675:	51                   	push   rcx
    3676:	55                   	push   rbp
    3677:	49                   	rex.WB
    3678:	45 54                	rex.RB push r12
    367a:	5f                   	pop    rdi
    367b:	4e                   	rex.WRX
    367c:	41                   	rex.B
    367d:	4e 5f                	rex.WRX pop rdi
    367f:	5f                   	pop    rdi
    3680:	20 31                	and    BYTE PTR [rcx],dh
    3682:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3685:	47                   	rex.RXB
    3686:	4e 55                	rex.WRX push rbp
    3688:	43 5f                	rex.XB pop r15
    368a:	50                   	push   rax
    368b:	41 54                	push   r12
    368d:	43                   	rex.XB
    368e:	48                   	rex.W
    368f:	4c                   	rex.WR
    3690:	45 56                	rex.RB push r14
    3692:	45                   	rex.RB
    3693:	4c 5f                	rex.WR pop rdi
    3695:	5f                   	pop    rdi
    3696:	20 30                	and    BYTE PTR [rax],dh
    3698:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    369b:	57                   	push   rdi
    369c:	49                   	rex.WB
    369d:	4e 54                	rex.WRX push rsp
    369f:	5f                   	pop    rdi
    36a0:	4d                   	rex.WRB
    36a1:	41 58                	pop    r8
    36a3:	5f                   	pop    rdi
    36a4:	5f                   	pop    rdi
    36a5:	20 30                	and    BYTE PTR [rax],dh
    36a7:	78 66                	js     370f <__FRAME_END__+0x2d0b>
    36a9:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    36b0:	55 
    36b1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36b4:	61                   	(bad)  
    36b5:	74 74                	je     372b <__FRAME_END__+0x2d27>
    36b7:	72 69                	jb     3722 <__FRAME_END__+0x2d1e>
    36b9:	62                   	(bad)  
    36ba:	75 74                	jne    3730 <__FRAME_END__+0x2d2c>
    36bc:	65 5f                	gs pop rdi
    36be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    36c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36c1:	73 74                	jae    3737 <__FRAME_END__+0x2d33>
    36c3:	72 69                	jb     372e <__FRAME_END__+0x2d2a>
    36c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36c6:	67 5f                	addr32 pop rdi
    36c8:	5f                   	pop    rdi
    36c9:	20 00                	and    BYTE PTR [rax],al
    36cb:	5f                   	pop    rdi
    36cc:	49                   	rex.WB
    36cd:	4f 5f                	rex.WRXB pop r15
    36cf:	4d                   	rex.WRB
    36d0:	41                   	rex.B
    36d1:	47                   	rex.RXB
    36d2:	49                   	rex.WB
    36d3:	43 5f                	rex.XB pop r15
    36d5:	4d                   	rex.WRB
    36d6:	41 53                	push   r11
    36d8:	4b 20 30             	rex.WXB and BYTE PTR [r8],sil
    36db:	78 46                	js     3723 <__FRAME_END__+0x2d1f>
    36dd:	46                   	rex.RX
    36de:	46                   	rex.RX
    36df:	46 30 30             	rex.RX xor BYTE PTR [rax],r14b
    36e2:	30 30                	xor    BYTE PTR [rax],dh
    36e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    36e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    36e8:	69 6e 75 78 20 31 00 	imul   ebp,DWORD PTR [rsi+0x75],0x312078
    36ef:	5f                   	pop    rdi
    36f0:	5f                   	pop    rdi
    36f1:	47                   	rex.RXB
    36f2:	4c                   	rex.WR
    36f3:	49                   	rex.WB
    36f4:	42                   	rex.X
    36f5:	43 5f                	rex.XB pop r15
    36f7:	55                   	push   rbp
    36f8:	53                   	push   rbx
    36f9:	45 5f                	rex.RB pop r15
    36fb:	49                   	rex.WB
    36fc:	45                   	rex.RB
    36fd:	43 5f                	rex.XB pop r15
    36ff:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f703b <_end+0x463f6023>
    3706:	55                   	push   rbp
    3707:	4e                   	rex.WRX
    3708:	43 53                	rex.XB push r11
    370a:	5f                   	pop    rdi
    370b:	45 58                	rex.RB pop r8
    370d:	54                   	push   rsp
    370e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3711:	4f 5f                	rex.WRXB pop r15
    3713:	76 61                	jbe    3776 <__FRAME_END__+0x2d72>
    3715:	5f                   	pop    rdi
    3716:	6c                   	ins    BYTE PTR es:[rdi],dx
    3717:	69 73 74 20 5f 5f 67 	imul   esi,DWORD PTR [rbx+0x74],0x675f5f20
    371e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    371f:	75 63                	jne    3784 <__FRAME_END__+0x2d80>
    3721:	5f                   	pop    rdi
    3722:	76 61                	jbe    3785 <__FRAME_END__+0x2d81>
    3724:	5f                   	pop    rdi
    3725:	6c                   	ins    BYTE PTR es:[rdi],dx
    3726:	69 73 74 00 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f00
    372d:	42 55                	rex.X push rbp
    372f:	46 53                	rex.RX push rbx
    3731:	49 5a                	rex.WB pop r10
    3733:	20 38                	and    BYTE PTR [rax],bh
    3735:	31 39                	xor    DWORD PTR [rcx],edi
    3737:	32 00                	xor    al,BYTE PTR [rax]
    3739:	5f                   	pop    rdi
    373a:	5f                   	pop    rdi
    373b:	4c                   	rex.WR
    373c:	44                   	rex.R
    373d:	42                   	rex.X
    373e:	4c 5f                	rex.WR pop rdi
    3740:	52                   	push   rdx
    3741:	45                   	rex.RB
    3742:	44                   	rex.R
    3743:	49 52                	rex.WB push r10
    3745:	31 28                	xor    DWORD PTR [rax],ebp
    3747:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3748:	61                   	(bad)  
    3749:	6d                   	ins    DWORD PTR es:[rdi],dx
    374a:	65 2c 70             	gs sub al,0x70
    374d:	72 6f                	jb     37be <__FRAME_END__+0x2dba>
    374f:	74 6f                	je     37c0 <__FRAME_END__+0x2dbc>
    3751:	2c 61                	sub    al,0x61
    3753:	6c                   	ins    BYTE PTR es:[rdi],dx
    3754:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    375b:	6d                   	ins    DWORD PTR es:[rdi],dx
    375c:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    3760:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3761:	74 6f                	je     37d2 <__FRAME_END__+0x2dce>
    3763:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3766:	61                   	(bad)  
    3767:	74 74                	je     37dd <__FRAME_END__+0x2dd9>
    3769:	72 69                	jb     37d4 <__FRAME_END__+0x2dd0>
    376b:	62                   	(bad)  
    376c:	75 74                	jne    37e2 <__FRAME_END__+0x2dde>
    376e:	65 5f                	gs pop rdi
    3770:	6d                   	ins    DWORD PTR es:[rdi],dx
    3771:	61                   	(bad)  
    3772:	6c                   	ins    BYTE PTR es:[rdi],dx
    3773:	6c                   	ins    BYTE PTR es:[rdi],dx
    3774:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3775:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    3778:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    377b:	61                   	(bad)  
    377c:	74 74                	je     37f2 <__FRAME_END__+0x2dee>
    377e:	72 69                	jb     37e9 <__FRAME_END__+0x2de5>
    3780:	62                   	(bad)  
    3781:	75 74                	jne    37f7 <__FRAME_END__+0x2df3>
    3783:	65 5f                	gs pop rdi
    3785:	5f                   	pop    rdi
    3786:	20 28                	and    BYTE PTR [rax],ch
    3788:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    378b:	6d                   	ins    DWORD PTR es:[rdi],dx
    378c:	61                   	(bad)  
    378d:	6c                   	ins    BYTE PTR es:[rdi],dx
    378e:	6c                   	ins    BYTE PTR es:[rdi],dx
    378f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3790:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    3793:	29 29                	sub    DWORD PTR [rcx],ebp
    3795:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3798:	55                   	push   rbp
    3799:	49                   	rex.WB
    379a:	4e 54                	rex.WRX push rsp
    379c:	33 32                	xor    esi,DWORD PTR [rdx]
    379e:	5f                   	pop    rdi
    379f:	54                   	push   rsp
    37a0:	59                   	pop    rcx
    37a1:	50                   	push   rax
    37a2:	45 5f                	rex.RB pop r15
    37a4:	5f                   	pop    rdi
    37a5:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    37a8:	73 69                	jae    3813 <__FRAME_END__+0x2e0f>
    37aa:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    37ac:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    37b1:	74 00                	je     37b3 <__FRAME_END__+0x2daf>
    37b3:	5f                   	pop    rdi
    37b4:	5f                   	pop    rdi
    37b5:	4c                   	rex.WR
    37b6:	44                   	rex.R
    37b7:	42                   	rex.X
    37b8:	4c 5f                	rex.WR pop rdi
    37ba:	52                   	push   rdx
    37bb:	45                   	rex.RB
    37bc:	44                   	rex.R
    37bd:	49 52                	rex.WB push r10
    37bf:	5f                   	pop    rdi
    37c0:	4e 54                	rex.WRX push rsp
    37c2:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    37c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    37c7:	65 2c 70             	gs sub al,0x70
    37ca:	72 6f                	jb     383b <__FRAME_END__+0x2e37>
    37cc:	74 6f                	je     383d <__FRAME_END__+0x2e39>
    37ce:	29 20                	sub    DWORD PTR [rax],esp
    37d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    37d1:	61                   	(bad)  
    37d2:	6d                   	ins    DWORD PTR es:[rdi],dx
    37d3:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    37d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37d8:	74 6f                	je     3849 <__FRAME_END__+0x2e45>
    37da:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    37dd:	54                   	push   rsp
    37de:	48 52                	rex.W push rdx
    37e0:	4f 57                	rex.WRXB push r15
    37e2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    37e5:	55                   	push   rbp
    37e6:	53                   	push   rbx
    37e7:	45 5f                	rex.RB pop r15
    37e9:	58                   	pop    rax
    37ea:	4f 50                	rex.WRXB push r8
    37ec:	45                   	rex.RB
    37ed:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    37f1:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    37f4:	4f 5f                	rex.WRXB pop r15
    37f6:	55                   	push   rbp
    37f7:	50                   	push   rax
    37f8:	50                   	push   rax
    37f9:	45 52                	rex.RB push r10
    37fb:	43                   	rex.XB
    37fc:	41 53                	push   r11
    37fe:	45 20 30             	and    BYTE PTR [r8],r14b
    3801:	31 30                	xor    DWORD PTR [rax],esi
    3803:	30 30                	xor    BYTE PTR [rax],dh
    3805:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
    3808:	74 6d                	je     3877 <__FRAME_END__+0x2e73>
    380a:	70 64                	jo     3870 <__FRAME_END__+0x2e6c>
    380c:	69 72 20 22 2f 74 6d 	imul   esi,DWORD PTR [rdx+0x20],0x6d742f22
    3813:	70 22                	jo     3837 <__FRAME_END__+0x2e33>
    3815:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3818:	52                   	push   rdx
    3819:	45                   	rex.RB
    381a:	44                   	rex.R
    381b:	49 52                	rex.WB push r10
    381d:	45                   	rex.RB
    381e:	43 54                	rex.XB push r12
    3820:	5f                   	pop    rdi
    3821:	4e 54                	rex.WRX push rsp
    3823:	48 28 6e 61          	rex.W sub BYTE PTR [rsi+0x61],bpl
    3827:	6d                   	ins    DWORD PTR es:[rdi],dx
    3828:	65 2c 70             	gs sub al,0x70
    382b:	72 6f                	jb     389c <__FRAME_END__+0x2e98>
    382d:	74 6f                	je     389e <__FRAME_END__+0x2e9a>
    382f:	2c 61                	sub    al,0x61
    3831:	6c                   	ins    BYTE PTR es:[rdi],dx
    3832:	69 61 73 29 20 6e 61 	imul   esp,DWORD PTR [rcx+0x73],0x616e2029
    3839:	6d                   	ins    DWORD PTR es:[rdi],dx
    383a:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
    383e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    383f:	74 6f                	je     38b0 <__FRAME_END__+0x2eac>
    3841:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3844:	61                   	(bad)  
    3845:	73 6d                	jae    38b4 <__FRAME_END__+0x2eb0>
    3847:	5f                   	pop    rdi
    3848:	5f                   	pop    rdi
    3849:	20 28                	and    BYTE PTR [rax],ch
    384b:	5f                   	pop    rdi
    384c:	5f                   	pop    rdi
    384d:	41 53                	push   r11
    384f:	4d                   	rex.WRB
    3850:	4e                   	rex.WRX
    3851:	41                   	rex.B
    3852:	4d                   	rex.WRB
    3853:	45 20 28             	and    BYTE PTR [r8],r13b
    3856:	23 61 6c             	and    esp,DWORD PTR [rcx+0x6c]
    3859:	69 61 73 29 29 20 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f202929
    3860:	5f                   	pop    rdi
    3861:	54                   	push   rsp
    3862:	48 52                	rex.W push rdx
    3864:	4f 57                	rex.WRXB push r15
    3866:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3869:	55                   	push   rbp
    386a:	53                   	push   rbx
    386b:	45 5f                	rex.RB pop r15
    386d:	58                   	pop    rax
    386e:	4f 50                	rex.WRXB push r8
    3870:	45                   	rex.RB
    3871:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    3875:	46                   	rex.RX
    3876:	4c 54                	rex.WR push rsp
    3878:	31 32                	xor    DWORD PTR [rdx],esi
    387a:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    387d:	50                   	push   rax
    387e:	53                   	push   rbx
    387f:	49                   	rex.WB
    3880:	4c                   	rex.WR
    3881:	4f                   	rex.WRXB
    3882:	4e 5f                	rex.WRX pop rdi
    3884:	5f                   	pop    rdi
    3885:	20 31                	and    BYTE PTR [rcx],dh
    3887:	2e 39 32             	cmp    DWORD PTR cs:[rdx],esi
    388a:	35 39 32 39 39       	xor    eax,0x39393239
    388f:	34 34                	xor    al,0x34
    3891:	33 38                	xor    edi,DWORD PTR [rax]
    3893:	37                   	(bad)  
    3894:	32 33                	xor    dh,BYTE PTR [rbx]
    3896:	35 38 35 33 30       	xor    eax,0x30333538
    389b:	35 35 39 37 37       	xor    eax,0x37373935
    38a0:	39 34 32             	cmp    DWORD PTR [rdx+rsi*1],esi
    38a3:	35 38 34 39 32       	xor    eax,0x32393438
    38a8:	37                   	(bad)  
    38a9:	33 32                	xor    esi,DWORD PTR [rdx]
    38ab:	65 2d 33 34 46 31    	gs sub eax,0x31463433
    38b1:	32 38                	xor    bh,BYTE PTR [rax]
    38b3:	00 46 4f             	add    BYTE PTR [rsi+0x4f],al
    38b6:	50                   	push   rax
    38b7:	45                   	rex.RB
    38b8:	4e 5f                	rex.WRX pop rdi
    38ba:	4d                   	rex.WRB
    38bb:	41 58                	pop    r8
    38bd:	20 31                	and    BYTE PTR [rcx],dh
    38bf:	36 00 5f 49          	add    BYTE PTR ss:[rdi+0x49],bl
    38c3:	4f 5f                	rex.WRXB pop r15
    38c5:	46                   	rex.RX
    38c6:	49                   	rex.WB
    38c7:	4c                   	rex.WR
    38c8:	45 5f                	rex.RB pop r15
    38ca:	70 6c                	jo     3938 <__FRAME_END__+0x2f34>
    38cc:	75 73                	jne    3941 <__FRAME_END__+0x2f3d>
    38ce:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    38d1:	4f 53                	rex.WRXB push r11
    38d3:	49 58                	rex.WB pop r8
    38d5:	5f                   	pop    rdi
    38d6:	43 5f                	rex.XB pop r15
    38d8:	53                   	push   rbx
    38d9:	4f 55                	rex.WRXB push r13
    38db:	52                   	push   rdx
    38dc:	43                   	rex.XB
    38dd:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    38e1:	54                   	push   rsp
    38e2:	48 52                	rex.W push rdx
    38e4:	4f 57                	rex.WRXB push r15
    38e6:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    38e9:	61                   	(bad)  
    38ea:	74 74                	je     3960 <__FRAME_END__+0x2f5c>
    38ec:	72 69                	jb     3957 <__FRAME_END__+0x2f53>
    38ee:	62                   	(bad)  
    38ef:	75 74                	jne    3965 <__FRAME_END__+0x2f61>
    38f1:	65 5f                	gs pop rdi
    38f3:	5f                   	pop    rdi
    38f4:	20 28                	and    BYTE PTR [rax],ch
    38f6:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    38f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    38fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    38fb:	74 68                	je     3965 <__FRAME_END__+0x2f61>
    38fd:	72 6f                	jb     396e <__FRAME_END__+0x2f6a>
    38ff:	77 5f                	ja     3960 <__FRAME_END__+0x2f5c>
    3901:	5f                   	pop    rdi
    3902:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3905:	4c                   	rex.WR
    3906:	45                   	rex.RB
    3907:	41                   	rex.B
    3908:	46 29 29             	rex.RX sub DWORD PTR [rcx],r13d
    390b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    390e:	53                   	push   rbx
    390f:	49 5a                	rex.WB pop r10
    3911:	45                   	rex.RB
    3912:	4f                   	rex.WRXB
    3913:	46 5f                	rex.RX pop rdi
    3915:	4c                   	rex.WR
    3916:	4f                   	rex.WRXB
    3917:	4e                   	rex.WRX
    3918:	47 5f                	rex.RXB pop r15
    391a:	4c                   	rex.WR
    391b:	4f                   	rex.WRXB
    391c:	4e                   	rex.WRX
    391d:	47 5f                	rex.RXB pop r15
    391f:	5f                   	pop    rdi
    3920:	20 38                	and    BYTE PTR [rax],bh
    3922:	00 5f 56             	add    BYTE PTR [rdi+0x56],bl
    3925:	41 5f                	pop    r15
    3927:	4c                   	rex.WR
    3928:	49 53                	rex.WB push r11
    392a:	54                   	push   rsp
    392b:	5f                   	pop    rdi
    392c:	44                   	rex.R
    392d:	45                   	rex.RB
    392e:	46                   	rex.RX
    392f:	49                   	rex.WB
    3930:	4e                   	rex.WRX
    3931:	45                   	rex.RB
    3932:	44 20 00             	and    BYTE PTR [rax],r8b
    3935:	5f                   	pop    rdi
    3936:	5f                   	pop    rdi
    3937:	55                   	push   rbp
    3938:	49                   	rex.WB
    3939:	4e 54                	rex.WRX push rsp
    393b:	5f                   	pop    rdi
    393c:	46                   	rex.RX
    393d:	41 53                	push   r11
    393f:	54                   	push   rsp
    3940:	33 32                	xor    esi,DWORD PTR [rdx]
    3942:	5f                   	pop    rdi
    3943:	54                   	push   rsp
    3944:	59                   	pop    rcx
    3945:	50                   	push   rax
    3946:	45 5f                	rex.RB pop r15
    3948:	5f                   	pop    rdi
    3949:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    394d:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3951:	73 69                	jae    39bc <__FRAME_END__+0x2fb8>
    3953:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3955:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    395a:	74 00                	je     395c <__FRAME_END__+0x2f58>
    395c:	5f                   	pop    rdi
    395d:	5f                   	pop    rdi
    395e:	53                   	push   rbx
    395f:	48 52                	rex.W push rdx
    3961:	54                   	push   rsp
    3962:	5f                   	pop    rdi
    3963:	57                   	push   rdi
    3964:	49                   	rex.WB
    3965:	44 54                	rex.R push rsp
    3967:	48 5f                	rex.W pop rdi
    3969:	5f                   	pop    rdi
    396a:	20 31                	and    BYTE PTR [rcx],dh
    396c:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    3970:	53                   	push   rbx
    3971:	53                   	push   rbx
    3972:	45 32 5f 4d          	xor    r11b,BYTE PTR [r15+0x4d]
    3976:	41 54                	push   r12
    3978:	48 5f                	rex.W pop rdi
    397a:	5f                   	pop    rdi
    397b:	20 31                	and    BYTE PTR [rcx],dh
    397d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3980:	53                   	push   rbx
    3981:	53                   	push   rbx
    3982:	49 5a                	rex.WB pop r10
    3984:	45 5f                	rex.RB pop r15
    3986:	54                   	push   rsp
    3987:	5f                   	pop    rdi
    3988:	54                   	push   rsp
    3989:	59                   	pop    rcx
    398a:	50                   	push   rax
    398b:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    398f:	53                   	push   rbx
    3990:	57                   	push   rdi
    3991:	4f 52                	rex.WRXB push r10
    3993:	44 5f                	rex.R pop rdi
    3995:	54                   	push   rsp
    3996:	59                   	pop    rcx
    3997:	50                   	push   rax
    3998:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    399c:	53                   	push   rbx
    399d:	36 34 5f             	ss xor al,0x5f
    39a0:	54                   	push   rsp
    39a1:	59                   	pop    rcx
    39a2:	50                   	push   rax
    39a3:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    39a8:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    39ac:	74 00                	je     39ae <__FRAME_END__+0x2faa>
    39ae:	5f                   	pop    rdi
    39af:	5f                   	pop    rdi
    39b0:	61                   	(bad)  
    39b1:	74 74                	je     3a27 <__FRAME_END__+0x3023>
    39b3:	72 69                	jb     3a1e <__FRAME_END__+0x301a>
    39b5:	62                   	(bad)  
    39b6:	75 74                	jne    3a2c <__FRAME_END__+0x3028>
    39b8:	65 5f                	gs pop rdi
    39ba:	70 75                	jo     3a31 <__FRAME_END__+0x302d>
    39bc:	72 65                	jb     3a23 <__FRAME_END__+0x301f>
    39be:	5f                   	pop    rdi
    39bf:	5f                   	pop    rdi
    39c0:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    39c3:	61                   	(bad)  
    39c4:	74 74                	je     3a3a <__FRAME_END__+0x3036>
    39c6:	72 69                	jb     3a31 <__FRAME_END__+0x302d>
    39c8:	62                   	(bad)  
    39c9:	75 74                	jne    3a3f <__FRAME_END__+0x303b>
    39cb:	65 5f                	gs pop rdi
    39cd:	5f                   	pop    rdi
    39ce:	20 28                	and    BYTE PTR [rax],ch
    39d0:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    39d3:	70 75                	jo     3a4a <__FRAME_END__+0x3046>
    39d5:	72 65                	jb     3a3c <__FRAME_END__+0x3038>
    39d7:	5f                   	pop    rdi
    39d8:	5f                   	pop    rdi
    39d9:	29 29                	sub    DWORD PTR [rcx],ebp
    39db:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    39de:	49                   	rex.WB
    39df:	4e 54                	rex.WRX push rsp
    39e1:	4d                   	rex.WRB
    39e2:	41 58                	pop    r8
    39e4:	5f                   	pop    rdi
    39e5:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    39e9:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    39ec:	23 23                	and    esp,DWORD PTR [rbx]
    39ee:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    39f2:	49                   	rex.WB
    39f3:	4f 5f                	rex.WRXB pop r15
    39f5:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    39fc:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    39ff:	5f                   	pop    rdi
    3a00:	69 63 6f 6e 76 5f 74 	imul   esp,DWORD PTR [rbx+0x6f],0x745f766e
    3a07:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a0a:	49                   	rex.WB
    3a0b:	4e 54                	rex.WRX push rsp
    3a0d:	5f                   	pop    rdi
    3a0e:	46                   	rex.RX
    3a0f:	41 53                	push   r11
    3a11:	54                   	push   rsp
    3a12:	33 32                	xor    esi,DWORD PTR [rdx]
    3a14:	5f                   	pop    rdi
    3a15:	57                   	push   rdi
    3a16:	49                   	rex.WB
    3a17:	44 54                	rex.R push rsp
    3a19:	48 5f                	rex.W pop rdi
    3a1b:	5f                   	pop    rdi
    3a1c:	20 36                	and    BYTE PTR [rsi],dh
    3a1e:	34 00                	xor    al,0x0
    3a20:	5f                   	pop    rdi
    3a21:	5f                   	pop    rdi
    3a22:	55                   	push   rbp
    3a23:	53                   	push   rbx
    3a24:	45 5f                	rex.RB pop r15
    3a26:	58                   	pop    rax
    3a27:	4f 50                	rex.WRXB push r8
    3a29:	45                   	rex.RB
    3a2a:	4e 32 4b 38          	rex.WRX xor r9b,BYTE PTR [rbx+0x38]
    3a2e:	20 31                	and    BYTE PTR [rcx],dh
    3a30:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a33:	49                   	rex.WB
    3a34:	4e 54                	rex.WRX push rsp
    3a36:	5f                   	pop    rdi
    3a37:	4c                   	rex.WR
    3a38:	45                   	rex.RB
    3a39:	41 53                	push   r11
    3a3b:	54                   	push   rsp
    3a3c:	36 34 5f             	ss xor al,0x5f
    3a3f:	57                   	push   rdi
    3a40:	49                   	rex.WB
    3a41:	44 54                	rex.R push rsp
    3a43:	48 5f                	rex.W pop rdi
    3a45:	5f                   	pop    rdi
    3a46:	20 36                	and    BYTE PTR [rsi],dh
    3a48:	34 00                	xor    al,0x0
    3a4a:	5f                   	pop    rdi
    3a4b:	5f                   	pop    rdi
    3a4c:	47                   	rex.RXB
    3a4d:	4c                   	rex.WR
    3a4e:	49                   	rex.WB
    3a4f:	42                   	rex.X
    3a50:	43 5f                	rex.XB pop r15
    3a52:	55                   	push   rbp
    3a53:	53                   	push   rbx
    3a54:	45 5f                	rex.RB pop r15
    3a56:	49                   	rex.WB
    3a57:	45                   	rex.RB
    3a58:	43 5f                	rex.XB pop r15
    3a5a:	36 30 35 35 39 5f 54 	xor    BYTE PTR ss:[rip+0x545f3935],dh        # 545f7396 <_end+0x543f637e>
    3a61:	59                   	pop    rcx
    3a62:	50                   	push   rax
    3a63:	45 53                	rex.RB push r11
    3a65:	5f                   	pop    rdi
    3a66:	45 58                	rex.RB pop r8
    3a68:	54                   	push   rsp
    3a69:	20 30                	and    BYTE PTR [rax],dh
    3a6b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a6e:	49                   	rex.WB
    3a6f:	4e 54                	rex.WRX push rsp
    3a71:	38 5f 43             	cmp    BYTE PTR [rdi+0x43],bl
    3a74:	28 63 29             	sub    BYTE PTR [rbx+0x29],ah
    3a77:	20 63 00             	and    BYTE PTR [rbx+0x0],ah
    3a7a:	5f                   	pop    rdi
    3a7b:	5f                   	pop    rdi
    3a7c:	53                   	push   rbx
    3a7d:	49 5a                	rex.WB pop r10
    3a7f:	45                   	rex.RB
    3a80:	4f                   	rex.WRXB
    3a81:	46 5f                	rex.RX pop rdi
    3a83:	50                   	push   rax
    3a84:	4f                   	rex.WRXB
    3a85:	49                   	rex.WB
    3a86:	4e 54                	rex.WRX push rsp
    3a88:	45 52                	rex.RB push r10
    3a8a:	5f                   	pop    rdi
    3a8b:	5f                   	pop    rdi
    3a8c:	20 38                	and    BYTE PTR [rax],bh
    3a8e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3a91:	46                   	rex.RX
    3a92:	4c 54                	rex.WR push rsp
    3a94:	36 34 5f             	ss xor al,0x5f
    3a97:	45 50                	rex.RB push r8
    3a99:	53                   	push   rbx
    3a9a:	49                   	rex.WB
    3a9b:	4c                   	rex.WR
    3a9c:	4f                   	rex.WRXB
    3a9d:	4e 5f                	rex.WRX pop rdi
    3a9f:	5f                   	pop    rdi
    3aa0:	20 32                	and    BYTE PTR [rdx],dh
    3aa2:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    3aa5:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    3aa8:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    3aac:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33316de2 <_end+0x33115dca>
    3ab2:	30 38                	xor    BYTE PTR [rax],bh
    3ab4:	30 38                	xor    BYTE PTR [rax],bh
    3ab6:	34 37                	xor    al,0x37
    3ab8:	32 36                	xor    dh,BYTE PTR [rsi]
    3aba:	33 33                	xor    esi,DWORD PTR [rbx]
    3abc:	33 36                	xor    esi,DWORD PTR [rsi]
    3abe:	31 38                	xor    DWORD PTR [rax],edi
    3ac0:	31 36                	xor    DWORD PTR [rsi],esi
    3ac2:	34 30                	xor    al,0x30
    3ac4:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    3ac8:	31 36                	xor    DWORD PTR [rsi],esi
    3aca:	46                   	rex.RX
    3acb:	36 34 00             	ss xor al,0x0
    3ace:	5f                   	pop    rdi
    3acf:	49                   	rex.WB
    3ad0:	4f 5f                	rex.WRXB pop r15
    3ad2:	76 61                	jbe    3b35 <__FRAME_END__+0x3131>
    3ad4:	5f                   	pop    rdi
    3ad5:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ad6:	69 73 74 20 5f 47 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f475f20
    3add:	76 61                	jbe    3b40 <__FRAME_END__+0x313c>
    3adf:	5f                   	pop    rdi
    3ae0:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ae1:	69 73 74 00 5f 5f 46 	imul   esi,DWORD PTR [rbx+0x74],0x465f5f00
    3ae8:	4c 54                	rex.WR push rsp
    3aea:	36 34 58             	ss xor al,0x58
    3aed:	5f                   	pop    rdi
    3aee:	4d                   	rex.WRB
    3aef:	41                   	rex.B
    3af0:	4e 54                	rex.WRX push rsp
    3af2:	5f                   	pop    rdi
    3af3:	44                   	rex.R
    3af4:	49                   	rex.WB
    3af5:	47 5f                	rex.RXB pop r15
    3af7:	5f                   	pop    rdi
    3af8:	20 36                	and    BYTE PTR [rsi],dh
    3afa:	34 00                	xor    al,0x0
    3afc:	5f                   	pop    rdi
    3afd:	44                   	rex.R
    3afe:	45                   	rex.RB
    3aff:	46                   	rex.RX
    3b00:	41 55                	push   r13
    3b02:	4c 54                	rex.WR push rsp
    3b04:	5f                   	pop    rdi
    3b05:	53                   	push   rbx
    3b06:	4f 55                	rex.WRXB push r13
    3b08:	52                   	push   rdx
    3b09:	43                   	rex.XB
    3b0a:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3b0e:	57                   	push   rdi
    3b0f:	43                   	rex.XB
    3b10:	48                   	rex.W
    3b11:	41 52                	push   r10
    3b13:	5f                   	pop    rdi
    3b14:	4d                   	rex.WRB
    3b15:	41 58                	pop    r8
    3b17:	5f                   	pop    rdi
    3b18:	5f                   	pop    rdi
    3b19:	20 30                	and    BYTE PTR [rax],dh
    3b1b:	78 37                	js     3b54 <__FRAME_END__+0x3150>
    3b1d:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x49],bl
    3b24:	00 5f 49 
    3b27:	4f 5f                	rex.WRXB pop r15
    3b29:	42 55                	rex.X push rbp
    3b2b:	46 53                	rex.RX push rbx
    3b2d:	49 5a                	rex.WB pop r10
    3b2f:	20 5f 47             	and    BYTE PTR [rdi+0x47],bl
    3b32:	5f                   	pop    rdi
    3b33:	42 55                	rex.X push rbp
    3b35:	46 53                	rex.RX push rbx
    3b37:	49 5a                	rex.WB pop r10
    3b39:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3b3c:	46 53                	rex.RX push rbx
    3b3e:	46                   	rex.RX
    3b3f:	49                   	rex.WB
    3b40:	4c                   	rex.WR
    3b41:	43                   	rex.XB
    3b42:	4e 54                	rex.WRX push rsp
    3b44:	5f                   	pop    rdi
    3b45:	54                   	push   rsp
    3b46:	5f                   	pop    rdi
    3b47:	54                   	push   rsp
    3b48:	59                   	pop    rcx
    3b49:	50                   	push   rax
    3b4a:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3b4e:	53                   	push   rbx
    3b4f:	59                   	pop    rcx
    3b50:	53                   	push   rbx
    3b51:	43                   	rex.XB
    3b52:	41                   	rex.B
    3b53:	4c                   	rex.WR
    3b54:	4c 5f                	rex.WR pop rdi
    3b56:	55                   	push   rbp
    3b57:	4c                   	rex.WR
    3b58:	4f                   	rex.WRXB
    3b59:	4e                   	rex.WRX
    3b5a:	47 5f                	rex.RXB pop r15
    3b5c:	54                   	push   rsp
    3b5d:	59                   	pop    rcx
    3b5e:	50                   	push   rax
    3b5f:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3b63:	4f 5f                	rex.WRXB pop r15
    3b65:	42                   	rex.X
    3b66:	41                   	rex.B
    3b67:	44 5f                	rex.R pop rdi
    3b69:	53                   	push   rbx
    3b6a:	45                   	rex.RB
    3b6b:	45                   	rex.RB
    3b6c:	4e 20 30             	rex.WRX and BYTE PTR [rax],r14b
    3b6f:	78 34                	js     3ba5 <__FRAME_END__+0x31a1>
    3b71:	30 30                	xor    BYTE PTR [rax],dh
    3b73:	30 00                	xor    BYTE PTR [rax],al
    3b75:	5f                   	pop    rdi
    3b76:	5f                   	pop    rdi
    3b77:	77 61                	ja     3bda <__FRAME_END__+0x31d6>
    3b79:	72 6e                	jb     3be9 <__FRAME_END__+0x31e5>
    3b7b:	61                   	(bad)  
    3b7c:	74 74                	je     3bf2 <__FRAME_END__+0x31ee>
    3b7e:	72 28                	jb     3ba8 <__FRAME_END__+0x31a4>
    3b80:	6d                   	ins    DWORD PTR es:[rdi],dx
    3b81:	73 67                	jae    3bea <__FRAME_END__+0x31e6>
    3b83:	29 20                	sub    DWORD PTR [rax],esp
    3b85:	5f                   	pop    rdi
    3b86:	5f                   	pop    rdi
    3b87:	61                   	(bad)  
    3b88:	74 74                	je     3bfe <__FRAME_END__+0x31fa>
    3b8a:	72 69                	jb     3bf5 <__FRAME_END__+0x31f1>
    3b8c:	62                   	(bad)  
    3b8d:	75 74                	jne    3c03 <__FRAME_END__+0x31ff>
    3b8f:	65 5f                	gs pop rdi
    3b91:	5f                   	pop    rdi
    3b92:	28 28                	sub    BYTE PTR [rax],ch
    3b94:	5f                   	pop    rdi
    3b95:	5f                   	pop    rdi
    3b96:	77 61                	ja     3bf9 <__FRAME_END__+0x31f5>
    3b98:	72 6e                	jb     3c08 <__FRAME_END__+0x3204>
    3b9a:	69 6e 67 5f 5f 20 28 	imul   ebp,DWORD PTR [rsi+0x67],0x28205f5f
    3ba1:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ba2:	73 67                	jae    3c0b <__FRAME_END__+0x3207>
    3ba4:	29 29                	sub    DWORD PTR [rcx],ebp
    3ba6:	29 00                	sub    DWORD PTR [rax],eax
    3ba8:	5f                   	pop    rdi
    3ba9:	5f                   	pop    rdi
    3baa:	49                   	rex.WB
    3bab:	4e 54                	rex.WRX push rsp
    3bad:	5f                   	pop    rdi
    3bae:	57                   	push   rdi
    3baf:	49                   	rex.WB
    3bb0:	44 54                	rex.R push rsp
    3bb2:	48 5f                	rex.W pop rdi
    3bb4:	5f                   	pop    rdi
    3bb5:	20 33                	and    BYTE PTR [rbx],dh
    3bb7:	32 00                	xor    al,BYTE PTR [rax]
    3bb9:	5f                   	pop    rdi
    3bba:	5f                   	pop    rdi
    3bbb:	4c                   	rex.WR
    3bbc:	44                   	rex.R
    3bbd:	42                   	rex.X
    3bbe:	4c 5f                	rex.WR pop rdi
    3bc0:	44                   	rex.R
    3bc1:	45                   	rex.RB
    3bc2:	43                   	rex.XB
    3bc3:	49                   	rex.WB
    3bc4:	4d                   	rex.WRB
    3bc5:	41                   	rex.B
    3bc6:	4c 5f                	rex.WR pop rdi
    3bc8:	44                   	rex.R
    3bc9:	49                   	rex.WB
    3bca:	47 5f                	rex.RXB pop r15
    3bcc:	5f                   	pop    rdi
    3bcd:	20 32                	and    BYTE PTR [rdx],dh
    3bcf:	31 00                	xor    DWORD PTR [rax],eax
    3bd1:	5f                   	pop    rdi
    3bd2:	5f                   	pop    rdi
    3bd3:	47                   	rex.RXB
    3bd4:	43                   	rex.XB
    3bd5:	43 5f                	rex.XB pop r15
    3bd7:	41 54                	push   r12
    3bd9:	4f                   	rex.WRXB
    3bda:	4d                   	rex.WRB
    3bdb:	49                   	rex.WB
    3bdc:	43 5f                	rex.XB pop r15
    3bde:	50                   	push   rax
    3bdf:	4f                   	rex.WRXB
    3be0:	49                   	rex.WB
    3be1:	4e 54                	rex.WRX push rsp
    3be3:	45 52                	rex.RB push r10
    3be5:	5f                   	pop    rdi
    3be6:	4c                   	rex.WR
    3be7:	4f                   	rex.WRXB
    3be8:	43                   	rex.XB
    3be9:	4b 5f                	rex.WXB pop r15
    3beb:	46 52                	rex.RX push rdx
    3bed:	45                   	rex.RB
    3bee:	45 20 32             	and    BYTE PTR [r10],r14b
    3bf1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3bf4:	73 74                	jae    3c6a <__FRAME_END__+0x3266>
    3bf6:	75 62                	jne    3c5a <__FRAME_END__+0x3256>
    3bf8:	5f                   	pop    rdi
    3bf9:	5f                   	pop    rdi
    3bfa:	5f                   	pop    rdi
    3bfb:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3bfe:	70 61                	jo     3c61 <__FRAME_END__+0x325d>
    3c00:	74 5f                	je     3c61 <__FRAME_END__+0x325d>
    3c02:	62                   	(bad)  
    3c03:	64 66 6c             	fs data16 ins BYTE PTR es:[rdi],dx
    3c06:	75 73                	jne    3c7b <__FRAME_END__+0x3277>
    3c08:	68 20 00 46 4f       	push   0x4f460020
    3c0d:	50                   	push   rax
    3c0e:	45                   	rex.RB
    3c0f:	4e 5f                	rex.WRX pop rdi
    3c11:	4d                   	rex.WRB
    3c12:	41 58                	pop    r8
    3c14:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
    3c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c18:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    3c1b:	5f                   	pop    rdi
    3c1c:	5f                   	pop    rdi
    3c1d:	53                   	push   rbx
    3c1e:	45                   	rex.RB
    3c1f:	47 5f                	rex.RXB pop r15
    3c21:	46 53                	rex.RX push rbx
    3c23:	20 31                	and    BYTE PTR [rcx],dh
    3c25:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3c28:	50                   	push   rax
    3c29:	28 61 72             	sub    BYTE PTR [rcx+0x72],ah
    3c2c:	67 73 29             	addr32 jae 3c58 <__FRAME_END__+0x3254>
    3c2f:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
    3c32:	67 73 00             	addr32 jae 3c35 <__FRAME_END__+0x3231>
    3c35:	5f                   	pop    rdi
    3c36:	5f                   	pop    rdi
    3c37:	54                   	push   rsp
    3c38:	49                   	rex.WB
    3c39:	4d                   	rex.WRB
    3c3a:	45 5f                	rex.RB pop r15
    3c3c:	54                   	push   rsp
    3c3d:	5f                   	pop    rdi
    3c3e:	54                   	push   rsp
    3c3f:	59                   	pop    rcx
    3c40:	50                   	push   rax
    3c41:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3c45:	53                   	push   rbx
    3c46:	59                   	pop    rcx
    3c47:	53                   	push   rbx
    3c48:	43                   	rex.XB
    3c49:	41                   	rex.B
    3c4a:	4c                   	rex.WR
    3c4b:	4c 5f                	rex.WR pop rdi
    3c4d:	53                   	push   rbx
    3c4e:	4c                   	rex.WR
    3c4f:	4f                   	rex.WRXB
    3c50:	4e                   	rex.WRX
    3c51:	47 5f                	rex.RXB pop r15
    3c53:	54                   	push   rsp
    3c54:	59                   	pop    rcx
    3c55:	50                   	push   rax
    3c56:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3c5a:	55                   	push   rbp
    3c5b:	49                   	rex.WB
    3c5c:	4e 54                	rex.WRX push rsp
    3c5e:	5f                   	pop    rdi
    3c5f:	46                   	rex.RX
    3c60:	41 53                	push   r11
    3c62:	54                   	push   rsp
    3c63:	31 36                	xor    DWORD PTR [rsi],esi
    3c65:	5f                   	pop    rdi
    3c66:	54                   	push   rsp
    3c67:	59                   	pop    rcx
    3c68:	50                   	push   rax
    3c69:	45 5f                	rex.RB pop r15
    3c6b:	5f                   	pop    rdi
    3c6c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3c70:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    3c74:	73 69                	jae    3cdf <__FRAME_END__+0x32db>
    3c76:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3c78:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    3c7d:	74 00                	je     3c7f <__FRAME_END__+0x327b>
    3c7f:	5f                   	pop    rdi
    3c80:	5f                   	pop    rdi
    3c81:	47                   	rex.RXB
    3c82:	4c                   	rex.WR
    3c83:	49                   	rex.WB
    3c84:	42                   	rex.X
    3c85:	43 5f                	rex.XB pop r15
    3c87:	5f                   	pop    rdi
    3c88:	20 32                	and    BYTE PTR [rdx],dh
    3c8a:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3c8d:	4f 5f                	rex.WRXB pop r15
    3c8f:	73 74                	jae    3d05 <__FRAME_END__+0x3301>
    3c91:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3c93:	75 74                	jne    3d09 <__FRAME_END__+0x3305>
    3c95:	20 28                	and    BYTE PTR [rax],ch
    3c97:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    3c9a:	4f 5f                	rex.WRXB pop r15
    3c9c:	46                   	rex.RX
    3c9d:	49                   	rex.WB
    3c9e:	4c                   	rex.WR
    3c9f:	45 2a 29             	sub    r13b,BYTE PTR [r9]
    3ca2:	28 26                	sub    BYTE PTR [rsi],ah
    3ca4:	5f                   	pop    rdi
    3ca5:	49                   	rex.WB
    3ca6:	4f 5f                	rex.WRXB pop r15
    3ca8:	32 5f 31             	xor    bl,BYTE PTR [rdi+0x31]
    3cab:	5f                   	pop    rdi
    3cac:	73 74                	jae    3d22 <__FRAME_END__+0x331e>
    3cae:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3cb0:	75 74                	jne    3d26 <__FRAME_END__+0x3322>
    3cb2:	5f                   	pop    rdi
    3cb3:	29 29                	sub    DWORD PTR [rcx],ebp
    3cb5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3cb8:	55                   	push   rbp
    3cb9:	53                   	push   rbx
    3cba:	45 52                	rex.RB push r10
    3cbc:	5f                   	pop    rdi
    3cbd:	4c                   	rex.WR
    3cbe:	41                   	rex.B
    3cbf:	42                   	rex.X
    3cc0:	45                   	rex.RB
    3cc1:	4c 5f                	rex.WR pop rdi
    3cc3:	50                   	push   rax
    3cc4:	52                   	push   rdx
    3cc5:	45                   	rex.RB
    3cc6:	46                   	rex.RX
    3cc7:	49 58                	rex.WB pop r8
    3cc9:	5f                   	pop    rdi
    3cca:	5f                   	pop    rdi
    3ccb:	20 00                	and    BYTE PTR [rax],al
    3ccd:	5f                   	pop    rdi
    3cce:	49                   	rex.WB
    3ccf:	4f 5f                	rex.WRXB pop r15
    3cd1:	70 69                	jo     3d3c <__FRAME_END__+0x3338>
    3cd3:	64 5f                	fs pop rdi
    3cd5:	74 20                	je     3cf7 <__FRAME_END__+0x32f3>
    3cd7:	5f                   	pop    rdi
    3cd8:	5f                   	pop    rdi
    3cd9:	70 69                	jo     3d44 <__FRAME_END__+0x3340>
    3cdb:	64 5f                	fs pop rdi
    3cdd:	74 00                	je     3cdf <__FRAME_END__+0x32db>
    3cdf:	5f                   	pop    rdi
    3ce0:	5f                   	pop    rdi
    3ce1:	67 6c                	ins    BYTE PTR es:[edi],dx
    3ce3:	69 62 63 5f 6d 61 63 	imul   esp,DWORD PTR [rdx+0x63],0x63616d5f
    3cea:	72 6f                	jb     3d5b <__FRAME_END__+0x3357>
    3cec:	5f                   	pop    rdi
    3ced:	77 61                	ja     3d50 <__FRAME_END__+0x334c>
    3cef:	72 6e                	jb     3d5f <__FRAME_END__+0x335b>
    3cf1:	69 6e 67 31 28 6d 65 	imul   ebp,DWORD PTR [rsi+0x67],0x656d2831
    3cf8:	73 73                	jae    3d6d <__FRAME_END__+0x3369>
    3cfa:	61                   	(bad)  
    3cfb:	67 65 29 20          	sub    DWORD PTR gs:[eax],esp
    3cff:	5f                   	pop    rdi
    3d00:	50                   	push   rax
    3d01:	72 61                	jb     3d64 <__FRAME_END__+0x3360>
    3d03:	67 6d                	ins    DWORD PTR es:[edi],dx
    3d05:	61                   	(bad)  
    3d06:	20 28                	and    BYTE PTR [rax],ch
    3d08:	23 6d 65             	and    ebp,DWORD PTR [rbp+0x65]
    3d0b:	73 73                	jae    3d80 <__FRAME_END__+0x337c>
    3d0d:	61                   	(bad)  
    3d0e:	67 65 29 00          	sub    DWORD PTR gs:[eax],eax
    3d12:	5f                   	pop    rdi
    3d13:	5f                   	pop    rdi
    3d14:	47                   	rex.RXB
    3d15:	43                   	rex.XB
    3d16:	43 5f                	rex.XB pop r15
    3d18:	41 54                	push   r12
    3d1a:	4f                   	rex.WRXB
    3d1b:	4d                   	rex.WRB
    3d1c:	49                   	rex.WB
    3d1d:	43 5f                	rex.XB pop r15
    3d1f:	43                   	rex.XB
    3d20:	48                   	rex.W
    3d21:	41 52                	push   r10
    3d23:	33 32                	xor    esi,DWORD PTR [rdx]
    3d25:	5f                   	pop    rdi
    3d26:	54                   	push   rsp
    3d27:	5f                   	pop    rdi
    3d28:	4c                   	rex.WR
    3d29:	4f                   	rex.WRXB
    3d2a:	43                   	rex.XB
    3d2b:	4b 5f                	rex.WXB pop r15
    3d2d:	46 52                	rex.RX push rdx
    3d2f:	45                   	rex.RB
    3d30:	45 20 32             	and    BYTE PTR [r10],r14b
    3d33:	00 5f 6f             	add    BYTE PTR [rdi+0x6f],bl
    3d36:	6c                   	ins    BYTE PTR es:[rdi],dx
    3d37:	64 5f                	fs pop rdi
    3d39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d3a:	66 66 73 65          	data16 data16 jae 3da3 <__FRAME_END__+0x339f>
    3d3e:	74 00                	je     3d40 <__FRAME_END__+0x333c>
    3d40:	5f                   	pop    rdi
    3d41:	49                   	rex.WB
    3d42:	4f 5f                	rex.WRXB pop r15
    3d44:	46                   	rex.RX
    3d45:	49                   	rex.WB
    3d46:	4c                   	rex.WR
    3d47:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    3d4b:	4f 5f                	rex.WRXB pop r15
    3d4d:	55                   	push   rbp
    3d4e:	4e                   	rex.WRX
    3d4f:	42 55                	rex.X push rbp
    3d51:	46                   	rex.RX
    3d52:	46                   	rex.RX
    3d53:	45 52                	rex.RB push r10
    3d55:	45                   	rex.RB
    3d56:	44 20 32             	and    BYTE PTR [rdx],r14b
    3d59:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d5c:	43                   	rex.XB
    3d5d:	48                   	rex.W
    3d5e:	41 52                	push   r10
    3d60:	5f                   	pop    rdi
    3d61:	42                   	rex.X
    3d62:	49 54                	rex.WB push r12
    3d64:	5f                   	pop    rdi
    3d65:	5f                   	pop    rdi
    3d66:	20 38                	and    BYTE PTR [rax],bh
    3d68:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3d6b:	43                   	rex.XB
    3d6c:	4c                   	rex.WR
    3d6d:	4f                   	rex.WRXB
    3d6e:	43                   	rex.XB
    3d6f:	4b 5f                	rex.WXB pop r15
    3d71:	54                   	push   rsp
    3d72:	5f                   	pop    rdi
    3d73:	54                   	push   rsp
    3d74:	59                   	pop    rcx
    3d75:	50                   	push   rax
    3d76:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    3d7a:	53                   	push   rbx
    3d7b:	59                   	pop    rcx
    3d7c:	53                   	push   rbx
    3d7d:	43                   	rex.XB
    3d7e:	41                   	rex.B
    3d7f:	4c                   	rex.WR
    3d80:	4c 5f                	rex.WR pop rdi
    3d82:	53                   	push   rbx
    3d83:	4c                   	rex.WR
    3d84:	4f                   	rex.WRXB
    3d85:	4e                   	rex.WRX
    3d86:	47 5f                	rex.RXB pop r15
    3d88:	54                   	push   rsp
    3d89:	59                   	pop    rcx
    3d8a:	50                   	push   rax
    3d8b:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    3d8f:	41 54                	push   r12
    3d91:	4f                   	rex.WRXB
    3d92:	4d                   	rex.WRB
    3d93:	49                   	rex.WB
    3d94:	43 5f                	rex.XB pop r15
    3d96:	52                   	push   rdx
    3d97:	45                   	rex.RB
    3d98:	4c                   	rex.WR
    3d99:	41 58                	pop    r8
    3d9b:	45                   	rex.RB
    3d9c:	44 20 30             	and    BYTE PTR [rax],r14b
    3d9f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3da2:	4f 5f                	rex.WRXB pop r15
    3da4:	73 73                	jae    3e19 <__FRAME_END__+0x3415>
    3da6:	69 7a 65 5f 74 20 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f20745f
    3dad:	5f                   	pop    rdi
    3dae:	73 73                	jae    3e23 <__FRAME_END__+0x341f>
    3db0:	69 7a 65 5f 74 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f00745f
    3db7:	5f                   	pop    rdi
    3db8:	53                   	push   rbx
    3db9:	54                   	push   rsp
    3dba:	44                   	rex.R
    3dbb:	43 5f                	rex.XB pop r15
    3dbd:	48                   	rex.W
    3dbe:	4f 53                	rex.WRXB push r11
    3dc0:	54                   	push   rsp
    3dc1:	45                   	rex.RB
    3dc2:	44 5f                	rex.R pop rdi
    3dc4:	5f                   	pop    rdi
    3dc5:	20 31                	and    BYTE PTR [rcx],dh
    3dc7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3dca:	53                   	push   rbx
    3dcb:	49 5a                	rex.WB pop r10
    3dcd:	45 5f                	rex.RB pop r15
    3dcf:	57                   	push   rdi
    3dd0:	49                   	rex.WB
    3dd1:	44 54                	rex.R push rsp
    3dd3:	48 5f                	rex.W pop rdi
    3dd5:	5f                   	pop    rdi
    3dd6:	20 36                	and    BYTE PTR [rsi],dh
    3dd8:	34 00                	xor    al,0x0
    3dda:	5f                   	pop    rdi
    3ddb:	5f                   	pop    rdi
    3ddc:	52                   	push   rdx
    3ddd:	45                   	rex.RB
    3dde:	44                   	rex.R
    3ddf:	49 52                	rex.WB push r10
    3de1:	45                   	rex.RB
    3de2:	43 54                	rex.XB push r12
    3de4:	5f                   	pop    rdi
    3de5:	4c                   	rex.WR
    3de6:	44                   	rex.R
    3de7:	42                   	rex.X
    3de8:	4c 28 6e 61          	rex.WR sub BYTE PTR [rsi+0x61],r13b
    3dec:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ded:	65 2c 70             	gs sub al,0x70
    3df0:	72 6f                	jb     3e61 <__FRAME_END__+0x345d>
    3df2:	74 6f                	je     3e63 <__FRAME_END__+0x345f>
    3df4:	2c 61                	sub    al,0x61
    3df6:	6c                   	ins    BYTE PTR es:[rdi],dx
    3df7:	69 61 73 29 20 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f2029
    3dfe:	52                   	push   rdx
    3dff:	45                   	rex.RB
    3e00:	44                   	rex.R
    3e01:	49 52                	rex.WB push r10
    3e03:	45                   	rex.RB
    3e04:	43 54                	rex.XB push r12
    3e06:	20 28                	and    BYTE PTR [rax],ch
    3e08:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e09:	61                   	(bad)  
    3e0a:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e0b:	65 2c 20             	gs sub al,0x20
    3e0e:	70 72                	jo     3e82 <__FRAME_END__+0x347e>
    3e10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e11:	74 6f                	je     3e82 <__FRAME_END__+0x347e>
    3e13:	2c 20                	sub    al,0x20
    3e15:	61                   	(bad)  
    3e16:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e17:	69 61 73 29 00 5f 5f 	imul   esp,DWORD PTR [rcx+0x73],0x5f5f0029
    3e1e:	61                   	(bad)  
    3e1f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e20:	77 61                	ja     3e83 <__FRAME_END__+0x347f>
    3e22:	79 73                	jns    3e97 <__FRAME_END__+0x3493>
    3e24:	5f                   	pop    rdi
    3e25:	69 6e 6c 69 6e 65 00 	imul   ebp,DWORD PTR [rsi+0x6c],0x656e69
    3e2c:	5f                   	pop    rdi
    3e2d:	5f                   	pop    rdi
    3e2e:	68 61 73 5f 69       	push   0x695f7361
    3e33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e34:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e38:	65 28 53 54          	sub    BYTE PTR gs:[rbx+0x54],dl
    3e3c:	52                   	push   rdx
    3e3d:	29 20                	sub    DWORD PTR [rax],esp
    3e3f:	5f                   	pop    rdi
    3e40:	5f                   	pop    rdi
    3e41:	68 61 73 5f 69       	push   0x695f7361
    3e46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e47:	63 6c 75 64          	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
    3e4b:	65 5f                	gs pop rdi
    3e4d:	5f                   	pop    rdi
    3e4e:	28 53 54             	sub    BYTE PTR [rbx+0x54],dl
    3e51:	52                   	push   rdx
    3e52:	29 00                	sub    DWORD PTR [rax],eax
    3e54:	5f                   	pop    rdi
    3e55:	5f                   	pop    rdi
    3e56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e57:	65 65 64 5f          	gs gs fs pop rdi
    3e5b:	5f                   	pop    rdi
    3e5c:	5f                   	pop    rdi
    3e5d:	76 61                	jbe    3ec0 <__FRAME_END__+0x34bc>
    3e5f:	5f                   	pop    rdi
    3e60:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e61:	69 73 74 20 00 5f 5f 	imul   esi,DWORD PTR [rbx+0x74],0x5f5f0020
    3e68:	41 53                	push   r11
    3e6a:	4d                   	rex.WRB
    3e6b:	4e                   	rex.WRX
    3e6c:	41                   	rex.B
    3e6d:	4d                   	rex.WRB
    3e6e:	45 32 28             	xor    r13b,BYTE PTR [r8]
    3e71:	70 72                	jo     3ee5 <__FRAME_END__+0x34e1>
    3e73:	65 66 69 78 2c 63 6e 	imul   di,WORD PTR gs:[rax+0x2c],0x6e63
    3e7a:	61                   	(bad)  
    3e7b:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e7c:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    3e7f:	5f                   	pop    rdi
    3e80:	5f                   	pop    rdi
    3e81:	53                   	push   rbx
    3e82:	54                   	push   rsp
    3e83:	52                   	push   rdx
    3e84:	49                   	rex.WB
    3e85:	4e                   	rex.WRX
    3e86:	47 20 28             	rex.RXB and BYTE PTR [r8],r13b
    3e89:	70 72                	jo     3efd <__FRAME_END__+0x34f9>
    3e8b:	65 66 69 78 29 20 63 	imul   di,WORD PTR gs:[rax+0x29],0x6320
    3e92:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e93:	61                   	(bad)  
    3e94:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e95:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
    3e99:	4f 5f                	rex.WRXB pop r15
    3e9b:	53                   	push   rbx
    3e9c:	43                   	rex.XB
    3e9d:	49                   	rex.WB
    3e9e:	45                   	rex.RB
    3e9f:	4e 54                	rex.WRX push rsp
    3ea1:	49                   	rex.WB
    3ea2:	46                   	rex.RX
    3ea3:	49                   	rex.WB
    3ea4:	43 20 30             	rex.XB and BYTE PTR [r8],sil
    3ea7:	34 30                	xor    al,0x30
    3ea9:	30 30                	xor    BYTE PTR [rax],dh
    3eab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3eae:	4f 5f                	rex.WRXB pop r15
    3eb0:	70 65                	jo     3f17 <__FRAME_END__+0x3513>
    3eb2:	65 6b 63 5f 75       	imul   esp,DWORD PTR gs:[rbx+0x5f],0x75
    3eb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3eb8:	6c                   	ins    BYTE PTR es:[rdi],dx
    3eb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3eba:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3ebd:	64 28 5f 66          	sub    BYTE PTR fs:[rdi+0x66],bl
    3ec1:	70 29                	jo     3eec <__FRAME_END__+0x34e8>
    3ec3:	20 28                	and    BYTE PTR [rax],ch
    3ec5:	5f                   	pop    rdi
    3ec6:	49                   	rex.WB
    3ec7:	4f 5f                	rex.WRXB pop r15
    3ec9:	42                   	rex.X
    3eca:	45 20 28             	and    BYTE PTR [r8],r13b
    3ecd:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3ed0:	70 29                	jo     3efb <__FRAME_END__+0x34f7>
    3ed2:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3ed7:	5f                   	pop    rdi
    3ed8:	72 65                	jb     3f3f <__FRAME_END__+0x353b>
    3eda:	61                   	(bad)  
    3edb:	64 5f                	fs pop rdi
    3edd:	70 74                	jo     3f53 <__FRAME_END__+0x354f>
    3edf:	72 20                	jb     3f01 <__FRAME_END__+0x34fd>
    3ee1:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    3ee7:	70 29                	jo     3f12 <__FRAME_END__+0x350e>
    3ee9:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3eee:	5f                   	pop    rdi
    3eef:	72 65                	jb     3f56 <__FRAME_END__+0x3552>
    3ef1:	61                   	(bad)  
    3ef2:	64 5f                	fs pop rdi
    3ef4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3ef6:	64 2c 20             	fs sub al,0x20
    3ef9:	30 29                	xor    BYTE PTR [rcx],ch
    3efb:	20 26                	and    BYTE PTR [rsi],ah
    3efd:	26 20 5f 5f          	and    BYTE PTR es:[rdi+0x5f],bl
    3f01:	75 6e                	jne    3f71 <__FRAME_END__+0x356d>
    3f03:	64 65 72 66          	fs gs jb 3f6d <__FRAME_END__+0x3569>
    3f07:	6c                   	ins    BYTE PTR es:[rdi],dx
    3f08:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f09:	77 20                	ja     3f2b <__FRAME_END__+0x3527>
    3f0b:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    3f0e:	70 29                	jo     3f39 <__FRAME_END__+0x3535>
    3f10:	20 3d 3d 20 45 4f    	and    BYTE PTR [rip+0x4f45203d],bh        # 4f455f53 <_end+0x4f254f3b>
    3f16:	46 20 3f             	rex.RX and BYTE PTR [rdi],r15b
    3f19:	20 45 4f             	and    BYTE PTR [rbp+0x4f],al
    3f1c:	46 20 3a             	rex.RX and BYTE PTR [rdx],r15b
    3f1f:	20 2a                	and    BYTE PTR [rdx],ch
    3f21:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    3f24:	73 69                	jae    3f8f <__FRAME_END__+0x358b>
    3f26:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3f28:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    3f2d:	61                   	(bad)  
    3f2e:	72 20                	jb     3f50 <__FRAME_END__+0x354c>
    3f30:	2a 29                	sub    ch,BYTE PTR [rcx]
    3f32:	20 28                	and    BYTE PTR [rax],ch
    3f34:	5f                   	pop    rdi
    3f35:	66 70 29             	data16 jo 3f61 <__FRAME_END__+0x355d>
    3f38:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    3f3d:	5f                   	pop    rdi
    3f3e:	72 65                	jb     3fa5 <__FRAME_END__+0x35a1>
    3f40:	61                   	(bad)  
    3f41:	64 5f                	fs pop rdi
    3f43:	70 74                	jo     3fb9 <__FRAME_END__+0x35b5>
    3f45:	72 29                	jb     3f70 <__FRAME_END__+0x356c>
    3f47:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3f4a:	4c                   	rex.WR
    3f4b:	4f                   	rex.WRXB
    3f4c:	4e                   	rex.WRX
    3f4d:	47 5f                	rex.RXB pop r15
    3f4f:	57                   	push   rdi
    3f50:	49                   	rex.WB
    3f51:	44 54                	rex.R push rsp
    3f53:	48 5f                	rex.W pop rdi
    3f55:	5f                   	pop    rdi
    3f56:	20 36                	and    BYTE PTR [rsi],dh
    3f58:	34 00                	xor    al,0x0
    3f5a:	5f                   	pop    rdi
    3f5b:	5f                   	pop    rdi
    3f5c:	55                   	push   rbp
    3f5d:	49                   	rex.WB
    3f5e:	4e 54                	rex.WRX push rsp
    3f60:	36 34 5f             	ss xor al,0x5f
    3f63:	4d                   	rex.WRB
    3f64:	41 58                	pop    r8
    3f66:	5f                   	pop    rdi
    3f67:	5f                   	pop    rdi
    3f68:	20 30                	and    BYTE PTR [rax],dh
    3f6a:	78 66                	js     3fd2 <__FRAME_END__+0x35ce>
    3f6c:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    3f73:	66 66 66 66 66 66 66 
    3f7a:	66 55                	push   bp
    3f7c:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    3f80:	53                   	push   rbx
    3f81:	51                   	push   rcx
    3f82:	55                   	push   rbp
    3f83:	41                   	rex.B
    3f84:	44 5f                	rex.R pop rdi
    3f86:	54                   	push   rsp
    3f87:	59                   	pop    rcx
    3f88:	50                   	push   rax
    3f89:	45 20 6c 6f 6e       	and    BYTE PTR [r15+rbp*2+0x6e],r13b
    3f8e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3f92:	74 00                	je     3f94 <__FRAME_END__+0x3590>
    3f94:	5f                   	pop    rdi
    3f95:	5f                   	pop    rdi
    3f96:	55                   	push   rbp
    3f97:	53                   	push   rbx
    3f98:	45 5f                	rex.RB pop r15
    3f9a:	58                   	pop    rax
    3f9b:	4f 50                	rex.WRXB push r8
    3f9d:	45                   	rex.RB
    3f9e:	4e 32 4b 58          	rex.WRX xor r9b,BYTE PTR [rbx+0x58]
    3fa2:	53                   	push   rbx
    3fa3:	49 00 5f 5f          	rex.WB add BYTE PTR [r15+0x5f],bl
    3fa7:	61                   	(bad)  
    3fa8:	74 74                	je     401e <__FRAME_END__+0x361a>
    3faa:	72 69                	jb     4015 <__FRAME_END__+0x3611>
    3fac:	62                   	(bad)  
    3fad:	75 74                	jne    4023 <__FRAME_END__+0x361f>
    3faf:	65 5f                	gs pop rdi
    3fb1:	61                   	(bad)  
    3fb2:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fb4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fb5:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    3fb8:	69 7a 65 5f 5f 28 70 	imul   edi,DWORD PTR [rdx+0x65],0x70285f5f
    3fbf:	61                   	(bad)  
    3fc0:	72 61                	jb     4023 <__FRAME_END__+0x361f>
    3fc2:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fc3:	73 29                	jae    3fee <__FRAME_END__+0x35ea>
    3fc5:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3fc8:	61                   	(bad)  
    3fc9:	74 74                	je     403f <__FRAME_END__+0x363b>
    3fcb:	72 69                	jb     4036 <__FRAME_END__+0x3632>
    3fcd:	62                   	(bad)  
    3fce:	75 74                	jne    4044 <__FRAME_END__+0x3640>
    3fd0:	65 5f                	gs pop rdi
    3fd2:	5f                   	pop    rdi
    3fd3:	20 28                	and    BYTE PTR [rax],ch
    3fd5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    3fd8:	61                   	(bad)  
    3fd9:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fda:	6c                   	ins    BYTE PTR es:[rdi],dx
    3fdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fdc:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    3fdf:	69 7a 65 5f 5f 20 70 	imul   edi,DWORD PTR [rdx+0x65],0x70205f5f
    3fe6:	61                   	(bad)  
    3fe7:	72 61                	jb     404a <__FRAME_END__+0x3646>
    3fe9:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fea:	73 29                	jae    4015 <__FRAME_END__+0x3611>
    3fec:	29 00                	sub    DWORD PTR [rax],eax
    3fee:	5f                   	pop    rdi
    3fef:	49                   	rex.WB
    3ff0:	4f 5f                	rex.WRXB pop r15
    3ff2:	77 69                	ja     405d <__FRAME_END__+0x3659>
    3ff4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ff5:	74 5f                	je     4056 <__FRAME_END__+0x3652>
    3ff7:	74 20                	je     4019 <__FRAME_END__+0x3615>
    3ff9:	77 69                	ja     4064 <__FRAME_END__+0x3660>
    3ffb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ffc:	74 5f                	je     405d <__FRAME_END__+0x3659>
    3ffe:	74 00                	je     4000 <__FRAME_END__+0x35fc>
    4000:	5f                   	pop    rdi
    4001:	5f                   	pop    rdi
    4002:	6b 38 20             	imul   edi,DWORD PTR [rax],0x20
    4005:	31 00                	xor    DWORD PTR [rax],eax
    4007:	5f                   	pop    rdi
    4008:	5f                   	pop    rdi
    4009:	43                   	rex.XB
    400a:	48                   	rex.W
    400b:	41 52                	push   r10
    400d:	31 36                	xor    DWORD PTR [rsi],esi
    400f:	5f                   	pop    rdi
    4010:	54                   	push   rsp
    4011:	59                   	pop    rcx
    4012:	50                   	push   rax
    4013:	45 5f                	rex.RB pop r15
    4015:	5f                   	pop    rdi
    4016:	20 73 68             	and    BYTE PTR [rbx+0x68],dh
    4019:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    401a:	72 74                	jb     4090 <__FRAME_END__+0x368c>
    401c:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    401f:	73 69                	jae    408a <__FRAME_END__+0x3686>
    4021:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4023:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4028:	74 00                	je     402a <__FRAME_END__+0x3626>
    402a:	5f                   	pop    rdi
    402b:	5f                   	pop    rdi
    402c:	47                   	rex.RXB
    402d:	43                   	rex.XB
    402e:	43 5f                	rex.XB pop r15
    4030:	41 54                	push   r12
    4032:	4f                   	rex.WRXB
    4033:	4d                   	rex.WRB
    4034:	49                   	rex.WB
    4035:	43 5f                	rex.XB pop r15
    4037:	4c                   	rex.WR
    4038:	4c                   	rex.WR
    4039:	4f                   	rex.WRXB
    403a:	4e                   	rex.WRX
    403b:	47 5f                	rex.RXB pop r15
    403d:	4c                   	rex.WR
    403e:	4f                   	rex.WRXB
    403f:	43                   	rex.XB
    4040:	4b 5f                	rex.WXB pop r15
    4042:	46 52                	rex.RX push rdx
    4044:	45                   	rex.RB
    4045:	45 20 32             	and    BYTE PTR [r10],r14b
    4048:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    404b:	44                   	rex.R
    404c:	45                   	rex.RB
    404d:	43                   	rex.XB
    404e:	36 34 5f             	ss xor al,0x5f
    4051:	4d                   	rex.WRB
    4052:	49                   	rex.WB
    4053:	4e 5f                	rex.WRX pop rdi
    4055:	45 58                	rex.RB pop r8
    4057:	50                   	push   rax
    4058:	5f                   	pop    rdi
    4059:	5f                   	pop    rdi
    405a:	20 28                	and    BYTE PTR [rax],ch
    405c:	2d 33 38 32 29       	sub    eax,0x29323833
    4061:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4064:	72 65                	jb     40cb <__FRAME_END__+0x36c7>
    4066:	73 74                	jae    40dc <__FRAME_END__+0x36d8>
    4068:	72 69                	jb     40d3 <__FRAME_END__+0x36cf>
    406a:	63 74 5f 61          	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
    406e:	72 72                	jb     40e2 <__FRAME_END__+0x36de>
    4070:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    4073:	72 65                	jb     40da <__FRAME_END__+0x36d6>
    4075:	73 74                	jae    40eb <__FRAME_END__+0x36e7>
    4077:	72 69                	jb     40e2 <__FRAME_END__+0x36de>
    4079:	63 74 00 5f          	movsxd esi,DWORD PTR [rax+rax*1+0x5f]
    407d:	5f                   	pop    rdi
    407e:	41 54                	push   r12
    4080:	4f                   	rex.WRXB
    4081:	4d                   	rex.WRB
    4082:	49                   	rex.WB
    4083:	43 5f                	rex.XB pop r15
    4085:	41                   	rex.B
    4086:	43 51                	rex.XB push r9
    4088:	5f                   	pop    rdi
    4089:	52                   	push   rdx
    408a:	45                   	rex.RB
    408b:	4c 20 34 00          	rex.WR and BYTE PTR [rax+rax*1],r14b
    408f:	5f                   	pop    rdi
    4090:	49                   	rex.WB
    4091:	4f 5f                	rex.WRXB pop r15
    4093:	66 70 6f             	data16 jo 4105 <__FRAME_END__+0x3701>
    4096:	73 5f                	jae    40f7 <__FRAME_END__+0x36f3>
    4098:	74 20                	je     40ba <__FRAME_END__+0x36b6>
    409a:	5f                   	pop    rdi
    409b:	47 5f                	rex.RXB pop r15
    409d:	66 70 6f             	data16 jo 410f <__FRAME_END__+0x370b>
    40a0:	73 5f                	jae    4101 <__FRAME_END__+0x36fd>
    40a2:	74 00                	je     40a4 <__FRAME_END__+0x36a0>
    40a4:	5f                   	pop    rdi
    40a5:	5f                   	pop    rdi
    40a6:	61                   	(bad)  
    40a7:	74 74                	je     411d <__FRAME_END__+0x3719>
    40a9:	72 69                	jb     4114 <__FRAME_END__+0x3710>
    40ab:	62                   	(bad)  
    40ac:	75 74                	jne    4122 <__FRAME_END__+0x371e>
    40ae:	65 5f                	gs pop rdi
    40b0:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    40b2:	72 6d                	jb     4121 <__FRAME_END__+0x371d>
    40b4:	61                   	(bad)  
    40b5:	74 5f                	je     4116 <__FRAME_END__+0x3712>
    40b7:	73 74                	jae    412d <__FRAME_END__+0x3729>
    40b9:	72 66                	jb     4121 <__FRAME_END__+0x371d>
    40bb:	6d                   	ins    DWORD PTR es:[rdi],dx
    40bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40be:	5f                   	pop    rdi
    40bf:	5f                   	pop    rdi
    40c0:	28 61 2c             	sub    BYTE PTR [rcx+0x2c],ah
    40c3:	62                   	(bad)  
    40c4:	29 20                	sub    DWORD PTR [rax],esp
    40c6:	5f                   	pop    rdi
    40c7:	5f                   	pop    rdi
    40c8:	61                   	(bad)  
    40c9:	74 74                	je     413f <__FRAME_END__+0x373b>
    40cb:	72 69                	jb     4136 <__FRAME_END__+0x3732>
    40cd:	62                   	(bad)  
    40ce:	75 74                	jne    4144 <__FRAME_END__+0x3740>
    40d0:	65 5f                	gs pop rdi
    40d2:	5f                   	pop    rdi
    40d3:	20 28                	and    BYTE PTR [rax],ch
    40d5:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    40d8:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    40da:	72 6d                	jb     4149 <__FRAME_END__+0x3745>
    40dc:	61                   	(bad)  
    40dd:	74 5f                	je     413e <__FRAME_END__+0x373a>
    40df:	5f                   	pop    rdi
    40e0:	20 28                	and    BYTE PTR [rax],ch
    40e2:	5f                   	pop    rdi
    40e3:	5f                   	pop    rdi
    40e4:	73 74                	jae    415a <__FRAME_END__+0x3756>
    40e6:	72 66                	jb     414e <__FRAME_END__+0x374a>
    40e8:	6d                   	ins    DWORD PTR es:[rdi],dx
    40e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40eb:	5f                   	pop    rdi
    40ec:	5f                   	pop    rdi
    40ed:	2c 20                	sub    al,0x20
    40ef:	61                   	(bad)  
    40f0:	2c 20                	sub    al,0x20
    40f2:	62                   	(bad)  
    40f3:	29 29                	sub    DWORD PTR [rcx],ebp
    40f5:	29 00                	sub    DWORD PTR [rax],eax
    40f7:	5f                   	pop    rdi
    40f8:	5f                   	pop    rdi
    40f9:	44                   	rex.R
    40fa:	45                   	rex.RB
    40fb:	43 33 32             	rex.XB xor esi,DWORD PTR [r10]
    40fe:	5f                   	pop    rdi
    40ff:	4d                   	rex.WRB
    4100:	49                   	rex.WB
    4101:	4e 5f                	rex.WRX pop rdi
    4103:	45 58                	rex.RB pop r8
    4105:	50                   	push   rax
    4106:	5f                   	pop    rdi
    4107:	5f                   	pop    rdi
    4108:	20 28                	and    BYTE PTR [rax],ch
    410a:	2d 39 34 29 00       	sub    eax,0x293439
    410f:	5f                   	pop    rdi
    4110:	49                   	rex.WB
    4111:	4f 5f                	rex.WRXB pop r15
    4113:	46                   	rex.RX
    4114:	49 58                	rex.WB pop r8
    4116:	45                   	rex.RB
    4117:	44 20 30             	and    BYTE PTR [rax],r14b
    411a:	31 30                	xor    DWORD PTR [rax],esi
    411c:	30 30                	xor    BYTE PTR [rax],dh
    411e:	30 00                	xor    BYTE PTR [rax],al
    4120:	5f                   	pop    rdi
    4121:	5f                   	pop    rdi
    4122:	49                   	rex.WB
    4123:	4e 54                	rex.WRX push rsp
    4125:	36 34 5f             	ss xor al,0x5f
    4128:	54                   	push   rsp
    4129:	59                   	pop    rcx
    412a:	50                   	push   rax
    412b:	45 5f                	rex.RB pop r15
    412d:	5f                   	pop    rdi
    412e:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4132:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4136:	74 00                	je     4138 <__FRAME_END__+0x3734>
    4138:	5f                   	pop    rdi
    4139:	5f                   	pop    rdi
    413a:	46                   	rex.RX
    413b:	4c 54                	rex.WR push rsp
    413d:	5f                   	pop    rdi
    413e:	4d                   	rex.WRB
    413f:	49                   	rex.WB
    4140:	4e 5f                	rex.WRX pop rdi
    4142:	5f                   	pop    rdi
    4143:	20 31                	and    BYTE PTR [rcx],dh
    4145:	2e 31 37             	xor    DWORD PTR cs:[rdi],esi
    4148:	35 34 39 34 33       	xor    eax,0x33343934
    414d:	35 30 38 32 32       	xor    eax,0x32323830
    4152:	32 38                	xor    bh,BYTE PTR [rax]
    4154:	37                   	(bad)  
    4155:	35 30 37 39 36       	xor    eax,0x36393730
    415a:	38 37                	cmp    BYTE PTR [rdi],dh
    415c:	33 36                	xor    esi,DWORD PTR [rsi]
    415e:	35 33 37 32 32       	xor    eax,0x32323733
    4163:	32 32                	xor    dh,BYTE PTR [rdx]
    4165:	34 35                	xor    al,0x35
    4167:	36 38 65 2d          	cmp    BYTE PTR ss:[rbp+0x2d],ah
    416b:	33 38                	xor    edi,DWORD PTR [rax]
    416d:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    4171:	55                   	push   rbp
    4172:	36 34 5f             	ss xor al,0x5f
    4175:	54                   	push   rsp
    4176:	59                   	pop    rcx
    4177:	50                   	push   rax
    4178:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    417c:	73 69                	jae    41e7 <__FRAME_END__+0x37e3>
    417e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4180:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    4186:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    418a:	74 00                	je     418c <__FRAME_END__+0x3788>
    418c:	5f                   	pop    rdi
    418d:	73 62                	jae    41f1 <__FRAME_END__+0x37ed>
    418f:	75 66                	jne    41f7 <__FRAME_END__+0x37f3>
    4191:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4194:	4f 5f                	rex.WRXB pop r15
    4196:	76 61                	jbe    41f9 <__FRAME_END__+0x37f5>
    4198:	5f                   	pop    rdi
    4199:	6c                   	ins    BYTE PTR es:[rdi],dx
    419a:	69 73 74 00 73 74 64 	imul   esi,DWORD PTR [rbx+0x74],0x64747300
    41a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    41a2:	75 74                	jne    4218 <__FRAME_END__+0x3814>
    41a4:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    41a7:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    41a9:	75 74                	jne    421f <__FRAME_END__+0x381b>
    41ab:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41ae:	55                   	push   rbp
    41af:	53                   	push   rbx
    41b0:	45 5f                	rex.RB pop r15
    41b2:	47                   	rex.RXB
    41b3:	4e 55                	rex.WRX push rbp
    41b5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41b8:	54                   	push   rsp
    41b9:	49                   	rex.WB
    41ba:	4d                   	rex.WRB
    41bb:	45 52                	rex.RB push r10
    41bd:	5f                   	pop    rdi
    41be:	54                   	push   rsp
    41bf:	5f                   	pop    rdi
    41c0:	54                   	push   rsp
    41c1:	59                   	pop    rcx
    41c2:	50                   	push   rax
    41c3:	45 20 76 6f          	and    BYTE PTR [r14+0x6f],r14b
    41c7:	69 64 20 2a 00 5f 49 	imul   esp,DWORD PTR [rax+riz*1+0x2a],0x4f495f00
    41ce:	4f 
    41cf:	5f                   	pop    rdi
    41d0:	77 72                	ja     4244 <__FRAME_END__+0x3840>
    41d2:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
    41d9:	00 
    41da:	5f                   	pop    rdi
    41db:	5f                   	pop    rdi
    41dc:	46 58                	rex.RX pop rax
    41de:	53                   	push   rbx
    41df:	52                   	push   rdx
    41e0:	5f                   	pop    rdi
    41e1:	5f                   	pop    rdi
    41e2:	20 31                	and    BYTE PTR [rcx],dh
    41e4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    41e7:	4c                   	rex.WR
    41e8:	45                   	rex.RB
    41e9:	41                   	rex.B
    41ea:	46 5f                	rex.RX pop rdi
    41ec:	41 54                	push   r12
    41ee:	54                   	push   rsp
    41ef:	52                   	push   rdx
    41f0:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    41f3:	61                   	(bad)  
    41f4:	74 74                	je     426a <__FRAME_END__+0x3866>
    41f6:	72 69                	jb     4261 <__FRAME_END__+0x385d>
    41f8:	62                   	(bad)  
    41f9:	75 74                	jne    426f <__FRAME_END__+0x386b>
    41fb:	65 5f                	gs pop rdi
    41fd:	5f                   	pop    rdi
    41fe:	20 28                	and    BYTE PTR [rax],ch
    4200:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4203:	6c                   	ins    BYTE PTR es:[rdi],dx
    4204:	65 61                	gs (bad) 
    4206:	66 5f                	pop    di
    4208:	5f                   	pop    rdi
    4209:	29 29                	sub    DWORD PTR [rcx],ebp
    420b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    420e:	49                   	rex.WB
    420f:	4e 54                	rex.WRX push rsp
    4211:	38 5f 54             	cmp    BYTE PTR [rdi+0x54],bl
    4214:	59                   	pop    rcx
    4215:	50                   	push   rax
    4216:	45 5f                	rex.RB pop r15
    4218:	5f                   	pop    rdi
    4219:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
    421c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    421e:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    4223:	61                   	(bad)  
    4224:	72 00                	jb     4226 <__FRAME_END__+0x3822>
    4226:	5f                   	pop    rdi
    4227:	5f                   	pop    rdi
    4228:	49                   	rex.WB
    4229:	4e 54                	rex.WRX push rsp
    422b:	5f                   	pop    rdi
    422c:	4c                   	rex.WR
    422d:	45                   	rex.RB
    422e:	41 53                	push   r11
    4230:	54                   	push   rsp
    4231:	33 32                	xor    esi,DWORD PTR [rdx]
    4233:	5f                   	pop    rdi
    4234:	57                   	push   rdi
    4235:	49                   	rex.WB
    4236:	44 54                	rex.R push rsp
    4238:	48 5f                	rex.W pop rdi
    423a:	5f                   	pop    rdi
    423b:	20 33                	and    BYTE PTR [rbx],dh
    423d:	32 00                	xor    al,BYTE PTR [rax]
    423f:	5f                   	pop    rdi
    4240:	5f                   	pop    rdi
    4241:	53                   	push   rbx
    4242:	59                   	pop    rcx
    4243:	53                   	push   rbx
    4244:	43                   	rex.XB
    4245:	41                   	rex.B
    4246:	4c                   	rex.WR
    4247:	4c 5f                	rex.WR pop rdi
    4249:	53                   	push   rbx
    424a:	4c                   	rex.WR
    424b:	4f                   	rex.WRXB
    424c:	4e                   	rex.WRX
    424d:	47 5f                	rex.RXB pop r15
    424f:	54                   	push   rsp
    4250:	59                   	pop    rcx
    4251:	50                   	push   rax
    4252:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4256:	53                   	push   rbx
    4257:	4c                   	rex.WR
    4258:	4f                   	rex.WRXB
    4259:	4e                   	rex.WRX
    425a:	47 57                	rex.RXB push r15
    425c:	4f 52                	rex.WRXB push r10
    425e:	44 5f                	rex.R pop rdi
    4260:	54                   	push   rsp
    4261:	59                   	pop    rcx
    4262:	50                   	push   rax
    4263:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4267:	55                   	push   rbp
    4268:	49                   	rex.WB
    4269:	4e 54                	rex.WRX push rsp
    426b:	4d                   	rex.WRB
    426c:	41 58                	pop    r8
    426e:	5f                   	pop    rdi
    426f:	4d                   	rex.WRB
    4270:	41 58                	pop    r8
    4272:	5f                   	pop    rdi
    4273:	5f                   	pop    rdi
    4274:	20 30                	and    BYTE PTR [rax],dh
    4276:	78 66                	js     42de <__FRAME_END__+0x38da>
    4278:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    427f:	66 66 66 66 66 66 66 
    4286:	66 55                	push   bp
    4288:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    428c:	67 6c                	ins    BYTE PTR es:[edi],dx
    428e:	69 62 63 5f 63 6c 61 	imul   esp,DWORD PTR [rdx+0x63],0x616c635f
    4295:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4296:	67 5f                	addr32 pop rdi
    4298:	70 72                	jo     430c <__FRAME_END__+0x3908>
    429a:	65 72 65             	gs jb  4302 <__FRAME_END__+0x38fe>
    429d:	71 28                	jno    42c7 <__FRAME_END__+0x38c3>
    429f:	6d                   	ins    DWORD PTR es:[rdi],dx
    42a0:	61                   	(bad)  
    42a1:	6a 2c                	push   0x2c
    42a3:	6d                   	ins    DWORD PTR es:[rdi],dx
    42a4:	69 6e 29 20 30 00 5f 	imul   ebp,DWORD PTR [rsi+0x29],0x5f003020
    42ab:	49                   	rex.WB
    42ac:	4f 5f                	rex.WRXB pop r15
    42ae:	62 61                	(bad)  
    42b0:	63 6b 75             	movsxd ebp,DWORD PTR [rbx+0x75]
    42b3:	70 5f                	jo     4314 <__FRAME_END__+0x3910>
    42b5:	62 61                	(bad)  
    42b7:	73 65                	jae    431e <__FRAME_END__+0x391a>
    42b9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42bc:	6c                   	ins    BYTE PTR es:[rdi],dx
    42bd:	69 6e 75 78 5f 5f 20 	imul   ebp,DWORD PTR [rsi+0x75],0x205f5f78
    42c4:	31 00                	xor    DWORD PTR [rax],eax
    42c6:	5f                   	pop    rdi
    42c7:	5f                   	pop    rdi
    42c8:	50                   	push   rax
    42c9:	49                   	rex.WB
    42ca:	43 5f                	rex.XB pop r15
    42cc:	5f                   	pop    rdi
    42cd:	20 32                	and    BYTE PTR [rdx],dh
    42cf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42d2:	49                   	rex.WB
    42d3:	4e 54                	rex.WRX push rsp
    42d5:	5f                   	pop    rdi
    42d6:	4c                   	rex.WR
    42d7:	45                   	rex.RB
    42d8:	41 53                	push   r11
    42da:	54                   	push   rsp
    42db:	33 32                	xor    esi,DWORD PTR [rdx]
    42dd:	5f                   	pop    rdi
    42de:	54                   	push   rsp
    42df:	59                   	pop    rcx
    42e0:	50                   	push   rax
    42e1:	45 5f                	rex.RB pop r15
    42e3:	5f                   	pop    rdi
    42e4:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    42e7:	74 00                	je     42e9 <__FRAME_END__+0x38e5>
    42e9:	5f                   	pop    rdi
    42ea:	5f                   	pop    rdi
    42eb:	55                   	push   rbp
    42ec:	49                   	rex.WB
    42ed:	4e 54                	rex.WRX push rsp
    42ef:	5f                   	pop    rdi
    42f0:	4c                   	rex.WR
    42f1:	45                   	rex.RB
    42f2:	41 53                	push   r11
    42f4:	54                   	push   rsp
    42f5:	36 34 5f             	ss xor al,0x5f
    42f8:	54                   	push   rsp
    42f9:	59                   	pop    rcx
    42fa:	50                   	push   rax
    42fb:	45 5f                	rex.RB pop r15
    42fd:	5f                   	pop    rdi
    42fe:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4302:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    4306:	73 69                	jae    4371 <__FRAME_END__+0x396d>
    4308:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    430a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    430f:	74 00                	je     4311 <__FRAME_END__+0x390d>
    4311:	5f                   	pop    rdi
    4312:	49                   	rex.WB
    4313:	4f 5f                	rex.WRXB pop r15
    4315:	70 75                	jo     438c <__FRAME_END__+0x3988>
    4317:	74 63                	je     437c <__FRAME_END__+0x3978>
    4319:	5f                   	pop    rdi
    431a:	75 6e                	jne    438a <__FRAME_END__+0x3986>
    431c:	6c                   	ins    BYTE PTR es:[rdi],dx
    431d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    431e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    4321:	64 28 5f 63          	sub    BYTE PTR fs:[rdi+0x63],bl
    4325:	68 2c 5f 66 70       	push   0x70665f2c
    432a:	29 20                	sub    DWORD PTR [rax],esp
    432c:	28 5f 49             	sub    BYTE PTR [rdi+0x49],bl
    432f:	4f 5f                	rex.WRXB pop r15
    4331:	42                   	rex.X
    4332:	45 20 28             	and    BYTE PTR [r8],r13b
    4335:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    4338:	70 29                	jo     4363 <__FRAME_END__+0x395f>
    433a:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    433f:	5f                   	pop    rdi
    4340:	77 72                	ja     43b4 <__FRAME_END__+0x39b0>
    4342:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x20727470
    4349:	20 
    434a:	3e 3d 20 28 5f 66    	ds cmp eax,0x665f2820
    4350:	70 29                	jo     437b <__FRAME_END__+0x3977>
    4352:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    4357:	5f                   	pop    rdi
    4358:	77 72                	ja     43cc <__FRAME_END__+0x39c8>
    435a:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2c646e65
    4361:	2c 
    4362:	20 30                	and    BYTE PTR [rax],dh
    4364:	29 20                	sub    DWORD PTR [rax],esp
    4366:	3f                   	(bad)  
    4367:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    436a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    436b:	76 65                	jbe    43d2 <__FRAME_END__+0x39ce>
    436d:	72 66                	jb     43d5 <__FRAME_END__+0x39d1>
    436f:	6c                   	ins    BYTE PTR es:[rdi],dx
    4370:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4371:	77 20                	ja     4393 <__FRAME_END__+0x398f>
    4373:	28 5f 66             	sub    BYTE PTR [rdi+0x66],bl
    4376:	70 2c                	jo     43a4 <__FRAME_END__+0x39a0>
    4378:	20 28                	and    BYTE PTR [rax],ch
    437a:	75 6e                	jne    43ea <__FRAME_END__+0x39e6>
    437c:	73 69                	jae    43e7 <__FRAME_END__+0x39e3>
    437e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4380:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    4385:	61                   	(bad)  
    4386:	72 29                	jb     43b1 <__FRAME_END__+0x39ad>
    4388:	20 28                	and    BYTE PTR [rax],ch
    438a:	5f                   	pop    rdi
    438b:	63 68 29             	movsxd ebp,DWORD PTR [rax+0x29]
    438e:	29 20                	sub    DWORD PTR [rax],esp
    4390:	3a 20                	cmp    ah,BYTE PTR [rax]
    4392:	28 75 6e             	sub    BYTE PTR [rbp+0x6e],dh
    4395:	73 69                	jae    4400 <__FRAME_END__+0x39fc>
    4397:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4399:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    439e:	61                   	(bad)  
    439f:	72 29                	jb     43ca <__FRAME_END__+0x39c6>
    43a1:	20 28                	and    BYTE PTR [rax],ch
    43a3:	2a 28                	sub    ch,BYTE PTR [rax]
    43a5:	5f                   	pop    rdi
    43a6:	66 70 29             	data16 jo 43d2 <__FRAME_END__+0x39ce>
    43a9:	2d 3e 5f 49 4f       	sub    eax,0x4f495f3e
    43ae:	5f                   	pop    rdi
    43af:	77 72                	ja     4423 <__FRAME_END__+0x3a1f>
    43b1:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x2b727470
    43b8:	2b 
    43b9:	2b 20                	sub    esp,DWORD PTR [rax]
    43bb:	3d 20 28 5f 63       	cmp    eax,0x635f2820
    43c0:	68 29 29 29 00       	push   0x292929
    43c5:	5f                   	pop    rdi
    43c6:	50                   	push   rax
    43c7:	4f 53                	rex.WRXB push r11
    43c9:	49 58                	rex.WB pop r8
    43cb:	5f                   	pop    rdi
    43cc:	53                   	push   rbx
    43cd:	4f 55                	rex.WRXB push r13
    43cf:	52                   	push   rdx
    43d0:	43                   	rex.XB
    43d1:	45 20 31             	and    BYTE PTR [r9],r14b
    43d4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    43d7:	4f 5f                	rex.WRXB pop r15
    43d9:	44                   	rex.R
    43da:	4f                   	rex.WRXB
    43db:	4e 54                	rex.WRX push rsp
    43dd:	5f                   	pop    rdi
    43de:	43                   	rex.XB
    43df:	4c                   	rex.WR
    43e0:	4f 53                	rex.WRXB push r11
    43e2:	45 20 30             	and    BYTE PTR [r8],r14b
    43e5:	31 30                	xor    DWORD PTR [rax],esi
    43e7:	30 30                	xor    BYTE PTR [rax],dh
    43e9:	30 30                	xor    BYTE PTR [rax],dh
    43eb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    43ee:	47                   	rex.RXB
    43ef:	4c                   	rex.WR
    43f0:	49                   	rex.WB
    43f1:	42                   	rex.X
    43f2:	43 5f                	rex.XB pop r15
    43f4:	55                   	push   rbp
    43f5:	53                   	push   rbx
    43f6:	45 5f                	rex.RB pop r15
    43f8:	49                   	rex.WB
    43f9:	45                   	rex.RB
    43fa:	43 5f                	rex.XB pop r15
    43fc:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f7d38 <_end+0x423f6d20>
    4403:	46 50                	rex.RX push rax
    4405:	5f                   	pop    rdi
    4406:	45 58                	rex.RB pop r8
    4408:	54                   	push   rsp
    4409:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    440c:	53                   	push   rbx
    440d:	49 5a                	rex.WB pop r10
    440f:	45 5f                	rex.RB pop r15
    4411:	4d                   	rex.WRB
    4412:	41 58                	pop    r8
    4414:	5f                   	pop    rdi
    4415:	5f                   	pop    rdi
    4416:	20 30                	and    BYTE PTR [rax],dh
    4418:	78 66                	js     4480 <__FRAME_END__+0x3a7c>
    441a:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    4421:	66 66 66 66 66 66 66 
    4428:	66 55                	push   bp
    442a:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    442e:	55                   	push   rbp
    442f:	49                   	rex.WB
    4430:	44 5f                	rex.R pop rdi
    4432:	54                   	push   rsp
    4433:	5f                   	pop    rdi
    4434:	54                   	push   rsp
    4435:	59                   	pop    rcx
    4436:	50                   	push   rax
    4437:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    443b:	55                   	push   rbp
    443c:	33 32                	xor    esi,DWORD PTR [rdx]
    443e:	5f                   	pop    rdi
    443f:	54                   	push   rsp
    4440:	59                   	pop    rcx
    4441:	50                   	push   rax
    4442:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4446:	55                   	push   rbp
    4447:	4c                   	rex.WR
    4448:	4f                   	rex.WRXB
    4449:	4e                   	rex.WRX
    444a:	47 57                	rex.RXB push r15
    444c:	4f 52                	rex.WRXB push r10
    444e:	44 5f                	rex.R pop rdi
    4450:	54                   	push   rsp
    4451:	59                   	pop    rcx
    4452:	50                   	push   rax
    4453:	45 20 75 6e          	and    BYTE PTR [r13+0x6e],r14b
    4457:	73 69                	jae    44c2 <__FRAME_END__+0x3abe>
    4459:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    445b:	65 64 20 6c 6f 6e    	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
    4461:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4465:	74 00                	je     4467 <__FRAME_END__+0x3a63>
    4467:	5f                   	pop    rdi
    4468:	5f                   	pop    rdi
    4469:	47                   	rex.RXB
    446a:	43                   	rex.XB
    446b:	43 5f                	rex.XB pop r15
    446d:	41 54                	push   r12
    446f:	4f                   	rex.WRXB
    4470:	4d                   	rex.WRB
    4471:	49                   	rex.WB
    4472:	43 5f                	rex.XB pop r15
    4474:	53                   	push   rbx
    4475:	48                   	rex.W
    4476:	4f 52                	rex.WRXB push r10
    4478:	54                   	push   rsp
    4479:	5f                   	pop    rdi
    447a:	4c                   	rex.WR
    447b:	4f                   	rex.WRXB
    447c:	43                   	rex.XB
    447d:	4b 5f                	rex.WXB pop r15
    447f:	46 52                	rex.RX push rdx
    4481:	45                   	rex.RB
    4482:	45 20 32             	and    BYTE PTR [r10],r14b
    4485:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4488:	46                   	rex.RX
    4489:	4c 54                	rex.WR push rsp
    448b:	36 34 58             	ss xor al,0x58
    448e:	5f                   	pop    rdi
    448f:	44                   	rex.R
    4490:	45                   	rex.RB
    4491:	43                   	rex.XB
    4492:	49                   	rex.WB
    4493:	4d                   	rex.WRB
    4494:	41                   	rex.B
    4495:	4c 5f                	rex.WR pop rdi
    4497:	44                   	rex.R
    4498:	49                   	rex.WB
    4499:	47 5f                	rex.RXB pop r15
    449b:	5f                   	pop    rdi
    449c:	20 32                	and    BYTE PTR [rdx],dh
    449e:	31 00                	xor    DWORD PTR [rax],eax
    44a0:	53                   	push   rbx
    44a1:	45                   	rex.RB
    44a2:	45                   	rex.RB
    44a3:	4b 5f                	rex.WXB pop r15
    44a5:	53                   	push   rbx
    44a6:	45 54                	rex.RB push r12
    44a8:	20 30                	and    BYTE PTR [rax],dh
    44aa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    44ad:	55                   	push   rbp
    44ae:	53                   	push   rbx
    44af:	45 5f                	rex.RB pop r15
    44b1:	58                   	pop    rax
    44b2:	4f 50                	rex.WRXB push r8
    44b4:	45                   	rex.RB
    44b5:	4e 5f                	rex.WRX pop rdi
    44b7:	45 58                	rex.RB pop r8
    44b9:	54                   	push   rsp
    44ba:	45                   	rex.RB
    44bb:	4e                   	rex.WRX
    44bc:	44                   	rex.R
    44bd:	45                   	rex.RB
    44be:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    44c2:	49                   	rex.WB
    44c3:	4e 54                	rex.WRX push rsp
    44c5:	5f                   	pop    rdi
    44c6:	46                   	rex.RX
    44c7:	41 53                	push   r11
    44c9:	54                   	push   rsp
    44ca:	31 36                	xor    DWORD PTR [rsi],esi
    44cc:	5f                   	pop    rdi
    44cd:	4d                   	rex.WRB
    44ce:	41 58                	pop    r8
    44d0:	5f                   	pop    rdi
    44d1:	5f                   	pop    rdi
    44d2:	20 30                	and    BYTE PTR [rax],dh
    44d4:	78 37                	js     450d <__FRAME_END__+0x3b09>
    44d6:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16 data16
    44dd:	66 66 66 66 66 66 66 
    44e4:	66 4c 00 5f 5f       	data16 rex.WR add BYTE PTR [rdi+0x5f],r11b
    44e9:	46                   	rex.RX
    44ea:	4c 54                	rex.WR push rsp
    44ec:	5f                   	pop    rdi
    44ed:	45 50                	rex.RB push r8
    44ef:	53                   	push   rbx
    44f0:	49                   	rex.WB
    44f1:	4c                   	rex.WR
    44f2:	4f                   	rex.WRXB
    44f3:	4e 5f                	rex.WRX pop rdi
    44f5:	5f                   	pop    rdi
    44f6:	20 31                	and    BYTE PTR [rcx],dh
    44f8:	2e 31 39             	xor    DWORD PTR cs:[rcx],edi
    44fb:	32 30                	xor    dh,BYTE PTR [rax]
    44fd:	39 32                	cmp    DWORD PTR [rdx],esi
    44ff:	38 39                	cmp    BYTE PTR [rcx],bh
    4501:	35 35 30 37 38       	xor    eax,0x38373035
    4506:	31 32                	xor    DWORD PTR [rdx],esi
    4508:	35 30 30 30 30       	xor    eax,0x30303030
    450d:	30 30                	xor    BYTE PTR [rax],dh
    450f:	30 30                	xor    BYTE PTR [rax],dh
    4511:	30 30                	xor    BYTE PTR [rax],dh
    4513:	30 30                	xor    BYTE PTR [rax],dh
    4515:	30 30                	xor    BYTE PTR [rax],dh
    4517:	30 30                	xor    BYTE PTR [rax],dh
    4519:	30 30                	xor    BYTE PTR [rax],dh
    451b:	30 65 2d             	xor    BYTE PTR [rbp+0x2d],ah
    451e:	37                   	(bad)  
    451f:	46 00 5f 5f          	rex.RX add BYTE PTR [rdi+0x5f],r11b
    4523:	46                   	rex.RX
    4524:	4c 54                	rex.WR push rsp
    4526:	36 34 5f             	ss xor al,0x5f
    4529:	4d                   	rex.WRB
    452a:	49                   	rex.WB
    452b:	4e 5f                	rex.WRX pop rdi
    452d:	45 58                	rex.RB pop r8
    452f:	50                   	push   rax
    4530:	5f                   	pop    rdi
    4531:	5f                   	pop    rdi
    4532:	20 28                	and    BYTE PTR [rax],ch
    4534:	2d 31 30 32 31       	sub    eax,0x31323031
    4539:	29 00                	sub    DWORD PTR [rax],eax
    453b:	5f                   	pop    rdi
    453c:	49                   	rex.WB
    453d:	4f 53                	rex.WRXB push r11
    453f:	5f                   	pop    rdi
    4540:	41 50                	push   r8
    4542:	50                   	push   rax
    4543:	45                   	rex.RB
    4544:	4e                   	rex.WRX
    4545:	44 20 38             	and    BYTE PTR [rax],r15b
    4548:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    454b:	47                   	rex.RXB
    454c:	4c                   	rex.WR
    454d:	49                   	rex.WB
    454e:	42                   	rex.X
    454f:	43 5f                	rex.XB pop r15
    4551:	49                   	rex.WB
    4552:	4e 54                	rex.WRX push rsp
    4554:	45 52                	rex.RB push r10
    4556:	4e                   	rex.WRX
    4557:	41                   	rex.B
    4558:	4c 5f                	rex.WR pop rdi
    455a:	53                   	push   rbx
    455b:	54                   	push   rsp
    455c:	41 52                	push   r10
    455e:	54                   	push   rsp
    455f:	49                   	rex.WB
    4560:	4e                   	rex.WRX
    4561:	47 5f                	rex.RXB pop r15
    4563:	48                   	rex.W
    4564:	45                   	rex.RB
    4565:	41                   	rex.B
    4566:	44                   	rex.R
    4567:	45 52                	rex.RB push r10
    4569:	5f                   	pop    rdi
    456a:	49                   	rex.WB
    456b:	4d 50                	rex.WRB push r8
    456d:	4c                   	rex.WR
    456e:	45                   	rex.RB
    456f:	4d                   	rex.WRB
    4570:	45                   	rex.RB
    4571:	4e 54                	rex.WRX push rsp
    4573:	41 54                	push   r12
    4575:	49                   	rex.WB
    4576:	4f                   	rex.WRXB
    4577:	4e 00 5f 5f          	rex.WRX add BYTE PTR [rdi+0x5f],r11b
    457b:	46                   	rex.RX
    457c:	4c 54                	rex.WR push rsp
    457e:	5f                   	pop    rdi
    457f:	45 56                	rex.RB push r14
    4581:	41                   	rex.B
    4582:	4c 5f                	rex.WR pop rdi
    4584:	4d                   	rex.WRB
    4585:	45 54                	rex.RB push r12
    4587:	48                   	rex.W
    4588:	4f                   	rex.WRXB
    4589:	44 5f                	rex.R pop rdi
    458b:	54                   	push   rsp
    458c:	53                   	push   rbx
    458d:	5f                   	pop    rdi
    458e:	31 38                	xor    DWORD PTR [rax],edi
    4590:	36 36 31 5f 33       	ss xor DWORD PTR ss:[rdi+0x33],ebx
    4595:	5f                   	pop    rdi
    4596:	5f                   	pop    rdi
    4597:	20 30                	and    BYTE PTR [rax],dh
    4599:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    459c:	44                   	rex.R
    459d:	42                   	rex.X
    459e:	4c 5f                	rex.WR pop rdi
    45a0:	48                   	rex.W
    45a1:	41 53                	push   r11
    45a3:	5f                   	pop    rdi
    45a4:	49                   	rex.WB
    45a5:	4e                   	rex.WRX
    45a6:	46                   	rex.RX
    45a7:	49                   	rex.WB
    45a8:	4e                   	rex.WRX
    45a9:	49 54                	rex.WB push r12
    45ab:	59                   	pop    rcx
    45ac:	5f                   	pop    rdi
    45ad:	5f                   	pop    rdi
    45ae:	20 31                	and    BYTE PTR [rcx],dh
    45b0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45b3:	61                   	(bad)  
    45b4:	74 74                	je     462a <__FRAME_END__+0x3c26>
    45b6:	72 69                	jb     4621 <__FRAME_END__+0x3c1d>
    45b8:	62                   	(bad)  
    45b9:	75 74                	jne    462f <__FRAME_END__+0x3c2b>
    45bb:	65 5f                	gs pop rdi
    45bd:	77 61                	ja     4620 <__FRAME_END__+0x3c1c>
    45bf:	72 6e                	jb     462f <__FRAME_END__+0x3c2b>
    45c1:	5f                   	pop    rdi
    45c2:	75 6e                	jne    4632 <__FRAME_END__+0x3c2e>
    45c4:	75 73                	jne    4639 <__FRAME_END__+0x3c35>
    45c6:	65 64 5f             	gs fs pop rdi
    45c9:	72 65                	jb     4630 <__FRAME_END__+0x3c2c>
    45cb:	73 75                	jae    4642 <__FRAME_END__+0x3c3e>
    45cd:	6c                   	ins    BYTE PTR es:[rdi],dx
    45ce:	74 5f                	je     462f <__FRAME_END__+0x3c2b>
    45d0:	5f                   	pop    rdi
    45d1:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    45d4:	61                   	(bad)  
    45d5:	74 74                	je     464b <__FRAME_END__+0x3c47>
    45d7:	72 69                	jb     4642 <__FRAME_END__+0x3c3e>
    45d9:	62                   	(bad)  
    45da:	75 74                	jne    4650 <__FRAME_END__+0x3c4c>
    45dc:	65 5f                	gs pop rdi
    45de:	5f                   	pop    rdi
    45df:	20 28                	and    BYTE PTR [rax],ch
    45e1:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    45e4:	77 61                	ja     4647 <__FRAME_END__+0x3c43>
    45e6:	72 6e                	jb     4656 <__FRAME_END__+0x3c52>
    45e8:	5f                   	pop    rdi
    45e9:	75 6e                	jne    4659 <__FRAME_END__+0x3c55>
    45eb:	75 73                	jne    4660 <__FRAME_END__+0x3c5c>
    45ed:	65 64 5f             	gs fs pop rdi
    45f0:	72 65                	jb     4657 <__FRAME_END__+0x3c53>
    45f2:	73 75                	jae    4669 <__FRAME_END__+0x3c65>
    45f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    45f5:	74 5f                	je     4656 <__FRAME_END__+0x3c52>
    45f7:	5f                   	pop    rdi
    45f8:	29 29                	sub    DWORD PTR [rcx],ebp
    45fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    45fd:	49                   	rex.WB
    45fe:	4e 54                	rex.WRX push rsp
    4600:	36 34 5f             	ss xor al,0x5f
    4603:	43 28 63 29          	rex.XB sub BYTE PTR [r11+0x29],spl
    4607:	20 63 20             	and    BYTE PTR [rbx+0x20],ah
    460a:	23 23                	and    esp,DWORD PTR [rbx]
    460c:	20 4c 00 5f          	and    BYTE PTR [rax+rax*1+0x5f],cl
    4610:	5f                   	pop    rdi
    4611:	45                   	rex.RB
    4612:	4e                   	rex.WRX
    4613:	44 5f                	rex.R pop rdi
    4615:	44                   	rex.R
    4616:	45                   	rex.RB
    4617:	43                   	rex.XB
    4618:	4c 53                	rex.WR push rbx
    461a:	20 00                	and    BYTE PTR [rax],al
    461c:	5f                   	pop    rdi
    461d:	5f                   	pop    rdi
    461e:	46                   	rex.RX
    461f:	4c 54                	rex.WR push rsp
    4621:	5f                   	pop    rdi
    4622:	48                   	rex.W
    4623:	41 53                	push   r11
    4625:	5f                   	pop    rdi
    4626:	51                   	push   rcx
    4627:	55                   	push   rbp
    4628:	49                   	rex.WB
    4629:	45 54                	rex.RB push r12
    462b:	5f                   	pop    rdi
    462c:	4e                   	rex.WRX
    462d:	41                   	rex.B
    462e:	4e 5f                	rex.WRX pop rdi
    4630:	5f                   	pop    rdi
    4631:	20 31                	and    BYTE PTR [rcx],dh
    4633:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4636:	53                   	push   rbx
    4637:	49 5a                	rex.WB pop r10
    4639:	45                   	rex.RB
    463a:	4f                   	rex.WRXB
    463b:	46 5f                	rex.RX pop rdi
    463d:	49                   	rex.WB
    463e:	4e 54                	rex.WRX push rsp
    4640:	5f                   	pop    rdi
    4641:	5f                   	pop    rdi
    4642:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    4645:	5f                   	pop    rdi
    4646:	5f                   	pop    rdi
    4647:	43                   	rex.XB
    4648:	4c                   	rex.WR
    4649:	4f                   	rex.WRXB
    464a:	43                   	rex.XB
    464b:	4b                   	rex.WXB
    464c:	49                   	rex.WB
    464d:	44 5f                	rex.R pop rdi
    464f:	54                   	push   rsp
    4650:	5f                   	pop    rdi
    4651:	54                   	push   rsp
    4652:	59                   	pop    rcx
    4653:	50                   	push   rax
    4654:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4658:	53                   	push   rbx
    4659:	33 32                	xor    esi,DWORD PTR [rdx]
    465b:	5f                   	pop    rdi
    465c:	54                   	push   rsp
    465d:	59                   	pop    rcx
    465e:	50                   	push   rax
    465f:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4663:	49                   	rex.WB
    4664:	4e 54                	rex.WRX push rsp
    4666:	5f                   	pop    rdi
    4667:	46                   	rex.RX
    4668:	41 53                	push   r11
    466a:	54                   	push   rsp
    466b:	31 36                	xor    DWORD PTR [rsi],esi
    466d:	5f                   	pop    rdi
    466e:	54                   	push   rsp
    466f:	59                   	pop    rcx
    4670:	50                   	push   rax
    4671:	45 5f                	rex.RB pop r15
    4673:	5f                   	pop    rdi
    4674:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4678:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    467c:	74 00                	je     467e <__FRAME_END__+0x3c7a>
    467e:	5f                   	pop    rdi
    467f:	5f                   	pop    rdi
    4680:	53                   	push   rbx
    4681:	54                   	push   rsp
    4682:	44                   	rex.R
    4683:	43 5f                	rex.XB pop r15
    4685:	49                   	rex.WB
    4686:	45                   	rex.RB
    4687:	43 5f                	rex.XB pop r15
    4689:	35 35 39 5f 5f       	xor    eax,0x5f5f3935
    468e:	20 31                	and    BYTE PTR [rcx],dh
    4690:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4693:	44                   	rex.R
    4694:	45                   	rex.RB
    4695:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    4698:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    469b:	55                   	push   rbp
    469c:	42                   	rex.X
    469d:	4e                   	rex.WRX
    469e:	4f 52                	rex.WRXB push r10
    46a0:	4d                   	rex.WRB
    46a1:	41                   	rex.B
    46a2:	4c 5f                	rex.WR pop rdi
    46a4:	4d                   	rex.WRB
    46a5:	49                   	rex.WB
    46a6:	4e 5f                	rex.WRX pop rdi
    46a8:	5f                   	pop    rdi
    46a9:	20 30                	and    BYTE PTR [rax],dh
    46ab:	2e 30 30             	xor    BYTE PTR cs:[rax],dh
    46ae:	30 30                	xor    BYTE PTR [rax],dh
    46b0:	30 30                	xor    BYTE PTR [rax],dh
    46b2:	30 30                	xor    BYTE PTR [rax],dh
    46b4:	30 30                	xor    BYTE PTR [rax],dh
    46b6:	30 30                	xor    BYTE PTR [rax],dh
    46b8:	30 30                	xor    BYTE PTR [rax],dh
    46ba:	30 30                	xor    BYTE PTR [rax],dh
    46bc:	30 30                	xor    BYTE PTR [rax],dh
    46be:	30 30                	xor    BYTE PTR [rax],dh
    46c0:	30 30                	xor    BYTE PTR [rax],dh
    46c2:	30 30                	xor    BYTE PTR [rax],dh
    46c4:	30 30                	xor    BYTE PTR [rax],dh
    46c6:	30 30                	xor    BYTE PTR [rax],dh
    46c8:	30 30                	xor    BYTE PTR [rax],dh
    46ca:	30 30                	xor    BYTE PTR [rax],dh
    46cc:	31 45 2d             	xor    DWORD PTR [rbp+0x2d],eax
    46cf:	36 31 34 33          	xor    DWORD PTR ss:[rbx+rsi*1],esi
    46d3:	44                   	rex.R
    46d4:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    46d8:	55                   	push   rbp
    46d9:	53                   	push   rbx
    46da:	45 5f                	rex.RB pop r15
    46dc:	4c                   	rex.WR
    46dd:	41 52                	push   r10
    46df:	47                   	rex.RXB
    46e0:	45                   	rex.RB
    46e1:	46                   	rex.RX
    46e2:	49                   	rex.WB
    46e3:	4c                   	rex.WR
    46e4:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    46e8:	53                   	push   rbx
    46e9:	49 5a                	rex.WB pop r10
    46eb:	45                   	rex.RB
    46ec:	4f                   	rex.WRXB
    46ed:	46 5f                	rex.RX pop rdi
    46ef:	46                   	rex.RX
    46f0:	4c                   	rex.WR
    46f1:	4f                   	rex.WRXB
    46f2:	41 54                	push   r12
    46f4:	38 30                	cmp    BYTE PTR [rax],dh
    46f6:	5f                   	pop    rdi
    46f7:	5f                   	pop    rdi
    46f8:	20 31                	and    BYTE PTR [rcx],dh
    46fa:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    46fe:	46                   	rex.RX
    46ff:	4c 54                	rex.WR push rsp
    4701:	33 32                	xor    esi,DWORD PTR [rdx]
    4703:	58                   	pop    rax
    4704:	5f                   	pop    rdi
    4705:	48                   	rex.W
    4706:	41 53                	push   r11
    4708:	5f                   	pop    rdi
    4709:	51                   	push   rcx
    470a:	55                   	push   rbp
    470b:	49                   	rex.WB
    470c:	45 54                	rex.RB push r12
    470e:	5f                   	pop    rdi
    470f:	4e                   	rex.WRX
    4710:	41                   	rex.B
    4711:	4e 5f                	rex.WRX pop rdi
    4713:	5f                   	pop    rdi
    4714:	20 31                	and    BYTE PTR [rcx],dh
    4716:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4719:	44                   	rex.R
    471a:	42                   	rex.X
    471b:	4c 5f                	rex.WR pop rdi
    471d:	4d                   	rex.WRB
    471e:	41 58                	pop    r8
    4720:	5f                   	pop    rdi
    4721:	31 30                	xor    DWORD PTR [rax],esi
    4723:	5f                   	pop    rdi
    4724:	45 58                	rex.RB pop r8
    4726:	50                   	push   rax
    4727:	5f                   	pop    rdi
    4728:	5f                   	pop    rdi
    4729:	20 33                	and    BYTE PTR [rbx],dh
    472b:	30 38                	xor    BYTE PTR [rax],bh
    472d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4730:	55                   	push   rbp
    4731:	53                   	push   rbx
    4732:	45 5f                	rex.RB pop r15
    4734:	4d                   	rex.WRB
    4735:	49 53                	rex.WB push r11
    4737:	43 20 31             	rex.XB and BYTE PTR [r9],sil
    473a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    473d:	47 58                	rex.RXB pop r8
    473f:	58                   	pop    rax
    4740:	5f                   	pop    rdi
    4741:	41                   	rex.B
    4742:	42                   	rex.X
    4743:	49 5f                	rex.WB pop r15
    4745:	56                   	push   rsi
    4746:	45 52                	rex.RB push r10
    4748:	53                   	push   rbx
    4749:	49                   	rex.WB
    474a:	4f                   	rex.WRXB
    474b:	4e 20 31             	rex.WRX and BYTE PTR [rcx],r14b
    474e:	30 31                	xor    BYTE PTR [rcx],dh
    4750:	31 00                	xor    DWORD PTR [rax],eax
    4752:	5f                   	pop    rdi
    4753:	5f                   	pop    rdi
    4754:	70 69                	jo     47bf <__FRAME_END__+0x3dbb>
    4756:	63 5f 5f             	movsxd ebx,DWORD PTR [rdi+0x5f]
    4759:	20 32                	and    BYTE PTR [rdx],dh
    475b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    475e:	41 54                	push   r12
    4760:	4f                   	rex.WRXB
    4761:	4d                   	rex.WRB
    4762:	49                   	rex.WB
    4763:	43 5f                	rex.XB pop r15
    4765:	52                   	push   rdx
    4766:	45                   	rex.RB
    4767:	4c                   	rex.WR
    4768:	45                   	rex.RB
    4769:	41 53                	push   r11
    476b:	45 20 33             	and    BYTE PTR [r11],r14b
    476e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4771:	53                   	push   rbx
    4772:	53                   	push   rbx
    4773:	45 5f                	rex.RB pop r15
    4775:	5f                   	pop    rdi
    4776:	20 31                	and    BYTE PTR [rcx],dh
    4778:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    477b:	4f 5f                	rex.WRXB pop r15
    477d:	4e                   	rex.WRX
    477e:	4f 5f                	rex.WRXB pop r15
    4780:	52                   	push   rdx
    4781:	45                   	rex.RB
    4782:	41                   	rex.B
    4783:	44 53                	rex.R push rbx
    4785:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
    4788:	5f                   	pop    rdi
    4789:	5f                   	pop    rdi
    478a:	47                   	rex.RXB
    478b:	4c                   	rex.WR
    478c:	49                   	rex.WB
    478d:	42                   	rex.X
    478e:	43 5f                	rex.XB pop r15
    4790:	55                   	push   rbp
    4791:	53                   	push   rbx
    4792:	45 5f                	rex.RB pop r15
    4794:	49                   	rex.WB
    4795:	45                   	rex.RB
    4796:	43 5f                	rex.XB pop r15
    4798:	36 30 35 35 39 5f 46 	xor    BYTE PTR ss:[rip+0x465f3935],dh        # 465f80d4 <_end+0x463f70bc>
    479f:	55                   	push   rbp
    47a0:	4e                   	rex.WRX
    47a1:	43 53                	rex.XB push r11
    47a3:	5f                   	pop    rdi
    47a4:	45 58                	rex.RB pop r8
    47a6:	54                   	push   rsp
    47a7:	20 30                	and    BYTE PTR [rax],dh
    47a9:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
    47ac:	69 6e 00 5f 53 49 5a 	imul   ebp,DWORD PTR [rsi+0x0],0x5a49535f
    47b3:	45 54                	rex.RB push r12
    47b5:	5f                   	pop    rdi
    47b6:	20 00                	and    BYTE PTR [rax],al
    47b8:	5f                   	pop    rdi
    47b9:	5f                   	pop    rdi
    47ba:	46                   	rex.RX
    47bb:	4c 54                	rex.WR push rsp
    47bd:	31 32                	xor    DWORD PTR [rdx],esi
    47bf:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    47c2:	45                   	rex.RB
    47c3:	4e                   	rex.WRX
    47c4:	4f 52                	rex.WRXB push r10
    47c6:	4d 5f                	rex.WRB pop r15
    47c8:	4d                   	rex.WRB
    47c9:	49                   	rex.WB
    47ca:	4e 5f                	rex.WRX pop rdi
    47cc:	5f                   	pop    rdi
    47cd:	20 36                	and    BYTE PTR [rsi],dh
    47cf:	2e 34 37             	cs xor al,0x37
    47d2:	35 31 37 35 31       	xor    eax,0x31353731
    47d7:	31 39                	xor    DWORD PTR [rcx],edi
    47d9:	34 33                	xor    al,0x33
    47db:	38 30                	cmp    BYTE PTR [rax],dh
    47dd:	32 35 31 31 30 39    	xor    dh,BYTE PTR [rip+0x39303131]        # 39307914 <_end+0x391068fc>
    47e3:	32 34 34             	xor    dh,BYTE PTR [rsp+rsi*1]
    47e6:	33 38                	xor    edi,DWORD PTR [rax]
    47e8:	39 35 38 32 32 37    	cmp    DWORD PTR [rip+0x37323238],esi        # 37327a26 <_end+0x37126a0e>
    47ee:	36 34 36             	ss xor al,0x36
    47f1:	35 35 65 2d 34       	xor    eax,0x342d6535
    47f6:	39 36                	cmp    DWORD PTR [rsi],esi
    47f8:	36 46 31 32          	rex.RX xor DWORD PTR ss:[rdx],r14d
    47fc:	38 00                	cmp    BYTE PTR [rax],al
    47fe:	5f                   	pop    rdi
    47ff:	5f                   	pop    rdi
    4800:	47                   	rex.RXB
    4801:	4c                   	rex.WR
    4802:	49                   	rex.WB
    4803:	42                   	rex.X
    4804:	43 5f                	rex.XB pop r15
    4806:	55                   	push   rbp
    4807:	53                   	push   rbx
    4808:	45 5f                	rex.RB pop r15
    480a:	49                   	rex.WB
    480b:	45                   	rex.RB
    480c:	43 5f                	rex.XB pop r15
    480e:	36 30 35 35 39 5f 42 	xor    BYTE PTR ss:[rip+0x425f3935],dh        # 425f814a <_end+0x423f7132>
    4815:	46 50                	rex.RX push rax
    4817:	5f                   	pop    rdi
    4818:	45 58                	rex.RB pop r8
    481a:	54                   	push   rsp
    481b:	20 30                	and    BYTE PTR [rax],dh
    481d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4820:	73 74                	jae    4896 <__FRAME_END__+0x3e92>
    4822:	75 62                	jne    4886 <__FRAME_END__+0x3e82>
    4824:	5f                   	pop    rdi
    4825:	72 65                	jb     488c <__FRAME_END__+0x3e88>
    4827:	76 6f                	jbe    4898 <__FRAME_END__+0x3e94>
    4829:	6b 65 20 00          	imul   esp,DWORD PTR [rbp+0x20],0x0
    482d:	5f                   	pop    rdi
    482e:	5f                   	pop    rdi
    482f:	49                   	rex.WB
    4830:	4e 54                	rex.WRX push rsp
    4832:	4d                   	rex.WRB
    4833:	41 58                	pop    r8
    4835:	5f                   	pop    rdi
    4836:	54                   	push   rsp
    4837:	59                   	pop    rcx
    4838:	50                   	push   rax
    4839:	45 5f                	rex.RB pop r15
    483b:	5f                   	pop    rdi
    483c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4840:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4844:	74 00                	je     4846 <__FRAME_END__+0x3e42>
    4846:	5f                   	pop    rdi
    4847:	5f                   	pop    rdi
    4848:	46                   	rex.RX
    4849:	4c 54                	rex.WR push rsp
    484b:	5f                   	pop    rdi
    484c:	4d                   	rex.WRB
    484d:	49                   	rex.WB
    484e:	4e 5f                	rex.WRX pop rdi
    4850:	45 58                	rex.RB pop r8
    4852:	50                   	push   rax
    4853:	5f                   	pop    rdi
    4854:	5f                   	pop    rdi
    4855:	20 28                	and    BYTE PTR [rax],ch
    4857:	2d 31 32 35 29       	sub    eax,0x29353231
    485c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    485f:	53                   	push   rbx
    4860:	53                   	push   rbx
    4861:	50                   	push   rax
    4862:	5f                   	pop    rdi
    4863:	53                   	push   rbx
    4864:	54                   	push   rsp
    4865:	52                   	push   rdx
    4866:	4f                   	rex.WRXB
    4867:	4e                   	rex.WRX
    4868:	47 5f                	rex.RXB pop r15
    486a:	5f                   	pop    rdi
    486b:	20 33                	and    BYTE PTR [rbx],dh
    486d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4870:	65 72 72             	gs jb  48e5 <__FRAME_END__+0x3ee1>
    4873:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4874:	72 64                	jb     48da <__FRAME_END__+0x3ed6>
    4876:	65 63 6c 28 6e       	movsxd ebp,DWORD PTR gs:[rax+rbp*1+0x6e]
    487b:	61                   	(bad)  
    487c:	6d                   	ins    DWORD PTR es:[rdi],dx
    487d:	65 2c 6d             	gs sub al,0x6d
    4880:	73 67                	jae    48e9 <__FRAME_END__+0x3ee5>
    4882:	29 20                	sub    DWORD PTR [rax],esp
    4884:	65 78 74             	gs js  48fb <__FRAME_END__+0x3ef7>
    4887:	65 72 6e             	gs jb  48f8 <__FRAME_END__+0x3ef4>
    488a:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    488d:	69 64 20 6e 61 6d 65 	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x20656d61
    4894:	20 
    4895:	28 76 6f             	sub    BYTE PTR [rsi+0x6f],dh
    4898:	69 64 29 20 5f 5f 61 	imul   esp,DWORD PTR [rcx+rbp*1+0x20],0x74615f5f
    489f:	74 
    48a0:	74 72                	je     4914 <__FRAME_END__+0x3f10>
    48a2:	69 62 75 74 65 5f 5f 	imul   esp,DWORD PTR [rdx+0x75],0x5f5f6574
    48a9:	28 28                	sub    BYTE PTR [rax],ch
    48ab:	5f                   	pop    rdi
    48ac:	5f                   	pop    rdi
    48ad:	65 72 72             	gs jb  4922 <__FRAME_END__+0x3f1e>
    48b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    48b1:	72 5f                	jb     4912 <__FRAME_END__+0x3f0e>
    48b3:	5f                   	pop    rdi
    48b4:	20 28                	and    BYTE PTR [rax],ch
    48b6:	6d                   	ins    DWORD PTR es:[rdi],dx
    48b7:	73 67                	jae    4920 <__FRAME_END__+0x3f1c>
    48b9:	29 29                	sub    DWORD PTR [rcx],ebp
    48bb:	29 00                	sub    DWORD PTR [rax],eax
    48bd:	5f                   	pop    rdi
    48be:	5f                   	pop    rdi
    48bf:	44                   	rex.R
    48c0:	45                   	rex.RB
    48c1:	43 31 32             	rex.XB xor DWORD PTR [r10],esi
    48c4:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    48c7:	41 58                	pop    r8
    48c9:	5f                   	pop    rdi
    48ca:	5f                   	pop    rdi
    48cb:	20 39                	and    BYTE PTR [rcx],bh
    48cd:	2e 39 39             	cmp    DWORD PTR cs:[rcx],edi
    48d0:	39 39                	cmp    DWORD PTR [rcx],edi
    48d2:	39 39                	cmp    DWORD PTR [rcx],edi
    48d4:	39 39                	cmp    DWORD PTR [rcx],edi
    48d6:	39 39                	cmp    DWORD PTR [rcx],edi
    48d8:	39 39                	cmp    DWORD PTR [rcx],edi
    48da:	39 39                	cmp    DWORD PTR [rcx],edi
    48dc:	39 39                	cmp    DWORD PTR [rcx],edi
    48de:	39 39                	cmp    DWORD PTR [rcx],edi
    48e0:	39 39                	cmp    DWORD PTR [rcx],edi
    48e2:	39 39                	cmp    DWORD PTR [rcx],edi
    48e4:	39 39                	cmp    DWORD PTR [rcx],edi
    48e6:	39 39                	cmp    DWORD PTR [rcx],edi
    48e8:	39 39                	cmp    DWORD PTR [rcx],edi
    48ea:	39 39                	cmp    DWORD PTR [rcx],edi
    48ec:	39 39                	cmp    DWORD PTR [rcx],edi
    48ee:	39 45 36             	cmp    DWORD PTR [rbp+0x36],eax
    48f1:	31 34 34             	xor    DWORD PTR [rsp+rsi*1],esi
    48f4:	44                   	rex.R
    48f5:	4c 00 5f 5f          	rex.WR add BYTE PTR [rdi+0x5f],r11b
    48f9:	46                   	rex.RX
    48fa:	4c 54                	rex.WR push rsp
    48fc:	5f                   	pop    rdi
    48fd:	4d                   	rex.WRB
    48fe:	41 58                	pop    r8
    4900:	5f                   	pop    rdi
    4901:	45 58                	rex.RB pop r8
    4903:	50                   	push   rax
    4904:	5f                   	pop    rdi
    4905:	5f                   	pop    rdi
    4906:	20 31                	and    BYTE PTR [rcx],dh
    4908:	32 38                	xor    bh,BYTE PTR [rax]
    490a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    490d:	41 54                	push   r12
    490f:	4f                   	rex.WRXB
    4910:	4d                   	rex.WRB
    4911:	49                   	rex.WB
    4912:	43 5f                	rex.XB pop r15
    4914:	48                   	rex.W
    4915:	4c                   	rex.WR
    4916:	45 5f                	rex.RB pop r15
    4918:	41                   	rex.B
    4919:	43 51                	rex.XB push r9
    491b:	55                   	push   rbp
    491c:	49 52                	rex.WB push r10
    491e:	45 20 36             	and    BYTE PTR [r14],r14b
    4921:	35 35 33 36 00       	xor    eax,0x363335
    4926:	5f                   	pop    rdi
    4927:	5f                   	pop    rdi
    4928:	4f                   	rex.WRXB
    4929:	46                   	rex.RX
    492a:	46                   	rex.RX
    492b:	36 34 5f             	ss xor al,0x5f
    492e:	54                   	push   rsp
    492f:	5f                   	pop    rdi
    4930:	54                   	push   rsp
    4931:	59                   	pop    rcx
    4932:	50                   	push   rax
    4933:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    4937:	53                   	push   rbx
    4938:	51                   	push   rcx
    4939:	55                   	push   rbp
    493a:	41                   	rex.B
    493b:	44 5f                	rex.R pop rdi
    493d:	54                   	push   rsp
    493e:	59                   	pop    rcx
    493f:	50                   	push   rax
    4940:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4944:	55                   	push   rbp
    4945:	53                   	push   rbx
    4946:	45 5f                	rex.RB pop r15
    4948:	49 53                	rex.WB push r11
    494a:	4f                   	rex.WRXB
    494b:	43 31 31             	rex.XB xor DWORD PTR [r9],esi
    494e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4951:	44                   	rex.R
    4952:	45 56                	rex.RB push r14
    4954:	5f                   	pop    rdi
    4955:	54                   	push   rsp
    4956:	5f                   	pop    rdi
    4957:	54                   	push   rsp
    4958:	59                   	pop    rcx
    4959:	50                   	push   rax
    495a:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    495e:	55                   	push   rbp
    495f:	51                   	push   rcx
    4960:	55                   	push   rbp
    4961:	41                   	rex.B
    4962:	44 5f                	rex.R pop rdi
    4964:	54                   	push   rsp
    4965:	59                   	pop    rcx
    4966:	50                   	push   rax
    4967:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    496b:	43 50                	rex.XB push r8
    496d:	55                   	push   rbp
    496e:	5f                   	pop    rdi
    496f:	4d                   	rex.WRB
    4970:	41 53                	push   r11
    4972:	4b 5f                	rex.WXB pop r15
    4974:	54                   	push   rsp
    4975:	59                   	pop    rcx
    4976:	50                   	push   rax
    4977:	45 20 5f 5f          	and    BYTE PTR [r15+0x5f],r11b
    497b:	53                   	push   rbx
    497c:	59                   	pop    rcx
    497d:	53                   	push   rbx
    497e:	43                   	rex.XB
    497f:	41                   	rex.B
    4980:	4c                   	rex.WR
    4981:	4c 5f                	rex.WR pop rdi
    4983:	55                   	push   rbp
    4984:	4c                   	rex.WR
    4985:	4f                   	rex.WRXB
    4986:	4e                   	rex.WRX
    4987:	47 5f                	rex.RXB pop r15
    4989:	54                   	push   rsp
    498a:	59                   	pop    rcx
    498b:	50                   	push   rax
    498c:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    4990:	55                   	push   rbp
    4991:	49                   	rex.WB
    4992:	4e 54                	rex.WRX push rsp
    4994:	5f                   	pop    rdi
    4995:	4c                   	rex.WR
    4996:	45                   	rex.RB
    4997:	41 53                	push   r11
    4999:	54                   	push   rsp
    499a:	33 32                	xor    esi,DWORD PTR [rdx]
    499c:	5f                   	pop    rdi
    499d:	4d                   	rex.WRB
    499e:	41 58                	pop    r8
    49a0:	5f                   	pop    rdi
    49a1:	5f                   	pop    rdi
    49a2:	20 30                	and    BYTE PTR [rax],dh
    49a4:	78 66                	js     4a0c <__FRAME_END__+0x4008>
    49a6:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 push bp
    49ad:	55 
    49ae:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    49b1:	4f 5f                	rex.WRXB pop r15
    49b3:	42                   	rex.X
    49b4:	45 28 65 78          	sub    BYTE PTR [r13+0x78],r12b
    49b8:	70 72                	jo     4a2c <__FRAME_END__+0x4028>
    49ba:	2c 72                	sub    al,0x72
    49bc:	65 73 29             	gs jae 49e8 <__FRAME_END__+0x3fe4>
    49bf:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    49c2:	62                   	(bad)  
    49c3:	75 69                	jne    4a2e <__FRAME_END__+0x402a>
    49c5:	6c                   	ins    BYTE PTR es:[rdi],dx
    49c6:	74 69                	je     4a31 <__FRAME_END__+0x402d>
    49c8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    49c9:	5f                   	pop    rdi
    49ca:	65 78 70             	gs js  4a3d <__FRAME_END__+0x4039>
    49cd:	65 63 74 20 28       	movsxd esi,DWORD PTR gs:[rax+riz*1+0x28]
    49d2:	28 65 78             	sub    BYTE PTR [rbp+0x78],ah
    49d5:	70 72                	jo     4a49 <__FRAME_END__+0x4045>
    49d7:	29 2c 20             	sub    DWORD PTR [rax+riz*1],ebp
    49da:	72 65                	jb     4a41 <__FRAME_END__+0x403d>
    49dc:	73 29                	jae    4a07 <__FRAME_END__+0x4003>
    49de:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    49e1:	41 53                	push   r11
    49e3:	4d                   	rex.WRB
    49e4:	4e                   	rex.WRX
    49e5:	41                   	rex.B
    49e6:	4d                   	rex.WRB
    49e7:	45 28 63 6e          	sub    BYTE PTR [r11+0x6e],r12b
    49eb:	61                   	(bad)  
    49ec:	6d                   	ins    DWORD PTR es:[rdi],dx
    49ed:	65 29 20             	sub    DWORD PTR gs:[rax],esp
    49f0:	5f                   	pop    rdi
    49f1:	5f                   	pop    rdi
    49f2:	41 53                	push   r11
    49f4:	4d                   	rex.WRB
    49f5:	4e                   	rex.WRX
    49f6:	41                   	rex.B
    49f7:	4d                   	rex.WRB
    49f8:	45 32 20             	xor    r12b,BYTE PTR [r8]
    49fb:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    49fe:	55                   	push   rbp
    49ff:	53                   	push   rbx
    4a00:	45 52                	rex.RB push r10
    4a02:	5f                   	pop    rdi
    4a03:	4c                   	rex.WR
    4a04:	41                   	rex.B
    4a05:	42                   	rex.X
    4a06:	45                   	rex.RB
    4a07:	4c 5f                	rex.WR pop rdi
    4a09:	50                   	push   rax
    4a0a:	52                   	push   rdx
    4a0b:	45                   	rex.RB
    4a0c:	46                   	rex.RX
    4a0d:	49 58                	rex.WB pop r8
    4a0f:	5f                   	pop    rdi
    4a10:	5f                   	pop    rdi
    4a11:	2c 20                	sub    al,0x20
    4a13:	63 6e 61             	movsxd ebp,DWORD PTR [rsi+0x61]
    4a16:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a17:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4a1a:	5f                   	pop    rdi
    4a1b:	5f                   	pop    rdi
    4a1c:	46                   	rex.RX
    4a1d:	4c 54                	rex.WR push rsp
    4a1f:	33 32                	xor    esi,DWORD PTR [rdx]
    4a21:	58                   	pop    rax
    4a22:	5f                   	pop    rdi
    4a23:	4d                   	rex.WRB
    4a24:	41 58                	pop    r8
    4a26:	5f                   	pop    rdi
    4a27:	31 30                	xor    DWORD PTR [rax],esi
    4a29:	5f                   	pop    rdi
    4a2a:	45 58                	rex.RB pop r8
    4a2c:	50                   	push   rax
    4a2d:	5f                   	pop    rdi
    4a2e:	5f                   	pop    rdi
    4a2f:	20 33                	and    BYTE PTR [rbx],dh
    4a31:	30 38                	xor    BYTE PTR [rax],bh
    4a33:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4a36:	61                   	(bad)  
    4a37:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a38:	64 36 34 20          	fs ss xor al,0x20
    4a3c:	31 00                	xor    DWORD PTR [rax],eax
    4a3e:	5f                   	pop    rdi
    4a3f:	5f                   	pop    rdi
    4a40:	57                   	push   rdi
    4a41:	4f 52                	rex.WRXB push r10
    4a43:	44 53                	rex.R push rbx
    4a45:	49 5a                	rex.WB pop r10
    4a47:	45 20 36             	and    BYTE PTR [r14],r14b
    4a4a:	34 00                	xor    al,0x0
    4a4c:	5f                   	pop    rdi
    4a4d:	5f                   	pop    rdi
    4a4e:	75 6e                	jne    4abe <__FRAME_END__+0x40ba>
    4a50:	69 78 20 31 00 5f 63 	imul   edi,DWORD PTR [rax+0x20],0x635f0031
    4a57:	68 61 69 6e 00       	push   0x6e6961
    4a5c:	5f                   	pop    rdi
    4a5d:	5f                   	pop    rdi
    4a5e:	46                   	rex.RX
    4a5f:	4c 54                	rex.WR push rsp
    4a61:	36 34 5f             	ss xor al,0x5f
    4a64:	44                   	rex.R
    4a65:	45                   	rex.RB
    4a66:	4e                   	rex.WRX
    4a67:	4f 52                	rex.WRXB push r10
    4a69:	4d 5f                	rex.WRB pop r15
    4a6b:	4d                   	rex.WRB
    4a6c:	49                   	rex.WB
    4a6d:	4e 5f                	rex.WRX pop rdi
    4a6f:	5f                   	pop    rdi
    4a70:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
    4a73:	39 34 30             	cmp    DWORD PTR [rax+rsi*1],esi
    4a76:	36 35 36 34 35 38    	ss xor eax,0x38353436
    4a7c:	34 31                	xor    al,0x31
    4a7e:	32 34 36             	xor    dh,BYTE PTR [rsi+rsi*1]
    4a81:	35 34 34 31 37       	xor    eax,0x37313434
    4a86:	36 35 36 38 37 39    	ss xor eax,0x39373836
    4a8c:	32 38                	xor    bh,BYTE PTR [rax]
    4a8e:	36 38 32             	cmp    BYTE PTR ss:[rdx],dh
    4a91:	32 31                	xor    dh,BYTE PTR [rcx]
    4a93:	33 37                	xor    esi,DWORD PTR [rdi]
    4a95:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4a98:	33 32                	xor    esi,DWORD PTR [rdx]
    4a9a:	34 46                	xor    al,0x46
    4a9c:	36 34 00             	ss xor al,0x0
    4a9f:	4c 5f                	rex.WR pop rdi
    4aa1:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    4aa5:	6d                   	ins    DWORD PTR es:[rdi],dx
    4aa6:	69 64 20 39 00 5f 5f 	imul   esp,DWORD PTR [rax+riz*1+0x39],0x505f5f00
    4aad:	50 
    4aae:	54                   	push   rsp
    4aaf:	52                   	push   rdx
    4ab0:	44                   	rex.R
    4ab1:	49                   	rex.WB
    4ab2:	46                   	rex.RX
    4ab3:	46 5f                	rex.RX pop rdi
    4ab5:	54                   	push   rsp
    4ab6:	59                   	pop    rcx
    4ab7:	50                   	push   rax
    4ab8:	45 5f                	rex.RB pop r15
    4aba:	5f                   	pop    rdi
    4abb:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4abf:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    4ac3:	74 00                	je     4ac5 <__FRAME_END__+0x40c1>
    4ac5:	5f                   	pop    rdi
    4ac6:	5f                   	pop    rdi
    4ac7:	46                   	rex.RX
    4ac8:	4c 54                	rex.WR push rsp
    4aca:	33 32                	xor    esi,DWORD PTR [rdx]
    4acc:	5f                   	pop    rdi
    4acd:	4d                   	rex.WRB
    4ace:	41 58                	pop    r8
    4ad0:	5f                   	pop    rdi
    4ad1:	31 30                	xor    DWORD PTR [rax],esi
    4ad3:	5f                   	pop    rdi
    4ad4:	45 58                	rex.RB pop r8
    4ad6:	50                   	push   rax
    4ad7:	5f                   	pop    rdi
    4ad8:	5f                   	pop    rdi
    4ad9:	20 33                	and    BYTE PTR [rbx],dh
    4adb:	38 00                	cmp    BYTE PTR [rax],al
    4add:	5f                   	pop    rdi
    4ade:	5f                   	pop    rdi
    4adf:	57                   	push   rdi
    4ae0:	4f 52                	rex.WRXB push r10
    4ae2:	44 53                	rex.R push rbx
    4ae4:	49 5a                	rex.WB pop r10
    4ae6:	45 5f                	rex.RB pop r15
    4ae8:	54                   	push   rsp
    4ae9:	49                   	rex.WB
    4aea:	4d                   	rex.WRB
    4aeb:	45                   	rex.RB
    4aec:	36 34 5f             	ss xor al,0x5f
    4aef:	43                   	rex.XB
    4af0:	4f                   	rex.WRXB
    4af1:	4d 50                	rex.WRB push r8
    4af3:	41 54                	push   r12
    4af5:	33 32                	xor    esi,DWORD PTR [rdx]
    4af7:	20 31                	and    BYTE PTR [rcx],dh
    4af9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4afc:	46                   	rex.RX
    4afd:	4c 54                	rex.WR push rsp
    4aff:	31 32                	xor    DWORD PTR [rdx],esi
    4b01:	38 5f 44             	cmp    BYTE PTR [rdi+0x44],bl
    4b04:	45                   	rex.RB
    4b05:	43                   	rex.XB
    4b06:	49                   	rex.WB
    4b07:	4d                   	rex.WRB
    4b08:	41                   	rex.B
    4b09:	4c 5f                	rex.WR pop rdi
    4b0b:	44                   	rex.R
    4b0c:	49                   	rex.WB
    4b0d:	47 5f                	rex.RXB pop r15
    4b0f:	5f                   	pop    rdi
    4b10:	20 33                	and    BYTE PTR [rbx],dh
    4b12:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4b16:	50                   	push   rax
    4b17:	54                   	push   rsp
    4b18:	52                   	push   rdx
    4b19:	44                   	rex.R
    4b1a:	49                   	rex.WB
    4b1b:	46                   	rex.RX
    4b1c:	46 5f                	rex.RX pop rdi
    4b1e:	57                   	push   rdi
    4b1f:	49                   	rex.WB
    4b20:	44 54                	rex.R push rsp
    4b22:	48 5f                	rex.W pop rdi
    4b24:	5f                   	pop    rdi
    4b25:	20 36                	and    BYTE PTR [rsi],dh
    4b27:	34 00                	xor    al,0x0
    4b29:	5f                   	pop    rdi
    4b2a:	5f                   	pop    rdi
    4b2b:	49                   	rex.WB
    4b2c:	4e 54                	rex.WRX push rsp
    4b2e:	5f                   	pop    rdi
    4b2f:	4c                   	rex.WR
    4b30:	45                   	rex.RB
    4b31:	41 53                	push   r11
    4b33:	54                   	push   rsp
    4b34:	33 32                	xor    esi,DWORD PTR [rdx]
    4b36:	5f                   	pop    rdi
    4b37:	4d                   	rex.WRB
    4b38:	41 58                	pop    r8
    4b3a:	5f                   	pop    rdi
    4b3b:	5f                   	pop    rdi
    4b3c:	20 30                	and    BYTE PTR [rax],dh
    4b3e:	78 37                	js     4b77 <__FRAME_END__+0x4173>
    4b40:	66 66 66 66 66 66 66 	data16 data16 data16 data16 data16 data16 data16 add BYTE PTR [rdi+0x5f],bl
    4b47:	00 5f 5f 
    4b4a:	55                   	push   rbp
    4b4b:	49                   	rex.WB
    4b4c:	4e 54                	rex.WRX push rsp
    4b4e:	5f                   	pop    rdi
    4b4f:	46                   	rex.RX
    4b50:	41 53                	push   r11
    4b52:	54                   	push   rsp
    4b53:	36 34 5f             	ss xor al,0x5f
    4b56:	54                   	push   rsp
    4b57:	59                   	pop    rcx
    4b58:	50                   	push   rax
    4b59:	45 5f                	rex.RB pop r15
    4b5b:	5f                   	pop    rdi
    4b5c:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    4b60:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    4b64:	73 69                	jae    4bcf <__FRAME_END__+0x41cb>
    4b66:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4b68:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4b6d:	74 00                	je     4b6f <__FRAME_END__+0x416b>
    4b6f:	5f                   	pop    rdi
    4b70:	5f                   	pop    rdi
    4b71:	73 74                	jae    4be7 <__FRAME_END__+0x41e3>
    4b73:	75 62                	jne    4bd7 <__FRAME_END__+0x41d3>
    4b75:	5f                   	pop    rdi
    4b76:	73 73                	jae    4beb <__FRAME_END__+0x41e7>
    4b78:	74 6b                	je     4be5 <__FRAME_END__+0x41e1>
    4b7a:	20 00                	and    BYTE PTR [rax],al
    4b7c:	5f                   	pop    rdi
    4b7d:	49                   	rex.WB
    4b7e:	4f 5f                	rex.WRXB pop r15
    4b80:	66 70 6f             	data16 jo 4bf2 <__FRAME_END__+0x41ee>
    4b83:	73 36                	jae    4bbb <__FRAME_END__+0x41b7>
    4b85:	34 5f                	xor    al,0x5f
    4b87:	74 20                	je     4ba9 <__FRAME_END__+0x41a5>
    4b89:	5f                   	pop    rdi
    4b8a:	47 5f                	rex.RXB pop r15
    4b8c:	66 70 6f             	data16 jo 4bfe <__FRAME_END__+0x41fa>
    4b8f:	73 36                	jae    4bc7 <__FRAME_END__+0x41c3>
    4b91:	34 5f                	xor    al,0x5f
    4b93:	74 00                	je     4b95 <__FRAME_END__+0x4191>
    4b95:	5f                   	pop    rdi
    4b96:	5f                   	pop    rdi
    4b97:	54                   	push   rsp
    4b98:	48 52                	rex.W push rdx
    4b9a:	4f 57                	rex.WRXB push r15
    4b9c:	4e                   	rex.WRX
    4b9d:	4c 20 5f 5f          	rex.WR and BYTE PTR [rdi+0x5f],r11b
    4ba1:	61                   	(bad)  
    4ba2:	74 74                	je     4c18 <__FRAME_END__+0x4214>
    4ba4:	72 69                	jb     4c0f <__FRAME_END__+0x420b>
    4ba6:	62                   	(bad)  
    4ba7:	75 74                	jne    4c1d <__FRAME_END__+0x4219>
    4ba9:	65 5f                	gs pop rdi
    4bab:	5f                   	pop    rdi
    4bac:	20 28                	and    BYTE PTR [rax],ch
    4bae:	28 5f 5f             	sub    BYTE PTR [rdi+0x5f],bl
    4bb1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4bb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4bb3:	74 68                	je     4c1d <__FRAME_END__+0x4219>
    4bb5:	72 6f                	jb     4c26 <__FRAME_END__+0x4222>
    4bb7:	77 5f                	ja     4c18 <__FRAME_END__+0x4214>
    4bb9:	5f                   	pop    rdi
    4bba:	29 29                	sub    DWORD PTR [rcx],ebp
    4bbc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bbf:	4c                   	rex.WR
    4bc0:	44                   	rex.R
    4bc1:	42                   	rex.X
    4bc2:	4c 5f                	rex.WR pop rdi
    4bc4:	4d                   	rex.WRB
    4bc5:	41 58                	pop    r8
    4bc7:	5f                   	pop    rdi
    4bc8:	31 30                	xor    DWORD PTR [rax],esi
    4bca:	5f                   	pop    rdi
    4bcb:	45 58                	rex.RB pop r8
    4bcd:	50                   	push   rax
    4bce:	5f                   	pop    rdi
    4bcf:	5f                   	pop    rdi
    4bd0:	20 34 39             	and    BYTE PTR [rcx+rdi*1],dh
    4bd3:	33 32                	xor    esi,DWORD PTR [rdx]
    4bd5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4bd8:	44                   	rex.R
    4bd9:	45                   	rex.RB
    4bda:	43                   	rex.XB
    4bdb:	36 34 5f             	ss xor al,0x5f
    4bde:	4d                   	rex.WRB
    4bdf:	49                   	rex.WB
    4be0:	4e 5f                	rex.WRX pop rdi
    4be2:	5f                   	pop    rdi
    4be3:	20 31                	and    BYTE PTR [rcx],dh
    4be5:	45 2d 33 38 33 44    	rex.RB sub eax,0x44333833
    4beb:	44 00 5f 5f          	add    BYTE PTR [rdi+0x5f],r11b
    4bef:	46                   	rex.RX
    4bf0:	4c 54                	rex.WR push rsp
    4bf2:	33 32                	xor    esi,DWORD PTR [rdx]
    4bf4:	5f                   	pop    rdi
    4bf5:	4d                   	rex.WRB
    4bf6:	41 58                	pop    r8
    4bf8:	5f                   	pop    rdi
    4bf9:	5f                   	pop    rdi
    4bfa:	20 33                	and    BYTE PTR [rbx],dh
    4bfc:	2e 34 30             	cs xor al,0x30
    4bff:	32 38                	xor    bh,BYTE PTR [rax]
    4c01:	32 33                	xor    dh,BYTE PTR [rbx]
    4c03:	34 36                	xor    al,0x36
    4c05:	36 33 38             	xor    edi,DWORD PTR ss:[rax]
    4c08:	35 32 38 38 35       	xor    eax,0x35383832
    4c0d:	39 38                	cmp    DWORD PTR [rax],edi
    4c0f:	31 31                	xor    DWORD PTR [rcx],esi
    4c11:	37                   	(bad)  
    4c12:	30 34 31             	xor    BYTE PTR [rcx+rsi*1],dh
    4c15:	38 33                	cmp    BYTE PTR [rbx],dh
    4c17:	34 38                	xor    al,0x38
    4c19:	34 35                	xor    al,0x35
    4c1b:	31 36                	xor    DWORD PTR [rsi],esi
    4c1d:	39 32                	cmp    DWORD PTR [rdx],esi
    4c1f:	35 65 2b 33 38       	xor    eax,0x38332b65
    4c24:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    4c27:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c2a:	44                   	rex.R
    4c2b:	42                   	rex.X
    4c2c:	4c 5f                	rex.WR pop rdi
    4c2e:	45 50                	rex.RB push r8
    4c30:	53                   	push   rbx
    4c31:	49                   	rex.WB
    4c32:	4c                   	rex.WR
    4c33:	4f                   	rex.WRXB
    4c34:	4e 5f                	rex.WRX pop rdi
    4c36:	5f                   	pop    rdi
    4c37:	20 28                	and    BYTE PTR [rax],ch
    4c39:	28 64 6f 75          	sub    BYTE PTR [rdi+rbp*2+0x75],ah
    4c3d:	62                   	(bad)  
    4c3e:	6c                   	ins    BYTE PTR es:[rdi],dx
    4c3f:	65 29 32             	sub    DWORD PTR gs:[rdx],esi
    4c42:	2e 32 32             	xor    dh,BYTE PTR cs:[rdx]
    4c45:	30 34 34             	xor    BYTE PTR [rsp+rsi*1],dh
    4c48:	36 30 34 39          	xor    BYTE PTR ss:[rcx+rdi*1],dh
    4c4c:	32 35 30 33 31 33    	xor    dh,BYTE PTR [rip+0x33313330]        # 33317f82 <_end+0x33116f6a>
    4c52:	30 38                	xor    BYTE PTR [rax],bh
    4c54:	30 38                	xor    BYTE PTR [rax],bh
    4c56:	34 37                	xor    al,0x37
    4c58:	32 36                	xor    dh,BYTE PTR [rsi]
    4c5a:	33 33                	xor    esi,DWORD PTR [rbx]
    4c5c:	33 36                	xor    esi,DWORD PTR [rsi]
    4c5e:	31 38                	xor    DWORD PTR [rax],edi
    4c60:	31 36                	xor    DWORD PTR [rsi],esi
    4c62:	34 30                	xor    al,0x30
    4c64:	36 32 65 2d          	xor    ah,BYTE PTR ss:[rbp+0x2d]
    4c68:	31 36                	xor    DWORD PTR [rsi],esi
    4c6a:	4c 29 00             	sub    QWORD PTR [rax],r8
    4c6d:	5f                   	pop    rdi
    4c6e:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    4c71:	5f                   	pop    rdi
    4c72:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    4c75:	75 6d                	jne    4ce4 <__FRAME_END__+0x42e0>
    4c77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4c78:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c7b:	50                   	push   rax
    4c7c:	52                   	push   rdx
    4c7d:	41                   	rex.B
    4c7e:	47                   	rex.RXB
    4c7f:	4d                   	rex.WRB
    4c80:	41 5f                	pop    r15
    4c82:	52                   	push   rdx
    4c83:	45                   	rex.RB
    4c84:	44                   	rex.R
    4c85:	45                   	rex.RB
    4c86:	46                   	rex.RX
    4c87:	49                   	rex.WB
    4c88:	4e                   	rex.WRX
    4c89:	45 5f                	rex.RB pop r15
    4c8b:	45 58                	rex.RB pop r8
    4c8d:	54                   	push   rsp
    4c8e:	4e                   	rex.WRX
    4c8f:	41                   	rex.B
    4c90:	4d                   	rex.WRB
    4c91:	45 20 31             	and    BYTE PTR [r9],r14b
    4c94:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4c97:	53                   	push   rbx
    4c98:	49                   	rex.WB
    4c99:	47 5f                	rex.RXB pop r15
    4c9b:	41 54                	push   r12
    4c9d:	4f                   	rex.WRXB
    4c9e:	4d                   	rex.WRB
    4c9f:	49                   	rex.WB
    4ca0:	43 5f                	rex.XB pop r15
    4ca2:	54                   	push   rsp
    4ca3:	59                   	pop    rcx
    4ca4:	50                   	push   rax
    4ca5:	45 5f                	rex.RB pop r15
    4ca7:	5f                   	pop    rdi
    4ca8:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    4cab:	74 00                	je     4cad <__FRAME_END__+0x42a9>
    4cad:	5f                   	pop    rdi
    4cae:	5f                   	pop    rdi
    4caf:	46                   	rex.RX
    4cb0:	4c 54                	rex.WR push rsp
    4cb2:	36 34 58             	ss xor al,0x58
    4cb5:	5f                   	pop    rdi
    4cb6:	44                   	rex.R
    4cb7:	45                   	rex.RB
    4cb8:	4e                   	rex.WRX
    4cb9:	4f 52                	rex.WRXB push r10
    4cbb:	4d 5f                	rex.WRB pop r15
    4cbd:	4d                   	rex.WRB
    4cbe:	49                   	rex.WB
    4cbf:	4e 5f                	rex.WRX pop rdi
    4cc1:	5f                   	pop    rdi
    4cc2:	20 33                	and    BYTE PTR [rbx],dh
    4cc4:	2e 36 34 35          	cs ss xor al,0x35
    4cc8:	31 39                	xor    DWORD PTR [rcx],edi
    4cca:	39 35 33 31 38 38    	cmp    DWORD PTR [rip+0x38383133],esi        # 38387e03 <_end+0x38186deb>
    4cd0:	32 34 37             	xor    dh,BYTE PTR [rdi+rsi*1]
    4cd3:	34 36                	xor    al,0x36
    4cd5:	30 32                	xor    BYTE PTR [rdx],dh
    4cd7:	35 32 38 34 30       	xor    eax,0x30343832
    4cdc:	35 39 33 33 36       	xor    eax,0x36333339
    4ce1:	31 39                	xor    DWORD PTR [rcx],edi
    4ce3:	34 31                	xor    al,0x31
    4ce5:	39 38                	cmp    DWORD PTR [rax],edi
    4ce7:	32 65 2d             	xor    ah,BYTE PTR [rbp+0x2d]
    4cea:	34 39                	xor    al,0x39
    4cec:	35 31 46 36 34       	xor    eax,0x34364631
    4cf1:	78 00                	js     4cf3 <__FRAME_END__+0x42ef>
    4cf3:	5f                   	pop    rdi
    4cf4:	5f                   	pop    rdi
    4cf5:	55                   	push   rbp
    4cf6:	53                   	push   rbx
    4cf7:	45 5f                	rex.RB pop r15
    4cf9:	50                   	push   rax
    4cfa:	4f 53                	rex.WRXB push r11
    4cfc:	49 58                	rex.WB pop r8
    4cfe:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d01:	46                   	rex.RX
    4d02:	4c 54                	rex.WR push rsp
    4d04:	31 32                	xor    DWORD PTR [rdx],esi
    4d06:	38 5f 48             	cmp    BYTE PTR [rdi+0x48],bl
    4d09:	41 53                	push   r11
    4d0b:	5f                   	pop    rdi
    4d0c:	44                   	rex.R
    4d0d:	45                   	rex.RB
    4d0e:	4e                   	rex.WRX
    4d0f:	4f 52                	rex.WRXB push r10
    4d11:	4d 5f                	rex.WRB pop r15
    4d13:	5f                   	pop    rdi
    4d14:	20 31                	and    BYTE PTR [rcx],dh
    4d16:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    4d19:	4f 5f                	rex.WRXB pop r15
    4d1b:	43 55                	rex.XB push r13
    4d1d:	52                   	push   rdx
    4d1e:	52                   	push   rdx
    4d1f:	45                   	rex.RB
    4d20:	4e 54                	rex.WRX push rsp
    4d22:	4c 59                	rex.WR pop rcx
    4d24:	5f                   	pop    rdi
    4d25:	50                   	push   rax
    4d26:	55                   	push   rbp
    4d27:	54                   	push   rsp
    4d28:	54                   	push   rsp
    4d29:	49                   	rex.WB
    4d2a:	4e                   	rex.WRX
    4d2b:	47 20 30             	rex.RXB and BYTE PTR [r8],r14b
    4d2e:	78 38                	js     4d68 <__FRAME_END__+0x4364>
    4d30:	30 30                	xor    BYTE PTR [rax],dh
    4d32:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d35:	44                   	rex.R
    4d36:	42                   	rex.X
    4d37:	4c 5f                	rex.WR pop rdi
    4d39:	44                   	rex.R
    4d3a:	45                   	rex.RB
    4d3b:	43                   	rex.XB
    4d3c:	49                   	rex.WB
    4d3d:	4d                   	rex.WRB
    4d3e:	41                   	rex.B
    4d3f:	4c 5f                	rex.WR pop rdi
    4d41:	44                   	rex.R
    4d42:	49                   	rex.WB
    4d43:	47 5f                	rex.RXB pop r15
    4d45:	5f                   	pop    rdi
    4d46:	20 31                	and    BYTE PTR [rcx],dh
    4d48:	37                   	(bad)  
    4d49:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d4c:	4c                   	rex.WR
    4d4d:	44                   	rex.R
    4d4e:	42                   	rex.X
    4d4f:	4c 5f                	rex.WR pop rdi
    4d51:	48                   	rex.W
    4d52:	41 53                	push   r11
    4d54:	5f                   	pop    rdi
    4d55:	44                   	rex.R
    4d56:	45                   	rex.RB
    4d57:	4e                   	rex.WRX
    4d58:	4f 52                	rex.WRXB push r10
    4d5a:	4d 5f                	rex.WRB pop r15
    4d5c:	5f                   	pop    rdi
    4d5d:	20 31                	and    BYTE PTR [rcx],dh
    4d5f:	00 5f 75             	add    BYTE PTR [rdi+0x75],bl
    4d62:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d63:	75 73                	jne    4dd8 <__FRAME_END__+0x43d4>
    4d65:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    4d69:	5f                   	pop    rdi
    4d6a:	49                   	rex.WB
    4d6b:	4f 5f                	rex.WRXB pop r15
    4d6d:	62                   	(bad)  
    4d6e:	75 66                	jne    4dd6 <__FRAME_END__+0x43d2>
    4d70:	5f                   	pop    rdi
    4d71:	62 61                	(bad)  
    4d73:	73 65                	jae    4dda <__FRAME_END__+0x43d6>
    4d75:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4d78:	73 74                	jae    4dee <__FRAME_END__+0x43ea>
    4d7a:	75 62                	jne    4dde <__FRAME_END__+0x43da>
    4d7c:	5f                   	pop    rdi
    4d7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    4d7e:	63 68 6d             	movsxd ebp,DWORD PTR [rax+0x6d]
    4d81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d82:	64 20 00             	and    BYTE PTR fs:[rax],al
    4d85:	5f                   	pop    rdi
    4d86:	5f                   	pop    rdi
    4d87:	46                   	rex.RX
    4d88:	4c 54                	rex.WR push rsp
    4d8a:	36 34 5f             	ss xor al,0x5f
    4d8d:	4d                   	rex.WRB
    4d8e:	41                   	rex.B
    4d8f:	4e 54                	rex.WRX push rsp
    4d91:	5f                   	pop    rdi
    4d92:	44                   	rex.R
    4d93:	49                   	rex.WB
    4d94:	47 5f                	rex.RXB pop r15
    4d96:	5f                   	pop    rdi
    4d97:	20 35 33 00 5f 5f    	and    BYTE PTR [rip+0x5f5f0033],dh        # 5f5f4dd0 <_end+0x5f3f3db8>
    4d9d:	44                   	rex.R
    4d9e:	45                   	rex.RB
    4d9f:	43                   	rex.XB
    4da0:	36 34 5f             	ss xor al,0x5f
    4da3:	4d                   	rex.WRB
    4da4:	41                   	rex.B
    4da5:	4e 54                	rex.WRX push rsp
    4da7:	5f                   	pop    rdi
    4da8:	44                   	rex.R
    4da9:	49                   	rex.WB
    4daa:	47 5f                	rex.RXB pop r15
    4dac:	5f                   	pop    rdi
    4dad:	20 31                	and    BYTE PTR [rcx],dh
    4daf:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
    4db3:	46                   	rex.RX
    4db4:	4c 54                	rex.WR push rsp
    4db6:	5f                   	pop    rdi
    4db7:	48                   	rex.W
    4db8:	41 53                	push   r11
    4dba:	5f                   	pop    rdi
    4dbb:	44                   	rex.R
    4dbc:	45                   	rex.RB
    4dbd:	4e                   	rex.WRX
    4dbe:	4f 52                	rex.WRXB push r10
    4dc0:	4d 5f                	rex.WRB pop r15
    4dc2:	5f                   	pop    rdi
    4dc3:	20 31                	and    BYTE PTR [rcx],dh
    4dc5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    4dc8:	44                   	rex.R
    4dc9:	45                   	rex.RB
    4dca:	43                   	rex.XB
    4dcb:	49                   	rex.WB
    4dcc:	4d                   	rex.WRB
    4dcd:	41                   	rex.B
    4dce:	4c 5f                	rex.WR pop rdi
    4dd0:	44                   	rex.R
    4dd1:	49                   	rex.WB
    4dd2:	47 5f                	rex.RXB pop r15
    4dd4:	5f                   	pop    rdi
    4dd5:	20 32                	and    BYTE PTR [rdx],dh
    4dd7:	31 00                	xor    DWORD PTR [rax],eax

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
       0:	04 00                	add    al,0x0
       2:	02 00                	add    al,BYTE PTR [rax]
       4:	00 00                	add    BYTE PTR [rax],al
       6:	00 07                	add    BYTE PTR [rdi],al
       8:	0f 01 00             	sgdt   [rax]
       b:	00 03                	add    BYTE PTR [rbx],al
       d:	00 01                	add    BYTE PTR [rcx],al
       f:	03 1f                	add    ebx,DWORD PTR [rdi]
      11:	07                   	(bad)  
      12:	07                   	(bad)  
      13:	17                   	(bad)  
      14:	09 00                	or     DWORD PTR [rax],eax
      16:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      19:	01 05 07 39 09 00    	add    DWORD PTR [rip+0x93907],eax        # 93926 <__FRAME_END__+0x92f22>
      1f:	00 03                	add    BYTE PTR [rbx],al
      21:	1b 08                	sbb    ecx,DWORD PTR [rax]
      23:	06                   	(bad)  
      24:	1f                   	(bad)  
      25:	49                   	rex.WB
      26:	45 00 00             	add    BYTE PTR [r8],r8b
      29:	03 21                	add    esp,DWORD PTR [rcx]
      2b:	09 07                	or     DWORD PTR [rdi],eax
      2d:	49 09 00             	or     QWORD PTR [r8],rax
      30:	00 03                	add    BYTE PTR [rbx],al
      32:	a8 03                	test   al,0x3
      34:	0a 07                	or     al,BYTE PTR [rdi]
      36:	e7 0a                	out    0xa,eax
      38:	00 00                	add    BYTE PTR [rax],al
      3a:	03 ab 03 0b 07 4f    	add    ebp,DWORD PTR [rbx+0x4f070b03]
      40:	0c 00                	or     al,0x0
      42:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      45:	ac                   	lods   al,BYTE PTR ds:[rsi]
      46:	03 0c 04             	add    ecx,DWORD PTR [rsp+rax*1]
      49:	07                   	(bad)  
      4a:	65 0c 00             	gs or  al,0x0
      4d:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      50:	c0 03 0d             	rol    BYTE PTR [rbx],0xd
      53:	03 0a                	add    ecx,DWORD PTR [rdx]
      55:	0e                   	(bad)  
      56:	07                   	(bad)  
      57:	af                   	scas   eax,DWORD PTR es:[rdi]
      58:	0c 00                	or     al,0x0
      5a:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
      5d:	04 07                	add    al,0x7
      5f:	07                   	(bad)  
      60:	0d 00 00 04 07       	or     eax,0x7040000
      65:	3b 0d 00 00 03 21    	cmp    ecx,DWORD PTR [rip+0x21030000]        # 2103006b <_end+0x20e2f053>
      6b:	02 07                	add    al,BYTE PTR [rdi]
      6d:	4b 0d 00 00 04 03    	rex.WXB or rax,0x3040000
      73:	23 03                	and    eax,DWORD PTR [rbx]
      75:	05 18 bd 14 00       	add    eax,0x14bd18
      7a:	00 03                	add    BYTE PTR [rbx],al
      7c:	1b 0b                	sbb    ecx,DWORD PTR [rbx]
      7e:	07                   	(bad)  
      7f:	4f 0c 00             	rex.WRXB or al,0x0
      82:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      85:	e2 0d                	loop   94 <_init-0x54c>
      87:	00 00                	add    BYTE PTR [rax],al
      89:	03 82 01 0f 07 40    	add    eax,DWORD PTR [rdx+0x40070f01]
      8f:	0e                   	(bad)  
      90:	00 00                	add    BYTE PTR [rax],al
      92:	04 06                	add    al,0x6
      94:	cc                   	int3   
      95:	01 95 28 00 00 04    	add    DWORD PTR [rbp+0x4000028],edx
      9b:	03 24 10             	add    esp,DWORD PTR [rax+rdx*1]
      9e:	05 02 2a 2c 00       	add    eax,0x2c2a02
      a3:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
      a6:	25 11 05 02 2c       	and    eax,0x2c020511
      ab:	2c 00                	sub    al,0x0
      ad:	00 04 05 27 8d 2a 00 	add    BYTE PTR [rax*1+0x2a8d27],al
      b4:	00 03                	add    BYTE PTR [rbx],al
      b6:	29 04 05 1d 10 11 00 	sub    DWORD PTR [rax*1+0x11101d],eax
      bd:	00 03                	add    BYTE PTR [rbx],al
      bf:	23 12                	and    edx,DWORD PTR [rdx]
      c1:	07                   	(bad)  
      c2:	2e 0f 00 00          	sldt   WORD PTR cs:[rax]
      c6:	03 13                	add    edx,DWORD PTR [rbx]
      c8:	02 07                	add    al,BYTE PTR [rdi]
      ca:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
      ce:	04 03                	add    al,0x3
      d0:	15 13 05 02 ed       	adc    eax,0xed020513
      d5:	1a 00                	sbb    al,BYTE PTR [rax]
      d7:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      da:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
      de:	04 07                	add    al,0x7
      e0:	8c 0f                	mov    WORD PTR [rdi],cs
      e2:	00 00                	add    BYTE PTR [rax],al
      e4:	03 35 14 07 e4 0f    	add    esi,DWORD PTR [rip+0xfe40714]        # fe407fe <_end+0xfc3f7e6>
      ea:	00 00                	add    BYTE PTR [rax],al
      ec:	04 07                	add    al,0x7
      ee:	f4                   	hlt    
      ef:	0f 00 00             	sldt   WORD PTR [rax]
      f2:	04 07                	add    al,0x7
      f4:	c0 11 00             	rcl    BYTE PTR [rcx],0x0
      f7:	00 03                	add    BYTE PTR [rbx],al
      f9:	83 01 15             	add    DWORD PTR [rcx],0x15
      fc:	07                   	(bad)  
      fd:	06                   	(bad)  
      fe:	12 00                	adc    al,BYTE PTR [rax]
     100:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     103:	34 12                	xor    al,0x12
     105:	00 00                	add    BYTE PTR [rax],al
     107:	03 8d 06 06 04 04    	add    ecx,DWORD PTR [rbp+0x4040606]
     10d:	04 00                	add    al,0x0
     10f:	04 00                	add    al,0x0
     111:	00 05 00 f4 28 00    	add    BYTE PTR [rip+0x28f400],al        # 28f517 <_end+0x8e4ff>
     117:	00 05 00 c2 22 00    	add    BYTE PTR [rip+0x22c200],al        # 22c31d <_end+0x2b305>
     11d:	00 05 00 67 2b 00    	add    BYTE PTR [rip+0x2b6700],al        # 2b6823 <_end+0xb580b>
     123:	00 05 00 a3 0b 00    	add    BYTE PTR [rip+0xba300],al        # ba429 <__FRAME_END__+0xb9a25>
     129:	00 05 00 b6 3d 00    	add    BYTE PTR [rip+0x3db600],al        # 3db72f <_end+0x1da717>
     12f:	00 05 00 bb 07 00    	add    BYTE PTR [rip+0x7bb00],al        # 7bc35 <__FRAME_END__+0x7b231>
     135:	00 05 00 99 05 00    	add    BYTE PTR [rip+0x59900],al        # 59a3b <__FRAME_END__+0x59037>
     13b:	00 05 00 83 36 00    	add    BYTE PTR [rip+0x368300],al        # 368441 <_end+0x167429>
     141:	00 05 00 09 20 00    	add    BYTE PTR [rip+0x200900],al        # 200a47 <__FRAME_END__+0x200043>
     147:	00 05 00 8d 3d 00    	add    BYTE PTR [rip+0x3d8d00],al        # 3d8e4d <_end+0x1d7e35>
     14d:	00 05 00 73 09 00    	add    BYTE PTR [rip+0x97300],al        # 97453 <__FRAME_END__+0x96a4f>
     153:	00 05 00 da 2e 00    	add    BYTE PTR [rip+0x2eda00],al        # 2edb59 <_end+0xecb41>
     159:	00 05 00 5c 47 00    	add    BYTE PTR [rip+0x475c00],al        # 475d5f <_end+0x274d47>
     15f:	00 05 00 7c 40 00    	add    BYTE PTR [rip+0x407c00],al        # 407d65 <_end+0x206d4d>
     165:	00 05 00 64 29 00    	add    BYTE PTR [rip+0x296400],al        # 29656b <_end+0x95553>
     16b:	00 05 00 52 47 00    	add    BYTE PTR [rip+0x475200],al        # 475371 <_end+0x274359>
     171:	00 05 00 c6 42 00    	add    BYTE PTR [rip+0x42c600],al        # 42c777 <_end+0x22b75f>
     177:	00 05 00 c2 10 00    	add    BYTE PTR [rip+0x10c200],al        # 10c37d <__FRAME_END__+0x10b979>
     17d:	00 05 00 ec 0c 00    	add    BYTE PTR [rip+0xcec00],al        # ced83 <__FRAME_END__+0xce37f>
     183:	00 05 00 da 25 00    	add    BYTE PTR [rip+0x25da00],al        # 25db89 <_end+0x5cb71>
     189:	00 05 00 c5 24 00    	add    BYTE PTR [rip+0x24c500],al        # 24c68f <_end+0x4b677>
     18f:	00 05 00 4e 24 00    	add    BYTE PTR [rip+0x244e00],al        # 244f95 <_end+0x43f7d>
     195:	00 05 00 34 46 00    	add    BYTE PTR [rip+0x463400],al        # 46359b <_end+0x262583>
     19b:	00 05 00 52 29 00    	add    BYTE PTR [rip+0x295200],al        # 2953a1 <_end+0x94389>
     1a1:	00 05 00 0c 39 00    	add    BYTE PTR [rip+0x390c00],al        # 390da7 <_end+0x18fd8f>
     1a7:	00 05 00 a4 09 00    	add    BYTE PTR [rip+0x9a400],al        # 9a5ad <__FRAME_END__+0x99ba9>
     1ad:	00 05 00 ff 27 00    	add    BYTE PTR [rip+0x27ff00],al        # 2800b3 <_end+0x7f09b>
     1b3:	00 05 00 a3 2a 00    	add    BYTE PTR [rip+0x2aa300],al        # 2aa4b9 <_end+0xa94a1>
     1b9:	00 05 00 84 14 00    	add    BYTE PTR [rip+0x148400],al        # 1485bf <__FRAME_END__+0x147bbb>
     1bf:	00 05 00 88 07 00    	add    BYTE PTR [rip+0x78800],al        # 789c5 <__FRAME_END__+0x77fc1>
     1c5:	00 05 00 5a 3d 00    	add    BYTE PTR [rip+0x3d5a00],al        # 3d5bcb <_end+0x1d4bb3>
     1cb:	00 05 00 e5 1b 00    	add    BYTE PTR [rip+0x1be500],al        # 1be6d1 <__FRAME_END__+0x1bdccd>
     1d1:	00 05 00 26 17 00    	add    BYTE PTR [rip+0x172600],al        # 1727d7 <__FRAME_END__+0x171dd3>
     1d7:	00 05 00 a1 07 00    	add    BYTE PTR [rip+0x7a100],al        # 7a2dd <__FRAME_END__+0x798d9>
     1dd:	00 05 00 c2 31 00    	add    BYTE PTR [rip+0x31c200],al        # 31c3e3 <_end+0x11b3cb>
     1e3:	00 05 00 ad 0a 00    	add    BYTE PTR [rip+0xaad00],al        # aaee9 <__FRAME_END__+0xaa4e5>
     1e9:	00 05 00 6b 2d 00    	add    BYTE PTR [rip+0x2d6b00],al        # 2d6cef <_end+0xd5cd7>
     1ef:	00 05 00 7a 3a 00    	add    BYTE PTR [rip+0x3a7a00],al        # 3a7bf5 <_end+0x1a6bdd>
     1f5:	00 05 00 26 1e 00    	add    BYTE PTR [rip+0x1e2600],al        # 1e27fb <__FRAME_END__+0x1e1df7>
     1fb:	00 05 00 ab 4a 00    	add    BYTE PTR [rip+0x4aab00],al        # 4aad01 <_end+0x2a9ce9>
     201:	00 05 00 b4 12 00    	add    BYTE PTR [rip+0x12b400],al        # 12b607 <__FRAME_END__+0x12ac03>
     207:	00 05 00 d8 29 00    	add    BYTE PTR [rip+0x29d800],al        # 29da0d <_end+0x9c9f5>
     20d:	00 05 00 2d 48 00    	add    BYTE PTR [rip+0x482d00],al        # 482f13 <_end+0x281efb>
     213:	00 05 00 f5 2f 00    	add    BYTE PTR [rip+0x2ff500],al        # 2ff719 <_end+0xfe701>
     219:	00 05 00 07 40 00    	add    BYTE PTR [rip+0x400700],al        # 40091f <_end+0x1ff907>
     21f:	00 05 00 d9 34 00    	add    BYTE PTR [rip+0x34d900],al        # 34db25 <_end+0x14cb0d>
     225:	00 05 00 95 4c 00    	add    BYTE PTR [rip+0x4c9500],al        # 4c972b <_end+0x2c8713>
     22b:	00 05 00 0c 42 00    	add    BYTE PTR [rip+0x420c00],al        # 420e31 <_end+0x21fe19>
     231:	00 05 00 eb 08 00    	add    BYTE PTR [rip+0x8eb00],al        # 8ed37 <__FRAME_END__+0x8e333>
     237:	00 05 00 9e 17 00    	add    BYTE PTR [rip+0x179e00],al        # 17a03d <__FRAME_END__+0x179639>
     23d:	00 05 00 20 41 00    	add    BYTE PTR [rip+0x412000],al        # 412243 <_end+0x21122b>
     243:	00 05 00 6e 26 00    	add    BYTE PTR [rip+0x266e00],al        # 267049 <_end+0x66031>
     249:	00 05 00 4a 1b 00    	add    BYTE PTR [rip+0x1b4a00],al        # 1b4c4f <__FRAME_END__+0x1b424b>
     24f:	00 05 00 96 37 00    	add    BYTE PTR [rip+0x379600],al        # 379855 <_end+0x17883d>
     255:	00 05 00 d1 09 00    	add    BYTE PTR [rip+0x9d100],al        # 9d35b <__FRAME_END__+0x9c957>
     25b:	00 05 00 1a 0a 00    	add    BYTE PTR [rip+0xa1a00],al        # a1c61 <__FRAME_END__+0xa125d>
     261:	00 05 00 51 23 00    	add    BYTE PTR [rip+0x235100],al        # 235367 <_end+0x3434f>
     267:	00 05 00 d0 42 00    	add    BYTE PTR [rip+0x42d000],al        # 42d26d <_end+0x22c255>
     26d:	00 05 00 3e 0b 00    	add    BYTE PTR [rip+0xb3e00],al        # b4073 <__FRAME_END__+0xb366f>
     273:	00 05 00 8f 0d 00    	add    BYTE PTR [rip+0xd8f00],al        # d9179 <__FRAME_END__+0xd8775>
     279:	00 05 00 41 1c 00    	add    BYTE PTR [rip+0x1c4100],al        # 1c437f <__FRAME_END__+0x1c397b>
     27f:	00 05 00 44 0a 00    	add    BYTE PTR [rip+0xa4400],al        # a4685 <__FRAME_END__+0xa3c81>
     285:	00 05 00 e9 42 00    	add    BYTE PTR [rip+0x42e900],al        # 42eb8b <_end+0x22db73>
     28b:	00 05 00 cd 0c 00    	add    BYTE PTR [rip+0xccd00],al        # ccf91 <__FRAME_END__+0xcc58d>
     291:	00 05 00 61 46 00    	add    BYTE PTR [rip+0x466100],al        # 466397 <_end+0x26537f>
     297:	00 05 00 b3 26 00    	add    BYTE PTR [rip+0x26b300],al        # 26b59d <_end+0x6a585>
     29d:	00 05 00 63 22 00    	add    BYTE PTR [rip+0x226300],al        # 2265a3 <_end+0x2558b>
     2a3:	00 05 00 18 36 00    	add    BYTE PTR [rip+0x361800],al        # 361aa9 <_end+0x160a91>
     2a9:	00 05 00 58 3c 00    	add    BYTE PTR [rip+0x3c5800],al        # 3c5aaf <_end+0x1c4a97>
     2af:	00 05 00 35 39 00    	add    BYTE PTR [rip+0x393500],al        # 3937b5 <_end+0x19279d>
     2b5:	00 05 00 48 4b 00    	add    BYTE PTR [rip+0x4b4800],al        # 4b4abb <_end+0x2b3aa3>
     2bb:	00 05 00 0c 16 00    	add    BYTE PTR [rip+0x160c00],al        # 160ec1 <__FRAME_END__+0x1604bd>
     2c1:	00 05 00 b1 27 00    	add    BYTE PTR [rip+0x27b100],al        # 27b3c7 <_end+0x7a3af>
     2c7:	00 05 00 2c 3e 00    	add    BYTE PTR [rip+0x3e2c00],al        # 3e2ecd <_end+0x1e1eb5>
     2cd:	00 05 00 a1 03 00    	add    BYTE PTR [rip+0x3a100],al        # 3a3d3 <__FRAME_END__+0x399cf>
     2d3:	00 05 00 3b 47 00    	add    BYTE PTR [rip+0x473b00],al        # 473dd9 <_end+0x272dc1>
     2d9:	00 05 00 5a 0c 00    	add    BYTE PTR [rip+0xc5a00],al        # c5cdf <__FRAME_END__+0xc52db>
     2df:	00 05 00 2b 31 00    	add    BYTE PTR [rip+0x312b00],al        # 312de5 <_end+0x111dcd>
     2e5:	00 05 00 8c 08 00    	add    BYTE PTR [rip+0x88c00],al        # 88eeb <__FRAME_END__+0x884e7>
     2eb:	00 05 00 1d 34 00    	add    BYTE PTR [rip+0x341d00],al        # 341ff1 <_end+0x140fd9>
     2f1:	00 05 00 fe 1b 00    	add    BYTE PTR [rip+0x1bfe00],al        # 1c00f7 <__FRAME_END__+0x1bf6f3>
     2f7:	00 05 00 0c 3b 00    	add    BYTE PTR [rip+0x3b0c00],al        # 3b0efd <_end+0x1afee5>
     2fd:	00 05 00 5c 0b 00    	add    BYTE PTR [rip+0xb5c00],al        # b5f03 <__FRAME_END__+0xb54ff>
     303:	00 05 00 99 36 00    	add    BYTE PTR [rip+0x369900],al        # 369c09 <_end+0x168bf1>
     309:	00 05 00 1f 2b 00    	add    BYTE PTR [rip+0x2b1f00],al        # 2b220f <_end+0xb11f7>
     30f:	00 05 00 1b 23 00    	add    BYTE PTR [rip+0x231b00],al        # 231e15 <_end+0x30dfd>
     315:	00 05 00 0a 44 00    	add    BYTE PTR [rip+0x440a00],al        # 440d1b <_end+0x23fd03>
     31b:	00 05 00 4a 2a 00    	add    BYTE PTR [rip+0x2a4a00],al        # 2a4d21 <_end+0xa3d09>
     321:	00 05 00 5c 39 00    	add    BYTE PTR [rip+0x395c00],al        # 395f27 <_end+0x194f0f>
     327:	00 05 00 a8 3b 00    	add    BYTE PTR [rip+0x3ba800],al        # 3bab2d <_end+0x1b9b15>
     32d:	00 05 00 48 3f 00    	add    BYTE PTR [rip+0x3f4800],al        # 3f4b33 <_end+0x1f3b1b>
     333:	00 05 00 b1 06 00    	add    BYTE PTR [rip+0x6b100],al        # 6b439 <__FRAME_END__+0x6aa35>
     339:	00 05 00 a9 1b 00    	add    BYTE PTR [rip+0x1ba900],al        # 1bac3f <__FRAME_END__+0x1ba23b>
     33f:	00 05 00 ee 32 00    	add    BYTE PTR [rip+0x32ee00],al        # 32f145 <_end+0x12e12d>
     345:	00 05 00 14 4b 00    	add    BYTE PTR [rip+0x4b1400],al        # 4b174b <_end+0x2b0733>
     34b:	00 05 00 c8 3d 00    	add    BYTE PTR [rip+0x3dc800],al        # 3dcb51 <_end+0x1dbb39>
     351:	00 05 00 ed 10 00    	add    BYTE PTR [rip+0x10ed00],al        # 10f057 <__FRAME_END__+0x10e653>
     357:	00 05 00 dc 39 00    	add    BYTE PTR [rip+0x39dc00],al        # 39df5d <_end+0x19cf45>
     35d:	00 05 00 65 42 00    	add    BYTE PTR [rip+0x426500],al        # 426863 <_end+0x22584b>
     363:	00 05 00 c2 34 00    	add    BYTE PTR [rip+0x34c200],al        # 34c569 <_end+0x14b551>
     369:	00 05 00 db 22 00    	add    BYTE PTR [rip+0x22db00],al        # 22de6f <_end+0x2ce57>
     36f:	00 05 00 0c 00 00    	add    BYTE PTR [rip+0xc00],al        # f75 <__FRAME_END__+0x571>
     375:	00 05 00 a9 2c 00    	add    BYTE PTR [rip+0x2ca900],al        # 2cac7b <_end+0xc9c63>
     37b:	00 05 00 b5 30 00    	add    BYTE PTR [rip+0x30b500],al        # 30b881 <_end+0x10a869>
     381:	00 05 00 c7 12 00    	add    BYTE PTR [rip+0x12c700],al        # 12ca87 <__FRAME_END__+0x12c083>
     387:	00 05 00 1d 2a 00    	add    BYTE PTR [rip+0x2a1d00],al        # 2a208d <_end+0xa1075>
     38d:	00 05 00 6d 2e 00    	add    BYTE PTR [rip+0x2e6d00],al        # 2e7093 <_end+0xe607b>
     393:	00 05 00 14 2f 00    	add    BYTE PTR [rip+0x2f1400],al        # 2f1799 <_end+0xf0781>
     399:	00 05 00 b0 21 00    	add    BYTE PTR [rip+0x21b000],al        # 21b39f <_end+0x1a387>
     39f:	00 05 00 17 22 00    	add    BYTE PTR [rip+0x221700],al        # 221aa5 <_end+0x20a8d>
     3a5:	00 05 00 09 1f 00    	add    BYTE PTR [rip+0x1f0900],al        # 1f0cab <__FRAME_END__+0x1f02a7>
     3ab:	00 05 00 5a 3f 00    	add    BYTE PTR [rip+0x3f5a00],al        # 3f5db1 <_end+0x1f4d99>
     3b1:	00 05 00 21 24 00    	add    BYTE PTR [rip+0x242100],al        # 2424b7 <_end+0x4149f>
     3b7:	00 05 00 6c 3a 00    	add    BYTE PTR [rip+0x3a6c00],al        # 3a6fbd <_end+0x1a5fa5>
     3bd:	00 05 00 62 21 00    	add    BYTE PTR [rip+0x216200],al        # 2165c3 <_end+0x155ab>
     3c3:	00 05 00 db 0b 00    	add    BYTE PTR [rip+0xbdb00],al        # bdec9 <__FRAME_END__+0xbd4c5>
     3c9:	00 05 00 d4 27 00    	add    BYTE PTR [rip+0x27d400],al        # 27d7cf <_end+0x7c7b7>
     3cf:	00 05 00 ec 0e 00    	add    BYTE PTR [rip+0xeec00],al        # eefd5 <__FRAME_END__+0xee5d1>
     3d5:	00 05 00 29 4b 00    	add    BYTE PTR [rip+0x4b2900],al        # 4b2cdb <_end+0x2b1cc3>
     3db:	00 05 00 3a 36 00    	add    BYTE PTR [rip+0x363a00],al        # 363de1 <_end+0x162dc9>
     3e1:	00 05 00 26 42 00    	add    BYTE PTR [rip+0x422600],al        # 4229e7 <_end+0x2219cf>
     3e7:	00 05 00 3a 21 00    	add    BYTE PTR [rip+0x213a00],al        # 213ded <_end+0x12dd5>
     3ed:	00 05 00 fb 45 00    	add    BYTE PTR [rip+0x45fb00],al        # 45fef3 <_end+0x25eedb>
     3f3:	00 05 00 31 3a 00    	add    BYTE PTR [rip+0x3a3100],al        # 3a34f9 <_end+0x1a24e1>
     3f9:	00 05 00 52 12 00    	add    BYTE PTR [rip+0x125200],al        # 1255ff <__FRAME_END__+0x124bfb>
     3ff:	00 05 00 b7 2a 00    	add    BYTE PTR [rip+0x2ab700],al        # 2abb05 <_end+0xaaaed>
     405:	00 05 00 7c 11 00    	add    BYTE PTR [rip+0x117c00],al        # 11800b <__FRAME_END__+0x117607>
     40b:	00 05 00 ed 2e 00    	add    BYTE PTR [rip+0x2eed00],al        # 2ef111 <_end+0xee0f9>
     411:	00 05 00 8e 49 00    	add    BYTE PTR [rip+0x498e00],al        # 499217 <_end+0x2981ff>
     417:	00 05 00 5c 2a 00    	add    BYTE PTR [rip+0x2a5c00],al        # 2a601d <_end+0xa5005>
     41d:	00 05 00 1a 27 00    	add    BYTE PTR [rip+0x271a00],al        # 271e23 <_end+0x70e0b>
     423:	00 05 00 2e 08 00    	add    BYTE PTR [rip+0x82e00],al        # 83229 <__FRAME_END__+0x82825>
     429:	00 05 00 6c 33 00    	add    BYTE PTR [rip+0x336c00],al        # 33702f <_end+0x136017>
     42f:	00 05 00 29 1a 00    	add    BYTE PTR [rip+0x1a2900],al        # 1a2d35 <__FRAME_END__+0x1a2331>
     435:	00 05 00 c0 44 00    	add    BYTE PTR [rip+0x44c000],al        # 44c43b <_end+0x24b423>
     43b:	00 05 00 7a 10 00    	add    BYTE PTR [rip+0x107a00],al        # 107e41 <__FRAME_END__+0x10743d>
     441:	00 05 00 f3 09 00    	add    BYTE PTR [rip+0x9f300],al        # 9f747 <__FRAME_END__+0x9ed43>
     447:	00 05 00 08 3a 00    	add    BYTE PTR [rip+0x3a0800],al        # 3a0c4d <_end+0x19fc35>
     44d:	00 05 00 7a 03 00    	add    BYTE PTR [rip+0x37a00],al        # 37e53 <__FRAME_END__+0x3744f>
     453:	00 05 00 0a 03 00    	add    BYTE PTR [rip+0x30a00],al        # 30e59 <__FRAME_END__+0x30455>
     459:	00 05 00 5b 15 00    	add    BYTE PTR [rip+0x155b00],al        # 155f5f <__FRAME_END__+0x15555b>
     45f:	00 05 00 33 2e 00    	add    BYTE PTR [rip+0x2e3300],al        # 2e3765 <_end+0xe274d>
     465:	00 05 00 b1 25 00    	add    BYTE PTR [rip+0x25b100],al        # 25b56b <_end+0x5a553>
     46b:	00 05 00 98 11 00    	add    BYTE PTR [rip+0x119800],al        # 119c71 <__FRAME_END__+0x11926d>
     471:	00 05 00 1a 02 00    	add    BYTE PTR [rip+0x21a00],al        # 21e77 <__FRAME_END__+0x21473>
     477:	00 05 00 e2 35 00    	add    BYTE PTR [rip+0x35e200],al        # 35e67d <_end+0x15d665>
     47d:	00 05 00 d8 04 00    	add    BYTE PTR [rip+0x4d800],al        # 4dc83 <__FRAME_END__+0x4d27f>
     483:	00 05 00 20 11 00    	add    BYTE PTR [rip+0x112000],al        # 112489 <__FRAME_END__+0x111a85>
     489:	00 05 00 91 2c 00    	add    BYTE PTR [rip+0x2c9100],al        # 2c958f <_end+0xc8577>
     48f:	00 05 00 8e 1f 00    	add    BYTE PTR [rip+0x1f8e00],al        # 1f9295 <__FRAME_END__+0x1f8891>
     495:	00 05 00 79 45 00    	add    BYTE PTR [rip+0x457900],al        # 457d9b <_end+0x256d83>
     49b:	00 05 00 80 1e 00    	add    BYTE PTR [rip+0x1e8000],al        # 1e84a1 <__FRAME_END__+0x1e7a9d>
     4a1:	00 05 00 e3 13 00    	add    BYTE PTR [rip+0x13e300],al        # 13e7a7 <__FRAME_END__+0x13dda3>
     4a7:	00 05 00 a1 1d 00    	add    BYTE PTR [rip+0x1da100],al        # 1da5ad <__FRAME_END__+0x1d9ba9>
     4ad:	00 05 00 6c 10 00    	add    BYTE PTR [rip+0x106c00],al        # 1070b3 <__FRAME_END__+0x1066af>
     4b3:	00 05 00 46 48 00    	add    BYTE PTR [rip+0x484600],al        # 484ab9 <_end+0x283aa1>
     4b9:	00 05 00 cc 00 00    	add    BYTE PTR [rip+0xcc00],al        # d0bf <__FRAME_END__+0xc6bb>
     4bf:	00 05 00 f7 48 00    	add    BYTE PTR [rip+0x48f700],al        # 48fbc5 <_end+0x28ebad>
     4c5:	00 05 00 6a 1c 00    	add    BYTE PTR [rip+0x1c6a00],al        # 1c6ecb <__FRAME_END__+0x1c64c7>
     4cb:	00 05 00 46 32 00    	add    BYTE PTR [rip+0x324600],al        # 324ad1 <_end+0x123ab9>
     4d1:	00 05 00 96 1e 00    	add    BYTE PTR [rip+0x1e9600],al        # 1e9ad7 <__FRAME_END__+0x1e90d3>
     4d7:	00 05 00 38 41 00    	add    BYTE PTR [rip+0x413800],al        # 413cdd <_end+0x212cc5>
     4dd:	00 05 00 e7 44 00    	add    BYTE PTR [rip+0x44e700],al        # 44ebe3 <_end+0x24dbcb>
     4e3:	00 05 00 d6 06 00    	add    BYTE PTR [rip+0x6d600],al        # 6dae9 <__FRAME_END__+0x6d0e5>
     4e9:	00 05 00 b1 4d 00    	add    BYTE PTR [rip+0x4db100],al        # 4db5ef <_end+0x2da5d7>
     4ef:	00 05 00 6c 28 00    	add    BYTE PTR [rip+0x286c00],al        # 2870f5 <_end+0x860dd>
     4f5:	00 05 00 1c 46 00    	add    BYTE PTR [rip+0x461c00],al        # 4620fb <_end+0x2610e3>
     4fb:	00 05 00 54 08 00    	add    BYTE PTR [rip+0x85400],al        # 85901 <__FRAME_END__+0x84efd>
     501:	00 05 00 f0 23 00    	add    BYTE PTR [rip+0x23f000],al        # 23f507 <_end+0x3e4ef>
     507:	00 05 00 62 03 00    	add    BYTE PTR [rip+0x36200],al        # 3670d <__FRAME_END__+0x35d09>
     50d:	00 05 00 df 1e 00    	add    BYTE PTR [rip+0x1edf00],al        # 1ee413 <__FRAME_END__+0x1eda0f>
     513:	00 05 00 3d 29 00    	add    BYTE PTR [rip+0x293d00],al        # 294219 <_end+0x93201>
     519:	00 05 00 17 47 00    	add    BYTE PTR [rip+0x471700],al        # 471c1f <_end+0x270c07>
     51f:	00 05 00 33 4d 00    	add    BYTE PTR [rip+0x4d3300],al        # 4d3825 <_end+0x2d280d>
     525:	00 05 00 71 1a 00    	add    BYTE PTR [rip+0x1a7100],al        # 1a762b <__FRAME_END__+0x1a6c27>
     52b:	00 05 00 5f 25 00    	add    BYTE PTR [rip+0x255f00],al        # 256431 <_end+0x55419>
     531:	00 05 00 28 4c 00    	add    BYTE PTR [rip+0x4c2800],al        # 4c2d37 <_end+0x2c1d1f>
     537:	00 05 00 c6 01 00    	add    BYTE PTR [rip+0x1c600],al        # 1cb3d <__FRAME_END__+0x1c139>
     53d:	00 05 00 29 0b 00    	add    BYTE PTR [rip+0xb2900],al        # b2e43 <__FRAME_END__+0xb243f>
     543:	00 05 00 9a 45 00    	add    BYTE PTR [rip+0x459a00],al        # 459f49 <_end+0x258f31>
     549:	00 05 00 9e 14 00    	add    BYTE PTR [rip+0x149e00],al        # 14a34f <__FRAME_END__+0x14994b>
     54f:	00 05 00 2f 2b 00    	add    BYTE PTR [rip+0x2b2f00],al        # 2b3455 <_end+0xb243d>
     555:	00 05 00 5a 09 00    	add    BYTE PTR [rip+0x95a00],al        # 95f5b <__FRAME_END__+0x95557>
     55b:	00 05 00 d4 32 00    	add    BYTE PTR [rip+0x32d400],al        # 32d961 <_end+0x12c949>
     561:	00 05 00 71 2a 00    	add    BYTE PTR [rip+0x2a7100],al        # 2a7667 <_end+0xa664f>
     567:	00 05 00 8f 15 00    	add    BYTE PTR [rip+0x158f00],al        # 15946d <__FRAME_END__+0x158a69>
     56d:	00 05 00 bd 4b 00    	add    BYTE PTR [rip+0x4bbd00],al        # 4bc273 <_end+0x2bb25b>
     573:	00 05 00 c6 4d 00    	add    BYTE PTR [rip+0x4dc600],al        # 4dcb79 <_end+0x2dbb61>
     579:	00 05 00 b9 3b 00    	add    BYTE PTR [rip+0x3bb900],al        # 3bbe7f <_end+0x1bae67>
     57f:	00 05 00 46 1e 00    	add    BYTE PTR [rip+0x1e4600],al        # 1e4b85 <__FRAME_END__+0x1e4181>
     585:	00 05 00 d4 0a 00    	add    BYTE PTR [rip+0xad400],al        # ad98b <__FRAME_END__+0xacf87>
     58b:	00 05 00 79 2b 00    	add    BYTE PTR [rip+0x2b7900],al        # 2b7e91 <_end+0xb6e79>
     591:	00 05 00 cd 14 00    	add    BYTE PTR [rip+0x14cd00],al        # 14d297 <__FRAME_END__+0x14c893>
     597:	00 05 00 4a 4d 00    	add    BYTE PTR [rip+0x4d4a00],al        # 4d4f9d <_end+0x2d3f85>
     59d:	00 05 00 51 2c 00    	add    BYTE PTR [rip+0x2c5100],al        # 2c56a3 <_end+0xc468b>
     5a3:	00 05 00 6a 36 00    	add    BYTE PTR [rip+0x366a00],al        # 366fa9 <_end+0x165f91>
     5a9:	00 05 00 7b 02 00    	add    BYTE PTR [rip+0x27b00],al        # 280af <__FRAME_END__+0x276ab>
     5af:	00 05 00 db 24 00    	add    BYTE PTR [rip+0x24db00],al        # 24e0b5 <_end+0x4d09d>
     5b5:	00 05 00 0d 1e 00    	add    BYTE PTR [rip+0x1e0d00],al        # 1e12bb <__FRAME_END__+0x1e08b7>
     5bb:	00 05 00 0e 0b 00    	add    BYTE PTR [rip+0xb0e00],al        # b13c1 <__FRAME_END__+0xb09bd>
     5c1:	00 05 00 70 23 00    	add    BYTE PTR [rip+0x237000],al        # 2375c7 <_end+0x365af>
     5c7:	00 05 00 c5 4a 00    	add    BYTE PTR [rip+0x4ac500],al        # 4acacd <_end+0x2abab5>
     5cd:	00 05 00 20 1b 00    	add    BYTE PTR [rip+0x1b2000],al        # 1b25d3 <__FRAME_END__+0x1b1bcf>
     5d3:	00 05 00 ed 4b 00    	add    BYTE PTR [rip+0x4bed00],al        # 4bf2d9 <_end+0x2be2c1>
     5d9:	00 05 00 9d 29 00    	add    BYTE PTR [rip+0x299d00],al        # 29a2df <_end+0x992c7>
     5df:	00 05 00 98 33 00    	add    BYTE PTR [rip+0x339800],al        # 339de5 <_end+0x138dcd>
     5e5:	00 05 00 e3 2d 00    	add    BYTE PTR [rip+0x2de300],al        # 2de8eb <_end+0xdd8d3>
     5eb:	00 05 00 dd 0f 00    	add    BYTE PTR [rip+0xfdd00],al        # fe2f1 <__FRAME_END__+0xfd8ed>
     5f1:	00 05 00 9c 00 00    	add    BYTE PTR [rip+0x9c00],al        # a1f7 <__FRAME_END__+0x97f3>
     5f7:	00 05 00 4c 11 00    	add    BYTE PTR [rip+0x114c00],al        # 1151fd <__FRAME_END__+0x1147f9>
     5fd:	00 05 00 85 4d 00    	add    BYTE PTR [rip+0x4d8500],al        # 4d8b03 <_end+0x2d7aeb>
     603:	00 05 00 bc 0c 00    	add    BYTE PTR [rip+0xcbc00],al        # cc209 <__FRAME_END__+0xcb805>
     609:	00 05 00 21 45 00    	add    BYTE PTR [rip+0x452100],al        # 45270f <_end+0x2516f7>
     60f:	00 05 00 3f 1a 00    	add    BYTE PTR [rip+0x1a3f00],al        # 1a4515 <__FRAME_END__+0x1a3b11>
     615:	00 05 00 b5 00 00    	add    BYTE PTR [rip+0xb500],al        # bb1b <__FRAME_END__+0xb117>
     61b:	00 05 00 ac 32 00    	add    BYTE PTR [rip+0x32ac00],al        # 32b221 <_end+0x12a209>
     621:	00 05 00 cf 1d 00    	add    BYTE PTR [rip+0x1dcf00],al        # 1dd527 <__FRAME_END__+0x1dcb23>
     627:	00 05 00 26 26 00    	add    BYTE PTR [rip+0x262600],al        # 262c2d <_end+0x61c15>
     62d:	00 05 00 75 06 00    	add    BYTE PTR [rip+0x67500],al        # 67b33 <__FRAME_END__+0x6712f>
     633:	00 05 00 8f 3a 00    	add    BYTE PTR [rip+0x3a8f00],al        # 3a9539 <_end+0x1a8521>
     639:	00 05 00 5c 4a 00    	add    BYTE PTR [rip+0x4a5c00],al        # 4a623f <_end+0x2a5227>
     63f:	00 05 00 77 1f 00    	add    BYTE PTR [rip+0x1f7700],al        # 1f7d45 <__FRAME_END__+0x1f7341>
     645:	00 05 00 42 15 00    	add    BYTE PTR [rip+0x154200],al        # 15484b <__FRAME_END__+0x153e47>
     64b:	00 05 00 2a 00 00    	add    BYTE PTR [rip+0x2a00],al        # 3051 <__FRAME_END__+0x264d>
     651:	00 05 00 0e 17 00    	add    BYTE PTR [rip+0x170e00],al        # 171457 <__FRAME_END__+0x170a53>
     657:	00 05 00 38 1b 00    	add    BYTE PTR [rip+0x1b3800],al        # 1b3e5d <__FRAME_END__+0x1b3459>
     65d:	00 05 00 30 11 00    	add    BYTE PTR [rip+0x113000],al        # 113663 <__FRAME_END__+0x112c5f>
     663:	00 05 00 4d 2d 00    	add    BYTE PTR [rip+0x2d4d00],al        # 2d5369 <_end+0xd4351>
     669:	00 05 00 ca 13 00    	add    BYTE PTR [rip+0x13ca00],al        # 13d06f <__FRAME_END__+0x13c66b>
     66f:	00 05 00 9c 19 00    	add    BYTE PTR [rip+0x199c00],al        # 19a275 <__FRAME_END__+0x199871>
     675:	00 05 00 fa 4a 00    	add    BYTE PTR [rip+0x4afa00],al        # 4b007b <_end+0x2af063>
     67b:	00 05 00 78 0e 00    	add    BYTE PTR [rip+0xe7800],al        # e7e81 <__FRAME_END__+0xe747d>
     681:	00 05 00 b7 19 00    	add    BYTE PTR [rip+0x19b700],al        # 19bd87 <__FRAME_END__+0x19b383>
     687:	00 05 00 73 38 00    	add    BYTE PTR [rip+0x387300],al        # 38798d <_end+0x186975>
     68d:	00 05 00 b8 47 00    	add    BYTE PTR [rip+0x47b800],al        # 47be93 <_end+0x27ae7b>
     693:	00 05 00 ff 4c 00    	add    BYTE PTR [rip+0x4cff00],al        # 4d0599 <_end+0x2cf581>
     699:	00 05 00 30 1f 00    	add    BYTE PTR [rip+0x1f3000],al        # 1f369f <__FRAME_END__+0x1f2c9b>
     69f:	00 05 00 54 0e 00    	add    BYTE PTR [rip+0xe5400],al        # e5aa5 <__FRAME_END__+0xe50a1>
     6a5:	00 05 00 9f 24 00    	add    BYTE PTR [rip+0x249f00],al        # 24a5ab <_end+0x49593>
     6ab:	00 05 00 8d 24 00    	add    BYTE PTR [rip+0x248d00],al        # 2493b1 <_end+0x48399>
     6b1:	00 05 00 3c 35 00    	add    BYTE PTR [rip+0x353c00],al        # 3542b7 <_end+0x15329f>
     6b7:	00 05 00 63 34 00    	add    BYTE PTR [rip+0x346300],al        # 3469bd <_end+0x1459a5>
     6bd:	00 05 00 4c 01 00    	add    BYTE PTR [rip+0x14c00],al        # 152c3 <__FRAME_END__+0x148bf>
     6c3:	00 05 00 1a 4a 00    	add    BYTE PTR [rip+0x4a1a00],al        # 4a20c9 <_end+0x2a10b1>
     6c9:	00 05 00 3f 03 00    	add    BYTE PTR [rip+0x33f00],al        # 345cf <__FRAME_END__+0x33bcb>
     6cf:	00 05 00 fe 03 00    	add    BYTE PTR [rip+0x3fe00],al        # 404d5 <__FRAME_END__+0x3fad1>
     6d5:	00 05 00 73 27 00    	add    BYTE PTR [rip+0x277300],al        # 2779db <_end+0x769c3>
     6db:	00 05 00 8e 1c 00    	add    BYTE PTR [rip+0x1c8e00],al        # 1c94e1 <__FRAME_END__+0x1c8add>
     6e1:	00 05 00 f3 13 00    	add    BYTE PTR [rip+0x13f300],al        # 13f9e7 <__FRAME_END__+0x13efe3>
     6e7:	00 05 00 cb 1f 00    	add    BYTE PTR [rip+0x1fcb00],al        # 1fd1ed <__FRAME_END__+0x1fc7e9>
     6ed:	00 05 00 36 0d 00    	add    BYTE PTR [rip+0xd3600],al        # d3cf3 <__FRAME_END__+0xd32ef>
     6f3:	00 05 00 fc 46 00    	add    BYTE PTR [rip+0x46fc00],al        # 4702f9 <_end+0x26f2e1>
     6f9:	00 05 00 e5 3a 00    	add    BYTE PTR [rip+0x3ae500],al        # 3aebff <_end+0x1adbe7>
     6ff:	00 05 00 da 0e 00    	add    BYTE PTR [rip+0xeda00],al        # ee105 <__FRAME_END__+0xed701>
     705:	00 05 00 31 10 00    	add    BYTE PTR [rip+0x103100],al        # 10380b <__FRAME_END__+0x102e07>
     70b:	00 05 00 0e 19 00    	add    BYTE PTR [rip+0x190e00],al        # 191511 <__FRAME_END__+0x190b0d>
     711:	00 05 00 f0 1f 00    	add    BYTE PTR [rip+0x1ff000],al        # 1ff717 <__FRAME_END__+0x1fed13>
     717:	00 05 00 44 25 00    	add    BYTE PTR [rip+0x254400],al        # 254b1d <_end+0x53b05>
     71d:	00 05 00 86 44 00    	add    BYTE PTR [rip+0x448600],al        # 448d23 <_end+0x247d0b>
     723:	00 05 00 93 20 00    	add    BYTE PTR [rip+0x209300],al        # 209a29 <_end+0x8a11>
     729:	00 05 00 1f 33 00    	add    BYTE PTR [rip+0x331f00],al        # 33262f <_end+0x131617>
     72f:	00 05 00 0b 01 00    	add    BYTE PTR [rip+0x10b00],al        # 11235 <__FRAME_END__+0x10831>
     735:	00 05 00 ad 4c 00    	add    BYTE PTR [rip+0x4cad00],al        # 4cb43b <_end+0x2ca423>
     73b:	00 05 00 03 18 00    	add    BYTE PTR [rip+0x180300],al        # 180a41 <__FRAME_END__+0x18003d>
     741:	00 05 00 f6 34 00    	add    BYTE PTR [rip+0x34f600],al        # 34fd47 <_end+0x14ed2f>
     747:	00 05 00 51 28 00    	add    BYTE PTR [rip+0x285100],al        # 28584d <_end+0x84835>
     74d:	00 05 00 ce 2d 00    	add    BYTE PTR [rip+0x2dce00],al        # 2dd553 <_end+0xdc53b>
     753:	00 05 00 f7 40 00    	add    BYTE PTR [rip+0x40f700],al        # 40fe59 <_end+0x20ee41>
     759:	00 05 00 1b 18 00    	add    BYTE PTR [rip+0x181b00],al        # 18225f <__FRAME_END__+0x18185b>
     75f:	00 05 00 d7 10 00    	add    BYTE PTR [rip+0x10d700],al        # 10de65 <__FRAME_END__+0x10d461>
     765:	00 05 00 ef 22 00    	add    BYTE PTR [rip+0x22ef00],al        # 22f66b <_end+0x2e653>
int main(int argc, char * argv[]) {
     76b:	00 05 00 1d 09 00    	add    BYTE PTR [rip+0x91d00],al        # 92471 <__FRAME_END__+0x91a6d>
     771:	00 05 00 12 28 00    	add    BYTE PTR [rip+0x281200],al        # 281977 <_end+0x8095f>
     777:	00 05 00 9b 4d 00    	add    BYTE PTR [rip+0x4d9b00],al        # 4da27d <_end+0x2d9265>
     77d:	00 05 00 49 40 00    	add    BYTE PTR [rip+0x404900],al        # 405083 <_end+0x20406b>
     783:	00 05 00 4d 34 00    	add    BYTE PTR [rip+0x344d00],al        # 345489 <_end+0x144471>
	b = 5;
     789:	00 05 00 d6 4b 00    	add    BYTE PTR [rip+0x4bd600],al        # 4bdd8f <_end+0x2bcd77>
	printf ("Enter a number between 1 and 10 -> ");
     78f:	00 05 00 25 16 00    	add    BYTE PTR [rip+0x162500],al        # 162c95 <__FRAME_END__+0x162291>
     795:	00 05 00 ac 01 00    	add    BYTE PTR [rip+0x1ac00],al        # 1b39b <__FRAME_END__+0x1a997>
     79b:	00 05 00 6b 00 00    	add    BYTE PTR [rip+0x6b00],al        # 72a1 <__FRAME_END__+0x689d>
	scanf ("%d", &a);
     7a1:	00 05 00 78 17 00    	add    BYTE PTR [rip+0x177800],al        # 177fa7 <__FRAME_END__+0x1775a3>
     7a7:	00 05 00 82 12 00    	add    BYTE PTR [rip+0x128200],al        # 1289ad <__FRAME_END__+0x127fa9>
     7ad:	00 05 00 38 30 00    	add    BYTE PTR [rip+0x303800],al        # 303fb3 <_end+0x102f9b>
     7b3:	00 05 00 23 35 00    	add    BYTE PTR [rip+0x352300],al        # 352ab9 <_end+0x151aa1>
	if (a > b) {
     7b9:	00 05 00 bd 48 00    	add    BYTE PTR [rip+0x48bd00],al        # 48c4bf <_end+0x28b4a7>
     7bf:	00 05 00 f2 12 00    	add    BYTE PTR [rip+0x12f200],al        # 12f9c5 <__FRAME_END__+0x12efc1>
		printf ("The number was higher than 5!\n");
     7c5:	00 05 00 91 46 00    	add    BYTE PTR [rip+0x469100],al        # 4698cb <_end+0x2688b3>
     7cb:	00 05 00 83 33 00    	add    BYTE PTR [rip+0x338300],al        # 338ad1 <_end+0x137ab9>
}
     7d1:	00 05 00 b6 3c 00    	add    BYTE PTR [rip+0x3cb600],al        # 3cbdd7 <_end+0x1cadbf>
     7d7:	00 05 00 d9 23 00    	add    BYTE PTR [rip+0x23d900],al        # 23e0dd <_end+0x3d0c5>
     7dd:	00 05 00 3d 1d 00    	add    BYTE PTR [rip+0x1d3d00],al        # 1d44e3 <__FRAME_END__+0x1d3adf>
     7e3:	00 05 00 ff 0f 00    	add    BYTE PTR [rip+0xfff00],al        # 1006e9 <__FRAME_END__+0xffce5>
     7e9:	00 05 00 98 2d 00    	add    BYTE PTR [rip+0x2d9800],al        # 2d9fef <_end+0xd8fd7>
     7ef:	00 05 00 e8 1d 00    	add    BYTE PTR [rip+0x1de800],al        # 1deff5 <__FRAME_END__+0x1de5f1>
     7f5:	00 05 00 91 02 00    	add    BYTE PTR [rip+0x29100],al        # 298fb <__FRAME_END__+0x28ef7>
     7fb:	00 05 00 92 10 00    	add    BYTE PTR [rip+0x109200],al        # 109a01 <__FRAME_END__+0x108ffd>
     801:	00 05 00 bc 1b 00    	add    BYTE PTR [rip+0x1bbc00],al        # 1bc407 <__FRAME_END__+0x1bba03>
     807:	00 05 00 ff 23 00    	add    BYTE PTR [rip+0x23ff00],al        # 24070d <_end+0x3f6f5>
     80d:	00 05 00 12 3d 00    	add    BYTE PTR [rip+0x3d1200],al        # 3d1a13 <_end+0x1d09fb>
     813:	00 05 00 3f 31 00    	add    BYTE PTR [rip+0x313f00],al        # 314719 <_end+0x113701>
     819:	00 05 00 67 44 00    	add    BYTE PTR [rip+0x446700],al        # 446f1f <_end+0x245f07>
     81f:	00 05 00 54 16 00    	add    BYTE PTR [rip+0x165400],al        # 165c25 <__FRAME_END__+0x165221>
     825:	00 05 00 6f 24 00    	add    BYTE PTR [rip+0x246f00],al        # 24772b <_end+0x46713>
     82b:	00 05 00 2a 40 00    	add    BYTE PTR [rip+0x402a00],al        # 403231 <_end+0x202219>
     831:	00 05 00 6e 01 00    	add    BYTE PTR [rip+0x16e00],al        # 17637 <__FRAME_END__+0x16c33>
     837:	00 05 00 d1 3b 00    	add    BYTE PTR [rip+0x3bd100],al        # 3bd93d <_end+0x1bc925>
     83d:	00 05 00 e3 27 00    	add    BYTE PTR [rip+0x27e300],al        # 27eb43 <_end+0x7db2b>
     843:	00 05 00 79 4c 00    	add    BYTE PTR [rip+0x4c7900],al        # 4c8149 <_end+0x2c7131>
     849:	00 05 00 5d 48 00    	add    BYTE PTR [rip+0x485d00],al        # 48654f <_end+0x285537>
     84f:	00 05 00 b2 0d 00    	add    BYTE PTR [rip+0xdb200],al        # dba55 <__FRAME_END__+0xdb051>
     855:	00 05 00 fe 2c 00    	add    BYTE PTR [rip+0x2cfe00],al        # 2d065b <_end+0xcf643>
     85b:	00 05 00 70 04 00    	add    BYTE PTR [rip+0x47000],al        # 47861 <__FRAME_END__+0x46e5d>
     861:	00 05 00 53 17 00    	add    BYTE PTR [rip+0x175300],al        # 175b67 <__FRAME_END__+0x175163>
     867:	00 05 00 34 4a 00    	add    BYTE PTR [rip+0x4a3400],al        # 4a3c6d <_end+0x2a2c55>
     86d:	00 05 00 e1 1a 00    	add    BYTE PTR [rip+0x1ae100],al        # 1ae973 <__FRAME_END__+0x1adf6f>
     873:	00 05 00 39 25 00    	add    BYTE PTR [rip+0x253900],al        # 254179 <_end+0x53161>
     879:	00 05 00 e3 1f 00    	add    BYTE PTR [rip+0x1fe300],al        # 1feb7f <__FRAME_END__+0x1fe17b>
     87f:	00 05 00 e6 46 00    	add    BYTE PTR [rip+0x46e600],al        # 46ee85 <_end+0x26de6d>
     885:	00 05 00 c2 23 00    	add    BYTE PTR [rip+0x23c200],al        # 23ca8b <_end+0x3ba73>
     88b:	00 05 00 0b 49 00    	add    BYTE PTR [rip+0x490b00],al        # 491391 <_end+0x290379>
     891:	00 05 00 73 15 00    	add    BYTE PTR [rip+0x157300],al        # 157b97 <__FRAME_END__+0x157193>
     897:	00 05 00 dd 26 00    	add    BYTE PTR [rip+0x26dd00],al        # 26e59d <_end+0x6d585>
     89d:	00 05 00 00 40 00    	add    BYTE PTR [rip+0x400000],al        # 4008a3 <_end+0x1ff88b>
     8a3:	00 05 00 59 03 00    	add    BYTE PTR [rip+0x35900],al        # 361a9 <__FRAME_END__+0x357a5>
     8a9:	00 05 00 df 17 00    	add    BYTE PTR [rip+0x17df00],al        # 17e7af <__FRAME_END__+0x17ddab>
     8af:	00 05 00 80 16 00    	add    BYTE PTR [rip+0x168000],al        # 1688b5 <__FRAME_END__+0x167eb1>
     8b5:	00 05 00 6f 47 00    	add    BYTE PTR [rip+0x476f00],al        # 4777bb <_end+0x2767a3>
     8bb:	00 05 00 1f 29 00    	add    BYTE PTR [rip+0x291f00],al        # 2927c1 <_end+0x917a9>
     8c1:	00 05 00 da 41 00    	add    BYTE PTR [rip+0x41da00],al        # 41e2c7 <_end+0x21d2af>
     8c7:	00 05 00 c2 2f 00    	add    BYTE PTR [rip+0x2fc200],al        # 2fcacd <_end+0xfbab5>
     8cd:	00 05 00 6e 39 00    	add    BYTE PTR [rip+0x396e00],al        # 3976d3 <_end+0x1966bb>
     8d3:	00 05 00 1b 3c 00    	add    BYTE PTR [rip+0x3c1b00],al        # 3c23d9 <_end+0x1c13c1>
     8d9:	00 05 00 b7 2f 00    	add    BYTE PTR [rip+0x2fb700],al        # 2fbfdf <_end+0xfafc7>
     8df:	00 05 00 86 23 00    	add    BYTE PTR [rip+0x238600],al        # 238ee5 <_end+0x37ecd>
     8e5:	00 05 00 e5 36 00    	add    BYTE PTR [rip+0x36e500],al        # 36edeb <_end+0x16ddd3>
     8eb:	00 05 00 ba 42 00    	add    BYTE PTR [rip+0x42ba00],al        # 42c2f1 <_end+0x22b2d9>
     8f1:	00 05 00 e7 36 00    	add    BYTE PTR [rip+0x36e700],al        # 36eff7 <_end+0x16dfdf>
     8f7:	00 05 00 4c 4a 00    	add    BYTE PTR [rip+0x4a4c00],al        # 4a54fd <_end+0x2a44e5>
     8fd:	00 05 00 f4 0f 00    	add    BYTE PTR [rip+0xff400],al        # ffd03 <__FRAME_END__+0xff2ff>
     903:	00 05 00 4e 4a 00    	add    BYTE PTR [rip+0x4a4e00],al        # 4a5709 <_end+0x2a46f1>
     909:	00 05 00 69 27 00    	add    BYTE PTR [rip+0x276900],al        # 27720f <_end+0x761f7>
     90f:	00 05 00 04 09 00    	add    BYTE PTR [rip+0x90400],al        # 90d15 <__FRAME_END__+0x90311>
     915:	00 00                	add    BYTE PTR [rax],al
     917:	04 00                	add    al,0x0
     919:	00 05 13 d5 02 00    	add    BYTE PTR [rip+0x2d513],al        # 2de32 <__FRAME_END__+0x2d42e>
     91f:	00 05 26 7e 46 00    	add    BYTE PTR [rip+0x467e26],al        # 46874b <_end+0x267733>
     925:	00 05 2e c8 18 00    	add    BYTE PTR [rip+0x18c82e],al        # 18d159 <__FRAME_END__+0x18c755>
     92b:	00 05 3a 49 19 00    	add    BYTE PTR [rip+0x19493a],al        # 19526b <__FRAME_END__+0x194867>
     931:	00 05 3d 97 0a 00    	add    BYTE PTR [rip+0xa973d],al        # aa074 <__FRAME_END__+0xa9670>
     937:	00 00                	add    BYTE PTR [rax],al
     939:	04 00                	add    al,0x0
     93b:	00 05 18 cc 10 00    	add    BYTE PTR [rip+0x10cc18],al        # 10d559 <__FRAME_END__+0x10cb55>
     941:	00 05 1a d6 33 00    	add    BYTE PTR [rip+0x33d61a],al        # 33df61 <_end+0x13cf49>
     947:	00 00                	add    BYTE PTR [rax],al
     949:	04 00                	add    al,0x0
     94b:	00 05 13 cd 24 00    	add    BYTE PTR [rip+0x24cd13],al        # 24d664 <_end+0x4c64c>
     951:	00 06                	add    BYTE PTR [rsi],al
     953:	77 42                	ja     997 <__GNU_EH_FRAME_HDR+0xd7>
     955:	49 00 00             	rex.WB add BYTE PTR [r8],al
     958:	06                   	(bad)  
     959:	78 39                	js     994 <__GNU_EH_FRAME_HDR+0xd4>
     95b:	18 00                	sbb    BYTE PTR [rax],al
     95d:	00 06                	add    BYTE PTR [rsi],al
     95f:	79 f6                	jns    957 <__GNU_EH_FRAME_HDR+0x97>
     961:	17                   	(bad)  
     962:	00 00                	add    BYTE PTR [rax],al
     964:	06                   	(bad)  
     965:	7a d9                	jp     940 <__GNU_EH_FRAME_HDR+0x80>
     967:	07                   	(bad)  
     968:	00 00                	add    BYTE PTR [rax],al
     96a:	06                   	(bad)  
     96b:	7b f3                	jnp    960 <__GNU_EH_FRAME_HDR+0xa0>
     96d:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
     970:	06                   	(bad)  
     971:	7c 80                	jl     8f3 <__GNU_EH_FRAME_HDR+0x33>
     973:	34 00                	xor    al,0x0
     975:	00 06                	add    BYTE PTR [rsi],al
     977:	7d 3f                	jge    9b8 <__GNU_EH_FRAME_HDR+0xf8>
     979:	23 00                	and    eax,DWORD PTR [rax]
     97b:	00 06                	add    BYTE PTR [rsi],al
     97d:	7e 0d                	jle    98c <__GNU_EH_FRAME_HDR+0xcc>
     97f:	13 00                	adc    eax,DWORD PTR [rax]
     981:	00 06                	add    BYTE PTR [rsi],al
     983:	7f 67                	jg     9ec <__GNU_EH_FRAME_HDR+0x12c>
     985:	38 00                	cmp    BYTE PTR [rax],al
     987:	00 06                	add    BYTE PTR [rsi],al
     989:	80 01 ab             	add    BYTE PTR [rcx],0xab
     98c:	44 00 00             	add    BYTE PTR [rax],r8b
     98f:	06                   	(bad)  
     990:	81 01 50 0d 00 00    	add    DWORD PTR [rcx],0xd50
     996:	06                   	(bad)  
     997:	82                   	(bad)  
     998:	01 18                	add    DWORD PTR [rax],ebx
     99a:	30 00                	xor    BYTE PTR [rax],al
     99c:	00 06                	add    BYTE PTR [rsi],al
     99e:	83 01 94             	add    DWORD PTR [rcx],0xffffff94
     9a1:	3f                   	(bad)  
     9a2:	00 00                	add    BYTE PTR [rax],al
     9a4:	06                   	(bad)  
     9a5:	84 01                	test   BYTE PTR [rcx],al
     9a7:	e3 37                	jrcxz  9e0 <__GNU_EH_FRAME_HDR+0x120>
     9a9:	00 00                	add    BYTE PTR [rax],al
     9ab:	06                   	(bad)  
     9ac:	85 01                	test   DWORD PTR [rcx],eax
     9ae:	a1 26 00 00 06 86 01 	movabs eax,ds:0x46d6018606000026
     9b5:	d6 46 
     9b7:	00 00                	add    BYTE PTR [rax],al
     9b9:	06                   	(bad)  
     9ba:	87 01                	xchg   DWORD PTR [rcx],eax
     9bc:	aa                   	stos   BYTE PTR es:[rdi],al
     9bd:	05 00 00 06 88       	add    eax,0x88060000
     9c2:	01 77 29             	add    DWORD PTR [rdi+0x29],esi
     9c5:	00 00                	add    BYTE PTR [rax],al
     9c7:	06                   	(bad)  
     9c8:	89 01                	mov    DWORD PTR [rcx],eax
     9ca:	f3 29 00             	repz sub DWORD PTR [rax],eax
     9cd:	00 06                	add    BYTE PTR [rsi],al
     9cf:	8a 01                	mov    al,BYTE PTR [rcx]
     9d1:	82                   	(bad)  
     9d2:	0d 00 00 06 8b       	or     eax,0x8b060000
     9d7:	01 ac 41 00 00 06 8c 	add    DWORD PTR [rcx+rax*2-0x73fa0000],ebp
     9de:	01 f6                	add    esi,esi
     9e0:	2a 00                	sub    al,BYTE PTR [rax]
     9e2:	00 06                	add    BYTE PTR [rsi],al
     9e4:	8d 01                	lea    eax,[rcx]
     9e6:	b1 17                	mov    cl,0x17
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	06                   	(bad)  
     9eb:	8e 01                	mov    es,WORD PTR [rcx]
     9ed:	6d                   	ins    DWORD PTR es:[rdi],dx
     9ee:	05 00 00 05 93       	add    eax,0x93050000
     9f3:	01 9d 12 00 00 05    	add    DWORD PTR [rbp+0x5000012],ebx
     9f9:	9e                   	sahf   
     9fa:	01 84 04 00 00 05 ac 	add    DWORD PTR [rsp+rax*1-0x53fb0000],eax
     a01:	01 8a 42 00 00 05    	add    DWORD PTR [rdx+0x5000042],ecx
     a07:	b0 01                	mov    al,0x1
     a09:	42 22 00             	rex.X and al,BYTE PTR [rax]
     a0c:	00 06                	add    BYTE PTR [rsi],al
     a0e:	dc 01                	fadd   QWORD PTR [rcx]
     a10:	fc                   	cld    
     a11:	3a 00                	cmp    al,BYTE PTR [rax]
     a13:	00 05 dd 01 b3 1a    	add    BYTE PTR [rip+0x1ab301dd],al        # 1ab30bf6 <_end+0x1a92fbde>
     a19:	00 00                	add    BYTE PTR [rax],al
     a1b:	05 e3 01 e6 02       	add    eax,0x2e601e3
     a20:	00 00                	add    BYTE PTR [rax],al
     a22:	05 e9 01 8f 17       	add    eax,0x178f01e9
     a27:	00 00                	add    BYTE PTR [rax],al
     a29:	05 ef 01 95 09       	add    eax,0x99501ef
     a2e:	00 00                	add    BYTE PTR [rax],al
     a30:	05 84 02 e5 1c       	add    eax,0x1ce50284
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	06                   	(bad)  
     a38:	86 02                	xchg   BYTE PTR [rdx],al
     a3a:	c8 06 00 00          	enter  0x6,0x0
     a3e:	05 87 02 c5 43       	add    eax,0x43c50287
     a43:	00 00                	add    BYTE PTR [rax],al
     a45:	06                   	(bad)  
     a46:	88 02                	mov    BYTE PTR [rdx],al
     a48:	cf                   	iret   
     a49:	38 00                	cmp    BYTE PTR [rax],al
     a4b:	00 05 89 02 32 2a    	add    BYTE PTR [rip+0x2a320289],al        # 2a320cda <_end+0x2a11fcc2>
     a51:	00 00                	add    BYTE PTR [rax],al
     a53:	05 ac 02 69 2c       	add    eax,0x2c6902ac
     a58:	00 00                	add    BYTE PTR [rax],al
     a5a:	05 b0 02 86 09       	add    eax,0x98602b0
     a5f:	00 00                	add    BYTE PTR [rax],al
     a61:	05 b4 02 a0 28       	add    eax,0x28a002b4
     a66:	00 00                	add    BYTE PTR [rax],al
     a68:	05 b8 02 68 08       	add    eax,0x86802b8
     a6d:	00 00                	add    BYTE PTR [rax],al
     a6f:	05 bc 02 43 17       	add    eax,0x174302bc
     a74:	00 00                	add    BYTE PTR [rax],al
     a76:	06                   	(bad)  
     a77:	bd 02 f6 17 00       	mov    ebp,0x17f602
     a7c:	00 05 be 02 95 09    	add    BYTE PTR [rip+0x99502be],al        # 9950d40 <_end+0x974fd28>
     a82:	00 00                	add    BYTE PTR [rax],al
     a84:	06                   	(bad)  
     a85:	bf 02 39 18 00       	mov    edi,0x183902
     a8a:	00 05 c0 02 8f 17    	add    BYTE PTR [rip+0x178f02c0],al        # 178f0d50 <_end+0x176efd38>
     a90:	00 00                	add    BYTE PTR [rax],al
     a92:	05 c4 02 20 3a       	add    eax,0x3a2002c4
     a97:	00 00                	add    BYTE PTR [rax],al
     a99:	06                   	(bad)  
     a9a:	c5 02 73             	(bad)  
     a9d:	0d 00 00 05 c6       	or     eax,0xc6050000
     aa2:	02 c9                	add    cl,cl
     aa4:	0e                   	(bad)  
     aa5:	00 00                	add    BYTE PTR [rax],al
     aa7:	05 f0 02 2e 47       	add    eax,0x472e02f0
     aac:	00 00                	add    BYTE PTR [rax],al
     aae:	05 f4 02 e8 07       	add    eax,0x7e802f4
     ab3:	00 00                	add    BYTE PTR [rax],al
     ab5:	05 83 03 5d 0d       	add    eax,0xd5d0383
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	05 8b 03 e3 18       	add    eax,0x18e3038b
     ac1:	00 00                	add    BYTE PTR [rax],al
     ac3:	06                   	(bad)  
     ac4:	9a                   	(bad)  
     ac5:	03 44 08 00          	add    eax,DWORD PTR [rax+rcx*1+0x0]
     ac9:	00 05 9b 03 e2 28    	add    BYTE PTR [rip+0x28e2039b],al        # 28e20e6a <_end+0x28c1fe52>
     acf:	00 00                	add    BYTE PTR [rax],al
     ad1:	05 9f 03 7f 3c       	add    eax,0x3c7f039f
     ad6:	00 00                	add    BYTE PTR [rax],al
     ad8:	05 a0 03 a4 2f       	add    eax,0x2fa403a0
     add:	00 00                	add    BYTE PTR [rax],al
     adf:	05 a2 03 11 06       	add    eax,0x61103a2
     ae4:	00 00                	add    BYTE PTR [rax],al
     ae6:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     ae9:	00 05 13 ef 03 00    	add    BYTE PTR [rip+0x3ef13],al        # 3fa02 <__FRAME_END__+0x3effe>
     aef:	00 02                	add    BYTE PTR [rdx],al
     af1:	22 5f 5f             	and    bl,BYTE PTR [rdi+0x5f]
     af4:	50                   	push   rax
     af5:	00 06                	add    BYTE PTR [rsi],al
     af7:	23 44 27 00          	and    eax,DWORD PTR [rdi+riz*1+0x0]
     afb:	00 05 2a 26 30 00    	add    BYTE PTR [rip+0x30262a],al        # 30312b <_end+0x102113>
     b01:	00 05 2b e5 41 00    	add    BYTE PTR [rip+0x41e52b],al        # 41f032 <_end+0x21e01a>
     b07:	00 05 37 df 38 00    	add    BYTE PTR [rip+0x38df37],al        # 38ea44 <_end+0x18da2c>
     b0d:	00 05 38 95 4b 00    	add    BYTE PTR [rip+0x4b9538],al        # 4ba04b <_end+0x2b9033>
     b13:	00 05 39 c7 0d 00    	add    BYTE PTR [rip+0xdc739],al        # dd252 <__FRAME_END__+0xdc84e>
     b19:	00 05 3a ab 08 00    	add    BYTE PTR [rip+0x8ab3a],al        # 8b659 <__FRAME_END__+0x8ac55>
     b1f:	00 05 59 38 14 00    	add    BYTE PTR [rip+0x143859],al        # 14437e <__FRAME_END__+0x14397a>
     b25:	00 05 5e 26 3c 00    	add    BYTE PTR [rip+0x3c265e],al        # 3c3189 <_end+0x1c2171>
     b2b:	00 05 5f 5b 14 00    	add    BYTE PTR [rip+0x145b5f],al        # 146690 <__FRAME_END__+0x145c8c>
     b31:	00 05 64 cd 30 00    	add    BYTE PTR [rip+0x30cd64],al        # 30d89b <_end+0x10c883>
     b37:	00 05 65 c5 32 00    	add    BYTE PTR [rip+0x32c565],al        # 32d0a2 <_end+0x12c08a>
     b3d:	00 05 68 79 0a 00    	add    BYTE PTR [rip+0xa7968],al        # a84ab <__FRAME_END__+0xa7aa7>
     b43:	00 05 70 64 19 00    	add    BYTE PTR [rip+0x196470],al        # 196fb9 <__FRAME_END__+0x1965b5>
     b49:	00 05 71 0f 46 00    	add    BYTE PTR [rip+0x460f71],al        # 461ac0 <_end+0x260aa8>
     b4f:	00 05 76 45 2f 00    	add    BYTE PTR [rip+0x2f4576],al        # 2f50cb <_end+0xf40b3>
     b55:	00 05 77 b5 2b 00    	add    BYTE PTR [rip+0x2bb577],al        # 2bc0d2 <_end+0xbb0ba>
     b5b:	00 05 7a 5c 32 00    	add    BYTE PTR [rip+0x325c7a],al        # 3267db <_end+0x1257c3>
     b61:	00 05 7c 75 3b 00    	add    BYTE PTR [rip+0x3b757c],al        # 3b80e3 <_end+0x1b70cb>
     b67:	00 05 7d 6e 48 00    	add    BYTE PTR [rip+0x486e7d],al        # 4879ea <_end+0x2869d2>
     b6d:	00 05 8a 01 6e 02    	add    BYTE PTR [rip+0x26e018a],al        # 26e0cfd <_end+0x24dfce5>
     b73:	00 00                	add    BYTE PTR [rax],al
     b75:	05 8b 01 ff 28       	add    eax,0x28ff018b
     b7a:	00 00                	add    BYTE PTR [rax],al
     b7c:	05 a9 01 2d 20       	add    eax,0x202d01a9
     b81:	00 00                	add    BYTE PTR [rax],al
     b83:	05 b0 01 16 38       	add    eax,0x381601b0
     b88:	00 00                	add    BYTE PTR [rax],al
     b8a:	05 b2 01 75 13       	add    eax,0x137501b2
     b8f:	00 00                	add    BYTE PTR [rax],al
     b91:	05 b5 01 df 49       	add    eax,0x49df01b5
     b96:	00 00                	add    BYTE PTR [rax],al
     b98:	05 b6 01 66 3e       	add    eax,0x3e6601b6
     b9d:	00 00                	add    BYTE PTR [rax],al
     b9f:	05 cb 01 64 37       	add    eax,0x376401cb
     ba4:	00 00                	add    BYTE PTR [rax],al
     ba6:	05 d3 01 a5 3f       	add    eax,0x3fa501d3
     bab:	00 00                	add    BYTE PTR [rax],al
     bad:	05 dd 01 ae 39       	add    eax,0x39ae01dd
     bb2:	00 00                	add    BYTE PTR [rax],al
     bb4:	05 e4 01 3d 05       	add    eax,0x53d01e4
     bb9:	00 00                	add    BYTE PTR [rax],al
     bbb:	05 ed 01 d3 11       	add    eax,0x11d301ed
     bc0:	00 00                	add    BYTE PTR [rax],al
     bc2:	05 ee 01 8c 22       	add    eax,0x228c01ee
     bc7:	00 00                	add    BYTE PTR [rax],al
     bc9:	05 f6 01 13 2d       	add    eax,0x2d1301f6
     bce:	00 00                	add    BYTE PTR [rax],al
     bd0:	05 80 02 e2 30       	add    eax,0x30e20280
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	05 8d 02 e9 2b       	add    eax,0x2be9028d
     bdc:	00 00                	add    BYTE PTR [rax],al
     bde:	05 97 02 a4 40       	add    eax,0x40a40297
     be3:	00 00                	add    BYTE PTR [rax],al
     be5:	05 a0 02 f7 07       	add    eax,0x7f702a0
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	05 a8 02 b1 45       	add    eax,0x45b102a8
     bf1:	00 00                	add    BYTE PTR [rax],al
     bf3:	05 b1 02 b6 14       	add    eax,0x14b602b1
     bf8:	00 00                	add    BYTE PTR [rax],al
     bfa:	06                   	(bad)  
     bfb:	b9 02 1c 3e 00       	mov    ecx,0x3e1c02
     c00:	00 05 ba 02 da 21    	add    BYTE PTR [rip+0x21da02ba],al        # 21da0ec0 <_end+0x21b9fea8>
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	05 c3 02 01 12       	add    eax,0x120102c3
     c0d:	00 00                	add    BYTE PTR [rax],al
     c0f:	05 d5 02 8f 0f       	add    eax,0xf8f02d5
     c14:	00 00                	add    BYTE PTR [rax],al
     c16:	05 d6 02 6d 0c       	add    eax,0xc6d02d6
     c1b:	00 00                	add    BYTE PTR [rax],al
     c1d:	05 df 02 5c 30       	add    eax,0x305c02df
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	05 e5 02 78 1d       	add    eax,0x1d7802e5
     c29:	00 00                	add    BYTE PTR [rax],al
     c2b:	05 e6 02 fd 04       	add    eax,0x4fd02e6
     c30:	00 00                	add    BYTE PTR [rax],al
     c32:	05 fa 02 62 40       	add    eax,0x406202fa
     c37:	00 00                	add    BYTE PTR [rax],al
     c39:	05 89 03 3c 04       	add    eax,0x43c0389
     c3e:	00 00                	add    BYTE PTR [rax],al
     c40:	05 8a 03 a8 2e       	add    eax,0x2ea8038a
     c45:	00 00                	add    BYTE PTR [rax],al
     c47:	05 a0 03 b2 36       	add    eax,0x36b203a0
     c4c:	00 00                	add    BYTE PTR [rax],al
     c4e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     c51:	00 05 04 3e 4a 00    	add    BYTE PTR [rip+0x4a3e04],al        # 4a4a5b <_end+0x2a3a43>
     c57:	00 05 0c dd 4a 00    	add    BYTE PTR [rip+0x4add0c],al        # 4ae969 <_end+0x2ad951>
     c5d:	00 05 0e 59 24 00    	add    BYTE PTR [rip+0x24590e],al        # 246571 <_end+0x45559>
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	04 00                	add    al,0x0
     c67:	00 05 c2 03 39 37    	add    BYTE PTR [rip+0x373903c2],al        # 3739102f <_end+0x37190017>
     c6d:	00 00                	add    BYTE PTR [rax],al
     c6f:	05 c3 03 df 05       	add    eax,0x5df03c3
     c74:	00 00                	add    BYTE PTR [rax],al
     c76:	05 c4 03 79 21       	add    eax,0x217903c4
     c7b:	00 00                	add    BYTE PTR [rax],al
     c7d:	05 c5 03 b3 37       	add    eax,0x37b303c5
     c82:	00 00                	add    BYTE PTR [rax],al
     c84:	05 c6 03 f6 0b       	add    eax,0xbf603c6
     c89:	00 00                	add    BYTE PTR [rax],al
     c8b:	05 c8 03 da 3d       	add    eax,0x3dda03c8
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	05 c9 03 2b 13       	add    eax,0x132b03c9
     c97:	00 00                	add    BYTE PTR [rax],al
     c99:	05 d4 03 df 3c       	add    eax,0x3cdf03d4
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	05 d5 03 08 0e       	add    eax,0xe0803d5
     ca5:	00 00                	add    BYTE PTR [rax],al
     ca7:	05 e7 03 d6 16       	add    eax,0x16d603e7
     cac:	00 00                	add    BYTE PTR [rax],al
     cae:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     cb1:	00 05 0a f2 3b 00    	add    BYTE PTR [rip+0x3bf20a],al        # 3bfec1 <_end+0x1beea9>
     cb7:	00 05 0b 7c 08 00    	add    BYTE PTR [rip+0x87c0b],al        # 888c8 <__FRAME_END__+0x87ec4>
     cbd:	00 05 0c 26 15 00    	add    BYTE PTR [rip+0x15260c],al        # 1532cf <__FRAME_END__+0x1528cb>
     cc3:	00 05 0d da 08 00    	add    BYTE PTR [rip+0x8da0d],al        # 8e6d6 <__FRAME_END__+0x8dcd2>
     cc9:	00 05 0e 5b 1a 00    	add    BYTE PTR [rip+0x1a5b0e],al        # 1a67dd <__FRAME_END__+0x1a5dd9>
     ccf:	00 05 0f 3e 34 00    	add    BYTE PTR [rip+0x343e0f],al        # 344ae4 <_end+0x143acc>
     cd5:	00 05 10 a6 15 00    	add    BYTE PTR [rip+0x15a610],al        # 15b2eb <__FRAME_END__+0x15a8e7>
     cdb:	00 05 11 76 4d 00    	add    BYTE PTR [rip+0x4d7611],al        # 4d82f2 <_end+0x2d72da>
     ce1:	00 05 12 2c 19 00    	add    BYTE PTR [rip+0x192c12],al        # 1938f9 <__FRAME_END__+0x192ef5>
     ce7:	00 05 13 1e 48 00    	add    BYTE PTR [rip+0x481e13],al        # 482b00 <_end+0x281ae8>
     ced:	00 05 14 5b 10 00    	add    BYTE PTR [rip+0x105b14],al        # 106807 <__FRAME_END__+0x105e03>
     cf3:	00 05 15 67 0a 00    	add    BYTE PTR [rip+0xa6715],al        # a740e <__FRAME_END__+0xa6a0a>
     cf9:	00 05 16 6f 4b 00    	add    BYTE PTR [rip+0x4b6f16],al        # 4b7c15 <_end+0x2b6bfd>
     cff:	00 05 17 c1 16 00    	add    BYTE PTR [rip+0x16c117],al        # 16ce1c <__FRAME_END__+0x16c418>
     d05:	00 00                	add    BYTE PTR [rax],al
     d07:	04 00                	add    al,0x0
     d09:	00 06                	add    BYTE PTR [rsi],al
     d0b:	25 0a 2b 00 00       	and    eax,0x2b0a
     d10:	05 2a 6b 12 00       	add    eax,0x126b2a
     d15:	00 06                	add    BYTE PTR [rsi],al
     d17:	2f                   	(bad)  
     d18:	ec                   	in     al,dx
     d19:	43 00 00             	rex.XB add BYTE PTR [r8],al
     d1c:	05 33 fe 47 00       	add    eax,0x47fe33
     d21:	00 06                	add    BYTE PTR [rsi],al
     d23:	38 ef                	cmp    bh,ch
     d25:	36 00 00             	add    BYTE PTR ss:[rax],al
     d28:	05 3c 88 47 00       	add    eax,0x47883c
     d2d:	00 06                	add    BYTE PTR [rsi],al
     d2f:	41 16                	rex.B (bad) 
     d31:	0d 00 00 05 45       	or     eax,0x45050000
     d36:	4a 3a 00             	rex.WX cmp al,BYTE PTR [rax]
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	04 00                	add    al,0x0
     d3d:	00 05 1f 36 2f 00    	add    BYTE PTR [rip+0x2f361f],al        # 2f4362 <_end+0xf334a>
     d43:	00 05 20 68 06 00    	add    BYTE PTR [rip+0x66820],al        # 67569 <__FRAME_END__+0x66b65>
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	04 00                	add    al,0x0
     d4d:	00 05 bb 01 62 26    	add    BYTE PTR [rip+0x266201bb],al        # 26620f0e <_end+0x2641fef6>
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	05 bc 01 00 21       	add    eax,0x210001bc
     d5a:	00 00                	add    BYTE PTR [rax],al
     d5c:	05 bd 01 d4 0f       	add    eax,0xfd401bd
     d61:	00 00                	add    BYTE PTR [rax],al
     d63:	05 be 01 71 16       	add    eax,0x167101be
     d68:	00 00                	add    BYTE PTR [rax],al
     d6a:	05 bf 01 3f 0f       	add    eax,0xf3f01bf
     d6f:	00 00                	add    BYTE PTR [rax],al
     d71:	05 c0 01 6f 0e       	add    eax,0xe6f01c0
     d76:	00 00                	add    BYTE PTR [rax],al
     d78:	05 c1 01 df 20       	add    eax,0x20df01c1
     d7d:	00 00                	add    BYTE PTR [rax],al
     d7f:	05 c2 01 51 10       	add    eax,0x105101c2
     d84:	00 00                	add    BYTE PTR [rax],al
     d86:	05 c3 01 4d 10       	add    eax,0x104d01c3
     d8b:	00 00                	add    BYTE PTR [rax],al
     d8d:	05 c4 01 6a 11       	add    eax,0x116a01c4
     d92:	00 00                	add    BYTE PTR [rax],al
     d94:	05 c5 01 44 00       	add    eax,0x4401c5
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	05 c6 01 66 11       	add    eax,0x116601c6
     da0:	00 00                	add    BYTE PTR [rax],al
     da2:	05 c7 01 36 09       	add    eax,0x93601c7
     da7:	00 00                	add    BYTE PTR [rax],al
     da9:	05 c8 01 97 2e       	add    eax,0x2e9701c8
     dae:	00 00                	add    BYTE PTR [rax],al
     db0:	05 c9 01 d0 0f       	add    eax,0xfd001c9
     db5:	00 00                	add    BYTE PTR [rax],al
     db7:	05 ca 01 af 47       	add    eax,0x47af01ca
     dbc:	00 00                	add    BYTE PTR [rax],al
     dbe:	05 d2 01 3a 0a       	add    eax,0xa3a01d2
     dc3:	00 00                	add    BYTE PTR [rax],al
     dc5:	06                   	(bad)  
     dc6:	ee                   	out    dx,al
     dc7:	01 25 2e 00 00 06    	add    DWORD PTR [rip+0x600002e],esp        # 6000dfb <_end+0x5dffde3>
     dcd:	91                   	xchg   ecx,eax
     dce:	03 26                	add    esp,DWORD PTR [rsi]
     dd0:	13 00                	adc    eax,DWORD PTR [rax]
     dd2:	00 05 96 03 cf 1c    	add    BYTE PTR [rip+0x1ccf0396],al        # 1ccf116e <_end+0x1caf0156>
     dd8:	00 00                	add    BYTE PTR [rax],al
     dda:	06                   	(bad)  
     ddb:	9c                   	pushf  
     ddc:	03 1f                	add    ebx,DWORD PTR [rdi]
     dde:	13 00                	adc    eax,DWORD PTR [rax]
     de0:	00 00                	add    BYTE PTR [rax],al
     de2:	04 00                	add    al,0x0
     de4:	00 05 62 39 24 00    	add    BYTE PTR [rip+0x243962],al        # 24474c <_end+0x43734>
     dea:	00 05 63 ff 25 00    	add    BYTE PTR [rip+0x25ff63],al        # 260d53 <_end+0x5fd3b>
     df0:	00 05 64 88 0a 00    	add    BYTE PTR [rip+0xa8864],al        # a965a <__FRAME_END__+0xa8c56>
     df6:	00 05 65 c7 17 00    	add    BYTE PTR [rip+0x17c765],al        # 17d561 <__FRAME_END__+0x17cb5d>
     dfc:	00 05 66 10 25 00    	add    BYTE PTR [rip+0x251066],al        # 251e68 <_end+0x50e50>
     e02:	00 05 67 44 44 00    	add    BYTE PTR [rip+0x444467],al        # 44526f <_end+0x244257>
     e08:	00 05 75 7e 3f 00    	add    BYTE PTR [rip+0x3f7e75],al        # 3f8c83 <_end+0x1f7c6b>
     e0e:	00 05 76 4a 27 00    	add    BYTE PTR [rip+0x274a76],al        # 27588a <_end+0x74872>
     e14:	00 05 77 07 34 00    	add    BYTE PTR [rip+0x340777],al        # 341591 <_end+0x140579>
     e1a:	00 05 78 85 2f 00    	add    BYTE PTR [rip+0x2f8578],al        # 2f9398 <_end+0xf8380>
     e20:	00 05 79 2a 29 00    	add    BYTE PTR [rip+0x292a79],al        # 29389f <_end+0x92887>
     e26:	00 05 7a 25 1c 00    	add    BYTE PTR [rip+0x1c257a],al        # 1c33a6 <__FRAME_END__+0x1c29a2>
     e2c:	00 05 7b 9a 39 00    	add    BYTE PTR [rip+0x399a7b],al        # 39a8ad <_end+0x199895>
     e32:	00 05 7c 6f 41 00    	add    BYTE PTR [rip+0x416f7c],al        # 417db4 <_end+0x216d9c>
     e38:	00 05 7e 96 23 00    	add    BYTE PTR [rip+0x23967e],al        # 23a4bc <_end+0x394a4>
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	04 00                	add    al,0x0
     e42:	00 05 18 b3 15 00    	add    BYTE PTR [rip+0x15b318],al        # 15c160 <__FRAME_END__+0x15b75c>
     e48:	00 05 22 3f 42 00    	add    BYTE PTR [rip+0x423f22],al        # 424d70 <_end+0x223d58>
     e4e:	00 05 23 e5 00 00    	add    BYTE PTR [rip+0xe523],al        # f377 <__FRAME_END__+0xe973>
     e54:	00 05 26 4f 49 00    	add    BYTE PTR [rip+0x494f26],al        # 495d80 <_end+0x294d68>
     e5a:	00 05 27 2c 44 00    	add    BYTE PTR [rip+0x442c27],al        # 443a87 <_end+0x242a6f>
     e60:	00 05 28 6c 14 00    	add    BYTE PTR [rip+0x146c28],al        # 147a8e <__FRAME_END__+0x14708a>
     e66:	00 05 29 f6 35 00    	add    BYTE PTR [rip+0x35f629],al        # 360495 <_end+0x15f47d>
     e6c:	00 05 2a c6 28 00    	add    BYTE PTR [rip+0x28c62a],al        # 28d49c <_end+0x8c484>
     e72:	00 05 2b a9 23 00    	add    BYTE PTR [rip+0x23a92b],al        # 23b7a3 <_end+0x3a78b>
     e78:	00 05 2d d1 2f 00    	add    BYTE PTR [rip+0x2fd12d],al        # 2fdfab <_end+0xfcf93>
     e7e:	00 05 2e eb 24 00    	add    BYTE PTR [rip+0x24eb2e],al        # 24f9b2 <_end+0x4e99a>
     e84:	00 05 33 a0 34 00    	add    BYTE PTR [rip+0x34a033],al        # 34aebd <_end+0x149ea5>
     e8a:	00 05 34 26 49 00    	add    BYTE PTR [rip+0x492634],al        # 4934c4 <_end+0x2924ac>
     e90:	00 05 35 0e 15 00    	add    BYTE PTR [rip+0x150e35],al        # 151ccb <__FRAME_END__+0x1512c7>
     e96:	00 05 36 bc 05 00    	add    BYTE PTR [rip+0x5bc36],al        # 5cad2 <__FRAME_END__+0x5c0ce>
     e9c:	00 05 37 f1 16 00    	add    BYTE PTR [rip+0x16f137],al        # 16ffd9 <__FRAME_END__+0x16f5d5>
     ea2:	00 05 38 8a 16 00    	add    BYTE PTR [rip+0x168a38],al        # 1698e0 <__FRAME_END__+0x168edc>
     ea8:	00 05 39 c6 2a 00    	add    BYTE PTR [rip+0x2ac639],al        # 2ad4e7 <_end+0xac4cf>
     eae:	00 05 3a a4 1f 00    	add    BYTE PTR [rip+0x1fa43a],al        # 1fb2ee <__FRAME_END__+0x1fa8ea>
     eb4:	00 05 3b 72 20 00    	add    BYTE PTR [rip+0x20723b],al        # 2080f5 <_end+0x70dd>
     eba:	00 05 3c 3a 3b 00    	add    BYTE PTR [rip+0x3b3a3c],al        # 3b48fc <_end+0x1b38e4>
     ec0:	00 05 3d 49 36 00    	add    BYTE PTR [rip+0x36493d],al        # 365803 <_end+0x1647eb>
     ec6:	00 05 3e e9 20 00    	add    BYTE PTR [rip+0x20e93e],al        # 20f80a <_end+0xe7f2>
     ecc:	00 05 3f 69 3d 00    	add    BYTE PTR [rip+0x3d693f],al        # 3d7811 <_end+0x1d67f9>
     ed2:	00 05 40 35 3c 00    	add    BYTE PTR [rip+0x3c3540],al        # 3c4418 <_end+0x1c3400>
     ed8:	00 05 41 c7 15 00    	add    BYTE PTR [rip+0x15c741],al        # 15d61f <__FRAME_END__+0x15cc1b>
     ede:	00 05 42 f6 19 00    	add    BYTE PTR [rip+0x19f642],al        # 1a0526 <__FRAME_END__+0x19fb22>
     ee4:	00 05 43 b5 1d 00    	add    BYTE PTR [rip+0x1db543],al        # 1dc42d <__FRAME_END__+0x1dba29>
     eea:	00 05 44 22 21 00    	add    BYTE PTR [rip+0x212244],al        # 213134 <_end+0x1211c>
     ef0:	00 05 45 45 46 00    	add    BYTE PTR [rip+0x464545],al        # 46543b <_end+0x264423>
     ef6:	00 05 46 b6 41 00    	add    BYTE PTR [rip+0x41b646],al        # 41c542 <_end+0x21b52a>
     efc:	00 05 47 b5 0b 00    	add    BYTE PTR [rip+0xbb547],al        # bc449 <__FRAME_END__+0xbba45>
     f02:	00 05 48 05 0f 00    	add    BYTE PTR [rip+0xf0548],al        # f1450 <__FRAME_END__+0xf0a4c>
     f08:	00 05 49 7e 39 00    	add    BYTE PTR [rip+0x397e49],al        # 398d57 <_end+0x197d3f>
     f0e:	00 05 4a 69 49 00    	add    BYTE PTR [rip+0x49694a],al        # 49785e <_end+0x296846>
     f14:	00 05 50 92 01 00    	add    BYTE PTR [rip+0x19250],al        # 1a16a <__FRAME_END__+0x19766>
     f1a:	00 05 53 77 2c 00    	add    BYTE PTR [rip+0x2c7753],al        # 2c8673 <_end+0xc765b>
     f20:	00 05 56 c5 1a 00    	add    BYTE PTR [rip+0x1ac556],al        # 1ad47c <__FRAME_END__+0x1aca78>
     f26:	00 05 5c 48 09 00    	add    BYTE PTR [rip+0x9485c],al        # 95788 <__FRAME_END__+0x94d84>
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	04 00                	add    al,0x0
     f30:	00 05 05 10 35 00    	add    BYTE PTR [rip+0x351005],al        # 351f3b <_end+0x150f23>
     f36:	00 05 0e 36 2f 00    	add    BYTE PTR [rip+0x2f360e],al        # 2f454a <_end+0xf3532>
     f3c:	00 05 12 68 06 00    	add    BYTE PTR [rip+0x66812],al        # 67754 <__FRAME_END__+0x66d50>
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	04 00                	add    al,0x0
     f46:	00 06                	add    BYTE PTR [rsi],al
     f48:	ee                   	out    dx,al
     f49:	01 25 2e 00 00 06    	add    DWORD PTR [rip+0x600002e],esp        # 6000f7d <_end+0x5dfff65>
     f4f:	91                   	xchg   ecx,eax
     f50:	03 26                	add    esp,DWORD PTR [rsi]
     f52:	13 00                	adc    eax,DWORD PTR [rax]
     f54:	00 05 96 03 cf 1c    	add    BYTE PTR [rip+0x1ccf0396],al        # 1ccf12f0 <_end+0x1caf02d8>
     f5a:	00 00                	add    BYTE PTR [rax],al
     f5c:	06                   	(bad)  
     f5d:	9c                   	pushf  
     f5e:	03 1f                	add    ebx,DWORD PTR [rdi]
     f60:	13 00                	adc    eax,DWORD PTR [rax]
     f62:	00 00                	add    BYTE PTR [rax],al
     f64:	04 00                	add    al,0x0
     f66:	00 05 33 b7 09 00    	add    BYTE PTR [rip+0x9b733],al        # 9c69f <__FRAME_END__+0x9bc9b>
     f6c:	00 05 35 2e 05 00    	add    BYTE PTR [rip+0x52e35],al        # 53da7 <__FRAME_END__+0x533a3>
     f72:	00 05 36 bd 2d 00    	add    BYTE PTR [rip+0x2dbd36],al        # 2dccae <_end+0xdbc96>
     f78:	00 05 38 63 18 00    	add    BYTE PTR [rip+0x186338],al        # 1872b6 <__FRAME_END__+0x1868b2>
     f7e:	00 05 3b 3d 02 00    	add    BYTE PTR [rip+0x23d3b],al        # 24cbf <__FRAME_END__+0x242bb>
     f84:	00 05 3d 2a 37 00    	add    BYTE PTR [rip+0x372a3d],al        # 3739c7 <_end+0x1729af>
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	04 00                	add    al,0x0
     f8e:	00 05 25 8f 40 00    	add    BYTE PTR [rip+0x408f25],al        # 409eb9 <_end+0x208ea1>
     f94:	00 05 26 7c 4b 00    	add    BYTE PTR [rip+0x4b7c26],al        # 4b8bc0 <_end+0x2b7ba8>
     f9a:	00 05 27 b4 28 00    	add    BYTE PTR [rip+0x28b427],al        # 28c3c7 <_end+0x8b3af>
     fa0:	00 05 28 a0 3d 00    	add    BYTE PTR [rip+0x3da028],al        # 3dafce <_end+0x1d9fb6>
     fa6:	00 05 29 b0 10 00    	add    BYTE PTR [rip+0x10b029],al        # 10bfd5 <__FRAME_END__+0x10b5d1>
     fac:	00 05 2a f6 0c 00    	add    BYTE PTR [rip+0xcf62a],al        # d05dc <__FRAME_END__+0xcfbd8>
     fb2:	00 05 2b cd 3c 00    	add    BYTE PTR [rip+0x3ccd2b],al        # 3cdce3 <_end+0x1ccccb>
     fb8:	00 05 2c cd 1e 00    	add    BYTE PTR [rip+0x1ecd2c],al        # 1edcea <__FRAME_END__+0x1ed2e6>
     fbe:	00 05 2d f1 39 00    	add    BYTE PTR [rip+0x39f12d],al        # 3a00f1 <_end+0x19f0d9>
     fc4:	00 05 2e 50 1f 00    	add    BYTE PTR [rip+0x1f502e],al        # 1f5ff8 <__FRAME_END__+0x1f55f4>
     fca:	00 05 2f 25 3b 00    	add    BYTE PTR [rip+0x3b252f],al        # 3b34ff <_end+0x1b24e7>
     fd0:	00 05 30 ce 3a 00    	add    BYTE PTR [rip+0x3ace30],al        # 3ade06 <_end+0x1acdee>
     fd6:	00 05 31 ee 3f 00    	add    BYTE PTR [rip+0x3fee31],al        # 3ffe0d <_end+0x1fedf5>
     fdc:	00 05 34 54 3e 00    	add    BYTE PTR [rip+0x3e5434],al        # 3e6416 <_end+0x1e53fe>
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	04 00                	add    al,0x0
     fe6:	00 06                	add    BYTE PTR [rsi],al
     fe8:	22 5c 2e 00          	and    bl,BYTE PTR [rsi+rbp*1+0x0]
     fec:	00 05 27 0b 23 00    	add    BYTE PTR [rip+0x230b27],al        # 231b19 <_end+0x30b01>
     ff2:	00 00                	add    BYTE PTR [rax],al
     ff4:	04 00                	add    al,0x0
     ff6:	00 06                	add    BYTE PTR [rsi],al
     ff8:	37                   	(bad)  
     ff9:	92                   	xchg   edx,eax
     ffa:	41 00 00             	add    BYTE PTR [r8],al
     ffd:	05 38 0f 37 00       	add    eax,0x370f38
    1002:	00 05 3f dc 31 00    	add    BYTE PTR [rip+0x31dc3f],al        # 31ec47 <_end+0x11dc2f>
    1008:	00 05 42 1d 26 00    	add    BYTE PTR [rip+0x261d42],al        # 262d50 <_end+0x61d38>
    100e:	00 05 51 d0 26 00    	add    BYTE PTR [rip+0x26d051],al        # 26e065 <_end+0x6d04d>
    1014:	00 05 52 5e 33 00    	add    BYTE PTR [rip+0x335e52],al        # 336e6c <_end+0x135e54>
    101a:	00 05 53 fb 0d 00    	add    BYTE PTR [rip+0xdfb53],al        # e0b73 <__FRAME_END__+0xe016f>
    1020:	00 05 54 3b 45 00    	add    BYTE PTR [rip+0x453b54],al        # 454b7a <_end+0x253b62>
    1026:	00 05 55 6a 17 00    	add    BYTE PTR [rip+0x176a55],al        # 177a81 <__FRAME_END__+0x17707d>
    102c:	00 05 56 98 1b 00    	add    BYTE PTR [rip+0x1b9856],al        # 1ba888 <__FRAME_END__+0x1b9e84>
    1032:	00 05 57 83 28 00    	add    BYTE PTR [rip+0x288357],al        # 28938f <_end+0x88377>
    1038:	00 05 58 b6 02 00    	add    BYTE PTR [rip+0x2b658],al        # 2c696 <__FRAME_END__+0x2bc92>
    103e:	00 05 60 2d 22 00    	add    BYTE PTR [rip+0x222d60],al        # 223da4 <_end+0x22d8c>
    1044:	00 05 61 7c 1b 00    	add    BYTE PTR [rip+0x1b7c61],al        # 1b8cab <__FRAME_END__+0x1b82a7>
    104a:	00 05 62 cb 36 00    	add    BYTE PTR [rip+0x36cb62],al        # 36dbb2 <_end+0x16cb9a>
    1050:	00 05 63 e0 03 00    	add    BYTE PTR [rip+0x3e063],al        # 3f0b9 <__FRAME_END__+0x3e6b5>
    1056:	00 05 64 49 3d 00    	add    BYTE PTR [rip+0x3d4964],al        # 3d59c0 <_end+0x1d49a8>
    105c:	00 05 65 79 47 00    	add    BYTE PTR [rip+0x477965],al        # 4789c7 <_end+0x2779af>
    1062:	00 05 66 89 05 00    	add    BYTE PTR [rip+0x58966],al        # 599ce <__FRAME_END__+0x58fca>
    1068:	00 05 67 22 03 00    	add    BYTE PTR [rip+0x32267],al        # 332d5 <__FRAME_END__+0x328d1>
    106e:	00 05 68 c1 11 00    	add    BYTE PTR [rip+0x11c168],al        # 11d1dc <__FRAME_END__+0x11c7d8>
    1074:	00 05 69 05 1b 00    	add    BYTE PTR [rip+0x1b0569],al        # 1b15e3 <__FRAME_END__+0x1b0bdf>
    107a:	00 05 6a 1d 20 00    	add    BYTE PTR [rip+0x201d6a],al        # 202dea <_end+0x1dd2>
    1080:	00 05 6b d6 2c 00    	add    BYTE PTR [rip+0x2cd66b],al        # 2ce6f1 <_end+0xcd6d9>
    1086:	00 05 6c c6 07 00    	add    BYTE PTR [rip+0x7c66c],al        # 7d6f8 <__FRAME_END__+0x7ccf4>
    108c:	00 05 6d 81 18 00    	add    BYTE PTR [rip+0x18816d],al        # 1891ff <__FRAME_END__+0x1887fb>
    1092:	00 05 6e 17 4d 00    	add    BYTE PTR [rip+0x4d176e],al        # 4d2806 <_end+0x2d17ee>
    1098:	00 05 6f 39 28 00    	add    BYTE PTR [rip+0x28396f],al        # 284a0d <_end+0x839f5>
    109e:	00 05 70 55 00 00    	add    BYTE PTR [rip+0x5570],al        # 6614 <__FRAME_END__+0x5c10>
    10a4:	00 05 71 61 3b 00    	add    BYTE PTR [rip+0x3b6171],al        # 3b721b <_end+0x1b6203>
    10aa:	00 05 72 ad 31 00    	add    BYTE PTR [rip+0x31ad72],al        # 31be22 <_end+0x11ae0a>
    10b0:	00 05 74 8b 29 00    	add    BYTE PTR [rip+0x298b74],al        # 299c2a <_end+0x98c12>
    10b6:	00 05 75 c3 21 00    	add    BYTE PTR [rip+0x21c375],al        # 21d431 <_end+0x1c419>
    10bc:	00 05 79 fd 2e 00    	add    BYTE PTR [rip+0x2efd79],al        # 2f0e3b <_end+0xefe23>
    10c2:	00 05 82 01 80 1c    	add    BYTE PTR [rip+0x1c800182],al        # 1c80124a <_end+0x1c600232>
    10c8:	00 00                	add    BYTE PTR [rax],al
    10ca:	05 83 01 50 30       	add    eax,0x30500183
    10cf:	00 00                	add    BYTE PTR [rax],al
    10d1:	05 84 01 d3 03       	add    eax,0x3d30184
    10d6:	00 00                	add    BYTE PTR [rax],al
    10d8:	05 85 01 86 2e       	add    eax,0x2e860185
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	05 86 01 00 00       	add    eax,0x186
    10e4:	00 00                	add    BYTE PTR [rax],al
    10e6:	05 87 01 24 1f       	add    eax,0x1f240187
    10eb:	00 00                	add    BYTE PTR [rax],al
    10ed:	05 88 01 01 19       	add    eax,0x19010188
    10f2:	00 00                	add    BYTE PTR [rax],al
    10f4:	05 89 01 af 16       	add    eax,0x16af0189
    10f9:	00 00                	add    BYTE PTR [rax],al
    10fb:	05 8a 01 7f 0b       	add    eax,0xb7f018a
    1100:	00 00                	add    BYTE PTR [rax],al
    1102:	05 8b 01 f2 37       	add    eax,0x37f2018b
    1107:	00 00                	add    BYTE PTR [rax],al
    1109:	05 8c 01 00 33       	add    eax,0x3300018c
    110e:	00 00                	add    BYTE PTR [rax],al
    1110:	05 8d 01 97 3e       	add    eax,0x3e97018d
    1115:	00 00                	add    BYTE PTR [rax],al
    1117:	05 8e 01 0f 41       	add    eax,0x410f018e
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	05 8f 01 8d 34       	add    eax,0x348d018f
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	05 90 01 e5 2a       	add    eax,0x2ae50190
    112a:	00 00                	add    BYTE PTR [rax],al
    112c:	05 91 01 d5 43       	add    eax,0x43d50191
    1131:	00 00                	add    BYTE PTR [rax],al
    1133:	05 92 01 9f 30       	add    eax,0x309f0192
    1138:	00 00                	add    BYTE PTR [rax],al
    113a:	05 f7 01 8b 26       	add    eax,0x268b01f7
    113f:	00 00                	add    BYTE PTR [rax],al
    1141:	05 94 02 6d 1b       	add    eax,0x1b6d0294
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	05 c3 02 73 19       	add    eax,0x197302c3
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	05 c4 02 8b 3c       	add    eax,0x3c8b02c4
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	05 c5 02 4d 1d       	add    eax,0x1d4d02c5
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	05 8f 03 af 49       	add    eax,0x49af038f
    1162:	00 00                	add    BYTE PTR [rax],al
    1164:	05 94 03 57 35       	add    eax,0x35570394
    1169:	00 00                	add    BYTE PTR [rax],al
    116b:	05 97 03 ac 3e       	add    eax,0x3eac0397
    1170:	00 00                	add    BYTE PTR [rax],al
    1172:	05 9b 03 11 43       	add    eax,0x4311039b
    1177:	00 00                	add    BYTE PTR [rax],al
    1179:	05 ae 03 fe 1c       	add    eax,0x1cfe03ae
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	05 af 03 4e 0f       	add    eax,0xf4e03af
    1185:	00 00                	add    BYTE PTR [rax],al
    1187:	05 b9 03 60 31       	add    eax,0x316003b9
    118c:	00 00                	add    BYTE PTR [rax],al
    118e:	05 c0 03 e4 15       	add    eax,0x15e403c0
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	05 c1 03 ea 2c       	add    eax,0x2cea03c1
    119a:	00 00                	add    BYTE PTR [rax],al
    119c:	05 c2 03 0c 21       	add    eax,0x210c03c2
    11a1:	00 00                	add    BYTE PTR [rax],al
    11a3:	05 c3 03 3b 12       	add    eax,0x123b03c3
    11a8:	00 00                	add    BYTE PTR [rax],al
    11aa:	05 c5 03 a4 18       	add    eax,0x18a403c5
    11af:	00 00                	add    BYTE PTR [rax],al
    11b1:	05 c8 03 fe 29       	add    eax,0x29fe03c8
    11b6:	00 00                	add    BYTE PTR [rax],al
    11b8:	05 cb 03 04 32       	add    eax,0x320403cb
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    11c2:	00 05 2f 23 39 00    	add    BYTE PTR [rip+0x39232f],al        # 3934f7 <_end+0x1924df>
    11c8:	00 05 3d 92 0b 00    	add    BYTE PTR [rip+0xb923d],al        # ba40b <__FRAME_END__+0xb9a07>
    11ce:	00 05 48 2c 0f 00    	add    BYTE PTR [rip+0xf2c48],al        # f3e1c <__FRAME_END__+0xf3418>
    11d4:	00 05 57 f5 02 00    	add    BYTE PTR [rip+0x2f557],al        # 30731 <__FRAME_END__+0x2fd2d>
    11da:	00 05 58 e0 2b 00    	add    BYTE PTR [rip+0x2be058],al        # 2bf238 <_end+0xbe220>
    11e0:	00 05 59 30 18 00    	add    BYTE PTR [rip+0x183059],al        # 18423f <__FRAME_END__+0x18383b>
    11e6:	00 05 5e b7 0e 00    	add    BYTE PTR [rip+0xeb75e],al        # ec94a <__FRAME_END__+0xebf46>
    11ec:	00 05 6b a0 44 00    	add    BYTE PTR [rip+0x44a06b],al        # 44b25d <_end+0x24a245>
    11f2:	00 05 6c 34 03 00    	add    BYTE PTR [rip+0x3346c],al        # 34664 <__FRAME_END__+0x33c60>
    11f8:	00 05 6d 1e 1a 00    	add    BYTE PTR [rip+0x1a1e6d],al        # 1a306b <__FRAME_END__+0x1a2667>
    11fe:	00 05 76 06 38 00    	add    BYTE PTR [rip+0x380676],al        # 38187a <_end+0x180862>
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	04 00                	add    al,0x0
    1208:	00 05 13 3d 2c 00    	add    BYTE PTR [rip+0x2c3d13],al        # 2c4f21 <_end+0xc3f09>
    120e:	00 05 19 98 18 00    	add    BYTE PTR [rip+0x189819],al        # 18aa2d <__FRAME_END__+0x18a029>
    1214:	00 05 1a f5 31 00    	add    BYTE PTR [rip+0x31f51a],al        # 320734 <_end+0x11f71c>
    121a:	00 05 1b c3 02 00    	add    BYTE PTR [rip+0x2c31b],al        # 2d53b <__FRAME_END__+0x2cb37>
    1220:	00 05 1e 9f 4a 00    	add    BYTE PTR [rip+0x4a9f1e],al        # 4ab144 <_end+0x2aa12c>
    1226:	00 06                	add    BYTE PTR [rsi],al
    1228:	24 0b                	and    al,0xb
    122a:	3c 00                	cmp    al,0x0
    122c:	00 05 25 b4 38 00    	add    BYTE PTR [rip+0x38b425],al        # 38c657 <_end+0x18b63f>
    1232:	00 00                	add    BYTE PTR [rax],al
    1234:	04 00                	add    al,0x0
    1236:	00 05 8b 01 80 22    	add    BYTE PTR [rip+0x2280018b],al        # 228013c7 <_end+0x226003af>
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	05 8c 01 9e 41       	add    eax,0x419e018c
    1243:	00 00                	add    BYTE PTR [rax],al
    1245:	05 8d 01 46 18       	add    eax,0x1846018d
    124a:	00 00                	add    BYTE PTR [rax],al
    124c:	05 e8 03 d9 12       	add    eax,0x12d903e8
    1251:	00 00                	add    BYTE PTR [rax],al
    1253:	05 90 04 f8 26       	add    eax,0x26f80490
    1258:	00 00                	add    BYTE PTR [rax],al
	...
Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_undefined: r16 (rip)

00000018 0000000000000014 0000001c FDE cie=00000000 pc=0000000000000660..000000000000068b
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000048 0000000000000024 0000001c FDE cie=00000030 pc=0000000000000600..0000000000000650
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000000606
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000000610
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000044 FDE cie=00000030 pc=0000000000000650..0000000000000658
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 000000000000001c 0000005c FDE cie=00000030 pc=000000000000076a..00000000000007e7
  DW_CFA_advance_loc: 1 to 000000000000076b
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 000000000000076e
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc1: 120 to 00000000000007e6
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop

000000a8 0000000000000044 0000007c FDE cie=00000030 pc=00000000000007f0..0000000000000855
  DW_CFA_advance_loc: 2 to 00000000000007f2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 2 to 00000000000007f4
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 00000000000007f9
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 2 to 00000000000007fb
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 8 to 0000000000000803
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 000000000000080b
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 13 to 0000000000000818
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 50 to 000000000000084a
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 000000000000084b
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 000000000000084c
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 000000000000084e
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 0000000000000850
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 0000000000000852
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000000854
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

000000f0 0000000000000010 000000c4 FDE cie=00000030 pc=0000000000000860..0000000000000862
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000104 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    000000000000076a 000000000000007d 
    0000000000000000 0000000000000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0x35c (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0xc0f): GNU C11 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fstack-protector-strong
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (indirect string, offset: 0xd0c): if_then.c
    <15>   DW_AT_comp_dir    : (indirect string, offset: 0x714): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/C/Intel_architecture/AMD64/Conditionals/With_Debug_Info
    <19>   DW_AT_low_pc      : 0x76a
    <21>   DW_AT_high_pc     : 0x7d
    <29>   DW_AT_stmt_list   : 0x0
    <2d>   DW_AT_GNU_macros  : 0x0
 <1><31>: Abbrev Number: 2 (DW_TAG_typedef)
    <32>   DW_AT_name        : (indirect string, offset: 0x28bf): size_t
    <36>   DW_AT_decl_file   : 2
    <37>   DW_AT_decl_line   : 216
    <38>   DW_AT_type        : <0x3c>
 <1><3c>: Abbrev Number: 3 (DW_TAG_base_type)
    <3d>   DW_AT_byte_size   : 8
    <3e>   DW_AT_encoding    : 7	(unsigned)
    <3f>   DW_AT_name        : (indirect string, offset: 0x394a): long unsigned int
 <1><43>: Abbrev Number: 3 (DW_TAG_base_type)
    <44>   DW_AT_byte_size   : 1
    <45>   DW_AT_encoding    : 8	(unsigned char)
    <46>   DW_AT_name        : (indirect string, offset: 0x267d): unsigned char
 <1><4a>: Abbrev Number: 3 (DW_TAG_base_type)
    <4b>   DW_AT_byte_size   : 2
    <4c>   DW_AT_encoding    : 7	(unsigned)
    <4d>   DW_AT_name        : (indirect string, offset: 0x4017): short unsigned int
 <1><51>: Abbrev Number: 3 (DW_TAG_base_type)
    <52>   DW_AT_byte_size   : 4
    <53>   DW_AT_encoding    : 7	(unsigned)
    <54>   DW_AT_name        : (indirect string, offset: 0x1c34): unsigned int
 <1><58>: Abbrev Number: 3 (DW_TAG_base_type)
    <59>   DW_AT_byte_size   : 1
    <5a>   DW_AT_encoding    : 6	(signed char)
    <5b>   DW_AT_name        : (indirect string, offset: 0x421a): signed char
 <1><5f>: Abbrev Number: 3 (DW_TAG_base_type)
    <60>   DW_AT_byte_size   : 2
    <61>   DW_AT_encoding    : 5	(signed)
    <62>   DW_AT_name        : (indirect string, offset: 0x2444): short int
 <1><66>: Abbrev Number: 4 (DW_TAG_base_type)
    <67>   DW_AT_byte_size   : 4
    <68>   DW_AT_encoding    : 5	(signed)
    <69>   DW_AT_name        : int
 <1><6d>: Abbrev Number: 3 (DW_TAG_base_type)
    <6e>   DW_AT_byte_size   : 8
    <6f>   DW_AT_encoding    : 5	(signed)
    <70>   DW_AT_name        : (indirect string, offset: 0x39a5): long int
 <1><74>: Abbrev Number: 2 (DW_TAG_typedef)
    <75>   DW_AT_name        : (indirect string, offset: 0x10ba): __off_t
    <79>   DW_AT_decl_file   : 3
    <7a>   DW_AT_decl_line   : 140
    <7b>   DW_AT_type        : <0x6d>
 <1><7f>: Abbrev Number: 2 (DW_TAG_typedef)
    <80>   DW_AT_name        : (indirect string, offset: 0xd02): __off64_t
    <84>   DW_AT_decl_file   : 3
    <85>   DW_AT_decl_line   : 141
    <86>   DW_AT_type        : <0x6d>
 <1><8a>: Abbrev Number: 5 (DW_TAG_pointer_type)
    <8b>   DW_AT_byte_size   : 8
 <1><8c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <8d>   DW_AT_byte_size   : 8
    <8e>   DW_AT_type        : <0x92>
 <1><92>: Abbrev Number: 3 (DW_TAG_base_type)
    <93>   DW_AT_byte_size   : 1
    <94>   DW_AT_encoding    : 6	(signed char)
    <95>   DW_AT_name        : (indirect string, offset: 0x4221): char
 <1><99>: Abbrev Number: 7 (DW_TAG_const_type)
    <9a>   DW_AT_type        : <0x92>
 <1><9e>: Abbrev Number: 8 (DW_TAG_structure_type)
    <9f>   DW_AT_name        : (indirect string, offset: 0x3d40): _IO_FILE
    <a3>   DW_AT_byte_size   : 216
    <a4>   DW_AT_decl_file   : 4
    <a5>   DW_AT_decl_line   : 245
    <a6>   DW_AT_sibling     : <0x21e>
 <2><aa>: Abbrev Number: 9 (DW_TAG_member)
    <ab>   DW_AT_name        : (indirect string, offset: 0x269a): _flags
    <af>   DW_AT_decl_file   : 4
    <b0>   DW_AT_decl_line   : 246
    <b1>   DW_AT_type        : <0x66>
    <b5>   DW_AT_data_member_location: 0
 <2><b6>: Abbrev Number: 9 (DW_TAG_member)
    <b7>   DW_AT_name        : (indirect string, offset: 0x20d2): _IO_read_ptr
    <bb>   DW_AT_decl_file   : 4
    <bc>   DW_AT_decl_line   : 251
    <bd>   DW_AT_type        : <0x8c>
    <c1>   DW_AT_data_member_location: 8
 <2><c2>: Abbrev Number: 9 (DW_TAG_member)
    <c3>   DW_AT_name        : (indirect string, offset: 0x3312): _IO_read_end
    <c7>   DW_AT_decl_file   : 4
    <c8>   DW_AT_decl_line   : 252
    <c9>   DW_AT_type        : <0x8c>
    <cd>   DW_AT_data_member_location: 16
 <2><ce>: Abbrev Number: 9 (DW_TAG_member)
    <cf>   DW_AT_name        : (indirect string, offset: 0x193b): _IO_read_base
    <d3>   DW_AT_decl_file   : 4
    <d4>   DW_AT_decl_line   : 253
    <d5>   DW_AT_type        : <0x8c>
    <d9>   DW_AT_data_member_location: 24
 <2><da>: Abbrev Number: 9 (DW_TAG_member)
    <db>   DW_AT_name        : (indirect string, offset: 0x24b6): _IO_write_base
    <df>   DW_AT_decl_file   : 4
    <e0>   DW_AT_decl_line   : 254
    <e1>   DW_AT_type        : <0x8c>
    <e5>   DW_AT_data_member_location: 32
 <2><e6>: Abbrev Number: 9 (DW_TAG_member)
    <e7>   DW_AT_name        : (indirect string, offset: 0x41cc): _IO_write_ptr
    <eb>   DW_AT_decl_file   : 4
    <ec>   DW_AT_decl_line   : 255
    <ed>   DW_AT_type        : <0x8c>
    <f1>   DW_AT_data_member_location: 40
 <2><f2>: Abbrev Number: 10 (DW_TAG_member)
    <f3>   DW_AT_name        : (indirect string, offset: 0x603): _IO_write_end
    <f7>   DW_AT_decl_file   : 4
    <f8>   DW_AT_decl_line   : 256
    <fa>   DW_AT_type        : <0x8c>
    <fe>   DW_AT_data_member_location: 48
 <2><ff>: Abbrev Number: 10 (DW_TAG_member)
    <100>   DW_AT_name        : (indirect string, offset: 0x4d69): _IO_buf_base
    <104>   DW_AT_decl_file   : 4
    <105>   DW_AT_decl_line   : 257
    <107>   DW_AT_type        : <0x8c>
    <10b>   DW_AT_data_member_location: 56
 <2><10c>: Abbrev Number: 10 (DW_TAG_member)
    <10d>   DW_AT_name        : (indirect string, offset: 0x2fe): _IO_buf_end
    <111>   DW_AT_decl_file   : 4
    <112>   DW_AT_decl_line   : 258
    <114>   DW_AT_type        : <0x8c>
    <118>   DW_AT_data_member_location: 64
 <2><119>: Abbrev Number: 10 (DW_TAG_member)
    <11a>   DW_AT_name        : (indirect string, offset: 0x25f1): _IO_save_base
    <11e>   DW_AT_decl_file   : 4
    <11f>   DW_AT_decl_line   : 260
    <121>   DW_AT_type        : <0x8c>
    <125>   DW_AT_data_member_location: 72
 <2><126>: Abbrev Number: 10 (DW_TAG_member)
    <127>   DW_AT_name        : (indirect string, offset: 0x42aa): _IO_backup_base
    <12b>   DW_AT_decl_file   : 4
    <12c>   DW_AT_decl_line   : 261
    <12e>   DW_AT_type        : <0x8c>
    <132>   DW_AT_data_member_location: 80
 <2><133>: Abbrev Number: 10 (DW_TAG_member)
    <134>   DW_AT_name        : (indirect string, offset: 0x1024): _IO_save_end
    <138>   DW_AT_decl_file   : 4
    <139>   DW_AT_decl_line   : 262
    <13b>   DW_AT_type        : <0x8c>
    <13f>   DW_AT_data_member_location: 88
 <2><140>: Abbrev Number: 10 (DW_TAG_member)
    <141>   DW_AT_name        : (indirect string, offset: 0x96a): _markers
    <145>   DW_AT_decl_file   : 4
    <146>   DW_AT_decl_line   : 264
    <148>   DW_AT_type        : <0x256>
    <14c>   DW_AT_data_member_location: 96
 <2><14d>: Abbrev Number: 10 (DW_TAG_member)
    <14e>   DW_AT_name        : (indirect string, offset: 0x4a55): _chain
    <152>   DW_AT_decl_file   : 4
    <153>   DW_AT_decl_line   : 266
    <155>   DW_AT_type        : <0x25c>
    <159>   DW_AT_data_member_location: 104
 <2><15a>: Abbrev Number: 10 (DW_TAG_member)
    <15b>   DW_AT_name        : (indirect string, offset: 0x16ce): _fileno
    <15f>   DW_AT_decl_file   : 4
    <160>   DW_AT_decl_line   : 268
    <162>   DW_AT_type        : <0x66>
    <166>   DW_AT_data_member_location: 112
 <2><167>: Abbrev Number: 10 (DW_TAG_member)
    <168>   DW_AT_name        : (indirect string, offset: 0x8a3): _flags2
    <16c>   DW_AT_decl_file   : 4
    <16d>   DW_AT_decl_line   : 272
    <16f>   DW_AT_type        : <0x66>
    <173>   DW_AT_data_member_location: 116
 <2><174>: Abbrev Number: 10 (DW_TAG_member)
    <175>   DW_AT_name        : (indirect string, offset: 0x3d34): _old_offset
    <179>   DW_AT_decl_file   : 4
    <17a>   DW_AT_decl_line   : 274
    <17c>   DW_AT_type        : <0x74>
    <180>   DW_AT_data_member_location: 120
 <2><181>: Abbrev Number: 10 (DW_TAG_member)
    <182>   DW_AT_name        : (indirect string, offset: 0x4c6d): _cur_column
    <186>   DW_AT_decl_file   : 4
    <187>   DW_AT_decl_line   : 278
    <189>   DW_AT_type        : <0x4a>
    <18d>   DW_AT_data_member_location: 128
 <2><18e>: Abbrev Number: 10 (DW_TAG_member)
    <18f>   DW_AT_name        : (indirect string, offset: 0x1854): _vtable_offset
    <193>   DW_AT_decl_file   : 4
    <194>   DW_AT_decl_line   : 279
    <196>   DW_AT_type        : <0x58>
    <19a>   DW_AT_data_member_location: 130
 <2><19b>: Abbrev Number: 10 (DW_TAG_member)
    <19c>   DW_AT_name        : (indirect string, offset: 0x164): _shortbuf
    <1a0>   DW_AT_decl_file   : 4
    <1a1>   DW_AT_decl_line   : 280
    <1a3>   DW_AT_type        : <0x262>
    <1a7>   DW_AT_data_member_location: 131
 <2><1a8>: Abbrev Number: 10 (DW_TAG_member)
    <1a9>   DW_AT_name        : (indirect string, offset: 0x3c15): _lock
    <1ad>   DW_AT_decl_file   : 4
    <1ae>   DW_AT_decl_line   : 284
    <1b0>   DW_AT_type        : <0x272>
    <1b4>   DW_AT_data_member_location: 136
 <2><1b5>: Abbrev Number: 10 (DW_TAG_member)
    <1b6>   DW_AT_name        : (indirect string, offset: 0x3d38): _offset
    <1ba>   DW_AT_decl_file   : 4
    <1bb>   DW_AT_decl_line   : 293
    <1bd>   DW_AT_type        : <0x7f>
    <1c1>   DW_AT_data_member_location: 144
 <2><1c2>: Abbrev Number: 10 (DW_TAG_member)
    <1c3>   DW_AT_name        : (indirect string, offset: 0x2b44): __pad1
    <1c7>   DW_AT_decl_file   : 4
    <1c8>   DW_AT_decl_line   : 301
    <1ca>   DW_AT_type        : <0x8a>
    <1ce>   DW_AT_data_member_location: 152
 <2><1cf>: Abbrev Number: 10 (DW_TAG_member)
    <1d0>   DW_AT_name        : (indirect string, offset: 0x2b4b): __pad2
    <1d4>   DW_AT_decl_file   : 4
    <1d5>   DW_AT_decl_line   : 302
    <1d7>   DW_AT_type        : <0x8a>
    <1db>   DW_AT_data_member_location: 160
 <2><1dc>: Abbrev Number: 10 (DW_TAG_member)
    <1dd>   DW_AT_name        : (indirect string, offset: 0x2b52): __pad3
    <1e1>   DW_AT_decl_file   : 4
    <1e2>   DW_AT_decl_line   : 303
    <1e4>   DW_AT_type        : <0x8a>
    <1e8>   DW_AT_data_member_location: 168
 <2><1e9>: Abbrev Number: 10 (DW_TAG_member)
    <1ea>   DW_AT_name        : (indirect string, offset: 0x2b59): __pad4
    <1ee>   DW_AT_decl_file   : 4
    <1ef>   DW_AT_decl_line   : 304
    <1f1>   DW_AT_type        : <0x8a>
    <1f5>   DW_AT_data_member_location: 176
 <2><1f6>: Abbrev Number: 10 (DW_TAG_member)
    <1f7>   DW_AT_name        : (indirect string, offset: 0x2b60): __pad5
    <1fb>   DW_AT_decl_file   : 4
    <1fc>   DW_AT_decl_line   : 306
    <1fe>   DW_AT_type        : <0x31>
    <202>   DW_AT_data_member_location: 184
 <2><203>: Abbrev Number: 10 (DW_TAG_member)
    <204>   DW_AT_name        : (indirect string, offset: 0x1f4a): _mode
    <208>   DW_AT_decl_file   : 4
    <209>   DW_AT_decl_line   : 307
    <20b>   DW_AT_type        : <0x66>
    <20f>   DW_AT_data_member_location: 192
 <2><210>: Abbrev Number: 10 (DW_TAG_member)
    <211>   DW_AT_name        : (indirect string, offset: 0x4d60): _unused2
    <215>   DW_AT_decl_file   : 4
    <216>   DW_AT_decl_line   : 309
    <218>   DW_AT_type        : <0x278>
    <21c>   DW_AT_data_member_location: 196
 <2><21d>: Abbrev Number: 0
 <1><21e>: Abbrev Number: 11 (DW_TAG_typedef)
    <21f>   DW_AT_name        : (indirect string, offset: 0x20f): _IO_lock_t
    <223>   DW_AT_decl_file   : 4
    <224>   DW_AT_decl_line   : 154
 <1><225>: Abbrev Number: 8 (DW_TAG_structure_type)
    <226>   DW_AT_name        : (indirect string, offset: 0x1bda): _IO_marker
    <22a>   DW_AT_byte_size   : 24
    <22b>   DW_AT_decl_file   : 4
    <22c>   DW_AT_decl_line   : 160
    <22d>   DW_AT_sibling     : <0x256>
 <2><231>: Abbrev Number: 9 (DW_TAG_member)
    <232>   DW_AT_name        : (indirect string, offset: 0x1a6b): _next
    <236>   DW_AT_decl_file   : 4
    <237>   DW_AT_decl_line   : 161
    <238>   DW_AT_type        : <0x256>
    <23c>   DW_AT_data_member_location: 0
 <2><23d>: Abbrev Number: 9 (DW_TAG_member)
    <23e>   DW_AT_name        : (indirect string, offset: 0x418c): _sbuf
    <242>   DW_AT_decl_file   : 4
    <243>   DW_AT_decl_line   : 162
    <244>   DW_AT_type        : <0x25c>
    <248>   DW_AT_data_member_location: 8
 <2><249>: Abbrev Number: 9 (DW_TAG_member)
    <24a>   DW_AT_name        : (indirect string, offset: 0xf49): _pos
    <24e>   DW_AT_decl_file   : 4
    <24f>   DW_AT_decl_line   : 166
    <250>   DW_AT_type        : <0x66>
    <254>   DW_AT_data_member_location: 16
 <2><255>: Abbrev Number: 0
 <1><256>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <257>   DW_AT_byte_size   : 8
    <258>   DW_AT_type        : <0x225>
 <1><25c>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <25d>   DW_AT_byte_size   : 8
    <25e>   DW_AT_type        : <0x9e>
 <1><262>: Abbrev Number: 12 (DW_TAG_array_type)
    <263>   DW_AT_type        : <0x92>
    <267>   DW_AT_sibling     : <0x272>
 <2><26b>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <26c>   DW_AT_type        : <0x3c>
    <270>   DW_AT_upper_bound : 0
 <2><271>: Abbrev Number: 0
 <1><272>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <273>   DW_AT_byte_size   : 8
    <274>   DW_AT_type        : <0x21e>
 <1><278>: Abbrev Number: 12 (DW_TAG_array_type)
    <279>   DW_AT_type        : <0x92>
    <27d>   DW_AT_sibling     : <0x288>
 <2><281>: Abbrev Number: 13 (DW_TAG_subrange_type)
    <282>   DW_AT_type        : <0x3c>
    <286>   DW_AT_upper_bound : 19
 <2><287>: Abbrev Number: 0
 <1><288>: Abbrev Number: 14 (DW_TAG_structure_type)
    <289>   DW_AT_name        : (indirect string, offset: 0x38c1): _IO_FILE_plus
    <28d>   DW_AT_declaration : 1
 <1><28d>: Abbrev Number: 15 (DW_TAG_variable)
    <28e>   DW_AT_name        : (indirect string, offset: 0x252a): _IO_2_1_stdin_
    <292>   DW_AT_decl_file   : 4
    <293>   DW_AT_decl_line   : 319
    <295>   DW_AT_type        : <0x288>
    <299>   DW_AT_external    : 1
    <299>   DW_AT_declaration : 1
 <1><299>: Abbrev Number: 15 (DW_TAG_variable)
    <29a>   DW_AT_name        : (indirect string, offset: 0x25a1): _IO_2_1_stdout_
    <29e>   DW_AT_decl_file   : 4
    <29f>   DW_AT_decl_line   : 320
    <2a1>   DW_AT_type        : <0x288>
    <2a5>   DW_AT_external    : 1
    <2a5>   DW_AT_declaration : 1
 <1><2a5>: Abbrev Number: 15 (DW_TAG_variable)
    <2a6>   DW_AT_name        : (indirect string, offset: 0x1ef9): _IO_2_1_stderr_
    <2aa>   DW_AT_decl_file   : 4
    <2ab>   DW_AT_decl_line   : 321
    <2ad>   DW_AT_type        : <0x288>
    <2b1>   DW_AT_external    : 1
    <2b1>   DW_AT_declaration : 1
 <1><2b1>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <2b2>   DW_AT_byte_size   : 8
    <2b3>   DW_AT_type        : <0x99>
 <1><2b7>: Abbrev Number: 7 (DW_TAG_const_type)
    <2b8>   DW_AT_type        : <0x2b1>
 <1><2bc>: Abbrev Number: 16 (DW_TAG_variable)
    <2bd>   DW_AT_name        : (indirect string, offset: 0x2286): stdin
    <2c1>   DW_AT_decl_file   : 5
    <2c2>   DW_AT_decl_line   : 135
    <2c3>   DW_AT_type        : <0x25c>
    <2c7>   DW_AT_external    : 1
    <2c7>   DW_AT_declaration : 1
 <1><2c7>: Abbrev Number: 16 (DW_TAG_variable)
    <2c8>   DW_AT_name        : (indirect string, offset: 0x41a5): stdout
    <2cc>   DW_AT_decl_file   : 5
    <2cd>   DW_AT_decl_line   : 136
    <2ce>   DW_AT_type        : <0x25c>
    <2d2>   DW_AT_external    : 1
    <2d2>   DW_AT_declaration : 1
 <1><2d2>: Abbrev Number: 16 (DW_TAG_variable)
    <2d3>   DW_AT_name        : (indirect string, offset: 0x184d): stderr
    <2d7>   DW_AT_decl_file   : 5
    <2d8>   DW_AT_decl_line   : 137
    <2d9>   DW_AT_type        : <0x25c>
    <2dd>   DW_AT_external    : 1
    <2dd>   DW_AT_declaration : 1
 <1><2dd>: Abbrev Number: 16 (DW_TAG_variable)
    <2de>   DW_AT_name        : (indirect string, offset: 0x164b): sys_nerr
    <2e2>   DW_AT_decl_file   : 6
    <2e3>   DW_AT_decl_line   : 26
    <2e4>   DW_AT_type        : <0x66>
    <2e8>   DW_AT_external    : 1
    <2e8>   DW_AT_declaration : 1
 <1><2e8>: Abbrev Number: 12 (DW_TAG_array_type)
    <2e9>   DW_AT_type        : <0x2b7>
    <2ed>   DW_AT_sibling     : <0x2f3>
 <2><2f1>: Abbrev Number: 17 (DW_TAG_subrange_type)
 <2><2f2>: Abbrev Number: 0
 <1><2f3>: Abbrev Number: 7 (DW_TAG_const_type)
    <2f4>   DW_AT_type        : <0x2e8>
 <1><2f8>: Abbrev Number: 16 (DW_TAG_variable)
    <2f9>   DW_AT_name        : (indirect string, offset: 0x1536): sys_errlist
    <2fd>   DW_AT_decl_file   : 6
    <2fe>   DW_AT_decl_line   : 27
    <2ff>   DW_AT_type        : <0x2f3>
    <303>   DW_AT_external    : 1
    <303>   DW_AT_declaration : 1
 <1><303>: Abbrev Number: 18 (DW_TAG_subprogram)
    <304>   DW_AT_external    : 1
    <304>   DW_AT_name        : (indirect string, offset: 0x47aa): main
    <308>   DW_AT_decl_file   : 1
    <309>   DW_AT_decl_line   : 3
    <30a>   DW_AT_prototyped  : 1
    <30a>   DW_AT_type        : <0x66>
    <30e>   DW_AT_low_pc      : 0x76a
    <316>   DW_AT_high_pc     : 0x7d
    <31e>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <320>   DW_AT_GNU_all_tail_call_sites: 1
    <320>   DW_AT_sibling     : <0x359>
 <2><324>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <325>   DW_AT_name        : (indirect string, offset: 0x79c): argc
    <329>   DW_AT_decl_file   : 1
    <32a>   DW_AT_decl_line   : 3
    <32b>   DW_AT_type        : <0x66>
    <32f>   DW_AT_location    : 2 byte block: 91 5c 	(DW_OP_fbreg: -36)
 <2><332>: Abbrev Number: 19 (DW_TAG_formal_parameter)
    <333>   DW_AT_name        : (indirect string, offset: 0x1ce0): argv
    <337>   DW_AT_decl_file   : 1
    <338>   DW_AT_decl_line   : 3
    <339>   DW_AT_type        : <0x359>
    <33d>   DW_AT_location    : 2 byte block: 91 50 	(DW_OP_fbreg: -48)
 <2><340>: Abbrev Number: 20 (DW_TAG_variable)
    <341>   DW_AT_name        : a
    <343>   DW_AT_decl_file   : 1
    <344>   DW_AT_decl_line   : 5
    <345>   DW_AT_type        : <0x66>
    <349>   DW_AT_location    : 2 byte block: 91 60 	(DW_OP_fbreg: -32)
 <2><34c>: Abbrev Number: 20 (DW_TAG_variable)
    <34d>   DW_AT_name        : b
    <34f>   DW_AT_decl_file   : 1
    <350>   DW_AT_decl_line   : 5
    <351>   DW_AT_type        : <0x66>
    <355>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><358>: Abbrev Number: 0
 <1><359>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <35a>   DW_AT_byte_size   : 8
    <35b>   DW_AT_type        : <0x8c>
 <1><35f>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_structure_type    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_member    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_typedef    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_array_type    [has children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subrange_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_structure_type    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subrange_type    [no children]
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      558
  DWARF Version:               2
  Prologue Length:             525
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x1b):
  1	/usr/lib/gcc/x86_64-linux-gnu/7/include
  2	/usr/x86_64-linux-gnu/include/bits
  3	/usr/x86_64-linux-gnu/include
  4	/usr/x86_64-linux-gnu/include/sys
  5	/usr/x86_64-linux-gnu/include/gnu
  6	/usr/x86_64-linux-gnu/include/bits/types

 The File Name Table (offset 0xf2):
  Entry	Dir	Time	Size	Name
  1	0	0	0	if_then.c
  2	1	0	0	stddef.h
  3	2	0	0	types.h
  4	2	0	0	libio.h
  5	3	0	0	stdio.h
  6	2	0	0	sys_errlist.h
  7	3	0	0	stdc-predef.h
  8	2	0	0	libc-header-start.h
  9	3	0	0	features.h
  10	4	0	0	cdefs.h
  11	2	0	0	wordsize.h
  12	2	0	0	long-double.h
  13	5	0	0	stubs.h
  14	5	0	0	stubs-64.h
  15	2	0	0	typesizes.h
  16	6	0	0	__FILE.h
  17	6	0	0	FILE.h
  18	2	0	0	_G_config.h
  19	6	0	0	__mbstate_t.h
  20	1	0	0	stdarg.h
  21	2	0	0	stdio_lim.h

 Line Number Statements:
  [0x00000217]  Extended opcode 2: set Address to 0x76a
  [0x00000222]  Special opcode 7: advance Address by 0 to 0x76a and Line by 2 to 3
  [0x00000223]  Special opcode 215: advance Address by 15 to 0x779 and Line by 0 to 3
  [0x00000224]  Special opcode 219: advance Address by 15 to 0x788 and Line by 4 to 7
  [0x00000225]  Special opcode 105: advance Address by 7 to 0x78f and Line by 2 to 9
  [0x00000226]  Advance PC by constant 17 to 0x7a0
  [0x00000227]  Special opcode 6: advance Address by 0 to 0x7a0 and Line by 1 to 10
  [0x00000228]  Advance PC by constant 17 to 0x7b1
  [0x00000229]  Special opcode 105: advance Address by 7 to 0x7b8 and Line by 2 to 12
  [0x0000022a]  Special opcode 118: advance Address by 8 to 0x7c0 and Line by 1 to 13
  [0x0000022b]  Advance PC by constant 17 to 0x7d1
  [0x0000022c]  Special opcode 8: advance Address by 0 to 0x7d1 and Line by 3 to 16
  [0x0000022d]  Advance PC by 22 to 0x7e7
  [0x0000022f]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 5f494f5f 44454320 30323000 5f5f5349 _IO_DEC 020.__SI
  0x00000010 475f4154 4f4d4943 5f4d4158 5f5f2030 G_ATOMIC_MAX__ 0
  0x00000020 78376666 66666666 66005f5f 464c5436 x7fffffff.__FLT6
  0x00000030 345f4841 535f5155 4945545f 4e414e5f 4_HAS_QUIET_NAN_
  0x00000040 5f203100 5f53495a 455f545f 44454649 _ 1._SIZE_T_DEFI
  0x00000050 4e454420 005f494f 5f49535f 46494c45 NED ._IO_IS_FILE
  0x00000060 42554620 30783230 3030005f 5f444543 BUF 0x2000.__DEC
  0x00000070 36345f53 55424e4f 524d414c 5f4d494e 64_SUBNORMAL_MIN
  0x00000080 5f5f2030 2e303030 30303030 30303030 __ 0.00000000000
  0x00000090 30303031 452d3338 33444400 5f5f464c 0001E-383DD.__FL
  0x000000a0 5433325f 4841535f 494e4649 4e495459 T32_HAS_INFINITY
  0x000000b0 5f5f2031 005f5f46 4c543634 5f4d4158 __ 1.__FLT64_MAX
  0x000000c0 5f455850 5f5f2031 30323400 5f5f464c _EXP__ 1024.__FL
  0x000000d0 545f4d49 4e5f3130 5f455850 5f5f2028 T_MIN_10_EXP__ (
  0x000000e0 2d333729 005f5f53 59534341 4c4c5f55 -37).__SYSCALL_U
  0x000000f0 4c4f4e47 5f545950 45205f5f 554c4f4e LONG_TYPE __ULON
  0x00000100 47574f52 445f5459 5045005f 5f464c54 GWORD_TYPE.__FLT
  0x00000110 3634585f 45505349 4c4f4e5f 5f20312e 64X_EPSILON__ 1.
  0x00000120 30383432 30323137 32343835 35303434 0842021724855044
  0x00000130 33343030 37343532 38303038 36393934 3400745280086994
  0x00000140 31373165 2d313946 36347800 5f5f464c 171e-19F64x.__FL
  0x00000150 54333258 5f4d4158 5f455850 5f5f2031 T32X_MAX_EXP__ 1
  0x00000160 30323400 5f73686f 72746275 66005f5f 024._shortbuf.__
  0x00000170 4743435f 41544f4d 49435f54 4553545f GCC_ATOMIC_TEST_
  0x00000180 414e445f 5345545f 54525545 56414c20 AND_SET_TRUEVAL 
  0x00000190 31005f5f 4f46465f 545f4d41 54434845 1.__OFF_T_MATCHE
  0x000001a0 535f4f46 4636345f 54203100 5f5f4445 S_OFF64_T 1.__DE
  0x000001b0 4336345f 45505349 4c4f4e5f 5f203145 C64_EPSILON__ 1E
  0x000001c0 2d313544 44005f5f 44424c5f 44454e4f -15DD.__DBL_DENO
  0x000001d0 524d5f4d 494e5f5f 20282864 6f75626c RM_MIN__ ((doubl
  0x000001e0 6529342e 39343036 35363435 38343132 e)4.940656458412
  0x000001f0 34363534 34313736 35363837 39323836 4654417656879286
  0x00000200 38323231 33373265 2d333234 4c29005f 8221372e-324L)._
  0x00000210 494f5f6c 6f636b5f 74005f5f 494e5450 IO_lock_t.__INTP
  0x00000220 54525f4d 41585f5f 20307837 66666666 TR_MAX__ 0x7ffff
  0x00000230 66666666 66666666 6666664c 005f475f fffffffffffL._G_
  0x00000240 48415645 5f53545f 424c4b53 495a4520 HAVE_ST_BLKSIZE 
  0x00000250 64656669 6e656420 285f5354 41544255 defined (_STATBU
  0x00000260 465f5354 5f424c4b 53495a45 29005f5f F_ST_BLKSIZE).__
  0x00000270 666c6578 61727220 5b5d005f 5f464c54 flexarr [].__FLT
  0x00000280 33325f4d 414e545f 4449475f 5f203234 32_MANT_DIG__ 24
  0x00000290 005f5f47 43435f48 4156455f 53594e43 .__GCC_HAVE_SYNC
  0x000002a0 5f434f4d 50415245 5f414e44 5f535741 _COMPARE_AND_SWA
  0x000002b0 505f3820 31005f49 4f535f42 494e2031 P_8 1._IOS_BIN 1
  0x000002c0 32380046 494c454e 414d455f 4d415820 28.FILENAME_MAX 
  0x000002d0 34303936 005f5354 44435f50 52454445 4096._STDC_PREDE
  0x000002e0 465f4820 31005f5f 5553455f 49534f43 F_H 1.__USE_ISOC
  0x000002f0 31312031 005f494f 46424620 30005f49 11 1._IOFBF 0._I
  0x00000300 4f5f6275 665f656e 64005f5f 494e545f O_buf_end.__INT_
  0x00000310 46415354 36345f57 49445448 5f5f2036 FAST64_WIDTH__ 6
  0x00000320 34005f49 4f5f454f 465f5345 454e2030 4._IO_EOF_SEEN 0
  0x00000330 78313000 5345454b 5f435552 2031005f x10.SEEK_CUR 1._
  0x00000340 5f464c54 3332585f 44454349 4d414c5f _FLT32X_DECIMAL_
  0x00000350 4449475f 5f203137 005f5f6b 385f5f20 DIG__ 17.__k8__ 
  0x00000360 31005f5f 44424c5f 4d494e5f 4558505f 1.__DBL_MIN_EXP_
  0x00000370 5f20282d 31303231 29005f5f 494e545f _ (-1021).__INT_
  0x00000380 46415354 36345f4d 41585f5f 20307837 FAST64_MAX__ 0x7
  0x00000390 66666666 66666666 66666666 6666664c fffffffffffffffL
  0x000003a0 005f5f68 61735f69 6e636c75 64655f6e .__has_include_n
  0x000003b0 65787428 53545229 205f5f68 61735f69 ext(STR) __has_i
  0x000003c0 6e636c75 64655f6e 6578745f 5f285354 nclude_next__(ST
  0x000003d0 5229005f 494f5f52 49474854 20303400 R)._IO_RIGHT 04.
  0x000003e0 5f494f5f 55534552 5f425546 2031005f _IO_USER_BUF 1._
  0x000003f0 5359535f 43444546 535f4820 31005f5f SYS_CDEFS_H 1.__
  0x00000400 464c5433 32585f4d 41585f5f 20312e37 FLT32X_MAX__ 1.7
  0x00000410 39373639 33313334 38363233 31353730 9769313486231570
  0x00000420 38313435 32373432 33373331 37303433 8145274237317043
  0x00000430 3537652b 33303846 33327800 5f5f676c 57e+308F32x.__gl
  0x00000440 6962635f 756e6c69 6b656c79 28636f6e ibc_unlikely(con
  0x00000450 6429205f 5f627569 6c74696e 5f657870 d) __builtin_exp
  0x00000460 65637420 2828636f 6e64292c 20302900 ect ((cond), 0).
  0x00000470 5f5f5349 5a454f46 5f57494e 545f545f __SIZEOF_WINT_T_
  0x00000480 5f203400 5f5f474e 55435f50 52455245 _ 4.__GNUC_PRERE
  0x00000490 51286d61 6a2c6d69 6e292028 285f5f47 Q(maj,min) ((__G
  0x000004a0 4e55435f 5f203c3c 20313629 202b205f NUC__ << 16) + _
  0x000004b0 5f474e55 435f4d49 4e4f525f 5f203e3d _GNUC_MINOR__ >=
  0x000004c0 2028286d 616a2920 3c3c2031 3629202b  ((maj) << 16) +
  0x000004d0 20286d69 6e292900 5f5f5549 4e545054  (min)).__UINTPT
  0x000004e0 525f4d41 585f5f20 30786666 66666666 R_MAX__ 0xffffff
  0x000004f0 66666666 66666666 6666554c 005f5f76 ffffffffffUL.__v
  0x00000500 615f6172 675f7061 636b5f6c 656e2829 a_arg_pack_len()
  0x00000510 205f5f62 75696c74 696e5f76 615f6172  __builtin_va_ar
  0x00000520 675f7061 636b5f6c 656e2028 29005f47 g_pack_len ()._G
  0x00000530 5f484156 455f4d4d 41502031 005f5f61 _HAVE_MMAP 1.__a
  0x00000540 74747269 62757465 5f636f6e 73745f5f ttribute_const__
  0x00000550 205f5f61 74747269 62757465 5f5f2028  __attribute__ (
  0x00000560 285f5f63 6f6e7374 5f5f2929 005f5f47 (__const__)).__G
  0x00000570 4c494243 5f555345 5f444550 52454341 LIBC_USE_DEPRECA
  0x00000580 5445445f 47455453 005f494f 5f4e4f5f TED_GETS._IO_NO_
  0x00000590 57524954 45532038 005f5f47 4e55435f WRITES 8.__GNUC_
  0x000005a0 4d494e4f 525f5f20 33005f5f 5553455f MINOR__ 3.__USE_
  0x000005b0 4c415247 4546494c 45363400 5f5f524c LARGEFILE64.__RL
  0x000005c0 494d5f54 5f545950 45205f5f 53595343 IM_T_TYPE __SYSC
  0x000005d0 414c4c5f 554c4f4e 475f5459 5045005f ALL_ULONG_TYPE._
  0x000005e0 5f4c4442 4c5f5245 44495228 6e616d65 _LDBL_REDIR(name
  0x000005f0 2c70726f 746f2920 6e616d65 2070726f ,proto) name pro
  0x00000600 746f005f 494f5f77 72697465 5f656e64 to._IO_write_end
  0x00000610 005f5f47 4c494243 5f505245 52455128 .__GLIBC_PREREQ(
  0x00000620 6d616a2c 6d696e29 2028285f 5f474c49 maj,min) ((__GLI
  0x00000630 42435f5f 203c3c20 31362920 2b205f5f BC__ << 16) + __
  0x00000640 474c4942 435f4d49 4e4f525f 5f203e3d GLIBC_MINOR__ >=
  0x00000650 2028286d 616a2920 3c3c2031 3629202b  ((maj) << 16) +
  0x00000660 20286d69 6e292900 5f5f6e65 65645f4e  (min)).__need_N
  0x00000670 554c4c20 005f5f46 4c543634 5f4d494e ULL .__FLT64_MIN
  0x00000680 5f5f2032 2e323235 30373338 35383530 __ 2.22507385850
  0x00000690 37323031 33383330 39303233 32373137 7201383090232717
  0x000006a0 33333234 30343036 652d3330 38463634 33240406e-308F64
  0x000006b0 005f5f4c 4f4e475f 4c4f4e47 5f574944 .__LONG_LONG_WID
  0x000006c0 54485f5f 20363400 5f504f53 49585f53 TH__ 64._POSIX_S
  0x000006d0 4f555243 45005f5f 464c545f 44454e4f OURCE.__FLT_DENO
  0x000006e0 524d5f4d 494e5f5f 20312e34 30313239 RM_MIN__ 1.40129
  0x000006f0 38343634 33323438 31373037 30393233 8464324817070923
  0x00000700 37323935 38333238 39393136 3133652d 72958328991613e-
  0x00000710 34354600 2f686f6d 652f7562 756e7475 45F./home/ubuntu
  0x00000720 2f456e67 696e6565 72696e67 2f50726f /Engineering/Pro
  0x00000730 6772616d 6d696e67 2f446973 61737365 gramming/Disasse
  0x00000740 6d626c69 6e672d42 696e6172 6965732f mbling-Binaries/
  0x00000750 432f496e 74656c5f 61726368 69746563 C/Intel_architec
  0x00000760 74757265 2f414d44 36342f43 6f6e6469 ture/AMD64/Condi
  0x00000770 74696f6e 616c732f 57697468 5f446562 tionals/With_Deb
  0x00000780 75675f49 6e666f00 5f5f5349 5a454f46 ug_Info.__SIZEOF
  0x00000790 5f53495a 455f545f 5f203800 61726763 _SIZE_T__ 8.argc
  0x000007a0 005f5f4f 52444552 5f424947 5f454e44 .__ORDER_BIG_END
  0x000007b0 49414e5f 5f203433 3231005f 5f474e55 IAN__ 4321.__GNU
  0x000007c0 435f5f20 37005f49 4f5f4c49 4e455f42 C__ 7._IO_LINE_B
  0x000007d0 55462030 78323030 005f5f55 53455f49 UF 0x200.__USE_I
  0x000007e0 534f4358 58313100 5f5f5553 455f4154 SOCXX11.__USE_AT
  0x000007f0 46494c45 2031005f 5f6e6f6e 6e756c6c FILE 1.__nonnull
  0x00000800 28706172 616d7329 205f5f61 74747269 (params) __attri
  0x00000810 62757465 5f5f2028 285f5f6e 6f6e6e75 bute__ ((__nonnu
  0x00000820 6c6c5f5f 20706172 616d7329 29005f5f ll__ params)).__
  0x00000830 55494e54 36345f43 28632920 63202323 UINT64_C(c) c ##
  0x00000840 20554c00 5f5f474e 555f4c49 42524152  UL.__GNU_LIBRAR
  0x00000850 595f5f00 5f5f4442 4c5f4d41 4e545f44 Y__.__DBL_MANT_D
  0x00000860 49475f5f 20353300 5f5f5553 455f504f IG__ 53.__USE_PO
  0x00000870 53495831 39393530 36203100 5f5f7374 SIX199506 1.__st
  0x00000880 75625f63 68666c61 67732000 5f5f494e ub_chflags .__IN
  0x00000890 545f4d41 585f5f20 30783766 66666666 T_MAX__ 0x7fffff
  0x000008a0 6666005f 666c6167 7332005f 5f4e5448 ff._flags2.__NTH
  0x000008b0 4e4c2866 63742920 5f5f6174 74726962 NL(fct) __attrib
  0x000008c0 7574655f 5f202828 5f5f6e6f 7468726f ute__ ((__nothro
  0x000008d0 775f5f29 29206663 74005f5f 73747562 w__)) fct.__stub
  0x000008e0 5f666368 666c6167 7320005f 5f494e54 _fchflags .__INT
  0x000008f0 31365f54 5950455f 5f207368 6f727420 16_TYPE__ short 
  0x00000900 696e7400 5f5f4445 43494d41 4c5f4249 int.__DECIMAL_BI
  0x00000910 445f464f 524d4154 5f5f2031 005f5f44 D_FORMAT__ 1.__D
  0x00000920 45433332 5f455053 494c4f4e 5f5f2031 EC32_EPSILON__ 1
  0x00000930 452d3644 46005f53 495a455f 545f4445 E-6DF._SIZE_T_DE
  0x00000940 434c4152 45442000 5f5f4644 5f534554 CLARED .__FD_SET
  0x00000950 53495a45 20313032 34005f5f 4c44424c SIZE 1024.__LDBL
  0x00000960 5f444947 5f5f2031 38005f6d 61726b65 _DIG__ 18._marke
  0x00000970 7273005f 5f41544f 4d49435f 5345515f rs.__ATOMIC_SEQ_
  0x00000980 43535420 35005f5f 5553455f 504f5349 CST 5.__USE_POSI
  0x00000990 58322031 005f5f55 53455f49 534f4339 X2 1.__USE_ISOC9
  0x000009a0 35203100 5f5f5349 5a454f46 5f53484f 5 1.__SIZEOF_SHO
  0x000009b0 52545f5f 2032005f 475f7661 5f6c6973 RT__ 2._G_va_lis
  0x000009c0 74205f5f 676e7563 5f76615f 6c697374 t __gnuc_va_list
  0x000009d0 005f5f55 494e5436 345f5459 50455f5f .__UINT64_TYPE__
  0x000009e0 206c6f6e 6720756e 7369676e 65642069  long unsigned i
  0x000009f0 6e74005f 5f494e54 5f464153 5433325f nt.__INT_FAST32_
  0x00000a00 4d41585f 5f203078 37666666 66666666 MAX__ 0x7fffffff
  0x00000a10 66666666 66666666 4c005f5f 494e545f ffffffffL.__INT_
  0x00000a20 4c454153 54385f54 5950455f 5f207369 LEAST8_TYPE__ si
  0x00000a30 676e6564 20636861 72005f5f 73697a65 gned char.__size
  0x00000a40 5f742000 5f5f5549 4e545f4c 45415354 _t .__UINT_LEAST
  0x00000a50 33325f54 5950455f 5f20756e 7369676e 32_TYPE__ unsign
  0x00000a60 65642069 6e74005f 5f737475 625f7369 ed int.__stub_si
  0x00000a70 67726574 75726e20 005f5f70 74725f74 greturn .__ptr_t
  0x00000a80 20766f69 64202a00 5f5f5333 325f5459  void *.__S32_TY
  0x00000a90 50452069 6e74005f 5f535444 435f4e4f PE int.__STDC_NO
  0x00000aa0 5f544852 45414453 5f5f2031 005f5f42 _THREADS__ 1.__B
  0x00000ab0 5954455f 4f524445 525f5f20 5f5f4f52 YTE_ORDER__ __OR
  0x00000ac0 4445525f 4c495454 4c455f45 4e444941 DER_LITTLE_ENDIA
  0x00000ad0 4e5f5f00 5f5f4c44 424c5f4d 494e5f5f N__.__LDBL_MIN__
  0x00000ae0 20332e33 36323130 33313433 31313230  3.3621031431120
  0x00000af0 39333530 36323632 36373738 31373332 9350626267781732
  0x00000b00 31373532 3630652d 34393332 4c005f5f 175260e-4932L.__
  0x00000b10 464c5433 325f4d49 4e5f3130 5f455850 FLT32_MIN_10_EXP
  0x00000b20 5f5f2028 2d333729 005f5f44 424c5f48 __ (-37).__DBL_H
  0x00000b30 41535f44 454e4f52 4d5f5f20 31005f5f AS_DENORM__ 1.__
  0x00000b40 494e545f 4c454153 5436345f 54595045 INT_LEAST64_TYPE
  0x00000b50 5f5f206c 6f6e6720 696e7400 5f5f5743 __ long int.__WC
  0x00000b60 4841525f 4d494e5f 5f20282d 5f5f5743 HAR_MIN__ (-__WC
  0x00000b70 4841525f 4d41585f 5f202d20 3129005f HAR_MAX__ - 1)._
  0x00000b80 494f5f53 484f5750 4f494e54 20303430 IO_SHOWPOINT 040
  0x00000b90 30005f5f 6f66665f 745f6465 66696e65 0.__off_t_define
  0x00000ba0 6420005f 5f535444 435f5554 465f3332 d .__STDC_UTF_32
  0x00000bb0 5f5f2031 005f5f42 4c4b5349 5a455f54 __ 1.__BLKSIZE_T
  0x00000bc0 5f545950 45205f5f 53595343 414c4c5f _TYPE __SYSCALL_
  0x00000bd0 534c4f4e 475f5459 5045005f 5f494e54 SLONG_TYPE.__INT
  0x00000be0 5f4c4541 53543136 5f4d4158 5f5f2030 _LEAST16_MAX__ 0
  0x00000bf0 78376666 66005f5f 4c44424c 5f524544 x7fff.__LDBL_RED
  0x00000c00 49525f44 45434c28 6e616d65 29200047 IR_DECL(name) .G
  0x00000c10 4e552043 31312037 2e332e30 202d6d74 NU C11 7.3.0 -mt
  0x00000c20 756e653d 67656e65 72696320 2d6d6172 une=generic -mar
  0x00000c30 63683d78 38362d36 34202d67 67646233 ch=x86-64 -ggdb3
  0x00000c40 202d6673 7461636b 2d70726f 74656374  -fstack-protect
  0x00000c50 6f722d73 74726f6e 67005f5f 53434841 or-strong.__SCHA
  0x00000c60 525f4d41 585f5f20 30783766 005f5f65 R_MAX__ 0x7f.__e
  0x00000c70 78746572 6e5f616c 77617973 5f696e6c xtern_always_inl
  0x00000c80 696e6520 65787465 726e205f 5f616c77 ine extern __alw
  0x00000c90 6179735f 696e6c69 6e65205f 5f617474 ays_inline __att
  0x00000ca0 72696275 74655f5f 2028285f 5f676e75 ribute__ ((__gnu
  0x00000cb0 5f696e6c 696e655f 5f292900 5f5f464c _inline__)).__FL
  0x00000cc0 5436345f 4449475f 5f203135 005f5f49 T64_DIG__ 15.__I
  0x00000cd0 4e545f46 41535438 5f545950 455f5f20 NT_FAST8_TYPE__ 
  0x00000ce0 7369676e 65642063 68617200 5f5f5049 signed char.__PI
  0x00000cf0 455f5f20 32005f49 4f5f6f66 6636345f E__ 2._IO_off64_
  0x00000d00 74205f5f 6f666636 345f7400 69665f74 t __off64_t.if_t
  0x00000d10 68656e2e 63005f5f 474c4942 435f5553 hen.c.__GLIBC_US
  0x00000d20 455f4945 435f3630 3535395f 54595045 E_IEC_60559_TYPE
  0x00000d30 535f4558 54005f5f 464c5433 32585f48 S_EXT.__FLT32X_H
  0x00000d40 41535f49 4e46494e 4954595f 5f203100 AS_INFINITY__ 1.
  0x00000d50 5f5f5553 455f554e 49583938 005f5f55 __USE_UNIX98.__U
  0x00000d60 53455f46 4f525449 46595f4c 4556454c SE_FORTIFY_LEVEL
  0x00000d70 2030005f 41544649 4c455f53 4f555243  0._ATFILE_SOURC
  0x00000d80 45005f5f 5553455f 41544649 4c45005f E.__USE_ATFILE._
  0x00000d90 5f55494e 545f4c45 41535438 5f545950 _UINT_LEAST8_TYP
  0x00000da0 455f5f20 756e7369 676e6564 20636861 E__ unsigned cha
  0x00000db0 72005f5f 53495a45 4f465f49 4e543132 r.__SIZEOF_INT12
  0x00000dc0 385f5f20 3136005f 5f4e5448 28666374 8__ 16.__NTH(fct
  0x00000dd0 29205f5f 61747472 69627574 655f5f20 ) __attribute__ 
  0x00000de0 28285f5f 6e6f7468 726f775f 5f205f5f ((__nothrow__ __
  0x00000df0 4c454146 29292066 6374005f 494f535f LEAF)) fct._IOS_
  0x00000e00 4154454e 44203400 5f5f676c 6962635f ATEND 4.__glibc_
  0x00000e10 6d616372 6f5f7761 726e696e 67286d65 macro_warning(me
  0x00000e20 73736167 6529205f 5f676c69 62635f6d ssage) __glibc_m
  0x00000e30 6163726f 5f776172 6e696e67 31202847 acro_warning1 (G
  0x00000e40 43432077 61726e69 6e67206d 65737361 CC warning messa
  0x00000e50 67652900 5f5f464c 54313238 5f484153 ge).__FLT128_HAS
  0x00000e60 5f515549 45545f4e 414e5f5f 2031005f _QUIET_NAN__ 1._
  0x00000e70 545f5349 5a452000 5f5f464c 54313238 T_SIZE .__FLT128
  0x00000e80 5f4d4158 5f5f2031 2e313839 37333134 _MAX__ 1.1897314
  0x00000e90 39353335 37323331 37363530 38353735 9535723176508575
  0x00000ea0 39333236 36323830 30373032 652b3439 932662800702e+49
  0x00000eb0 33324631 32380042 55465349 5a205f49 32F128.BUFSIZ _I
  0x00000ec0 4f5f4255 4653495a 005f4154 46494c45 O_BUFSIZ._ATFILE
  0x00000ed0 5f534f55 52434520 31005f5f 464c5436 _SOURCE 1.__FLT6
  0x00000ee0 34585f44 49475f5f 20313800 5f5f494e 4X_DIG__ 18.__IN
  0x00000ef0 545f4c45 41535431 365f5749 4454485f T_LEAST16_WIDTH_
  0x00000f00 5f203136 005f5f46 5349445f 545f5459 _ 16.__FSID_T_TY
  0x00000f10 50452073 74727563 74207b20 696e7420 PE struct { int 
  0x00000f20 5f5f7661 6c5b325d 3b207d00 5f5f7373 __val[2]; }.__ss
  0x00000f30 697a655f 745f6465 66696e65 6420005f ize_t_defined ._
  0x00000f40 545f5349 5a455f20 005f706f 73005f49 T_SIZE_ ._pos._I
  0x00000f50 4f5f6665 72726f72 5f756e6c 6f636b65 O_ferror_unlocke
  0x00000f60 64285f5f 66702920 2828285f 5f667029 d(__fp) (((__fp)
  0x00000f70 2d3e5f66 6c616773 2026205f 494f5f45 ->_flags & _IO_E
  0x00000f80 52525f53 45454e29 20213d20 3029005f RR_SEEN) != 0)._
  0x00000f90 5f657874 65726e5f 696e6c69 6e652065 _extern_inline e
  0x00000fa0 78746572 6e205f5f 696e6c69 6e65205f xtern __inline _
  0x00000fb0 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00000fc0 5f676e75 5f696e6c 696e655f 5f292900 _gnu_inline__)).
  0x00000fd0 5f474343 5f53495a 455f5420 005f5f46 _GCC_SIZE_T .__F
  0x00000fe0 4c543332 5f484153 5f44454e 4f524d5f LT32_HAS_DENORM_
  0x00000ff0 5f203100 5f5f756e 69785f5f 2031005f _ 1.__unix__ 1._
  0x00001000 5f474343 5f484156 455f5359 4e435f43 _GCC_HAVE_SYNC_C
  0x00001010 4f4d5041 52455f41 4e445f53 5741505f OMPARE_AND_SWAP_
  0x00001020 31203100 5f494f5f 73617665 5f656e64 1 1._IO_save_end
  0x00001030 005f5f46 4c543634 585f4d49 4e5f4558 .__FLT64X_MIN_EX
  0x00001040 505f5f20 282d3136 33383129 005f4253 P__ (-16381)._BS
  0x00001050 445f5349 5a455f54 5f20005f 5f737475 D_SIZE_T_ .__stu
  0x00001060 625f7365 746c6f67 696e2000 5f5f464c b_setlogin .__FL
  0x00001070 545f4449 475f5f20 36005f5f 494e545f T_DIG__ 6.__INT_
  0x00001080 46415354 31365f57 49445448 5f5f2036 FAST16_WIDTH__ 6
  0x00001090 34005f5f 4743435f 41544f4d 49435f42 4.__GCC_ATOMIC_B
  0x000010a0 4f4f4c5f 4c4f434b 5f465245 45203200 OOL_LOCK_FREE 2.
  0x000010b0 5f494f5f 6f66665f 74205f5f 6f66665f _IO_off_t __off_
  0x000010c0 74005f5f 7069655f 5f203200 5f535444 t.__pie__ 2._STD
  0x000010d0 494f5f48 2031005f 5f444543 33325f4d IO_H 1.__DEC32_M
  0x000010e0 494e5f5f 2031452d 39354446 005f5f49 IN__ 1E-95DF.__I
  0x000010f0 4e544d41 585f4d41 585f5f20 30783766 NTMAX_MAX__ 0x7f
  0x00001100 66666666 66666666 66666666 66664c00 ffffffffffffffL.
  0x00001110 5f424954 535f4c49 42494f5f 48203100 _BITS_LIBIO_H 1.
  0x00001120 5f5f4743 435f4945 435f3535 39203200 __GCC_IEC_559 2.
  0x00001130 5f5f464c 54313238 5f4d494e 5f455850 __FLT128_MIN_EXP
  0x00001140 5f5f2028 2d313633 38312900 5f5f464c __ (-16381).__FL
  0x00001150 5433325f 4841535f 51554945 545f4e41 T32_HAS_QUIET_NA
  0x00001160 4e5f5f20 31005f42 53445f53 495a455f N__ 1._BSD_SIZE_
  0x00001170 545f4445 46494e45 445f2000 5f5f5549 T_DEFINED_ .__UI
  0x00001180 4e545f4c 45415354 31365f4d 41585f5f NT_LEAST16_MAX__
  0x00001190 20307866 66666600 5f5f5549 4e545f46  0xffff.__UINT_F
  0x000011a0 41535436 345f4d41 585f5f20 30786666 AST64_MAX__ 0xff
  0x000011b0 66666666 66666666 66666666 6666554c ffffffffffffffUL
  0x000011c0 005f494f 5f455252 5f534545 4e203078 ._IO_ERR_SEEN 0x
  0x000011d0 3230005f 5f617474 72696275 74655f75 20.__attribute_u
  0x000011e0 7365645f 5f205f5f 61747472 69627574 sed__ __attribut
  0x000011f0 655f5f20 28285f5f 75736564 5f5f2929 e__ ((__used__))
  0x00001200 005f5f61 74747269 62757465 5f617274 .__attribute_art
  0x00001210 69666963 69616c5f 5f205f5f 61747472 ificial__ __attr
  0x00001220 69627574 655f5f20 28285f5f 61727469 ibute__ ((__arti
  0x00001230 66696369 616c5f5f 2929005f 494f5f66 ficial__))._IO_f
  0x00001240 7472796c 6f636b66 696c6528 5f667029 trylockfile(_fp)
  0x00001250 20005f5f 55494e54 5f4c4541 5354385f  .__UINT_LEAST8_
  0x00001260 4d41585f 5f203078 6666005f 5f474c49 MAX__ 0xff.__GLI
  0x00001270 42435f55 53455f4c 49425f45 58543220 BC_USE_LIB_EXT2 
  0x00001280 30005f5f 44454331 32385f4d 494e5f45 0.__DEC128_MIN_E
  0x00001290 58505f5f 20282d36 31343229 005f5f4b XP__ (-6142).__K
  0x000012a0 45524e45 4c5f5354 52494354 5f4e414d ERNEL_STRICT_NAM
  0x000012b0 45532000 5f5f5743 4841525f 54595045 ES .__WCHAR_TYPE
  0x000012c0 5f5f2069 6e74005f 5f494e54 385f4d41 __ int.__INT8_MA
  0x000012d0 585f5f20 30783766 00676574 63285f66 X__ 0x7f.getc(_f
  0x000012e0 7029205f 494f5f67 65746320 285f6670 p) _IO_getc (_fp
  0x000012f0 29005f5f 44454331 32385f45 5053494c ).__DEC128_EPSIL
  0x00001300 4f4e5f5f 2031452d 3333444c 005f5f55 ON__ 1E-33DL.__U
  0x00001310 53455f50 4f534958 31393935 3036005f SE_POSIX199506._
  0x00001320 5f6e6565 645f4e55 4c4c005f 5f524544 _need_NULL.__RED
  0x00001330 49524543 545f4e54 485f4c44 424c286e IRECT_NTH_LDBL(n
  0x00001340 616d652c 70726f74 6f2c616c 69617329 ame,proto,alias)
  0x00001350 205f5f52 45444952 4543545f 4e544820  __REDIRECT_NTH 
  0x00001360 286e616d 652c2070 726f746f 2c20616c (name, proto, al
  0x00001370 69617329 005f5f52 45444952 4543545f ias).__REDIRECT_
  0x00001380 4e54484e 4c286e61 6d652c70 726f746f NTHNL(name,proto
  0x00001390 2c616c69 61732920 6e616d65 2070726f ,alias) name pro
  0x000013a0 746f205f 5f61736d 5f5f2028 5f5f4153 to __asm__ (__AS
  0x000013b0 4d4e414d 45202823 616c6961 73292920 MNAME (#alias)) 
  0x000013c0 5f5f5448 524f574e 4c005f5f 464c5431 __THROWNL.__FLT1
  0x000013d0 32385f4d 41585f45 58505f5f 20313633 28_MAX_EXP__ 163
  0x000013e0 3834005f 5f464c54 5f524144 49585f5f 84.__FLT_RADIX__
  0x000013f0 2032005f 5f464c54 3332585f 44454e4f  2.__FLT32X_DENO
  0x00001400 524d5f4d 494e5f5f 20342e39 34303635 RM_MIN__ 4.94065
  0x00001410 36343538 34313234 36353434 31373635 6458412465441765
  0x00001420 36383739 32383638 32323133 3732652d 68792868221372e-
  0x00001430 33323446 33327800 5f5f676c 6962635f 324F32x.__glibc_
  0x00001440 636c616e 675f6861 735f6578 74656e73 clang_has_extens
  0x00001450 696f6e28 65787429 2030005f 5f504d54 ion(ext) 0.__PMT
  0x00001460 28617267 73292061 72677300 5f5f4749 (args) args.__GI
  0x00001470 445f545f 54595045 205f5f55 33325f54 D_T_TYPE __U32_T
  0x00001480 59504500 5f5f5349 5a454f46 5f4c4f4e YPE.__SIZEOF_LON
  0x00001490 475f444f 55424c45 5f5f2031 36005f5f G_DOUBLE__ 16.__
  0x000014a0 44424c5f 4841535f 51554945 545f4e41 DBL_HAS_QUIET_NA
  0x000014b0 4e5f5f20 31005f5f 77757220 005f4249 N__ 1.__wur ._BI
  0x000014c0 54535f54 59504553 5f482031 005f5f4c TS_TYPES_H 1.__L
  0x000014d0 44424c5f 44454e4f 524d5f4d 494e5f5f DBL_DENORM_MIN__
  0x000014e0 20332e36 34353139 39353331 38383234  3.6451995318824
  0x000014f0 37343630 32353238 34303539 33333631 7460252840593361
  0x00001500 39343139 3832652d 34393531 4c005f5f 941982e-4951L.__
  0x00001510 5049445f 545f5459 5045205f 5f533332 PID_T_TYPE __S32
  0x00001520 5f545950 45005f5f 73747562 5f666174 _TYPE.__stub_fat
  0x00001530 74616368 20007379 735f6572 726c6973 tach .sys_errlis
  0x00001540 74005f5f 464c5436 345f4841 535f494e t.__FLT64_HAS_IN
  0x00001550 46494e49 54595f5f 2031005f 5f55494e FINITY__ 1.__UIN
  0x00001560 545f4641 5354385f 4d41585f 5f203078 T_FAST8_MAX__ 0x
  0x00001570 6666005f 5f41544f 4d49435f 484c455f ff.__ATOMIC_HLE_
  0x00001580 52454c45 41534520 31333130 3732005f RELEASE 131072._
  0x00001590 5f4c4442 4c5f4d41 585f4558 505f5f20 _LDBL_MAX_EXP__ 
  0x000015a0 31363338 34005f5f 73747562 5f677474 16384.__stub_gtt
  0x000015b0 7920005f 42495453 5f545950 4553495a y ._BITS_TYPESIZ
  0x000015c0 45535f48 2031005f 5f555345 434f4e44 ES_H 1.__USECOND
  0x000015d0 535f545f 54595045 205f5f55 33325f54 S_T_TYPE __U32_T
  0x000015e0 59504500 5f494f5f 7065656b 63285f66 YPE._IO_peekc(_f
  0x000015f0 7029205f 494f5f70 65656b63 5f756e6c p) _IO_peekc_unl
  0x00001600 6f636b65 6420285f 66702900 5f5f494e ocked (_fp).__IN
  0x00001610 54505452 5f545950 455f5f20 6c6f6e67 TPTR_TYPE__ long
  0x00001620 20696e74 005f5f44 45433634 5f4d4158  int.__DEC64_MAX
  0x00001630 5f5f2039 2e393939 39393939 39393939 __ 9.99999999999
  0x00001640 39393939 45333834 44440073 79735f6e 9999E384DD.sys_n
  0x00001650 65727200 5f5f4743 435f4154 4f4d4943 err.__GCC_ATOMIC
  0x00001660 5f494e54 5f4c4f43 4b5f4652 45452032 _INT_LOCK_FREE 2
  0x00001670 005f5359 535f5349 5a455f54 5f482000 ._SYS_SIZE_T_H .
  0x00001680 5f5f4d4d 585f5f20 31005f5f 424c4b43 __MMX__ 1.__BLKC
  0x00001690 4e545f54 5f545950 45205f5f 53595343 NT_T_TYPE __SYSC
  0x000016a0 414c4c5f 534c4f4e 475f5459 5045005f ALL_SLONG_TYPE._
  0x000016b0 494f5f53 484f5742 41534520 30323030 IO_SHOWBASE 0200
  0x000016c0 005f5f73 7475625f 73747479 20005f66 .__stub_stty ._f
  0x000016d0 696c656e 6f005f5f 48415645 5f47454e ileno.__HAVE_GEN
  0x000016e0 45524943 5f53454c 45435449 4f4e2031 ERIC_SELECTION 1
  0x000016f0 005f5f52 4c494d36 345f545f 54595045 .__RLIM64_T_TYPE
  0x00001700 205f5f55 51554144 5f545950 45005f5f  __UQUAD_TYPE.__
  0x00001710 464c5431 32385f4d 414e545f 4449475f FLT128_MANT_DIG_
  0x00001720 5f203131 33005f5f 4f524445 525f4c49 _ 113.__ORDER_LI
  0x00001730 54544c45 5f454e44 49414e5f 5f203132 TTLE_ENDIAN__ 12
  0x00001740 3334005f 5f555345 5f584f50 454e324b 34.__USE_XOPEN2K
  0x00001750 2031005f 5f53495a 454f465f 50545244  1.__SIZEOF_PTRD
  0x00001760 4946465f 545f5f20 38005f49 4f535f54 IFF_T__ 8._IOS_T
  0x00001770 52554e43 20313600 5f5f4445 43313238 RUNC 16.__DEC128
  0x00001780 5f4d414e 545f4449 475f5f20 3334005f _MANT_DIG__ 34._
  0x00001790 5f555345 5f49534f 43393920 31005f5f _USE_ISOC99 1.__
  0x000017a0 494e5433 325f5459 50455f5f 20696e74 INT32_TYPE__ int
  0x000017b0 005f5f4b 45524e45 4c5f5354 52494354 .__KERNEL_STRICT
  0x000017c0 5f4e414d 4553005f 5f553332 5f545950 _NAMES.__U32_TYP
  0x000017d0 4520756e 7369676e 65642069 6e74005f E unsigned int._
  0x000017e0 5f636f64 655f6d6f 64656c5f 736d616c _code_model_smal
  0x000017f0 6c5f5f20 31005f5f 5553455f 49534f43 l__ 1.__USE_ISOC
  0x00001800 3935005f 5f464c54 3634585f 4841535f 95.__FLT64X_HAS_
  0x00001810 44454e4f 524d5f5f 2031005f 5f444543 DENORM__ 1.__DEC
  0x00001820 33325f4d 41585f45 58505f5f 20393700 32_MAX_EXP__ 97.
  0x00001830 5f494f4e 42462032 005f5f55 53455f49 _IONBF 2.__USE_I
  0x00001840 534f4339 39007374 64657272 20737464 SOC99.stderr std
  0x00001850 65727200 5f767461 626c655f 6f666673 err._vtable_offs
  0x00001860 6574005f 475f494f 5f494f5f 46494c45 et._G_IO_IO_FILE
  0x00001870 5f564552 53494f4e 20307832 30303031 _VERSION 0x20001
  0x00001880 005f494f 5f544945 445f5055 545f4745 ._IO_TIED_PUT_GE
  0x00001890 54203078 34303000 4c5f746d 706e616d T 0x400.L_tmpnam
  0x000018a0 20323000 5f494f5f 636c6561 6e75705f  20._IO_cleanup_
  0x000018b0 72656769 6f6e5f73 74617274 285f6663 region_start(_fc
  0x000018c0 742c5f66 70292000 5f5f5354 44435f49 t,_fp) .__STDC_I
  0x000018d0 45435f35 35395f43 4f4d504c 45585f5f EC_559_COMPLEX__
  0x000018e0 2031005f 5f474c49 42435f55 53455f44  1.__GLIBC_USE_D
  0x000018f0 45505245 43415445 445f4745 54532030 EPRECATED_GETS 0
  0x00001900 005f494f 5f484558 20303130 30005f5f ._IO_HEX 0100.__
  0x00001910 464c5436 34585f4d 494e5f31 305f4558 FLT64X_MIN_10_EX
  0x00001920 505f5f20 282d3439 33312900 5f5f7374 P__ (-4931).__st
  0x00001930 75625f70 75746d73 6720005f 494f5f72 ub_putmsg ._IO_r
  0x00001940 6561645f 62617365 005f5f53 5444435f ead_base.__STDC_
  0x00001950 49534f5f 31303634 365f5f20 32303137 ISO_10646__ 2017
  0x00001960 30364c00 5f5f4245 47494e5f 4445434c 06L.__BEGIN_DECL
  0x00001970 5320005f 494f5f73 7464696e 2028285f S ._IO_stdin ((_
  0x00001980 494f5f46 494c452a 2928265f 494f5f32 IO_FILE*)(&_IO_2
  0x00001990 5f315f73 7464696e 5f292900 5f5f464c _1_stdin_)).__FL
  0x000019a0 54313238 5f4d4158 5f31305f 4558505f T128_MAX_10_EXP_
  0x000019b0 5f203439 3332005f 5f464c54 3132385f _ 4932.__FLT128_
  0x000019c0 4d494e5f 5f20332e 33363231 30333134 MIN__ 3.36210314
  0x000019d0 33313132 30393335 30363236 32363737 3112093506262677
  0x000019e0 38313733 32313735 32363065 2d343933 81732175260e-493
  0x000019f0 32463132 38005f5f 53555345 434f4e44 2F128.__SUSECOND
  0x00001a00 535f545f 54595045 205f5f53 59534341 S_T_TYPE __SYSCA
  0x00001a10 4c4c5f53 4c4f4e47 5f545950 45005345 LL_SLONG_TYPE.SE
  0x00001a20 454b5f45 4e442032 005f5f49 4e545f46 EK_END 2.__INT_F
  0x00001a30 41535438 5f574944 54485f5f 2038005f AST8_WIDTH__ 8._
  0x00001a40 5f464c54 36345f4d 494e5f31 305f4558 _FLT64_MIN_10_EX
  0x00001a50 505f5f20 282d3330 3729005f 5f737475 P__ (-307).__stu
  0x00001a60 625f6664 65746163 6820005f 6e657874 b_fdetach ._next
  0x00001a70 005f5f44 424c5f4d 41585f5f 20282864 .__DBL_MAX__ ((d
  0x00001a80 6f75626c 6529312e 37393736 39333133 ouble)1.79769313
  0x00001a90 34383632 33313537 30383134 35323734 4862315708145274
  0x00001aa0 32333733 31373034 33353765 2b333038 23731704357e+308
  0x00001ab0 4c29005f 44454641 554c545f 534f5552 L)._DEFAULT_SOUR
  0x00001ac0 43452031 005f5f52 4c494d5f 545f4d41 CE 1.__RLIM_T_MA
  0x00001ad0 54434845 535f524c 494d3634 5f542031 TCHES_RLIM64_T 1
  0x00001ae0 005f5f61 6d643634 5f5f2031 005f5f5f .__amd64__ 1.___
  0x00001af0 5f6d6273 74617465 5f745f64 6566696e _mbstate_t_defin
  0x00001b00 65642031 005f494f 5f44454c 4554455f ed 1._IO_DELETE_
  0x00001b10 444f4e54 5f434c4f 53452030 78343000 DONT_CLOSE 0x40.
  0x00001b20 5f5f464c 5433325f 44454349 4d414c5f __FLT32_DECIMAL_
  0x00001b30 4449475f 5f203900 5f5f464c 54313238 DIG__ 9.__FLT128
  0x00001b40 5f444947 5f5f2033 33005f5f 55494e54 _DIG__ 33.__UINT
  0x00001b50 31365f54 5950455f 5f207368 6f727420 16_TYPE__ short 
  0x00001b60 756e7369 676e6564 20696e74 005f5f48 unsigned int.__H
  0x00001b70 4156455f 434f4c55 4d4e2000 5f4f4c44 AVE_COLUMN ._OLD
  0x00001b80 5f535444 494f5f4d 41474943 20307846 _STDIO_MAGIC 0xF
  0x00001b90 41424330 30303000 5f494f53 5f4e4f43 ABC0000._IOS_NOC
  0x00001ba0 52454154 45203332 005f5f57 43484152 REATE 32.__WCHAR
  0x00001bb0 5f574944 54485f5f 20333200 5f5f4743 _WIDTH__ 32.__GC
  0x00001bc0 435f4154 4f4d4943 5f434841 525f4c4f C_ATOMIC_CHAR_LO
  0x00001bd0 434b5f46 52454520 32005f49 4f5f6d61 CK_FREE 2._IO_ma
  0x00001be0 726b6572 005f5f42 49474745 53545f41 rker.__BIGGEST_A
  0x00001bf0 4c49474e 4d454e54 5f5f2031 36005f5f LIGNMENT__ 16.__
  0x00001c00 4c4f4e47 5f4c4f4e 475f4d41 585f5f20 LONG_LONG_MAX__ 
  0x00001c10 30783766 66666666 66666666 66666666 0x7fffffffffffff
  0x00001c20 66664c4c 005f5f55 4c4f4e47 33325f54 ffLL.__ULONG32_T
  0x00001c30 59504520 756e7369 676e6564 20696e74 YPE unsigned int
  0x00001c40 005f5f55 494e545f 4c454153 5431365f .__UINT_LEAST16_
  0x00001c50 54595045 5f5f2073 686f7274 20756e73 TYPE__ short uns
  0x00001c60 69676e65 6420696e 74005f5f 464c545f igned int.__FLT_
  0x00001c70 4d41585f 31305f45 58505f5f 20333800 MAX_10_EXP__ 38.
  0x00001c80 5f494f5f 534b4950 57532030 31005f5f _IO_SKIPWS 01.__
  0x00001c90 464c5433 32585f45 5053494c 4f4e5f5f FLT32X_EPSILON__
  0x00001ca0 20322e32 32303434 36303439 32353033  2.2204460492503
  0x00001cb0 31333038 30383437 32363333 33363138 1308084726333618
  0x00001cc0 31363430 3632652d 31364633 3278004e 164062e-16F32x.N
  0x00001cd0 554c4c20 2828766f 6964202a 29302900 ULL ((void *)0).
  0x00001ce0 61726776 005f5f55 53455f50 4f534958 argv.__USE_POSIX
  0x00001cf0 5f494d50 4c494349 544c5920 31005f49 _IMPLICITLY 1._I
  0x00001d00 4f5f6665 6f665f75 6e6c6f63 6b656428 O_feof_unlocked(
  0x00001d10 5f5f6670 29202828 285f5f66 70292d3e __fp) (((__fp)->
  0x00001d20 5f666c61 67732026 205f494f 5f454f46 _flags & _IO_EOF
  0x00001d30 5f534545 4e292021 3d203029 005f5f4e _SEEN) != 0).__N
  0x00001d40 4f5f494e 4c494e45 5f5f2031 005f494f O_INLINE__ 1._IO
  0x00001d50 5f737464 65727220 28285f49 4f5f4649 _stderr ((_IO_FI
  0x00001d60 4c452a29 28265f49 4f5f325f 315f7374 LE*)(&_IO_2_1_st
  0x00001d70 64657272 5f292900 5f5f7661 5f617267 derr_)).__va_arg
  0x00001d80 5f706163 6b282920 5f5f6275 696c7469 _pack() __builti
  0x00001d90 6e5f7661 5f617267 5f706163 6b202829 n_va_arg_pack ()
  0x00001da0 005f5f46 4c545f4d 414e545f 4449475f .__FLT_MANT_DIG_
  0x00001db0 5f203234 005f5f44 41444452 5f545f54 _ 24.__DADDR_T_T
  0x00001dc0 59504520 5f5f5333 325f5459 5045005f YPE __S32_TYPE._
  0x00001dd0 5f464c54 36345f44 4543494d 414c5f44 _FLT64_DECIMAL_D
  0x00001de0 49475f5f 20313700 5f5f4743 435f4841 IG__ 17.__GCC_HA
  0x00001df0 56455f53 594e435f 434f4d50 4152455f VE_SYNC_COMPARE_
  0x00001e00 414e445f 53574150 5f342031 005f5f46 AND_SWAP_4 1.__F
  0x00001e10 4c543332 5f4d494e 5f455850 5f5f2028 LT32_MIN_EXP__ (
  0x00001e20 2d313235 29005f5f 53495a45 5f545950 -125).__SIZE_TYP
  0x00001e30 455f5f20 6c6f6e67 20756e73 69676e65 E__ long unsigne
  0x00001e40 6420696e 74005f5f 4c44424c 5f4d4158 d int.__LDBL_MAX
  0x00001e50 5f5f2031 2e313839 37333134 39353335 __ 1.18973149535
  0x00001e60 37323331 37363530 32313236 33383533 7231765021263853
  0x00001e70 30333039 37303231 652b3439 33324c00 03097021e+4932L.
  0x00001e80 5f5f4445 435f4556 414c5f4d 4554484f __DEC_EVAL_METHO
  0x00001e90 445f5f20 32005f5f 464c545f 4d41585f D__ 2.__FLT_MAX_
  0x00001ea0 5f20332e 34303238 32333436 36333835 _ 3.402823466385
  0x00001eb0 32383835 39383131 37303431 38333438 2885981170418348
  0x00001ec0 34353136 39323565 2b333846 005f494f 4516925e+38F._IO
  0x00001ed0 5f756964 5f74205f 5f756964 5f74005f _uid_t __uid_t._
  0x00001ee0 5f44424c 5f4d494e 5f31305f 4558505f _DBL_MIN_10_EXP_
  0x00001ef0 5f20282d 33303729 005f494f 5f325f31 _ (-307)._IO_2_1
  0x00001f00 5f737464 6572725f 005f5f55 494e5433 _stderr_.__UINT3
  0x00001f10 325f4d41 585f5f20 30786666 66666666 2_MAX__ 0xffffff
  0x00001f20 66665500 5f494f5f 4f435420 30343000 ffU._IO_OCT 040.
  0x00001f30 5f5f464c 54313238 5f484153 5f494e46 __FLT128_HAS_INF
  0x00001f40 494e4954 595f5f20 31005f6d 6f646500 INITY__ 1._mode.
  0x00001f50 5f494f5f 48415645 5f53545f 424c4b53 _IO_HAVE_ST_BLKS
  0x00001f60 495a4520 5f475f48 4156455f 53545f42 IZE _G_HAVE_ST_B
  0x00001f70 4c4b5349 5a45005f 5f464c54 36345f48 LKSIZE.__FLT64_H
  0x00001f80 41535f44 454e4f52 4d5f5f20 31005f5f AS_DENORM__ 1.__
  0x00001f90 464c545f 4556414c 5f4d4554 484f445f FLT_EVAL_METHOD_
  0x00001fa0 5f203000 5f5f4653 424c4b43 4e545f54 _ 0.__FSBLKCNT_T
  0x00001fb0 5f545950 45205f5f 53595343 414c4c5f _TYPE __SYSCALL_
  0x00001fc0 554c4f4e 475f5459 5045005f 5f464c54 ULONG_TYPE.__FLT
  0x00001fd0 3332585f 4841535f 44454e4f 524d5f5f 32X_HAS_DENORM__
  0x00001fe0 2031005f 5f783836 5f36345f 5f203100  1.__x86_64__ 1.
  0x00001ff0 5f5f464c 54363458 5f4d4158 5f455850 __FLT64X_MAX_EXP
  0x00002000 5f5f2031 36333834 005f5f56 45525349 __ 16384.__VERSI
  0x00002010 4f4e5f5f 2022372e 332e3022 005f494f ON__ "7.3.0"._IO
  0x00002020 5f4c494e 4b454420 30783830 005f5f52 _LINKED 0x80.__R
  0x00002030 45444952 45435428 6e616d65 2c70726f EDIRECT(name,pro
  0x00002040 746f2c61 6c696173 29206e61 6d652070 to,alias) name p
  0x00002050 726f746f 205f5f61 736d5f5f 20285f5f roto __asm__ (__
  0x00002060 41534d4e 414d4520 2823616c 69617329 ASMNAME (#alias)
  0x00002070 29005f5f 4653424c 4b434e54 36345f54 ).__FSBLKCNT64_T
  0x00002080 5f545950 45205f5f 55515541 445f5459 _TYPE __UQUAD_TY
  0x00002090 5045005f 5f464c54 3634585f 4d41585f PE.__FLT64X_MAX_
  0x000020a0 5f20312e 31383937 33313439 35333537 _ 1.189731495357
  0x000020b0 32333137 36353032 31323633 38353330 2317650212638530
  0x000020c0 33303937 30323165 2b343933 32463634 3097021e+4932F64
  0x000020d0 78005f49 4f5f7265 61645f70 7472005f x._IO_read_ptr._
  0x000020e0 5f53495a 455f5420 005f5f49 445f545f _SIZE_T .__ID_T_
  0x000020f0 54595045 205f5f55 33325f54 59504500 TYPE __U32_TYPE.
  0x00002100 5f5f5349 5a455f54 5f5f2000 5f494f5f __SIZE_T__ ._IO_
  0x00002110 66756e6c 6f636b66 696c6528 5f667029 funlockfile(_fp)
  0x00002120 20005f5f 4b45595f 545f5459 5045205f  .__KEY_T_TYPE _
  0x00002130 5f533332 5f545950 45005f5f 494e545f _S32_TYPE.__INT_
  0x00002140 4c454153 5436345f 4d41585f 5f203078 LEAST64_MAX__ 0x
  0x00002150 37666666 66666666 66666666 66666666 7fffffffffffffff
  0x00002160 4c005f5f 494e545f 4c454153 54385f57 L.__INT_LEAST8_W
  0x00002170 49445448 5f5f2038 005f5f4c 44424c5f IDTH__ 8.__LDBL_
  0x00002180 52454449 52315f4e 5448286e 616d652c REDIR1_NTH(name,
  0x00002190 70726f74 6f2c616c 69617329 206e616d proto,alias) nam
  0x000021a0 65207072 6f746f20 5f5f5448 524f5700 e proto __THROW.
  0x000021b0 5f5f5549 4e54385f 4d41585f 5f203078 __UINT8_MAX__ 0x
  0x000021c0 6666005f 494f5f46 4c414753 325f4e4f ff._IO_FLAGS2_NO
  0x000021d0 5443414e 43454c20 32005f5f 616c7761 TCANCEL 2.__alwa
  0x000021e0 79735f69 6e6c696e 65205f5f 696e6c69 ys_inline __inli
  0x000021f0 6e65205f 5f617474 72696275 74655f5f ne __attribute__
  0x00002200 2028285f 5f616c77 6179735f 696e6c69  ((__always_inli
  0x00002210 6e655f5f 2929005f 5f55494e 5431365f ne__)).__UINT16_
  0x00002220 4d41585f 5f203078 66666666 005f494f MAX__ 0xffff._IO
  0x00002230 5f4d4147 49432030 78464241 44303030 _MAGIC 0xFBAD000
  0x00002240 30005f5f 474c4942 435f5553 45284629 0.__GLIBC_USE(F)
  0x00002250 205f5f47 4c494243 5f555345 5f202323  __GLIBC_USE_ ##
  0x00002260 2046005f 5f494e54 5f464153 5436345f  F.__INT_FAST64_
  0x00002270 54595045 5f5f206c 6f6e6720 696e7400 TYPE__ long int.
  0x00002280 73746469 6e207374 64696e00 5f5f6174 stdin stdin.__at
  0x00002290 74726962 7574655f 6e6f696e 6c696e65 tribute_noinline
  0x000022a0 5f5f205f 5f617474 72696275 74655f5f __ __attribute__
  0x000022b0 2028285f 5f6e6f69 6e6c696e 655f5f29  ((__noinline__)
  0x000022c0 29005f5f 53544443 5f564552 53494f4e ).__STDC_VERSION
  0x000022d0 5f5f2032 30313131 324c005f 5f494e54 __ 201112L.__INT
  0x000022e0 4d41585f 57494454 485f5f20 3634005f MAX_WIDTH__ 64._
  0x000022f0 5f444543 33325f4d 41585f5f 20392e39 _DEC32_MAX__ 9.9
  0x00002300 39393939 39453936 4446005f 5f474e55 99999E96DF.__GNU
  0x00002310 435f5641 5f4c4953 5420005f 5f505452 C_VA_LIST .__PTR
  0x00002320 44494646 5f4d4158 5f5f2030 78376666 DIFF_MAX__ 0x7ff
  0x00002330 66666666 66666666 66666666 664c005f fffffffffffffL._
  0x00002340 5f555345 5f504f53 49583139 39333039 _USE_POSIX199309
  0x00002350 005f5f49 4e545f4c 45415354 31365f54 .__INT_LEAST16_T
  0x00002360 5950455f 5f207368 6f727420 696e7400 YPE__ short int.
  0x00002370 5f5f464c 5433325f 4d41585f 4558505f __FLT32_MAX_EXP_
  0x00002380 5f203132 38005f5f 676e755f 6c696e75 _ 128.__gnu_linu
  0x00002390 785f5f20 31005f5f 5354445f 54595045 x__ 1.__STD_TYPE
  0x000023a0 20747970 65646566 005f5f4d 4f44455f  typedef.__MODE_
  0x000023b0 545f5459 5045205f 5f553332 5f545950 T_TYPE __U32_TYP
  0x000023c0 45005f5f 53495a45 4f465f46 4c4f4154 E.__SIZEOF_FLOAT
  0x000023d0 3132385f 5f203136 005f5f47 4e55435f 128__ 16.__GNUC_
  0x000023e0 53544443 5f494e4c 494e455f 5f203100 STDC_INLINE__ 1.
  0x000023f0 5f5f4442 4c5f4449 475f5f20 3135005f __DBL_DIG__ 15._
  0x00002400 5f474343 5f41544f 4d49435f 43484152 _GCC_ATOMIC_CHAR
  0x00002410 31365f54 5f4c4f43 4b5f4652 45452032 16_T_LOCK_FREE 2
  0x00002420 005f5f49 4e545f4c 45415354 385f4d41 .__INT_LEAST8_MA
  0x00002430 585f5f20 30783766 005f5f53 31365f54 X__ 0x7f.__S16_T
  0x00002440 59504520 73686f72 7420696e 74005f5f YPE short int.__
  0x00002450 4c503634 5f5f2031 005f5f53 59534341 LP64__ 1.__SYSCA
  0x00002460 4c4c5f57 4f524453 495a4520 3634005f LL_WORDSIZE 64._
  0x00002470 5f474343 5f41544f 4d49435f 4c4f4e47 _GCC_ATOMIC_LONG
  0x00002480 5f4c4f43 4b5f4652 45452032 005f5f46 _LOCK_FREE 2.__F
  0x00002490 4c543332 585f4449 475f5f20 3135005f LT32X_DIG__ 15._
  0x000024a0 5f464c54 3332585f 4d414e54 5f444947 _FLT32X_MANT_DIG
  0x000024b0 5f5f2035 33005f49 4f5f7772 6974655f __ 53._IO_write_
  0x000024c0 62617365 005f4c50 36342031 005f4645 base._LP64 1._FE
  0x000024d0 41545552 45535f48 2031005f 5f464c54 ATURES_H 1.__FLT
  0x000024e0 33325f44 49475f5f 2036005f 5f465357 32_DIG__ 6.__FSW
  0x000024f0 4f52445f 545f5459 5045205f 5f535953 ORD_T_TYPE __SYS
  0x00002500 43414c4c 5f534c4f 4e475f54 59504500 CALL_SLONG_TYPE.
  0x00002510 5f5f534c 4f4e4757 4f52445f 54595045 __SLONGWORD_TYPE
  0x00002520 206c6f6e 6720696e 74005f49 4f5f325f  long int._IO_2_
  0x00002530 315f7374 64696e5f 005f5f78 38365f36 1_stdin_.__x86_6
  0x00002540 34203100 5f5f464c 54363458 5f4d4158 4 1.__FLT64X_MAX
  0x00002550 5f31305f 4558505f 5f203439 3332005f _10_EXP__ 4932._
  0x00002560 5f44424c 5f4d494e 5f5f2028 28646f75 _DBL_MIN__ ((dou
  0x00002570 626c6529 322e3232 35303733 38353835 ble)2.2250738585
  0x00002580 30373230 31333833 30393032 33323731 0720138309023271
  0x00002590 37333332 34303430 36652d33 30384c29 733240406e-308L)
  0x000025a0 005f494f 5f325f31 5f737464 6f75745f ._IO_2_1_stdout_
  0x000025b0 005f5f55 494e545f 46415354 33325f4d .__UINT_FAST32_M
  0x000025c0 41585f5f 20307866 66666666 66666666 AX__ 0xfffffffff
  0x000025d0 66666666 66666655 4c005f5f 46494e49 fffffffUL.__FINI
  0x000025e0 54455f4d 4154485f 4f4e4c59 5f5f2030 TE_MATH_ONLY__ 0
  0x000025f0 005f494f 5f736176 655f6261 7365005f ._IO_save_base._
  0x00002600 5f553136 5f545950 4520756e 7369676e _U16_TYPE unsign
  0x00002610 65642073 686f7274 20696e74 00454f46 ed short int.EOF
  0x00002620 20282d31 29005f5f 464c5436 345f4d41  (-1).__FLT64_MA
  0x00002630 585f5f20 312e3739 37363933 31333438 X__ 1.7976931348
  0x00002640 36323331 35373038 31343532 37343233 6231570814527423
  0x00002650 37333137 30343335 37652b33 30384636 731704357e+308F6
  0x00002660 34005f5f 73697a65 5f745f5f 20005f5f 4.__size_t__ .__
  0x00002670 55494e54 385f5459 50455f5f 20756e73 UINT8_TYPE__ uns
  0x00002680 69676e65 64206368 6172005f 494f5f66 igned char._IO_f
  0x00002690 696c655f 666c6167 73205f66 6c616773 ile_flags _flags
  0x000026a0 005f5f55 53455f58 4f50454e 324b3858 .__USE_XOPEN2K8X
  0x000026b0 5349005f 5f494e54 5f464153 5433325f SI.__INT_FAST32_
  0x000026c0 54595045 5f5f206c 6f6e6720 696e7400 TYPE__ long int.
  0x000026d0 5f494f53 5f494e50 55542031 005f5f47 _IOS_INPUT 1.__G
  0x000026e0 43435f41 534d5f46 4c41475f 4f555450 CC_ASM_FLAG_OUTP
  0x000026f0 5554535f 5f203100 70757463 285f6368 UTS__ 1.putc(_ch
  0x00002700 2c5f6670 29205f49 4f5f7075 74632028 ,_fp) _IO_putc (
  0x00002710 5f63682c 205f6670 29005f5f 55494e54 _ch, _fp).__UINT
  0x00002720 5f4c4541 53543634 5f4d4158 5f5f2030 _LEAST64_MAX__ 0
  0x00002730 78666666 66666666 66666666 66666666 xfffffffffffffff
  0x00002740 66554c00 5f5f504d 54005f5f 55515541 fUL.__PMT.__UQUA
  0x00002750 445f5459 50452075 6e736967 6e656420 D_TYPE unsigned 
  0x00002760 6c6f6e67 20696e74 005f5f45 4c465f5f long int.__ELF__
  0x00002770 2031005f 5f464c54 3332585f 4d494e5f  1.__FLT32X_MIN_
  0x00002780 5f20322e 32323530 37333835 38353037 _ 2.225073858507
  0x00002790 32303133 38333039 30323332 37313733 2013830902327173
  0x000027a0 33323430 34303665 2d333038 46333278 3240406e-308F32x
  0x000027b0 005f5f55 494e5450 54525f54 5950455f .__UINTPTR_TYPE_
  0x000027c0 5f206c6f 6e672075 6e736967 6e656420 _ long unsigned 
  0x000027d0 696e7400 5f5f494e 5431365f 43286329 int.__INT16_C(c)
  0x000027e0 2063005f 5f474343 5f484156 455f4457  c.__GCC_HAVE_DW
  0x000027f0 41524632 5f434649 5f41534d 2031005f ARF2_CFI_ASM 1._
  0x00002800 5f53495a 454f465f 464c4f41 545f5f20 _SIZEOF_FLOAT__ 
  0x00002810 34005f5f 44454333 325f5355 424e4f52 4.__DEC32_SUBNOR
  0x00002820 4d414c5f 4d494e5f 5f20302e 30303030 MAL_MIN__ 0.0000
  0x00002830 3031452d 39354446 005f494f 5f49535f 01E-95DF._IO_IS_
  0x00002840 41505045 4e44494e 47203078 31303030 APPENDING 0x1000
  0x00002850 005f5f46 4c543634 585f4841 535f5155 .__FLT64X_HAS_QU
  0x00002860 4945545f 4e414e5f 5f203100 5f5f464c IET_NAN__ 1.__FL
  0x00002870 545f4841 535f494e 46494e49 54595f5f T_HAS_INFINITY__
  0x00002880 2031005f 494f535f 4e4f5245 504c4143  1._IOS_NOREPLAC
  0x00002890 45203634 005f5f53 54445f54 59504500 E 64.__STD_TYPE.
  0x000028a0 5f5f5553 455f504f 53495831 39393330 __USE_POSIX19930
  0x000028b0 39203100 5f494f5f 73697a65 5f742073 9 1._IO_size_t s
  0x000028c0 697a655f 74005f5f 494e4f36 345f545f ize_t.__INO64_T_
  0x000028d0 54595045 205f5f55 51554144 5f545950 TYPE __UQUAD_TYP
  0x000028e0 45005f5f 474e555f 4c494252 4152595f E.__GNU_LIBRARY_
  0x000028f0 5f203600 5f5f5354 44435f5f 2031005f _ 6.__STDC__ 1._
  0x00002900 5f676c69 62635f63 39395f66 6c657861 _glibc_c99_flexa
  0x00002910 72725f61 7661696c 61626c65 2031005f rr_available 1._
  0x00002920 5f535345 325f5f20 31005f5f 534c4f4e _SSE2__ 1.__SLON
  0x00002930 4733325f 54595045 20696e74 005f5f44 G32_TYPE int.__D
  0x00002940 424c5f4d 41585f45 58505f5f 20313032 BL_MAX_EXP__ 102
  0x00002950 34005f5f 53495a45 4f465f4c 4f4e475f 4.__SIZEOF_LONG_
  0x00002960 5f203800 5f5f4154 4f4d4943 5f434f4e _ 8.__ATOMIC_CON
  0x00002970 53554d45 2031005f 5f555345 5f46494c SUME 1.__USE_FIL
  0x00002980 455f4f46 46534554 3634005f 494f5f46 E_OFFSET64._IO_F
  0x00002990 4c414753 325f4d4d 41502031 005f5f46 LAGS2_MMAP 1.__F
  0x000029a0 4c543332 5f4d494e 5f5f2031 2e313735 LT32_MIN__ 1.175
  0x000029b0 34393433 35303832 32323837 35303739 4943508222875079
  0x000029c0 36383733 36353337 32323232 34353638 6873653722224568
  0x000029d0 652d3338 46333200 5f5f5749 4e545f54 e-38F32.__WINT_T
  0x000029e0 5950455f 5f20756e 7369676e 65642069 YPE__ unsigned i
  0x000029f0 6e74005f 5f555345 5f4d4953 43005f49 nt.__USE_MISC._I
  0x00002a00 4f5f636c 65616e75 705f7265 67696f6e O_cleanup_region
  0x00002a10 5f656e64 285f446f 69742920 005f5f49 _end(_Doit) .__I
  0x00002a20 4e543136 5f4d4158 5f5f2030 78376666 NT16_MAX__ 0x7ff
  0x00002a30 66005f50 4f534958 5f435f53 4f555243 f._POSIX_C_SOURC
  0x00002a40 45203230 30383039 4c005f5f 53434841 E 200809L.__SCHA
  0x00002a50 525f5749 4454485f 5f203800 5f5f5549 R_WIDTH__ 8.__UI
  0x00002a60 4e543332 5f432863 29206320 23232055 NT32_C(c) c ## U
  0x00002a70 005f5f4c 44424c5f 4d494e5f 31305f45 .__LDBL_MIN_10_E
  0x00002a80 58505f5f 20282d34 39333129 005f5354 XP__ (-4931)._ST
  0x00002a90 44494f5f 55534553 5f494f53 54524541 DIO_USES_IOSTREA
  0x00002aa0 4d20005f 5f53495a 454f465f 444f5542 M .__SIZEOF_DOUB
  0x00002ab0 4c455f5f 2038005f 5f55494e 54385f43 LE__ 8.__UINT8_C
  0x00002ac0 28632920 63005f5f 424c4b43 4e543634 (c) c.__BLKCNT64
  0x00002ad0 5f545f54 59504520 5f5f5351 5541445f _T_TYPE __SQUAD_
  0x00002ae0 54595045 005f494f 5f535444 494f2030 TYPE._IO_STDIO 0
  0x00002af0 34303030 30005f5f 5553455f 464f5254 40000.__USE_FORT
  0x00002b00 4946595f 4c455645 4c005f5f 474c4942 IFY_LEVEL.__GLIB
  0x00002b10 435f5553 455f4c49 425f4558 5432005f C_USE_LIB_EXT2._
  0x00002b20 5f57494e 545f4d49 4e5f5f20 3055005f _WINT_MIN__ 0U._
  0x00002b30 5f4c4442 4c5f4d41 4e545f44 49475f5f _LDBL_MANT_DIG__
  0x00002b40 20363400 5f5f7061 6431005f 5f706164  64.__pad1.__pad
  0x00002b50 32005f5f 70616433 005f5f70 61643400 2.__pad3.__pad4.
  0x00002b60 5f5f7061 6435005f 5f535444 435f5554 __pad5.__STDC_UT
  0x00002b70 465f3136 5f5f2031 005f5f4c 44424c5f F_16__ 1.__LDBL_
  0x00002b80 45505349 4c4f4e5f 5f20312e 30383432 EPSILON__ 1.0842
  0x00002b90 30323137 32343835 35303434 33343030 0217248550443400
  0x00002ba0 37343532 38303038 36393934 31373165 745280086994171e
  0x00002bb0 2d31394c 005f5f62 6f733028 70747229 -19L.__bos0(ptr)
  0x00002bc0 205f5f62 75696c74 696e5f6f 626a6563  __builtin_objec
  0x00002bd0 745f7369 7a652028 7074722c 20302900 t_size (ptr, 0).
  0x00002be0 5f494f4c 42462031 005f5f61 74747269 _IOLBF 1.__attri
  0x00002bf0 62757465 5f666f72 6d61745f 6172675f bute_format_arg_
  0x00002c00 5f287829 205f5f61 74747269 62757465 _(x) __attribute
  0x00002c10 5f5f2028 285f5f66 6f726d61 745f6172 __ ((__format_ar
  0x00002c20 675f5f20 28782929 29005f5f 5f5f4649 g__ (x))).____FI
  0x00002c30 4c455f64 6566696e 65642031 005f4249 LE_defined 1._BI
  0x00002c40 54535f53 5444494f 5f4c494d 5f482031 TS_STDIO_LIM_H 1
  0x00002c50 005f5f4c 44424c5f 4841535f 494e4649 .__LDBL_HAS_INFI
  0x00002c60 4e495459 5f5f2031 005f5f55 53455f50 NITY__ 1.__USE_P
  0x00002c70 4f534958 2031005f 5f494e4f 5f545f4d OSIX 1.__INO_T_M
  0x00002c80 41544348 45535f49 4e4f3634 5f542031 ATCHES_INO64_T 1
  0x00002c90 005f5f47 43435f49 45435f35 35395f43 .__GCC_IEC_559_C
  0x00002ca0 4f4d504c 45582032 005f5f53 49475f41 OMPLEX 2.__SIG_A
  0x00002cb0 544f4d49 435f4d49 4e5f5f20 282d5f5f TOMIC_MIN__ (-__
  0x00002cc0 5349475f 41544f4d 49435f4d 41585f5f SIG_ATOMIC_MAX__
  0x00002cd0 202d2031 29005f49 4f5f494e 5f424143  - 1)._IO_IN_BAC
  0x00002ce0 4b555020 30783130 30005f49 4f5f666c KUP 0x100._IO_fl
  0x00002cf0 6f636b66 696c6528 5f667029 20005f5f ockfile(_fp) .__
  0x00002d00 53495a45 4f465f57 43484152 5f545f5f SIZEOF_WCHAR_T__
  0x00002d10 2034005f 5f617474 72696275 74655f64  4.__attribute_d
  0x00002d20 65707265 63617465 645f5f20 5f5f6174 eprecated__ __at
  0x00002d30 74726962 7574655f 5f202828 5f5f6465 tribute__ ((__de
  0x00002d40 70726563 61746564 5f5f2929 005f5f46 precated__)).__F
  0x00002d50 4c543132 385f4d49 4e5f3130 5f455850 LT128_MIN_10_EXP
  0x00002d60 5f5f2028 2d343933 3129005f 5f464c4f __ (-4931).__FLO
  0x00002d70 41545f57 4f52445f 4f524445 525f5f20 AT_WORD_ORDER__ 
  0x00002d80 5f5f4f52 4445525f 4c495454 4c455f45 __ORDER_LITTLE_E
  0x00002d90 4e444941 4e5f5f00 5f5f4743 435f4841 NDIAN__.__GCC_HA
  0x00002da0 56455f53 594e435f 434f4d50 4152455f VE_SYNC_COMPARE_
  0x00002db0 414e445f 53574150 5f322031 005f475f AND_SWAP_2 1._G_
  0x00002dc0 48415645 5f4d5245 4d415020 31005f5f HAVE_MREMAP 1.__
  0x00002dd0 44454333 325f4d41 4e545f44 49475f5f DEC32_MANT_DIG__
  0x00002de0 2037005f 5f464c54 33325f44 454e4f52  7.__FLT32_DENOR
  0x00002df0 4d5f4d49 4e5f5f20 312e3430 31323938 M_MIN__ 1.401298
  0x00002e00 34363433 32343831 37303730 39323337 4643248170709237
  0x00002e10 32393538 33323839 39313631 33652d34 2958328991613e-4
  0x00002e20 35463332 005f5f6e 6565645f 73697a65 5F32.__need_size
  0x00002e30 5f74005f 5f55494e 545f4641 53543136 _t.__UINT_FAST16
  0x00002e40 5f4d4158 5f5f2030 78666666 66666666 _MAX__ 0xfffffff
  0x00002e50 66666666 66666666 66554c00 5f5f6e65 fffffffffUL.__ne
  0x00002e60 65645f5f 5f76615f 6c697374 005f5f49 ed___va_list.__I
  0x00002e70 4e543332 5f4d4158 5f5f2030 78376666 NT32_MAX__ 0x7ff
  0x00002e80 66666666 66005f49 4f5f494e 5445524e fffff._IO_INTERN
  0x00002e90 414c2030 3130005f 5f5f696e 745f7369 AL 010.___int_si
  0x00002ea0 7a655f74 5f682000 5f5f676c 6962635f ze_t_h .__glibc_
  0x00002eb0 6c696b65 6c792863 6f6e6429 205f5f62 likely(cond) __b
  0x00002ec0 75696c74 696e5f65 78706563 74202828 uiltin_expect ((
  0x00002ed0 636f6e64 292c2031 29005f5f 41544f4d cond), 1).__ATOM
  0x00002ee0 49435f41 43515549 52452032 005f5f55 IC_ACQUIRE 2.__U
  0x00002ef0 494e5431 365f4328 63292063 005f494f INT16_C(c) c._IO
  0x00002f00 5f464c41 4753325f 55534552 5f574255 _FLAGS2_USER_WBU
  0x00002f10 46203800 5f5f494e 5436345f 4d41585f F 8.__INT64_MAX_
  0x00002f20 5f203078 37666666 66666666 66666666 _ 0x7fffffffffff
  0x00002f30 66666666 4c005f5f 6e656564 5f73697a ffffL.__need_siz
  0x00002f40 655f7420 005f5f62 6f732870 74722920 e_t .__bos(ptr) 
  0x00002f50 5f5f6275 696c7469 6e5f6f62 6a656374 __builtin_object
  0x00002f60 5f73697a 65202870 74722c20 5f5f5553 _size (ptr, __US
  0x00002f70 455f464f 52544946 595f4c45 56454c20 E_FORTIFY_LEVEL 
  0x00002f80 3e203129 005f5f55 574f5244 5f545950 > 1).__UWORD_TYP
  0x00002f90 4520756e 7369676e 6564206c 6f6e6720 E unsigned long 
  0x00002fa0 696e7400 5f5f474c 4942435f 4d494e4f int.__GLIBC_MINO
  0x00002fb0 525f5f20 3237005f 5f534547 5f475320 R__ 27.__SEG_GS 
  0x00002fc0 31005f5f 5353455f 4d415448 5f5f2031 1.__SSE_MATH__ 1
  0x00002fd0 005f5f4e 4c494e4b 5f545f54 59504520 .__NLINK_T_TYPE 
  0x00002fe0 5f5f5359 5343414c 4c5f554c 4f4e475f __SYSCALL_ULONG_
  0x00002ff0 54595045 005f5f55 494e544d 41585f54 TYPE.__UINTMAX_T
  0x00003000 5950455f 5f206c6f 6e672075 6e736967 YPE__ long unsig
  0x00003010 6e656420 696e7400 5f5f5553 455f584f ned int.__USE_XO
  0x00003020 50454e32 4b005f5f 4c454146 202c205f PEN2K.__LEAF , _
  0x00003030 5f6c6561 665f5f00 5f5f4445 43313238 _leaf__.__DEC128
  0x00003040 5f4d4158 5f455850 5f5f2036 31343500 _MAX_EXP__ 6145.
  0x00003050 5f494f5f 4c454654 20303200 5f5f666f _IO_LEFT 02.__fo
  0x00003060 72746966 795f6675 6e637469 6f6e205f rtify_function _
  0x00003070 5f657874 65726e5f 616c7761 79735f69 _extern_always_i
  0x00003080 6e6c696e 65205f5f 61747472 69627574 nline __attribut
  0x00003090 655f6172 74696669 6369616c 5f5f005f e_artificial__._
  0x000030a0 494f5f42 4f4f4c41 4c504841 20303230 IO_BOOLALPHA 020
  0x000030b0 30303030 005f5f53 49475f41 544f4d49 0000.__SIG_ATOMI
  0x000030c0 435f5749 4454485f 5f203332 005f5f43 C_WIDTH__ 32.__C
  0x000030d0 4f4e4341 5428782c 79292078 20232320 ONCAT(x,y) x ## 
  0x000030e0 79005f5f 61747472 69627574 655f6465 y.__attribute_de
  0x000030f0 70726563 61746564 5f6d7367 5f5f286d precated_msg__(m
  0x00003100 73672920 5f5f6174 74726962 7574655f sg) __attribute_
  0x00003110 5f202828 5f5f6465 70726563 61746564 _ ((__deprecated
  0x00003120 5f5f2028 6d736729 2929005f 5f534852 __ (msg))).__SHR
  0x00003130 545f4d41 585f5f20 30783766 6666005f T_MAX__ 0x7fff._
  0x00003140 5f474343 5f41544f 4d49435f 57434841 _GCC_ATOMIC_WCHA
  0x00003150 525f545f 4c4f434b 5f465245 45203200 R_T_LOCK_FREE 2.
  0x00003160 5f494f5f 50454e44 494e475f 4f555450 _IO_PENDING_OUTP
  0x00003170 55545f43 4f554e54 285f6670 29202828 UT_COUNT(_fp) ((
  0x00003180 5f667029 2d3e5f49 4f5f7772 6974655f _fp)->_IO_write_
  0x00003190 70747220 2d20285f 6670292d 3e5f494f ptr - (_fp)->_IO
  0x000031a0 5f777269 74655f62 61736529 005f494f _write_base)._IO
  0x000031b0 5f555345 525f4c4f 434b2030 78383030 _USER_LOCK 0x800
  0x000031c0 30005f5f 4f524445 525f5044 505f454e 0.__ORDER_PDP_EN
  0x000031d0 4449414e 5f5f2033 34313200 5f494f5f DIAN__ 3412._IO_
  0x000031e0 554e4946 4945445f 4a554d50 5441424c UNIFIED_JUMPTABL
  0x000031f0 45532031 00544d50 5f4d4158 20323338 ES 1.TMP_MAX 238
  0x00003200 33323800 5f494f5f 6e656564 5f6c6f63 328._IO_need_loc
  0x00003210 6b285f66 70292028 28285f66 70292d3e k(_fp) (((_fp)->
  0x00003220 5f666c61 67733220 26205f49 4f5f464c _flags2 & _IO_FL
  0x00003230 41475332 5f4e4545 445f4c4f 434b2920 AGS2_NEED_LOCK) 
  0x00003240 213d2030 29005f5f 464c545f 44454349 != 0).__FLT_DECI
  0x00003250 4d414c5f 4449475f 5f203900 5f5f7761 MAL_DIG__ 9.__wa
  0x00003260 726e6465 636c286e 616d652c 6d736729 rndecl(name,msg)
  0x00003270 20657874 65726e20 766f6964 206e616d  extern void nam
  0x00003280 65202876 6f696429 205f5f61 74747269 e (void) __attri
  0x00003290 62757465 5f5f2828 5f5f7761 726e696e bute__((__warnin
  0x000032a0 675f5f20 286d7367 29292900 5f5f464c g__ (msg))).__FL
  0x000032b0 5436345f 4d41585f 31305f45 58505f5f T64_MAX_10_EXP__
  0x000032c0 20333038 005f5f53 5452494e 47287829  308.__STRING(x)
  0x000032d0 20237800 5f5f4c44 424c5f4d 494e5f45  #x.__LDBL_MIN_E
  0x000032e0 58505f5f 20282d31 36333831 29005f5f XP__ (-16381).__
  0x000032f0 57494e54 5f574944 54485f5f 20333200 WINT_WIDTH__ 32.
  0x00003300 5f494f5f 53484f57 504f5320 30323030 _IO_SHOWPOS 0200
  0x00003310 30005f49 4f5f7265 61645f65 6e64005f 0._IO_read_end._
  0x00003320 5f464c54 3634585f 4d494e5f 5f20332e _FLT64X_MIN__ 3.
  0x00003330 33363231 30333134 33313132 30393335 3621031431120935
  0x00003340 30363236 32363737 38313733 32313735 0626267781732175
  0x00003350 32363065 2d343933 32463634 78005f49 260e-4932F64x._I
  0x00003360 4f535f4f 55545055 54203200 5f5f494e OS_OUTPUT 2.__IN
  0x00003370 545f4641 5354385f 4d41585f 5f203078 T_FAST8_MAX__ 0x
  0x00003380 3766005f 5f524547 49535445 525f5052 7f.__REGISTER_PR
  0x00003390 45464958 5f5f2000 5f5f464c 5433325f EFIX__ .__FLT32_
  0x000033a0 45505349 4c4f4e5f 5f20312e 31393230 EPSILON__ 1.1920
  0x000033b0 39323839 35353037 38313235 30303030 9289550781250000
  0x000033c0 30303030 30303030 30303030 30303065 000000000000000e
  0x000033d0 2d374633 32005f5f 474c4942 435f494e -7F32.__GLIBC_IN
  0x000033e0 5445524e 414c5f53 54415254 494e475f TERNAL_STARTING_
  0x000033f0 48454144 45525f49 4d504c45 4d454e54 HEADER_IMPLEMENT
  0x00003400 4154494f 4e20005f 5f53574f 52445f54 ATION .__SWORD_T
  0x00003410 59504520 6c6f6e67 20696e74 005f5f4c YPE long int.__L
  0x00003420 4f4e475f 4d41585f 5f203078 37666666 ONG_MAX__ 0x7fff
  0x00003430 66666666 66666666 66666666 4c005f5f ffffffffffffL.__
  0x00003440 73747562 5f676574 6d736720 005f5f44 stub_getmsg .__D
  0x00003450 45433634 5f4d4158 5f455850 5f5f2033 EC64_MAX_EXP__ 3
  0x00003460 3835005f 5f464c54 3332585f 4d494e5f 85.__FLT32X_MIN_
  0x00003470 31305f45 58505f5f 20282d33 30372900 10_EXP__ (-307).
  0x00003480 5f5f5553 455f504f 53495832 005f494f __USE_POSIX2._IO
  0x00003490 5f554e49 54425546 20303230 30303000 _UNITBUF 020000.
  0x000034a0 5f5f4f46 465f545f 54595045 205f5f53 __OFF_T_TYPE __S
  0x000034b0 59534341 4c4c5f53 4c4f4e47 5f545950 YSCALL_SLONG_TYP
  0x000034c0 45005f5f 55494e54 4d41585f 43286329 E.__UINTMAX_C(c)
  0x000034d0 20632023 2320554c 005f5f43 48415233  c ## UL.__CHAR3
  0x000034e0 325f5459 50455f5f 20756e73 69676e65 2_TYPE__ unsigne
  0x000034f0 6420696e 74005f5f 464c5436 34585f48 d int.__FLT64X_H
  0x00003500 41535f49 4e46494e 4954595f 5f203100 AS_INFINITY__ 1.
  0x00003510 5f424954 535f475f 434f4e46 49475f48 _BITS_G_CONFIG_H
  0x00003520 2031005f 5f444543 3132385f 4d494e5f  1.__DEC128_MIN_
  0x00003530 5f203145 2d363134 33444c00 5f5f464c _ 1E-6143DL.__FL
  0x00003540 54333258 5f4d494e 5f455850 5f5f2028 T32X_MIN_EXP__ (
  0x00003550 2d313032 3129005f 494f5f67 6574635f -1021)._IO_getc_
  0x00003560 756e6c6f 636b6564 285f6670 2920285f unlocked(_fp) (_
  0x00003570 494f5f42 45202828 5f667029 2d3e5f49 IO_BE ((_fp)->_I
  0x00003580 4f5f7265 61645f70 7472203e 3d20285f O_read_ptr >= (_
  0x00003590 6670292d 3e5f494f 5f726561 645f656e fp)->_IO_read_en
  0x000035a0 642c2030 29203f20 5f5f7566 6c6f7720 d, 0) ? __uflow 
  0x000035b0 285f6670 29203a20 2a28756e 7369676e (_fp) : *(unsign
  0x000035c0 65642063 68617220 2a292028 5f667029 ed char *) (_fp)
  0x000035d0 2d3e5f49 4f5f7265 61645f70 74722b2b ->_IO_read_ptr++
  0x000035e0 29005f5f 494e5450 54525f57 49445448 ).__INTPTR_WIDTH
  0x000035f0 5f5f2036 34005f5f 494e4f5f 545f5459 __ 64.__INO_T_TY
  0x00003600 5045205f 5f535953 43414c4c 5f554c4f PE __SYSCALL_ULO
  0x00003610 4e475f54 59504500 5f5f5549 4e545f46 NG_TYPE.__UINT_F
  0x00003620 41535438 5f545950 455f5f20 756e7369 AST8_TYPE__ unsi
  0x00003630 676e6564 20636861 72005f5f 494e5433 gned char.__INT3
  0x00003640 325f4328 63292063 005f5f46 5346494c 2_C(c) c.__FSFIL
  0x00003650 434e5436 345f545f 54595045 205f5f55 CNT64_T_TYPE __U
  0x00003660 51554144 5f545950 45005f5f 4c44424c QUAD_TYPE.__LDBL
  0x00003670 5f484153 5f515549 45545f4e 414e5f5f _HAS_QUIET_NAN__
  0x00003680 2031005f 5f474e55 435f5041 5443484c  1.__GNUC_PATCHL
  0x00003690 4556454c 5f5f2030 005f5f57 494e545f EVEL__ 0.__WINT_
  0x000036a0 4d41585f 5f203078 66666666 66666666 MAX__ 0xffffffff
  0x000036b0 55005f5f 61747472 69627574 655f6e6f U.__attribute_no
  0x000036c0 6e737472 696e675f 5f20005f 494f5f4d nstring__ ._IO_M
  0x000036d0 41474943 5f4d4153 4b203078 46464646 AGIC_MASK 0xFFFF
  0x000036e0 30303030 005f5f6c 696e7578 2031005f 0000.__linux 1._
  0x000036f0 5f474c49 42435f55 53455f49 45435f36 _GLIBC_USE_IEC_6
  0x00003700 30353539 5f46554e 43535f45 5854005f 0559_FUNCS_EXT._
  0x00003710 494f5f76 615f6c69 7374205f 5f676e75 IO_va_list __gnu
  0x00003720 635f7661 5f6c6973 74005f47 5f425546 c_va_list._G_BUF
  0x00003730 53495a20 38313932 005f5f4c 44424c5f SIZ 8192.__LDBL_
  0x00003740 52454449 5231286e 616d652c 70726f74 REDIR1(name,prot
  0x00003750 6f2c616c 69617329 206e616d 65207072 o,alias) name pr
  0x00003760 6f746f00 5f5f6174 74726962 7574655f oto.__attribute_
  0x00003770 6d616c6c 6f635f5f 205f5f61 74747269 malloc__ __attri
  0x00003780 62757465 5f5f2028 285f5f6d 616c6c6f bute__ ((__mallo
  0x00003790 635f5f29 29005f5f 55494e54 33325f54 c__)).__UINT32_T
  0x000037a0 5950455f 5f20756e 7369676e 65642069 YPE__ unsigned i
  0x000037b0 6e74005f 5f4c4442 4c5f5245 4449525f nt.__LDBL_REDIR_
  0x000037c0 4e544828 6e616d65 2c70726f 746f2920 NTH(name,proto) 
  0x000037d0 6e616d65 2070726f 746f205f 5f544852 name proto __THR
  0x000037e0 4f57005f 5f555345 5f584f50 454e324b OW.__USE_XOPEN2K
  0x000037f0 38005f49 4f5f5550 50455243 41534520 8._IO_UPPERCASE 
  0x00003800 30313030 3000505f 746d7064 69722022 01000.P_tmpdir "
  0x00003810 2f746d70 22005f5f 52454449 52454354 /tmp".__REDIRECT
  0x00003820 5f4e5448 286e616d 652c7072 6f746f2c _NTH(name,proto,
  0x00003830 616c6961 7329206e 616d6520 70726f74 alias) name prot
  0x00003840 6f205f5f 61736d5f 5f20285f 5f41534d o __asm__ (__ASM
  0x00003850 4e414d45 20282361 6c696173 2929205f NAME (#alias)) _
  0x00003860 5f544852 4f57005f 5f555345 5f584f50 _THROW.__USE_XOP
  0x00003870 454e005f 5f464c54 3132385f 45505349 EN.__FLT128_EPSI
  0x00003880 4c4f4e5f 5f20312e 39323539 32393934 LON__ 1.92592994
  0x00003890 34333837 32333538 35333035 35393737 4387235853055977
  0x000038a0 39343235 38343932 37333265 2d333446 94258492732e-34F
  0x000038b0 31323800 464f5045 4e5f4d41 58203136 128.FOPEN_MAX 16
  0x000038c0 005f494f 5f46494c 455f706c 7573005f ._IO_FILE_plus._
  0x000038d0 504f5349 585f435f 534f5552 4345005f POSIX_C_SOURCE._
  0x000038e0 5f544852 4f57205f 5f617474 72696275 _THROW __attribu
  0x000038f0 74655f5f 2028285f 5f6e6f74 68726f77 te__ ((__nothrow
  0x00003900 5f5f205f 5f4c4541 46292900 5f5f5349 __ __LEAF)).__SI
  0x00003910 5a454f46 5f4c4f4e 475f4c4f 4e475f5f ZEOF_LONG_LONG__
  0x00003920 2038005f 56415f4c 4953545f 44454649  8._VA_LIST_DEFI
  0x00003930 4e454420 005f5f55 494e545f 46415354 NED .__UINT_FAST
  0x00003940 33325f54 5950455f 5f206c6f 6e672075 32_TYPE__ long u
  0x00003950 6e736967 6e656420 696e7400 5f5f5348 nsigned int.__SH
  0x00003960 52545f57 49445448 5f5f2031 36005f5f RT_WIDTH__ 16.__
  0x00003970 53534532 5f4d4154 485f5f20 31005f5f SSE2_MATH__ 1.__
  0x00003980 5353495a 455f545f 54595045 205f5f53 SSIZE_T_TYPE __S
  0x00003990 574f5244 5f545950 45005f5f 5336345f WORD_TYPE.__S64_
  0x000039a0 54595045 206c6f6e 6720696e 74005f5f TYPE long int.__
  0x000039b0 61747472 69627574 655f7075 72655f5f attribute_pure__
  0x000039c0 205f5f61 74747269 62757465 5f5f2028  __attribute__ (
  0x000039d0 285f5f70 7572655f 5f292900 5f5f494e (__pure__)).__IN
  0x000039e0 544d4158 5f432863 29206320 2323204c TMAX_C(c) c ## L
  0x000039f0 005f494f 5f69636f 6e765f74 205f475f ._IO_iconv_t _G_
  0x00003a00 69636f6e 765f7400 5f5f494e 545f4641 iconv_t.__INT_FA
  0x00003a10 53543332 5f574944 54485f5f 20363400 ST32_WIDTH__ 64.
  0x00003a20 5f5f5553 455f584f 50454e32 4b382031 __USE_XOPEN2K8 1
  0x00003a30 005f5f49 4e545f4c 45415354 36345f57 .__INT_LEAST64_W
  0x00003a40 49445448 5f5f2036 34005f5f 474c4942 IDTH__ 64.__GLIB
  0x00003a50 435f5553 455f4945 435f3630 3535395f C_USE_IEC_60559_
  0x00003a60 54595045 535f4558 54203000 5f5f494e TYPES_EXT 0.__IN
  0x00003a70 54385f43 28632920 63005f5f 53495a45 T8_C(c) c.__SIZE
  0x00003a80 4f465f50 4f494e54 45525f5f 2038005f OF_POINTER__ 8._
  0x00003a90 5f464c54 36345f45 5053494c 4f4e5f5f _FLT64_EPSILON__
  0x00003aa0 20322e32 32303434 36303439 32353033  2.2204460492503
  0x00003ab0 31333038 30383437 32363333 33363138 1308084726333618
  0x00003ac0 31363430 3632652d 31364636 34005f49 164062e-16F64._I
  0x00003ad0 4f5f7661 5f6c6973 74205f47 5f76615f O_va_list _G_va_
  0x00003ae0 6c697374 005f5f46 4c543634 585f4d41 list.__FLT64X_MA
  0x00003af0 4e545f44 49475f5f 20363400 5f444546 NT_DIG__ 64._DEF
  0x00003b00 41554c54 5f534f55 52434500 5f5f5743 AULT_SOURCE.__WC
  0x00003b10 4841525f 4d41585f 5f203078 37666666 HAR_MAX__ 0x7fff
  0x00003b20 66666666 005f494f 5f425546 53495a20 ffff._IO_BUFSIZ 
  0x00003b30 5f475f42 55465349 5a005f5f 46534649 _G_BUFSIZ.__FSFI
  0x00003b40 4c434e54 5f545f54 59504520 5f5f5359 LCNT_T_TYPE __SY
  0x00003b50 5343414c 4c5f554c 4f4e475f 54595045 SCALL_ULONG_TYPE
  0x00003b60 005f494f 5f424144 5f534545 4e203078 ._IO_BAD_SEEN 0x
  0x00003b70 34303030 005f5f77 61726e61 74747228 4000.__warnattr(
  0x00003b80 6d736729 205f5f61 74747269 62757465 msg) __attribute
  0x00003b90 5f5f2828 5f5f7761 726e696e 675f5f20 __((__warning__ 
  0x00003ba0 286d7367 29292900 5f5f494e 545f5749 (msg))).__INT_WI
  0x00003bb0 4454485f 5f203332 005f5f4c 44424c5f DTH__ 32.__LDBL_
  0x00003bc0 44454349 4d414c5f 4449475f 5f203231 DECIMAL_DIG__ 21
  0x00003bd0 005f5f47 43435f41 544f4d49 435f504f .__GCC_ATOMIC_PO
  0x00003be0 494e5445 525f4c4f 434b5f46 52454520 INTER_LOCK_FREE 
  0x00003bf0 32005f5f 73747562 5f5f5f63 6f6d7061 2.__stub___compa
  0x00003c00 745f6264 666c7573 68200046 4f50454e t_bdflush .FOPEN
  0x00003c10 5f4d4158 005f6c6f 636b005f 5f534547 _MAX._lock.__SEG
  0x00003c20 5f465320 31005f5f 50286172 67732920 _FS 1.__P(args) 
  0x00003c30 61726773 005f5f54 494d455f 545f5459 args.__TIME_T_TY
  0x00003c40 5045205f 5f535953 43414c4c 5f534c4f PE __SYSCALL_SLO
  0x00003c50 4e475f54 59504500 5f5f5549 4e545f46 NG_TYPE.__UINT_F
  0x00003c60 41535431 365f5459 50455f5f 206c6f6e AST16_TYPE__ lon
  0x00003c70 6720756e 7369676e 65642069 6e74005f g unsigned int._
  0x00003c80 5f474c49 42435f5f 2032005f 494f5f73 _GLIBC__ 2._IO_s
  0x00003c90 74646f75 74202828 5f494f5f 46494c45 tdout ((_IO_FILE
  0x00003ca0 2a292826 5f494f5f 325f315f 7374646f *)(&_IO_2_1_stdo
  0x00003cb0 75745f29 29005f5f 55534552 5f4c4142 ut_)).__USER_LAB
  0x00003cc0 454c5f50 52454649 585f5f20 005f494f EL_PREFIX__ ._IO
  0x00003cd0 5f706964 5f74205f 5f706964 5f74005f _pid_t __pid_t._
  0x00003ce0 5f676c69 62635f6d 6163726f 5f776172 _glibc_macro_war
  0x00003cf0 6e696e67 31286d65 73736167 6529205f ning1(message) _
  0x00003d00 50726167 6d612028 236d6573 73616765 Pragma (#message
  0x00003d10 29005f5f 4743435f 41544f4d 49435f43 ).__GCC_ATOMIC_C
  0x00003d20 48415233 325f545f 4c4f434b 5f465245 HAR32_T_LOCK_FRE
  0x00003d30 45203200 5f6f6c64 5f6f6666 73657400 E 2._old_offset.
  0x00003d40 5f494f5f 46494c45 005f494f 5f554e42 _IO_FILE._IO_UNB
  0x00003d50 55464645 52454420 32005f5f 43484152 UFFERED 2.__CHAR
  0x00003d60 5f424954 5f5f2038 005f5f43 4c4f434b _BIT__ 8.__CLOCK
  0x00003d70 5f545f54 59504520 5f5f5359 5343414c _T_TYPE __SYSCAL
  0x00003d80 4c5f534c 4f4e475f 54595045 005f5f41 L_SLONG_TYPE.__A
  0x00003d90 544f4d49 435f5245 4c415845 44203000 TOMIC_RELAXED 0.
  0x00003da0 5f494f5f 7373697a 655f7420 5f5f7373 _IO_ssize_t __ss
  0x00003db0 697a655f 74005f5f 53544443 5f484f53 ize_t.__STDC_HOS
  0x00003dc0 5445445f 5f203100 5f5f5349 5a455f57 TED__ 1.__SIZE_W
  0x00003dd0 49445448 5f5f2036 34005f5f 52454449 IDTH__ 64.__REDI
  0x00003de0 52454354 5f4c4442 4c286e61 6d652c70 RECT_LDBL(name,p
  0x00003df0 726f746f 2c616c69 61732920 5f5f5245 roto,alias) __RE
  0x00003e00 44495245 43542028 6e616d65 2c207072 DIRECT (name, pr
  0x00003e10 6f746f2c 20616c69 61732900 5f5f616c oto, alias).__al
  0x00003e20 77617973 5f696e6c 696e6500 5f5f6861 ways_inline.__ha
  0x00003e30 735f696e 636c7564 65285354 5229205f s_include(STR) _
  0x00003e40 5f686173 5f696e63 6c756465 5f5f2853 _has_include__(S
  0x00003e50 54522900 5f5f6e65 65645f5f 5f76615f TR).__need___va_
  0x00003e60 6c697374 20005f5f 41534d4e 414d4532 list .__ASMNAME2
  0x00003e70 28707265 6669782c 636e616d 6529205f (prefix,cname) _
  0x00003e80 5f535452 494e4720 28707265 66697829 _STRING (prefix)
  0x00003e90 20636e61 6d65005f 494f5f53 4349454e  cname._IO_SCIEN
  0x00003ea0 54494649 43203034 30303000 5f494f5f TIFIC 04000._IO_
  0x00003eb0 7065656b 635f756e 6c6f636b 6564285f peekc_unlocked(_
  0x00003ec0 66702920 285f494f 5f424520 28285f66 fp) (_IO_BE ((_f
  0x00003ed0 70292d3e 5f494f5f 72656164 5f707472 p)->_IO_read_ptr
  0x00003ee0 203e3d20 285f6670 292d3e5f 494f5f72  >= (_fp)->_IO_r
  0x00003ef0 6561645f 656e642c 20302920 2626205f ead_end, 0) && _
  0x00003f00 5f756e64 6572666c 6f772028 5f667029 _underflow (_fp)
  0x00003f10 203d3d20 454f4620 3f20454f 46203a20  == EOF ? EOF : 
  0x00003f20 2a28756e 7369676e 65642063 68617220 *(unsigned char 
  0x00003f30 2a292028 5f667029 2d3e5f49 4f5f7265 *) (_fp)->_IO_re
  0x00003f40 61645f70 74722900 5f5f4c4f 4e475f57 ad_ptr).__LONG_W
  0x00003f50 49445448 5f5f2036 34005f5f 55494e54 IDTH__ 64.__UINT
  0x00003f60 36345f4d 41585f5f 20307866 66666666 64_MAX__ 0xfffff
  0x00003f70 66666666 66666666 66666655 4c005f5f fffffffffffUL.__
  0x00003f80 53515541 445f5459 5045206c 6f6e6720 SQUAD_TYPE long 
  0x00003f90 696e7400 5f5f5553 455f584f 50454e32 int.__USE_XOPEN2
  0x00003fa0 4b585349 005f5f61 74747269 62757465 KXSI.__attribute
  0x00003fb0 5f616c6c 6f635f73 697a655f 5f287061 _alloc_size__(pa
  0x00003fc0 72616d73 29205f5f 61747472 69627574 rams) __attribut
  0x00003fd0 655f5f20 28285f5f 616c6c6f 635f7369 e__ ((__alloc_si
  0x00003fe0 7a655f5f 20706172 616d7329 29005f49 ze__ params))._I
  0x00003ff0 4f5f7769 6e745f74 2077696e 745f7400 O_wint_t wint_t.
  0x00004000 5f5f6b38 2031005f 5f434841 5231365f __k8 1.__CHAR16_
  0x00004010 54595045 5f5f2073 686f7274 20756e73 TYPE__ short uns
  0x00004020 69676e65 6420696e 74005f5f 4743435f igned int.__GCC_
  0x00004030 41544f4d 49435f4c 4c4f4e47 5f4c4f43 ATOMIC_LLONG_LOC
  0x00004040 4b5f4652 45452032 005f5f44 45433634 K_FREE 2.__DEC64
  0x00004050 5f4d494e 5f455850 5f5f2028 2d333832 _MIN_EXP__ (-382
  0x00004060 29005f5f 72657374 72696374 5f617272 ).__restrict_arr
  0x00004070 205f5f72 65737472 69637400 5f5f4154  __restrict.__AT
  0x00004080 4f4d4943 5f414351 5f52454c 2034005f OMIC_ACQ_REL 4._
  0x00004090 494f5f66 706f735f 74205f47 5f66706f IO_fpos_t _G_fpo
  0x000040a0 735f7400 5f5f6174 74726962 7574655f s_t.__attribute_
  0x000040b0 666f726d 61745f73 7472666d 6f6e5f5f format_strfmon__
  0x000040c0 28612c62 29205f5f 61747472 69627574 (a,b) __attribut
  0x000040d0 655f5f20 28285f5f 666f726d 61745f5f e__ ((__format__
  0x000040e0 20285f5f 73747266 6d6f6e5f 5f2c2061  (__strfmon__, a
  0x000040f0 2c206229 2929005f 5f444543 33325f4d , b))).__DEC32_M
  0x00004100 494e5f45 58505f5f 20282d39 3429005f IN_EXP__ (-94)._
  0x00004110 494f5f46 49584544 20303130 30303000 IO_FIXED 010000.
  0x00004120 5f5f494e 5436345f 54595045 5f5f206c __INT64_TYPE__ l
  0x00004130 6f6e6720 696e7400 5f5f464c 545f4d49 ong int.__FLT_MI
  0x00004140 4e5f5f20 312e3137 35343934 33353038 N__ 1.1754943508
  0x00004150 32323238 37353037 39363837 33363533 2228750796873653
  0x00004160 37323232 32343536 38652d33 3846005f 722224568e-38F._
  0x00004170 5f553634 5f545950 4520756e 7369676e _U64_TYPE unsign
  0x00004180 6564206c 6f6e6720 696e7400 5f736275 ed long int._sbu
  0x00004190 66005f49 4f5f7661 5f6c6973 74007374 f._IO_va_list.st
  0x000041a0 646f7574 20737464 6f757400 5f5f5553 dout stdout.__US
  0x000041b0 455f474e 55005f5f 54494d45 525f545f E_GNU.__TIMER_T_
  0x000041c0 54595045 20766f69 64202a00 5f494f5f TYPE void *._IO_
  0x000041d0 77726974 655f7074 72005f5f 46585352 write_ptr.__FXSR
  0x000041e0 5f5f2031 005f5f4c 4541465f 41545452 __ 1.__LEAF_ATTR
  0x000041f0 205f5f61 74747269 62757465 5f5f2028  __attribute__ (
  0x00004200 285f5f6c 6561665f 5f292900 5f5f494e (__leaf__)).__IN
  0x00004210 54385f54 5950455f 5f207369 676e6564 T8_TYPE__ signed
  0x00004220 20636861 72005f5f 494e545f 4c454153  char.__INT_LEAS
  0x00004230 5433325f 57494454 485f5f20 3332005f T32_WIDTH__ 32._
  0x00004240 5f535953 43414c4c 5f534c4f 4e475f54 _SYSCALL_SLONG_T
  0x00004250 59504520 5f5f534c 4f4e4757 4f52445f YPE __SLONGWORD_
  0x00004260 54595045 005f5f55 494e544d 41585f4d TYPE.__UINTMAX_M
  0x00004270 41585f5f 20307866 66666666 66666666 AX__ 0xfffffffff
  0x00004280 66666666 66666655 4c005f5f 676c6962 fffffffUL.__glib
  0x00004290 635f636c 616e675f 70726572 6571286d c_clang_prereq(m
  0x000042a0 616a2c6d 696e2920 30005f49 4f5f6261 aj,min) 0._IO_ba
  0x000042b0 636b7570 5f626173 65005f5f 6c696e75 ckup_base.__linu
  0x000042c0 785f5f20 31005f5f 5049435f 5f203200 x__ 1.__PIC__ 2.
  0x000042d0 5f5f494e 545f4c45 41535433 325f5459 __INT_LEAST32_TY
  0x000042e0 50455f5f 20696e74 005f5f55 494e545f PE__ int.__UINT_
  0x000042f0 4c454153 5436345f 54595045 5f5f206c LEAST64_TYPE__ l
  0x00004300 6f6e6720 756e7369 676e6564 20696e74 ong unsigned int
  0x00004310 005f494f 5f707574 635f756e 6c6f636b ._IO_putc_unlock
  0x00004320 6564285f 63682c5f 66702920 285f494f ed(_ch,_fp) (_IO
  0x00004330 5f424520 28285f66 70292d3e 5f494f5f _BE ((_fp)->_IO_
  0x00004340 77726974 655f7074 72203e3d 20285f66 write_ptr >= (_f
  0x00004350 70292d3e 5f494f5f 77726974 655f656e p)->_IO_write_en
  0x00004360 642c2030 29203f20 5f5f6f76 6572666c d, 0) ? __overfl
  0x00004370 6f772028 5f66702c 2028756e 7369676e ow (_fp, (unsign
  0x00004380 65642063 68617229 20285f63 68292920 ed char) (_ch)) 
  0x00004390 3a202875 6e736967 6e656420 63686172 : (unsigned char
  0x000043a0 2920282a 285f6670 292d3e5f 494f5f77 ) (*(_fp)->_IO_w
  0x000043b0 72697465 5f707472 2b2b203d 20285f63 rite_ptr++ = (_c
  0x000043c0 68292929 005f504f 5349585f 534f5552 h)))._POSIX_SOUR
  0x000043d0 43452031 005f494f 5f444f4e 545f434c CE 1._IO_DONT_CL
  0x000043e0 4f534520 30313030 30303000 5f5f474c OSE 0100000.__GL
  0x000043f0 4942435f 5553455f 4945435f 36303535 IBC_USE_IEC_6055
  0x00004400 395f4246 505f4558 54005f5f 53495a45 9_BFP_EXT.__SIZE
  0x00004410 5f4d4158 5f5f2030 78666666 66666666 _MAX__ 0xfffffff
  0x00004420 66666666 66666666 66554c00 5f5f5549 fffffffffUL.__UI
  0x00004430 445f545f 54595045 205f5f55 33325f54 D_T_TYPE __U32_T
  0x00004440 59504500 5f5f554c 4f4e4757 4f52445f YPE.__ULONGWORD_
  0x00004450 54595045 20756e73 69676e65 64206c6f TYPE unsigned lo
  0x00004460 6e672069 6e74005f 5f474343 5f41544f ng int.__GCC_ATO
  0x00004470 4d49435f 53484f52 545f4c4f 434b5f46 MIC_SHORT_LOCK_F
  0x00004480 52454520 32005f5f 464c5436 34585f44 REE 2.__FLT64X_D
  0x00004490 4543494d 414c5f44 49475f5f 20323100 ECIMAL_DIG__ 21.
  0x000044a0 5345454b 5f534554 2030005f 5f555345 SEEK_SET 0.__USE
  0x000044b0 5f584f50 454e5f45 5854454e 44454400 _XOPEN_EXTENDED.
  0x000044c0 5f5f494e 545f4641 53543136 5f4d4158 __INT_FAST16_MAX
  0x000044d0 5f5f2030 78376666 66666666 66666666 __ 0x7ffffffffff
  0x000044e0 66666666 664c005f 5f464c54 5f455053 fffffL.__FLT_EPS
  0x000044f0 494c4f4e 5f5f2031 2e313932 30393238 ILON__ 1.1920928
  0x00004500 39353530 37383132 35303030 30303030 9550781250000000
  0x00004510 30303030 30303030 30303030 652d3746 000000000000e-7F
  0x00004520 005f5f46 4c543634 5f4d494e 5f455850 .__FLT64_MIN_EXP
  0x00004530 5f5f2028 2d313032 3129005f 494f535f __ (-1021)._IOS_
  0x00004540 41505045 4e442038 005f5f47 4c494243 APPEND 8.__GLIBC
  0x00004550 5f494e54 45524e41 4c5f5354 41525449 _INTERNAL_STARTI
  0x00004560 4e475f48 45414445 525f494d 504c454d NG_HEADER_IMPLEM
  0x00004570 454e5441 54494f4e 005f5f46 4c545f45 ENTATION.__FLT_E
  0x00004580 56414c5f 4d455448 4f445f54 535f3138 VAL_METHOD_TS_18
  0x00004590 3636315f 335f5f20 30005f5f 44424c5f 661_3__ 0.__DBL_
  0x000045a0 4841535f 494e4649 4e495459 5f5f2031 HAS_INFINITY__ 1
  0x000045b0 005f5f61 74747269 62757465 5f776172 .__attribute_war
  0x000045c0 6e5f756e 75736564 5f726573 756c745f n_unused_result_
  0x000045d0 5f205f5f 61747472 69627574 655f5f20 _ __attribute__ 
  0x000045e0 28285f5f 7761726e 5f756e75 7365645f ((__warn_unused_
  0x000045f0 72657375 6c745f5f 2929005f 5f494e54 result__)).__INT
  0x00004600 36345f43 28632920 63202323 204c005f 64_C(c) c ## L._
  0x00004610 5f454e44 5f444543 4c532000 5f5f464c _END_DECLS .__FL
  0x00004620 545f4841 535f5155 4945545f 4e414e5f T_HAS_QUIET_NAN_
  0x00004630 5f203100 5f5f5349 5a454f46 5f494e54 _ 1.__SIZEOF_INT
  0x00004640 5f5f2034 005f5f43 4c4f434b 49445f54 __ 4.__CLOCKID_T
  0x00004650 5f545950 45205f5f 5333325f 54595045 _TYPE __S32_TYPE
  0x00004660 005f5f49 4e545f46 41535431 365f5459 .__INT_FAST16_TY
  0x00004670 50455f5f 206c6f6e 6720696e 74005f5f PE__ long int.__
  0x00004680 53544443 5f494543 5f353539 5f5f2031 STDC_IEC_559__ 1
  0x00004690 005f5f44 45433132 385f5355 424e4f52 .__DEC128_SUBNOR
  0x000046a0 4d414c5f 4d494e5f 5f20302e 30303030 MAL_MIN__ 0.0000
  0x000046b0 30303030 30303030 30303030 30303030 0000000000000000
  0x000046c0 30303030 30303030 30303030 31452d36 0000000000001E-6
  0x000046d0 31343344 4c005f5f 5553455f 4c415247 143DL.__USE_LARG
  0x000046e0 4546494c 45005f5f 53495a45 4f465f46 EFILE.__SIZEOF_F
  0x000046f0 4c4f4154 38305f5f 20313600 5f5f464c LOAT80__ 16.__FL
  0x00004700 54333258 5f484153 5f515549 45545f4e T32X_HAS_QUIET_N
  0x00004710 414e5f5f 2031005f 5f44424c 5f4d4158 AN__ 1.__DBL_MAX
  0x00004720 5f31305f 4558505f 5f203330 38005f5f _10_EXP__ 308.__
  0x00004730 5553455f 4d495343 2031005f 5f475858 USE_MISC 1.__GXX
  0x00004740 5f414249 5f564552 53494f4e 20313031 _ABI_VERSION 101
  0x00004750 31005f5f 7069635f 5f203200 5f5f4154 1.__pic__ 2.__AT
  0x00004760 4f4d4943 5f52454c 45415345 2033005f OMIC_RELEASE 3._
  0x00004770 5f535345 5f5f2031 005f494f 5f4e4f5f _SSE__ 1._IO_NO_
  0x00004780 52454144 53203400 5f5f474c 4942435f READS 4.__GLIBC_
  0x00004790 5553455f 4945435f 36303535 395f4655 USE_IEC_60559_FU
  0x000047a0 4e43535f 45585420 30006d61 696e005f NCS_EXT 0.main._
  0x000047b0 53495a45 545f2000 5f5f464c 54313238 SIZET_ .__FLT128
  0x000047c0 5f44454e 4f524d5f 4d494e5f 5f20362e _DENORM_MIN__ 6.
  0x000047d0 34373531 37353131 39343338 30323531 4751751194380251
  0x000047e0 31303932 34343338 39353832 32373634 1092443895822764
  0x000047f0 36353565 2d343936 36463132 38005f5f 655e-4966F128.__
  0x00004800 474c4942 435f5553 455f4945 435f3630 GLIBC_USE_IEC_60
  0x00004810 3535395f 4246505f 45585420 30005f5f 559_BFP_EXT 0.__
  0x00004820 73747562 5f726576 6f6b6520 005f5f49 stub_revoke .__I
  0x00004830 4e544d41 585f5459 50455f5f 206c6f6e NTMAX_TYPE__ lon
  0x00004840 6720696e 74005f5f 464c545f 4d494e5f g int.__FLT_MIN_
  0x00004850 4558505f 5f20282d 31323529 005f5f53 EXP__ (-125).__S
  0x00004860 53505f53 54524f4e 475f5f20 33005f5f SP_STRONG__ 3.__
  0x00004870 6572726f 72646563 6c286e61 6d652c6d errordecl(name,m
  0x00004880 73672920 65787465 726e2076 6f696420 sg) extern void 
  0x00004890 6e616d65 2028766f 69642920 5f5f6174 name (void) __at
  0x000048a0 74726962 7574655f 5f28285f 5f657272 tribute__((__err
  0x000048b0 6f725f5f 20286d73 67292929 005f5f44 or__ (msg))).__D
  0x000048c0 45433132 385f4d41 585f5f20 392e3939 EC128_MAX__ 9.99
  0x000048d0 39393939 39393939 39393939 39393939 9999999999999999
  0x000048e0 39393939 39393939 39393939 39393945 999999999999999E
  0x000048f0 36313434 444c005f 5f464c54 5f4d4158 6144DL.__FLT_MAX
  0x00004900 5f455850 5f5f2031 3238005f 5f41544f _EXP__ 128.__ATO
  0x00004910 4d49435f 484c455f 41435155 49524520 MIC_HLE_ACQUIRE 
  0x00004920 36353533 36005f5f 4f464636 345f545f 65536.__OFF64_T_
  0x00004930 54595045 205f5f53 51554144 5f545950 TYPE __SQUAD_TYP
  0x00004940 45005f5f 5553455f 49534f43 3131005f E.__USE_ISOC11._
  0x00004950 5f444556 5f545f54 59504520 5f5f5551 _DEV_T_TYPE __UQ
  0x00004960 5541445f 54595045 005f5f43 50555f4d UAD_TYPE.__CPU_M
  0x00004970 41534b5f 54595045 205f5f53 59534341 ASK_TYPE __SYSCA
  0x00004980 4c4c5f55 4c4f4e47 5f545950 45005f5f LL_ULONG_TYPE.__
  0x00004990 55494e54 5f4c4541 53543332 5f4d4158 UINT_LEAST32_MAX
  0x000049a0 5f5f2030 78666666 66666666 6655005f __ 0xffffffffU._
  0x000049b0 494f5f42 45286578 70722c72 65732920 IO_BE(expr,res) 
  0x000049c0 5f5f6275 696c7469 6e5f6578 70656374 __builtin_expect
  0x000049d0 20282865 78707229 2c207265 7329005f  ((expr), res)._
  0x000049e0 5f41534d 4e414d45 28636e61 6d652920 _ASMNAME(cname) 
  0x000049f0 5f5f4153 4d4e414d 45322028 5f5f5553 __ASMNAME2 (__US
  0x00004a00 45525f4c 4142454c 5f505245 4649585f ER_LABEL_PREFIX_
  0x00004a10 5f2c2063 6e616d65 29005f5f 464c5433 _, cname).__FLT3
  0x00004a20 32585f4d 41585f31 305f4558 505f5f20 2X_MAX_10_EXP__ 
  0x00004a30 33303800 5f5f616d 64363420 31005f5f 308.__amd64 1.__
  0x00004a40 574f5244 53495a45 20363400 5f5f756e WORDSIZE 64.__un
  0x00004a50 69782031 005f6368 61696e00 5f5f464c ix 1._chain.__FL
  0x00004a60 5436345f 44454e4f 524d5f4d 494e5f5f T64_DENORM_MIN__
  0x00004a70 20342e39 34303635 36343538 34313234  4.9406564584124
  0x00004a80 36353434 31373635 36383739 32383638 6544176568792868
  0x00004a90 32323133 3732652d 33323446 3634004c 221372e-324F64.L
  0x00004aa0 5f637465 726d6964 2039005f 5f505452 _ctermid 9.__PTR
  0x00004ab0 44494646 5f545950 455f5f20 6c6f6e67 DIFF_TYPE__ long
  0x00004ac0 20696e74 005f5f46 4c543332 5f4d4158  int.__FLT32_MAX
  0x00004ad0 5f31305f 4558505f 5f203338 005f5f57 _10_EXP__ 38.__W
  0x00004ae0 4f524453 495a455f 54494d45 36345f43 ORDSIZE_TIME64_C
  0x00004af0 4f4d5041 54333220 31005f5f 464c5431 OMPAT32 1.__FLT1
  0x00004b00 32385f44 4543494d 414c5f44 49475f5f 28_DECIMAL_DIG__
  0x00004b10 20333600 5f5f5054 52444946 465f5749  36.__PTRDIFF_WI
  0x00004b20 4454485f 5f203634 005f5f49 4e545f4c DTH__ 64.__INT_L
  0x00004b30 45415354 33325f4d 41585f5f 20307837 EAST32_MAX__ 0x7
  0x00004b40 66666666 66666600 5f5f5549 4e545f46 fffffff.__UINT_F
  0x00004b50 41535436 345f5459 50455f5f 206c6f6e AST64_TYPE__ lon
  0x00004b60 6720756e 7369676e 65642069 6e74005f g unsigned int._
  0x00004b70 5f737475 625f7373 746b2000 5f494f5f _stub_sstk ._IO_
  0x00004b80 66706f73 36345f74 205f475f 66706f73 fpos64_t _G_fpos
  0x00004b90 36345f74 005f5f54 48524f57 4e4c205f 64_t.__THROWNL _
  0x00004ba0 5f617474 72696275 74655f5f 2028285f _attribute__ ((_
  0x00004bb0 5f6e6f74 68726f77 5f5f2929 005f5f4c _nothrow__)).__L
  0x00004bc0 44424c5f 4d41585f 31305f45 58505f5f DBL_MAX_10_EXP__
  0x00004bd0 20343933 32005f5f 44454336 345f4d49  4932.__DEC64_MI
  0x00004be0 4e5f5f20 31452d33 38334444 005f5f46 N__ 1E-383DD.__F
  0x00004bf0 4c543332 5f4d4158 5f5f2033 2e343032 LT32_MAX__ 3.402
  0x00004c00 38323334 36363338 35323838 35393831 8234663852885981
  0x00004c10 31373034 31383334 38343531 36393235 1704183484516925
  0x00004c20 652b3338 46333200 5f5f4442 4c5f4550 e+38F32.__DBL_EP
  0x00004c30 53494c4f 4e5f5f20 2828646f 75626c65 SILON__ ((double
  0x00004c40 29322e32 32303434 36303439 32353033 )2.2204460492503
  0x00004c50 31333038 30383437 32363333 33363138 1308084726333618
  0x00004c60 31363430 3632652d 31364c29 005f6375 164062e-16L)._cu
  0x00004c70 725f636f 6c756d6e 005f5f50 5241474d r_column.__PRAGM
  0x00004c80 415f5245 44454649 4e455f45 58544e41 A_REDEFINE_EXTNA
  0x00004c90 4d452031 005f5f53 49475f41 544f4d49 ME 1.__SIG_ATOMI
  0x00004ca0 435f5459 50455f5f 20696e74 005f5f46 C_TYPE__ int.__F
  0x00004cb0 4c543634 585f4445 4e4f524d 5f4d494e LT64X_DENORM_MIN
  0x00004cc0 5f5f2033 2e363435 31393935 33313838 __ 3.64519953188
  0x00004cd0 32343734 36303235 32383430 35393333 2474602528405933
  0x00004ce0 36313934 31393832 652d3439 35314636 61941982e-4951F6
  0x00004cf0 3478005f 5f555345 5f504f53 4958005f 4x.__USE_POSIX._
  0x00004d00 5f464c54 3132385f 4841535f 44454e4f _FLT128_HAS_DENO
  0x00004d10 524d5f5f 2031005f 494f5f43 55525245 RM__ 1._IO_CURRE
  0x00004d20 4e544c59 5f505554 54494e47 20307838 NTLY_PUTTING 0x8
  0x00004d30 3030005f 5f44424c 5f444543 494d414c 00.__DBL_DECIMAL
  0x00004d40 5f444947 5f5f2031 37005f5f 4c44424c _DIG__ 17.__LDBL
  0x00004d50 5f484153 5f44454e 4f524d5f 5f203100 _HAS_DENORM__ 1.
  0x00004d60 5f756e75 73656432 005f494f 5f627566 _unused2._IO_buf
  0x00004d70 5f626173 65005f5f 73747562 5f6c6368 _base.__stub_lch
  0x00004d80 6d6f6420 005f5f46 4c543634 5f4d414e mod .__FLT64_MAN
  0x00004d90 545f4449 475f5f20 3533005f 5f444543 T_DIG__ 53.__DEC
  0x00004da0 36345f4d 414e545f 4449475f 5f203136 64_MANT_DIG__ 16
  0x00004db0 005f5f46 4c545f48 41535f44 454e4f52 .__FLT_HAS_DENOR
  0x00004dc0 4d5f5f20 31005f5f 44454349 4d414c5f M__ 1.__DECIMAL_
  0x00004dd0 4449475f 5f203231 00                DIG__ 21.

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_import - offset : 0x10f
 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: if_then.c
 DW_MACRO_start_file - lineno: 31 filenum: 7 filename: /usr/x86_64-linux-gnu/include/stdc-predef.h
 DW_MACRO_import - offset : 0x917
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 1 filenum: 5 filename: /usr/x86_64-linux-gnu/include/stdio.h
 DW_MACRO_import - offset : 0x939
 DW_MACRO_start_file - lineno: 27 filenum: 8 filename: /usr/x86_64-linux-gnu/include/bits/libc-header-start.h
 DW_MACRO_undef_strp - lineno : 31 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION
 DW_MACRO_start_file - lineno: 33 filenum: 9 filename: /usr/x86_64-linux-gnu/include/features.h
 DW_MACRO_import - offset : 0x949
 DW_MACRO_start_file - lineno: 424 filenum: 10 filename: /usr/x86_64-linux-gnu/include/sys/cdefs.h
 DW_MACRO_import - offset : 0xae7
 DW_MACRO_start_file - lineno: 427 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 428 filenum: 12 filename: /usr/x86_64-linux-gnu/include/bits/long-double.h
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xc65
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 448 filenum: 13 filename: /usr/x86_64-linux-gnu/include/gnu/stubs.h
 DW_MACRO_start_file - lineno: 10 filenum: 14 filename: /usr/x86_64-linux-gnu/include/gnu/stubs-64.h
 DW_MACRO_import - offset : 0xcaf
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd07
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xd3b
 DW_MACRO_start_file - lineno: 33 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xd4b
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 35 filenum: 3 filename: /usr/x86_64-linux-gnu/include/bits/types.h
 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPES_H 1
 DW_MACRO_start_file - lineno: 27 filenum: 11 filename: /usr/x86_64-linux-gnu/include/bits/wordsize.h
 DW_MACRO_import - offset : 0xc4f
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xde2
 DW_MACRO_start_file - lineno: 130 filenum: 15 filename: /usr/x86_64-linux-gnu/include/bits/typesizes.h
 DW_MACRO_import - offset : 0xe40
 DW_MACRO_end_file
 DW_MACRO_undef_strp - lineno : 204 macro : __STD_TYPE
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 36 filenum: 16 filename: /usr/x86_64-linux-gnu/include/bits/types/__FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : ____FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 37 filenum: 17 filename: /usr/x86_64-linux-gnu/include/bits/types/FILE.h
 DW_MACRO_define_strp - lineno : 2 macro : __FILE_defined 1
 DW_MACRO_end_file
 DW_MACRO_define_strp - lineno : 39 macro : _STDIO_USES_IOSTREAM 
 DW_MACRO_start_file - lineno: 41 filenum: 4 filename: /usr/x86_64-linux-gnu/include/bits/libio.h
 DW_MACRO_define_strp - lineno : 29 macro : _BITS_LIBIO_H 1
 DW_MACRO_start_file - lineno: 35 filenum: 18 filename: /usr/x86_64-linux-gnu/include/bits/_G_config.h
 DW_MACRO_import - offset : 0xf2e
 DW_MACRO_start_file - lineno: 19 filenum: 2 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h
 DW_MACRO_import - offset : 0xf44
 DW_MACRO_end_file
 DW_MACRO_start_file - lineno: 21 filenum: 19 filename: /usr/x86_64-linux-gnu/include/bits/types/__mbstate_t.h
 DW_MACRO_define_strp - lineno : 2 macro : ____mbstate_t_defined 1
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf64
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xf8c
 DW_MACRO_start_file - lineno: 53 filenum: 20 filename: /usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h
 DW_MACRO_import - offset : 0xfe4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0xff4
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x11c0
 DW_MACRO_start_file - lineno: 131 filenum: 21 filename: /usr/x86_64-linux-gnu/include/bits/stdio_lim.h
 DW_MACRO_import - offset : 0x1206
 DW_MACRO_end_file
 DW_MACRO_import - offset : 0x1234
 DW_MACRO_start_file - lineno: 781 filenum: 6 filename: /usr/x86_64-linux-gnu/include/bits/sys_errlist.h
 DW_MACRO_end_file
 DW_MACRO_end_file
 DW_MACRO_end_file

  Offset:                      0x10f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 0 macro : __STDC__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_VERSION__ 201112L
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_16__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_UTF_32__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __STDC_HOSTED__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_MINOR__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_PATCHLEVEL__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __VERSION__ "7.3.0"
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELAXED 0
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_SEQ_CST 5
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQUIRE 2
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_RELEASE 3
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_ACQ_REL 4
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_CONSUME 1
 DW_MACRO_define_strp - lineno : 0 macro : __pic__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIC__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __pie__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __PIE__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FINITE_MATH_ONLY__ 0
 DW_MACRO_define_strp - lineno : 0 macro : _LP64 1
 DW_MACRO_define_strp - lineno : 0 macro : __LP64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_LONG__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SHORT__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_DOUBLE__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_LONG_DOUBLE__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_SIZE_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR_BIT__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __BIGGEST_ALIGNMENT__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_LITTLE_ENDIAN__ 1234
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_BIG_ENDIAN__ 4321
 DW_MACRO_define_strp - lineno : 0 macro : __ORDER_PDP_ENDIAN__ 3412
 DW_MACRO_define_strp - lineno : 0 macro : __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_POINTER__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __CHAR32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_TYPE__ short int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_TYPE__ int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_TYPE__ short unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_TYPE__ unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_TYPE__ signed char
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_TYPE__ unsigned char
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_TYPE__ long int
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_TYPE__ long unsigned int
 DW_MACRO_define_strp - lineno : 0 macro : __has_include(STR) __has_include__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __has_include_next(STR) __has_include_next__(STR)
 DW_MACRO_define_strp - lineno : 0 macro : __GXX_ABI_VERSION 1011
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_MAX__ 0x7fffffffffffffffLL
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_MIN__ 0U
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __SCHAR_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __SHRT_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LONG_LONG_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __WCHAR_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __WINT_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __PTRDIFF_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIZE_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINTMAX_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INTMAX_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
 DW_MACRO_define_strp - lineno : 0 macro : __SIG_ATOMIC_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_MAX__ 0x7fff
 DW_MACRO_define_strp - lineno : 0 macro : __INT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST16_WIDTH__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_MAX__ 0x7fffffff
 DW_MACRO_define_strp - lineno : 0 macro : __INT32_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST32_WIDTH__ 32
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT64_C(c) c ## L
 DW_MACRO_define_strp - lineno : 0 macro : __INT_LEAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT8_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST16_MAX__ 0xffff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT16_C(c) c
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST32_MAX__ 0xffffffffU
 DW_MACRO_define_strp - lineno : 0 macro : __UINT32_C(c) c ## U
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_LEAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT64_C(c) c ## UL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_MAX__ 0x7f
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST8_WIDTH__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST16_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST32_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INT_FAST64_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST8_MAX__ 0xff
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST16_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST32_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __UINT_FAST64_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_MAX__ 0x7fffffffffffffffL
 DW_MACRO_define_strp - lineno : 0 macro : __INTPTR_WIDTH__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __UINTPTR_MAX__ 0xffffffffffffffffUL
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_IEC_559_COMPLEX 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EVAL_METHOD_TS_18661_3__ 0
 DW_MACRO_define_strp - lineno : 0 macro : __DEC_EVAL_METHOD__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_RADIX__ 2
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MAX__ 3.40282346638528859811704183484516925e+38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_MIN__ 1.17549435082228750796873653722224568e-38F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MAX__ ((double)1.79769313486231570814527423731704357e+308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_MIN__ ((double)2.22507385850720138309023271733240406e-308L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_EPSILON__ ((double)2.22044604925031308084726333618164062e-16L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_DENORM_MIN__ ((double)4.94065645841246544176568792868221372e-324L)
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __LDBL_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MANT_DIG__ 24
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DIG__ 6
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_EXP__ (-125)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN_10_EXP__ (-37)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_EXP__ 128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX_10_EXP__ 38
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DECIMAL_DIG__ 9
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MAX__ 3.40282346638528859811704183484516925e+38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_MIN__ 1.17549435082228750796873653722224568e-38F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_EPSILON__ 1.19209289550781250000000000000000000e-7F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F32
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MAX__ 1.79769313486231570814527423731704357e+308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_MIN__ 2.22507385850720138309023271733240406e-308F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_EPSILON__ 2.22044604925031308084726333618164062e-16F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MANT_DIG__ 113
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DIG__ 33
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DECIMAL_DIG__ 36
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MAX__ 1.18973149535723176508575932662800702e+4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_MIN__ 3.36210314311209350626267781732175260e-4932F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_EPSILON__ 1.92592994438723585305597794258492732e-34F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_DENORM_MIN__ 6.47517511943802511092443895822764655e-4966F128
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT128_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MANT_DIG__ 53
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DIG__ 15
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_EXP__ (-1021)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN_10_EXP__ (-307)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_EXP__ 1024
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX_10_EXP__ 308
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DECIMAL_DIG__ 17
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT32X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MANT_DIG__ 64
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DIG__ 18
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_EXP__ (-16381)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN_10_EXP__ (-4931)
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_EXP__ 16384
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX_10_EXP__ 4932
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DECIMAL_DIG__ 21
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_DENORM__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_INFINITY__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FLT64X_HAS_QUIET_NAN__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MANT_DIG__ 7
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN_EXP__ (-94)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX_EXP__ 97
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MIN__ 1E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_MAX__ 9.999999E96DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_EPSILON__ 1E-6DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MANT_DIG__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN_EXP__ (-382)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX_EXP__ 385
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MIN__ 1E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_MAX__ 9.999999999999999E384DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_EPSILON__ 1E-15DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MANT_DIG__ 34
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN_EXP__ (-6142)
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX_EXP__ 6145
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MIN__ 1E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_EPSILON__ 1E-33DL
 DW_MACRO_define_strp - lineno : 0 macro : __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
 DW_MACRO_define_strp - lineno : 0 macro : __REGISTER_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __USER_LABEL_PREFIX__ 
 DW_MACRO_define_strp - lineno : 0 macro : __GNUC_STDC_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __NO_INLINE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_BOOL_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_SHORT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_INT_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_LLONG_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ATOMIC_POINTER_LOCK_FREE 2
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_HAVE_DWARF2_CFI_ASM 1
 DW_MACRO_define_strp - lineno : 0 macro : __PRAGMA_REDEFINE_EXTNAME 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSP_STRONG__ 3
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_INT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WCHAR_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_WINT_T__ 4
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_PTRDIFF_T__ 8
 DW_MACRO_define_strp - lineno : 0 macro : __amd64 1
 DW_MACRO_define_strp - lineno : 0 macro : __amd64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64 1
 DW_MACRO_define_strp - lineno : 0 macro : __x86_64__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT80__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __SIZEOF_FLOAT128__ 16
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_ACQUIRE 65536
 DW_MACRO_define_strp - lineno : 0 macro : __ATOMIC_HLE_RELEASE 131072
 DW_MACRO_define_strp - lineno : 0 macro : __GCC_ASM_FLAG_OUTPUTS__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8 1
 DW_MACRO_define_strp - lineno : 0 macro : __k8__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __code_model_small__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __MMX__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __FXSR__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SSE2_MATH__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_FS 1
 DW_MACRO_define_strp - lineno : 0 macro : __SEG_GS 1
 DW_MACRO_define_strp - lineno : 0 macro : __gnu_linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __linux__ 1
 DW_MACRO_define_strp - lineno : 0 macro : linux 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __unix__ 1
 DW_MACRO_define_strp - lineno : 0 macro : unix 1
 DW_MACRO_define_strp - lineno : 0 macro : __ELF__ 1
 DW_MACRO_define_strp - lineno : 0 macro : __DECIMAL_BID_FORMAT__ 1

  Offset:                      0x917
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _STDC_PREDEF_H 1
 DW_MACRO_define_strp - lineno : 38 macro : __STDC_IEC_559__ 1
 DW_MACRO_define_strp - lineno : 46 macro : __STDC_IEC_559_COMPLEX__ 1
 DW_MACRO_define_strp - lineno : 58 macro : __STDC_ISO_10646__ 201706L
 DW_MACRO_define_strp - lineno : 61 macro : __STDC_NO_THREADS__ 1

  Offset:                      0x939
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _STDIO_H 1
 DW_MACRO_define_strp - lineno : 26 macro : __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION 

  Offset:                      0x949
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _FEATURES_H 1
 DW_MACRO_undef_strp - lineno : 119 macro : __USE_ISOC11
 DW_MACRO_undef_strp - lineno : 120 macro : __USE_ISOC99
 DW_MACRO_undef_strp - lineno : 121 macro : __USE_ISOC95
 DW_MACRO_undef_strp - lineno : 122 macro : __USE_ISOCXX11
 DW_MACRO_undef_strp - lineno : 123 macro : __USE_POSIX
 DW_MACRO_undef_strp - lineno : 124 macro : __USE_POSIX2
 DW_MACRO_undef_strp - lineno : 125 macro : __USE_POSIX199309
 DW_MACRO_undef_strp - lineno : 126 macro : __USE_POSIX199506
 DW_MACRO_undef_strp - lineno : 127 macro : __USE_XOPEN
 DW_MACRO_undef_strp - lineno : 128 macro : __USE_XOPEN_EXTENDED
 DW_MACRO_undef_strp - lineno : 129 macro : __USE_UNIX98
 DW_MACRO_undef_strp - lineno : 130 macro : __USE_XOPEN2K
 DW_MACRO_undef_strp - lineno : 131 macro : __USE_XOPEN2KXSI
 DW_MACRO_undef_strp - lineno : 132 macro : __USE_XOPEN2K8
 DW_MACRO_undef_strp - lineno : 133 macro : __USE_XOPEN2K8XSI
 DW_MACRO_undef_strp - lineno : 134 macro : __USE_LARGEFILE
 DW_MACRO_undef_strp - lineno : 135 macro : __USE_LARGEFILE64
 DW_MACRO_undef_strp - lineno : 136 macro : __USE_FILE_OFFSET64
 DW_MACRO_undef_strp - lineno : 137 macro : __USE_MISC
 DW_MACRO_undef_strp - lineno : 138 macro : __USE_ATFILE
 DW_MACRO_undef_strp - lineno : 139 macro : __USE_GNU
 DW_MACRO_undef_strp - lineno : 140 macro : __USE_FORTIFY_LEVEL
 DW_MACRO_undef_strp - lineno : 141 macro : __KERNEL_STRICT_NAMES
 DW_MACRO_undef_strp - lineno : 142 macro : __GLIBC_USE_DEPRECATED_GETS
 DW_MACRO_define_strp - lineno : 147 macro : __KERNEL_STRICT_NAMES 
 DW_MACRO_define_strp - lineno : 158 macro : __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
 DW_MACRO_define_strp - lineno : 172 macro : __glibc_clang_prereq(maj,min) 0
 DW_MACRO_define_strp - lineno : 176 macro : __GLIBC_USE(F) __GLIBC_USE_ ## F
 DW_MACRO_undef_strp - lineno : 220 macro : _DEFAULT_SOURCE
 DW_MACRO_define_strp - lineno : 221 macro : _DEFAULT_SOURCE 1
 DW_MACRO_define_strp - lineno : 227 macro : __USE_ISOC11 1
 DW_MACRO_define_strp - lineno : 233 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 239 macro : __USE_ISOC95 1
 DW_MACRO_define_strp - lineno : 260 macro : __USE_POSIX_IMPLICITLY 1
 DW_MACRO_undef_strp - lineno : 262 macro : _POSIX_SOURCE
 DW_MACRO_define_strp - lineno : 263 macro : _POSIX_SOURCE 1
 DW_MACRO_undef_strp - lineno : 264 macro : _POSIX_C_SOURCE
 DW_MACRO_define_strp - lineno : 265 macro : _POSIX_C_SOURCE 200809L
 DW_MACRO_define_strp - lineno : 300 macro : __USE_POSIX 1
 DW_MACRO_define_strp - lineno : 304 macro : __USE_POSIX2 1
 DW_MACRO_define_strp - lineno : 308 macro : __USE_POSIX199309 1
 DW_MACRO_define_strp - lineno : 312 macro : __USE_POSIX199506 1
 DW_MACRO_define_strp - lineno : 316 macro : __USE_XOPEN2K 1
 DW_MACRO_undef_strp - lineno : 317 macro : __USE_ISOC95
 DW_MACRO_define_strp - lineno : 318 macro : __USE_ISOC95 1
 DW_MACRO_undef_strp - lineno : 319 macro : __USE_ISOC99
 DW_MACRO_define_strp - lineno : 320 macro : __USE_ISOC99 1
 DW_MACRO_define_strp - lineno : 324 macro : __USE_XOPEN2K8 1
 DW_MACRO_undef_strp - lineno : 325 macro : _ATFILE_SOURCE
 DW_MACRO_define_strp - lineno : 326 macro : _ATFILE_SOURCE 1
 DW_MACRO_define_strp - lineno : 368 macro : __USE_MISC 1
 DW_MACRO_define_strp - lineno : 372 macro : __USE_ATFILE 1
 DW_MACRO_define_strp - lineno : 387 macro : __USE_FORTIFY_LEVEL 0
 DW_MACRO_define_strp - lineno : 395 macro : __GLIBC_USE_DEPRECATED_GETS 0
 DW_MACRO_undef_strp - lineno : 410 macro : __GNU_LIBRARY__
 DW_MACRO_define_strp - lineno : 411 macro : __GNU_LIBRARY__ 6
 DW_MACRO_define_strp - lineno : 415 macro : __GLIBC__ 2
 DW_MACRO_define_strp - lineno : 416 macro : __GLIBC_MINOR__ 27
 DW_MACRO_define_strp - lineno : 418 macro : __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))

  Offset:                      0xae7
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _SYS_CDEFS_H 1
 DW_MACRO_undef - lineno : 34 macro : __P
 DW_MACRO_undef_strp - lineno : 35 macro : __PMT
 DW_MACRO_define_strp - lineno : 42 macro : __LEAF , __leaf__
 DW_MACRO_define_strp - lineno : 43 macro : __LEAF_ATTR __attribute__ ((__leaf__))
 DW_MACRO_define_strp - lineno : 55 macro : __THROW __attribute__ ((__nothrow__ __LEAF))
 DW_MACRO_define_strp - lineno : 56 macro : __THROWNL __attribute__ ((__nothrow__))
 DW_MACRO_define_strp - lineno : 57 macro : __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct
 DW_MACRO_define_strp - lineno : 58 macro : __NTHNL(fct) __attribute__ ((__nothrow__)) fct
 DW_MACRO_define_strp - lineno : 89 macro : __glibc_clang_has_extension(ext) 0
 DW_MACRO_define_strp - lineno : 94 macro : __P(args) args
 DW_MACRO_define_strp - lineno : 95 macro : __PMT(args) args
 DW_MACRO_define_strp - lineno : 100 macro : __CONCAT(x,y) x ## y
 DW_MACRO_define_strp - lineno : 101 macro : __STRING(x) #x
 DW_MACRO_define_strp - lineno : 104 macro : __ptr_t void *
 DW_MACRO_define_strp - lineno : 112 macro : __BEGIN_DECLS 
 DW_MACRO_define_strp - lineno : 113 macro : __END_DECLS 
 DW_MACRO_define_strp - lineno : 118 macro : __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
 DW_MACRO_define_strp - lineno : 119 macro : __bos0(ptr) __builtin_object_size (ptr, 0)
 DW_MACRO_define_strp - lineno : 122 macro : __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 124 macro : __warnattr(msg) __attribute__((__warning__ (msg)))
 DW_MACRO_define_strp - lineno : 125 macro : __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))
 DW_MACRO_define_strp - lineno : 138 macro : __flexarr []
 DW_MACRO_define_strp - lineno : 139 macro : __glibc_c99_flexarr_available 1
 DW_MACRO_define_strp - lineno : 169 macro : __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))
 DW_MACRO_define_strp - lineno : 176 macro : __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW
 DW_MACRO_define_strp - lineno : 178 macro : __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL
 DW_MACRO_define_strp - lineno : 181 macro : __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)
 DW_MACRO_define_strp - lineno : 182 macro : __ASMNAME2(prefix,cname) __STRING (prefix) cname
 DW_MACRO_define_strp - lineno : 203 macro : __attribute_malloc__ __attribute__ ((__malloc__))
 DW_MACRO_define_strp - lineno : 211 macro : __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))
 DW_MACRO_define_strp - lineno : 221 macro : __attribute_pure__ __attribute__ ((__pure__))
 DW_MACRO_define_strp - lineno : 228 macro : __attribute_const__ __attribute__ ((__const__))
 DW_MACRO_define_strp - lineno : 237 macro : __attribute_used__ __attribute__ ((__used__))
 DW_MACRO_define_strp - lineno : 238 macro : __attribute_noinline__ __attribute__ ((__noinline__))
 DW_MACRO_define_strp - lineno : 246 macro : __attribute_deprecated__ __attribute__ ((__deprecated__))
 DW_MACRO_define_strp - lineno : 256 macro : __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))
 DW_MACRO_define_strp - lineno : 269 macro : __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))
 DW_MACRO_define_strp - lineno : 279 macro : __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))
 DW_MACRO_define_strp - lineno : 288 macro : __nonnull(params) __attribute__ ((__nonnull__ params))
 DW_MACRO_define_strp - lineno : 296 macro : __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
 DW_MACRO_define_strp - lineno : 305 macro : __wur 
 DW_MACRO_undef_strp - lineno : 313 macro : __always_inline
 DW_MACRO_define_strp - lineno : 314 macro : __always_inline __inline __attribute__ ((__always_inline__))
 DW_MACRO_define_strp - lineno : 323 macro : __attribute_artificial__ __attribute__ ((__artificial__))
 DW_MACRO_define_strp - lineno : 341 macro : __extern_inline extern __inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 342 macro : __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
 DW_MACRO_define_strp - lineno : 351 macro : __fortify_function __extern_always_inline __attribute_artificial__
 DW_MACRO_define_strp - lineno : 357 macro : __va_arg_pack() __builtin_va_arg_pack ()
 DW_MACRO_define_strp - lineno : 358 macro : __va_arg_pack_len() __builtin_va_arg_pack_len ()
 DW_MACRO_define_strp - lineno : 378 macro : __restrict_arr __restrict
 DW_MACRO_define_strp - lineno : 393 macro : __glibc_unlikely(cond) __builtin_expect ((cond), 0)
 DW_MACRO_define_strp - lineno : 394 macro : __glibc_likely(cond) __builtin_expect ((cond), 1)
 DW_MACRO_define_strp - lineno : 416 macro : __attribute_nonstring__ 

  Offset:                      0xc4f
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 4 macro : __WORDSIZE 64
 DW_MACRO_define_strp - lineno : 12 macro : __WORDSIZE_TIME64_COMPAT32 1
 DW_MACRO_define_strp - lineno : 14 macro : __SYSCALL_WORDSIZE 64

  Offset:                      0xc65
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 450 macro : __LDBL_REDIR1(name,proto,alias) name proto
 DW_MACRO_define_strp - lineno : 451 macro : __LDBL_REDIR(name,proto) name proto
 DW_MACRO_define_strp - lineno : 452 macro : __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW
 DW_MACRO_define_strp - lineno : 453 macro : __LDBL_REDIR_NTH(name,proto) name proto __THROW
 DW_MACRO_define_strp - lineno : 454 macro : __LDBL_REDIR_DECL(name) 
 DW_MACRO_define_strp - lineno : 456 macro : __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)
 DW_MACRO_define_strp - lineno : 457 macro : __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)
 DW_MACRO_define_strp - lineno : 468 macro : __glibc_macro_warning1(message) _Pragma (#message)
 DW_MACRO_define_strp - lineno : 469 macro : __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)
 DW_MACRO_define_strp - lineno : 487 macro : __HAVE_GENERIC_SELECTION 1

  Offset:                      0xcaf
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 10 macro : __stub___compat_bdflush 
 DW_MACRO_define_strp - lineno : 11 macro : __stub_chflags 
 DW_MACRO_define_strp - lineno : 12 macro : __stub_fattach 
 DW_MACRO_define_strp - lineno : 13 macro : __stub_fchflags 
 DW_MACRO_define_strp - lineno : 14 macro : __stub_fdetach 
 DW_MACRO_define_strp - lineno : 15 macro : __stub_getmsg 
 DW_MACRO_define_strp - lineno : 16 macro : __stub_gtty 
 DW_MACRO_define_strp - lineno : 17 macro : __stub_lchmod 
 DW_MACRO_define_strp - lineno : 18 macro : __stub_putmsg 
 DW_MACRO_define_strp - lineno : 19 macro : __stub_revoke 
 DW_MACRO_define_strp - lineno : 20 macro : __stub_setlogin 
 DW_MACRO_define_strp - lineno : 21 macro : __stub_sigreturn 
 DW_MACRO_define_strp - lineno : 22 macro : __stub_sstk 
 DW_MACRO_define_strp - lineno : 23 macro : __stub_stty 

  Offset:                      0xd07
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 37 macro : __GLIBC_USE_LIB_EXT2
 DW_MACRO_define_strp - lineno : 42 macro : __GLIBC_USE_LIB_EXT2 0
 DW_MACRO_undef_strp - lineno : 47 macro : __GLIBC_USE_IEC_60559_BFP_EXT
 DW_MACRO_define_strp - lineno : 51 macro : __GLIBC_USE_IEC_60559_BFP_EXT 0
 DW_MACRO_undef_strp - lineno : 56 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT
 DW_MACRO_define_strp - lineno : 60 macro : __GLIBC_USE_IEC_60559_FUNCS_EXT 0
 DW_MACRO_undef_strp - lineno : 65 macro : __GLIBC_USE_IEC_60559_TYPES_EXT
 DW_MACRO_define_strp - lineno : 69 macro : __GLIBC_USE_IEC_60559_TYPES_EXT 0

  Offset:                      0xd3b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 31 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 32 macro : __need_NULL 

  Offset:                      0xd4b
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 187 macro : __size_t__ 
 DW_MACRO_define_strp - lineno : 188 macro : __SIZE_T__ 
 DW_MACRO_define_strp - lineno : 189 macro : _SIZE_T 
 DW_MACRO_define_strp - lineno : 190 macro : _SYS_SIZE_T_H 
 DW_MACRO_define_strp - lineno : 191 macro : _T_SIZE_ 
 DW_MACRO_define_strp - lineno : 192 macro : _T_SIZE 
 DW_MACRO_define_strp - lineno : 193 macro : __SIZE_T 
 DW_MACRO_define_strp - lineno : 194 macro : _SIZE_T_ 
 DW_MACRO_define_strp - lineno : 195 macro : _BSD_SIZE_T_ 
 DW_MACRO_define_strp - lineno : 196 macro : _SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 197 macro : _SIZE_T_DEFINED 
 DW_MACRO_define_strp - lineno : 198 macro : _BSD_SIZE_T_DEFINED_ 
 DW_MACRO_define_strp - lineno : 199 macro : _SIZE_T_DECLARED 
 DW_MACRO_define_strp - lineno : 200 macro : ___int_size_t_h 
 DW_MACRO_define_strp - lineno : 201 macro : _GCC_SIZE_T 
 DW_MACRO_define_strp - lineno : 202 macro : _SIZET_ 
 DW_MACRO_define_strp - lineno : 210 macro : __size_t 
 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xde2
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 98 macro : __S16_TYPE short int
 DW_MACRO_define_strp - lineno : 99 macro : __U16_TYPE unsigned short int
 DW_MACRO_define_strp - lineno : 100 macro : __S32_TYPE int
 DW_MACRO_define_strp - lineno : 101 macro : __U32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 102 macro : __SLONGWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 103 macro : __ULONGWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 117 macro : __SQUAD_TYPE long int
 DW_MACRO_define_strp - lineno : 118 macro : __UQUAD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 119 macro : __SWORD_TYPE long int
 DW_MACRO_define_strp - lineno : 120 macro : __UWORD_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 121 macro : __SLONG32_TYPE int
 DW_MACRO_define_strp - lineno : 122 macro : __ULONG32_TYPE unsigned int
 DW_MACRO_define_strp - lineno : 123 macro : __S64_TYPE long int
 DW_MACRO_define_strp - lineno : 124 macro : __U64_TYPE unsigned long int
 DW_MACRO_define_strp - lineno : 126 macro : __STD_TYPE typedef

  Offset:                      0xe40
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 24 macro : _BITS_TYPESIZES_H 1
 DW_MACRO_define_strp - lineno : 34 macro : __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 35 macro : __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
 DW_MACRO_define_strp - lineno : 38 macro : __DEV_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 39 macro : __UID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 40 macro : __GID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 41 macro : __INO_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 42 macro : __INO64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 43 macro : __MODE_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 45 macro : __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 46 macro : __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 51 macro : __OFF_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 52 macro : __OFF64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 53 macro : __PID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 54 macro : __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 55 macro : __RLIM64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 56 macro : __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 57 macro : __BLKCNT64_T_TYPE __SQUAD_TYPE
 DW_MACRO_define_strp - lineno : 58 macro : __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 59 macro : __FSBLKCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 60 macro : __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 61 macro : __FSFILCNT64_T_TYPE __UQUAD_TYPE
 DW_MACRO_define_strp - lineno : 62 macro : __ID_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 63 macro : __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 64 macro : __TIME_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 65 macro : __USECONDS_T_TYPE __U32_TYPE
 DW_MACRO_define_strp - lineno : 66 macro : __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 67 macro : __DADDR_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 68 macro : __KEY_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 69 macro : __CLOCKID_T_TYPE __S32_TYPE
 DW_MACRO_define_strp - lineno : 70 macro : __TIMER_T_TYPE void *
 DW_MACRO_define_strp - lineno : 71 macro : __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
 DW_MACRO_define_strp - lineno : 72 macro : __FSID_T_TYPE struct { int __val[2]; }
 DW_MACRO_define_strp - lineno : 73 macro : __SSIZE_T_TYPE __SWORD_TYPE
 DW_MACRO_define_strp - lineno : 74 macro : __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
 DW_MACRO_define_strp - lineno : 80 macro : __OFF_T_MATCHES_OFF64_T 1
 DW_MACRO_define_strp - lineno : 83 macro : __INO_T_MATCHES_INO64_T 1
 DW_MACRO_define_strp - lineno : 86 macro : __RLIM_T_MATCHES_RLIM64_T 1
 DW_MACRO_define_strp - lineno : 92 macro : __FD_SETSIZE 1024

  Offset:                      0xf2e
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 5 macro : _BITS_G_CONFIG_H 1
 DW_MACRO_define_strp - lineno : 14 macro : __need_size_t 
 DW_MACRO_define_strp - lineno : 18 macro : __need_NULL 

  Offset:                      0xf44
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 238 macro : __need_size_t
 DW_MACRO_undef_strp - lineno : 401 macro : NULL
 DW_MACRO_define_strp - lineno : 406 macro : NULL ((void *)0)
 DW_MACRO_undef_strp - lineno : 412 macro : __need_NULL

  Offset:                      0xf64
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 51 macro : _G_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 53 macro : _G_HAVE_MMAP 1
 DW_MACRO_define_strp - lineno : 54 macro : _G_HAVE_MREMAP 1
 DW_MACRO_define_strp - lineno : 56 macro : _G_IO_IO_FILE_VERSION 0x20001
 DW_MACRO_define_strp - lineno : 59 macro : _G_HAVE_ST_BLKSIZE defined (_STATBUF_ST_BLKSIZE)
 DW_MACRO_define_strp - lineno : 61 macro : _G_BUFSIZ 8192

  Offset:                      0xf8c
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 37 macro : _IO_fpos_t _G_fpos_t
 DW_MACRO_define_strp - lineno : 38 macro : _IO_fpos64_t _G_fpos64_t
 DW_MACRO_define_strp - lineno : 39 macro : _IO_size_t size_t
 DW_MACRO_define_strp - lineno : 40 macro : _IO_ssize_t __ssize_t
 DW_MACRO_define_strp - lineno : 41 macro : _IO_off_t __off_t
 DW_MACRO_define_strp - lineno : 42 macro : _IO_off64_t __off64_t
 DW_MACRO_define_strp - lineno : 43 macro : _IO_pid_t __pid_t
 DW_MACRO_define_strp - lineno : 44 macro : _IO_uid_t __uid_t
 DW_MACRO_define_strp - lineno : 45 macro : _IO_iconv_t _G_iconv_t
 DW_MACRO_define_strp - lineno : 46 macro : _IO_HAVE_ST_BLKSIZE _G_HAVE_ST_BLKSIZE
 DW_MACRO_define_strp - lineno : 47 macro : _IO_BUFSIZ _G_BUFSIZ
 DW_MACRO_define_strp - lineno : 48 macro : _IO_va_list _G_va_list
 DW_MACRO_define_strp - lineno : 49 macro : _IO_wint_t wint_t
 DW_MACRO_define_strp - lineno : 52 macro : __need___va_list 

  Offset:                      0xfe4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 34 macro : __need___va_list
 DW_MACRO_define_strp - lineno : 39 macro : __GNUC_VA_LIST 

  Offset:                      0xff4
  Version:                     4
  Offset size:                 4

 DW_MACRO_undef_strp - lineno : 55 macro : _IO_va_list
 DW_MACRO_define_strp - lineno : 56 macro : _IO_va_list __gnuc_va_list
 DW_MACRO_define_strp - lineno : 63 macro : _IO_UNIFIED_JUMPTABLES 1
 DW_MACRO_define_strp - lineno : 66 macro : EOF (-1)
 DW_MACRO_define_strp - lineno : 81 macro : _IOS_INPUT 1
 DW_MACRO_define_strp - lineno : 82 macro : _IOS_OUTPUT 2
 DW_MACRO_define_strp - lineno : 83 macro : _IOS_ATEND 4
 DW_MACRO_define_strp - lineno : 84 macro : _IOS_APPEND 8
 DW_MACRO_define_strp - lineno : 85 macro : _IOS_TRUNC 16
 DW_MACRO_define_strp - lineno : 86 macro : _IOS_NOCREATE 32
 DW_MACRO_define_strp - lineno : 87 macro : _IOS_NOREPLACE 64
 DW_MACRO_define_strp - lineno : 88 macro : _IOS_BIN 128
 DW_MACRO_define_strp - lineno : 96 macro : _IO_MAGIC 0xFBAD0000
 DW_MACRO_define_strp - lineno : 97 macro : _OLD_STDIO_MAGIC 0xFABC0000
 DW_MACRO_define_strp - lineno : 98 macro : _IO_MAGIC_MASK 0xFFFF0000
 DW_MACRO_define_strp - lineno : 99 macro : _IO_USER_BUF 1
 DW_MACRO_define_strp - lineno : 100 macro : _IO_UNBUFFERED 2
 DW_MACRO_define_strp - lineno : 101 macro : _IO_NO_READS 4
 DW_MACRO_define_strp - lineno : 102 macro : _IO_NO_WRITES 8
 DW_MACRO_define_strp - lineno : 103 macro : _IO_EOF_SEEN 0x10
 DW_MACRO_define_strp - lineno : 104 macro : _IO_ERR_SEEN 0x20
 DW_MACRO_define_strp - lineno : 105 macro : _IO_DELETE_DONT_CLOSE 0x40
 DW_MACRO_define_strp - lineno : 106 macro : _IO_LINKED 0x80
 DW_MACRO_define_strp - lineno : 107 macro : _IO_IN_BACKUP 0x100
 DW_MACRO_define_strp - lineno : 108 macro : _IO_LINE_BUF 0x200
 DW_MACRO_define_strp - lineno : 109 macro : _IO_TIED_PUT_GET 0x400
 DW_MACRO_define_strp - lineno : 110 macro : _IO_CURRENTLY_PUTTING 0x800
 DW_MACRO_define_strp - lineno : 111 macro : _IO_IS_APPENDING 0x1000
 DW_MACRO_define_strp - lineno : 112 macro : _IO_IS_FILEBUF 0x2000
 DW_MACRO_define_strp - lineno : 113 macro : _IO_BAD_SEEN 0x4000
 DW_MACRO_define_strp - lineno : 114 macro : _IO_USER_LOCK 0x8000
 DW_MACRO_define_strp - lineno : 116 macro : _IO_FLAGS2_MMAP 1
 DW_MACRO_define_strp - lineno : 117 macro : _IO_FLAGS2_NOTCANCEL 2
 DW_MACRO_define_strp - lineno : 121 macro : _IO_FLAGS2_USER_WBUF 8
 DW_MACRO_define_strp - lineno : 130 macro : _IO_SKIPWS 01
 DW_MACRO_define_strp - lineno : 131 macro : _IO_LEFT 02
 DW_MACRO_define_strp - lineno : 132 macro : _IO_RIGHT 04
 DW_MACRO_define_strp - lineno : 133 macro : _IO_INTERNAL 010
 DW_MACRO_define_strp - lineno : 134 macro : _IO_DEC 020
 DW_MACRO_define_strp - lineno : 135 macro : _IO_OCT 040
 DW_MACRO_define_strp - lineno : 136 macro : _IO_HEX 0100
 DW_MACRO_define_strp - lineno : 137 macro : _IO_SHOWBASE 0200
 DW_MACRO_define_strp - lineno : 138 macro : _IO_SHOWPOINT 0400
 DW_MACRO_define_strp - lineno : 139 macro : _IO_UPPERCASE 01000
 DW_MACRO_define_strp - lineno : 140 macro : _IO_SHOWPOS 02000
 DW_MACRO_define_strp - lineno : 141 macro : _IO_SCIENTIFIC 04000
 DW_MACRO_define_strp - lineno : 142 macro : _IO_FIXED 010000
 DW_MACRO_define_strp - lineno : 143 macro : _IO_UNITBUF 020000
 DW_MACRO_define_strp - lineno : 144 macro : _IO_STDIO 040000
 DW_MACRO_define_strp - lineno : 145 macro : _IO_DONT_CLOSE 0100000
 DW_MACRO_define_strp - lineno : 146 macro : _IO_BOOLALPHA 0200000
 DW_MACRO_define_strp - lineno : 247 macro : _IO_file_flags _flags
 DW_MACRO_define_strp - lineno : 276 macro : __HAVE_COLUMN 
 DW_MACRO_define_strp - lineno : 323 macro : _IO_stdin ((_IO_FILE*)(&_IO_2_1_stdin_))
 DW_MACRO_define_strp - lineno : 324 macro : _IO_stdout ((_IO_FILE*)(&_IO_2_1_stdout_))
 DW_MACRO_define_strp - lineno : 325 macro : _IO_stderr ((_IO_FILE*)(&_IO_2_1_stderr_))
 DW_MACRO_define_strp - lineno : 399 macro : _IO_BE(expr,res) __builtin_expect ((expr), res)
 DW_MACRO_define_strp - lineno : 404 macro : _IO_getc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
 DW_MACRO_define_strp - lineno : 407 macro : _IO_peekc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)
 DW_MACRO_define_strp - lineno : 411 macro : _IO_putc_unlocked(_ch,_fp) (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
 DW_MACRO_define_strp - lineno : 430 macro : _IO_feof_unlocked(__fp) (((__fp)->_flags & _IO_EOF_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 431 macro : _IO_ferror_unlocked(__fp) (((__fp)->_flags & _IO_ERR_SEEN) != 0)
 DW_MACRO_define_strp - lineno : 441 macro : _IO_PENDING_OUTPUT_COUNT(_fp) ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)
 DW_MACRO_define_strp - lineno : 448 macro : _IO_peekc(_fp) _IO_peekc_unlocked (_fp)
 DW_MACRO_define_strp - lineno : 449 macro : _IO_flockfile(_fp) 
 DW_MACRO_define_strp - lineno : 450 macro : _IO_funlockfile(_fp) 
 DW_MACRO_define_strp - lineno : 451 macro : _IO_ftrylockfile(_fp) 
 DW_MACRO_define_strp - lineno : 453 macro : _IO_cleanup_region_start(_fct,_fp) 
 DW_MACRO_define_strp - lineno : 456 macro : _IO_cleanup_region_end(_Doit) 
 DW_MACRO_define_strp - lineno : 459 macro : _IO_need_lock(_fp) (((_fp)->_flags2 & _IO_FLAGS2_NEED_LOCK) != 0)

  Offset:                      0x11c0
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 47 macro : _VA_LIST_DEFINED 
 DW_MACRO_define_strp - lineno : 61 macro : __off_t_defined 
 DW_MACRO_define_strp - lineno : 72 macro : __ssize_t_defined 
 DW_MACRO_define_strp - lineno : 87 macro : _IOFBF 0
 DW_MACRO_define_strp - lineno : 88 macro : _IOLBF 1
 DW_MACRO_define_strp - lineno : 89 macro : _IONBF 2
 DW_MACRO_define_strp - lineno : 94 macro : BUFSIZ _IO_BUFSIZ
 DW_MACRO_define_strp - lineno : 107 macro : SEEK_SET 0
 DW_MACRO_define_strp - lineno : 108 macro : SEEK_CUR 1
 DW_MACRO_define_strp - lineno : 109 macro : SEEK_END 2
 DW_MACRO_define_strp - lineno : 118 macro : P_tmpdir "/tmp"

  Offset:                      0x1206
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 19 macro : _BITS_STDIO_LIM_H 1
 DW_MACRO_define_strp - lineno : 25 macro : L_tmpnam 20
 DW_MACRO_define_strp - lineno : 26 macro : TMP_MAX 238328
 DW_MACRO_define_strp - lineno : 27 macro : FILENAME_MAX 4096
 DW_MACRO_define_strp - lineno : 30 macro : L_ctermid 9
 DW_MACRO_undef_strp - lineno : 36 macro : FOPEN_MAX
 DW_MACRO_define_strp - lineno : 37 macro : FOPEN_MAX 16

  Offset:                      0x1234
  Version:                     4
  Offset size:                 4

 DW_MACRO_define_strp - lineno : 139 macro : stdin stdin
 DW_MACRO_define_strp - lineno : 140 macro : stdout stdout
 DW_MACRO_define_strp - lineno : 141 macro : stderr stderr
 DW_MACRO_define_strp - lineno : 488 macro : getc(_fp) _IO_getc (_fp)
 DW_MACRO_define_strp - lineno : 528 macro : putc(_ch,_fp) _IO_putc (_ch, _fp)


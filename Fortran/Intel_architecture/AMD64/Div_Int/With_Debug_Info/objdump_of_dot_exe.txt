
div_int_Fortran_AMD64_ggdb3:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       000000c2  0000000000000378  0000000000000378  00000378  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000010  000000000000043a  000000000000043a  0000043a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000040  0000000000000450  0000000000000450  00000450  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  0000000000000490  0000000000000490  00000490  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000030  0000000000000550  0000000000000550  00000550  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000000580  0000000000000580  00000580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000030  00000000000005a0  00000000000005a0  000005a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  00000000000005d0  00000000000005d0  000005d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001e2  00000000000005e0  00000000000005e0  000005e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  00000000000007c4  00000000000007c4  000007c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000002c  00000000000007d0  00000000000007d0  000007d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000044  00000000000007fc  00000000000007fc  000007fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000128  0000000000000840  0000000000000840  00000840  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000200da0  0000000000200da0  00000da0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000200da8  0000000000200da8  00000da8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000200  0000000000200db0  0000000000200db0  00000db0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000050  0000000000200fb0  0000000000200fb0  00000fb0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 24 .comment      0000002a  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 25 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103a  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_info   000000ca  0000000000000000  0000000000000000  0000106a  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_abbrev 00000084  0000000000000000  0000000000000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   00000043  0000000000000000  0000000000000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    0000012a  0000000000000000  0000000000000000  000011fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_macro  0000000c  0000000000000000  0000000000000000  00001325  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000378 l    d  .dynstr	0000000000000000              .dynstr
000000000000043a l    d  .gnu.version	0000000000000000              .gnu.version
0000000000000450 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000490 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000550 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000000580 l    d  .init	0000000000000000              .init
00000000000005a0 l    d  .plt	0000000000000000              .plt
00000000000005d0 l    d  .plt.got	0000000000000000              .plt.got
00000000000005e0 l    d  .text	0000000000000000              .text
00000000000007c4 l    d  .fini	0000000000000000              .fini
00000000000007d0 l    d  .rodata	0000000000000000              .rodata
00000000000007fc l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000000840 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200da0 l    d  .init_array	0000000000000000              .init_array
0000000000200da8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200db0 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fb0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_macro	0000000000000000              .debug_macro
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000610 l     F .text	0000000000000000              deregister_tm_clones
0000000000000650 l     F .text	0000000000000000              register_tm_clones
00000000000006a0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7696
0000000000200da8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000006e0 l     F .text	0000000000000000              frame_dummy
0000000000200da0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              div_int.f08
00000000000006ea l     F .text	000000000000001f              MAIN__
00000000000007e0 l     O .rodata	000000000000001c              options.0.3504
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000964 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
00000000000007fc l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fb0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000200da8 l       .init_array	0000000000000000              __init_array_end
0000000000200da0 l       .init_array	0000000000000000              __init_array_start
0000000000200db0 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000201000  w      .data	0000000000000000              data_start
00000000000007c0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000       F *UND*	0000000000000000              _gfortran_set_args@@GFORTRAN_7
00000000000005e0 g     F .text	000000000000002b              _start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
00000000000007c4 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
00000000000007d0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000000       F *UND*	0000000000000000              _gfortran_set_options@@GFORTRAN_7
0000000000000750 g     F .text	0000000000000065              __libc_csu_init
0000000000201010 g       .bss	0000000000000000              __bss_start
0000000000201018 g       .bss	0000000000000000              _end
0000000000201010 g       .data	0000000000000000              _edata
0000000000000709 g     F .text	000000000000003d              main
0000000000000580 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	ins    BYTE PTR es:[rdi],dx
 23a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 246:	78 2d                	js     275 <_init-0x30b>
 248:	78 38                	js     282 <_init-0x2fe>
 24a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    al,0x0
 256:	00 00                	add    BYTE PTR [rax],al
 258:	10 00                	adc    BYTE PTR [rax],al
 25a:	00 00                	add    BYTE PTR [rax],al
 25c:	01 00                	add    DWORD PTR [rax],eax
 25e:	00 00                	add    BYTE PTR [rax],al
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push rbp
 263:	00 00                	add    BYTE PTR [rax],al
 265:	00 00                	add    BYTE PTR [rax],al
 267:	00 03                	add    BYTE PTR [rbx],al
 269:	00 00                	add    BYTE PTR [rax],al
 26b:	00 02                	add    BYTE PTR [rdx],al
 26d:	00 00                	add    BYTE PTR [rax],al
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    al,0x0
 276:	00 00                	add    BYTE PTR [rax],al
 278:	14 00                	adc    al,0x0
 27a:	00 00                	add    BYTE PTR [rax],al
 27c:	03 00                	add    eax,DWORD PTR [rax]
 27e:	00 00                	add    BYTE PTR [rax],al
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push rbp
 283:	00 1a                	add    BYTE PTR [rdx],bl
 285:	43 c9                	rex.XB leave 
 287:	14 fb                	adc    al,0xfb
 289:	b9 41 13 1b 14       	mov    ecx,0x141b1341
 28e:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 28f:	9e                   	sahf   
 290:	9a                   	(bad)  
 291:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 292:	52                   	push   rdx
 293:	05 a3 8f b8 e6       	add    eax,0xe6b88fa3

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    DWORD PTR [rax],eax
 29a:	00 00                	add    BYTE PTR [rax],al
 29c:	01 00                	add    DWORD PTR [rax],eax
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	6d                   	ins    DWORD PTR es:[rdi],dx
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 2e5:	00 00                	add    BYTE PTR [rax],al
 2e7:	00 2e                	add    BYTE PTR [rsi],ch
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 20                	add    BYTE PTR [rax],ah
	...
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 99 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bl
	...
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 12                	add    BYTE PTR [rdx],dl
 319:	00 00                	add    BYTE PTR [rax],al
 31b:	00 20                	add    BYTE PTR [rax],ah
	...
 32d:	00 00                	add    BYTE PTR [rax],al
 32f:	00 3d 00 00 00 20    	add    BYTE PTR [rip+0x20000000],bh        # 20000335 <_end+0x1fdff31d>
	...
 345:	00 00                	add    BYTE PTR [rax],al
 347:	00 8a 00 00 00 22    	add    BYTE PTR [rdx+0x22000000],cl
	...
 35d:	00 00                	add    BYTE PTR [rax],al
 35f:	00 57 00             	add    BYTE PTR [rdi+0x0],dl
 362:	00 00                	add    BYTE PTR [rax],al
 364:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 37c:	67 66 6f             	outs   dx,WORD PTR ds:[esi]
 37f:	72 74                	jb     3f5 <_init-0x18b>
 381:	72 61                	jb     3e4 <_init-0x19c>
 383:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 384:	2e 73 6f             	cs jae 3f6 <_init-0x18a>
 387:	2e 34 00             	cs xor al,0x0
 38a:	5f                   	pop    rdi
 38b:	49 54                	rex.WB push r12
 38d:	4d 5f                	rex.WRB pop r15
 38f:	64 65 72 65          	fs gs jb 3f8 <_init-0x188>
 393:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 39a:	4d 
 39b:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 39d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 39e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 39f:	65 54                	gs push rsp
 3a1:	61                   	(bad)  
 3a2:	62                   	(bad)  
 3a3:	6c                   	ins    BYTE PTR es:[rdi],dx
 3a4:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
 3a8:	67 6d                	ins    DWORD PTR es:[edi],dx
 3aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3ac:	5f                   	pop    rdi
 3ad:	73 74                	jae    423 <_init-0x15d>
 3af:	61                   	(bad)  
 3b0:	72 74                	jb     426 <_init-0x15a>
 3b2:	5f                   	pop    rdi
 3b3:	5f                   	pop    rdi
 3b4:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 3b7:	54                   	push   rsp
 3b8:	4d 5f                	rex.WRB pop r15
 3ba:	72 65                	jb     421 <_init-0x15f>
 3bc:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 3c3:	4d 
 3c4:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 3c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3c8:	65 54                	gs push rsp
 3ca:	61                   	(bad)  
 3cb:	62                   	(bad)  
 3cc:	6c                   	ins    BYTE PTR es:[rdi],dx
 3cd:	65 00 5f 67          	add    BYTE PTR gs:[rdi+0x67],bl
 3d1:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 3d3:	72 74                	jb     449 <_init-0x137>
 3d5:	72 61                	jb     438 <_init-0x148>
 3d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3d8:	5f                   	pop    rdi
 3d9:	73 65                	jae    440 <_init-0x140>
 3db:	74 5f                	je     43c <_init-0x144>
 3dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3de:	70 74                	jo     454 <_init-0x12c>
 3e0:	69 6f 6e 73 00 5f 67 	imul   ebp,DWORD PTR [rdi+0x6e],0x675f0073
 3e7:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 3e9:	72 74                	jb     45f <_init-0x121>
 3eb:	72 61                	jb     44e <_init-0x132>
 3ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3ee:	5f                   	pop    rdi
 3ef:	73 65                	jae    456 <_init-0x12a>
 3f1:	74 5f                	je     452 <_init-0x12e>
 3f3:	61                   	(bad)  
 3f4:	72 67                	jb     45d <_init-0x123>
 3f6:	73 00                	jae    3f8 <_init-0x188>
 3f8:	6c                   	ins    BYTE PTR es:[rdi],dx
 3f9:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 400:	36 00 5f 5f          	add    BYTE PTR ss:[rdi+0x5f],bl
 404:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 407:	5f                   	pop    rdi
 408:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 40e:	7a 65                	jp     475 <_init-0x10b>
 410:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 413:	6c                   	ins    BYTE PTR es:[rdi],dx
 414:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 41b:	72 74                	jb     491 <_init-0xef>
 41d:	5f                   	pop    rdi
 41e:	6d                   	ins    DWORD PTR es:[rdi],dx
 41f:	61                   	(bad)  
 420:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
 427:	43 5f                	rex.XB pop r15
 429:	32 2e                	xor    ch,BYTE PTR [rsi]
 42b:	32 2e                	xor    ch,BYTE PTR [rsi]
 42d:	35 00 47 46 4f       	xor    eax,0x4f464700
 432:	52                   	push   rdx
 433:	54                   	push   rsp
 434:	52                   	push   rdx
 435:	41                   	rex.B
 436:	4e 5f                	rex.WRX pop rdi
 438:	37                   	(bad)  
	...

Disassembly of section .gnu.version:

000000000000043a <.gnu.version>:
 43a:	00 00                	add    BYTE PTR [rax],al
 43c:	02 00                	add    al,BYTE PTR [rax]
 43e:	00 00                	add    BYTE PTR [rax],al
 440:	03 00                	add    eax,DWORD PTR [rax]
 442:	00 00                	add    BYTE PTR [rax],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	03 00                	add    eax,DWORD PTR [rax]
 448:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000000450 <.gnu.version_r>:
 450:	01 00                	add    DWORD PTR [rax],eax
 452:	01 00                	add    DWORD PTR [rax],eax
 454:	80 00 00             	add    BYTE PTR [rax],0x0
 457:	00 10                	add    BYTE PTR [rax],dl
 459:	00 00                	add    BYTE PTR [rax],al
 45b:	00 20                	add    BYTE PTR [rax],ah
 45d:	00 00                	add    BYTE PTR [rax],al
 45f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 462:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 468:	ab                   	stos   DWORD PTR es:[rdi],eax
 469:	00 00                	add    BYTE PTR [rax],al
 46b:	00 00                	add    BYTE PTR [rax],al
 46d:	00 00                	add    BYTE PTR [rax],al
 46f:	00 01                	add    BYTE PTR [rcx],al
 471:	00 01                	add    BYTE PTR [rcx],al
 473:	00 01                	add    BYTE PTR [rcx],al
 475:	00 00                	add    BYTE PTR [rax],al
 477:	00 10                	add    BYTE PTR [rax],dl
 479:	00 00                	add    BYTE PTR [rax],al
 47b:	00 00                	add    BYTE PTR [rax],al
 47d:	00 00                	add    BYTE PTR [rax],al
 47f:	00 67 f9             	add    BYTE PTR [rdi-0x7],ah
 482:	92                   	xchg   edx,eax
 483:	07                   	(bad)  
 484:	00 00                	add    BYTE PTR [rax],al
 486:	02 00                	add    al,BYTE PTR [rax]
 488:	b7 00                	mov    bh,0x0
 48a:	00 00                	add    BYTE PTR [rax],al
 48c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000490 <.rela.dyn>:
 490:	a0 0d 20 00 00 00 00 	movabs al,ds:0x80000000000200d
 497:	00 08 
 499:	00 00                	add    BYTE PTR [rax],al
 49b:	00 00                	add    BYTE PTR [rax],al
 49d:	00 00                	add    BYTE PTR [rax],al
 49f:	00 e0                	add    al,ah
 4a1:	06                   	(bad)  
 4a2:	00 00                	add    BYTE PTR [rax],al
 4a4:	00 00                	add    BYTE PTR [rax],al
 4a6:	00 00                	add    BYTE PTR [rax],al
 4a8:	a8 0d                	test   al,0xd
 4aa:	20 00                	and    BYTE PTR [rax],al
 4ac:	00 00                	add    BYTE PTR [rax],al
 4ae:	00 00                	add    BYTE PTR [rax],al
 4b0:	08 00                	or     BYTE PTR [rax],al
 4b2:	00 00                	add    BYTE PTR [rax],al
 4b4:	00 00                	add    BYTE PTR [rax],al
 4b6:	00 00                	add    BYTE PTR [rax],al
 4b8:	a0 06 00 00 00 00 00 	movabs al,ds:0x800000000000006
 4bf:	00 08 
 4c1:	10 20                	adc    BYTE PTR [rax],ah
 4c3:	00 00                	add    BYTE PTR [rax],al
 4c5:	00 00                	add    BYTE PTR [rax],al
 4c7:	00 08                	add    BYTE PTR [rax],cl
 4c9:	00 00                	add    BYTE PTR [rax],al
 4cb:	00 00                	add    BYTE PTR [rax],al
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 08                	add    BYTE PTR [rax],cl
 4d1:	10 20                	adc    BYTE PTR [rax],ah
 4d3:	00 00                	add    BYTE PTR [rax],al
 4d5:	00 00                	add    BYTE PTR [rax],al
 4d7:	00 d8                	add    al,bl
 4d9:	0f 20 00             	mov    rax,cr0
 4dc:	00 00                	add    BYTE PTR [rax],al
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	06                   	(bad)  
 4e1:	00 00                	add    BYTE PTR [rax],al
 4e3:	00 02                	add    BYTE PTR [rdx],al
	...
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 e0                	add    al,ah
 4f1:	0f 20 00             	mov    rax,cr0
 4f4:	00 00                	add    BYTE PTR [rax],al
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	06                   	(bad)  
 4f9:	00 00                	add    BYTE PTR [rax],al
 4fb:	00 03                	add    BYTE PTR [rbx],al
	...
 505:	00 00                	add    BYTE PTR [rax],al
 507:	00 e8                	add    al,ch
 509:	0f 20 00             	mov    rax,cr0
 50c:	00 00                	add    BYTE PTR [rax],al
 50e:	00 00                	add    BYTE PTR [rax],al
 510:	06                   	(bad)  
 511:	00 00                	add    BYTE PTR [rax],al
 513:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 51e:	00 00                	add    BYTE PTR [rax],al
 520:	f0 0f 20 00          	lock mov rax,cr0
 524:	00 00                	add    BYTE PTR [rax],al
 526:	00 00                	add    BYTE PTR [rax],al
 528:	06                   	(bad)  
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 531 <_init-0x4f>
 531:	00 00                	add    BYTE PTR [rax],al
 533:	00 00                	add    BYTE PTR [rax],al
 535:	00 00                	add    BYTE PTR [rax],al
 537:	00 f8                	add    al,bh
 539:	0f 20 00             	mov    rax,cr0
 53c:	00 00                	add    BYTE PTR [rax],al
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	06                   	(bad)  
 541:	00 00                	add    BYTE PTR [rax],al
 543:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

0000000000000550 <.rela.plt>:
 550:	c8 0f 20 00          	enter  0x200f,0x0
 554:	00 00                	add    BYTE PTR [rax],al
 556:	00 00                	add    BYTE PTR [rax],al
 558:	07                   	(bad)  
 559:	00 00                	add    BYTE PTR [rax],al
 55b:	00 01                	add    BYTE PTR [rcx],al
	...
 565:	00 00                	add    BYTE PTR [rax],al
 567:	00 d0                	add    al,dl
 569:	0f 20 00             	mov    rax,cr0
 56c:	00 00                	add    BYTE PTR [rax],al
 56e:	00 00                	add    BYTE PTR [rax],al
 570:	07                   	(bad)  
 571:	00 00                	add    BYTE PTR [rax],al
 573:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .init:

0000000000000580 <_init>:
 580:	48 83 ec 08          	sub    rsp,0x8
 584:	48 8b 05 4d 0a 20 00 	mov    rax,QWORD PTR [rip+0x200a4d]        # 200fd8 <__gmon_start__>
 58b:	48 85 c0             	test   rax,rax
 58e:	74 02                	je     592 <_init+0x12>
 590:	ff d0                	call   rax
 592:	48 83 c4 08          	add    rsp,0x8
 596:	c3                   	ret    

Disassembly of section .plt:

00000000000005a0 <.plt>:
 5a0:	ff 35 12 0a 20 00    	push   QWORD PTR [rip+0x200a12]        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 5a6:	ff 25 14 0a 20 00    	jmp    QWORD PTR [rip+0x200a14]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 5ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000005b0 <_gfortran_set_args@plt>:
 5b0:	ff 25 12 0a 20 00    	jmp    QWORD PTR [rip+0x200a12]        # 200fc8 <_gfortran_set_args@GFORTRAN_7>
 5b6:	68 00 00 00 00       	push   0x0
 5bb:	e9 e0 ff ff ff       	jmp    5a0 <.plt>

00000000000005c0 <_gfortran_set_options@plt>:
 5c0:	ff 25 0a 0a 20 00    	jmp    QWORD PTR [rip+0x200a0a]        # 200fd0 <_gfortran_set_options@GFORTRAN_7>
 5c6:	68 01 00 00 00       	push   0x1
 5cb:	e9 d0 ff ff ff       	jmp    5a0 <.plt>

Disassembly of section .plt.got:

00000000000005d0 <__cxa_finalize@plt>:
 5d0:	ff 25 22 0a 20 00    	jmp    QWORD PTR [rip+0x200a22]        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000005e0 <_start>:
 5e0:	31 ed                	xor    ebp,ebp
 5e2:	49 89 d1             	mov    r9,rdx
 5e5:	5e                   	pop    rsi
 5e6:	48 89 e2             	mov    rdx,rsp
 5e9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 5ed:	50                   	push   rax
 5ee:	54                   	push   rsp
 5ef:	4c 8d 05 ca 01 00 00 	lea    r8,[rip+0x1ca]        # 7c0 <__libc_csu_fini>
 5f6:	48 8d 0d 53 01 00 00 	lea    rcx,[rip+0x153]        # 750 <__libc_csu_init>
 5fd:	48 8d 3d 05 01 00 00 	lea    rdi,[rip+0x105]        # 709 <main>
 604:	ff 15 d6 09 20 00    	call   QWORD PTR [rip+0x2009d6]        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 60a:	f4                   	hlt    
 60b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000000610 <deregister_tm_clones>:
 610:	48 8d 3d f9 09 20 00 	lea    rdi,[rip+0x2009f9]        # 201010 <__TMC_END__>
 617:	55                   	push   rbp
 618:	48 8d 05 f1 09 20 00 	lea    rax,[rip+0x2009f1]        # 201010 <__TMC_END__>
 61f:	48 39 f8             	cmp    rax,rdi
 622:	48 89 e5             	mov    rbp,rsp
 625:	74 19                	je     640 <deregister_tm_clones+0x30>
 627:	48 8b 05 ba 09 20 00 	mov    rax,QWORD PTR [rip+0x2009ba]        # 200fe8 <_ITM_deregisterTMCloneTable>
 62e:	48 85 c0             	test   rax,rax
 631:	74 0d                	je     640 <deregister_tm_clones+0x30>
 633:	5d                   	pop    rbp
 634:	ff e0                	jmp    rax
 636:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 63d:	00 00 00 
 640:	5d                   	pop    rbp
 641:	c3                   	ret    
 642:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 646:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 64d:	00 00 00 

0000000000000650 <register_tm_clones>:
 650:	48 8d 3d b9 09 20 00 	lea    rdi,[rip+0x2009b9]        # 201010 <__TMC_END__>
 657:	48 8d 35 b2 09 20 00 	lea    rsi,[rip+0x2009b2]        # 201010 <__TMC_END__>
 65e:	55                   	push   rbp
 65f:	48 29 fe             	sub    rsi,rdi
 662:	48 89 e5             	mov    rbp,rsp
 665:	48 c1 fe 03          	sar    rsi,0x3
 669:	48 89 f0             	mov    rax,rsi
 66c:	48 c1 e8 3f          	shr    rax,0x3f
 670:	48 01 c6             	add    rsi,rax
 673:	48 d1 fe             	sar    rsi,1
 676:	74 18                	je     690 <register_tm_clones+0x40>
 678:	48 8b 05 71 09 20 00 	mov    rax,QWORD PTR [rip+0x200971]        # 200ff0 <_ITM_registerTMCloneTable>
 67f:	48 85 c0             	test   rax,rax
 682:	74 0c                	je     690 <register_tm_clones+0x40>
 684:	5d                   	pop    rbp
 685:	ff e0                	jmp    rax
 687:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 68e:	00 00 
 690:	5d                   	pop    rbp
 691:	c3                   	ret    
 692:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 696:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 69d:	00 00 00 

00000000000006a0 <__do_global_dtors_aux>:
 6a0:	80 3d 69 09 20 00 00 	cmp    BYTE PTR [rip+0x200969],0x0        # 201010 <__TMC_END__>
 6a7:	75 2f                	jne    6d8 <__do_global_dtors_aux+0x38>
 6a9:	48 83 3d 47 09 20 00 	cmp    QWORD PTR [rip+0x200947],0x0        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6b0:	00 
 6b1:	55                   	push   rbp
 6b2:	48 89 e5             	mov    rbp,rsp
 6b5:	74 0c                	je     6c3 <__do_global_dtors_aux+0x23>
 6b7:	48 8b 3d 4a 09 20 00 	mov    rdi,QWORD PTR [rip+0x20094a]        # 201008 <__dso_handle>
 6be:	e8 0d ff ff ff       	call   5d0 <__cxa_finalize@plt>
 6c3:	e8 48 ff ff ff       	call   610 <deregister_tm_clones>
 6c8:	c6 05 41 09 20 00 01 	mov    BYTE PTR [rip+0x200941],0x1        # 201010 <__TMC_END__>
 6cf:	5d                   	pop    rbp
 6d0:	c3                   	ret    
 6d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 6d8:	f3 c3                	repz ret 
 6da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000000006e0 <frame_dummy>:
 6e0:	55                   	push   rbp
 6e1:	48 89 e5             	mov    rbp,rsp
 6e4:	5d                   	pop    rbp
 6e5:	e9 66 ff ff ff       	jmp    650 <register_tm_clones>

00000000000006ea <MAIN__>:
 6ea:	55                   	push   rbp
 6eb:	48 89 e5             	mov    rbp,rsp
 6ee:	c7 45 fc 0a 00 00 00 	mov    DWORD PTR [rbp-0x4],0xa
 6f5:	c7 45 f8 05 00 00 00 	mov    DWORD PTR [rbp-0x8],0x5
 6fc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 6ff:	99                   	cdq    
 700:	f7 7d f8             	idiv   DWORD PTR [rbp-0x8]
 703:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
 706:	90                   	nop
 707:	5d                   	pop    rbp
 708:	c3                   	ret    

0000000000000709 <main>:
 709:	55                   	push   rbp
 70a:	48 89 e5             	mov    rbp,rsp
 70d:	48 83 ec 10          	sub    rsp,0x10
 711:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 714:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 718:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 71c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
 71f:	48 89 d6             	mov    rsi,rdx
 722:	89 c7                	mov    edi,eax
 724:	e8 87 fe ff ff       	call   5b0 <_gfortran_set_args@plt>
 729:	48 8d 35 b0 00 00 00 	lea    rsi,[rip+0xb0]        # 7e0 <options.0.3504>
 730:	bf 07 00 00 00       	mov    edi,0x7
 735:	e8 86 fe ff ff       	call   5c0 <_gfortran_set_options@plt>
 73a:	e8 ab ff ff ff       	call   6ea <MAIN__>
 73f:	b8 00 00 00 00       	mov    eax,0x0
 744:	c9                   	leave  
 745:	c3                   	ret    
 746:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 74d:	00 00 00 

0000000000000750 <__libc_csu_init>:
 750:	41 57                	push   r15
 752:	41 56                	push   r14
 754:	49 89 d7             	mov    r15,rdx
 757:	41 55                	push   r13
 759:	41 54                	push   r12
 75b:	4c 8d 25 3e 06 20 00 	lea    r12,[rip+0x20063e]        # 200da0 <__frame_dummy_init_array_entry>
 762:	55                   	push   rbp
 763:	48 8d 2d 3e 06 20 00 	lea    rbp,[rip+0x20063e]        # 200da8 <__init_array_end>
 76a:	53                   	push   rbx
 76b:	41 89 fd             	mov    r13d,edi
 76e:	49 89 f6             	mov    r14,rsi
 771:	4c 29 e5             	sub    rbp,r12
 774:	48 83 ec 08          	sub    rsp,0x8
 778:	48 c1 fd 03          	sar    rbp,0x3
 77c:	e8 ff fd ff ff       	call   580 <_init>
 781:	48 85 ed             	test   rbp,rbp
 784:	74 20                	je     7a6 <__libc_csu_init+0x56>
 786:	31 db                	xor    ebx,ebx
 788:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 78f:	00 
 790:	4c 89 fa             	mov    rdx,r15
 793:	4c 89 f6             	mov    rsi,r14
 796:	44 89 ef             	mov    edi,r13d
 799:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 79d:	48 83 c3 01          	add    rbx,0x1
 7a1:	48 39 dd             	cmp    rbp,rbx
 7a4:	75 ea                	jne    790 <__libc_csu_init+0x40>
 7a6:	48 83 c4 08          	add    rsp,0x8
 7aa:	5b                   	pop    rbx
 7ab:	5d                   	pop    rbp
 7ac:	41 5c                	pop    r12
 7ae:	41 5d                	pop    r13
 7b0:	41 5e                	pop    r14
 7b2:	41 5f                	pop    r15
 7b4:	c3                   	ret    
 7b5:	90                   	nop
 7b6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 7bd:	00 00 00 

00000000000007c0 <__libc_csu_fini>:
 7c0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000000007c4 <_fini>:
 7c4:	48 83 ec 08          	sub    rsp,0x8
 7c8:	48 83 c4 08          	add    rsp,0x8
 7cc:	c3                   	ret    

Disassembly of section .rodata:

00000000000007d0 <_IO_stdin_used>:
 7d0:	01 00                	add    DWORD PTR [rax],eax
 7d2:	02 00                	add    al,BYTE PTR [rax]
	...

00000000000007e0 <options.0.3504>:
 7e0:	44 00 00             	add    BYTE PTR [rax],r8b
 7e3:	00 ff                	add    bh,bh
 7e5:	03 00                	add    eax,DWORD PTR [rax]
 7e7:	00 00                	add    BYTE PTR [rax],al
 7e9:	00 00                	add    BYTE PTR [rax],al
 7eb:	00 01                	add    BYTE PTR [rcx],al
 7ed:	00 00                	add    BYTE PTR [rax],al
 7ef:	00 01                	add    BYTE PTR [rcx],al
 7f1:	00 00                	add    BYTE PTR [rax],al
 7f3:	00 00                	add    BYTE PTR [rax],al
 7f5:	00 00                	add    BYTE PTR [rax],al
 7f7:	00 1f                	add    BYTE PTR [rdi],bl
 7f9:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame_hdr:

00000000000007fc <__GNU_EH_FRAME_HDR>:
 7fc:	01 1b                	add    DWORD PTR [rbx],ebx
 7fe:	03 3b                	add    edi,DWORD PTR [rbx]
 800:	40 00 00             	add    BYTE PTR [rax],al
 803:	00 07                	add    BYTE PTR [rdi],al
 805:	00 00                	add    BYTE PTR [rax],al
 807:	00 a4 fd ff ff 8c 00 	add    BYTE PTR [rbp+rdi*8+0x8cffff],ah
 80e:	00 00                	add    BYTE PTR [rax],al
 810:	d4                   	(bad)  
 811:	fd                   	std    
 812:	ff                   	(bad)  
 813:	ff b4 00 00 00 e4 fd 	push   QWORD PTR [rax+rax*1-0x21c0000]
 81a:	ff                   	(bad)  
 81b:	ff 5c 00 00          	call   FWORD PTR [rax+rax*1+0x0]
 81f:	00 ee                	add    dh,ch
 821:	fe                   	(bad)  
 822:	ff                   	(bad)  
 823:	ff cc                	dec    esp
 825:	00 00                	add    BYTE PTR [rax],al
 827:	00 0d ff ff ff ec    	add    BYTE PTR [rip+0xffffffffecffffff],cl        # ffffffffed00082c <_end+0xffffffffecdff814>
 82d:	00 00                	add    BYTE PTR [rax],al
 82f:	00 54 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],dl
 833:	ff 0c 01             	dec    DWORD PTR [rcx+rax*1]
 836:	00 00                	add    BYTE PTR [rax],al
 838:	c4                   	(bad)  
 839:	ff                   	(bad)  
 83a:	ff                   	(bad)  
 83b:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
	...

Disassembly of section .eh_frame:

0000000000000840 <__FRAME_END__-0x124>:
 840:	14 00                	adc    al,0x0
 842:	00 00                	add    BYTE PTR [rax],al
 844:	00 00                	add    BYTE PTR [rax],al
 846:	00 00                	add    BYTE PTR [rax],al
 848:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 84b:	00 01                	add    BYTE PTR [rcx],al
 84d:	78 10                	js     85f <__GNU_EH_FRAME_HDR+0x63>
 84f:	01 1b                	add    DWORD PTR [rbx],ebx
 851:	0c 07                	or     al,0x7
 853:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
 859:	00 00                	add    BYTE PTR [rax],al
 85b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 85e:	00 00                	add    BYTE PTR [rax],al
 860:	80 fd ff             	cmp    ch,0xff
 863:	ff 2b                	jmp    FWORD PTR [rbx]
	...
 86d:	00 00                	add    BYTE PTR [rax],al
 86f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
 872:	00 00                	add    BYTE PTR [rax],al
 874:	00 00                	add    BYTE PTR [rax],al
 876:	00 00                	add    BYTE PTR [rax],al
 878:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
 87b:	00 01                	add    BYTE PTR [rcx],al
 87d:	78 10                	js     88f <__GNU_EH_FRAME_HDR+0x93>
 87f:	01 1b                	add    DWORD PTR [rbx],ebx
 881:	0c 07                	or     al,0x7
 883:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
 889:	00 00                	add    BYTE PTR [rax],al
 88b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 88e:	00 00                	add    BYTE PTR [rax],al
 890:	10 fd                	adc    ch,bh
 892:	ff                   	(bad)  
 893:	ff 30                	push   QWORD PTR [rax]
 895:	00 00                	add    BYTE PTR [rax],al
 897:	00 00                	add    BYTE PTR [rax],al
 899:	0e                   	(bad)  
 89a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
 89d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
 8a0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
 8a3:	80 00 3f             	add    BYTE PTR [rax],0x3f
 8a6:	1a 3b                	sbb    bh,BYTE PTR [rbx]
 8a8:	2a 33                	sub    dh,BYTE PTR [rbx]
 8aa:	24 22                	and    al,0x22
 8ac:	00 00                	add    BYTE PTR [rax],al
 8ae:	00 00                	add    BYTE PTR [rax],al
 8b0:	14 00                	adc    al,0x0
 8b2:	00 00                	add    BYTE PTR [rax],al
 8b4:	44 00 00             	add    BYTE PTR [rax],r8b
 8b7:	00 18                	add    BYTE PTR [rax],bl
 8b9:	fd                   	std    
 8ba:	ff                   	(bad)  
 8bb:	ff 08                	dec    DWORD PTR [rax]
	...
 8c5:	00 00                	add    BYTE PTR [rax],al
 8c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
 8ca:	00 00                	add    BYTE PTR [rax],al
 8cc:	5c                   	pop    rsp
 8cd:	00 00                	add    BYTE PTR [rax],al
 8cf:	00 1a                	add    BYTE PTR [rdx],bl
 8d1:	fe                   	(bad)  
 8d2:	ff                   	(bad)  
 8d3:	ff 1f                	call   FWORD PTR [rdi]
 8d5:	00 00                	add    BYTE PTR [rax],al
 8d7:	00 00                	add    BYTE PTR [rax],al
 8d9:	41 0e                	rex.B (bad) 
 8db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 8e1:	5a                   	pop    rdx
 8e2:	0c 07                	or     al,0x7
 8e4:	08 00                	or     BYTE PTR [rax],al
 8e6:	00 00                	add    BYTE PTR [rax],al
 8e8:	1c 00                	sbb    al,0x0
 8ea:	00 00                	add    BYTE PTR [rax],al
 8ec:	7c 00                	jl     8ee <__GNU_EH_FRAME_HDR+0xf2>
 8ee:	00 00                	add    BYTE PTR [rax],al
 8f0:	19 fe                	sbb    esi,edi
 8f2:	ff                   	(bad)  
 8f3:	ff                   	(bad)  
 8f4:	3d 00 00 00 00       	cmp    eax,0x0
 8f9:	41 0e                	rex.B (bad) 
 8fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
 901:	78 0c                	js     90f <__GNU_EH_FRAME_HDR+0x113>
 903:	07                   	(bad)  
 904:	08 00                	or     BYTE PTR [rax],al
 906:	00 00                	add    BYTE PTR [rax],al
 908:	44 00 00             	add    BYTE PTR [rax],r8b
 90b:	00 9c 00 00 00 40 fe 	add    BYTE PTR [rax+rax*1-0x1c00000],bl
 912:	ff                   	(bad)  
 913:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
 916:	00 00                	add    BYTE PTR [rax],al
 918:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
 91b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
 921:	8e 03                	mov    es,WORD PTR [rbx]
 923:	45 0e                	rex.RB (bad) 
 925:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
 92b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86301779 <_end+0xffffffff86100761>
 931:	06                   	(bad)  
 932:	48 0e                	rex.W (bad) 
 934:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
 93a:	72 0e                	jb     94a <__GNU_EH_FRAME_HDR+0x14e>
 93c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
 93f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
 942:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
 945:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
 948:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
 94b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
 94e:	08 00                	or     BYTE PTR [rax],al
 950:	10 00                	adc    BYTE PTR [rax],al
 952:	00 00                	add    BYTE PTR [rax],al
 954:	e4 00                	in     al,0x0
 956:	00 00                	add    BYTE PTR [rax],al
 958:	68 fe ff ff 02       	push   0x2fffffe
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 00                	add    BYTE PTR [rax],al
 961:	00 00                	add    BYTE PTR [rax],al
	...

0000000000000964 <__FRAME_END__>:
 964:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000200da0 <__frame_dummy_init_array_entry>:
  200da0:	e0 06                	loopne 200da8 <__init_array_end>
  200da2:	00 00                	add    BYTE PTR [rax],al
  200da4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000200da8 <__do_global_dtors_aux_fini_array_entry>:
  200da8:	a0                   	.byte 0xa0
  200da9:	06                   	(bad)  
  200daa:	00 00                	add    BYTE PTR [rax],al
  200dac:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000200db0 <_DYNAMIC>:
  200db0:	01 00                	add    DWORD PTR [rax],eax
  200db2:	00 00                	add    BYTE PTR [rax],al
  200db4:	00 00                	add    BYTE PTR [rax],al
  200db6:	00 00                	add    BYTE PTR [rax],al
  200db8:	01 00                	add    DWORD PTR [rax],eax
  200dba:	00 00                	add    BYTE PTR [rax],al
  200dbc:	00 00                	add    BYTE PTR [rax],al
  200dbe:	00 00                	add    BYTE PTR [rax],al
  200dc0:	01 00                	add    DWORD PTR [rax],eax
  200dc2:	00 00                	add    BYTE PTR [rax],al
  200dc4:	00 00                	add    BYTE PTR [rax],al
  200dc6:	00 00                	add    BYTE PTR [rax],al
  200dc8:	80 00 00             	add    BYTE PTR [rax],0x0
  200dcb:	00 00                	add    BYTE PTR [rax],al
  200dcd:	00 00                	add    BYTE PTR [rax],al
  200dcf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  200dd2:	00 00                	add    BYTE PTR [rax],al
  200dd4:	00 00                	add    BYTE PTR [rax],al
  200dd6:	00 00                	add    BYTE PTR [rax],al
  200dd8:	80 05 00 00 00 00 00 	add    BYTE PTR [rip+0x0],0x0        # 200ddf <_DYNAMIC+0x2f>
  200ddf:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 200de5 <_DYNAMIC+0x35>
  200de5:	00 00                	add    BYTE PTR [rax],al
  200de7:	00 c4                	add    ah,al
  200de9:	07                   	(bad)  
  200dea:	00 00                	add    BYTE PTR [rax],al
  200dec:	00 00                	add    BYTE PTR [rax],al
  200dee:	00 00                	add    BYTE PTR [rax],al
  200df0:	19 00                	sbb    DWORD PTR [rax],eax
  200df2:	00 00                	add    BYTE PTR [rax],al
  200df4:	00 00                	add    BYTE PTR [rax],al
  200df6:	00 00                	add    BYTE PTR [rax],al
  200df8:	a0 0d 20 00 00 00 00 	movabs al,ds:0x1b0000000000200d
  200dff:	00 1b 
  200e01:	00 00                	add    BYTE PTR [rax],al
  200e03:	00 00                	add    BYTE PTR [rax],al
  200e05:	00 00                	add    BYTE PTR [rax],al
  200e07:	00 08                	add    BYTE PTR [rax],cl
  200e09:	00 00                	add    BYTE PTR [rax],al
  200e0b:	00 00                	add    BYTE PTR [rax],al
  200e0d:	00 00                	add    BYTE PTR [rax],al
  200e0f:	00 1a                	add    BYTE PTR [rdx],bl
  200e11:	00 00                	add    BYTE PTR [rax],al
  200e13:	00 00                	add    BYTE PTR [rax],al
  200e15:	00 00                	add    BYTE PTR [rax],al
  200e17:	00 a8 0d 20 00 00    	add    BYTE PTR [rax+0x200d],ch
  200e1d:	00 00                	add    BYTE PTR [rax],al
  200e1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  200e22:	00 00                	add    BYTE PTR [rax],al
  200e24:	00 00                	add    BYTE PTR [rax],al
  200e26:	00 00                	add    BYTE PTR [rax],al
  200e28:	08 00                	or     BYTE PTR [rax],al
  200e2a:	00 00                	add    BYTE PTR [rax],al
  200e2c:	00 00                	add    BYTE PTR [rax],al
  200e2e:	00 00                	add    BYTE PTR [rax],al
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200e35:	00 00                	add    BYTE PTR [rax],al
  200e37:	00 98 02 00 00 00    	add    BYTE PTR [rax+0x2],bl
  200e3d:	00 00                	add    BYTE PTR [rax],al
  200e3f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 200e45 <_DYNAMIC+0x95>
  200e45:	00 00                	add    BYTE PTR [rax],al
  200e47:	00 78 03             	add    BYTE PTR [rax+0x3],bh
  200e4a:	00 00                	add    BYTE PTR [rax],al
  200e4c:	00 00                	add    BYTE PTR [rax],al
  200e4e:	00 00                	add    BYTE PTR [rax],al
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    BYTE PTR [rax],al
  200e53:	00 00                	add    BYTE PTR [rax],al
  200e55:	00 00                	add    BYTE PTR [rax],al
  200e57:	00 b8 02 00 00 00    	add    BYTE PTR [rax+0x2],bh
  200e5d:	00 00                	add    BYTE PTR [rax],al
  200e5f:	00 0a                	add    BYTE PTR [rdx],cl
  200e61:	00 00                	add    BYTE PTR [rax],al
  200e63:	00 00                	add    BYTE PTR [rax],al
  200e65:	00 00                	add    BYTE PTR [rax],al
  200e67:	00 c2                	add    dl,al
  200e69:	00 00                	add    BYTE PTR [rax],al
  200e6b:	00 00                	add    BYTE PTR [rax],al
  200e6d:	00 00                	add    BYTE PTR [rax],al
  200e6f:	00 0b                	add    BYTE PTR [rbx],cl
  200e71:	00 00                	add    BYTE PTR [rax],al
  200e73:	00 00                	add    BYTE PTR [rax],al
  200e75:	00 00                	add    BYTE PTR [rax],al
  200e77:	00 18                	add    BYTE PTR [rax],bl
  200e79:	00 00                	add    BYTE PTR [rax],al
  200e7b:	00 00                	add    BYTE PTR [rax],al
  200e7d:	00 00                	add    BYTE PTR [rax],al
  200e7f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 200e85 <_DYNAMIC+0xd5>
	...
  200e8d:	00 00                	add    BYTE PTR [rax],al
  200e8f:	00 03                	add    BYTE PTR [rbx],al
  200e91:	00 00                	add    BYTE PTR [rax],al
  200e93:	00 00                	add    BYTE PTR [rax],al
  200e95:	00 00                	add    BYTE PTR [rax],al
  200e97:	00 b0 0f 20 00 00    	add    BYTE PTR [rax+0x200f],dh
  200e9d:	00 00                	add    BYTE PTR [rax],al
  200e9f:	00 02                	add    BYTE PTR [rdx],al
  200ea1:	00 00                	add    BYTE PTR [rax],al
  200ea3:	00 00                	add    BYTE PTR [rax],al
  200ea5:	00 00                	add    BYTE PTR [rax],al
  200ea7:	00 30                	add    BYTE PTR [rax],dh
  200ea9:	00 00                	add    BYTE PTR [rax],al
  200eab:	00 00                	add    BYTE PTR [rax],al
  200ead:	00 00                	add    BYTE PTR [rax],al
  200eaf:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  200eb2:	00 00                	add    BYTE PTR [rax],al
  200eb4:	00 00                	add    BYTE PTR [rax],al
  200eb6:	00 00                	add    BYTE PTR [rax],al
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    BYTE PTR [rax],al
  200ebb:	00 00                	add    BYTE PTR [rax],al
  200ebd:	00 00                	add    BYTE PTR [rax],al
  200ebf:	00 17                	add    BYTE PTR [rdi],dl
  200ec1:	00 00                	add    BYTE PTR [rax],al
  200ec3:	00 00                	add    BYTE PTR [rax],al
  200ec5:	00 00                	add    BYTE PTR [rax],al
  200ec7:	00 50 05             	add    BYTE PTR [rax+0x5],dl
  200eca:	00 00                	add    BYTE PTR [rax],al
  200ecc:	00 00                	add    BYTE PTR [rax],al
  200ece:	00 00                	add    BYTE PTR [rax],al
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    BYTE PTR [rax],al
  200ed3:	00 00                	add    BYTE PTR [rax],al
  200ed5:	00 00                	add    BYTE PTR [rax],al
  200ed7:	00 90 04 00 00 00    	add    BYTE PTR [rax+0x4],dl
  200edd:	00 00                	add    BYTE PTR [rax],al
  200edf:	00 08                	add    BYTE PTR [rax],cl
  200ee1:	00 00                	add    BYTE PTR [rax],al
  200ee3:	00 00                	add    BYTE PTR [rax],al
  200ee5:	00 00                	add    BYTE PTR [rax],al
  200ee7:	00 c0                	add    al,al
  200ee9:	00 00                	add    BYTE PTR [rax],al
  200eeb:	00 00                	add    BYTE PTR [rax],al
  200eed:	00 00                	add    BYTE PTR [rax],al
  200eef:	00 09                	add    BYTE PTR [rcx],cl
  200ef1:	00 00                	add    BYTE PTR [rax],al
  200ef3:	00 00                	add    BYTE PTR [rax],al
  200ef5:	00 00                	add    BYTE PTR [rax],al
  200ef7:	00 18                	add    BYTE PTR [rax],bl
  200ef9:	00 00                	add    BYTE PTR [rax],al
  200efb:	00 00                	add    BYTE PTR [rax],al
  200efd:	00 00                	add    BYTE PTR [rax],al
  200eff:	00 1e                	add    BYTE PTR [rsi],bl
  200f01:	00 00                	add    BYTE PTR [rax],al
  200f03:	00 00                	add    BYTE PTR [rax],al
  200f05:	00 00                	add    BYTE PTR [rax],al
  200f07:	00 08                	add    BYTE PTR [rax],cl
  200f09:	00 00                	add    BYTE PTR [rax],al
  200f0b:	00 00                	add    BYTE PTR [rax],al
  200f0d:	00 00                	add    BYTE PTR [rax],al
  200f0f:	00 fb                	add    bl,bh
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f15:	00 00                	add    BYTE PTR [rax],al
  200f17:	00 01                	add    BYTE PTR [rcx],al
  200f19:	00 00                	add    BYTE PTR [rax],al
  200f1b:	08 00                	or     BYTE PTR [rax],al
  200f1d:	00 00                	add    BYTE PTR [rax],al
  200f1f:	00 fe                	add    dh,bh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f25:	00 00                	add    BYTE PTR [rax],al
  200f27:	00 50 04             	add    BYTE PTR [rax+0x4],dl
  200f2a:	00 00                	add    BYTE PTR [rax],al
  200f2c:	00 00                	add    BYTE PTR [rax],al
  200f2e:	00 00                	add    BYTE PTR [rax],al
  200f30:	ff                   	(bad)  
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f35:	00 00                	add    BYTE PTR [rax],al
  200f37:	00 02                	add    BYTE PTR [rdx],al
  200f39:	00 00                	add    BYTE PTR [rax],al
  200f3b:	00 00                	add    BYTE PTR [rax],al
  200f3d:	00 00                	add    BYTE PTR [rax],al
  200f3f:	00 f0                	add    al,dh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f45:	00 00                	add    BYTE PTR [rax],al
  200f47:	00 3a                	add    BYTE PTR [rdx],bh
  200f49:	04 00                	add    al,0x0
  200f4b:	00 00                	add    BYTE PTR [rax],al
  200f4d:	00 00                	add    BYTE PTR [rax],al
  200f4f:	00 f9                	add    cl,bh
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  200f55:	00 00                	add    BYTE PTR [rax],al
  200f57:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	b0 0d                	mov    al,0xd
  200fb2:	20 00                	and    BYTE PTR [rax],al
	...
  200fc8:	b6 05                	mov    dh,0x5
  200fca:	00 00                	add    BYTE PTR [rax],al
  200fcc:	00 00                	add    BYTE PTR [rax],al
  200fce:	00 00                	add    BYTE PTR [rax],al
  200fd0:	c6 05 00 00 00 00 00 	mov    BYTE PTR [rip+0x0],0x0        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     BYTE PTR [rax],dl
  20100a:	20 00                	and    BYTE PTR [rax],al
  20100c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x508>
   a:	74 75                	je     81 <_init-0x4ff>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x4f9>
  19:	74 75                	je     90 <_init-0x4f0>
  1b:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1e:	38 2e                	cmp    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 37                	and    BYTE PTR [rdi],dh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	ea                   	(bad)  
  11:	06                   	(bad)  
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	5c                   	pop    rsp
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	c6 00 00             	mov    BYTE PTR [rax],0x0
   3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	2f                   	(bad)  
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 0e                	add    BYTE PTR [rsi],cl
  11:	02 ab 00 00 00 bc    	add    ch,BYTE PTR [rbx-0x44000000]
  17:	00 00                	add    BYTE PTR [rax],al
  19:	00 ea                	add    dl,ch
  1b:	06                   	(bad)  
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
  22:	5c                   	pop    rsp
	...
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	00 02                	add    BYTE PTR [rdx],al
  33:	b7 00                	mov    bh,0x0
  35:	00 00                	add    BYTE PTR [rax],al
  37:	01 0c 71             	add    DWORD PTR [rcx+rsi*2],ecx
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	00 09                	add    BYTE PTR [rcx],cl
  3e:	07                   	(bad)  
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	00 00                	add    BYTE PTR [rax],al
  43:	00 00                	add    BYTE PTR [rax],al
  45:	3d 00 00 00 00       	cmp    eax,0x0
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	00 01                	add    BYTE PTR [rcx],al
  4e:	9c                   	pushf  
  4f:	71 00                	jno    51 <_init-0x52f>
  51:	00 00                	add    BYTE PTR [rax],al
  53:	03 2a                	add    ebp,DWORD PTR [rdx]
  55:	00 00                	add    BYTE PTR [rax],al
  57:	00 01                	add    BYTE PTR [rcx],al
  59:	0c 78                	or     al,0x78
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	00 02                	add    BYTE PTR [rdx],al
  5f:	91                   	xchg   ecx,eax
  60:	6c                   	ins    BYTE PTR es:[rdi],dx
  61:	03 25 01 00 00 01    	add    esp,DWORD PTR [rip+0x1000001]        # 1000068 <_end+0xdff050>
  67:	0c 7d                	or     al,0x7d
  69:	00 00                	add    BYTE PTR [rax],al
  6b:	00 03                	add    BYTE PTR [rbx],al
  6d:	91                   	xchg   ecx,eax
  6e:	60                   	(bad)  
  6f:	06                   	(bad)  
  70:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
  73:	05 00 00 00 00       	add    eax,0x0
  78:	05 71 00 00 00       	add    eax,0x71
  7d:	06                   	(bad)  
  7e:	08 83 00 00 00 04    	or     BYTE PTR [rbx+0x4000000],al
  84:	01 08                	add    DWORD PTR [rax],ecx
  86:	18 00                	sbb    BYTE PTR [rax],al
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	07                   	(bad)  
  8b:	10 00                	adc    BYTE PTR [rax],al
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	01 01                	add    DWORD PTR [rcx],eax
  91:	02 ea                	add    ch,dl
  93:	06                   	(bad)  
  94:	00 00                	add    BYTE PTR [rax],al
  96:	00 00                	add    BYTE PTR [rax],al
  98:	00 00                	add    BYTE PTR [rax],al
  9a:	1f                   	(bad)  
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 00                	add    BYTE PTR [rax],al
  a1:	00 01                	add    BYTE PTR [rcx],al
  a3:	9c                   	pushf  
  a4:	08 61 00             	or     BYTE PTR [rcx+0x0],ah
  a7:	01 05 71 00 00 00    	add    DWORD PTR [rip+0x71],eax        # 11e <_init-0x462>
  ad:	02 91 6c 08 62 00    	add    dl,BYTE PTR [rcx+0x62086c]
  b3:	01 05 71 00 00 00    	add    DWORD PTR [rip+0x71],eax        # 12a <_init-0x456>
  b9:	02 91 68 08 63 00    	add    dl,BYTE PTR [rcx+0x630868]
  bf:	01 05 71 00 00 00    	add    DWORD PTR [rip+0x71],eax        # 136 <_init-0x44a>
  c5:	02                   	.byte 0x2
  c6:	91                   	xchg   ecx,eax
  c7:	64 00 00             	add    BYTE PTR fs:[rax],al

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 42    	add    DWORD PTR [rip+0x420b130e],esp        # 420b1316 <_end+0x41eb02fe>
   8:	0b 03                	or     eax,DWORD PTR [rbx]
   a:	0e                   	(bad)  
   b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   d:	11 01                	adc    DWORD PTR [rcx],eax
   f:	12 07                	adc    al,BYTE PTR [rdi]
  11:	10 17                	adc    BYTE PTR [rdi],dl
  13:	99                   	cdq    
  14:	42 17                	rex.X (bad) 
  16:	00 00                	add    BYTE PTR [rax],al
  18:	02 2e                	add    ch,BYTE PTR [rsi]
  1a:	01 3f                	add    DWORD PTR [rdi],edi
  1c:	19 03                	sbb    DWORD PTR [rbx],eax
  1e:	0e                   	(bad)  
  1f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  21:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  23:	49 13 11             	adc    rdx,QWORD PTR [r9]
  26:	01 12                	add    DWORD PTR [rdx],edx
  28:	07                   	(bad)  
  29:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
  30:	00 00                	add    BYTE PTR [rax],al
  32:	03 05 00 03 0e 3a    	add    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0338 <_end+0x39edf320>
  38:	0b 3b                	or     edi,DWORD PTR [rbx]
  3a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  3d:	02 18                	add    bl,BYTE PTR [rax]
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	04 24                	add    al,0x24
  43:	00 0b                	add    BYTE PTR [rbx],cl
  45:	0b 3e                	or     edi,DWORD PTR [rsi]
  47:	0b 03                	or     eax,DWORD PTR [rbx]
  49:	0e                   	(bad)  
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	05 26 00 49 13       	add    eax,0x13490026
  51:	00 00                	add    BYTE PTR [rax],al
  53:	06                   	(bad)  
  54:	0f 00 0b             	str    WORD PTR [rbx]
  57:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	07                   	(bad)  
  5d:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
  60:	0e                   	(bad)  
  61:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  63:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  65:	6a 19                	push   0x19
  67:	36 0b 11             	or     edx,DWORD PTR ss:[rcx]
  6a:	01 12                	add    DWORD PTR [rdx],edx
  6c:	07                   	(bad)  
  6d:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
  74:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
  77:	03 08                	add    ecx,DWORD PTR [rax]
  79:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  7b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  7d:	49 13 02             	adc    rax,QWORD PTR [r10]
  80:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	3f                   	(bad)  
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 22                	add    BYTE PTR [rdx],ah
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 01                	add    BYTE PTR [rcx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 64 69 76          	add    BYTE PTR [rcx+rbp*2+0x76],ah
  1f:	5f                   	pop    rdi
  20:	69 6e 74 2e 66 30 38 	imul   ebp,DWORD PTR [rsi+0x74],0x3830662e
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	09 02                	or     DWORD PTR [rdx],eax
  2f:	ea                   	(bad)  
  30:	06                   	(bad)  
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 00                	add    BYTE PTR [rax],al
  37:	01 50 75             	add    DWORD PTR [rax+0x75],edx
  3a:	76 a0                	jbe    ffffffffffffffdc <_end+0xffffffffffdfefc4>
  3c:	3c e4                	cmp    al,0xe4
  3e:	02 2e                	add    ch,BYTE PTR [rsi]
  40:	00 01                	add    BYTE PTR [rcx],al
  42:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
   7:	28 6b 69             	sub    BYTE PTR [rbx+0x69],ch
   a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   b:	64 3d 34 29 00 64    	fs cmp eax,0x64002934
  11:	69 76 5f 69 6e 74 00 	imul   esi,DWORD PTR [rsi+0x5f],0x746e69
  18:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  1b:	72 61                	jb     7e <_init-0x502>
  1d:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  21:	28 6b 69             	sub    BYTE PTR [rbx+0x69],ch
  24:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  25:	64 3d 31 29 00 61    	fs cmp eax,0x61002931
  2b:	72 67                	jb     94 <_init-0x4ec>
  2d:	63 00                	movsxd eax,DWORD PTR [rax]
  2f:	47                   	rex.RXB
  30:	4e 55                	rex.WRX push rbp
  32:	20 46 6f             	and    BYTE PTR [rsi+0x6f],al
  35:	72 74                	jb     ab <_init-0x4d5>
  37:	72 61                	jb     9a <_init-0x4e6>
  39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  3a:	32 30                	xor    dh,BYTE PTR [rax]
  3c:	30 38                	xor    BYTE PTR [rax],bh
  3e:	20 37                	and    BYTE PTR [rdi],dh
  40:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  43:	30 20                	xor    BYTE PTR [rax],ah
  45:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  4a:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  50:	72 69                	jb     bb <_init-0x4c5>
  52:	63 20                	movsxd esp,DWORD PTR [rax]
  54:	2d 6d 61 72 63       	sub    eax,0x6372616d
  59:	68 3d 78 38 36       	push   0x3638783d
  5e:	2d 36 34 20 2d       	sub    eax,0x2d203436
  63:	67 67 64 62 33       	addr32 addr32 fs (bad) 
  68:	20 2d 66 69 6e 74    	and    BYTE PTR [rip+0x746e6966],ch        # 746e69d4 <_end+0x744e59bc>
  6e:	72 69                	jb     d9 <_init-0x4a7>
  70:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  71:	73 69                	jae    dc <_init-0x4a4>
  73:	63 2d 6d 6f 64 75    	movsxd ebp,DWORD PTR [rip+0x75646f6d]        # 75646fe6 <_end+0x75445fce>
  79:	6c                   	ins    BYTE PTR es:[rdi],dx
  7a:	65 73 2d             	gs jae aa <_init-0x4d6>
  7d:	70 61                	jo     e0 <_init-0x4a0>
  7f:	74 68                	je     e9 <_init-0x497>
  81:	20 2f                	and    BYTE PTR [rdi],ch
  83:	75 73                	jne    f8 <_init-0x488>
  85:	72 2f                	jb     b6 <_init-0x4ca>
  87:	6c                   	ins    BYTE PTR es:[rdi],dx
  88:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  8f:	78 38                	js     c9 <_init-0x4b7>
  91:	36 5f                	ss pop rdi
  93:	36 34 2d             	ss xor al,0x2d
  96:	6c                   	ins    BYTE PTR es:[rdi],dx
  97:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  9e:	75 2f                	jne    cf <_init-0x4b1>
  a0:	37                   	(bad)  
  a1:	2f                   	(bad)  
  a2:	66 69 6e 63 6c 75    	imul   bp,WORD PTR [rsi+0x63],0x756c
  a8:	64 65 00 64 69 76    	fs add BYTE PTR gs:[rcx+rbp*2+0x76],ah
  ae:	5f                   	pop    rdi
  af:	69 6e 74 2e 66 30 38 	imul   ebp,DWORD PTR [rsi+0x74],0x3830662e
  b6:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
  b9:	69 6e 00 2f 68 6f 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d6f682f
  c0:	65 2f                	gs (bad) 
  c2:	75 62                	jne    126 <_init-0x45a>
  c4:	75 6e                	jne    134 <_init-0x44c>
  c6:	74 75                	je     13d <_init-0x443>
  c8:	2f                   	(bad)  
  c9:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  cb:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  d2:	6e 
  d3:	67 2f                	addr32 (bad) 
  d5:	44 69 73 61 73 73 65 	imul   r14d,DWORD PTR [rbx+0x61],0x6d657373
  dc:	6d 
  dd:	62                   	(bad)  
  de:	6c                   	ins    BYTE PTR es:[rdi],dx
  df:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
  e6:	61                   	(bad)  
  e7:	72 69                	jb     152 <_init-0x42e>
  e9:	65 73 2f             	gs jae 11b <_init-0x465>
  ec:	46 6f                	rex.RX outs dx,DWORD PTR ds:[rsi]
  ee:	72 74                	jb     164 <_init-0x41c>
  f0:	72 61                	jb     153 <_init-0x42d>
  f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  f3:	2f                   	(bad)  
  f4:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  f6:	74 65                	je     15d <_init-0x423>
  f8:	6c                   	ins    BYTE PTR es:[rdi],dx
  f9:	5f                   	pop    rdi
  fa:	61                   	(bad)  
  fb:	72 63                	jb     160 <_init-0x420>
  fd:	68 69 74 65 63       	push   0x63657469
 102:	74 75                	je     179 <_init-0x407>
 104:	72 65                	jb     16b <_init-0x415>
 106:	2f                   	(bad)  
 107:	41                   	rex.B
 108:	4d                   	rex.WRB
 109:	44                   	rex.R
 10a:	36 34 2f             	ss xor al,0x2f
 10d:	44 69 76 5f 49 6e 74 	imul   r14d,DWORD PTR [rsi+0x5f],0x2f746e49
 114:	2f 
 115:	57                   	push   rdi
 116:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
 11d:	75 
 11e:	67 5f                	addr32 pop rdi
 120:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 122:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 124:	00 61 72             	add    BYTE PTR [rcx+0x72],ah
 127:	67 76 00             	addr32 jbe 12a <_init-0x456>

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [rax]
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 03                	add    BYTE PTR [rbx],al
   8:	00 01                	add    BYTE PTR [rcx],al
   a:	04 00                	add    al,0x0

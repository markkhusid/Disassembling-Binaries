
mult_reals.o:     file format elf64-x86-64
mult_reals.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         0000006d  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  000000ad  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  000000ad  2**0
                  ALLOC
  3 .rodata       00000024  0000000000000000  0000000000000000  000000b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   000000d5  0000000000000000  0000000000000000  000000d4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_abbrev 00000086  0000000000000000  0000000000000000  000001a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000030  0000000000000000  0000000000000000  0000022f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_macro  0000000c  0000000000000000  0000000000000000  0000025f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_line   00000046  0000000000000000  0000000000000000  0000026b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  9 .debug_str    0000015c  0000000000000000  0000000000000000  000002b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      0000002b  0000000000000000  0000000000000000  0000040d  2**0
                  CONTENTS, READONLY
 11 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00000438  2**0
                  CONTENTS, READONLY
 12 .eh_frame     00000058  0000000000000000  0000000000000000  00000438  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 mult_reals.f08
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l     F .text	0000000000000030 MAIN__
0000000000000000 l     O .rodata	000000000000001c options.0.3504
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_macro	0000000000000000 .debug_macro
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000030 g     F .text	000000000000003d main
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 _gfortran_set_args
0000000000000000         *UND*	0000000000000000 _gfortran_set_options


Contents of section .text:
 0000 554889e5 f30f1005 00000000 f30f1145  UH.............E
 0010 fcf30f10 05000000 00f30f11 45f8f30f  ............E...
 0020 1045f8f3 0f5945fc f30f1145 f4905dc3  .E...YE....E..].
 0030 554889e5 4883ec10 897dfc48 8975f048  UH..H....}.H.u.H
 0040 8b55f08b 45fc4889 d689c7e8 00000000  .U..E.H.........
 0050 488d3500 000000bf 07000000 e8000000  H.5.............
 0060 00e89aff ffffb800 000000c9 c3        .............   
Contents of section .rodata:
 0000 44000000 ff030000 00000000 01000000  D...............
 0010 01000000 00000000 1f000000 cdcc0c40  ...............@
 0020 33335340                             33S@            
Contents of section .debug_info:
 0000 d1000000 04000000 00000801 00000000  ................
 0010 0e020000 00000000 00000000 00000000  ................
 0020 00006d00 00000000 00000000 00000000  ..m.............
 0030 00000200 00000001 0d710000 00000000  .........q......
 0040 00000000 003d0000 00000000 00019c71  .....=.........q
 0050 00000003 00000000 010d7800 00000291  ..........x.....
 0060 6c030000 0000010d 7d000000 03916006  l.......}.....`.
 0070 00040405 00000000 05710000 00060883  .........q......
 0080 00000004 01080000 00000700 00000001  ................
 0090 01020000 00000000 00003000 00000000  ..........0.....
 00a0 0000019c cd000000 08610001 05cd0000  .........a......
 00b0 0002916c 08620001 05cd0000 00029168  ...l.b.........h
 00c0 08630001 05cd0000 00029164 00040404  .c.........d....
 00d0 00000000 00                          .....           
Contents of section .debug_abbrev:
 0000 01110125 0e130b42 0b030e1b 0e110112  ...%...B........
 0010 07101799 42170000 022e013f 19030e3a  ....B......?...:
 0020 0b3b0b49 13110112 07401896 42190113  .;.I.....@..B...
 0030 00000305 00030e3a 0b3b0b49 13021800  .......:.;.I....
 0040 00042400 0b0b3e0b 030e0000 05260049  ..$...>......&.I
 0050 13000006 0f000b0b 49130000 072e0103  ........I.......
 0060 0e3a0b3b 0b6a1936 0b110112 07401897  .:.;.j.6.....@..
 0070 42190113 00000834 0003083a 0b3b0b49  B......4...:.;.I
 0080 13021800 0000                        ......          
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 00000000 00000000 6d000000 00000000  ........m.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_macro:
 0000 04000200 00000003 00010400           ............    
Contents of section .debug_line:
 0000 42000000 02002500 00000101 fb0e0d00  B.....%.........
 0010 01010101 00000001 00000100 6d756c74  ............mult
 0020 5f726561 6c732e66 30380000 00000000  _reals.f08......
 0030 09020000 00000000 00000150 cacae63c  ...........P...<
 0040 e4022e00 0101                        ......          
Contents of section .debug_str:
 0000 63686172 61637465 72286b69 6e643d31  character(kind=1
 0010 29006d75 6c745f72 65616c73 00617267  ).mult_reals.arg
 0020 6300474e 5520466f 72747261 6e323030  c.GNU Fortran200
 0030 3820372e 332e3020 2d6d7475 6e653d67  8 7.3.0 -mtune=g
 0040 656e6572 6963202d 6d617263 683d7838  eneric -march=x8
 0050 362d3634 202d6767 64623320 2d66696e  6-64 -ggdb3 -fin
 0060 7472696e 7369632d 6d6f6475 6c65732d  trinsic-modules-
 0070 70617468 202f7573 722f6c69 622f6763  path /usr/lib/gc
 0080 632f7838 365f3634 2d6c696e 75782d67  c/x86_64-linux-g
 0090 6e752f37 2f66696e 636c7564 6500696e  nu/7/finclude.in
 00a0 74656765 72286b69 6e643d34 29006d61  teger(kind=4).ma
 00b0 696e006d 756c745f 7265616c 732e6630  in.mult_reals.f0
 00c0 38002f68 6f6d652f 7562756e 74752f45  8./home/ubuntu/E
 00d0 6e67696e 65657269 6e672f50 726f6772  ngineering/Progr
 00e0 616d6d69 6e672f44 69736173 73656d62  amming/Disassemb
 00f0 6c696e67 2d42696e 61726965 732f466f  ling-Binaries/Fo
 0100 72747261 6e2f496e 74656c5f 61726368  rtran/Intel_arch
 0110 69746563 74757265 2f414d44 36342f52  itecture/AMD64/R
 0120 65616c5f 4f706572 6174696f 6e732f4d  eal_Operations/M
 0130 756c745f 5265616c 732f5769 74685f44  ult_Reals/With_D
 0140 65627567 5f496e66 6f007265 616c286b  ebug_Info.real(k
 0150 696e643d 34290061 72677600           ind=4).argv.    
Contents of section .comment:
 0000 00474343 3a202855 62756e74 7520372e  .GCC: (Ubuntu 7.
 0010 332e302d 32377562 756e7475 317e3138  3.0-27ubuntu1~18
 0020 2e303429 20372e33 2e3000             .04) 7.3.0.     
Contents of section .eh_frame:
 0000 14000000 00000000 017a5200 01781001  .........zR..x..
 0010 1b0c0708 90010000 1c000000 1c000000  ................
 0020 00000000 30000000 00410e10 8602430d  ....0....A....C.
 0030 066b0c07 08000000 1c000000 3c000000  .k..........<...
 0040 00000000 3d000000 00410e10 8602430d  ....=....A....C.
 0050 06780c07 08000000                    .x......        

Disassembly of section .text:

0000000000000000 <MAIN__>:
program mult_reals
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
        
        implicit none

        real :: a, b, c

        a = 2.2
   4:	f3 0f 10 05 00 00 00 	movss  xmm0,DWORD PTR [rip+0x0]        # c <MAIN__+0xc>
   b:	00 
			8: R_X86_64_PC32	.rodata+0x18
   c:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0

        b = 3.3
  11:	f3 0f 10 05 00 00 00 	movss  xmm0,DWORD PTR [rip+0x0]        # 19 <MAIN__+0x19>
  18:	00 
			15: R_X86_64_PC32	.rodata+0x1c
  19:	f3 0f 11 45 f8       	movss  DWORD PTR [rbp-0x8],xmm0

        c = b * a
  1e:	f3 0f 10 45 f8       	movss  xmm0,DWORD PTR [rbp-0x8]
  23:	f3 0f 59 45 fc       	mulss  xmm0,DWORD PTR [rbp-0x4]
  28:	f3 0f 11 45 f4       	movss  DWORD PTR [rbp-0xc],xmm0

end program mult_reals
  2d:	90                   	nop
  2e:	5d                   	pop    rbp
  2f:	c3                   	ret    

0000000000000030 <main>:
  30:	55                   	push   rbp
  31:	48 89 e5             	mov    rbp,rsp
  34:	48 83 ec 10          	sub    rsp,0x10
  38:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  3b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  3f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  43:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  46:	48 89 d6             	mov    rsi,rdx
  49:	89 c7                	mov    edi,eax
  4b:	e8 00 00 00 00       	call   50 <main+0x20>
			4c: R_X86_64_PLT32	_gfortran_set_args-0x4
  50:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 57 <main+0x27>
			53: R_X86_64_PC32	.rodata-0x4
  57:	bf 07 00 00 00       	mov    edi,0x7
  5c:	e8 00 00 00 00       	call   61 <main+0x31>
			5d: R_X86_64_PLT32	_gfortran_set_options-0x4
  61:	e8 9a ff ff ff       	call   0 <MAIN__>
  66:	b8 00 00 00 00       	mov    eax,0x0
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .rodata:

0000000000000000 <options.0.3504>:
   0:	44 00 00             	add    BYTE PTR [rax],r8b
   3:	00 ff                	add    bh,bh
   5:	03 00                	add    eax,DWORD PTR [rax]
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 01                	add    BYTE PTR [rcx],al
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 1f                	add    BYTE PTR [rdi],bl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 cd                	add    ch,cl
  1d:	cc                   	int3   
  1e:	0c 40                	or     al,0x40
  20:	33 33                	xor    esi,DWORD PTR [rbx]
  22:	53                   	push   rbx
  23:	40                   	rex

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
program mult_reals
   0:	d1 00                	rol    DWORD PTR [rax],1
   2:	00 00                	add    BYTE PTR [rax],al
        a = 2.2
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_abbrev
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	00 00                	add    BYTE PTR [rax],al
			c: R_X86_64_32	.debug_str+0x22
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0e                   	(bad)  
        b = 3.3
  11:	02 00                	add    al,BYTE PTR [rax]
			12: R_X86_64_32	.debug_str+0xb3
	...
			16: R_X86_64_32	.debug_str+0xc2
			1a: R_X86_64_64	.text
        c = b * a
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
	...
			2a: R_X86_64_32	.debug_line
			2e: R_X86_64_32	.debug_macro
end program mult_reals
  30:	00 00                	add    BYTE PTR [rax],al
  32:	02 00                	add    al,BYTE PTR [rax]
			33: R_X86_64_32	.debug_str+0xae
  34:	00 00                	add    BYTE PTR [rax],al
  36:	00 01                	add    BYTE PTR [rcx],al
  38:	0d 71 00 00 00       	or     eax,0x71
	...
			3d: R_X86_64_64	.text+0x30
  45:	3d 00 00 00 00       	cmp    eax,0x0
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	00 01                	add    BYTE PTR [rcx],al
  4e:	9c                   	pushf  
  4f:	71 00                	jno    51 <.debug_info+0x51>
  51:	00 00                	add    BYTE PTR [rax],al
  53:	03 00                	add    eax,DWORD PTR [rax]
			54: R_X86_64_32	.debug_str+0x1d
  55:	00 00                	add    BYTE PTR [rax],al
  57:	00 01                	add    BYTE PTR [rcx],al
  59:	0d 78 00 00 00       	or     eax,0x78
  5e:	02 91 6c 03 00 00    	add    dl,BYTE PTR [rcx+0x36c]
			62: R_X86_64_32	.debug_str+0x157
  64:	00 00                	add    BYTE PTR [rax],al
  66:	01 0d 7d 00 00 00    	add    DWORD PTR [rip+0x7d],ecx        # e9 <main+0xb9>
  6c:	03 91 60 06 00 04    	add    edx,DWORD PTR [rcx+0x4000660]
  72:	04 05                	add    al,0x5
  74:	00 00                	add    BYTE PTR [rax],al
			74: R_X86_64_32	.debug_str+0x9e
  76:	00 00                	add    BYTE PTR [rax],al
  78:	05 71 00 00 00       	add    eax,0x71
  7d:	06                   	(bad)  
  7e:	08 83 00 00 00 04    	or     BYTE PTR [rbx+0x4000000],al
  84:	01 08                	add    DWORD PTR [rax],ecx
  86:	00 00                	add    BYTE PTR [rax],al
			86: R_X86_64_32	.debug_str
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	07                   	(bad)  
  8b:	00 00                	add    BYTE PTR [rax],al
			8b: R_X86_64_32	.debug_str+0x12
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	01 01                	add    DWORD PTR [rcx],eax
  91:	02 00                	add    al,BYTE PTR [rax]
			92: R_X86_64_64	.text
  93:	00 00                	add    BYTE PTR [rax],al
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 00                	add    BYTE PTR [rax],al
  99:	00 30                	add    BYTE PTR [rax],dh
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 00                	add    BYTE PTR [rax],al
  a1:	00 01                	add    BYTE PTR [rcx],al
  a3:	9c                   	pushf  
  a4:	cd 00                	int    0x0
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	08 61 00             	or     BYTE PTR [rcx+0x0],ah
  ab:	01 05 cd 00 00 00    	add    DWORD PTR [rip+0xcd],eax        # 17e <main+0x14e>
  b1:	02 91 6c 08 62 00    	add    dl,BYTE PTR [rcx+0x62086c]
  b7:	01 05 cd 00 00 00    	add    DWORD PTR [rip+0xcd],eax        # 18a <main+0x15a>
  bd:	02 91 68 08 63 00    	add    dl,BYTE PTR [rcx+0x630868]
  c3:	01 05 cd 00 00 00    	add    DWORD PTR [rip+0xcd],eax        # 196 <main+0x166>
  c9:	02 91 64 00 04 04    	add    dl,BYTE PTR [rcx+0x4040064]
  cf:	04 00                	add    al,0x0
			d0: R_X86_64_32	.debug_str+0x14a
  d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
program mult_reals
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 42    	add    DWORD PTR [rip+0x420b130e],esp        # 420b1316 <main+0x420b12e6>
        a = 2.2
   8:	0b 03                	or     eax,DWORD PTR [rbx]
   a:	0e                   	(bad)  
   b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   d:	11 01                	adc    DWORD PTR [rcx],eax
   f:	12 07                	adc    al,BYTE PTR [rdi]
        b = 3.3
  11:	10 17                	adc    BYTE PTR [rdi],dl
  13:	99                   	cdq    
  14:	42 17                	rex.X (bad) 
  16:	00 00                	add    BYTE PTR [rax],al
  18:	02 2e                	add    ch,BYTE PTR [rsi]
  1a:	01 3f                	add    DWORD PTR [rdi],edi
  1c:	19 03                	sbb    DWORD PTR [rbx],eax
        c = b * a
  1e:	0e                   	(bad)  
  1f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  21:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  23:	49 13 11             	adc    rdx,QWORD PTR [r9]
  26:	01 12                	add    DWORD PTR [rdx],edx
  28:	07                   	(bad)  
  29:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
end program mult_reals
  30:	00 00                	add    BYTE PTR [rax],al
  32:	03 05 00 03 0e 3a    	add    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0338 <main+0x3a0e0308>
  38:	0b 3b                	or     edi,DWORD PTR [rbx]
  3a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  3d:	02 18                	add    bl,BYTE PTR [rax]
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	04 24                	add    al,0x24
  43:	00 0b                	add    BYTE PTR [rbx],cl
  45:	0b 3e                	or     edi,DWORD PTR [rsi]
  47:	0b 03                	or     eax,DWORD PTR [rbx]
  49:	0e                   	(bad)  
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	05 26 00 49 13       	add    eax,0x13490026
  51:	00 00                	add    BYTE PTR [rax],al
  53:	06                   	(bad)  
  54:	0f 00 0b             	str    WORD PTR [rbx]
  57:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	07                   	(bad)  
  5d:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
  60:	0e                   	(bad)  
  61:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  63:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  65:	6a 19                	push   0x19
  67:	36 0b 11             	or     edx,DWORD PTR ss:[rcx]
  6a:	01 12                	add    DWORD PTR [rdx],edx
  6c:	07                   	(bad)  
  6d:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  74:	00 00                	add    BYTE PTR [rax],al
  76:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
  79:	03 08                	add    ecx,DWORD PTR [rax]
  7b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  7d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  7f:	49 13 02             	adc    rax,QWORD PTR [r10]
  82:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
program mult_reals
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
        a = 2.2
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_info
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
			10: R_X86_64_64	.text
        b = 3.3
  18:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
program mult_reals
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [rax]
			3: R_X86_64_32	.debug_line
        a = 2.2
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 03                	add    BYTE PTR [rbx],al
   8:	00 01                	add    BYTE PTR [rcx],al
   a:	04 00                	add    al,0x0

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
program mult_reals
   0:	42 00 00             	rex.X add BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
        a = 2.2
   5:	00 25 00 00 00 01    	add    BYTE PTR [rip+0x1000000],ah        # 100000b <main+0xffffdb>
   b:	01 fb                	add    ebx,edi
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
        b = 3.3
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
        c = b * a
  1e:	6c                   	ins    BYTE PTR es:[rdi],dx
  1f:	74 5f                	je     80 <main+0x50>
  21:	72 65                	jb     88 <main+0x58>
  23:	61                   	(bad)  
  24:	6c                   	ins    BYTE PTR es:[rdi],dx
  25:	73 2e                	jae    55 <main+0x25>
  27:	66 30 38             	data16 xor BYTE PTR [rax],bh
  2a:	00 00                	add    BYTE PTR [rax],al
  2c:	00 00                	add    BYTE PTR [rax],al
end program mult_reals
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	09 02                	or     DWORD PTR [rdx],eax
	...
			32: R_X86_64_64	.text
  3a:	01 50 ca             	add    DWORD PTR [rax-0x36],edx
  3d:	ca e6 3c             	retf   0x3ce6
  40:	e4 02                	in     al,0x2
  42:	2e 00 01             	add    BYTE PTR cs:[rcx],al
  45:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
program mult_reals
   0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
   3:	72 61                	jb     66 <.debug_str+0x66>
        a = 2.2
   5:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   9:	28 6b 69             	sub    BYTE PTR [rbx+0x69],ch
   c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   d:	64 3d 31 29 00 6d    	fs cmp eax,0x6d002931
        b = 3.3
  13:	75 6c                	jne    81 <.debug_str+0x81>
  15:	74 5f                	je     76 <.debug_str+0x76>
  17:	72 65                	jb     7e <.debug_str+0x7e>
  19:	61                   	(bad)  
  1a:	6c                   	ins    BYTE PTR es:[rdi],dx
  1b:	73 00                	jae    1d <.debug_str+0x1d>
  1d:	61                   	(bad)  
        c = b * a
  1e:	72 67                	jb     87 <.debug_str+0x87>
  20:	63 00                	movsxd eax,DWORD PTR [rax]
  22:	47                   	rex.RXB
  23:	4e 55                	rex.WRX push rbp
  25:	20 46 6f             	and    BYTE PTR [rsi+0x6f],al
  28:	72 74                	jb     9e <.debug_str+0x9e>
  2a:	72 61                	jb     8d <.debug_str+0x8d>
  2c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
end program mult_reals
  2d:	32 30                	xor    dh,BYTE PTR [rax]
  2f:	30 38                	xor    BYTE PTR [rax],bh
  31:	20 37                	and    BYTE PTR [rdi],dh
  33:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  36:	30 20                	xor    BYTE PTR [rax],ah
  38:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  3d:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  43:	72 69                	jb     ae <.debug_str+0xae>
  45:	63 20                	movsxd esp,DWORD PTR [rax]
  47:	2d 6d 61 72 63       	sub    eax,0x6372616d
  4c:	68 3d 78 38 36       	push   0x3638783d
  51:	2d 36 34 20 2d       	sub    eax,0x2d203436
  56:	67 67 64 62 33       	addr32 addr32 fs (bad) 
  5b:	20 2d 66 69 6e 74    	and    BYTE PTR [rip+0x746e6966],ch        # 746e69c7 <main+0x746e6997>
  61:	72 69                	jb     cc <.debug_str+0xcc>
  63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  64:	73 69                	jae    cf <.debug_str+0xcf>
  66:	63 2d 6d 6f 64 75    	movsxd ebp,DWORD PTR [rip+0x75646f6d]        # 75646fd9 <main+0x75646fa9>
  6c:	6c                   	ins    BYTE PTR es:[rdi],dx
  6d:	65 73 2d             	gs jae 9d <.debug_str+0x9d>
  70:	70 61                	jo     d3 <.debug_str+0xd3>
  72:	74 68                	je     dc <.debug_str+0xdc>
  74:	20 2f                	and    BYTE PTR [rdi],ch
  76:	75 73                	jne    eb <.debug_str+0xeb>
  78:	72 2f                	jb     a9 <.debug_str+0xa9>
  7a:	6c                   	ins    BYTE PTR es:[rdi],dx
  7b:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  82:	78 38                	js     bc <.debug_str+0xbc>
  84:	36 5f                	ss pop rdi
  86:	36 34 2d             	ss xor al,0x2d
  89:	6c                   	ins    BYTE PTR es:[rdi],dx
  8a:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  91:	75 2f                	jne    c2 <.debug_str+0xc2>
  93:	37                   	(bad)  
  94:	2f                   	(bad)  
  95:	66 69 6e 63 6c 75    	imul   bp,WORD PTR [rsi+0x63],0x756c
  9b:	64 65 00 69 6e       	fs add BYTE PTR gs:[rcx+0x6e],ch
  a0:	74 65                	je     107 <.debug_str+0x107>
  a2:	67 65 72 28          	addr32 gs jb ce <.debug_str+0xce>
  a6:	6b 69 6e 64          	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  aa:	3d 34 29 00 6d       	cmp    eax,0x6d002934
  af:	61                   	(bad)  
  b0:	69 6e 00 6d 75 6c 74 	imul   ebp,DWORD PTR [rsi+0x0],0x746c756d
  b7:	5f                   	pop    rdi
  b8:	72 65                	jb     11f <.debug_str+0x11f>
  ba:	61                   	(bad)  
  bb:	6c                   	ins    BYTE PTR es:[rdi],dx
  bc:	73 2e                	jae    ec <.debug_str+0xec>
  be:	66 30 38             	data16 xor BYTE PTR [rax],bh
  c1:	00 2f                	add    BYTE PTR [rdi],ch
  c3:	68 6f 6d 65 2f       	push   0x2f656d6f
  c8:	75 62                	jne    12c <.debug_str+0x12c>
  ca:	75 6e                	jne    13a <.debug_str+0x13a>
  cc:	74 75                	je     143 <.debug_str+0x143>
  ce:	2f                   	(bad)  
  cf:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  d1:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  d8:	6e 
  d9:	67 2f                	addr32 (bad) 
  db:	50                   	push   rax
  dc:	72 6f                	jb     14d <.debug_str+0x14d>
  de:	67 72 61             	addr32 jb 142 <.debug_str+0x142>
  e1:	6d                   	ins    DWORD PTR es:[rdi],dx
  e2:	6d                   	ins    DWORD PTR es:[rdi],dx
  e3:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [rsi+0x67],0x7369442f
  ea:	61                   	(bad)  
  eb:	73 73                	jae    160 <main+0x130>
  ed:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  ef:	62                   	(bad)  
  f0:	6c                   	ins    BYTE PTR es:[rdi],dx
  f1:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
  f8:	61                   	(bad)  
  f9:	72 69                	jb     164 <main+0x134>
  fb:	65 73 2f             	gs jae 12d <.debug_str+0x12d>
  fe:	46 6f                	rex.RX outs dx,DWORD PTR ds:[rsi]
 100:	72 74                	jb     176 <main+0x146>
 102:	72 61                	jb     165 <main+0x135>
 104:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 105:	2f                   	(bad)  
 106:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 108:	74 65                	je     16f <main+0x13f>
 10a:	6c                   	ins    BYTE PTR es:[rdi],dx
 10b:	5f                   	pop    rdi
 10c:	61                   	(bad)  
 10d:	72 63                	jb     172 <main+0x142>
 10f:	68 69 74 65 63       	push   0x63657469
 114:	74 75                	je     18b <main+0x15b>
 116:	72 65                	jb     17d <main+0x14d>
 118:	2f                   	(bad)  
 119:	41                   	rex.B
 11a:	4d                   	rex.WRB
 11b:	44                   	rex.R
 11c:	36 34 2f             	ss xor al,0x2f
 11f:	52                   	push   rdx
 120:	65 61                	gs (bad) 
 122:	6c                   	ins    BYTE PTR es:[rdi],dx
 123:	5f                   	pop    rdi
 124:	4f 70 65             	rex.WRXB jo 18c <main+0x15c>
 127:	72 61                	jb     18a <main+0x15a>
 129:	74 69                	je     194 <main+0x164>
 12b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 12c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 12d:	73 2f                	jae    15e <main+0x12e>
 12f:	4d 75 6c             	rex.WRB jne 19e <main+0x16e>
 132:	74 5f                	je     193 <main+0x163>
 134:	52                   	push   rdx
 135:	65 61                	gs (bad) 
 137:	6c                   	ins    BYTE PTR es:[rdi],dx
 138:	73 2f                	jae    169 <main+0x139>
 13a:	57                   	push   rdi
 13b:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
 142:	75 
 143:	67 5f                	addr32 pop rdi
 145:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 147:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 149:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 14c:	61                   	(bad)  
 14d:	6c                   	ins    BYTE PTR es:[rdi],dx
 14e:	28 6b 69             	sub    BYTE PTR [rbx+0x69],ch
 151:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 152:	64 3d 34 29 00 61    	fs cmp eax,0x61002934
 158:	72 67                	jb     1c1 <main+0x191>
 15a:	76 00                	jbe    15c <main+0x12c>

Disassembly of section .comment:

0000000000000000 <.comment>:
program mult_reals
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
        a = 2.2
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <main+0x49>
   b:	74 75                	je     82 <main+0x52>
   d:	20 37                	and    BYTE PTR [rdi],dh
   f:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
        b = 3.3
  12:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 6275374a <main+0x6275371a>
  18:	75 6e                	jne    88 <main+0x58>
  1a:	74 75                	je     91 <main+0x61>
  1c:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
        c = b * a
  1f:	38 2e                	cmp    BYTE PTR [rsi],ch
  21:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  24:	20 37                	and    BYTE PTR [rdi],dh
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
			20: R_X86_64_PC32	.text
  22:	00 00                	add    BYTE PTR [rax],al
  24:	30 00                	xor    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	6b 0c 07 08          	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  35:	00 00                	add    BYTE PTR [rax],al
  37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	3c 00                	cmp    al,0x0
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
			40: R_X86_64_PC32	.text+0x30
  42:	00 00                	add    BYTE PTR [rax],al
  44:	3d 00 00 00 00       	cmp    eax,0x0
  49:	41 0e                	rex.B (bad) 
  4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  51:	78 0c                	js     5f <main+0x2f>
  53:	07                   	(bad)  
  54:	08 00                	or     BYTE PTR [rax],al
	...
Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xd1 (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  8
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0x22): GNU Fortran2008 7.3.0 -mtune=generic -march=x86-64 -ggdb3 -fintrinsic-modules-path /usr/lib/gcc/x86_64-linux-gnu/7/finclude
    <10>   DW_AT_language    : 14	(Fortran 95)
    <11>   DW_AT_identifier_case: 2	(down_case)
    <12>   DW_AT_name        : (indirect string, offset: 0xb3): mult_reals.f08
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0xc2): /home/ubuntu/Engineering/Programming/Disassembling-Binaries/Fortran/Intel_architecture/AMD64/Real_Operations/Mult_Reals/With_Debug_Info
    <1a>   DW_AT_low_pc      : 0x0
    <22>   DW_AT_high_pc     : 0x6d
    <2a>   DW_AT_stmt_list   : 0x0
    <2e>   DW_AT_GNU_macros  : 0x0
 <1><32>: Abbrev Number: 2 (DW_TAG_subprogram)
    <33>   DW_AT_external    : 1
    <33>   DW_AT_name        : (indirect string, offset: 0xae): main
    <37>   DW_AT_decl_file   : 1
    <38>   DW_AT_decl_line   : 13
    <39>   DW_AT_type        : <0x71>
    <3d>   DW_AT_low_pc      : 0x30
    <45>   DW_AT_high_pc     : 0x3d
    <4d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <4f>   DW_AT_GNU_all_tail_call_sites: 1
    <4f>   DW_AT_sibling     : <0x71>
 <2><53>: Abbrev Number: 3 (DW_TAG_formal_parameter)
    <54>   DW_AT_name        : (indirect string, offset: 0x1d): argc
    <58>   DW_AT_decl_file   : 1
    <59>   DW_AT_decl_line   : 13
    <5a>   DW_AT_type        : <0x78>
    <5e>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><61>: Abbrev Number: 3 (DW_TAG_formal_parameter)
    <62>   DW_AT_name        : (indirect string, offset: 0x157): argv
    <66>   DW_AT_decl_file   : 1
    <67>   DW_AT_decl_line   : 13
    <68>   DW_AT_type        : <0x7d>
    <6c>   DW_AT_location    : 3 byte block: 91 60 6 	(DW_OP_fbreg: -32; DW_OP_deref)
 <2><70>: Abbrev Number: 0
 <1><71>: Abbrev Number: 4 (DW_TAG_base_type)
    <72>   DW_AT_byte_size   : 4
    <73>   DW_AT_encoding    : 5	(signed)
    <74>   DW_AT_name        : (indirect string, offset: 0x9e): integer(kind=4)
 <1><78>: Abbrev Number: 5 (DW_TAG_const_type)
    <79>   DW_AT_type        : <0x71>
 <1><7d>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <7e>   DW_AT_byte_size   : 8
    <7f>   DW_AT_type        : <0x83>
 <1><83>: Abbrev Number: 4 (DW_TAG_base_type)
    <84>   DW_AT_byte_size   : 1
    <85>   DW_AT_encoding    : 8	(unsigned char)
    <86>   DW_AT_name        : (indirect string, offset: 0x0): character(kind=1)
 <1><8a>: Abbrev Number: 7 (DW_TAG_subprogram)
    <8b>   DW_AT_name        : (indirect string, offset: 0x12): mult_reals
    <8f>   DW_AT_decl_file   : 1
    <90>   DW_AT_decl_line   : 1
    <91>   DW_AT_main_subprogram: 1
    <91>   DW_AT_calling_convention: 2	(program)
    <92>   DW_AT_low_pc      : 0x0
    <9a>   DW_AT_high_pc     : 0x30
    <a2>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <a4>   DW_AT_GNU_all_call_sites: 1
    <a4>   DW_AT_sibling     : <0xcd>
 <2><a8>: Abbrev Number: 8 (DW_TAG_variable)
    <a9>   DW_AT_name        : a
    <ab>   DW_AT_decl_file   : 1
    <ac>   DW_AT_decl_line   : 5
    <ad>   DW_AT_type        : <0xcd>
    <b1>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><b4>: Abbrev Number: 8 (DW_TAG_variable)
    <b5>   DW_AT_name        : b
    <b7>   DW_AT_decl_file   : 1
    <b8>   DW_AT_decl_line   : 5
    <b9>   DW_AT_type        : <0xcd>
    <bd>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><c0>: Abbrev Number: 8 (DW_TAG_variable)
    <c1>   DW_AT_name        : c
    <c3>   DW_AT_decl_file   : 1
    <c4>   DW_AT_decl_line   : 5
    <c5>   DW_AT_type        : <0xcd>
    <c9>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><cc>: Abbrev Number: 0
 <1><cd>: Abbrev Number: 4 (DW_TAG_base_type)
    <ce>   DW_AT_byte_size   : 4
    <cf>   DW_AT_encoding    : 4	(float)
    <d0>   DW_AT_name        : (indirect string, offset: 0x14a): real(kind=4)
 <1><d4>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_identifier_case DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_subprogram    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_main_subprogram DW_FORM_flag_present
    DW_AT_calling_convention DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Contents of the .debug_aranges section:

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    0000000000000000 000000000000006d 
    0000000000000000 0000000000000000 

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: mult_reals.f08
 DW_MACRO_end_file

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      66
  DWARF Version:               2
  Prologue Length:             37
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table is empty.

 The File Name Table (offset 0x1c):
  Entry	Dir	Time	Size	Name
  1	0	0	0	mult_reals.f08

 Line Number Statements:
  [0x0000002f]  Extended opcode 2: set Address to 0x0
  [0x0000003a]  Copy
  [0x0000003b]  Special opcode 67: advance Address by 4 to 0x4 and Line by 6 to 7
  [0x0000003c]  Special opcode 189: advance Address by 13 to 0x11 and Line by 2 to 9
  [0x0000003d]  Special opcode 189: advance Address by 13 to 0x1e and Line by 2 to 11
  [0x0000003e]  Special opcode 217: advance Address by 15 to 0x2d and Line by 2 to 13
  [0x0000003f]  Special opcode 47: advance Address by 3 to 0x30 and Line by 0 to 13
  [0x00000040]  Special opcode 215: advance Address by 15 to 0x3f and Line by 0 to 13
  [0x00000041]  Advance PC by 46 to 0x6d
  [0x00000043]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 63686172 61637465 72286b69 6e643d31 character(kind=1
  0x00000010 29006d75 6c745f72 65616c73 00617267 ).mult_reals.arg
  0x00000020 6300474e 5520466f 72747261 6e323030 c.GNU Fortran200
  0x00000030 3820372e 332e3020 2d6d7475 6e653d67 8 7.3.0 -mtune=g
  0x00000040 656e6572 6963202d 6d617263 683d7838 eneric -march=x8
  0x00000050 362d3634 202d6767 64623320 2d66696e 6-64 -ggdb3 -fin
  0x00000060 7472696e 7369632d 6d6f6475 6c65732d trinsic-modules-
  0x00000070 70617468 202f7573 722f6c69 622f6763 path /usr/lib/gc
  0x00000080 632f7838 365f3634 2d6c696e 75782d67 c/x86_64-linux-g
  0x00000090 6e752f37 2f66696e 636c7564 6500696e nu/7/finclude.in
  0x000000a0 74656765 72286b69 6e643d34 29006d61 teger(kind=4).ma
  0x000000b0 696e006d 756c745f 7265616c 732e6630 in.mult_reals.f0
  0x000000c0 38002f68 6f6d652f 7562756e 74752f45 8./home/ubuntu/E
  0x000000d0 6e67696e 65657269 6e672f50 726f6772 ngineering/Progr
  0x000000e0 616d6d69 6e672f44 69736173 73656d62 amming/Disassemb
  0x000000f0 6c696e67 2d42696e 61726965 732f466f ling-Binaries/Fo
  0x00000100 72747261 6e2f496e 74656c5f 61726368 rtran/Intel_arch
  0x00000110 69746563 74757265 2f414d44 36342f52 itecture/AMD64/R
  0x00000120 65616c5f 4f706572 6174696f 6e732f4d eal_Operations/M
  0x00000130 756c745f 5265616c 732f5769 74685f44 ult_Reals/With_D
  0x00000140 65627567 5f496e66 6f007265 616c286b ebug_Info.real(k
  0x00000150 696e643d 34290061 72677600          ind=4).argv.

Contents of the .eh_frame section:


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000018 000000000000001c 0000001c FDE cie=00000000 pc=0000000000000000..0000000000000030
  DW_CFA_advance_loc: 1 to 0000000000000001
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000000004
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 43 to 000000000000002f
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000038 000000000000001c 0000003c FDE cie=00000000 pc=0000000000000030..000000000000006d
  DW_CFA_advance_loc: 1 to 0000000000000031
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000000034
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 56 to 000000000000006c
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop


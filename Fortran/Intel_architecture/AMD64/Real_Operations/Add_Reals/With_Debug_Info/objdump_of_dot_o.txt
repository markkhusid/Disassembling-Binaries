
add_reals.o:     file format elf64-x86-64
add_reals.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         0000006d  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  000000ad  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  000000ad  2**0
                  ALLOC
  3 .rodata       00000024  0000000000000000  0000000000000000  000000b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .debug_info   000000d5  0000000000000000  0000000000000000  000000d4  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_abbrev 00000086  0000000000000000  0000000000000000  000001a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000030  0000000000000000  0000000000000000  0000022f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_macro  0000000c  0000000000000000  0000000000000000  0000025f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_line   00000045  0000000000000000  0000000000000000  0000026b  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  9 .debug_str    0000014d  0000000000000000  0000000000000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      0000002b  0000000000000000  0000000000000000  000003fd  2**0
                  CONTENTS, READONLY
 11 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00000428  2**0
                  CONTENTS, READONLY
 12 .eh_frame     00000058  0000000000000000  0000000000000000  00000428  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 add_reals.f08
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l     F .text	0000000000000030 MAIN__
0000000000000000 l     O .rodata	000000000000001c options.0.3504
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_macro	0000000000000000 .debug_macro
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000030 g     F .text	000000000000003d main
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_
0000000000000000         *UND*	0000000000000000 _gfortran_set_args
0000000000000000         *UND*	0000000000000000 _gfortran_set_options



Disassembly of section .text:

0000000000000000 <MAIN__>:
program add_reals
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
        
        implicit none

        real :: a, b, c

        a = 10.0
   4:	f3 0f 10 05 00 00 00 	movss  xmm0,DWORD PTR [rip+0x0]        # c <MAIN__+0xc>
   b:	00 
			8: R_X86_64_PC32	.rodata+0x18
   c:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0

        b = 2.0
  11:	f3 0f 10 05 00 00 00 	movss  xmm0,DWORD PTR [rip+0x0]        # 19 <MAIN__+0x19>
  18:	00 
			15: R_X86_64_PC32	.rodata+0x1c
  19:	f3 0f 11 45 f8       	movss  DWORD PTR [rbp-0x8],xmm0

        c = b + a
  1e:	f3 0f 10 45 f8       	movss  xmm0,DWORD PTR [rbp-0x8]
  23:	f3 0f 58 45 fc       	addss  xmm0,DWORD PTR [rbp-0x4]
  28:	f3 0f 11 45 f4       	movss  DWORD PTR [rbp-0xc],xmm0

end program add_reals
  2d:	90                   	nop
  2e:	5d                   	pop    rbp
  2f:	c3                   	ret    

0000000000000030 <main>:
  30:	55                   	push   rbp
  31:	48 89 e5             	mov    rbp,rsp
  34:	48 83 ec 10          	sub    rsp,0x10
  38:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  3b:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  3f:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  43:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  46:	48 89 d6             	mov    rsi,rdx
  49:	89 c7                	mov    edi,eax
  4b:	e8 00 00 00 00       	call   50 <main+0x20>
			4c: R_X86_64_PLT32	_gfortran_set_args-0x4
  50:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 57 <main+0x27>
			53: R_X86_64_PC32	.rodata-0x4
  57:	bf 07 00 00 00       	mov    edi,0x7
  5c:	e8 00 00 00 00       	call   61 <main+0x31>
			5d: R_X86_64_PLT32	_gfortran_set_options-0x4
  61:	e8 9a ff ff ff       	call   0 <MAIN__>
  66:	b8 00 00 00 00       	mov    eax,0x0
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .rodata:

0000000000000000 <options.0.3504>:
   0:	44 00 00             	add    BYTE PTR [rax],r8b
   3:	00 ff                	add    bh,bh
   5:	03 00                	add    eax,DWORD PTR [rax]
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 01                	add    BYTE PTR [rcx],al
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 1f                	add    BYTE PTR [rdi],bl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 00                	add    BYTE PTR [rax],al
  1d:	00 20                	add    BYTE PTR [rax],ah
  1f:	41 00 00             	add    BYTE PTR [r8],al
  22:	00                   	.byte 0x0
  23:	40                   	rex

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
program add_reals
   0:	d1 00                	rol    DWORD PTR [rax],1
   2:	00 00                	add    BYTE PTR [rax],al
        a = 10.0
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_abbrev
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	00 00                	add    BYTE PTR [rax],al
			c: R_X86_64_32	.debug_str+0x26
   e:	00 00                	add    BYTE PTR [rax],al
  10:	0e                   	(bad)  
        b = 2.0
  11:	02 00                	add    al,BYTE PTR [rax]
			12: R_X86_64_32	.debug_str+0x13f
	...
			16: R_X86_64_32	.debug_str+0xb7
			1a: R_X86_64_64	.text
        c = b + a
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
	...
			2a: R_X86_64_32	.debug_line
			2e: R_X86_64_32	.debug_macro
end program add_reals
  30:	00 00                	add    BYTE PTR [rax],al
  32:	02 00                	add    al,BYTE PTR [rax]
			33: R_X86_64_32	.debug_str+0xb2
  34:	00 00                	add    BYTE PTR [rax],al
  36:	00 01                	add    BYTE PTR [rcx],al
  38:	0d 71 00 00 00       	or     eax,0x71
	...
			3d: R_X86_64_64	.text+0x30
  45:	3d 00 00 00 00       	cmp    eax,0x0
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	00 01                	add    BYTE PTR [rcx],al
  4e:	9c                   	pushf  
  4f:	71 00                	jno    51 <.debug_info+0x51>
  51:	00 00                	add    BYTE PTR [rax],al
  53:	03 00                	add    eax,DWORD PTR [rax]
			54: R_X86_64_32	.debug_str+0x21
  55:	00 00                	add    BYTE PTR [rax],al
  57:	00 01                	add    BYTE PTR [rcx],al
  59:	0d 78 00 00 00       	or     eax,0x78
  5e:	02 91 6c 03 00 00    	add    dl,BYTE PTR [rcx+0x36c]
			62: R_X86_64_32	.debug_str+0xa
  64:	00 00                	add    BYTE PTR [rax],al
  66:	01 0d 7d 00 00 00    	add    DWORD PTR [rip+0x7d],ecx        # e9 <main+0xb9>
  6c:	03 91 60 06 00 04    	add    edx,DWORD PTR [rcx+0x4000660]
  72:	04 05                	add    al,0x5
  74:	00 00                	add    BYTE PTR [rax],al
			74: R_X86_64_32	.debug_str+0xa2
  76:	00 00                	add    BYTE PTR [rax],al
  78:	05 71 00 00 00       	add    eax,0x71
  7d:	06                   	(bad)  
  7e:	08 83 00 00 00 04    	or     BYTE PTR [rbx+0x4000000],al
  84:	01 08                	add    DWORD PTR [rax],ecx
  86:	00 00                	add    BYTE PTR [rax],al
			86: R_X86_64_32	.debug_str+0xf
  88:	00 00                	add    BYTE PTR [rax],al
  8a:	07                   	(bad)  
  8b:	00 00                	add    BYTE PTR [rax],al
			8b: R_X86_64_32	.debug_str
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	01 01                	add    DWORD PTR [rcx],eax
  91:	02 00                	add    al,BYTE PTR [rax]
			92: R_X86_64_64	.text
  93:	00 00                	add    BYTE PTR [rax],al
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 00                	add    BYTE PTR [rax],al
  99:	00 30                	add    BYTE PTR [rax],dh
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 00                	add    BYTE PTR [rax],al
  a1:	00 01                	add    BYTE PTR [rcx],al
  a3:	9c                   	pushf  
  a4:	cd 00                	int    0x0
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	08 61 00             	or     BYTE PTR [rcx+0x0],ah
  ab:	01 05 cd 00 00 00    	add    DWORD PTR [rip+0xcd],eax        # 17e <main+0x14e>
  b1:	02 91 6c 08 62 00    	add    dl,BYTE PTR [rcx+0x62086c]
  b7:	01 05 cd 00 00 00    	add    DWORD PTR [rip+0xcd],eax        # 18a <main+0x15a>
  bd:	02 91 68 08 63 00    	add    dl,BYTE PTR [rcx+0x630868]
  c3:	01 05 cd 00 00 00    	add    DWORD PTR [rip+0xcd],eax        # 196 <main+0x166>
  c9:	02 91 64 00 04 04    	add    dl,BYTE PTR [rcx+0x4040064]
  cf:	04 00                	add    al,0x0
			d0: R_X86_64_32	.debug_str+0x132
  d1:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
program add_reals
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 42    	add    DWORD PTR [rip+0x420b130e],esp        # 420b1316 <main+0x420b12e6>
        a = 10.0
   8:	0b 03                	or     eax,DWORD PTR [rbx]
   a:	0e                   	(bad)  
   b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   d:	11 01                	adc    DWORD PTR [rcx],eax
   f:	12 07                	adc    al,BYTE PTR [rdi]
        b = 2.0
  11:	10 17                	adc    BYTE PTR [rdi],dl
  13:	99                   	cdq    
  14:	42 17                	rex.X (bad) 
  16:	00 00                	add    BYTE PTR [rax],al
  18:	02 2e                	add    ch,BYTE PTR [rsi]
  1a:	01 3f                	add    DWORD PTR [rdi],edi
  1c:	19 03                	sbb    DWORD PTR [rbx],eax
        c = b + a
  1e:	0e                   	(bad)  
  1f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  21:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  23:	49 13 11             	adc    rdx,QWORD PTR [r9]
  26:	01 12                	add    DWORD PTR [rdx],edx
  28:	07                   	(bad)  
  29:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
end program add_reals
  30:	00 00                	add    BYTE PTR [rax],al
  32:	03 05 00 03 0e 3a    	add    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e0338 <main+0x3a0e0308>
  38:	0b 3b                	or     edi,DWORD PTR [rbx]
  3a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  3d:	02 18                	add    bl,BYTE PTR [rax]
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	04 24                	add    al,0x24
  43:	00 0b                	add    BYTE PTR [rbx],cl
  45:	0b 3e                	or     edi,DWORD PTR [rsi]
  47:	0b 03                	or     eax,DWORD PTR [rbx]
  49:	0e                   	(bad)  
  4a:	00 00                	add    BYTE PTR [rax],al
  4c:	05 26 00 49 13       	add    eax,0x13490026
  51:	00 00                	add    BYTE PTR [rax],al
  53:	06                   	(bad)  
  54:	0f 00 0b             	str    WORD PTR [rbx]
  57:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	07                   	(bad)  
  5d:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
  60:	0e                   	(bad)  
  61:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  63:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  65:	6a 19                	push   0x19
  67:	36 0b 11             	or     edx,DWORD PTR ss:[rcx]
  6a:	01 12                	add    DWORD PTR [rdx],edx
  6c:	07                   	(bad)  
  6d:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  74:	00 00                	add    BYTE PTR [rax],al
  76:	08 34 00             	or     BYTE PTR [rax+rax*1],dh
  79:	03 08                	add    ecx,DWORD PTR [rax]
  7b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  7d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  7f:	49 13 02             	adc    rax,QWORD PTR [r10]
  82:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
program add_reals
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
        a = 10.0
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
			6: R_X86_64_32	.debug_info
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
			10: R_X86_64_64	.text
        b = 2.0
  18:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
program add_reals
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [rax]
			3: R_X86_64_32	.debug_line
        a = 10.0
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 03                	add    BYTE PTR [rbx],al
   8:	00 01                	add    BYTE PTR [rcx],al
   a:	04 00                	add    al,0x0

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
program add_reals
   0:	41 00 00             	add    BYTE PTR [r8],al
   3:	00 02                	add    BYTE PTR [rdx],al
        a = 10.0
   5:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
   8:	00 00                	add    BYTE PTR [rax],al
   a:	01 01                	add    DWORD PTR [rcx],eax
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
        b = 2.0
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
        c = b + a
  1e:	64 5f                	fs pop rdi
  20:	72 65                	jb     87 <main+0x57>
  22:	61                   	(bad)  
  23:	6c                   	ins    BYTE PTR es:[rdi],dx
  24:	73 2e                	jae    54 <main+0x24>
  26:	66 30 38             	data16 xor BYTE PTR [rax],bh
  29:	00 00                	add    BYTE PTR [rax],al
  2b:	00 00                	add    BYTE PTR [rax],al
end program add_reals
  2d:	00 00                	add    BYTE PTR [rax],al
  2f:	09 02                	or     DWORD PTR [rdx],eax
	...
			31: R_X86_64_64	.text
  39:	01 50 ca             	add    DWORD PTR [rax-0x36],edx
  3c:	ca e6 3c             	retf   0x3ce6
  3f:	e4 02                	in     al,0x2
  41:	2e 00 01             	add    BYTE PTR cs:[rcx],al
  44:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
program add_reals
   0:	61                   	(bad)  
   1:	64 64 5f             	fs fs pop rdi
        a = 10.0
   4:	72 65                	jb     6b <.debug_str+0x6b>
   6:	61                   	(bad)  
   7:	6c                   	ins    BYTE PTR es:[rdi],dx
   8:	73 00                	jae    a <.debug_str+0xa>
   a:	61                   	(bad)  
   b:	72 67                	jb     74 <.debug_str+0x74>
   d:	76 00                	jbe    f <.debug_str+0xf>
   f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
        b = 2.0
  12:	72 61                	jb     75 <.debug_str+0x75>
  14:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  18:	28 6b 69             	sub    BYTE PTR [rbx+0x69],ch
  1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  1c:	64 3d 31 29 00 61    	fs cmp eax,0x61002931
        c = b + a
  22:	72 67                	jb     8b <.debug_str+0x8b>
  24:	63 00                	movsxd eax,DWORD PTR [rax]
  26:	47                   	rex.RXB
  27:	4e 55                	rex.WRX push rbp
  29:	20 46 6f             	and    BYTE PTR [rsi+0x6f],al
  2c:	72 74                	jb     a2 <.debug_str+0xa2>
end program add_reals
  2e:	72 61                	jb     91 <.debug_str+0x91>
  30:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  31:	32 30                	xor    dh,BYTE PTR [rax]
  33:	30 38                	xor    BYTE PTR [rax],bh
  35:	20 37                	and    BYTE PTR [rdi],dh
  37:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  3a:	30 20                	xor    BYTE PTR [rax],ah
  3c:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  41:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  47:	72 69                	jb     b2 <.debug_str+0xb2>
  49:	63 20                	movsxd esp,DWORD PTR [rax]
  4b:	2d 6d 61 72 63       	sub    eax,0x6372616d
  50:	68 3d 78 38 36       	push   0x3638783d
  55:	2d 36 34 20 2d       	sub    eax,0x2d203436
  5a:	67 67 64 62 33       	addr32 addr32 fs (bad) 
  5f:	20 2d 66 69 6e 74    	and    BYTE PTR [rip+0x746e6966],ch        # 746e69cb <main+0x746e699b>
  65:	72 69                	jb     d0 <.debug_str+0xd0>
  67:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  68:	73 69                	jae    d3 <.debug_str+0xd3>
  6a:	63 2d 6d 6f 64 75    	movsxd ebp,DWORD PTR [rip+0x75646f6d]        # 75646fdd <main+0x75646fad>
  70:	6c                   	ins    BYTE PTR es:[rdi],dx
  71:	65 73 2d             	gs jae a1 <.debug_str+0xa1>
  74:	70 61                	jo     d7 <.debug_str+0xd7>
  76:	74 68                	je     e0 <.debug_str+0xe0>
  78:	20 2f                	and    BYTE PTR [rdi],ch
  7a:	75 73                	jne    ef <.debug_str+0xef>
  7c:	72 2f                	jb     ad <.debug_str+0xad>
  7e:	6c                   	ins    BYTE PTR es:[rdi],dx
  7f:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  86:	78 38                	js     c0 <.debug_str+0xc0>
  88:	36 5f                	ss pop rdi
  8a:	36 34 2d             	ss xor al,0x2d
  8d:	6c                   	ins    BYTE PTR es:[rdi],dx
  8e:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  95:	75 2f                	jne    c6 <.debug_str+0xc6>
  97:	37                   	(bad)  
  98:	2f                   	(bad)  
  99:	66 69 6e 63 6c 75    	imul   bp,WORD PTR [rsi+0x63],0x756c
  9f:	64 65 00 69 6e       	fs add BYTE PTR gs:[rcx+0x6e],ch
  a4:	74 65                	je     10b <.debug_str+0x10b>
  a6:	67 65 72 28          	addr32 gs jb d2 <.debug_str+0xd2>
  aa:	6b 69 6e 64          	imul   ebp,DWORD PTR [rcx+0x6e],0x64
  ae:	3d 34 29 00 6d       	cmp    eax,0x6d002934
  b3:	61                   	(bad)  
  b4:	69 6e 00 2f 68 6f 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d6f682f
  bb:	65 2f                	gs (bad) 
  bd:	75 62                	jne    121 <.debug_str+0x121>
  bf:	75 6e                	jne    12f <.debug_str+0x12f>
  c1:	74 75                	je     138 <.debug_str+0x138>
  c3:	2f                   	(bad)  
  c4:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
  c6:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [esi+0x65],0x6e697265
  cd:	6e 
  ce:	67 2f                	addr32 (bad) 
  d0:	44 69 73 61 73 73 65 	imul   r14d,DWORD PTR [rbx+0x61],0x6d657373
  d7:	6d 
  d8:	62                   	(bad)  
  d9:	6c                   	ins    BYTE PTR es:[rdi],dx
  da:	69 6e 67 2d 42 69 6e 	imul   ebp,DWORD PTR [rsi+0x67],0x6e69422d
  e1:	61                   	(bad)  
  e2:	72 69                	jb     14d <main+0x11d>
  e4:	65 73 2f             	gs jae 116 <.debug_str+0x116>
  e7:	46 6f                	rex.RX outs dx,DWORD PTR ds:[rsi]
  e9:	72 74                	jb     15f <main+0x12f>
  eb:	72 61                	jb     14e <main+0x11e>
  ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  ee:	2f                   	(bad)  
  ef:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
  f1:	74 65                	je     158 <main+0x128>
  f3:	6c                   	ins    BYTE PTR es:[rdi],dx
  f4:	5f                   	pop    rdi
  f5:	61                   	(bad)  
  f6:	72 63                	jb     15b <main+0x12b>
  f8:	68 69 74 65 63       	push   0x63657469
  fd:	74 75                	je     174 <main+0x144>
  ff:	72 65                	jb     166 <main+0x136>
 101:	2f                   	(bad)  
 102:	41                   	rex.B
 103:	4d                   	rex.WRB
 104:	44                   	rex.R
 105:	36 34 2f             	ss xor al,0x2f
 108:	52                   	push   rdx
 109:	65 61                	gs (bad) 
 10b:	6c                   	ins    BYTE PTR es:[rdi],dx
 10c:	5f                   	pop    rdi
 10d:	4f 70 65             	rex.WRXB jo 175 <main+0x145>
 110:	72 61                	jb     173 <main+0x143>
 112:	74 69                	je     17d <main+0x14d>
 114:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 115:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 116:	73 2f                	jae    147 <.debug_str+0x147>
 118:	41                   	rex.B
 119:	64 64 5f             	fs fs pop rdi
 11c:	52                   	push   rdx
 11d:	65 61                	gs (bad) 
 11f:	6c                   	ins    BYTE PTR es:[rdi],dx
 120:	73 2f                	jae    151 <main+0x121>
 122:	57                   	push   rdi
 123:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x75626544
 12a:	75 
 12b:	67 5f                	addr32 pop rdi
 12d:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
 12f:	66 6f                	outs   dx,WORD PTR ds:[rsi]
 131:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 134:	61                   	(bad)  
 135:	6c                   	ins    BYTE PTR es:[rdi],dx
 136:	28 6b 69             	sub    BYTE PTR [rbx+0x69],ch
 139:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 13a:	64 3d 34 29 00 61    	fs cmp eax,0x61002934
 140:	64 64 5f             	fs fs pop rdi
 143:	72 65                	jb     1aa <main+0x17a>
 145:	61                   	(bad)  
 146:	6c                   	ins    BYTE PTR es:[rdi],dx
 147:	73 2e                	jae    177 <main+0x147>
 149:	66 30 38             	data16 xor BYTE PTR [rax],bh
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
program add_reals
   0:	00 47 43             	add    BYTE PTR [rdi+0x43],al
   3:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
        a = 10.0
   6:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   9:	75 6e                	jne    79 <main+0x49>
   b:	74 75                	je     82 <main+0x52>
   d:	20 37                	and    BYTE PTR [rdi],dh
   f:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
        b = 2.0
  12:	30 2d 32 37 75 62    	xor    BYTE PTR [rip+0x62753732],ch        # 6275374a <main+0x6275371a>
  18:	75 6e                	jne    88 <main+0x58>
  1a:	74 75                	je     91 <main+0x61>
  1c:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
        c = b + a
  1f:	38 2e                	cmp    BYTE PTR [rsi],ch
  21:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  24:	20 37                	and    BYTE PTR [rdi],dh
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	00 00                	add    BYTE PTR [rax],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    DWORD PTR [rbx],ebx
  11:	0c 07                	or     al,0x7
  13:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  19:	00 00                	add    BYTE PTR [rax],al
  1b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	00 00                	add    BYTE PTR [rax],al
			20: R_X86_64_PC32	.text
  22:	00 00                	add    BYTE PTR [rax],al
  24:	30 00                	xor    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  31:	6b 0c 07 08          	imul   ecx,DWORD PTR [rdi+rax*1],0x8
  35:	00 00                	add    BYTE PTR [rax],al
  37:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	3c 00                	cmp    al,0x0
  3e:	00 00                	add    BYTE PTR [rax],al
  40:	00 00                	add    BYTE PTR [rax],al
			40: R_X86_64_PC32	.text+0x30
  42:	00 00                	add    BYTE PTR [rax],al
  44:	3d 00 00 00 00       	cmp    eax,0x0
  49:	41 0e                	rex.B (bad) 
  4b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  51:	78 0c                	js     5f <main+0x2f>
  53:	07                   	(bad)  
  54:	08 00                	or     BYTE PTR [rax],al
	...

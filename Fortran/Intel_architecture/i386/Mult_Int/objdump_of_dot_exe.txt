
mult_Fortran_i386:     file format elf32-i386


Disassembly of section .init:

080483a4 <_init>:
 80483a4:	53                   	push   ebx
 80483a5:	83 ec 08             	sub    esp,0x8
 80483a8:	e8 a3 00 00 00       	call   8048450 <__x86.get_pc_thunk.bx>
 80483ad:	81 c3 53 1c 00 00    	add    ebx,0x1c53
 80483b3:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80483b9:	85 c0                	test   eax,eax
 80483bb:	74 05                	je     80483c2 <_init+0x1e>
 80483bd:	e8 4e 00 00 00       	call   8048410 <_gfortran_set_args@plt+0x10>
 80483c2:	83 c4 08             	add    esp,0x8
 80483c5:	5b                   	pop    ebx
 80483c6:	c3                   	ret    

Disassembly of section .plt:

080483d0 <_gfortran_set_options@plt-0x10>:
 80483d0:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 80483d6:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80483dc:	00 00                	add    BYTE PTR [eax],al
	...

080483e0 <_gfortran_set_options@plt>:
 80483e0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483e6:	68 00 00 00 00       	push   0x0
 80483eb:	e9 e0 ff ff ff       	jmp    80483d0 <_init+0x2c>

080483f0 <__libc_start_main@plt>:
 80483f0:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 80483f6:	68 08 00 00 00       	push   0x8
 80483fb:	e9 d0 ff ff ff       	jmp    80483d0 <_init+0x2c>

08048400 <_gfortran_set_args@plt>:
 8048400:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048406:	68 10 00 00 00       	push   0x10
 804840b:	e9 c0 ff ff ff       	jmp    80483d0 <_init+0x2c>

Disassembly of section .plt.got:

08048410 <.plt.got>:
 8048410:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048416:	66 90                	xchg   ax,ax

Disassembly of section .text:

08048420 <_start>:
 8048420:	31 ed                	xor    ebp,ebp
 8048422:	5e                   	pop    esi
 8048423:	89 e1                	mov    ecx,esp
 8048425:	83 e4 f0             	and    esp,0xfffffff0
 8048428:	50                   	push   eax
 8048429:	54                   	push   esp
 804842a:	52                   	push   edx
 804842b:	68 f0 85 04 08       	push   0x80485f0
 8048430:	68 90 85 04 08       	push   0x8048590
 8048435:	51                   	push   ecx
 8048436:	56                   	push   esi
 8048437:	68 3c 85 04 08       	push   0x804853c
 804843c:	e8 af ff ff ff       	call   80483f0 <__libc_start_main@plt>
 8048441:	f4                   	hlt    
 8048442:	66 90                	xchg   ax,ax
 8048444:	66 90                	xchg   ax,ax
 8048446:	66 90                	xchg   ax,ax
 8048448:	66 90                	xchg   ax,ax
 804844a:	66 90                	xchg   ax,ax
 804844c:	66 90                	xchg   ax,ax
 804844e:	66 90                	xchg   ax,ax

08048450 <__x86.get_pc_thunk.bx>:
 8048450:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048453:	c3                   	ret    
 8048454:	66 90                	xchg   ax,ax
 8048456:	66 90                	xchg   ax,ax
 8048458:	66 90                	xchg   ax,ax
 804845a:	66 90                	xchg   ax,ax
 804845c:	66 90                	xchg   ax,ax
 804845e:	66 90                	xchg   ax,ax

08048460 <deregister_tm_clones>:
 8048460:	b8 23 a0 04 08       	mov    eax,0x804a023
 8048465:	2d 20 a0 04 08       	sub    eax,0x804a020
 804846a:	83 f8 06             	cmp    eax,0x6
 804846d:	76 1a                	jbe    8048489 <deregister_tm_clones+0x29>
 804846f:	b8 00 00 00 00       	mov    eax,0x0
 8048474:	85 c0                	test   eax,eax
 8048476:	74 11                	je     8048489 <deregister_tm_clones+0x29>
 8048478:	55                   	push   ebp
 8048479:	89 e5                	mov    ebp,esp
 804847b:	83 ec 14             	sub    esp,0x14
 804847e:	68 20 a0 04 08       	push   0x804a020
 8048483:	ff d0                	call   eax
 8048485:	83 c4 10             	add    esp,0x10
 8048488:	c9                   	leave  
 8048489:	f3 c3                	repz ret 
 804848b:	90                   	nop
 804848c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08048490 <register_tm_clones>:
 8048490:	b8 20 a0 04 08       	mov    eax,0x804a020
 8048495:	2d 20 a0 04 08       	sub    eax,0x804a020
 804849a:	c1 f8 02             	sar    eax,0x2
 804849d:	89 c2                	mov    edx,eax
 804849f:	c1 ea 1f             	shr    edx,0x1f
 80484a2:	01 d0                	add    eax,edx
 80484a4:	d1 f8                	sar    eax,1
 80484a6:	74 1b                	je     80484c3 <register_tm_clones+0x33>
 80484a8:	ba 00 00 00 00       	mov    edx,0x0
 80484ad:	85 d2                	test   edx,edx
 80484af:	74 12                	je     80484c3 <register_tm_clones+0x33>
 80484b1:	55                   	push   ebp
 80484b2:	89 e5                	mov    ebp,esp
 80484b4:	83 ec 10             	sub    esp,0x10
 80484b7:	50                   	push   eax
 80484b8:	68 20 a0 04 08       	push   0x804a020
 80484bd:	ff d2                	call   edx
 80484bf:	83 c4 10             	add    esp,0x10
 80484c2:	c9                   	leave  
 80484c3:	f3 c3                	repz ret 
 80484c5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80484c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484d0 <__do_global_dtors_aux>:
 80484d0:	80 3d 20 a0 04 08 00 	cmp    BYTE PTR ds:0x804a020,0x0
 80484d7:	75 13                	jne    80484ec <__do_global_dtors_aux+0x1c>
 80484d9:	55                   	push   ebp
 80484da:	89 e5                	mov    ebp,esp
 80484dc:	83 ec 08             	sub    esp,0x8
 80484df:	e8 7c ff ff ff       	call   8048460 <deregister_tm_clones>
 80484e4:	c6 05 20 a0 04 08 01 	mov    BYTE PTR ds:0x804a020,0x1
 80484eb:	c9                   	leave  
 80484ec:	f3 c3                	repz ret 
 80484ee:	66 90                	xchg   ax,ax

080484f0 <frame_dummy>:
 80484f0:	b8 08 9f 04 08       	mov    eax,0x8049f08
 80484f5:	8b 10                	mov    edx,DWORD PTR [eax]
 80484f7:	85 d2                	test   edx,edx
 80484f9:	75 05                	jne    8048500 <frame_dummy+0x10>
 80484fb:	eb 93                	jmp    8048490 <register_tm_clones>
 80484fd:	8d 76 00             	lea    esi,[esi+0x0]
 8048500:	ba 00 00 00 00       	mov    edx,0x0
 8048505:	85 d2                	test   edx,edx
 8048507:	74 f2                	je     80484fb <frame_dummy+0xb>
 8048509:	55                   	push   ebp
 804850a:	89 e5                	mov    ebp,esp
 804850c:	83 ec 14             	sub    esp,0x14
 804850f:	50                   	push   eax
 8048510:	ff d2                	call   edx
 8048512:	83 c4 10             	add    esp,0x10
 8048515:	c9                   	leave  
 8048516:	e9 75 ff ff ff       	jmp    8048490 <register_tm_clones>

0804851b <MAIN__>:
 804851b:	55                   	push   ebp
 804851c:	89 e5                	mov    ebp,esp
 804851e:	83 ec 10             	sub    esp,0x10
 8048521:	c7 45 fc 02 00 00 00 	mov    DWORD PTR [ebp-0x4],0x2
 8048528:	c7 45 f8 03 00 00 00 	mov    DWORD PTR [ebp-0x8],0x3
 804852f:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
 8048532:	0f af 45 f8          	imul   eax,DWORD PTR [ebp-0x8]
 8048536:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 8048539:	90                   	nop
 804853a:	c9                   	leave  
 804853b:	c3                   	ret    

0804853c <main>:
 804853c:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8048540:	83 e4 f0             	and    esp,0xfffffff0
 8048543:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048546:	55                   	push   ebp
 8048547:	89 e5                	mov    ebp,esp
 8048549:	51                   	push   ecx
 804854a:	83 ec 04             	sub    esp,0x4
 804854d:	89 c8                	mov    eax,ecx
 804854f:	83 ec 08             	sub    esp,0x8
 8048552:	ff 70 04             	push   DWORD PTR [eax+0x4]
 8048555:	ff 30                	push   DWORD PTR [eax]
 8048557:	e8 a4 fe ff ff       	call   8048400 <_gfortran_set_args@plt>
 804855c:	83 c4 10             	add    esp,0x10
 804855f:	83 ec 08             	sub    esp,0x8
 8048562:	68 40 86 04 08       	push   0x8048640
 8048567:	6a 09                	push   0x9
 8048569:	e8 72 fe ff ff       	call   80483e0 <_gfortran_set_options@plt>
 804856e:	83 c4 10             	add    esp,0x10
 8048571:	e8 a5 ff ff ff       	call   804851b <MAIN__>
 8048576:	b8 00 00 00 00       	mov    eax,0x0
 804857b:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 804857e:	c9                   	leave  
 804857f:	8d 61 fc             	lea    esp,[ecx-0x4]
 8048582:	c3                   	ret    
 8048583:	66 90                	xchg   ax,ax
 8048585:	66 90                	xchg   ax,ax
 8048587:	66 90                	xchg   ax,ax
 8048589:	66 90                	xchg   ax,ax
 804858b:	66 90                	xchg   ax,ax
 804858d:	66 90                	xchg   ax,ax
 804858f:	90                   	nop

08048590 <__libc_csu_init>:
 8048590:	55                   	push   ebp
 8048591:	57                   	push   edi
 8048592:	56                   	push   esi
 8048593:	53                   	push   ebx
 8048594:	e8 b7 fe ff ff       	call   8048450 <__x86.get_pc_thunk.bx>
 8048599:	81 c3 67 1a 00 00    	add    ebx,0x1a67
 804859f:	83 ec 0c             	sub    esp,0xc
 80485a2:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 80485a6:	8d b3 04 ff ff ff    	lea    esi,[ebx-0xfc]
 80485ac:	e8 f3 fd ff ff       	call   80483a4 <_init>
 80485b1:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 80485b7:	29 c6                	sub    esi,eax
 80485b9:	c1 fe 02             	sar    esi,0x2
 80485bc:	85 f6                	test   esi,esi
 80485be:	74 25                	je     80485e5 <__libc_csu_init+0x55>
 80485c0:	31 ff                	xor    edi,edi
 80485c2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80485c8:	83 ec 04             	sub    esp,0x4
 80485cb:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80485cf:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80485d3:	55                   	push   ebp
 80485d4:	ff 94 bb 00 ff ff ff 	call   DWORD PTR [ebx+edi*4-0x100]
 80485db:	83 c7 01             	add    edi,0x1
 80485de:	83 c4 10             	add    esp,0x10
 80485e1:	39 f7                	cmp    edi,esi
 80485e3:	75 e3                	jne    80485c8 <__libc_csu_init+0x38>
 80485e5:	83 c4 0c             	add    esp,0xc
 80485e8:	5b                   	pop    ebx
 80485e9:	5e                   	pop    esi
 80485ea:	5f                   	pop    edi
 80485eb:	5d                   	pop    ebp
 80485ec:	c3                   	ret    
 80485ed:	8d 76 00             	lea    esi,[esi+0x0]

080485f0 <__libc_csu_fini>:
 80485f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080485f4 <_fini>:
 80485f4:	53                   	push   ebx
 80485f5:	83 ec 08             	sub    esp,0x8
 80485f8:	e8 53 fe ff ff       	call   8048450 <__x86.get_pc_thunk.bx>
 80485fd:	81 c3 03 1a 00 00    	add    ebx,0x1a03
 8048603:	83 c4 08             	add    esp,0x8
 8048606:	5b                   	pop    ebx
 8048607:	c3                   	ret    


mult.o:     file format elf32-i386

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .group        00000008  00000000  00000000  00000034  2**2
                  CONTENTS, READONLY, GROUP, LINK_ONCE_DISCARD
  1 .group        00000008  00000000  00000000  0000003c  2**2
                  CONTENTS, READONLY, GROUP, LINK_ONCE_DISCARD
  2 .text         0000007f  00000000  00000000  00000044  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  3 .data         00000000  00000000  00000000  000000c3  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  00000000  00000000  000000c3  2**0
                  ALLOC
  5 .rodata       0000001c  00000000  00000000  000000c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .text.__x86.get_pc_thunk.ax 00000004  00000000  00000000  000000e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.__x86.get_pc_thunk.bx 00000004  00000000  00000000  000000e4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .comment      0000001e  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY
  9 .note.GNU-stack 00000000  00000000  00000000  00000106  2**0
                  CONTENTS, READONLY
 10 .eh_frame     00000094  00000000  00000000  00000108  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .group:

00000000 <.group>:
   0:	01 00                	add    %eax,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	08 00                	or     %al,(%eax)
	...

Disassembly of section .group:

00000000 <.group>:
   0:	01 00                	add    %eax,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	09 00                	or     %eax,(%eax)
	...

Disassembly of section .text:

00000000 <MAIN__>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 10             	sub    $0x10,%esp
   6:	e8 fc ff ff ff       	call   7 <MAIN__+0x7>
   b:	05 01 00 00 00       	add    $0x1,%eax
  10:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%ebp)
  17:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%ebp)
  1e:	8b 45 fc             	mov    -0x4(%ebp),%eax
  21:	0f af 45 f8          	imul   -0x8(%ebp),%eax
  25:	89 45 f4             	mov    %eax,-0xc(%ebp)
  28:	90                   	nop
  29:	c9                   	leave  
  2a:	c3                   	ret    

0000002b <main>:
  2b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  2f:	83 e4 f0             	and    $0xfffffff0,%esp
  32:	ff 71 fc             	pushl  -0x4(%ecx)
  35:	55                   	push   %ebp
  36:	89 e5                	mov    %esp,%ebp
  38:	53                   	push   %ebx
  39:	51                   	push   %ecx
  3a:	e8 fc ff ff ff       	call   3b <main+0x10>
  3f:	81 c3 02 00 00 00    	add    $0x2,%ebx
  45:	89 c8                	mov    %ecx,%eax
  47:	83 ec 08             	sub    $0x8,%esp
  4a:	ff 70 04             	pushl  0x4(%eax)
  4d:	ff 30                	pushl  (%eax)
  4f:	e8 fc ff ff ff       	call   50 <main+0x25>
  54:	83 c4 10             	add    $0x10,%esp
  57:	83 ec 08             	sub    $0x8,%esp
  5a:	8d 83 00 00 00 00    	lea    0x0(%ebx),%eax
  60:	50                   	push   %eax
  61:	6a 07                	push   $0x7
  63:	e8 fc ff ff ff       	call   64 <main+0x39>
  68:	83 c4 10             	add    $0x10,%esp
  6b:	e8 90 ff ff ff       	call   0 <MAIN__>
  70:	b8 00 00 00 00       	mov    $0x0,%eax
  75:	8d 65 f8             	lea    -0x8(%ebp),%esp
  78:	59                   	pop    %ecx
  79:	5b                   	pop    %ebx
  7a:	5d                   	pop    %ebp
  7b:	8d 61 fc             	lea    -0x4(%ecx),%esp
  7e:	c3                   	ret    

Disassembly of section .rodata:

00000000 <options.0.3693>:
   0:	44                   	inc    %esp
   1:	00 00                	add    %al,(%eax)
   3:	00 ff                	add    %bh,%bh
   5:	1f                   	pop    %ds
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	00 00                	add    %al,(%eax)
   c:	01 00                	add    %eax,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	01 00                	add    %eax,(%eax)
  12:	00 00                	add    %al,(%eax)
  14:	00 00                	add    %al,(%eax)
  16:	00 00                	add    %al,(%eax)
  18:	1f                   	pop    %ds
  19:	00 00                	add    %al,(%eax)
	...

Disassembly of section .text.__x86.get_pc_thunk.ax:

00000000 <__x86.get_pc_thunk.ax>:
   0:	8b 04 24             	mov    (%esp),%eax
   3:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.bx:

00000000 <__x86.get_pc_thunk.bx>:
   0:	8b 1c 24             	mov    (%esp),%ebx
   3:	c3                   	ret    

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%edi)
   3:	43                   	inc    %ebx
   4:	3a 20                	cmp    (%eax),%ah
   6:	28 44 65 62          	sub    %al,0x62(%ebp,%eiz,2)
   a:	69 61 6e 20 38 2e 32 	imul   $0x322e3820,0x6e(%ecx),%esp
  11:	2e 30 2d 31 33 29 20 	xor    %ch,%cs:0x20293331
  18:	38 2e                	cmp    %ch,(%esi)
  1a:	32 2e                	xor    (%esi),%ch
  1c:	30 00                	xor    %al,(%eax)

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	00 00                	add    %al,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	01 7a 52             	add    %edi,0x52(%edx)
   b:	00 01                	add    %al,(%ecx)
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    %ebx,(%ebx)
  11:	0c 04                	or     $0x4,%al
  13:	04 88                	add    $0x88,%al
  15:	01 00                	add    %eax,(%eax)
  17:	00 1c 00             	add    %bl,(%eax,%eax,1)
  1a:	00 00                	add    %al,(%eax)
  1c:	1c 00                	sbb    $0x0,%al
  1e:	00 00                	add    %al,(%eax)
  20:	00 00                	add    %al,(%eax)
  22:	00 00                	add    %al,(%eax)
  24:	2b 00                	sub    (%eax),%eax
  26:	00 00                	add    %al,(%eax)
  28:	00 41 0e             	add    %al,0xe(%ecx)
  2b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  31:	67 c5 0c             	lds    (%si),%ecx
  34:	04 04                	add    $0x4,%al
  36:	00 00                	add    %al,(%eax)
  38:	30 00                	xor    %al,(%eax)
  3a:	00 00                	add    %al,(%eax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%eax)
  40:	2b 00                	sub    (%eax),%eax
  42:	00 00                	add    %al,(%eax)
  44:	54                   	push   %esp
  45:	00 00                	add    %al,(%eax)
  47:	00 00                	add    %al,(%eax)
  49:	44                   	inc    %esp
  4a:	0c 01                	or     $0x1,%al
  4c:	00 47 10             	add    %al,0x10(%edi)
  4f:	05 02 75 00 44       	add    $0x44007502,%eax
  54:	0f 03 75 78          	lsl    0x78(%ebp),%esi
  58:	06                   	push   %es
  59:	10 03                	adc    %al,(%ebx)
  5b:	02 75 7c             	add    0x7c(%ebp),%dh
  5e:	7f c1                	jg     21 <.eh_frame+0x21>
  60:	0c 01                	or     $0x1,%al
  62:	00 41 c3             	add    %al,-0x3d(%ecx)
  65:	41                   	inc    %ecx
  66:	c5 43 0c             	lds    0xc(%ebx),%eax
  69:	04 04                	add    $0x4,%al
  6b:	00 10                	add    %dl,(%eax)
  6d:	00 00                	add    %al,(%eax)
  6f:	00 70 00             	add    %dh,0x0(%eax)
  72:	00 00                	add    %al,(%eax)
  74:	00 00                	add    %al,(%eax)
  76:	00 00                	add    %al,(%eax)
  78:	04 00                	add    $0x0,%al
  7a:	00 00                	add    %al,(%eax)
  7c:	00 00                	add    %al,(%eax)
  7e:	00 00                	add    %al,(%eax)
  80:	10 00                	adc    %al,(%eax)
  82:	00 00                	add    %al,(%eax)
  84:	84 00                	test   %al,(%eax)
  86:	00 00                	add    %al,(%eax)
  88:	00 00                	add    %al,(%eax)
  8a:	00 00                	add    %al,(%eax)
  8c:	04 00                	add    $0x0,%al
  8e:	00 00                	add    %al,(%eax)
  90:	00 00                	add    %al,(%eax)
	...


div_int.o:     file format elf32-i386

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .group        00000008  00000000  00000000  00000034  2**2
                  CONTENTS, READONLY, GROUP, LINK_ONCE_DISCARD
  1 .group        00000008  00000000  00000000  0000003c  2**2
                  CONTENTS, READONLY, GROUP, LINK_ONCE_DISCARD
  2 .text         0000007f  00000000  00000000  00000044  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  3 .data         00000000  00000000  00000000  000000c3  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000000  00000000  00000000  000000c3  2**0
                  ALLOC
  5 .rodata       0000001c  00000000  00000000  000000c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .text.__x86.get_pc_thunk.ax 00000004  00000000  00000000  000000e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.__x86.get_pc_thunk.bx 00000004  00000000  00000000  000000e4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .debug_info   000000b2  00000000  00000000  000000e8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  9 .debug_abbrev 00000084  00000000  00000000  0000019a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000020  00000000  00000000  0000021e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 11 .debug_macro  0000000c  00000000  00000000  0000023e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 12 .debug_line   00000040  00000000  00000000  0000024a  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 13 .debug_str    0000012c  00000000  00000000  0000028a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      0000002b  00000000  00000000  000003b6  2**0
                  CONTENTS, READONLY
 15 .note.GNU-stack 00000000  00000000  00000000  000003e1  2**0
                  CONTENTS, READONLY
 16 .eh_frame     00000094  00000000  00000000  000003e4  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 div_int.f08
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002b MAIN__
00000000 l     O .rodata	0000001c options.0.3423
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .text.__x86.get_pc_thunk.ax	00000000 .text.__x86.get_pc_thunk.ax
00000000 l    d  .text.__x86.get_pc_thunk.bx	00000000 .text.__x86.get_pc_thunk.bx
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .group	00000000 .group
00000000 l    d  .group	00000000 .group
00000000 g     F .text.__x86.get_pc_thunk.ax	00000000 .hidden __x86.get_pc_thunk.ax
00000000         *UND*	00000000 _GLOBAL_OFFSET_TABLE_
0000002b g     F .text	00000054 main
00000000 g     F .text.__x86.get_pc_thunk.bx	00000000 .hidden __x86.get_pc_thunk.bx
00000000         *UND*	00000000 _gfortran_set_args
00000000         *UND*	00000000 _gfortran_set_options



Disassembly of section .group:

00000000 <.group>:
   0:	01 00                	add    DWORD PTR [eax],eax
   2:	00 00                	add    BYTE PTR [eax],al
   4:	08 00                	or     BYTE PTR [eax],al
	...

Disassembly of section .group:

00000000 <.group>:
   0:	01 00                	add    DWORD PTR [eax],eax
   2:	00 00                	add    BYTE PTR [eax],al
   4:	09 00                	or     DWORD PTR [eax],eax
	...

Disassembly of section .text:

00000000 <MAIN__>:
   0:	55                   	push   ebp
   1:	89 e5                	mov    ebp,esp
   3:	83 ec 10             	sub    esp,0x10
   6:	e8 fc ff ff ff       	call   7 <MAIN__+0x7>
   b:	05 01 00 00 00       	add    eax,0x1
  10:	c7 45 fc 0a 00 00 00 	mov    DWORD PTR [ebp-0x4],0xa
  17:	c7 45 f8 05 00 00 00 	mov    DWORD PTR [ebp-0x8],0x5
  1e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
  21:	99                   	cdq    
  22:	f7 7d f8             	idiv   DWORD PTR [ebp-0x8]
  25:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  28:	90                   	nop
  29:	c9                   	leave  
  2a:	c3                   	ret    

0000002b <main>:
  2b:	8d 4c 24 04          	lea    ecx,[esp+0x4]
  2f:	83 e4 f0             	and    esp,0xfffffff0
  32:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
  35:	55                   	push   ebp
  36:	89 e5                	mov    ebp,esp
  38:	53                   	push   ebx
  39:	51                   	push   ecx
  3a:	e8 fc ff ff ff       	call   3b <main+0x10>
  3f:	81 c3 02 00 00 00    	add    ebx,0x2
  45:	89 c8                	mov    eax,ecx
  47:	83 ec 08             	sub    esp,0x8
  4a:	ff 70 04             	push   DWORD PTR [eax+0x4]
  4d:	ff 30                	push   DWORD PTR [eax]
  4f:	e8 fc ff ff ff       	call   50 <main+0x25>
  54:	83 c4 10             	add    esp,0x10
  57:	83 ec 08             	sub    esp,0x8
  5a:	8d 83 00 00 00 00    	lea    eax,[ebx+0x0]
  60:	50                   	push   eax
  61:	6a 07                	push   0x7
  63:	e8 fc ff ff ff       	call   64 <main+0x39>
  68:	83 c4 10             	add    esp,0x10
  6b:	e8 90 ff ff ff       	call   0 <MAIN__>
  70:	b8 00 00 00 00       	mov    eax,0x0
  75:	8d 65 f8             	lea    esp,[ebp-0x8]
  78:	59                   	pop    ecx
  79:	5b                   	pop    ebx
  7a:	5d                   	pop    ebp
  7b:	8d 61 fc             	lea    esp,[ecx-0x4]
  7e:	c3                   	ret    

Disassembly of section .rodata:

00000000 <options.0.3423>:
   0:	44                   	inc    esp
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 ff                	add    bh,bh
   5:	03 00                	add    eax,DWORD PTR [eax]
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 00                	add    BYTE PTR [eax],al
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	00 00                	add    BYTE PTR [eax],al
   f:	00 01                	add    BYTE PTR [ecx],al
  11:	00 00                	add    BYTE PTR [eax],al
  13:	00 00                	add    BYTE PTR [eax],al
  15:	00 00                	add    BYTE PTR [eax],al
  17:	00 1f                	add    BYTE PTR [edi],bl
  19:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .text.__x86.get_pc_thunk.ax:

00000000 <__x86.get_pc_thunk.ax>:
   0:	8b 04 24             	mov    eax,DWORD PTR [esp]
   3:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.bx:

00000000 <__x86.get_pc_thunk.bx>:
   0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
   3:	c3                   	ret    

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	ae                   	scas   al,BYTE PTR es:[edi]
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 01                	add    al,0x1
   c:	a8 00                	test   al,0x0
   e:	00 00                	add    BYTE PTR [eax],al
  10:	0e                   	push   cs
  11:	02 97 00 00 00 2f    	add    dl,BYTE PTR [edi+0x2f000000]
  17:	00 00                	add    BYTE PTR [eax],al
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	00 00                	add    BYTE PTR [eax],al
  1d:	00 7f 00             	add    BYTE PTR [edi+0x0],bh
	...
  28:	00 00                	add    BYTE PTR [eax],al
  2a:	02 a3 00 00 00 01    	add    ah,BYTE PTR [ebx+0x1000000]
  30:	0c 61                	or     al,0x61
  32:	00 00                	add    BYTE PTR [eax],al
  34:	00 2b                	add    BYTE PTR [ebx],ch
  36:	00 00                	add    BYTE PTR [eax],al
  38:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
  3c:	00 01                	add    BYTE PTR [ecx],al
  3e:	9c                   	pushf  
  3f:	61                   	popa   
  40:	00 00                	add    BYTE PTR [eax],al
  42:	00 03                	add    BYTE PTR [ebx],al
  44:	2a 00                	sub    al,BYTE PTR [eax]
  46:	00 00                	add    BYTE PTR [eax],al
  48:	01 0c 68             	add    DWORD PTR [eax+ebp*2],ecx
  4b:	00 00                	add    BYTE PTR [eax],al
  4d:	00 02                	add    BYTE PTR [edx],al
  4f:	91                   	xchg   ecx,eax
  50:	00 03                	add    BYTE PTR [ebx],al
  52:	27                   	daa    
  53:	01 00                	add    DWORD PTR [eax],eax
  55:	00 01                	add    BYTE PTR [ecx],al
  57:	0c 6d                	or     al,0x6d
  59:	00 00                	add    BYTE PTR [eax],al
  5b:	00 03                	add    BYTE PTR [ebx],al
  5d:	91                   	xchg   ecx,eax
  5e:	04 06                	add    al,0x6
  60:	00 04 04             	add    BYTE PTR [esp+eax*1],al
  63:	05 00 00 00 00       	add    eax,0x0
  68:	05 61 00 00 00       	add    eax,0x61
  6d:	06                   	push   es
  6e:	04 73                	add    al,0x73
  70:	00 00                	add    BYTE PTR [eax],al
  72:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
  75:	08 18                	or     BYTE PTR [eax],bl
  77:	00 00                	add    BYTE PTR [eax],al
  79:	00 07                	add    BYTE PTR [edi],al
  7b:	10 00                	adc    BYTE PTR [eax],al
  7d:	00 00                	add    BYTE PTR [eax],al
  7f:	01 01                	add    DWORD PTR [ecx],eax
  81:	02 00                	add    al,BYTE PTR [eax]
  83:	00 00                	add    BYTE PTR [eax],al
  85:	00 2b                	add    BYTE PTR [ebx],ch
  87:	00 00                	add    BYTE PTR [eax],al
  89:	00 01                	add    BYTE PTR [ecx],al
  8b:	9c                   	pushf  
  8c:	08 61 00             	or     BYTE PTR [ecx+0x0],ah
  8f:	01 05 61 00 00 00    	add    DWORD PTR ds:0x61,eax
  95:	02 91 74 08 62 00    	add    dl,BYTE PTR [ecx+0x620874]
  9b:	01 05 61 00 00 00    	add    DWORD PTR ds:0x61,eax
  a1:	02 91 70 08 63 00    	add    dl,BYTE PTR [ecx+0x630870]
  a7:	01 05 61 00 00 00    	add    DWORD PTR ds:0x61,eax
  ad:	02                   	.byte 0x2
  ae:	91                   	xchg   ecx,eax
  af:	6c                   	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 42    	add    DWORD PTR ds:0x420b130e,esp
   8:	0b 03                	or     eax,DWORD PTR [ebx]
   a:	0e                   	push   cs
   b:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   d:	11 01                	adc    DWORD PTR [ecx],eax
   f:	12 06                	adc    al,BYTE PTR [esi]
  11:	10 17                	adc    BYTE PTR [edi],dl
  13:	99                   	cdq    
  14:	42                   	inc    edx
  15:	17                   	pop    ss
  16:	00 00                	add    BYTE PTR [eax],al
  18:	02 2e                	add    ch,BYTE PTR [esi]
  1a:	01 3f                	add    DWORD PTR [edi],edi
  1c:	19 03                	sbb    DWORD PTR [ebx],eax
  1e:	0e                   	push   cs
  1f:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  21:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  23:	49                   	dec    ecx
  24:	13 11                	adc    edx,DWORD PTR [ecx]
  26:	01 12                	add    DWORD PTR [edx],edx
  28:	06                   	push   es
  29:	40                   	inc    eax
  2a:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
  30:	00 00                	add    BYTE PTR [eax],al
  32:	03 05 00 03 0e 3a    	add    eax,DWORD PTR ds:0x3a0e0300
  38:	0b 3b                	or     edi,DWORD PTR [ebx]
  3a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  3d:	02 18                	add    bl,BYTE PTR [eax]
  3f:	00 00                	add    BYTE PTR [eax],al
  41:	04 24                	add    al,0x24
  43:	00 0b                	add    BYTE PTR [ebx],cl
  45:	0b 3e                	or     edi,DWORD PTR [esi]
  47:	0b 03                	or     eax,DWORD PTR [ebx]
  49:	0e                   	push   cs
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	05 26 00 49 13       	add    eax,0x13490026
  51:	00 00                	add    BYTE PTR [eax],al
  53:	06                   	push   es
  54:	0f 00 0b             	str    WORD PTR [ebx]
  57:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  5a:	00 00                	add    BYTE PTR [eax],al
  5c:	07                   	pop    es
  5d:	2e 01 03             	add    DWORD PTR cs:[ebx],eax
  60:	0e                   	push   cs
  61:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  63:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  65:	6a 19                	push   0x19
  67:	36 0b 11             	or     edx,DWORD PTR ss:[ecx]
  6a:	01 12                	add    DWORD PTR [edx],edx
  6c:	06                   	push   es
  6d:	40                   	inc    eax
  6e:	18 97 42 19 00 00    	sbb    BYTE PTR [edi+0x1942],dl
  74:	08 34 00             	or     BYTE PTR [eax+eax*1],dh
  77:	03 08                	add    ecx,DWORD PTR [eax]
  79:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  7b:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  7d:	49                   	dec    ecx
  7e:	13 02                	adc    eax,DWORD PTR [edx]
  80:	18 00                	sbb    BYTE PTR [eax],al
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
	...
  14:	7f 00                	jg     16 <.debug_aranges+0x16>
	...

Disassembly of section .debug_macro:

00000000 <.debug_macro>:
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [eax]
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 03                	add    BYTE PTR [ebx],al
   8:	00 01                	add    BYTE PTR [ecx],al
   a:	04 00                	add    al,0x0

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	3c 00                	cmp    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	22 00                	and    al,BYTE PTR [eax]
   8:	00 00                	add    BYTE PTR [eax],al
   a:	01 01                	add    DWORD PTR [ecx],eax
   c:	fb                   	sti    
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	00 64 69 76          	add    BYTE PTR [ecx+ebp*2+0x76],ah
  1f:	5f                   	pop    edi
  20:	69 6e 74 2e 66 30 38 	imul   ebp,DWORD PTR [esi+0x74],0x3830662e
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 00                	add    BYTE PTR [eax],al
  2b:	00 00                	add    BYTE PTR [eax],al
  2d:	05 02 00 00 00       	add    eax,0x2
  32:	00 01                	add    BYTE PTR [ecx],al
  34:	f8                   	clc    
  35:	75 76                	jne    ad <main+0x82>
  37:	a0 3c 08 ac 02       	mov    al,ds:0x2ac083c
  3c:	38 00                	cmp    BYTE PTR [eax],al
  3e:	01 01                	add    DWORD PTR [ecx],eax

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [esi+0x74],0x72656765
   7:	28 6b 69             	sub    BYTE PTR [ebx+0x69],ch
   a:	6e                   	outs   dx,BYTE PTR ds:[esi]
   b:	64 3d 34 29 00 64    	fs cmp eax,0x64002934
  11:	69 76 5f 69 6e 74 00 	imul   esi,DWORD PTR [esi+0x5f],0x746e69
  18:	63 68 61             	arpl   WORD PTR [eax+0x61],bp
  1b:	72 61                	jb     7e <.debug_str+0x7e>
  1d:	63 74 65 72          	arpl   WORD PTR [ebp+eiz*2+0x72],si
  21:	28 6b 69             	sub    BYTE PTR [ebx+0x69],ch
  24:	6e                   	outs   dx,BYTE PTR ds:[esi]
  25:	64 3d 31 29 00 61    	fs cmp eax,0x61002931
  2b:	72 67                	jb     94 <.debug_str+0x94>
  2d:	63 00                	arpl   WORD PTR [eax],ax
  2f:	2f                   	das    
  30:	68 6f 6d 65 2f       	push   0x2f656d6f
  35:	75 62                	jne    99 <.debug_str+0x99>
  37:	75 6e                	jne    a7 <.debug_str+0xa7>
  39:	74 75                	je     b0 <.debug_str+0xb0>
  3b:	2f                   	das    
  3c:	45                   	inc    ebp
  3d:	6e                   	outs   dx,BYTE PTR ds:[esi]
  3e:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [bp+0x65],0x6e697265
  45:	6e 
  46:	67 2f                	addr16 das 
  48:	44                   	inc    esp
  49:	69 73 61 73 73 65 6d 	imul   esi,DWORD PTR [ebx+0x61],0x6d657373
  50:	62 6c 69 6e          	bound  ebp,QWORD PTR [ecx+ebp*2+0x6e]
  54:	67 2d 42 69 6e 61    	addr16 sub eax,0x616e6942
  5a:	72 69                	jb     c5 <.debug_str+0xc5>
  5c:	65 73 2f             	gs jae 8e <.debug_str+0x8e>
  5f:	46                   	inc    esi
  60:	6f                   	outs   dx,DWORD PTR ds:[esi]
  61:	72 74                	jb     d7 <.debug_str+0xd7>
  63:	72 61                	jb     c6 <.debug_str+0xc6>
  65:	6e                   	outs   dx,BYTE PTR ds:[esi]
  66:	2f                   	das    
  67:	49                   	dec    ecx
  68:	6e                   	outs   dx,BYTE PTR ds:[esi]
  69:	74 65                	je     d0 <.debug_str+0xd0>
  6b:	6c                   	ins    BYTE PTR es:[edi],dx
  6c:	5f                   	pop    edi
  6d:	61                   	popa   
  6e:	72 63                	jb     d3 <.debug_str+0xd3>
  70:	68 69 74 65 63       	push   0x63657469
  75:	74 75                	je     ec <.debug_str+0xec>
  77:	72 65                	jb     de <.debug_str+0xde>
  79:	2f                   	das    
  7a:	69 33 38 36 2f 44    	imul   esi,DWORD PTR [ebx],0x442f3638
  80:	69 76 5f 49 6e 74 2f 	imul   esi,DWORD PTR [esi+0x5f],0x2f746e49
  87:	57                   	push   edi
  88:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [eax+ebp*2+0x5f],0x75626544
  8f:	75 
  90:	67 5f                	addr16 pop edi
  92:	49                   	dec    ecx
  93:	6e                   	outs   dx,BYTE PTR ds:[esi]
  94:	66 6f                	outs   dx,WORD PTR ds:[esi]
  96:	00 64 69 76          	add    BYTE PTR [ecx+ebp*2+0x76],ah
  9a:	5f                   	pop    edi
  9b:	69 6e 74 2e 66 30 38 	imul   ebp,DWORD PTR [esi+0x74],0x3830662e
  a2:	00 6d 61             	add    BYTE PTR [ebp+0x61],ch
  a5:	69 6e 00 47 4e 55 20 	imul   ebp,DWORD PTR [esi+0x0],0x20554e47
  ac:	46                   	inc    esi
  ad:	6f                   	outs   dx,DWORD PTR ds:[esi]
  ae:	72 74                	jb     124 <.debug_str+0x124>
  b0:	72 61                	jb     113 <.debug_str+0x113>
  b2:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b3:	32 30                	xor    dh,BYTE PTR [eax]
  b5:	30 38                	xor    BYTE PTR [eax],bh
  b7:	20 37                	and    BYTE PTR [edi],dh
  b9:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  bc:	30 20                	xor    BYTE PTR [eax],ah
  be:	2d 6d 33 32 20       	sub    eax,0x2032336d
  c3:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  c8:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  ce:	72 69                	jb     139 <main+0x10e>
  d0:	63 20                	arpl   WORD PTR [eax],sp
  d2:	2d 6d 61 72 63       	sub    eax,0x6372616d
  d7:	68 3d 69 36 38       	push   0x3836693d
  dc:	36 20 2d 67 67 64 62 	and    BYTE PTR ss:0x62646767,ch
  e3:	33 20                	xor    esp,DWORD PTR [eax]
  e5:	2d 66 69 6e 74       	sub    eax,0x746e6966
  ea:	72 69                	jb     155 <main+0x12a>
  ec:	6e                   	outs   dx,BYTE PTR ds:[esi]
  ed:	73 69                	jae    158 <main+0x12d>
  ef:	63 2d 6d 6f 64 75    	arpl   WORD PTR ds:0x75646f6d,bp
  f5:	6c                   	ins    BYTE PTR es:[edi],dx
  f6:	65 73 2d             	gs jae 126 <.debug_str+0x126>
  f9:	70 61                	jo     15c <main+0x131>
  fb:	74 68                	je     165 <main+0x13a>
  fd:	20 2f                	and    BYTE PTR [edi],ch
  ff:	75 73                	jne    174 <main+0x149>
 101:	72 2f                	jb     132 <main+0x107>
 103:	6c                   	ins    BYTE PTR es:[edi],dx
 104:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
 10b:	78 38                	js     145 <main+0x11a>
 10d:	36 5f                	ss pop edi
 10f:	36 34 2d             	ss xor al,0x2d
 112:	6c                   	ins    BYTE PTR es:[edi],dx
 113:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
 11a:	75 2f                	jne    14b <main+0x120>
 11c:	37                   	aaa    
 11d:	2f                   	das    
 11e:	66 69 6e 63 6c 75    	imul   bp,WORD PTR [esi+0x63],0x756c
 124:	64 65 00 61 72       	fs add BYTE PTR gs:[ecx+0x72],ah
 129:	67 76 00             	addr16 jbe 12c <main+0x101>

Disassembly of section .comment:

00000000 <.comment>:
   0:	00 47 43             	add    BYTE PTR [edi+0x43],al
   3:	43                   	inc    ebx
   4:	3a 20                	cmp    ah,BYTE PTR [eax]
   6:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   9:	75 6e                	jne    79 <main+0x4e>
   b:	74 75                	je     82 <main+0x57>
   d:	20 37                	and    BYTE PTR [edi],dh
   f:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  12:	30 2d 32 37 75 62    	xor    BYTE PTR ds:0x62753732,ch
  18:	75 6e                	jne    88 <main+0x5d>
  1a:	74 75                	je     91 <main+0x66>
  1c:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1f:	38 2e                	cmp    BYTE PTR [esi],ch
  21:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  24:	20 37                	and    BYTE PTR [edi],dh
  26:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  29:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .eh_frame:

00000000 <.eh_frame>:
   0:	14 00                	adc    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	7c 08                	jl     17 <.eh_frame+0x17>
   f:	01 1b                	add    DWORD PTR [ebx],ebx
  11:	0c 04                	or     al,0x4
  13:	04 88                	add    al,0x88
  15:	01 00                	add    DWORD PTR [eax],eax
  17:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1a:	00 00                	add    BYTE PTR [eax],al
  1c:	1c 00                	sbb    al,0x0
  1e:	00 00                	add    BYTE PTR [eax],al
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	2b 00                	sub    eax,DWORD PTR [eax]
  26:	00 00                	add    BYTE PTR [eax],al
  28:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  2b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  31:	67 c5 0c             	lds    ecx,FWORD PTR [si]
  34:	04 04                	add    al,0x4
  36:	00 00                	add    BYTE PTR [eax],al
  38:	30 00                	xor    BYTE PTR [eax],al
  3a:	00 00                	add    BYTE PTR [eax],al
  3c:	3c 00                	cmp    al,0x0
  3e:	00 00                	add    BYTE PTR [eax],al
  40:	2b 00                	sub    eax,DWORD PTR [eax]
  42:	00 00                	add    BYTE PTR [eax],al
  44:	54                   	push   esp
  45:	00 00                	add    BYTE PTR [eax],al
  47:	00 00                	add    BYTE PTR [eax],al
  49:	44                   	inc    esp
  4a:	0c 01                	or     al,0x1
  4c:	00 47 10             	add    BYTE PTR [edi+0x10],al
  4f:	05 02 75 00 44       	add    eax,0x44007502
  54:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
  58:	06                   	push   es
  59:	10 03                	adc    BYTE PTR [ebx],al
  5b:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
  5e:	7f c1                	jg     21 <.eh_frame+0x21>
  60:	0c 01                	or     al,0x1
  62:	00 41 c3             	add    BYTE PTR [ecx-0x3d],al
  65:	41                   	inc    ecx
  66:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
  69:	04 04                	add    al,0x4
  6b:	00 10                	add    BYTE PTR [eax],dl
  6d:	00 00                	add    BYTE PTR [eax],al
  6f:	00 70 00             	add    BYTE PTR [eax+0x0],dh
  72:	00 00                	add    BYTE PTR [eax],al
  74:	00 00                	add    BYTE PTR [eax],al
  76:	00 00                	add    BYTE PTR [eax],al
  78:	04 00                	add    al,0x0
  7a:	00 00                	add    BYTE PTR [eax],al
  7c:	00 00                	add    BYTE PTR [eax],al
  7e:	00 00                	add    BYTE PTR [eax],al
  80:	10 00                	adc    BYTE PTR [eax],al
  82:	00 00                	add    BYTE PTR [eax],al
  84:	84 00                	test   BYTE PTR [eax],al
  86:	00 00                	add    BYTE PTR [eax],al
  88:	00 00                	add    BYTE PTR [eax],al
  8a:	00 00                	add    BYTE PTR [eax],al
  8c:	04 00                	add    al,0x0
  8e:	00 00                	add    BYTE PTR [eax],al
  90:	00 00                	add    BYTE PTR [eax],al
	...

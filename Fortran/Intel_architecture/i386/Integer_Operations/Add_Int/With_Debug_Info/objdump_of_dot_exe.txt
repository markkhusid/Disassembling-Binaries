
add_int_Fortran_i386_ggdb3:     file format elf32-i386
add_int_Fortran_i386_ggdb3
architecture: i386, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00001070

Program Header:
    PHDR off    0x00000034 vaddr 0x00000034 paddr 0x00000034 align 2**2
         filesz 0x00000160 memsz 0x00000160 flags r--
  INTERP off    0x00000194 vaddr 0x00000194 paddr 0x00000194 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x0000045c memsz 0x0000045c flags r--
    LOAD off    0x00001000 vaddr 0x00001000 paddr 0x00001000 align 2**12
         filesz 0x000002a8 memsz 0x000002a8 flags r-x
    LOAD off    0x00002000 vaddr 0x00002000 paddr 0x00002000 align 2**12
         filesz 0x000001b8 memsz 0x000001b8 flags r--
    LOAD off    0x00002ed4 vaddr 0x00003ed4 paddr 0x00003ed4 align 2**12
         filesz 0x0000014c memsz 0x00000150 flags rw-
 DYNAMIC off    0x00002edc vaddr 0x00003edc paddr 0x00003edc align 2**2
         filesz 0x00000110 memsz 0x00000110 flags rw-
    NOTE off    0x000001a8 vaddr 0x000001a8 paddr 0x000001a8 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x00002024 vaddr 0x00002024 paddr 0x00002024 align 2**2
         filesz 0x0000004c memsz 0x0000004c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00002ed4 vaddr 0x00003ed4 paddr 0x00003ed4 align 2**0
         filesz 0x0000012c memsz 0x0000012c flags r--

Dynamic Section:
  NEEDED               libgfortran.so.5
  NEEDED               libm.so.6
  NEEDED               libgcc_s.so.1
  NEEDED               libquadmath.so.0
  NEEDED               libc.so.6
  INIT                 0x00001000
  FINI                 0x00001294
  INIT_ARRAY           0x00003ed4
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x00003ed8
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x000001ec
  STRTAB               0x0000029c
  SYMTAB               0x0000020c
  STRSZ                0x00000104
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x00004000
  PLTRELSZ             0x00000018
  PLTREL               0x00000011
  JMPREL               0x00000444
  REL                  0x00000404
  RELSZ                0x00000040
  RELENT               0x00000008
  FLAGS_1              0x08000000
  VERNEED              0x000003b4
  VERNEEDNUM           0x00000002
  VERSYM               0x000003a0
  RELCOUNT             0x00000004

Version References:
  required from libgfortran.so.5:
    0x0792f968 0x00 03 GFORTRAN_8
  required from libc.so.6:
    0x09691f73 0x00 04 GLIBC_2.1.3
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  00000194  00000194  00000194  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  000001a8  000001a8  000001a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  000001c8  000001c8  000001c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  000001ec  000001ec  000001ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  0000020c  0000020c  0000020c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000104  0000029c  0000029c  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000012  000003a0  000003a0  000003a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000050  000003b4  000003b4  000003b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000040  00000404  00000404  00000404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000018  00000444  00000444  00000444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000020  00001000  00001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000040  00001020  00001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  00001060  00001060  00001060  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000221  00001070  00001070  00001070  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  00001294  00001294  00001294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000024  00002000  00002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000004c  00002024  00002024  00002024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000148  00002070  00002070  00002070  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  00003ed4  00003ed4  00002ed4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  00003ed8  00003ed8  00002ed8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      00000110  00003edc  00003edc  00002edc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000014  00003fec  00003fec  00002fec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000018  00004000  00004000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000008  00004018  00004018  00003018  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000004  00004020  00004020  00003020  2**0
                  ALLOC
 25 .comment      0000001d  00000000  00000000  00003020  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000020  00000000  00000000  0000303d  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   000000b2  00000000  00000000  0000305d  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 00000084  00000000  00000000  0000310f  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   00000040  00000000  00000000  00003193  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    00000142  00000000  00000000  000031d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 31 .debug_macro  0000000c  00000000  00000000  00003315  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000194 l    d  .interp	00000000              .interp
000001a8 l    d  .note.ABI-tag	00000000              .note.ABI-tag
000001c8 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
000001ec l    d  .gnu.hash	00000000              .gnu.hash
0000020c l    d  .dynsym	00000000              .dynsym
0000029c l    d  .dynstr	00000000              .dynstr
000003a0 l    d  .gnu.version	00000000              .gnu.version
000003b4 l    d  .gnu.version_r	00000000              .gnu.version_r
00000404 l    d  .rel.dyn	00000000              .rel.dyn
00000444 l    d  .rel.plt	00000000              .rel.plt
00001000 l    d  .init	00000000              .init
00001020 l    d  .plt	00000000              .plt
00001060 l    d  .plt.got	00000000              .plt.got
00001070 l    d  .text	00000000              .text
00001294 l    d  .fini	00000000              .fini
00002000 l    d  .rodata	00000000              .rodata
00002024 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
00002070 l    d  .eh_frame	00000000              .eh_frame
00003ed4 l    d  .init_array	00000000              .init_array
00003ed8 l    d  .fini_array	00000000              .fini_array
00003edc l    d  .dynamic	00000000              .dynamic
00003fec l    d  .got	00000000              .got
00004000 l    d  .got.plt	00000000              .got.plt
00004018 l    d  .data	00000000              .data
00004020 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    d  .debug_aranges	00000000              .debug_aranges
00000000 l    d  .debug_info	00000000              .debug_info
00000000 l    d  .debug_abbrev	00000000              .debug_abbrev
00000000 l    d  .debug_line	00000000              .debug_line
00000000 l    d  .debug_str	00000000              .debug_str
00000000 l    d  .debug_macro	00000000              .debug_macro
00000000 l    df *ABS*	00000000              crtstuff.c
000010c0 l     F .text	00000000              deregister_tm_clones
00001100 l     F .text	00000000              register_tm_clones
00001150 l     F .text	00000000              __do_global_dtors_aux
00004020 l     O .bss	00000001              completed.6886
00003ed8 l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
000011a0 l     F .text	00000000              frame_dummy
00003ed4 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              add_int.f08
000011a9 l     F .text	0000002c              MAIN__
00002008 l     O .rodata	0000001c              options.0.3693
00000000 l    df *ABS*	00000000              crtstuff.c
000021b4 l     O .eh_frame	00000000              __FRAME_END__
00000000 l    df *ABS*	00000000              
00002024 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
00004000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
00003ed8 l       .init_array	00000000              __init_array_end
00003ed4 l       .init_array	00000000              __init_array_start
00003edc l     O .dynamic	00000000              _DYNAMIC
00001000 l     F .init	00000000              _init
00004018  w      .data	00000000              data_start
00001290 g     F .text	00000001              __libc_csu_fini
00001070 g     F .text	00000036              _start
000011a5 g     F .text	00000000              .hidden __x86.get_pc_thunk.dx
00000000  w      *UND*	00000000              __gmon_start__
00002000 g     O .rodata	00000004              _fp_hw
00001294 g     F .fini	00000000              .hidden _fini
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
00002004 g     O .rodata	00000004              _IO_stdin_used
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
00004018 g       .data	00000000              __data_start
000010b0 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
00004020 g     O .data	00000000              .hidden __TMC_END__
0000401c g     O .data	00000000              .hidden __dso_handle
00001230 g     F .text	00000055              __libc_csu_init
00004020 g       .bss	00000000              __bss_start
00000000       F *UND*	00000000              _gfortran_set_options@@GFORTRAN_8
00001229 g     F .text	00000000              .hidden __x86.get_pc_thunk.ax
00004024 g       .bss	00000000              _end
00000000       F *UND*	00000000              _gfortran_set_args@@GFORTRAN_8
00004020 g       .data	00000000              _edata
00000000  w    F *UND*	00000000              __cxa_finalize@@GLIBC_2.1.3
000011d5 g     F .text	00000054              main


Contents of section .interp:
 0194 2f6c6962 2f6c642d 6c696e75 782e736f  /lib/ld-linux.so
 01a4 2e3200                               .2.             
Contents of section .note.ABI-tag:
 01a8 04000000 10000000 01000000 474e5500  ............GNU.
 01b8 00000000 03000000 02000000 00000000  ................
Contents of section .note.gnu.build-id:
 01c8 04000000 14000000 03000000 474e5500  ............GNU.
 01d8 bac6065d fde35895 01ca0fa6 f1954f12  ...]..X.......O.
 01e8 7936eb32                             y6.2            
Contents of section .gnu.hash:
 01ec 02000000 08000000 01000000 05000000  ................
 01fc 00200020 00000000 08000000 ad4be3c0  . . .........K..
Contents of section .dynsym:
 020c 00000000 00000000 00000000 00000000  ................
 021c 12000000 00000000 00000000 20000000  ............ ...
 022c d1000000 00000000 00000000 12000000  ................
 023c 21000000 00000000 00000000 20000000  !........... ...
 024c 3d000000 00000000 00000000 20000000  =........... ...
 025c 57000000 00000000 00000000 12000000  W...............
 026c 6d000000 00000000 00000000 12000000  m...............
 027c c2000000 00000000 00000000 22000000  ............"...
 028c b3000000 04200000 04000000 11001000  ..... ..........
Contents of section .dynstr:
 029c 006c6962 67666f72 7472616e 2e736f2e  .libgfortran.so.
 02ac 35005f5f 676d6f6e 5f737461 72745f5f  5.__gmon_start__
 02bc 005f4954 4d5f6465 72656769 73746572  ._ITM_deregister
 02cc 544d436c 6f6e6554 61626c65 005f4954  TMCloneTable._IT
 02dc 4d5f7265 67697374 6572544d 436c6f6e  M_registerTMClon
 02ec 65546162 6c65005f 67666f72 7472616e  eTable._gfortran
 02fc 5f736574 5f6f7074 696f6e73 005f6766  _set_options._gf
 030c 6f727472 616e5f73 65745f61 72677300  ortran_set_args.
 031c 6c69626d 2e736f2e 36006c69 62676363  libm.so.6.libgcc
 032c 5f732e73 6f2e3100 6c696271 7561646d  _s.so.1.libquadm
 033c 6174682e 736f2e30 006c6962 632e736f  ath.so.0.libc.so
 034c 2e36005f 494f5f73 7464696e 5f757365  .6._IO_stdin_use
 035c 64005f5f 6378615f 66696e61 6c697a65  d.__cxa_finalize
 036c 005f5f6c 6962635f 73746172 745f6d61  .__libc_start_ma
 037c 696e0047 464f5254 52414e5f 3800474c  in.GFORTRAN_8.GL
 038c 4942435f 322e312e 3300474c 4942435f  IBC_2.1.3.GLIBC_
 039c 322e3000                             2.0.            
Contents of section .gnu.version:
 03a0 00000000 02000000 00000300 03000400  ................
 03b0 0100                                 ..              
Contents of section .gnu.version_r:
 03b4 01000100 01000000 10000000 20000000  ............ ...
 03c4 68f99207 00000300 e3000000 00000000  h...............
 03d4 01000200 a9000000 10000000 00000000  ................
 03e4 731f6909 00000400 ee000000 10000000  s.i.............
 03f4 1069690d 00000200 fa000000 00000000  .ii.............
Contents of section .rel.dyn:
 0404 d43e0000 08000000 d83e0000 08000000  .>.......>......
 0414 fc3f0000 08000000 1c400000 08000000  .?.......@......
 0424 ec3f0000 06010000 f03f0000 06030000  .?.......?......
 0434 f43f0000 06040000 f83f0000 06070000  .?.......?......
Contents of section .rel.plt:
 0444 0c400000 07020000 10400000 07050000  .@.......@......
 0454 14400000 07060000                    .@......        
Contents of section .init:
 1000 5383ec08 e8a70000 0081c3f7 2f00008b  S.........../...
 1010 83ecffff ff85c074 02ffd083 c4085bc3  .......t......[.
Contents of section .plt:
 1020 ffb30400 0000ffa3 08000000 00000000  ................
 1030 ffa30c00 00006800 000000e9 e0ffffff  ......h.........
 1040 ffa31000 00006808 000000e9 d0ffffff  ......h.........
 1050 ffa31400 00006810 000000e9 c0ffffff  ......h.........
Contents of section .plt.got:
 1060 ffa3f8ff ffff6690                    ......f.        
Contents of section .text:
 1070 31ed5e89 e183e4f0 505452e8 22000000  1.^.....PTR."...
 1080 81c3802f 00008d83 90d2ffff 508d8330  .../........P..0
 1090 d2ffff50 5156ffb3 fcffffff e88fffff  ...PQV..........
 10a0 fff48b1c 24c36690 66906690 66906690  ....$.f.f.f.f.f.
 10b0 8b1c24c3 66906690 66906690 66906690  ..$.f.f.f.f.f.f.
 10c0 e8e00000 0081c23b 2f00008d 8a200000  .......;/.... ..
 10d0 008d8220 00000039 c8741d8b 82f0ffff  ... ...9.t......
 10e0 ff85c074 135589e5 83ec1451 ffd083c4  ...t.U.....Q....
 10f0 10c9c38d 74260090 c38db426 00000000  ....t&.....&....
 1100 e8a00000 0081c2fb 2e000055 89e5538d  ...........U..S.
 1110 8a200000 008d8220 00000083 ec0429c8  . ..... ......).
 1120 c1f80289 c3c1eb1f 01d8d1f8 74148b92  ............t...
 1130 f4ffffff 85d2740a 83ec0850 51ffd283  ......t....PQ...
 1140 c4108b5d fcc9c38d b4260000 00006690  ...].....&....f.
 1150 5589e553 e857ffff ff81c3a7 2e000083  U..S.W..........
 1160 ec0480bb 20000000 0075278b 83f8ffff  .... ....u'.....
 1170 ff85c074 1183ec0c ffb31c00 0000e8dd  ...t............
 1180 feffff83 c410e835 ffffffc6 83200000  .......5..... ..
 1190 00018b5d fcc9c38d b4260000 00006690  ...].....&....f.
 11a0 e95bffff ff8b1424 c35589e5 83ec10e8  .[.....$.U......
 11b0 75000000 054c2e00 00c745fc 01000000  u....L....E.....
 11c0 c745f809 0000008b 55fc8b45 f801d089  .E......U..E....
 11d0 45f490c9 c38d4c24 0483e4f0 ff71fc55  E.....L$.....q.U
 11e0 89e55351 e8c7feff ff81c317 2e000089  ..SQ............
 11f0 c883ec08 ff7004ff 30e852fe ffff83c4  .....p..0.R.....
 1200 1083ec08 8d8308e0 ffff506a 07e82efe  ..........Pj....
 1210 ffff83c4 10e88fff ffffb800 0000008d  ................
 1220 65f8595b 5d8d61fc c38b0424 c3669090  e.Y[].a....$.f..
 1230 55575653 e877feff ff81c3c7 2d000083  UWVS.w......-...
 1240 ec0c8b6c 2428e8b5 fdffff8d b3d8feff  ...l$(..........
 1250 ff8d83d4 feffff29 c6c1fe02 741f31ff  .......)....t.1.
 1260 83ec0455 ff74242c ff74242c ff94bbd4  ...U.t$,.t$,....
 1270 feffff83 c70183c4 1039fe75 e383c40c  .........9.u....
 1280 5b5e5f5d c38db426 00000000 8d742600  [^_]...&.....t&.
 1290 c3                                   .               
Contents of section .fini:
 1294 5383ec08 e813feff ff81c363 2d000083  S..........c-...
 12a4 c4085bc3                             ..[.            
Contents of section .rodata:
 2000 03000000 01000200 44000000 ff1f0000  ........D.......
 2010 00000000 01000000 01000000 00000000  ................
 2020 1f000000                             ....            
Contents of section .eh_frame_hdr:
 2024 011b033b 48000000 08000000 fcefffff  ...;H...........
 2034 90000000 3cf0ffff b4000000 4cf0ffff  ....<.......L...
 2044 64000000 85f1ffff c8000000 b1f1ffff  d...............
 2054 e8000000 05f2ffff 1c010000 0cf2ffff  ................
 2064 30010000 6cf2ffff 7c010000           0...l...|...    
Contents of section .eh_frame:
 2070 14000000 00000000 017a5200 017c0801  .........zR..|..
 2080 1b0c0404 88010708 10000000 1c000000  ................
 2090 e0efffff 36000000 00000000 14000000  ....6...........
 20a0 00000000 017a5200 017c0801 1b0c0404  .....zR..|......
 20b0 88010000 20000000 1c000000 64efffff  .... .......d...
 20c0 40000000 000e0846 0e0c4a0f 0b740478  @......F..J..t.x
 20d0 003f1a3b 2a322422 10000000 40000000  .?.;*2$"....@...
 20e0 80efffff 08000000 00000000 1c000000  ................
 20f0 54000000 b5f0ffff 2c000000 00410e08  T.......,....A..
 2100 8502420d 0568c50c 04040000 30000000  ..B..h......0...
 2110 74000000 c1f0ffff 54000000 00440c01  t.......T....D..
 2120 00471005 02750044 0f037578 06100302  .G...u.D..ux....
 2130 757c7fc1 0c010041 c341c543 0c040400  u|.....A.A.C....
 2140 10000000 a8000000 e1f0ffff 04000000  ................
 2150 00000000 48000000 bc000000 d4f0ffff  ....H...........
 2160 55000000 00410e08 8502410e 0c870341  U....A....A....A
 2170 0e108604 410e1483 054e0e20 610e2441  ....A....N. a.$A
 2180 0e28440e 2c440e30 4d0e2047 0e1441c3  .(D.,D.0M. G..A.
 2190 0e1041c6 0e0c41c7 0e0841c5 0e040000  ..A...A...A.....
 21a0 10000000 08010000 e8f0ffff 01000000  ................
 21b0 00000000 00000000                    ........        
Contents of section .init_array:
 3ed4 a0110000                             ....            
Contents of section .fini_array:
 3ed8 50110000                             P...            
Contents of section .dynamic:
 3edc 01000000 01000000 01000000 80000000  ................
 3eec 01000000 8a000000 01000000 98000000  ................
 3efc 01000000 a9000000 0c000000 00100000  ................
 3f0c 0d000000 94120000 19000000 d43e0000  .............>..
 3f1c 1b000000 04000000 1a000000 d83e0000  .............>..
 3f2c 1c000000 04000000 f5feff6f ec010000  ...........o....
 3f3c 05000000 9c020000 06000000 0c020000  ................
 3f4c 0a000000 04010000 0b000000 10000000  ................
 3f5c 15000000 00000000 03000000 00400000  .............@..
 3f6c 02000000 18000000 14000000 11000000  ................
 3f7c 17000000 44040000 11000000 04040000  ....D...........
 3f8c 12000000 40000000 13000000 08000000  ....@...........
 3f9c fbffff6f 00000008 feffff6f b4030000  ...o.......o....
 3fac ffffff6f 02000000 f0ffff6f a0030000  ...o.......o....
 3fbc faffff6f 04000000 00000000 00000000  ...o............
 3fcc 00000000 00000000 00000000 00000000  ................
 3fdc 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 3fec 00000000 00000000 00000000 00000000  ................
 3ffc d5110000                             ....            
Contents of section .got.plt:
 4000 dc3e0000 00000000 00000000 36100000  .>..........6...
 4010 46100000 56100000                    F...V...        
Contents of section .data:
 4018 00000000 1c400000                    .....@..        
Contents of section .comment:
 0000 4743433a 20284465 6269616e 20382e32  GCC: (Debian 8.2
 0010 2e302d31 34292038 2e322e30 00        .0-14) 8.2.0.   
Contents of section .debug_aranges:
 0000 1c000000 02000000 00000400 00000000  ................
 0010 a9110000 80000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 ae000000 04000000 00000401 a9000000  ................
 0010 0e021200 00001e00 0000a911 00008000  ................
 0020 00000000 00000000 00000238 01000001  ...........8....
 0030 0c610000 00d51100 00540000 00019c61  .a.......T.....a
 0040 00000003 a4000000 010c6800 00000291  ..........h.....
 0050 00033d01 0000010c 6d000000 03910406  ..=.....m.......
 0060 00040405 28010000 05610000 00060473  ....(....a.....s
 0070 00000004 01080000 00000761 64640001  ...........add..
 0080 0102a911 00002c00 0000019c 08610001  ......,......a..
 0090 05610000 00029174 08620001 05610000  .a.....t.b...a..
 00a0 00029170 08630001 05610000 0002916c  ...p.c...a.....l
 00b0 0000                                 ..              
Contents of section .debug_abbrev:
 0000 01110125 0e130b42 0b030e1b 0e110112  ...%...B........
 0010 06101799 42170000 022e013f 19030e3a  ....B......?...:
 0020 0b3b0b49 13110112 06401896 42190113  .;.I.....@..B...
 0030 00000305 00030e3a 0b3b0b49 13021800  .......:.;.I....
 0040 00042400 0b0b3e0b 030e0000 05260049  ..$...>......&.I
 0050 13000006 0f000b0b 49130000 072e0103  ........I.......
 0060 083a0b3b 0b6a1936 0b110112 06401897  .:.;.j.6.....@..
 0070 42190000 08340003 083a0b3b 0b491302  B....4...:.;.I..
 0080 18000000                             ....            
Contents of section .debug_line:
 0000 3c000000 02002200 00000101 fb0e0d00  <.....".........
 0010 01010101 00000001 00000100 6164645f  ............add_
 0020 696e742e 66303800 00000000 000502a9  int.f08.........
 0030 11000001 f87576ae 3c08ac02 38000101  .....uv.<...8...
Contents of section .debug_str:
 0000 63686172 61637465 72286b69 6e643d31  character(kind=1
 0010 29006164 645f696e 742e6630 38002f68  ).add_int.f08./h
 0020 6f6d652f 6861786f 722f456e 67696e65  ome/haxor/Engine
 0030 6572696e 672f5072 6f677261 6d6d696e  ering/Programmin
 0040 672f4469 73617373 656d626c 696e672d  g/Disassembling-
 0050 42696e61 72696573 2f466f72 7472616e  Binaries/Fortran
 0060 2f496e74 656c5f61 72636869 74656374  /Intel_architect
 0070 7572652f 69333836 2f496e74 65676572  ure/i386/Integer
 0080 5f4f7065 72617469 6f6e732f 4164645f  _Operations/Add_
 0090 496e742f 57697468 5f446562 75675f49  Int/With_Debug_I
 00a0 6e666f00 61726763 00474e55 20466f72  nfo.argc.GNU For
 00b0 7472616e 32303038 20382e32 2e30202d  tran2008 8.2.0 -
 00c0 6d333220 2d6d7475 6e653d67 656e6572  m32 -mtune=gener
 00d0 6963202d 6d617263 683d6936 3836202d  ic -march=i686 -
 00e0 67676462 33202d66 696e7472 696e7369  ggdb3 -fintrinsi
 00f0 632d6d6f 64756c65 732d7061 7468202f  c-modules-path /
 0100 7573722f 6c69622f 6763632f 7838365f  usr/lib/gcc/x86_
 0110 36342d6c 696e7578 2d676e75 2f382f66  64-linux-gnu/8/f
 0120 696e636c 75646500 696e7465 67657228  include.integer(
 0130 6b696e64 3d342900 6d61696e 00617267  kind=4).main.arg
 0140 7600                                 v.              
Contents of section .debug_macro:
 0000 04000200 00000003 00010400           ............    

Disassembly of section .interp:

00000194 <.interp>:
 194:	2f                   	das    
 195:	6c                   	ins    BYTE PTR es:[edi],dx
 196:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 19d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 1a4:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

000001a8 <.note.ABI-tag>:
 1a8:	04 00                	add    al,0x0
 1aa:	00 00                	add    BYTE PTR [eax],al
 1ac:	10 00                	adc    BYTE PTR [eax],al
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	01 00                	add    DWORD PTR [eax],eax
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	47                   	inc    edi
 1b5:	4e                   	dec    esi
 1b6:	55                   	push   ebp
 1b7:	00 00                	add    BYTE PTR [eax],al
 1b9:	00 00                	add    BYTE PTR [eax],al
 1bb:	00 03                	add    BYTE PTR [ebx],al
 1bd:	00 00                	add    BYTE PTR [eax],al
 1bf:	00 02                	add    BYTE PTR [edx],al
 1c1:	00 00                	add    BYTE PTR [eax],al
 1c3:	00 00                	add    BYTE PTR [eax],al
 1c5:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    al,0x0
 1ca:	00 00                	add    BYTE PTR [eax],al
 1cc:	14 00                	adc    al,0x0
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	03 00                	add    eax,DWORD PTR [eax]
 1d2:	00 00                	add    BYTE PTR [eax],al
 1d4:	47                   	inc    edi
 1d5:	4e                   	dec    esi
 1d6:	55                   	push   ebp
 1d7:	00 ba c6 06 5d fd    	add    BYTE PTR [edx-0x2a2f93a],bh
 1dd:	e3 58                	jecxz  237 <_init-0xdc9>
 1df:	95                   	xchg   ebp,eax
 1e0:	01 ca                	add    edx,ecx
 1e2:	0f a6                	(bad)  
 1e4:	f1                   	icebp  
 1e5:	95                   	xchg   ebp,eax
 1e6:	4f                   	dec    edi
 1e7:	12 79 36             	adc    bh,BYTE PTR [ecx+0x36]
 1ea:	eb 32                	jmp    21e <_init-0xde2>

Disassembly of section .gnu.hash:

000001ec <.gnu.hash>:
 1ec:	02 00                	add    al,BYTE PTR [eax]
 1ee:	00 00                	add    BYTE PTR [eax],al
 1f0:	08 00                	or     BYTE PTR [eax],al
 1f2:	00 00                	add    BYTE PTR [eax],al
 1f4:	01 00                	add    DWORD PTR [eax],eax
 1f6:	00 00                	add    BYTE PTR [eax],al
 1f8:	05 00 00 00 00       	add    eax,0x0
 1fd:	20 00                	and    BYTE PTR [eax],al
 1ff:	20 00                	and    BYTE PTR [eax],al
 201:	00 00                	add    BYTE PTR [eax],al
 203:	00 08                	add    BYTE PTR [eax],cl
 205:	00 00                	add    BYTE PTR [eax],al
 207:	00                   	.byte 0x0
 208:	ad                   	lods   eax,DWORD PTR ds:[esi]
 209:	4b                   	dec    ebx
 20a:	e3 c0                	jecxz  1cc <_init-0xe34>

Disassembly of section .dynsym:

0000020c <.dynsym>:
	...
 21c:	12 00                	adc    al,BYTE PTR [eax]
	...
 226:	00 00                	add    BYTE PTR [eax],al
 228:	20 00                	and    BYTE PTR [eax],al
 22a:	00 00                	add    BYTE PTR [eax],al
 22c:	d1 00                	rol    DWORD PTR [eax],1
	...
 236:	00 00                	add    BYTE PTR [eax],al
 238:	12 00                	adc    al,BYTE PTR [eax]
 23a:	00 00                	add    BYTE PTR [eax],al
 23c:	21 00                	and    DWORD PTR [eax],eax
	...
 246:	00 00                	add    BYTE PTR [eax],al
 248:	20 00                	and    BYTE PTR [eax],al
 24a:	00 00                	add    BYTE PTR [eax],al
 24c:	3d 00 00 00 00       	cmp    eax,0x0
 251:	00 00                	add    BYTE PTR [eax],al
 253:	00 00                	add    BYTE PTR [eax],al
 255:	00 00                	add    BYTE PTR [eax],al
 257:	00 20                	add    BYTE PTR [eax],ah
 259:	00 00                	add    BYTE PTR [eax],al
 25b:	00 57 00             	add    BYTE PTR [edi+0x0],dl
	...
 266:	00 00                	add    BYTE PTR [eax],al
 268:	12 00                	adc    al,BYTE PTR [eax]
 26a:	00 00                	add    BYTE PTR [eax],al
 26c:	6d                   	ins    DWORD PTR es:[edi],dx
	...
 275:	00 00                	add    BYTE PTR [eax],al
 277:	00 12                	add    BYTE PTR [edx],dl
 279:	00 00                	add    BYTE PTR [eax],al
 27b:	00 c2                	add    dl,al
	...
 285:	00 00                	add    BYTE PTR [eax],al
 287:	00 22                	add    BYTE PTR [edx],ah
 289:	00 00                	add    BYTE PTR [eax],al
 28b:	00 b3 00 00 00 04    	add    BYTE PTR [ebx+0x4000000],dh
 291:	20 00                	and    BYTE PTR [eax],al
 293:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 296:	00 00                	add    BYTE PTR [eax],al
 298:	11 00                	adc    DWORD PTR [eax],eax
 29a:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

0000029c <.dynstr>:
 29c:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 2a0:	67 66 6f             	outs   dx,WORD PTR ds:[si]
 2a3:	72 74                	jb     319 <_init-0xce7>
 2a5:	72 61                	jb     308 <_init-0xcf8>
 2a7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2a8:	2e 73 6f             	cs jae 31a <_init-0xce6>
 2ab:	2e 35 00 5f 5f 67    	cs xor eax,0x675f5f00
 2b1:	6d                   	ins    DWORD PTR es:[edi],dx
 2b2:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2b3:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2b4:	5f                   	pop    edi
 2b5:	73 74                	jae    32b <_init-0xcd5>
 2b7:	61                   	popa   
 2b8:	72 74                	jb     32e <_init-0xcd2>
 2ba:	5f                   	pop    edi
 2bb:	5f                   	pop    edi
 2bc:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 2bf:	54                   	push   esp
 2c0:	4d                   	dec    ebp
 2c1:	5f                   	pop    edi
 2c2:	64 65 72 65          	fs gs jb 32b <_init-0xcd5>
 2c6:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 2cd:	4d 
 2ce:	43                   	inc    ebx
 2cf:	6c                   	ins    BYTE PTR es:[edi],dx
 2d0:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2d1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2d2:	65 54                	gs push esp
 2d4:	61                   	popa   
 2d5:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 2d9:	5f                   	pop    edi
 2da:	49                   	dec    ecx
 2db:	54                   	push   esp
 2dc:	4d                   	dec    ebp
 2dd:	5f                   	pop    edi
 2de:	72 65                	jb     345 <_init-0xcbb>
 2e0:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 2e7:	4d 
 2e8:	43                   	inc    ebx
 2e9:	6c                   	ins    BYTE PTR es:[edi],dx
 2ea:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2eb:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2ec:	65 54                	gs push esp
 2ee:	61                   	popa   
 2ef:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 2f3:	5f                   	pop    edi
 2f4:	67 66 6f             	outs   dx,WORD PTR ds:[si]
 2f7:	72 74                	jb     36d <_init-0xc93>
 2f9:	72 61                	jb     35c <_init-0xca4>
 2fb:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2fc:	5f                   	pop    edi
 2fd:	73 65                	jae    364 <_init-0xc9c>
 2ff:	74 5f                	je     360 <_init-0xca0>
 301:	6f                   	outs   dx,DWORD PTR ds:[esi]
 302:	70 74                	jo     378 <_init-0xc88>
 304:	69 6f 6e 73 00 5f 67 	imul   ebp,DWORD PTR [edi+0x6e],0x675f0073
 30b:	66 6f                	outs   dx,WORD PTR ds:[esi]
 30d:	72 74                	jb     383 <_init-0xc7d>
 30f:	72 61                	jb     372 <_init-0xc8e>
 311:	6e                   	outs   dx,BYTE PTR ds:[esi]
 312:	5f                   	pop    edi
 313:	73 65                	jae    37a <_init-0xc86>
 315:	74 5f                	je     376 <_init-0xc8a>
 317:	61                   	popa   
 318:	72 67                	jb     381 <_init-0xc7f>
 31a:	73 00                	jae    31c <_init-0xce4>
 31c:	6c                   	ins    BYTE PTR es:[edi],dx
 31d:	69 62 6d 2e 73 6f 2e 	imul   esp,DWORD PTR [edx+0x6d],0x2e6f732e
 324:	36 00 6c 69 62       	add    BYTE PTR ss:[ecx+ebp*2+0x62],ch
 329:	67 63 63 5f          	arpl   WORD PTR [bp+di+0x5f],sp
 32d:	73 2e                	jae    35d <_init-0xca3>
 32f:	73 6f                	jae    3a0 <_init-0xc60>
 331:	2e 31 00             	xor    DWORD PTR cs:[eax],eax
 334:	6c                   	ins    BYTE PTR es:[edi],dx
 335:	69 62 71 75 61 64 6d 	imul   esp,DWORD PTR [edx+0x71],0x6d646175
 33c:	61                   	popa   
 33d:	74 68                	je     3a7 <_init-0xc59>
 33f:	2e 73 6f             	cs jae 3b1 <_init-0xc4f>
 342:	2e 30 00             	xor    BYTE PTR cs:[eax],al
 345:	6c                   	ins    BYTE PTR es:[edi],dx
 346:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [edx+0x63],0x2e6f732e
 34d:	36 00 5f 49          	add    BYTE PTR ss:[edi+0x49],bl
 351:	4f                   	dec    edi
 352:	5f                   	pop    edi
 353:	73 74                	jae    3c9 <_init-0xc37>
 355:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 35c:	64 
 35d:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 360:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 363:	5f                   	pop    edi
 364:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 36a:	7a 65                	jp     3d1 <_init-0xc2f>
 36c:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 36f:	6c                   	ins    BYTE PTR es:[edi],dx
 370:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 377:	72 74                	jb     3ed <_init-0xc13>
 379:	5f                   	pop    edi
 37a:	6d                   	ins    DWORD PTR es:[edi],dx
 37b:	61                   	popa   
 37c:	69 6e 00 47 46 4f 52 	imul   ebp,DWORD PTR [esi+0x0],0x524f4647
 383:	54                   	push   esp
 384:	52                   	push   edx
 385:	41                   	inc    ecx
 386:	4e                   	dec    esi
 387:	5f                   	pop    edi
 388:	38 00                	cmp    BYTE PTR [eax],al
 38a:	47                   	inc    edi
 38b:	4c                   	dec    esp
 38c:	49                   	dec    ecx
 38d:	42                   	inc    edx
 38e:	43                   	inc    ebx
 38f:	5f                   	pop    edi
 390:	32 2e                	xor    ch,BYTE PTR [esi]
 392:	31 2e                	xor    DWORD PTR [esi],ebp
 394:	33 00                	xor    eax,DWORD PTR [eax]
 396:	47                   	inc    edi
 397:	4c                   	dec    esp
 398:	49                   	dec    ecx
 399:	42                   	inc    edx
 39a:	43                   	inc    ebx
 39b:	5f                   	pop    edi
 39c:	32 2e                	xor    ch,BYTE PTR [esi]
 39e:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

000003a0 <.gnu.version>:
 3a0:	00 00                	add    BYTE PTR [eax],al
 3a2:	00 00                	add    BYTE PTR [eax],al
 3a4:	02 00                	add    al,BYTE PTR [eax]
 3a6:	00 00                	add    BYTE PTR [eax],al
 3a8:	00 00                	add    BYTE PTR [eax],al
 3aa:	03 00                	add    eax,DWORD PTR [eax]
 3ac:	03 00                	add    eax,DWORD PTR [eax]
 3ae:	04 00                	add    al,0x0
 3b0:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

000003b4 <.gnu.version_r>:
 3b4:	01 00                	add    DWORD PTR [eax],eax
 3b6:	01 00                	add    DWORD PTR [eax],eax
 3b8:	01 00                	add    DWORD PTR [eax],eax
 3ba:	00 00                	add    BYTE PTR [eax],al
 3bc:	10 00                	adc    BYTE PTR [eax],al
 3be:	00 00                	add    BYTE PTR [eax],al
 3c0:	20 00                	and    BYTE PTR [eax],al
 3c2:	00 00                	add    BYTE PTR [eax],al
 3c4:	68 f9 92 07 00       	push   0x792f9
 3c9:	00 03                	add    BYTE PTR [ebx],al
 3cb:	00 e3                	add    bl,ah
 3cd:	00 00                	add    BYTE PTR [eax],al
 3cf:	00 00                	add    BYTE PTR [eax],al
 3d1:	00 00                	add    BYTE PTR [eax],al
 3d3:	00 01                	add    BYTE PTR [ecx],al
 3d5:	00 02                	add    BYTE PTR [edx],al
 3d7:	00 a9 00 00 00 10    	add    BYTE PTR [ecx+0x10000000],ch
 3dd:	00 00                	add    BYTE PTR [eax],al
 3df:	00 00                	add    BYTE PTR [eax],al
 3e1:	00 00                	add    BYTE PTR [eax],al
 3e3:	00 73 1f             	add    BYTE PTR [ebx+0x1f],dh
 3e6:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [ecx],0x40000
 3ec:	ee                   	out    dx,al
 3ed:	00 00                	add    BYTE PTR [eax],al
 3ef:	00 10                	add    BYTE PTR [eax],dl
 3f1:	00 00                	add    BYTE PTR [eax],al
 3f3:	00 10                	add    BYTE PTR [eax],dl
 3f5:	69 69 0d 00 00 02 00 	imul   ebp,DWORD PTR [ecx+0xd],0x20000
 3fc:	fa                   	cli    
 3fd:	00 00                	add    BYTE PTR [eax],al
 3ff:	00 00                	add    BYTE PTR [eax],al
 401:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000404 <.rel.dyn>:
 404:	d4 3e                	aam    0x3e
 406:	00 00                	add    BYTE PTR [eax],al
 408:	08 00                	or     BYTE PTR [eax],al
 40a:	00 00                	add    BYTE PTR [eax],al
 40c:	d8 3e                	fdivr  DWORD PTR [esi]
 40e:	00 00                	add    BYTE PTR [eax],al
 410:	08 00                	or     BYTE PTR [eax],al
 412:	00 00                	add    BYTE PTR [eax],al
 414:	fc                   	cld    
 415:	3f                   	aas    
 416:	00 00                	add    BYTE PTR [eax],al
 418:	08 00                	or     BYTE PTR [eax],al
 41a:	00 00                	add    BYTE PTR [eax],al
 41c:	1c 40                	sbb    al,0x40
 41e:	00 00                	add    BYTE PTR [eax],al
 420:	08 00                	or     BYTE PTR [eax],al
 422:	00 00                	add    BYTE PTR [eax],al
 424:	ec                   	in     al,dx
 425:	3f                   	aas    
 426:	00 00                	add    BYTE PTR [eax],al
 428:	06                   	push   es
 429:	01 00                	add    DWORD PTR [eax],eax
 42b:	00 f0                	add    al,dh
 42d:	3f                   	aas    
 42e:	00 00                	add    BYTE PTR [eax],al
 430:	06                   	push   es
 431:	03 00                	add    eax,DWORD PTR [eax]
 433:	00 f4                	add    ah,dh
 435:	3f                   	aas    
 436:	00 00                	add    BYTE PTR [eax],al
 438:	06                   	push   es
 439:	04 00                	add    al,0x0
 43b:	00 f8                	add    al,bh
 43d:	3f                   	aas    
 43e:	00 00                	add    BYTE PTR [eax],al
 440:	06                   	push   es
 441:	07                   	pop    es
	...

Disassembly of section .rel.plt:

00000444 <.rel.plt>:
 444:	0c 40                	or     al,0x40
 446:	00 00                	add    BYTE PTR [eax],al
 448:	07                   	pop    es
 449:	02 00                	add    al,BYTE PTR [eax]
 44b:	00 10                	add    BYTE PTR [eax],dl
 44d:	40                   	inc    eax
 44e:	00 00                	add    BYTE PTR [eax],al
 450:	07                   	pop    es
 451:	05 00 00 14 40       	add    eax,0x40140000
 456:	00 00                	add    BYTE PTR [eax],al
 458:	07                   	pop    es
 459:	06                   	push   es
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   ebx
    1001:	83 ec 08             	sub    esp,0x8
    1004:	e8 a7 00 00 00       	call   10b0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    ebx,0x2ff7
    100f:	8b 83 ec ff ff ff    	mov    eax,DWORD PTR [ebx-0x14]
    1015:	85 c0                	test   eax,eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   eax
    101b:	83 c4 08             	add    esp,0x8
    101e:	5b                   	pop    ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1026:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    102c:	00 00                	add    BYTE PTR [eax],al
	...

00001030 <__libc_start_main@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <_gfortran_set_options@plt>:
    1040:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
    1046:	68 08 00 00 00       	push   0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

00001050 <_gfortran_set_args@plt>:
    1050:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
    1056:	68 10 00 00 00       	push   0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001060 <__cxa_finalize@plt>:
    1060:	ff a3 f8 ff ff ff    	jmp    DWORD PTR [ebx-0x8]
    1066:	66 90                	xchg   ax,ax

Disassembly of section .text:

00001070 <_start>:
    1070:	31 ed                	xor    ebp,ebp
    1072:	5e                   	pop    esi
    1073:	89 e1                	mov    ecx,esp
    1075:	83 e4 f0             	and    esp,0xfffffff0
    1078:	50                   	push   eax
    1079:	54                   	push   esp
    107a:	52                   	push   edx
    107b:	e8 22 00 00 00       	call   10a2 <_start+0x32>
    1080:	81 c3 80 2f 00 00    	add    ebx,0x2f80
    1086:	8d 83 90 d2 ff ff    	lea    eax,[ebx-0x2d70]
    108c:	50                   	push   eax
    108d:	8d 83 30 d2 ff ff    	lea    eax,[ebx-0x2dd0]
    1093:	50                   	push   eax
    1094:	51                   	push   ecx
    1095:	56                   	push   esi
    1096:	ff b3 fc ff ff ff    	push   DWORD PTR [ebx-0x4]
    109c:	e8 8f ff ff ff       	call   1030 <__libc_start_main@plt>
    10a1:	f4                   	hlt    
    10a2:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    10a5:	c3                   	ret    
    10a6:	66 90                	xchg   ax,ax
    10a8:	66 90                	xchg   ax,ax
    10aa:	66 90                	xchg   ax,ax
    10ac:	66 90                	xchg   ax,ax
    10ae:	66 90                	xchg   ax,ax

000010b0 <__x86.get_pc_thunk.bx>:
    10b0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    10b3:	c3                   	ret    
    10b4:	66 90                	xchg   ax,ax
    10b6:	66 90                	xchg   ax,ax
    10b8:	66 90                	xchg   ax,ax
    10ba:	66 90                	xchg   ax,ax
    10bc:	66 90                	xchg   ax,ax
    10be:	66 90                	xchg   ax,ax

000010c0 <deregister_tm_clones>:
    10c0:	e8 e0 00 00 00       	call   11a5 <__x86.get_pc_thunk.dx>
    10c5:	81 c2 3b 2f 00 00    	add    edx,0x2f3b
    10cb:	8d 8a 20 00 00 00    	lea    ecx,[edx+0x20]
    10d1:	8d 82 20 00 00 00    	lea    eax,[edx+0x20]
    10d7:	39 c8                	cmp    eax,ecx
    10d9:	74 1d                	je     10f8 <deregister_tm_clones+0x38>
    10db:	8b 82 f0 ff ff ff    	mov    eax,DWORD PTR [edx-0x10]
    10e1:	85 c0                	test   eax,eax
    10e3:	74 13                	je     10f8 <deregister_tm_clones+0x38>
    10e5:	55                   	push   ebp
    10e6:	89 e5                	mov    ebp,esp
    10e8:	83 ec 14             	sub    esp,0x14
    10eb:	51                   	push   ecx
    10ec:	ff d0                	call   eax
    10ee:	83 c4 10             	add    esp,0x10
    10f1:	c9                   	leave  
    10f2:	c3                   	ret    
    10f3:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    10f7:	90                   	nop
    10f8:	c3                   	ret    
    10f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00001100 <register_tm_clones>:
    1100:	e8 a0 00 00 00       	call   11a5 <__x86.get_pc_thunk.dx>
    1105:	81 c2 fb 2e 00 00    	add    edx,0x2efb
    110b:	55                   	push   ebp
    110c:	89 e5                	mov    ebp,esp
    110e:	53                   	push   ebx
    110f:	8d 8a 20 00 00 00    	lea    ecx,[edx+0x20]
    1115:	8d 82 20 00 00 00    	lea    eax,[edx+0x20]
    111b:	83 ec 04             	sub    esp,0x4
    111e:	29 c8                	sub    eax,ecx
    1120:	c1 f8 02             	sar    eax,0x2
    1123:	89 c3                	mov    ebx,eax
    1125:	c1 eb 1f             	shr    ebx,0x1f
    1128:	01 d8                	add    eax,ebx
    112a:	d1 f8                	sar    eax,1
    112c:	74 14                	je     1142 <register_tm_clones+0x42>
    112e:	8b 92 f4 ff ff ff    	mov    edx,DWORD PTR [edx-0xc]
    1134:	85 d2                	test   edx,edx
    1136:	74 0a                	je     1142 <register_tm_clones+0x42>
    1138:	83 ec 08             	sub    esp,0x8
    113b:	50                   	push   eax
    113c:	51                   	push   ecx
    113d:	ff d2                	call   edx
    113f:	83 c4 10             	add    esp,0x10
    1142:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1145:	c9                   	leave  
    1146:	c3                   	ret    
    1147:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    114e:	66 90                	xchg   ax,ax

00001150 <__do_global_dtors_aux>:
    1150:	55                   	push   ebp
    1151:	89 e5                	mov    ebp,esp
    1153:	53                   	push   ebx
    1154:	e8 57 ff ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    1159:	81 c3 a7 2e 00 00    	add    ebx,0x2ea7
    115f:	83 ec 04             	sub    esp,0x4
    1162:	80 bb 20 00 00 00 00 	cmp    BYTE PTR [ebx+0x20],0x0
    1169:	75 27                	jne    1192 <__do_global_dtors_aux+0x42>
    116b:	8b 83 f8 ff ff ff    	mov    eax,DWORD PTR [ebx-0x8]
    1171:	85 c0                	test   eax,eax
    1173:	74 11                	je     1186 <__do_global_dtors_aux+0x36>
    1175:	83 ec 0c             	sub    esp,0xc
    1178:	ff b3 1c 00 00 00    	push   DWORD PTR [ebx+0x1c]
    117e:	e8 dd fe ff ff       	call   1060 <__cxa_finalize@plt>
    1183:	83 c4 10             	add    esp,0x10
    1186:	e8 35 ff ff ff       	call   10c0 <deregister_tm_clones>
    118b:	c6 83 20 00 00 00 01 	mov    BYTE PTR [ebx+0x20],0x1
    1192:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1195:	c9                   	leave  
    1196:	c3                   	ret    
    1197:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    119e:	66 90                	xchg   ax,ax

000011a0 <frame_dummy>:
    11a0:	e9 5b ff ff ff       	jmp    1100 <register_tm_clones>

000011a5 <__x86.get_pc_thunk.dx>:
    11a5:	8b 14 24             	mov    edx,DWORD PTR [esp]
    11a8:	c3                   	ret    

000011a9 <MAIN__>:
program add
    11a9:	55                   	push   ebp
    11aa:	89 e5                	mov    ebp,esp
    11ac:	83 ec 10             	sub    esp,0x10
    11af:	e8 75 00 00 00       	call   1229 <__x86.get_pc_thunk.ax>
    11b4:	05 4c 2e 00 00       	add    eax,0x2e4c

	implicit none

	integer		:: a, b, c

	a = 1
    11b9:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [ebp-0x4],0x1
	b = 9
    11c0:	c7 45 f8 09 00 00 00 	mov    DWORD PTR [ebp-0x8],0x9

	c = a + b
    11c7:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    11ca:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    11cd:	01 d0                	add    eax,edx
    11cf:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax

end program add
    11d2:	90                   	nop
    11d3:	c9                   	leave  
    11d4:	c3                   	ret    

000011d5 <main>:
    11d5:	8d 4c 24 04          	lea    ecx,[esp+0x4]
    11d9:	83 e4 f0             	and    esp,0xfffffff0
    11dc:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
    11df:	55                   	push   ebp
    11e0:	89 e5                	mov    ebp,esp
    11e2:	53                   	push   ebx
    11e3:	51                   	push   ecx
    11e4:	e8 c7 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    11e9:	81 c3 17 2e 00 00    	add    ebx,0x2e17
    11ef:	89 c8                	mov    eax,ecx
    11f1:	83 ec 08             	sub    esp,0x8
    11f4:	ff 70 04             	push   DWORD PTR [eax+0x4]
    11f7:	ff 30                	push   DWORD PTR [eax]
    11f9:	e8 52 fe ff ff       	call   1050 <_gfortran_set_args@plt>
    11fe:	83 c4 10             	add    esp,0x10
    1201:	83 ec 08             	sub    esp,0x8
    1204:	8d 83 08 e0 ff ff    	lea    eax,[ebx-0x1ff8]
    120a:	50                   	push   eax
    120b:	6a 07                	push   0x7
    120d:	e8 2e fe ff ff       	call   1040 <_gfortran_set_options@plt>
    1212:	83 c4 10             	add    esp,0x10
    1215:	e8 8f ff ff ff       	call   11a9 <MAIN__>
    121a:	b8 00 00 00 00       	mov    eax,0x0
    121f:	8d 65 f8             	lea    esp,[ebp-0x8]
    1222:	59                   	pop    ecx
    1223:	5b                   	pop    ebx
    1224:	5d                   	pop    ebp
    1225:	8d 61 fc             	lea    esp,[ecx-0x4]
    1228:	c3                   	ret    

00001229 <__x86.get_pc_thunk.ax>:
    1229:	8b 04 24             	mov    eax,DWORD PTR [esp]
    122c:	c3                   	ret    
    122d:	66 90                	xchg   ax,ax
    122f:	90                   	nop

00001230 <__libc_csu_init>:
    1230:	55                   	push   ebp
    1231:	57                   	push   edi
    1232:	56                   	push   esi
    1233:	53                   	push   ebx
    1234:	e8 77 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    1239:	81 c3 c7 2d 00 00    	add    ebx,0x2dc7
    123f:	83 ec 0c             	sub    esp,0xc
    1242:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
    1246:	e8 b5 fd ff ff       	call   1000 <_init>
    124b:	8d b3 d8 fe ff ff    	lea    esi,[ebx-0x128]
    1251:	8d 83 d4 fe ff ff    	lea    eax,[ebx-0x12c]
    1257:	29 c6                	sub    esi,eax
    1259:	c1 fe 02             	sar    esi,0x2
    125c:	74 1f                	je     127d <__libc_csu_init+0x4d>
    125e:	31 ff                	xor    edi,edi
    1260:	83 ec 04             	sub    esp,0x4
    1263:	55                   	push   ebp
    1264:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    1268:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    126c:	ff 94 bb d4 fe ff ff 	call   DWORD PTR [ebx+edi*4-0x12c]
    1273:	83 c7 01             	add    edi,0x1
    1276:	83 c4 10             	add    esp,0x10
    1279:	39 fe                	cmp    esi,edi
    127b:	75 e3                	jne    1260 <__libc_csu_init+0x30>
    127d:	83 c4 0c             	add    esp,0xc
    1280:	5b                   	pop    ebx
    1281:	5e                   	pop    esi
    1282:	5f                   	pop    edi
    1283:	5d                   	pop    ebp
    1284:	c3                   	ret    
    1285:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    128c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00001290 <__libc_csu_fini>:
    1290:	c3                   	ret    

Disassembly of section .fini:

00001294 <_fini>:
    1294:	53                   	push   ebx
    1295:	83 ec 08             	sub    esp,0x8
    1298:	e8 13 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    129d:	81 c3 63 2d 00 00    	add    ebx,0x2d63
    12a3:	83 c4 08             	add    esp,0x8
    12a6:	5b                   	pop    ebx
    12a7:	c3                   	ret    

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    eax,DWORD PTR [eax]
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    DWORD PTR [eax],eax
    2006:	02 00                	add    al,BYTE PTR [eax]

00002008 <options.0.3693>:
    2008:	44                   	inc    esp
    2009:	00 00                	add    BYTE PTR [eax],al
    200b:	00 ff                	add    bh,bh
    200d:	1f                   	pop    ds
    200e:	00 00                	add    BYTE PTR [eax],al
    2010:	00 00                	add    BYTE PTR [eax],al
    2012:	00 00                	add    BYTE PTR [eax],al
    2014:	01 00                	add    DWORD PTR [eax],eax
    2016:	00 00                	add    BYTE PTR [eax],al
    2018:	01 00                	add    DWORD PTR [eax],eax
    201a:	00 00                	add    BYTE PTR [eax],al
    201c:	00 00                	add    BYTE PTR [eax],al
    201e:	00 00                	add    BYTE PTR [eax],al
    2020:	1f                   	pop    ds
    2021:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame_hdr:

00002024 <__GNU_EH_FRAME_HDR>:
    2024:	01 1b                	add    DWORD PTR [ebx],ebx
    2026:	03 3b                	add    edi,DWORD PTR [ebx]
    2028:	48                   	dec    eax
    2029:	00 00                	add    BYTE PTR [eax],al
    202b:	00 08                	add    BYTE PTR [eax],cl
    202d:	00 00                	add    BYTE PTR [eax],al
    202f:	00 fc                	add    ah,bh
    2031:	ef                   	out    dx,eax
    2032:	ff                   	(bad)  
    2033:	ff 90 00 00 00 3c    	call   DWORD PTR [eax+0x3c000000]
    2039:	f0 ff                	lock (bad) 
    203b:	ff b4 00 00 00 4c f0 	push   DWORD PTR [eax+eax*1-0xfb40000]
    2042:	ff                   	(bad)  
    2043:	ff 64 00 00          	jmp    DWORD PTR [eax+eax*1+0x0]
    2047:	00 85 f1 ff ff c8    	add    BYTE PTR [ebp-0x3700000f],al
    204d:	00 00                	add    BYTE PTR [eax],al
    204f:	00 b1 f1 ff ff e8    	add    BYTE PTR [ecx-0x1700000f],dh
    2055:	00 00                	add    BYTE PTR [eax],al
    2057:	00 05 f2 ff ff 1c    	add    BYTE PTR ds:0x1cfffff2,al
    205d:	01 00                	add    DWORD PTR [eax],eax
    205f:	00 0c f2             	add    BYTE PTR [edx+esi*8],cl
    2062:	ff                   	(bad)  
    2063:	ff 30                	push   DWORD PTR [eax]
    2065:	01 00                	add    DWORD PTR [eax],eax
    2067:	00 6c f2 ff          	add    BYTE PTR [edx+esi*8-0x1],ch
    206b:	ff                   	(bad)  
    206c:	7c 01                	jl     206f <__GNU_EH_FRAME_HDR+0x4b>
	...

Disassembly of section .eh_frame:

00002070 <__FRAME_END__-0x144>:
    2070:	14 00                	adc    al,0x0
    2072:	00 00                	add    BYTE PTR [eax],al
    2074:	00 00                	add    BYTE PTR [eax],al
    2076:	00 00                	add    BYTE PTR [eax],al
    2078:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    207b:	00 01                	add    BYTE PTR [ecx],al
    207d:	7c 08                	jl     2087 <__GNU_EH_FRAME_HDR+0x63>
    207f:	01 1b                	add    DWORD PTR [ebx],ebx
    2081:	0c 04                	or     al,0x4
    2083:	04 88                	add    al,0x88
    2085:	01 07                	add    DWORD PTR [edi],eax
    2087:	08 10                	or     BYTE PTR [eax],dl
    2089:	00 00                	add    BYTE PTR [eax],al
    208b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    208e:	00 00                	add    BYTE PTR [eax],al
    2090:	e0 ef                	loopne 2081 <__GNU_EH_FRAME_HDR+0x5d>
    2092:	ff                   	(bad)  
    2093:	ff 36                	push   DWORD PTR [esi]
    2095:	00 00                	add    BYTE PTR [eax],al
    2097:	00 00                	add    BYTE PTR [eax],al
    2099:	00 00                	add    BYTE PTR [eax],al
    209b:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
    209e:	00 00                	add    BYTE PTR [eax],al
    20a0:	00 00                	add    BYTE PTR [eax],al
    20a2:	00 00                	add    BYTE PTR [eax],al
    20a4:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    20a7:	00 01                	add    BYTE PTR [ecx],al
    20a9:	7c 08                	jl     20b3 <__GNU_EH_FRAME_HDR+0x8f>
    20ab:	01 1b                	add    DWORD PTR [ebx],ebx
    20ad:	0c 04                	or     al,0x4
    20af:	04 88                	add    al,0x88
    20b1:	01 00                	add    DWORD PTR [eax],eax
    20b3:	00 20                	add    BYTE PTR [eax],ah
    20b5:	00 00                	add    BYTE PTR [eax],al
    20b7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    20ba:	00 00                	add    BYTE PTR [eax],al
    20bc:	64 ef                	fs out dx,eax
    20be:	ff                   	(bad)  
    20bf:	ff 40 00             	inc    DWORD PTR [eax+0x0]
    20c2:	00 00                	add    BYTE PTR [eax],al
    20c4:	00 0e                	add    BYTE PTR [esi],cl
    20c6:	08 46 0e             	or     BYTE PTR [esi+0xe],al
    20c9:	0c 4a                	or     al,0x4a
    20cb:	0f 0b                	ud2    
    20cd:	74 04                	je     20d3 <__GNU_EH_FRAME_HDR+0xaf>
    20cf:	78 00                	js     20d1 <__GNU_EH_FRAME_HDR+0xad>
    20d1:	3f                   	aas    
    20d2:	1a 3b                	sbb    bh,BYTE PTR [ebx]
    20d4:	2a 32                	sub    dh,BYTE PTR [edx]
    20d6:	24 22                	and    al,0x22
    20d8:	10 00                	adc    BYTE PTR [eax],al
    20da:	00 00                	add    BYTE PTR [eax],al
    20dc:	40                   	inc    eax
    20dd:	00 00                	add    BYTE PTR [eax],al
    20df:	00 80 ef ff ff 08    	add    BYTE PTR [eax+0x8ffffef],al
    20e5:	00 00                	add    BYTE PTR [eax],al
    20e7:	00 00                	add    BYTE PTR [eax],al
    20e9:	00 00                	add    BYTE PTR [eax],al
    20eb:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    20ee:	00 00                	add    BYTE PTR [eax],al
    20f0:	54                   	push   esp
    20f1:	00 00                	add    BYTE PTR [eax],al
    20f3:	00 b5 f0 ff ff 2c    	add    BYTE PTR [ebp+0x2cfffff0],dh
    20f9:	00 00                	add    BYTE PTR [eax],al
    20fb:	00 00                	add    BYTE PTR [eax],al
    20fd:	41                   	inc    ecx
    20fe:	0e                   	push   cs
    20ff:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    2105:	68 c5 0c 04 04       	push   0x4040cc5
    210a:	00 00                	add    BYTE PTR [eax],al
    210c:	30 00                	xor    BYTE PTR [eax],al
    210e:	00 00                	add    BYTE PTR [eax],al
    2110:	74 00                	je     2112 <__GNU_EH_FRAME_HDR+0xee>
    2112:	00 00                	add    BYTE PTR [eax],al
    2114:	c1 f0 ff             	shl    eax,0xff
    2117:	ff 54 00 00          	call   DWORD PTR [eax+eax*1+0x0]
    211b:	00 00                	add    BYTE PTR [eax],al
    211d:	44                   	inc    esp
    211e:	0c 01                	or     al,0x1
    2120:	00 47 10             	add    BYTE PTR [edi+0x10],al
    2123:	05 02 75 00 44       	add    eax,0x44007502
    2128:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
    212c:	06                   	push   es
    212d:	10 03                	adc    BYTE PTR [ebx],al
    212f:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
    2132:	7f c1                	jg     20f5 <__GNU_EH_FRAME_HDR+0xd1>
    2134:	0c 01                	or     al,0x1
    2136:	00 41 c3             	add    BYTE PTR [ecx-0x3d],al
    2139:	41                   	inc    ecx
    213a:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
    213d:	04 04                	add    al,0x4
    213f:	00 10                	add    BYTE PTR [eax],dl
    2141:	00 00                	add    BYTE PTR [eax],al
    2143:	00 a8 00 00 00 e1    	add    BYTE PTR [eax-0x1f000000],ch
    2149:	f0 ff                	lock (bad) 
    214b:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
    214e:	00 00                	add    BYTE PTR [eax],al
    2150:	00 00                	add    BYTE PTR [eax],al
    2152:	00 00                	add    BYTE PTR [eax],al
    2154:	48                   	dec    eax
    2155:	00 00                	add    BYTE PTR [eax],al
    2157:	00 bc 00 00 00 d4 f0 	add    BYTE PTR [eax+eax*1-0xf2c0000],bh
    215e:	ff                   	(bad)  
    215f:	ff 55 00             	call   DWORD PTR [ebp+0x0]
    2162:	00 00                	add    BYTE PTR [eax],al
    2164:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    2167:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
    216d:	87 03                	xchg   DWORD PTR [ebx],eax
    216f:	41                   	inc    ecx
    2170:	0e                   	push   cs
    2171:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
    2177:	83 05 4e 0e 20 61 0e 	add    DWORD PTR ds:0x61200e4e,0xe
    217e:	24 41                	and    al,0x41
    2180:	0e                   	push   cs
    2181:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
    2185:	44                   	inc    esp
    2186:	0e                   	push   cs
    2187:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
    218a:	20 47 0e             	and    BYTE PTR [edi+0xe],al
    218d:	14 41                	adc    al,0x41
    218f:	c3                   	ret    
    2190:	0e                   	push   cs
    2191:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
    2194:	0e                   	push   cs
    2195:	0c 41                	or     al,0x41
    2197:	c7                   	(bad)  
    2198:	0e                   	push   cs
    2199:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
    219c:	0e                   	push   cs
    219d:	04 00                	add    al,0x0
    219f:	00 10                	add    BYTE PTR [eax],dl
    21a1:	00 00                	add    BYTE PTR [eax],al
    21a3:	00 08                	add    BYTE PTR [eax],cl
    21a5:	01 00                	add    DWORD PTR [eax],eax
    21a7:	00 e8                	add    al,ch
    21a9:	f0 ff                	lock (bad) 
    21ab:	ff 01                	inc    DWORD PTR [ecx]
    21ad:	00 00                	add    BYTE PTR [eax],al
    21af:	00 00                	add    BYTE PTR [eax],al
    21b1:	00 00                	add    BYTE PTR [eax],al
	...

000021b4 <__FRAME_END__>:
    21b4:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00003ed4 <__frame_dummy_init_array_entry>:
    3ed4:	a0                   	.byte 0xa0
    3ed5:	11 00                	adc    DWORD PTR [eax],eax
	...

Disassembly of section .fini_array:

00003ed8 <__do_global_dtors_aux_fini_array_entry>:
    3ed8:	50                   	push   eax
    3ed9:	11 00                	adc    DWORD PTR [eax],eax
	...

Disassembly of section .dynamic:

00003edc <_DYNAMIC>:
    3edc:	01 00                	add    DWORD PTR [eax],eax
    3ede:	00 00                	add    BYTE PTR [eax],al
    3ee0:	01 00                	add    DWORD PTR [eax],eax
    3ee2:	00 00                	add    BYTE PTR [eax],al
    3ee4:	01 00                	add    DWORD PTR [eax],eax
    3ee6:	00 00                	add    BYTE PTR [eax],al
    3ee8:	80 00 00             	add    BYTE PTR [eax],0x0
    3eeb:	00 01                	add    BYTE PTR [ecx],al
    3eed:	00 00                	add    BYTE PTR [eax],al
    3eef:	00 8a 00 00 00 01    	add    BYTE PTR [edx+0x1000000],cl
    3ef5:	00 00                	add    BYTE PTR [eax],al
    3ef7:	00 98 00 00 00 01    	add    BYTE PTR [eax+0x1000000],bl
    3efd:	00 00                	add    BYTE PTR [eax],al
    3eff:	00 a9 00 00 00 0c    	add    BYTE PTR [ecx+0xc000000],ch
    3f05:	00 00                	add    BYTE PTR [eax],al
    3f07:	00 00                	add    BYTE PTR [eax],al
    3f09:	10 00                	adc    BYTE PTR [eax],al
    3f0b:	00 0d 00 00 00 94    	add    BYTE PTR ds:0x94000000,cl
    3f11:	12 00                	adc    al,BYTE PTR [eax]
    3f13:	00 19                	add    BYTE PTR [ecx],bl
    3f15:	00 00                	add    BYTE PTR [eax],al
    3f17:	00 d4                	add    ah,dl
    3f19:	3e 00 00             	add    BYTE PTR ds:[eax],al
    3f1c:	1b 00                	sbb    eax,DWORD PTR [eax]
    3f1e:	00 00                	add    BYTE PTR [eax],al
    3f20:	04 00                	add    al,0x0
    3f22:	00 00                	add    BYTE PTR [eax],al
    3f24:	1a 00                	sbb    al,BYTE PTR [eax]
    3f26:	00 00                	add    BYTE PTR [eax],al
    3f28:	d8 3e                	fdivr  DWORD PTR [esi]
    3f2a:	00 00                	add    BYTE PTR [eax],al
    3f2c:	1c 00                	sbb    al,0x0
    3f2e:	00 00                	add    BYTE PTR [eax],al
    3f30:	04 00                	add    al,0x0
    3f32:	00 00                	add    BYTE PTR [eax],al
    3f34:	f5                   	cmc    
    3f35:	fe                   	(bad)  
    3f36:	ff 6f ec             	jmp    FWORD PTR [edi-0x14]
    3f39:	01 00                	add    DWORD PTR [eax],eax
    3f3b:	00 05 00 00 00 9c    	add    BYTE PTR ds:0x9c000000,al
    3f41:	02 00                	add    al,BYTE PTR [eax]
    3f43:	00 06                	add    BYTE PTR [esi],al
    3f45:	00 00                	add    BYTE PTR [eax],al
    3f47:	00 0c 02             	add    BYTE PTR [edx+eax*1],cl
    3f4a:	00 00                	add    BYTE PTR [eax],al
    3f4c:	0a 00                	or     al,BYTE PTR [eax]
    3f4e:	00 00                	add    BYTE PTR [eax],al
    3f50:	04 01                	add    al,0x1
    3f52:	00 00                	add    BYTE PTR [eax],al
    3f54:	0b 00                	or     eax,DWORD PTR [eax]
    3f56:	00 00                	add    BYTE PTR [eax],al
    3f58:	10 00                	adc    BYTE PTR [eax],al
    3f5a:	00 00                	add    BYTE PTR [eax],al
    3f5c:	15 00 00 00 00       	adc    eax,0x0
    3f61:	00 00                	add    BYTE PTR [eax],al
    3f63:	00 03                	add    BYTE PTR [ebx],al
    3f65:	00 00                	add    BYTE PTR [eax],al
    3f67:	00 00                	add    BYTE PTR [eax],al
    3f69:	40                   	inc    eax
    3f6a:	00 00                	add    BYTE PTR [eax],al
    3f6c:	02 00                	add    al,BYTE PTR [eax]
    3f6e:	00 00                	add    BYTE PTR [eax],al
    3f70:	18 00                	sbb    BYTE PTR [eax],al
    3f72:	00 00                	add    BYTE PTR [eax],al
    3f74:	14 00                	adc    al,0x0
    3f76:	00 00                	add    BYTE PTR [eax],al
    3f78:	11 00                	adc    DWORD PTR [eax],eax
    3f7a:	00 00                	add    BYTE PTR [eax],al
    3f7c:	17                   	pop    ss
    3f7d:	00 00                	add    BYTE PTR [eax],al
    3f7f:	00 44 04 00          	add    BYTE PTR [esp+eax*1+0x0],al
    3f83:	00 11                	add    BYTE PTR [ecx],dl
    3f85:	00 00                	add    BYTE PTR [eax],al
    3f87:	00 04 04             	add    BYTE PTR [esp+eax*1],al
    3f8a:	00 00                	add    BYTE PTR [eax],al
    3f8c:	12 00                	adc    al,BYTE PTR [eax]
    3f8e:	00 00                	add    BYTE PTR [eax],al
    3f90:	40                   	inc    eax
    3f91:	00 00                	add    BYTE PTR [eax],al
    3f93:	00 13                	add    BYTE PTR [ebx],dl
    3f95:	00 00                	add    BYTE PTR [eax],al
    3f97:	00 08                	add    BYTE PTR [eax],cl
    3f99:	00 00                	add    BYTE PTR [eax],al
    3f9b:	00 fb                	add    bl,bh
    3f9d:	ff                   	(bad)  
    3f9e:	ff 6f 00             	jmp    FWORD PTR [edi+0x0]
    3fa1:	00 00                	add    BYTE PTR [eax],al
    3fa3:	08 fe                	or     dh,bh
    3fa5:	ff                   	(bad)  
    3fa6:	ff 6f b4             	jmp    FWORD PTR [edi-0x4c]
    3fa9:	03 00                	add    eax,DWORD PTR [eax]
    3fab:	00 ff                	add    bh,bh
    3fad:	ff                   	(bad)  
    3fae:	ff 6f 02             	jmp    FWORD PTR [edi+0x2]
    3fb1:	00 00                	add    BYTE PTR [eax],al
    3fb3:	00 f0                	add    al,dh
    3fb5:	ff                   	(bad)  
    3fb6:	ff 6f a0             	jmp    FWORD PTR [edi-0x60]
    3fb9:	03 00                	add    eax,DWORD PTR [eax]
    3fbb:	00 fa                	add    dl,bh
    3fbd:	ff                   	(bad)  
    3fbe:	ff 6f 04             	jmp    FWORD PTR [edi+0x4]
	...

Disassembly of section .got:

00003fec <.got>:
	...
    3ffc:	d5 11                	aad    0x11
	...

Disassembly of section .got.plt:

00004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	dc 3e                	fdivr  QWORD PTR [esi]
	...
    400a:	00 00                	add    BYTE PTR [eax],al
    400c:	36 10 00             	adc    BYTE PTR ss:[eax],al
    400f:	00 46 10             	add    BYTE PTR [esi+0x10],al
    4012:	00 00                	add    BYTE PTR [eax],al
    4014:	56                   	push   esi
    4015:	10 00                	adc    BYTE PTR [eax],al
	...

Disassembly of section .data:

00004018 <__data_start>:
    4018:	00 00                	add    BYTE PTR [eax],al
	...

0000401c <__dso_handle>:
    401c:	1c 40                	sbb    al,0x40
	...

Disassembly of section .bss:

00004020 <__bss_start>:
    4020:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 44 65 62          	sub    BYTE PTR [ebp+eiz*2+0x62],al
   9:	69 61 6e 20 38 2e 32 	imul   esp,DWORD PTR [ecx+0x6e],0x322e3820
  10:	2e 30 2d 31 34 29 20 	xor    BYTE PTR cs:0x20293431,ch
  17:	38 2e                	cmp    BYTE PTR [esi],ch
  19:	32 2e                	xor    ch,BYTE PTR [esi]
  1b:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	a9 11 00 00 80       	test   eax,0x80000011
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	ae                   	scas   al,BYTE PTR es:[edi]
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 01                	add    al,0x1
   c:	a9 00 00 00 0e       	test   eax,0xe000000
  11:	02 12                	add    dl,BYTE PTR [edx]
  13:	00 00                	add    BYTE PTR [eax],al
  15:	00 1e                	add    BYTE PTR [esi],bl
  17:	00 00                	add    BYTE PTR [eax],al
  19:	00 a9 11 00 00 80    	add    BYTE PTR [ecx-0x7fffffef],ch
	...
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 02                	add    BYTE PTR [edx],al
  2b:	38 01                	cmp    BYTE PTR [ecx],al
  2d:	00 00                	add    BYTE PTR [eax],al
  2f:	01 0c 61             	add    DWORD PTR [ecx+eiz*2],ecx
  32:	00 00                	add    BYTE PTR [eax],al
  34:	00 d5                	add    ch,dl
  36:	11 00                	adc    DWORD PTR [eax],eax
  38:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
  3c:	00 01                	add    BYTE PTR [ecx],al
  3e:	9c                   	pushf  
  3f:	61                   	popa   
  40:	00 00                	add    BYTE PTR [eax],al
  42:	00 03                	add    BYTE PTR [ebx],al
  44:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45:	00 00                	add    BYTE PTR [eax],al
  47:	00 01                	add    BYTE PTR [ecx],al
  49:	0c 68                	or     al,0x68
  4b:	00 00                	add    BYTE PTR [eax],al
  4d:	00 02                	add    BYTE PTR [edx],al
  4f:	91                   	xchg   ecx,eax
  50:	00 03                	add    BYTE PTR [ebx],al
  52:	3d 01 00 00 01       	cmp    eax,0x1000001
  57:	0c 6d                	or     al,0x6d
  59:	00 00                	add    BYTE PTR [eax],al
  5b:	00 03                	add    BYTE PTR [ebx],al
  5d:	91                   	xchg   ecx,eax
  5e:	04 06                	add    al,0x6
  60:	00 04 04             	add    BYTE PTR [esp+eax*1],al
  63:	05 28 01 00 00       	add    eax,0x128
  68:	05 61 00 00 00       	add    eax,0x61
  6d:	06                   	push   es
  6e:	04 73                	add    al,0x73
  70:	00 00                	add    BYTE PTR [eax],al
  72:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
  75:	08 00                	or     BYTE PTR [eax],al
  77:	00 00                	add    BYTE PTR [eax],al
  79:	00 07                	add    BYTE PTR [edi],al
  7b:	61                   	popa   
  7c:	64 64 00 01          	fs add BYTE PTR fs:[ecx],al
  80:	01 02                	add    DWORD PTR [edx],eax
  82:	a9 11 00 00 2c       	test   eax,0x2c000011
  87:	00 00                	add    BYTE PTR [eax],al
  89:	00 01                	add    BYTE PTR [ecx],al
  8b:	9c                   	pushf  
  8c:	08 61 00             	or     BYTE PTR [ecx+0x0],ah
  8f:	01 05 61 00 00 00    	add    DWORD PTR ds:0x61,eax
  95:	02 91 74 08 62 00    	add    dl,BYTE PTR [ecx+0x620874]
  9b:	01 05 61 00 00 00    	add    DWORD PTR ds:0x61,eax
  a1:	02 91 70 08 63 00    	add    dl,BYTE PTR [ecx+0x630870]
  a7:	01 05 61 00 00 00    	add    DWORD PTR ds:0x61,eax
  ad:	02                   	.byte 0x2
  ae:	91                   	xchg   ecx,eax
  af:	6c                   	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 42    	add    DWORD PTR ds:0x420b130e,esp
   8:	0b 03                	or     eax,DWORD PTR [ebx]
   a:	0e                   	push   cs
   b:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   d:	11 01                	adc    DWORD PTR [ecx],eax
   f:	12 06                	adc    al,BYTE PTR [esi]
  11:	10 17                	adc    BYTE PTR [edi],dl
  13:	99                   	cdq    
  14:	42                   	inc    edx
  15:	17                   	pop    ss
  16:	00 00                	add    BYTE PTR [eax],al
  18:	02 2e                	add    ch,BYTE PTR [esi]
  1a:	01 3f                	add    DWORD PTR [edi],edi
  1c:	19 03                	sbb    DWORD PTR [ebx],eax
  1e:	0e                   	push   cs
  1f:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  21:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  23:	49                   	dec    ecx
  24:	13 11                	adc    edx,DWORD PTR [ecx]
  26:	01 12                	add    DWORD PTR [edx],edx
  28:	06                   	push   es
  29:	40                   	inc    eax
  2a:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
  30:	00 00                	add    BYTE PTR [eax],al
  32:	03 05 00 03 0e 3a    	add    eax,DWORD PTR ds:0x3a0e0300
  38:	0b 3b                	or     edi,DWORD PTR [ebx]
  3a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  3d:	02 18                	add    bl,BYTE PTR [eax]
  3f:	00 00                	add    BYTE PTR [eax],al
  41:	04 24                	add    al,0x24
  43:	00 0b                	add    BYTE PTR [ebx],cl
  45:	0b 3e                	or     edi,DWORD PTR [esi]
  47:	0b 03                	or     eax,DWORD PTR [ebx]
  49:	0e                   	push   cs
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	05 26 00 49 13       	add    eax,0x13490026
  51:	00 00                	add    BYTE PTR [eax],al
  53:	06                   	push   es
  54:	0f 00 0b             	str    WORD PTR [ebx]
  57:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  5a:	00 00                	add    BYTE PTR [eax],al
  5c:	07                   	pop    es
  5d:	2e 01 03             	add    DWORD PTR cs:[ebx],eax
  60:	08 3a                	or     BYTE PTR [edx],bh
  62:	0b 3b                	or     edi,DWORD PTR [ebx]
  64:	0b 6a 19             	or     ebp,DWORD PTR [edx+0x19]
  67:	36 0b 11             	or     edx,DWORD PTR ss:[ecx]
  6a:	01 12                	add    DWORD PTR [edx],edx
  6c:	06                   	push   es
  6d:	40                   	inc    eax
  6e:	18 97 42 19 00 00    	sbb    BYTE PTR [edi+0x1942],dl
  74:	08 34 00             	or     BYTE PTR [eax+eax*1],dh
  77:	03 08                	add    ecx,DWORD PTR [eax]
  79:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  7b:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  7d:	49                   	dec    ecx
  7e:	13 02                	adc    eax,DWORD PTR [edx]
  80:	18 00                	sbb    BYTE PTR [eax],al
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	3c 00                	cmp    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	22 00                	and    al,BYTE PTR [eax]
   8:	00 00                	add    BYTE PTR [eax],al
   a:	01 01                	add    DWORD PTR [ecx],eax
   c:	fb                   	sti    
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	00 61 64             	add    BYTE PTR [ecx+0x64],ah
  1e:	64 5f                	fs pop edi
  20:	69 6e 74 2e 66 30 38 	imul   ebp,DWORD PTR [esi+0x74],0x3830662e
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 00                	add    BYTE PTR [eax],al
  2b:	00 00                	add    BYTE PTR [eax],al
  2d:	05 02 a9 11 00       	add    eax,0x11a902
  32:	00 01                	add    BYTE PTR [ecx],al
  34:	f8                   	clc    
  35:	75 76                	jne    ad <_init-0xf53>
  37:	ae                   	scas   al,BYTE PTR es:[edi]
  38:	3c 08                	cmp    al,0x8
  3a:	ac                   	lods   al,BYTE PTR ds:[esi]
  3b:	02 38                	add    bh,BYTE PTR [eax]
  3d:	00 01                	add    BYTE PTR [ecx],al
  3f:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	63 68 61             	arpl   WORD PTR [eax+0x61],bp
   3:	72 61                	jb     66 <_init-0xf9a>
   5:	63 74 65 72          	arpl   WORD PTR [ebp+eiz*2+0x72],si
   9:	28 6b 69             	sub    BYTE PTR [ebx+0x69],ch
   c:	6e                   	outs   dx,BYTE PTR ds:[esi]
   d:	64 3d 31 29 00 61    	fs cmp eax,0x61002931
  13:	64 64 5f             	fs fs pop edi
  16:	69 6e 74 2e 66 30 38 	imul   ebp,DWORD PTR [esi+0x74],0x3830662e
  1d:	00 2f                	add    BYTE PTR [edi],ch
  1f:	68 6f 6d 65 2f       	push   0x2f656d6f
  24:	68 61 78 6f 72       	push   0x726f7861
  29:	2f                   	das    
  2a:	45                   	inc    ebp
  2b:	6e                   	outs   dx,BYTE PTR ds:[esi]
  2c:	67 69 6e 65 65 72 69 	imul   ebp,DWORD PTR [bp+0x65],0x6e697265
  33:	6e 
  34:	67 2f                	addr16 das 
  36:	50                   	push   eax
  37:	72 6f                	jb     a8 <_init-0xf58>
  39:	67 72 61             	addr16 jb 9d <_init-0xf63>
  3c:	6d                   	ins    DWORD PTR es:[edi],dx
  3d:	6d                   	ins    DWORD PTR es:[edi],dx
  3e:	69 6e 67 2f 44 69 73 	imul   ebp,DWORD PTR [esi+0x67],0x7369442f
  45:	61                   	popa   
  46:	73 73                	jae    bb <_init-0xf45>
  48:	65 6d                	gs ins DWORD PTR es:[edi],dx
  4a:	62 6c 69 6e          	bound  ebp,QWORD PTR [ecx+ebp*2+0x6e]
  4e:	67 2d 42 69 6e 61    	addr16 sub eax,0x616e6942
  54:	72 69                	jb     bf <_init-0xf41>
  56:	65 73 2f             	gs jae 88 <_init-0xf78>
  59:	46                   	inc    esi
  5a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  5b:	72 74                	jb     d1 <_init-0xf2f>
  5d:	72 61                	jb     c0 <_init-0xf40>
  5f:	6e                   	outs   dx,BYTE PTR ds:[esi]
  60:	2f                   	das    
  61:	49                   	dec    ecx
  62:	6e                   	outs   dx,BYTE PTR ds:[esi]
  63:	74 65                	je     ca <_init-0xf36>
  65:	6c                   	ins    BYTE PTR es:[edi],dx
  66:	5f                   	pop    edi
  67:	61                   	popa   
  68:	72 63                	jb     cd <_init-0xf33>
  6a:	68 69 74 65 63       	push   0x63657469
  6f:	74 75                	je     e6 <_init-0xf1a>
  71:	72 65                	jb     d8 <_init-0xf28>
  73:	2f                   	das    
  74:	69 33 38 36 2f 49    	imul   esi,DWORD PTR [ebx],0x492f3638
  7a:	6e                   	outs   dx,BYTE PTR ds:[esi]
  7b:	74 65                	je     e2 <_init-0xf1e>
  7d:	67 65 72 5f          	addr16 gs jb e0 <_init-0xf20>
  81:	4f                   	dec    edi
  82:	70 65                	jo     e9 <_init-0xf17>
  84:	72 61                	jb     e7 <_init-0xf19>
  86:	74 69                	je     f1 <_init-0xf0f>
  88:	6f                   	outs   dx,DWORD PTR ds:[esi]
  89:	6e                   	outs   dx,BYTE PTR ds:[esi]
  8a:	73 2f                	jae    bb <_init-0xf45>
  8c:	41                   	inc    ecx
  8d:	64 64 5f             	fs fs pop edi
  90:	49                   	dec    ecx
  91:	6e                   	outs   dx,BYTE PTR ds:[esi]
  92:	74 2f                	je     c3 <_init-0xf3d>
  94:	57                   	push   edi
  95:	69 74 68 5f 44 65 62 	imul   esi,DWORD PTR [eax+ebp*2+0x5f],0x75626544
  9c:	75 
  9d:	67 5f                	addr16 pop edi
  9f:	49                   	dec    ecx
  a0:	6e                   	outs   dx,BYTE PTR ds:[esi]
  a1:	66 6f                	outs   dx,WORD PTR ds:[esi]
  a3:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
  a6:	67 63 00             	arpl   WORD PTR [bx+si],ax
  a9:	47                   	inc    edi
  aa:	4e                   	dec    esi
  ab:	55                   	push   ebp
  ac:	20 46 6f             	and    BYTE PTR [esi+0x6f],al
  af:	72 74                	jb     125 <_init-0xedb>
  b1:	72 61                	jb     114 <_init-0xeec>
  b3:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b4:	32 30                	xor    dh,BYTE PTR [eax]
  b6:	30 38                	xor    BYTE PTR [eax],bh
  b8:	20 38                	and    BYTE PTR [eax],bh
  ba:	2e 32 2e             	xor    ch,BYTE PTR cs:[esi]
  bd:	30 20                	xor    BYTE PTR [eax],ah
  bf:	2d 6d 33 32 20       	sub    eax,0x2032336d
  c4:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  c9:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  cf:	72 69                	jb     13a <_init-0xec6>
  d1:	63 20                	arpl   WORD PTR [eax],sp
  d3:	2d 6d 61 72 63       	sub    eax,0x6372616d
  d8:	68 3d 69 36 38       	push   0x3836693d
  dd:	36 20 2d 67 67 64 62 	and    BYTE PTR ss:0x62646767,ch
  e4:	33 20                	xor    esp,DWORD PTR [eax]
  e6:	2d 66 69 6e 74       	sub    eax,0x746e6966
  eb:	72 69                	jb     156 <_init-0xeaa>
  ed:	6e                   	outs   dx,BYTE PTR ds:[esi]
  ee:	73 69                	jae    159 <_init-0xea7>
  f0:	63 2d 6d 6f 64 75    	arpl   WORD PTR ds:0x75646f6d,bp
  f6:	6c                   	ins    BYTE PTR es:[edi],dx
  f7:	65 73 2d             	gs jae 127 <_init-0xed9>
  fa:	70 61                	jo     15d <_init-0xea3>
  fc:	74 68                	je     166 <_init-0xe9a>
  fe:	20 2f                	and    BYTE PTR [edi],ch
 100:	75 73                	jne    175 <_init-0xe8b>
 102:	72 2f                	jb     133 <_init-0xecd>
 104:	6c                   	ins    BYTE PTR es:[edi],dx
 105:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
 10c:	78 38                	js     146 <_init-0xeba>
 10e:	36 5f                	ss pop edi
 110:	36 34 2d             	ss xor al,0x2d
 113:	6c                   	ins    BYTE PTR es:[edi],dx
 114:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
 11b:	75 2f                	jne    14c <_init-0xeb4>
 11d:	38 2f                	cmp    BYTE PTR [edi],ch
 11f:	66 69 6e 63 6c 75    	imul   bp,WORD PTR [esi+0x63],0x756c
 125:	64 65 00 69 6e       	fs add BYTE PTR gs:[ecx+0x6e],ch
 12a:	74 65                	je     191 <_init-0xe6f>
 12c:	67 65 72 28          	addr16 gs jb 158 <_init-0xea8>
 130:	6b 69 6e 64          	imul   ebp,DWORD PTR [ecx+0x6e],0x64
 134:	3d 34 29 00 6d       	cmp    eax,0x6d002934
 139:	61                   	popa   
 13a:	69 6e 00 61 72 67 76 	imul   ebp,DWORD PTR [esi+0x0],0x76677261
	...

Disassembly of section .debug_macro:

00000000 <.debug_macro>:
   0:	04 00                	add    al,0x0
   2:	02 00                	add    al,BYTE PTR [eax]
   4:	00 00                	add    BYTE PTR [eax],al
   6:	00 03                	add    BYTE PTR [ebx],al
   8:	00 01                	add    BYTE PTR [ecx],al
   a:	04 00                	add    al,0x0
Contents of the .eh_frame section:


00000000 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -4
  Return address column: 8
  Augmentation data:     1b
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_offset: r8 (eip) at cfa-4
  DW_CFA_undefined: r8 (eip)

00000018 00000010 0000001c FDE cie=00000000 pc=00001070..000010a6
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000002c 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -4
  Return address column: 8
  Augmentation data:     1b
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_offset: r8 (eip) at cfa-4
  DW_CFA_nop
  DW_CFA_nop

00000044 00000020 0000001c FDE cie=0000002c pc=00001020..00001060
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 6 to 00001026
  DW_CFA_def_cfa_offset: 12
  DW_CFA_advance_loc: 10 to 00001030
  DW_CFA_def_cfa_expression (DW_OP_breg4 (esp): 4; DW_OP_breg8 (eip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit2; DW_OP_shl; DW_OP_plus)

00000068 00000010 00000040 FDE cie=0000002c pc=00001060..00001068
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000007c 0000001c 00000054 FDE cie=0000002c pc=000011a9..000011d5
  DW_CFA_advance_loc: 1 to 000011aa
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r5 (ebp) at cfa-8
  DW_CFA_advance_loc: 2 to 000011ac
  DW_CFA_def_cfa_register: r5 (ebp)
  DW_CFA_advance_loc: 40 to 000011d4
  DW_CFA_restore: r5 (ebp)
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_nop
  DW_CFA_nop

0000009c 00000030 00000074 FDE cie=0000002c pc=000011d5..00001229
  DW_CFA_advance_loc: 4 to 000011d9
  DW_CFA_def_cfa: r1 (ecx) ofs 0
  DW_CFA_advance_loc: 7 to 000011e0
  DW_CFA_expression: r5 (ebp) (DW_OP_breg5 (ebp): 0)
  DW_CFA_advance_loc: 4 to 000011e4
  DW_CFA_def_cfa_expression (DW_OP_breg5 (ebp): -8; DW_OP_deref)
  DW_CFA_expression: r3 (ebx) (DW_OP_breg5 (ebp): -4)
  DW_CFA_advance_loc: 63 to 00001223
  DW_CFA_restore: r1 (ecx)
  DW_CFA_def_cfa: r1 (ecx) ofs 0
  DW_CFA_advance_loc: 1 to 00001224
  DW_CFA_restore: r3 (ebx)
  DW_CFA_advance_loc: 1 to 00001225
  DW_CFA_restore: r5 (ebp)
  DW_CFA_advance_loc: 3 to 00001228
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_nop

000000d0 00000010 000000a8 FDE cie=0000002c pc=00001229..0000122d
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000e4 00000048 000000bc FDE cie=0000002c pc=00001230..00001285
  DW_CFA_advance_loc: 1 to 00001231
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r5 (ebp) at cfa-8
  DW_CFA_advance_loc: 1 to 00001232
  DW_CFA_def_cfa_offset: 12
  DW_CFA_offset: r7 (edi) at cfa-12
  DW_CFA_advance_loc: 1 to 00001233
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (esi) at cfa-16
  DW_CFA_advance_loc: 1 to 00001234
  DW_CFA_def_cfa_offset: 20
  DW_CFA_offset: r3 (ebx) at cfa-20
  DW_CFA_advance_loc: 14 to 00001242
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 33 to 00001263
  DW_CFA_def_cfa_offset: 36
  DW_CFA_advance_loc: 1 to 00001264
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 4 to 00001268
  DW_CFA_def_cfa_offset: 44
  DW_CFA_advance_loc: 4 to 0000126c
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 13 to 00001279
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 7 to 00001280
  DW_CFA_def_cfa_offset: 20
  DW_CFA_advance_loc: 1 to 00001281
  DW_CFA_restore: r3 (ebx)
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 1 to 00001282
  DW_CFA_restore: r6 (esi)
  DW_CFA_def_cfa_offset: 12
  DW_CFA_advance_loc: 1 to 00001283
  DW_CFA_restore: r7 (edi)
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 1 to 00001284
  DW_CFA_restore: r5 (ebp)
  DW_CFA_def_cfa_offset: 4
  DW_CFA_nop
  DW_CFA_nop

00000130 00000010 00000108 FDE cie=0000002c pc=00001290..00001291
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000144 ZERO terminator


Contents of the .debug_aranges section:

  Length:                   28
  Version:                  2
  Offset into .debug_info:  0x0
  Pointer Size:             4
  Segment Size:             0

    Address    Length
    000011a9 00000080 
    00000000 00000000 

Contents of the .debug_info section:

  Compilation Unit @ offset 0x0:
   Length:        0xae (32-bit)
   Version:       4
   Abbrev Offset: 0x0
   Pointer Size:  4
 <0><b>: Abbrev Number: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (indirect string, offset: 0xa9): GNU Fortran2008 8.2.0 -m32 -mtune=generic -march=i686 -ggdb3 -fintrinsic-modules-path /usr/lib/gcc/x86_64-linux-gnu/8/finclude
    <10>   DW_AT_language    : 14	(Fortran 95)
    <11>   DW_AT_identifier_case: 2	(down_case)
    <12>   DW_AT_name        : (indirect string, offset: 0x12): add_int.f08
    <16>   DW_AT_comp_dir    : (indirect string, offset: 0x1e): /home/haxor/Engineering/Programming/Disassembling-Binaries/Fortran/Intel_architecture/i386/Integer_Operations/Add_Int/With_Debug_Info
    <1a>   DW_AT_low_pc      : 0x11a9
    <1e>   DW_AT_high_pc     : 0x80
    <22>   DW_AT_stmt_list   : 0x0
    <26>   DW_AT_GNU_macros  : 0x0
 <1><2a>: Abbrev Number: 2 (DW_TAG_subprogram)
    <2b>   DW_AT_external    : 1
    <2b>   DW_AT_name        : (indirect string, offset: 0x138): main
    <2f>   DW_AT_decl_file   : 1
    <30>   DW_AT_decl_line   : 12
    <31>   DW_AT_type        : <0x61>
    <35>   DW_AT_low_pc      : 0x11d5
    <39>   DW_AT_high_pc     : 0x54
    <3d>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <3f>   DW_AT_GNU_all_tail_call_sites: 1
    <3f>   DW_AT_sibling     : <0x61>
 <2><43>: Abbrev Number: 3 (DW_TAG_formal_parameter)
    <44>   DW_AT_name        : (indirect string, offset: 0xa4): argc
    <48>   DW_AT_decl_file   : 1
    <49>   DW_AT_decl_line   : 12
    <4a>   DW_AT_type        : <0x68>
    <4e>   DW_AT_location    : 2 byte block: 91 0 	(DW_OP_fbreg: 0)
 <2><51>: Abbrev Number: 3 (DW_TAG_formal_parameter)
    <52>   DW_AT_name        : (indirect string, offset: 0x13d): argv
    <56>   DW_AT_decl_file   : 1
    <57>   DW_AT_decl_line   : 12
    <58>   DW_AT_type        : <0x6d>
    <5c>   DW_AT_location    : 3 byte block: 91 4 6 	(DW_OP_fbreg: 4; DW_OP_deref)
 <2><60>: Abbrev Number: 0
 <1><61>: Abbrev Number: 4 (DW_TAG_base_type)
    <62>   DW_AT_byte_size   : 4
    <63>   DW_AT_encoding    : 5	(signed)
    <64>   DW_AT_name        : (indirect string, offset: 0x128): integer(kind=4)
 <1><68>: Abbrev Number: 5 (DW_TAG_const_type)
    <69>   DW_AT_type        : <0x61>
 <1><6d>: Abbrev Number: 6 (DW_TAG_pointer_type)
    <6e>   DW_AT_byte_size   : 4
    <6f>   DW_AT_type        : <0x73>
 <1><73>: Abbrev Number: 4 (DW_TAG_base_type)
    <74>   DW_AT_byte_size   : 1
    <75>   DW_AT_encoding    : 8	(unsigned char)
    <76>   DW_AT_name        : (indirect string, offset: 0x0): character(kind=1)
 <1><7a>: Abbrev Number: 7 (DW_TAG_subprogram)
    <7b>   DW_AT_name        : add
    <7f>   DW_AT_decl_file   : 1
    <80>   DW_AT_decl_line   : 1
    <81>   DW_AT_main_subprogram: 1
    <81>   DW_AT_calling_convention: 2	(program)
    <82>   DW_AT_low_pc      : 0x11a9
    <86>   DW_AT_high_pc     : 0x2c
    <8a>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <8c>   DW_AT_GNU_all_call_sites: 1
 <2><8c>: Abbrev Number: 8 (DW_TAG_variable)
    <8d>   DW_AT_name        : a
    <8f>   DW_AT_decl_file   : 1
    <90>   DW_AT_decl_line   : 5
    <91>   DW_AT_type        : <0x61>
    <95>   DW_AT_location    : 2 byte block: 91 74 	(DW_OP_fbreg: -12)
 <2><98>: Abbrev Number: 8 (DW_TAG_variable)
    <99>   DW_AT_name        : b
    <9b>   DW_AT_decl_file   : 1
    <9c>   DW_AT_decl_line   : 5
    <9d>   DW_AT_type        : <0x61>
    <a1>   DW_AT_location    : 2 byte block: 91 70 	(DW_OP_fbreg: -16)
 <2><a4>: Abbrev Number: 8 (DW_TAG_variable)
    <a5>   DW_AT_name        : c
    <a7>   DW_AT_decl_file   : 1
    <a8>   DW_AT_decl_line   : 5
    <a9>   DW_AT_type        : <0x61>
    <ad>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><b0>: Abbrev Number: 0
 <1><b1>: Abbrev Number: 0

Contents of the .debug_abbrev section:

  Number TAG (0x0)
   1      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_identifier_case DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_GNU_macros   DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_tail_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_subprogram    [has children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_main_subprogram DW_FORM_flag_present
    DW_AT_calling_convention DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data4
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line:

  Offset:                      0x0
  Length:                      60
  DWARF Version:               2
  Prologue Length:             34
  Minimum Instruction Length:  1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table is empty.

 The File Name Table (offset 0x1c):
  Entry	Dir	Time	Size	Name
  1	0	0	0	add_int.f08

 Line Number Statements:
  [0x0000002c]  Extended opcode 2: set Address to 0x11a9
  [0x00000033]  Copy
  [0x00000034]  Special opcode 235: advance Address by 16 to 0x11b9 and Line by 6 to 7
  [0x00000035]  Special opcode 104: advance Address by 7 to 0x11c0 and Line by 1 to 8
  [0x00000036]  Special opcode 105: advance Address by 7 to 0x11c7 and Line by 2 to 10
  [0x00000037]  Special opcode 161: advance Address by 11 to 0x11d2 and Line by 2 to 12
  [0x00000038]  Special opcode 47: advance Address by 3 to 0x11d5 and Line by 0 to 12
  [0x00000039]  Advance PC by constant 17 to 0x11e6
  [0x0000003a]  Special opcode 159: advance Address by 11 to 0x11f1 and Line by 0 to 12
  [0x0000003b]  Advance PC by 56 to 0x1229
  [0x0000003d]  Extended opcode 1: End of Sequence


Contents of the .debug_str section:

  0x00000000 63686172 61637465 72286b69 6e643d31 character(kind=1
  0x00000010 29006164 645f696e 742e6630 38002f68 ).add_int.f08./h
  0x00000020 6f6d652f 6861786f 722f456e 67696e65 ome/haxor/Engine
  0x00000030 6572696e 672f5072 6f677261 6d6d696e ering/Programmin
  0x00000040 672f4469 73617373 656d626c 696e672d g/Disassembling-
  0x00000050 42696e61 72696573 2f466f72 7472616e Binaries/Fortran
  0x00000060 2f496e74 656c5f61 72636869 74656374 /Intel_architect
  0x00000070 7572652f 69333836 2f496e74 65676572 ure/i386/Integer
  0x00000080 5f4f7065 72617469 6f6e732f 4164645f _Operations/Add_
  0x00000090 496e742f 57697468 5f446562 75675f49 Int/With_Debug_I
  0x000000a0 6e666f00 61726763 00474e55 20466f72 nfo.argc.GNU For
  0x000000b0 7472616e 32303038 20382e32 2e30202d tran2008 8.2.0 -
  0x000000c0 6d333220 2d6d7475 6e653d67 656e6572 m32 -mtune=gener
  0x000000d0 6963202d 6d617263 683d6936 3836202d ic -march=i686 -
  0x000000e0 67676462 33202d66 696e7472 696e7369 ggdb3 -fintrinsi
  0x000000f0 632d6d6f 64756c65 732d7061 7468202f c-modules-path /
  0x00000100 7573722f 6c69622f 6763632f 7838365f usr/lib/gcc/x86_
  0x00000110 36342d6c 696e7578 2d676e75 2f382f66 64-linux-gnu/8/f
  0x00000120 696e636c 75646500 696e7465 67657228 include.integer(
  0x00000130 6b696e64 3d342900 6d61696e 00617267 kind=4).main.arg
  0x00000140 7600                                v.

Contents of the .debug_macro section:

  Offset:                      0x0
  Version:                     4
  Offset size:                 4
  Offset into .debug_line:     0x0

 DW_MACRO_start_file - lineno: 0 filenum: 1 filename: add_int.f08
 DW_MACRO_end_file



mod_int_Fortran_aarch64_ggdb3:     file format elf64-x86-64
mod_int_Fortran_aarch64_ggdb3
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001060

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000002d8 memsz 0x00000000000002d8 flags r--
  INTERP off    0x0000000000000318 vaddr 0x0000000000000318 paddr 0x0000000000000318 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x00000000000006c0 memsz 0x00000000000006c0 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x0000000000000189 memsz 0x0000000000000189 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x0000000000000158 memsz 0x0000000000000158 flags r--
    LOAD off    0x0000000000002d70 vaddr 0x0000000000003d70 paddr 0x0000000000003d70 align 2**12
         filesz 0x00000000000002b0 memsz 0x00000000000002b8 flags rw-
 DYNAMIC off    0x0000000000002d80 vaddr 0x0000000000003d80 paddr 0x0000000000003d80 align 2**3
         filesz 0x0000000000000240 memsz 0x0000000000000240 flags rw-
    NOTE off    0x0000000000002118 vaddr 0x0000000000002118 paddr 0x0000000000002118 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
    NOTE off    0x0000000000002138 vaddr 0x0000000000002138 paddr 0x0000000000002138 align 2**2
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
0x6474e553 off    0x0000000000002118 vaddr 0x0000000000002118 paddr 0x0000000000002118 align 2**3
         filesz 0x0000000000000020 memsz 0x0000000000000020 flags r--
EH_FRAME off    0x000000000000202c vaddr 0x000000000000202c paddr 0x000000000000202c align 2**2
         filesz 0x0000000000000034 memsz 0x0000000000000034 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002d70 vaddr 0x0000000000003d70 paddr 0x0000000000003d70 align 2**0
         filesz 0x0000000000000290 memsz 0x0000000000000290 flags r--

Dynamic Section:
  NEEDED               libgfortran.so.5
  NEEDED               libm.so.6
  NEEDED               libgcc_s.so.1
  NEEDED               libquadmath.so.0
  NEEDED               libc.so.6
  RPATH                /home/haxor/mambaforge/lib
  INIT                 0x0000000000001000
  FINI                 0x000000000000117c
  INIT_ARRAY           0x0000000000003d70
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003d78
  FINI_ARRAYSZ         0x0000000000000008
  HASH                 0x0000000000000338
  GNU_HASH             0x0000000000000370
  STRTAB               0x0000000000000458
  SYMTAB               0x0000000000000398
  STRSZ                0x0000000000000111
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000003fe8
  PLTRELSZ             0x0000000000000030
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000690
  RELA                 0x00000000000005d0
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS_1              0x0000000008000000
  VERNEED              0x0000000000000580
  VERNEEDNUM           0x0000000000000002
  VERSYM               0x000000000000056a
  RELACOUNT            0x0000000000000003

Version References:
  required from libgfortran.so.5:
    0x0792f968 0x00 03 GFORTRAN_8
  required from libc.so.6:
    0x069691b4 0x00 04 GLIBC_2.34
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000318  0000000000000318  00000318  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .hash         00000034  0000000000000338  0000000000000338  00000338  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .gnu.hash     00000024  0000000000000370  0000000000000370  00000370  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .dynsym       000000c0  0000000000000398  0000000000000398  00000398  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynstr       00000111  0000000000000458  0000000000000458  00000458  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .gnu.version  00000010  000000000000056a  000000000000056a  0000056a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version_r 00000050  0000000000000580  0000000000000580  00000580  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .rela.dyn     000000c0  00000000000005d0  00000000000005d0  000005d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.plt     00000030  0000000000000690  0000000000000690  00000690  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          00000030  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt.got      00000008  0000000000001050  0000000000001050  00001050  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         0000011c  0000000000001060  0000000000001060  00001060  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         0000000d  000000000000117c  000000000000117c  0000117c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       0000002c  0000000000002000  0000000000002000  00002000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000034  000000000000202c  000000000000202c  0000202c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000b4  0000000000002060  0000000000002060  00002060  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .note.gnu.property 00000020  0000000000002118  0000000000002118  00002118  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .note.ABI-tag 00000020  0000000000002138  0000000000002138  00002138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .init_array   00000008  0000000000003d70  0000000000003d70  00002d70  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .fini_array   00000008  0000000000003d78  0000000000003d78  00002d78  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      00000240  0000000000003d80  0000000000003d80  00002d80  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000028  0000000000003fc0  0000000000003fc0  00002fc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000028  0000000000003fe8  0000000000003fe8  00002fe8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000010  0000000000004010  0000000000004010  00003010  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000008  0000000000004020  0000000000004020  00003020  2**0
                  ALLOC
 26 .comment      00000055  0000000000000000  0000000000000000  00003020  2**0
                  CONTENTS, READONLY
 27 .gnu.build.attributes 00000f5c  0000000000006028  0000000000006028  00003078  2**2
                  CONTENTS, READONLY, OCTETS
 28 .debug_aranges 00000030  0000000000000000  0000000000000000  00003fd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_info   000000c6  0000000000000000  0000000000000000  00004004  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_abbrev 0000008e  0000000000000000  0000000000000000  000040ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 31 .debug_line   00000073  0000000000000000  0000000000000000  00004158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_str    00000150  0000000000000000  0000000000000000  000041cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 33 .debug_line_str 000000f7  0000000000000000  0000000000000000  0000431b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 34 .debug_macro  00000010  0000000000000000  0000000000000000  00004412  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000              Scrt1.o
0000000000001086 l       .text	0000000000000000              .hidden .annobin_abi_note.c
0000000000001086 l       .text	0000000000000000              .hidden .annobin_abi_note.c_end
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c.hot
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c_end.hot
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c.unlikely
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c_end.unlikely
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c.startup
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c_end.startup
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c.exit
0000000000001060 l       .text	0000000000000000              .hidden .annobin_abi_note.c_end.exit
0000000000002138 l     O .note.ABI-tag	0000000000000020              __abi_tag
0000000000001086 l       .text	0000000000000000              .hidden .annobin_init.c
0000000000001086 l       .text	0000000000000000              .hidden .annobin_init.c_end
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c.hot
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c_end.hot
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c.unlikely
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c_end.unlikely
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c.startup
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c_end.startup
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c.exit
0000000000001060 l       .text	0000000000000000              .hidden .annobin_init.c_end.exit
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000001086 l     F .text	0000000000000000              deregister_tm_clones
00000000000010a8 l     F .text	0000000000000000              register_tm_clones
00000000000010e1 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004020 l     O .bss	0000000000000001              completed.0
0000000000003d78 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001117 l     F .text	0000000000000000              frame_dummy
0000000000003d70 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              mod_int.f08
000000000000111d l     F .text	000000000000001f              MAIN__
0000000000002010 l     O .rodata	000000000000001c              options.0.0
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000002110 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
000000000000202c l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000003fe8 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000003d80 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000004010  w      .data	0000000000000000              data_start
0000000000001060 g     F .text	0000000000000026              _start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
000000000000117c g     F .fini	0000000000000000              .hidden _fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000004010 g       .data	0000000000000000              __data_start
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@GLIBC_2.2.5
0000000000004020 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000004018 g     O .data	0000000000000000              .hidden __dso_handle
0000000000004020 g       .bss	0000000000000000              __bss_start
0000000000000000       F *UND*	0000000000000000              _gfortran_set_options@GFORTRAN_8
0000000000004028 g       .bss	0000000000000000              _end
0000000000000000       F *UND*	0000000000000000              _gfortran_set_args@GFORTRAN_8
0000000000004020 g       .data	0000000000000000              _edata
0000000000000000       F *UND*	0000000000000000              __libc_start_main@GLIBC_2.34
000000000000113c g     F .text	0000000000000040              main
0000000000001000 g     F .init	0000000000000000              .hidden _init


Contents of section .interp:
 0318 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 0328 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .hash:
 0338 03000000 08000000 01000000 06000000  ................
 0348 07000000 00000000 00000000 00000000  ................
 0358 02000000 03000000 04000000 05000000  ................
 0368 00000000                             ....            
Contents of section .gnu.hash:
 0370 02000000 07000000 01000000 06000000  ................
 0380 00008100 00000000 07000000 00000000  ................
 0390 d165ce6d                             .e.m            
Contents of section .dynsym:
 0398 00000000 00000000 00000000 00000000  ................
 03a8 00000000 00000000 1d000000 20000000  ............ ...
 03b8 00000000 00000000 00000000 00000000  ................
 03c8 01000000 20000000 00000000 00000000  .... ...........
 03d8 00000000 00000000 2c000000 20000000  ........,... ...
 03e8 00000000 00000000 00000000 00000000  ................
 03f8 46000000 12000000 00000000 00000000  F...............
 0408 00000000 00000000 5c000000 12000000  ........\.......
 0418 00000000 00000000 00000000 00000000  ................
 0428 7e000000 12000000 00000000 00000000  ~...............
 0438 00000000 00000000 6f000000 22000000  ........o..."...
 0448 00000000 00000000 00000000 00000000  ................
Contents of section .dynstr:
 0458 005f4954 4d5f6465 72656769 73746572  ._ITM_deregister
 0468 544d436c 6f6e6554 61626c65 005f5f67  TMCloneTable.__g
 0478 6d6f6e5f 73746172 745f5f00 5f49544d  mon_start__._ITM
 0488 5f726567 69737465 72544d43 6c6f6e65  _registerTMClone
 0498 5461626c 65005f67 666f7274 72616e5f  Table._gfortran_
 04a8 7365745f 6f707469 6f6e7300 5f67666f  set_options._gfo
 04b8 72747261 6e5f7365 745f6172 6773005f  rtran_set_args._
 04c8 5f637861 5f66696e 616c697a 65005f5f  _cxa_finalize.__
 04d8 6c696263 5f737461 72745f6d 61696e00  libc_start_main.
 04e8 6c696267 666f7274 72616e2e 736f2e35  libgfortran.so.5
 04f8 006c6962 6d2e736f 2e36006c 69626763  .libm.so.6.libgc
 0508 635f732e 736f2e31 006c6962 71756164  c_s.so.1.libquad
 0518 6d617468 2e736f2e 30006c69 62632e73  math.so.0.libc.s
 0528 6f2e3600 47464f52 5452414e 5f380047  o.6.GFORTRAN_8.G
 0538 4c494243 5f322e33 3400474c 4942435f  LIBC_2.34.GLIBC_
 0548 322e322e 35002f68 6f6d652f 6861786f  2.2.5./home/haxo
 0558 722f6d61 6d626166 6f726765 2f6c6962  r/mambaforge/lib
 0568 00                                   .               
Contents of section .gnu.version:
 056a 00000100 01000100 03000300 04000200  ................
Contents of section .gnu.version_r:
 0580 01000100 90000000 10000000 20000000  ............ ...
 0590 68f99207 00000300 d4000000 00000000  h...............
 05a0 01000200 ca000000 10000000 00000000  ................
 05b0 b4919606 00000400 df000000 10000000  ................
 05c0 751a6909 00000200 ea000000 00000000  u.i.............
Contents of section .rela.dyn:
 05d0 703d0000 00000000 08000000 00000000  p=..............
 05e0 17110000 00000000 783d0000 00000000  ........x=......
 05f0 08000000 00000000 e1100000 00000000  ................
 0600 18400000 00000000 08000000 00000000  .@..............
 0610 18400000 00000000 c03f0000 00000000  .@.......?......
 0620 06000000 01000000 00000000 00000000  ................
 0630 c83f0000 00000000 06000000 02000000  .?..............
 0640 00000000 00000000 d03f0000 00000000  .........?......
 0650 06000000 03000000 00000000 00000000  ................
 0660 d83f0000 00000000 06000000 07000000  .?..............
 0670 00000000 00000000 e03f0000 00000000  .........?......
 0680 06000000 06000000 00000000 00000000  ................
Contents of section .rela.plt:
 0690 00400000 00000000 07000000 04000000  .@..............
 06a0 00000000 00000000 08400000 00000000  .........@......
 06b0 07000000 05000000 00000000 00000000  ................
Contents of section .init:
 1000 f30f1efa 4883ec08 488b05b1 2f000048  ....H...H.../..H
 1010 85c07402 ffd04883 c408c3             ..t...H....     
Contents of section .plt:
 1020 ff35ca2f 0000ff25 cc2f0000 0f1f4000  .5./...%./....@.
 1030 ff25ca2f 00006800 000000e9 e0ffffff  .%./..h.........
 1040 ff25c22f 00006801 000000e9 d0ffffff  .%./..h.........
Contents of section .plt.got:
 1050 ff25822f 00006690                    .%./..f.        
Contents of section .text:
 1060 f30f1efa 31ed4989 d15e4889 e24883e4  ....1.I..^H..H..
 1070 f0505445 31c031c9 488d3dbd 000000ff  .PTE1.1.H.=.....
 1080 155b2f00 00f4488d 3d932f00 00488d05  .[/...H.=./..H..
 1090 8c2f0000 4839f874 0e488b05 282f0000  ./..H9.t.H..(/..
 10a0 4885c074 02ffe0c3 488d3d71 2f000048  H..t....H.=q/..H
 10b0 8d356a2f 0000b902 00000048 29fe48c1  .5j/.......H).H.
 10c0 fe034889 f0489948 f7f94889 c64885c0  ..H..H.H..H..H..
 10d0 740e488b 05f72e00 004885c0 7402ffe0  t.H......H..t...
 10e0 c3f30f1e fa803d34 2f000000 75285548  ......=4/...u(UH
 10f0 833de12e 00000048 89e5740c 488b3d15  .=.....H..t.H.=.
 1100 2f0000e8 48ffffff e879ffff ffc6050c  /...H....y......
 1110 2f000001 5dc3c3f3 0f1efaeb 8b554889  /...]........UH.
 1120 e5c745fc 0a000000 c745f804 0000008b  ..E......E......
 1130 45fc99f7 7df88955 f4905dc3 554889e5  E...}..U..].UH..
 1140 4883ec10 897dfc48 8975f048 8b55f08b  H....}.H.u.H.U..
 1150 45fc4889 d689c7e8 e4feffff 488d05ad  E.H.........H...
 1160 0e000048 89c6bf07 000000e8 c0feffff  ...H............
 1170 e8a8ffff ffb80000 0000c9c3           ............    
Contents of section .fini:
 117c f30f1efa 4883ec08 4883c408 c3        ....H...H....   
Contents of section .rodata:
 2000 01000200 00000000 00000000 00000000  ................
 2010 44280000 ff3f0000 00000000 01000000  D(...?..........
 2020 01000000 00000000 1f000000           ............    
Contents of section .eh_frame_hdr:
 202c 011b033b 30000000 05000000 f4efffff  ...;0...........
 203c 64000000 24f0ffff 8c000000 34f0ffff  d...$.......4...
 204c 4c000000 f1f0ffff a4000000 10f1ffff  L...............
 205c c4000000                             ....            
Contents of section .eh_frame:
 2060 14000000 00000000 017a5200 01781001  .........zR..x..
 2070 1b0c0708 90010000 14000000 1c000000  ................
 2080 e0efffff 26000000 00440710 00000000  ....&....D......
 2090 24000000 34000000 88efffff 30000000  $...4.......0...
 20a0 000e1046 0e184a0f 0b770880 003f1a3b  ...F..J..w...?.;
 20b0 2a332422 00000000 14000000 5c000000  *3$"........\...
 20c0 90efffff 08000000 00000000 00000000  ................
 20d0 1c000000 74000000 45f0ffff 1f000000  ....t...E.......
 20e0 00410e10 8602430d 065a0c07 08000000  .A....C..Z......
 20f0 1c000000 94000000 44f0ffff 40000000  ........D...@...
 2100 00410e10 8602430d 067b0c07 08000000  .A....C..{......
 2110 00000000                             ....            
Contents of section .note.gnu.property:
 2118 04000000 10000000 05000000 474e5500  ............GNU.
 2128 028000c0 04000000 03000000 00000000  ................
Contents of section .note.ABI-tag:
 2138 04000000 10000000 01000000 474e5500  ............GNU.
 2148 00000000 03000000 02000000 00000000  ................
Contents of section .init_array:
 3d70 17110000 00000000                    ........        
Contents of section .fini_array:
 3d78 e1100000 00000000                    ........        
Contents of section .dynamic:
 3d80 01000000 00000000 90000000 00000000  ................
 3d90 01000000 00000000 a1000000 00000000  ................
 3da0 01000000 00000000 ab000000 00000000  ................
 3db0 01000000 00000000 b9000000 00000000  ................
 3dc0 01000000 00000000 ca000000 00000000  ................
 3dd0 0f000000 00000000 f6000000 00000000  ................
 3de0 0c000000 00000000 00100000 00000000  ................
 3df0 0d000000 00000000 7c110000 00000000  ........|.......
 3e00 19000000 00000000 703d0000 00000000  ........p=......
 3e10 1b000000 00000000 08000000 00000000  ................
 3e20 1a000000 00000000 783d0000 00000000  ........x=......
 3e30 1c000000 00000000 08000000 00000000  ................
 3e40 04000000 00000000 38030000 00000000  ........8.......
 3e50 f5feff6f 00000000 70030000 00000000  ...o....p.......
 3e60 05000000 00000000 58040000 00000000  ........X.......
 3e70 06000000 00000000 98030000 00000000  ................
 3e80 0a000000 00000000 11010000 00000000  ................
 3e90 0b000000 00000000 18000000 00000000  ................
 3ea0 15000000 00000000 00000000 00000000  ................
 3eb0 03000000 00000000 e83f0000 00000000  .........?......
 3ec0 02000000 00000000 30000000 00000000  ........0.......
 3ed0 14000000 00000000 07000000 00000000  ................
 3ee0 17000000 00000000 90060000 00000000  ................
 3ef0 07000000 00000000 d0050000 00000000  ................
 3f00 08000000 00000000 c0000000 00000000  ................
 3f10 09000000 00000000 18000000 00000000  ................
 3f20 fbffff6f 00000000 00000008 00000000  ...o............
 3f30 feffff6f 00000000 80050000 00000000  ...o............
 3f40 ffffff6f 00000000 02000000 00000000  ...o............
 3f50 f0ffff6f 00000000 6a050000 00000000  ...o....j.......
 3f60 f9ffff6f 00000000 03000000 00000000  ...o............
 3f70 00000000 00000000 00000000 00000000  ................
 3f80 00000000 00000000 00000000 00000000  ................
 3f90 00000000 00000000 00000000 00000000  ................
 3fa0 00000000 00000000 00000000 00000000  ................
 3fb0 00000000 00000000 00000000 00000000  ................
Contents of section .got:
 3fc0 00000000 00000000 00000000 00000000  ................
 3fd0 00000000 00000000 00000000 00000000  ................
 3fe0 00000000 00000000                    ........        
Contents of section .got.plt:
 3fe8 803d0000 00000000 00000000 00000000  .=..............
 3ff8 00000000 00000000 36100000 00000000  ........6.......
 4008 46100000 00000000                    F.......        
Contents of section .data:
 4010 00000000 00000000 18400000 00000000  .........@......
Contents of section .comment:
 0000 4743433a 2028474e 55292031 312e342e  GCC: (GNU) 11.4.
 0010 31203230 32333036 30352028 52656420  1 20230605 (Red 
 0020 48617420 31312e34 2e312d32 29004743  Hat 11.4.1-2).GC
 0030 433a2028 636f6e64 612d666f 72676520  C: (conda-forge 
 0040 67636320 31352e31 2e302d33 29203135  gcc 15.1.0-3) 15
 0050 2e312e30 00                          .1.0.           
Contents of section .gnu.build.attributes:
 6028 0b000000 10000000 00010000 47412401  ............GA$.
 6038 33703132 31320000 86100000 00000000  3p1212..........
 6048 86100000 00000000 20000000 00000000  ........ .......
 6058 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6068 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6078 36303500 20000000 00000000 00010000  605. ...........
 6088 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6098 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 60a8 0b000000 00000000 00010000 47412a47  ............GA*G
 60b8 4f57006a 05220000 06000000 00000000  OW.j."..........
 60c8 00010000 47412a02 03000000 0f000000  ....GA*.........
 60d8 00000000 00010000 47412b73 7461636b  ........GA+stack
 60e8 5f636c61 73680000 13000000 00000000  _clash..........
 60f8 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6108 74696f6e 00080000 0d000000 00000000  tion............
 6118 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6128 00000000 16000000 00000000 00010000  ................
 6138 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6148 54494f4e 53000000 06000000 00000000  TIONS...........
 6158 00010000 47412a07 03000000 05000000  ....GA*.........
 6168 00000000 00010000 47412108 00000000  ........GA!.....
 6178 11000000 00000000 00010000 47412173  ............GA!s
 6188 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6198 0b000000 10000000 00010000 47412401  ............GA$.
 61a8 33703132 31320000 60100000 00000000  3p1212..`.......
 61b8 60100000 00000000 20000000 00000000  `....... .......
 61c8 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 61d8 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 61e8 36303500 20000000 00000000 00010000  605. ...........
 61f8 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6208 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6218 0b000000 00000000 00010000 47412a47  ............GA*G
 6228 4f57006a 05220000 06000000 00000000  OW.j."..........
 6238 00010000 47412a02 03000000 0f000000  ....GA*.........
 6248 00000000 00010000 47412b73 7461636b  ........GA+stack
 6258 5f636c61 73680000 13000000 00000000  _clash..........
 6268 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6278 74696f6e 00080000 0d000000 00000000  tion............
 6288 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6298 00000000 16000000 00000000 00010000  ................
 62a8 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 62b8 54494f4e 53000000 06000000 00000000  TIONS...........
 62c8 00010000 47412a07 03000000 05000000  ....GA*.........
 62d8 00000000 00010000 47412108 00000000  ........GA!.....
 62e8 11000000 00000000 00010000 47412173  ............GA!s
 62f8 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6308 0b000000 10000000 00010000 47412401  ............GA$.
 6318 33703132 31320000 60100000 00000000  3p1212..`.......
 6328 60100000 00000000 20000000 00000000  `....... .......
 6338 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6348 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6358 36303500 20000000 00000000 00010000  605. ...........
 6368 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6378 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6388 0b000000 00000000 00010000 47412a47  ............GA*G
 6398 4f57006a 05220000 06000000 00000000  OW.j."..........
 63a8 00010000 47412a02 03000000 0f000000  ....GA*.........
 63b8 00000000 00010000 47412b73 7461636b  ........GA+stack
 63c8 5f636c61 73680000 13000000 00000000  _clash..........
 63d8 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 63e8 74696f6e 00080000 0d000000 00000000  tion............
 63f8 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6408 00000000 16000000 00000000 00010000  ................
 6418 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6428 54494f4e 53000000 06000000 00000000  TIONS...........
 6438 00010000 47412a07 03000000 05000000  ....GA*.........
 6448 00000000 00010000 47412108 00000000  ........GA!.....
 6458 11000000 00000000 00010000 47412173  ............GA!s
 6468 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6478 0b000000 10000000 00010000 47412401  ............GA$.
 6488 33703132 31320000 60100000 00000000  3p1212..`.......
 6498 60100000 00000000 20000000 00000000  `....... .......
 64a8 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 64b8 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 64c8 36303500 20000000 00000000 00010000  605. ...........
 64d8 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 64e8 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 64f8 0b000000 00000000 00010000 47412a47  ............GA*G
 6508 4f57006a 05220000 06000000 00000000  OW.j."..........
 6518 00010000 47412a02 03000000 0f000000  ....GA*.........
 6528 00000000 00010000 47412b73 7461636b  ........GA+stack
 6538 5f636c61 73680000 13000000 00000000  _clash..........
 6548 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6558 74696f6e 00080000 0d000000 00000000  tion............
 6568 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6578 00000000 16000000 00000000 00010000  ................
 6588 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6598 54494f4e 53000000 06000000 00000000  TIONS...........
 65a8 00010000 47412a07 03000000 05000000  ....GA*.........
 65b8 00000000 00010000 47412108 00000000  ........GA!.....
 65c8 11000000 00000000 00010000 47412173  ............GA!s
 65d8 7461636b 5f726561 6c69676e 00000000  tack_realign....
 65e8 0b000000 10000000 00010000 47412401  ............GA$.
 65f8 33703132 31320000 60100000 00000000  3p1212..`.......
 6608 60100000 00000000 20000000 00000000  `....... .......
 6618 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6628 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6638 36303500 20000000 00000000 00010000  605. ...........
 6648 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6658 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6668 0b000000 00000000 00010000 47412a47  ............GA*G
 6678 4f57006a 05220000 06000000 00000000  OW.j."..........
 6688 00010000 47412a02 03000000 0f000000  ....GA*.........
 6698 00000000 00010000 47412b73 7461636b  ........GA+stack
 66a8 5f636c61 73680000 13000000 00000000  _clash..........
 66b8 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 66c8 74696f6e 00080000 0d000000 00000000  tion............
 66d8 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 66e8 00000000 16000000 00000000 00010000  ................
 66f8 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6708 54494f4e 53000000 06000000 00000000  TIONS...........
 6718 00010000 47412a07 03000000 05000000  ....GA*.........
 6728 00000000 00010000 47412108 00000000  ........GA!.....
 6738 11000000 00000000 00010000 47412173  ............GA!s
 6748 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6758 0b000000 10000000 00010000 47412401  ............GA$.
 6768 33703132 31320000 86100000 00000000  3p1212..........
 6778 86100000 00000000 20000000 00000000  ........ .......
 6788 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6798 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 67a8 36303500 20000000 00000000 00010000  605. ...........
 67b8 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 67c8 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 67d8 0b000000 00000000 00010000 47412a47  ............GA*G
 67e8 4f57006a 05220000 06000000 00000000  OW.j."..........
 67f8 00010000 47412a02 03000000 0f000000  ....GA*.........
 6808 00000000 00010000 47412b73 7461636b  ........GA+stack
 6818 5f636c61 73680000 13000000 00000000  _clash..........
 6828 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6838 74696f6e 00080000 0d000000 00000000  tion............
 6848 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6858 00000000 16000000 00000000 00010000  ................
 6868 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6878 54494f4e 53000000 06000000 00000000  TIONS...........
 6888 00010000 47412a07 03000000 05000000  ....GA*.........
 6898 00000000 00010000 47412108 00000000  ........GA!.....
 68a8 11000000 00000000 00010000 47412173  ............GA!s
 68b8 7461636b 5f726561 6c69676e 00000000  tack_realign....
 68c8 0b000000 10000000 00010000 47412401  ............GA$.
 68d8 33703132 31320000 60100000 00000000  3p1212..`.......
 68e8 60100000 00000000 20000000 00000000  `....... .......
 68f8 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6908 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6918 36303500 20000000 00000000 00010000  605. ...........
 6928 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6938 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6948 0b000000 00000000 00010000 47412a47  ............GA*G
 6958 4f57006a 05220000 06000000 00000000  OW.j."..........
 6968 00010000 47412a02 03000000 0f000000  ....GA*.........
 6978 00000000 00010000 47412b73 7461636b  ........GA+stack
 6988 5f636c61 73680000 13000000 00000000  _clash..........
 6998 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 69a8 74696f6e 00080000 0d000000 00000000  tion............
 69b8 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 69c8 00000000 16000000 00000000 00010000  ................
 69d8 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 69e8 54494f4e 53000000 06000000 00000000  TIONS...........
 69f8 00010000 47412a07 03000000 05000000  ....GA*.........
 6a08 00000000 00010000 47412108 00000000  ........GA!.....
 6a18 11000000 00000000 00010000 47412173  ............GA!s
 6a28 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6a38 0b000000 10000000 00010000 47412401  ............GA$.
 6a48 33703132 31320000 60100000 00000000  3p1212..`.......
 6a58 60100000 00000000 20000000 00000000  `....... .......
 6a68 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6a78 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6a88 36303500 20000000 00000000 00010000  605. ...........
 6a98 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6aa8 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6ab8 0b000000 00000000 00010000 47412a47  ............GA*G
 6ac8 4f57006a 05220000 06000000 00000000  OW.j."..........
 6ad8 00010000 47412a02 03000000 0f000000  ....GA*.........
 6ae8 00000000 00010000 47412b73 7461636b  ........GA+stack
 6af8 5f636c61 73680000 13000000 00000000  _clash..........
 6b08 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6b18 74696f6e 00080000 0d000000 00000000  tion............
 6b28 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6b38 00000000 16000000 00000000 00010000  ................
 6b48 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6b58 54494f4e 53000000 06000000 00000000  TIONS...........
 6b68 00010000 47412a07 03000000 05000000  ....GA*.........
 6b78 00000000 00010000 47412108 00000000  ........GA!.....
 6b88 11000000 00000000 00010000 47412173  ............GA!s
 6b98 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6ba8 0b000000 10000000 00010000 47412401  ............GA$.
 6bb8 33703132 31320000 60100000 00000000  3p1212..`.......
 6bc8 60100000 00000000 20000000 00000000  `....... .......
 6bd8 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6be8 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6bf8 36303500 20000000 00000000 00010000  605. ...........
 6c08 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6c18 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6c28 0b000000 00000000 00010000 47412a47  ............GA*G
 6c38 4f57006a 05220000 06000000 00000000  OW.j."..........
 6c48 00010000 47412a02 03000000 0f000000  ....GA*.........
 6c58 00000000 00010000 47412b73 7461636b  ........GA+stack
 6c68 5f636c61 73680000 13000000 00000000  _clash..........
 6c78 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6c88 74696f6e 00080000 0d000000 00000000  tion............
 6c98 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6ca8 00000000 16000000 00000000 00010000  ................
 6cb8 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6cc8 54494f4e 53000000 06000000 00000000  TIONS...........
 6cd8 00010000 47412a07 03000000 05000000  ....GA*.........
 6ce8 00000000 00010000 47412108 00000000  ........GA!.....
 6cf8 11000000 00000000 00010000 47412173  ............GA!s
 6d08 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6d18 0b000000 10000000 00010000 47412401  ............GA$.
 6d28 33703132 31320000 60100000 00000000  3p1212..`.......
 6d38 60100000 00000000 20000000 00000000  `....... .......
 6d48 00010000 47412405 72756e6e 696e6720  ....GA$.running 
 6d58 67636320 31312e34 2e312032 30323330  gcc 11.4.1 20230
 6d68 36303500 20000000 00000000 00010000  605. ...........
 6d78 47412405 616e6e6f 62696e20 67636320  GA$.annobin gcc 
 6d88 31312e34 2e312032 30323330 36303500  11.4.1 20230605.
 6d98 0b000000 00000000 00010000 47412a47  ............GA*G
 6da8 4f57006a 05220000 06000000 00000000  OW.j."..........
 6db8 00010000 47412a02 03000000 0f000000  ....GA*.........
 6dc8 00000000 00010000 47412b73 7461636b  ........GA+stack
 6dd8 5f636c61 73680000 13000000 00000000  _clash..........
 6de8 00010000 47412a63 665f7072 6f746563  ....GA*cf_protec
 6df8 74696f6e 00080000 0d000000 00000000  tion............
 6e08 00010000 47412a46 4f525449 465900ff  ....GA*FORTIFY..
 6e18 00000000 16000000 00000000 00010000  ................
 6e28 47412b47 4c494243 58585f41 53534552  GA+GLIBCXX_ASSER
 6e38 54494f4e 53000000 06000000 00000000  TIONS...........
 6e48 00010000 47412a07 03000000 05000000  ....GA*.........
 6e58 00000000 00010000 47412108 00000000  ........GA!.....
 6e68 11000000 00000000 00010000 47412173  ............GA!s
 6e78 7461636b 5f726561 6c69676e 00000000  tack_realign....
 6e88 08000000 10000000 00010000 47412401  ............GA$.
 6e98 33613100 60100000 00000000 86100000  3a1.`...........
 6ea8 00000000 08000000 10000000 00010000  ................
 6eb8 47412401 33613100 86100000 00000000  GA$.3a1.........
 6ec8 86100000 00000000 08000000 10000000  ................
 6ed8 00010000 47412401 33613100 00100000  ....GA$.3a1.....
 6ee8 00000000 16100000 00000000 08000000  ................
 6ef8 10000000 00010000 47412401 33613100  ........GA$.3a1.
 6f08 7c110000 00000000 84110000 00000000  |...............
 6f18 08000000 10000000 00010000 47412401  ............GA$.
 6f28 33613100 7c110000 00000000 7c110000  3a1.|.......|...
 6f38 00000000 08000000 10000000 00010000  ................
 6f48 47412401 33613100 16100000 00000000  GA$.3a1.........
 6f58 1b100000 00000000 08000000 10000000  ................
 6f68 00010000 47412401 33613100 84110000  ....GA$.3a1.....
 6f78 00000000 89110000 00000000           ............    
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 1d110000 00000000 5f000000 00000000  ........_.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_info:
 0000 c2000000 05000108 00000000 04270000  .............'..
 0010 00230283 00000000 0000001d 11000000  .#..............
 0020 0000005f 00000000 00000000 00000000  ..._............
 0030 00000005 3e010000 010c136f 0000003c  ....>......o...<
 0040 11000000 00000040 00000000 00000001  .......@........
 0050 9c6f0000 00021200 00007600 00000291  .o........v.....
 0060 6c024b01 00007b00 00000391 60060003  l.K...{.....`...
 0070 04051700 0000066f 00000007 08810000  .......o........
 0080 00030108 00000000 08430100 0001010f  .........C......
 0090 021d1100 00000000 001f0000 00000000  ................
 00a0 00019c01 61001c6f 00000002 916c0162  ....a..o.....l.b
 00b0 001f6f00 00000291 68016300 226f0000  ..o.....h.c."o..
 00c0 00029164 0000                        ...d..          
Contents of section .debug_abbrev:
 0000 01340003 083a2101 3b210539 0b491302  .4...:!.;!.9.I..
 0010 18000002 0500030e 3a21013b 210c3921  ........:!.;!.9!
 0020 13491302 18000003 24000b0b 3e0b030e  .I......$...>...
 0030 00000411 01250e13 0b420b03 1f1b1f11  .....%...B......
 0040 01120710 17791700 00052e01 3f19030e  .....y......?...
 0050 3a0b3b0b 390b4913 11011207 40187c19  :.;.9.I.....@.|.
 0060 01130000 06260049 13000007 0f000b0b  .....&.I........
 0070 49130000 082e0103 0e3a0b3b 0b390b6a  I........:.;.9.j
 0080 19360b11 01120740 187a1900 0000      .6.....@.z....  
Contents of section .debug_line:
 0000 6f000000 05000800 33000000 010101fb  o.......3.......
 0010 0e0d0001 01010100 00000100 00010101  ................
 0020 1f020000 00008f00 00000201 1f020f03  ................
 0030 83000000 00830000 0000e100 00000105  ................
 0040 0f000902 1d110000 00000000 01050e50  ...............P
 0050 050d7505 15760513 a03ce400 02040106  ..u..v...<......
 0060 08120002 0402083c 00020403 58580202  .......<....XX..
 0070 000101                               ...             
Contents of section .debug_str:
 0000 63686172 61637465 72286b69 6e643d31  character(kind=1
 0010 29006172 67630069 6e746567 6572286b  ).argc.integer(k
 0020 696e643d 34290047 4e552046 6f727472  ind=4).GNU Fortr
 0030 616e3230 30382031 352e312e 30202d6d  an2008 15.1.0 -m
 0040 74756e65 3d67656e 65726963 202d6d61  tune=generic -ma
 0050 7263683d 7838362d 3634202d 67676462  rch=x86-64 -ggdb
 0060 33202d66 696e7472 696e7369 632d6d6f  3 -fintrinsic-mo
 0070 64756c65 732d7061 7468202f 686f6d65  dules-path /home
 0080 2f686178 6f722f6d 616d6261 666f7267  /haxor/mambaforg
 0090 652f6269 6e2f2e2e 2f6c6962 2f676363  e/bin/../lib/gcc
 00a0 2f783836 5f36342d 636f6e64 612d6c69  /x86_64-conda-li
 00b0 6e75782d 676e752f 31352e31 2e302f66  nux-gnu/15.1.0/f
 00c0 696e636c 75646520 2d667072 652d696e  include -fpre-in
 00d0 636c7564 653d2f68 6f6d652f 6861786f  clude=/home/haxo
 00e0 722f6d61 6d626166 6f726765 2f62696e  r/mambaforge/bin
 00f0 2f2e2e2f 7838365f 36342d63 6f6e6461  /../x86_64-conda
 0100 2d6c696e 75782d67 6e752f73 7973726f  -linux-gnu/sysro
 0110 6f742f75 73722f69 6e636c75 64652f66  ot/usr/include/f
 0120 696e636c 7564652f 6d617468 2d766563  include/math-vec
 0130 746f722d 666f7274 72616e2e 68006d61  tor-fortran.h.ma
 0140 696e006d 6f645f69 6e740061 72677600  in.mod_int.argv.
Contents of section .debug_line_str:
 0000 2f686f6d 652f6861 786f722f 446f6375  /home/haxor/Docu
 0010 6d656e74 732f456e 67696e65 6572696e  ments/Engineerin
 0020 672f4469 73617373 656d626c 696e672d  g/Disassembling-
 0030 42696e61 72696573 2f466f72 7472616e  Binaries/Fortran
 0040 2f41524d 5f617263 68697465 63747572  /ARM_architectur
 0050 652f4152 4d36342f 496e7465 6765725f  e/ARM64/Integer_
 0060 4f706572 6174696f 6e732f4d 6f645f49  Operations/Mod_I
 0070 6e742f57 6974685f 44656275 675f496e  nt/With_Debug_In
 0080 666f006d 6f645f69 6e742e66 3038002f  fo.mod_int.f08./
 0090 686f6d65 2f686178 6f722f6d 616d6261  home/haxor/mamba
 00a0 666f7267 652f6269 6e2f2e2e 2f783836  forge/bin/../x86
 00b0 5f36342d 636f6e64 612d6c69 6e75782d  _64-conda-linux-
 00c0 676e752f 73797372 6f6f742f 7573722f  gnu/sysroot/usr/
 00d0 696e636c 7564652f 66696e63 6c756465  include/finclude
 00e0 006d6174 682d7665 63746f72 2d666f72  .math-vector-for
 00f0 7472616e 2e6800                      tran.h.         
Contents of section .debug_macro:
 0000 05000200 00000003 00010300 02040400  ................

Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .hash:

0000000000000338 <.hash>:
 338:	03 00                	add    (%rax),%eax
 33a:	00 00                	add    %al,(%rax)
 33c:	08 00                	or     %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	01 00                	add    %eax,(%rax)
 342:	00 00                	add    %al,(%rax)
 344:	06                   	(bad)
 345:	00 00                	add    %al,(%rax)
 347:	00 07                	add    %al,(%rdi)
	...
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	00 00                	add    %al,(%rax)
 35b:	00 03                	add    %al,(%rbx)
 35d:	00 00                	add    %al,(%rax)
 35f:	00 04 00             	add    %al,(%rax,%rax,1)
 362:	00 00                	add    %al,(%rax)
 364:	05 00 00 00 00       	add    $0x0,%eax
 369:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000370 <.gnu.hash>:
 370:	02 00                	add    (%rax),%al
 372:	00 00                	add    %al,(%rax)
 374:	07                   	(bad)
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 06                	add    %al,(%rsi)
 37d:	00 00                	add    %al,(%rax)
 37f:	00 00                	add    %al,(%rax)
 381:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 387:	00 07                	add    %al,(%rdi)
 389:	00 00                	add    %al,(%rax)
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 d1                	add    %dl,%cl
 391:	65 ce                	gs (bad)
 393:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000398 <.dynsym>:
	...
 3b0:	1d 00 00 00 20       	sbb    $0x20000000,%eax
	...
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 01                	add    %al,(%rcx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 20                	add    %ah,(%rax)
	...
 3dd:	00 00                	add    %al,(%rax)
 3df:	00 2c 00             	add    %ch,(%rax,%rax,1)
 3e2:	00 00                	add    %al,(%rax)
 3e4:	20 00                	and    %al,(%rax)
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	46 00 00             	rex.RX add %r8b,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 7e 00             	add    %bh,0x0(%rsi)
 42a:	00 00                	add    %al,(%rax)
 42c:	12 00                	adc    (%rax),%al
	...
 43e:	00 00                	add    %al,(%rax)
 440:	6f                   	outsl  %ds:(%rsi),(%dx)
 441:	00 00                	add    %al,(%rax)
 443:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000458 <.dynstr>:
 458:	00 5f 49             	add    %bl,0x49(%rdi)
 45b:	54                   	push   %rsp
 45c:	4d 5f                	rex.WRB pop %r15
 45e:	64 65 72 65          	fs gs jb 4c7 <_init-0xb39>
 462:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 469:	4d 
 46a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 46c:	6f                   	outsl  %ds:(%rsi),(%dx)
 46d:	6e                   	outsb  %ds:(%rsi),(%dx)
 46e:	65 54                	gs push %rsp
 470:	61                   	(bad)
 471:	62                   	(bad)
 472:	6c                   	insb   (%dx),%es:(%rdi)
 473:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 477:	67 6d                	insl   (%dx),%es:(%edi)
 479:	6f                   	outsl  %ds:(%rsi),(%dx)
 47a:	6e                   	outsb  %ds:(%rsi),(%dx)
 47b:	5f                   	pop    %rdi
 47c:	73 74                	jae    4f2 <_init-0xb0e>
 47e:	61                   	(bad)
 47f:	72 74                	jb     4f5 <_init-0xb0b>
 481:	5f                   	pop    %rdi
 482:	5f                   	pop    %rdi
 483:	00 5f 49             	add    %bl,0x49(%rdi)
 486:	54                   	push   %rsp
 487:	4d 5f                	rex.WRB pop %r15
 489:	72 65                	jb     4f0 <_init-0xb10>
 48b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 492:	4d 
 493:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 495:	6f                   	outsl  %ds:(%rsi),(%dx)
 496:	6e                   	outsb  %ds:(%rsi),(%dx)
 497:	65 54                	gs push %rsp
 499:	61                   	(bad)
 49a:	62                   	(bad)
 49b:	6c                   	insb   (%dx),%es:(%rdi)
 49c:	65 00 5f 67          	add    %bl,%gs:0x67(%rdi)
 4a0:	66 6f                	outsw  %ds:(%rsi),(%dx)
 4a2:	72 74                	jb     518 <_init-0xae8>
 4a4:	72 61                	jb     507 <_init-0xaf9>
 4a6:	6e                   	outsb  %ds:(%rsi),(%dx)
 4a7:	5f                   	pop    %rdi
 4a8:	73 65                	jae    50f <_init-0xaf1>
 4aa:	74 5f                	je     50b <_init-0xaf5>
 4ac:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ad:	70 74                	jo     523 <_init-0xadd>
 4af:	69 6f 6e 73 00 5f 67 	imul   $0x675f0073,0x6e(%rdi),%ebp
 4b6:	66 6f                	outsw  %ds:(%rsi),(%dx)
 4b8:	72 74                	jb     52e <_init-0xad2>
 4ba:	72 61                	jb     51d <_init-0xae3>
 4bc:	6e                   	outsb  %ds:(%rsi),(%dx)
 4bd:	5f                   	pop    %rdi
 4be:	73 65                	jae    525 <_init-0xadb>
 4c0:	74 5f                	je     521 <_init-0xadf>
 4c2:	61                   	(bad)
 4c3:	72 67                	jb     52c <_init-0xad4>
 4c5:	73 00                	jae    4c7 <_init-0xb39>
 4c7:	5f                   	pop    %rdi
 4c8:	5f                   	pop    %rdi
 4c9:	63 78 61             	movsxd 0x61(%rax),%edi
 4cc:	5f                   	pop    %rdi
 4cd:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4d3:	7a 65                	jp     53a <_init-0xac6>
 4d5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4d8:	6c                   	insb   (%dx),%es:(%rdi)
 4d9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4e0:	72 74                	jb     556 <_init-0xaaa>
 4e2:	5f                   	pop    %rdi
 4e3:	6d                   	insl   (%dx),%es:(%rdi)
 4e4:	61                   	(bad)
 4e5:	69 6e 00 6c 69 62 67 	imul   $0x6762696c,0x0(%rsi),%ebp
 4ec:	66 6f                	outsw  %ds:(%rsi),(%dx)
 4ee:	72 74                	jb     564 <_init-0xa9c>
 4f0:	72 61                	jb     553 <_init-0xaad>
 4f2:	6e                   	outsb  %ds:(%rsi),(%dx)
 4f3:	2e 73 6f             	jae,pn 565 <_init-0xa9b>
 4f6:	2e 35 00 6c 69 62    	cs xor $0x62696c00,%eax
 4fc:	6d                   	insl   (%dx),%es:(%rdi)
 4fd:	2e 73 6f             	jae,pn 56f <_init-0xa91>
 500:	2e 36 00 6c 69 62    	cs ss add %ch,0x62(%rcx,%rbp,2)
 506:	67 63 63 5f          	movsxd 0x5f(%ebx),%esp
 50a:	73 2e                	jae    53a <_init-0xac6>
 50c:	73 6f                	jae    57d <_init-0xa83>
 50e:	2e 31 00             	cs xor %eax,(%rax)
 511:	6c                   	insb   (%dx),%es:(%rdi)
 512:	69 62 71 75 61 64 6d 	imul   $0x6d646175,0x71(%rdx),%esp
 519:	61                   	(bad)
 51a:	74 68                	je     584 <_init-0xa7c>
 51c:	2e 73 6f             	jae,pn 58e <_init-0xa72>
 51f:	2e 30 00             	cs xor %al,(%rax)
 522:	6c                   	insb   (%dx),%es:(%rdi)
 523:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 52a:	36 00 47 46          	ss add %al,0x46(%rdi)
 52e:	4f 52                	rex.WRXB push %r10
 530:	54                   	push   %rsp
 531:	52                   	push   %rdx
 532:	41                   	rex.B
 533:	4e 5f                	rex.WRX pop %rdi
 535:	38 00                	cmp    %al,(%rax)
 537:	47                   	rex.RXB
 538:	4c                   	rex.WR
 539:	49                   	rex.WB
 53a:	42                   	rex.X
 53b:	43 5f                	rex.XB pop %r15
 53d:	32 2e                	xor    (%rsi),%ch
 53f:	33 34 00             	xor    (%rax,%rax,1),%esi
 542:	47                   	rex.RXB
 543:	4c                   	rex.WR
 544:	49                   	rex.WB
 545:	42                   	rex.X
 546:	43 5f                	rex.XB pop %r15
 548:	32 2e                	xor    (%rsi),%ch
 54a:	32 2e                	xor    (%rsi),%ch
 54c:	35 00 2f 68 6f       	xor    $0x6f682f00,%eax
 551:	6d                   	insl   (%dx),%es:(%rdi)
 552:	65 2f                	gs (bad)
 554:	68 61 78 6f 72       	push   $0x726f7861
 559:	2f                   	(bad)
 55a:	6d                   	insl   (%dx),%es:(%rdi)
 55b:	61                   	(bad)
 55c:	6d                   	insl   (%dx),%es:(%rdi)
 55d:	62 61 66 6f 72       	(bad)
 562:	67 65 2f             	addr32 gs (bad)
 565:	6c                   	insb   (%dx),%es:(%rdi)
 566:	69                   	.byte 0x69
 567:	62                   	.byte 0x62
	...

Disassembly of section .gnu.version:

000000000000056a <.gnu.version>:
 56a:	00 00                	add    %al,(%rax)
 56c:	01 00                	add    %eax,(%rax)
 56e:	01 00                	add    %eax,(%rax)
 570:	01 00                	add    %eax,(%rax)
 572:	03 00                	add    (%rax),%eax
 574:	03 00                	add    (%rax),%eax
 576:	04 00                	add    $0x0,%al
 578:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000580 <.gnu.version_r>:
 580:	01 00                	add    %eax,(%rax)
 582:	01 00                	add    %eax,(%rax)
 584:	90                   	nop
 585:	00 00                	add    %al,(%rax)
 587:	00 10                	add    %dl,(%rax)
 589:	00 00                	add    %al,(%rax)
 58b:	00 20                	add    %ah,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 68 f9             	add    %ch,-0x7(%rax)
 592:	92                   	xchg   %eax,%edx
 593:	07                   	(bad)
 594:	00 00                	add    %al,(%rax)
 596:	03 00                	add    (%rax),%eax
 598:	d4                   	(bad)
 599:	00 00                	add    %al,(%rax)
 59b:	00 00                	add    %al,(%rax)
 59d:	00 00                	add    %al,(%rax)
 59f:	00 01                	add    %al,(%rcx)
 5a1:	00 02                	add    %al,(%rdx)
 5a3:	00 ca                	add    %cl,%dl
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 10                	add    %dl,(%rax)
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 00                	add    %al,(%rax)
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 b4 91 96 06 00 00 	add    %dh,0x696(%rcx,%rdx,4)
 5b6:	04 00                	add    $0x0,%al
 5b8:	df 00                	filds  (%rax)
 5ba:	00 00                	add    %al,(%rax)
 5bc:	10 00                	adc    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	75 1a                	jne    5dc <_init-0xa24>
 5c2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 5c8:	ea                   	(bad)
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000005d0 <.rela.dyn>:
 5d0:	70 3d                	jo     60f <_init-0x9f1>
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	08 00                	or     %al,(%rax)
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	17                   	(bad)
 5e1:	11 00                	adc    %eax,(%rax)
 5e3:	00 00                	add    %al,(%rax)
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 78 3d             	add    %bh,0x3d(%rax)
 5ea:	00 00                	add    %al,(%rax)
 5ec:	00 00                	add    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	08 00                	or     %al,(%rax)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	e1 10                	loope  60a <_init-0x9f6>
 5fa:	00 00                	add    %al,(%rax)
 5fc:	00 00                	add    %al,(%rax)
 5fe:	00 00                	add    %al,(%rax)
 600:	18 40 00             	sbb    %al,0x0(%rax)
 603:	00 00                	add    %al,(%rax)
 605:	00 00                	add    %al,(%rax)
 607:	00 08                	add    %cl,(%rax)
 609:	00 00                	add    %al,(%rax)
 60b:	00 00                	add    %al,(%rax)
 60d:	00 00                	add    %al,(%rax)
 60f:	00 18                	add    %bl,(%rax)
 611:	40 00 00             	rex add %al,(%rax)
 614:	00 00                	add    %al,(%rax)
 616:	00 00                	add    %al,(%rax)
 618:	c0 3f 00             	sarb   $0x0,(%rdi)
 61b:	00 00                	add    %al,(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 06                	add    %al,(%rsi)
 621:	00 00                	add    %al,(%rax)
 623:	00 01                	add    %al,(%rcx)
	...
 62d:	00 00                	add    %al,(%rax)
 62f:	00 c8                	add    %cl,%al
 631:	3f                   	(bad)
 632:	00 00                	add    %al,(%rax)
 634:	00 00                	add    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	06                   	(bad)
 639:	00 00                	add    %al,(%rax)
 63b:	00 02                	add    %al,(%rdx)
	...
 645:	00 00                	add    %al,(%rax)
 647:	00 d0                	add    %dl,%al
 649:	3f                   	(bad)
 64a:	00 00                	add    %al,(%rax)
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	06                   	(bad)
 651:	00 00                	add    %al,(%rax)
 653:	00 03                	add    %al,(%rbx)
	...
 65d:	00 00                	add    %al,(%rax)
 65f:	00 d8                	add    %bl,%al
 661:	3f                   	(bad)
 662:	00 00                	add    %al,(%rax)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	06                   	(bad)
 669:	00 00                	add    %al,(%rax)
 66b:	00 07                	add    %al,(%rdi)
	...
 675:	00 00                	add    %al,(%rax)
 677:	00 e0                	add    %ah,%al
 679:	3f                   	(bad)
 67a:	00 00                	add    %al,(%rax)
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	06                   	(bad)
 681:	00 00                	add    %al,(%rax)
 683:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .rela.plt:

0000000000000690 <.rela.plt>:
 690:	00 40 00             	add    %al,0x0(%rax)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 07                	add    %al,(%rdi)
 699:	00 00                	add    %al,(%rax)
 69b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 6a6:	00 00                	add    %al,(%rax)
 6a8:	08 40 00             	or     %al,0x0(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 07                	add    %al,(%rdi)
 6b1:	00 00                	add    %al,(%rax)
 6b3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6b9 <_init-0x947>
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 b1 2f 00 00 	mov    0x2fb1(%rip),%rax        # 3fc0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <_gfortran_set_options@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <_gfortran_set_options@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <_gfortran_set_options@GFORTRAN_8>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <_gfortran_set_args@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <_gfortran_set_args@GFORTRAN_8>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	ff 25 82 2f 00 00    	jmp    *0x2f82(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	45 31 c0             	xor    %r8d,%r8d
    1076:	31 c9                	xor    %ecx,%ecx
    1078:	48 8d 3d bd 00 00 00 	lea    0xbd(%rip),%rdi        # 113c <main>
    107f:	ff 15 5b 2f 00 00    	call   *0x2f5b(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.34>
    1085:	f4                   	hlt

0000000000001086 <deregister_tm_clones>:
    1086:	48 8d 3d 93 2f 00 00 	lea    0x2f93(%rip),%rdi        # 4020 <__TMC_END__>
    108d:	48 8d 05 8c 2f 00 00 	lea    0x2f8c(%rip),%rax        # 4020 <__TMC_END__>
    1094:	48 39 f8             	cmp    %rdi,%rax
    1097:	74 0e                	je     10a7 <deregister_tm_clones+0x21>
    1099:	48 8b 05 28 2f 00 00 	mov    0x2f28(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10a0:	48 85 c0             	test   %rax,%rax
    10a3:	74 02                	je     10a7 <deregister_tm_clones+0x21>
    10a5:	ff e0                	jmp    *%rax
    10a7:	c3                   	ret

00000000000010a8 <register_tm_clones>:
    10a8:	48 8d 3d 71 2f 00 00 	lea    0x2f71(%rip),%rdi        # 4020 <__TMC_END__>
    10af:	48 8d 35 6a 2f 00 00 	lea    0x2f6a(%rip),%rsi        # 4020 <__TMC_END__>
    10b6:	b9 02 00 00 00       	mov    $0x2,%ecx
    10bb:	48 29 fe             	sub    %rdi,%rsi
    10be:	48 c1 fe 03          	sar    $0x3,%rsi
    10c2:	48 89 f0             	mov    %rsi,%rax
    10c5:	48 99                	cqto
    10c7:	48 f7 f9             	idiv   %rcx
    10ca:	48 89 c6             	mov    %rax,%rsi
    10cd:	48 85 c0             	test   %rax,%rax
    10d0:	74 0e                	je     10e0 <register_tm_clones+0x38>
    10d2:	48 8b 05 f7 2e 00 00 	mov    0x2ef7(%rip),%rax        # 3fd0 <_ITM_registerTMCloneTable@Base>
    10d9:	48 85 c0             	test   %rax,%rax
    10dc:	74 02                	je     10e0 <register_tm_clones+0x38>
    10de:	ff e0                	jmp    *%rax
    10e0:	c3                   	ret

00000000000010e1 <__do_global_dtors_aux>:
    10e1:	f3 0f 1e fa          	endbr64
    10e5:	80 3d 34 2f 00 00 00 	cmpb   $0x0,0x2f34(%rip)        # 4020 <__TMC_END__>
    10ec:	75 28                	jne    1116 <__do_global_dtors_aux+0x35>
    10ee:	55                   	push   %rbp
    10ef:	48 83 3d e1 2e 00 00 	cmpq   $0x0,0x2ee1(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    10f6:	00 
    10f7:	48 89 e5             	mov    %rsp,%rbp
    10fa:	74 0c                	je     1108 <__do_global_dtors_aux+0x27>
    10fc:	48 8b 3d 15 2f 00 00 	mov    0x2f15(%rip),%rdi        # 4018 <__dso_handle>
    1103:	e8 48 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1108:	e8 79 ff ff ff       	call   1086 <deregister_tm_clones>
    110d:	c6 05 0c 2f 00 00 01 	movb   $0x1,0x2f0c(%rip)        # 4020 <__TMC_END__>
    1114:	5d                   	pop    %rbp
    1115:	c3                   	ret
    1116:	c3                   	ret

0000000000001117 <frame_dummy>:
    1117:	f3 0f 1e fa          	endbr64
    111b:	eb 8b                	jmp    10a8 <register_tm_clones>

000000000000111d <MAIN__>:
program mod_int
    111d:	55                   	push   %rbp
    111e:	48 89 e5             	mov    %rsp,%rbp

        implicit none

        integer         :: a, b, c

        a = 10
    1121:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
        b = 4
    1128:	c7 45 f8 04 00 00 00 	movl   $0x4,-0x8(%rbp)

        c = MOD(a, b)
    112f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1132:	99                   	cltd
    1133:	f7 7d f8             	idivl  -0x8(%rbp)
    1136:	89 55 f4             	mov    %edx,-0xc(%rbp)

end program mod_int
    1139:	90                   	nop
    113a:	5d                   	pop    %rbp
    113b:	c3                   	ret

000000000000113c <main>:
    113c:	55                   	push   %rbp
    113d:	48 89 e5             	mov    %rsp,%rbp
    1140:	48 83 ec 10          	sub    $0x10,%rsp
    1144:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1147:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    114b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    114f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1152:	48 89 d6             	mov    %rdx,%rsi
    1155:	89 c7                	mov    %eax,%edi
    1157:	e8 e4 fe ff ff       	call   1040 <_gfortran_set_args@plt>
    115c:	48 8d 05 ad 0e 00 00 	lea    0xead(%rip),%rax        # 2010 <options.0.0>
    1163:	48 89 c6             	mov    %rax,%rsi
    1166:	bf 07 00 00 00       	mov    $0x7,%edi
    116b:	e8 c0 fe ff ff       	call   1030 <_gfortran_set_options@plt>
    1170:	e8 a8 ff ff ff       	call   111d <MAIN__>
    1175:	b8 00 00 00 00       	mov    $0x0,%eax
    117a:	c9                   	leave
    117b:	c3                   	ret

Disassembly of section .fini:

000000000000117c <_fini>:
    117c:	f3 0f 1e fa          	endbr64
    1180:	48 83 ec 08          	sub    $0x8,%rsp
    1184:	48 83 c4 08          	add    $0x8,%rsp
    1188:	c3                   	ret

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
	...

0000000000002010 <options.0.0>:
    2010:	44 28 00             	sub    %r8b,(%rax)
    2013:	00 ff                	add    %bh,%bh
    2015:	3f                   	(bad)
    2016:	00 00                	add    %al,(%rax)
    2018:	00 00                	add    %al,(%rax)
    201a:	00 00                	add    %al,(%rax)
    201c:	01 00                	add    %eax,(%rax)
    201e:	00 00                	add    %al,(%rax)
    2020:	01 00                	add    %eax,(%rax)
    2022:	00 00                	add    %al,(%rax)
    2024:	00 00                	add    %al,(%rax)
    2026:	00 00                	add    %al,(%rax)
    2028:	1f                   	(bad)
    2029:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame_hdr:

000000000000202c <__GNU_EH_FRAME_HDR>:
    202c:	01 1b                	add    %ebx,(%rbx)
    202e:	03 3b                	add    (%rbx),%edi
    2030:	30 00                	xor    %al,(%rax)
    2032:	00 00                	add    %al,(%rax)
    2034:	05 00 00 00 f4       	add    $0xf4000000,%eax
    2039:	ef                   	out    %eax,(%dx)
    203a:	ff                   	(bad)
    203b:	ff 64 00 00          	jmp    *0x0(%rax,%rax,1)
    203f:	00 24 f0             	add    %ah,(%rax,%rsi,8)
    2042:	ff                   	(bad)
    2043:	ff 8c 00 00 00 34 f0 	decl   -0xfcc0000(%rax,%rax,1)
    204a:	ff                   	(bad)
    204b:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
    204f:	00 f1                	add    %dh,%cl
    2051:	f0 ff                	lock (bad)
    2053:	ff a4 00 00 00 10 f1 	jmp    *-0xef00000(%rax,%rax,1)
    205a:	ff                   	(bad)
    205b:	ff c4                	inc    %esp
    205d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000002060 <__FRAME_END__-0xb0>:
    2060:	14 00                	adc    $0x0,%al
    2062:	00 00                	add    %al,(%rax)
    2064:	00 00                	add    %al,(%rax)
    2066:	00 00                	add    %al,(%rax)
    2068:	01 7a 52             	add    %edi,0x52(%rdx)
    206b:	00 01                	add    %al,(%rcx)
    206d:	78 10                	js     207f <__GNU_EH_FRAME_HDR+0x53>
    206f:	01 1b                	add    %ebx,(%rbx)
    2071:	0c 07                	or     $0x7,%al
    2073:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2079:	00 00                	add    %al,(%rax)
    207b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    207e:	00 00                	add    %al,(%rax)
    2080:	e0 ef                	loopne 2071 <__GNU_EH_FRAME_HDR+0x45>
    2082:	ff                   	(bad)
    2083:	ff 26                	jmp    *(%rsi)
    2085:	00 00                	add    %al,(%rax)
    2087:	00 00                	add    %al,(%rax)
    2089:	44 07                	rex.R (bad)
    208b:	10 00                	adc    %al,(%rax)
    208d:	00 00                	add    %al,(%rax)
    208f:	00 24 00             	add    %ah,(%rax,%rax,1)
    2092:	00 00                	add    %al,(%rax)
    2094:	34 00                	xor    $0x0,%al
    2096:	00 00                	add    %al,(%rax)
    2098:	88 ef                	mov    %ch,%bh
    209a:	ff                   	(bad)
    209b:	ff 30                	push   (%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 00                	add    %al,(%rax)
    20a1:	0e                   	(bad)
    20a2:	10 46 0e             	adc    %al,0xe(%rsi)
    20a5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20a8:	0b 77 08             	or     0x8(%rdi),%esi
    20ab:	80 00 3f             	addb   $0x3f,(%rax)
    20ae:	1a 3b                	sbb    (%rbx),%bh
    20b0:	2a 33                	sub    (%rbx),%dh
    20b2:	24 22                	and    $0x22,%al
    20b4:	00 00                	add    %al,(%rax)
    20b6:	00 00                	add    %al,(%rax)
    20b8:	14 00                	adc    $0x0,%al
    20ba:	00 00                	add    %al,(%rax)
    20bc:	5c                   	pop    %rsp
    20bd:	00 00                	add    %al,(%rax)
    20bf:	00 90 ef ff ff 08    	add    %dl,0x8ffffef(%rax)
	...
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20d2:	00 00                	add    %al,(%rax)
    20d4:	74 00                	je     20d6 <__GNU_EH_FRAME_HDR+0xaa>
    20d6:	00 00                	add    %al,(%rax)
    20d8:	45                   	rex.RB
    20d9:	f0 ff                	lock (bad)
    20db:	ff 1f                	lcall  *(%rdi)
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 00                	add    %al,(%rax)
    20e1:	41 0e                	rex.B (bad)
    20e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    20e9:	5a                   	pop    %rdx
    20ea:	0c 07                	or     $0x7,%al
    20ec:	08 00                	or     %al,(%rax)
    20ee:	00 00                	add    %al,(%rax)
    20f0:	1c 00                	sbb    $0x0,%al
    20f2:	00 00                	add    %al,(%rax)
    20f4:	94                   	xchg   %eax,%esp
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 44 f0 ff          	add    %al,-0x1(%rax,%rsi,8)
    20fb:	ff 40 00             	incl   0x0(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	00 41 0e             	add    %al,0xe(%rcx)
    2103:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2109:	7b 0c                	jnp    2117 <__FRAME_END__+0x7>
    210b:	07                   	(bad)
    210c:	08 00                	or     %al,(%rax)
	...

0000000000002110 <__FRAME_END__>:
    2110:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.property:

0000000000002118 <.note.gnu.property>:
    2118:	04 00                	add    $0x0,%al
    211a:	00 00                	add    %al,(%rax)
    211c:	10 00                	adc    %al,(%rax)
    211e:	00 00                	add    %al,(%rax)
    2120:	05 00 00 00 47       	add    $0x47000000,%eax
    2125:	4e 55                	rex.WRX push %rbp
    2127:	00 02                	add    %al,(%rdx)
    2129:	80 00 c0             	addb   $0xc0,(%rax)
    212c:	04 00                	add    $0x0,%al
    212e:	00 00                	add    %al,(%rax)
    2130:	03 00                	add    (%rax),%eax
    2132:	00 00                	add    %al,(%rax)
    2134:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.ABI-tag:

0000000000002138 <__abi_tag>:
    2138:	04 00                	add    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	10 00                	adc    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 00                	add    %eax,(%rax)
    2142:	00 00                	add    %al,(%rax)
    2144:	47                   	rex.RXB
    2145:	4e 55                	rex.WRX push %rbp
    2147:	00 00                	add    %al,(%rax)
    2149:	00 00                	add    %al,(%rax)
    214b:	00 03                	add    %al,(%rbx)
    214d:	00 00                	add    %al,(%rax)
    214f:	00 02                	add    %al,(%rdx)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 00                	add    %al,(%rax)
    2155:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d70 <__frame_dummy_init_array_entry>:
    3d70:	17                   	(bad)
    3d71:	11 00                	adc    %eax,(%rax)
    3d73:	00 00                	add    %al,(%rax)
    3d75:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d78 <__do_global_dtors_aux_fini_array_entry>:
    3d78:	e1 10                	loope  3d8a <_DYNAMIC+0xa>
    3d7a:	00 00                	add    %al,(%rax)
    3d7c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d80 <_DYNAMIC>:
    3d80:	01 00                	add    %eax,(%rax)
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
    3d86:	00 00                	add    %al,(%rax)
    3d88:	90                   	nop
    3d89:	00 00                	add    %al,(%rax)
    3d8b:	00 00                	add    %al,(%rax)
    3d8d:	00 00                	add    %al,(%rax)
    3d8f:	00 01                	add    %al,(%rcx)
    3d91:	00 00                	add    %al,(%rax)
    3d93:	00 00                	add    %al,(%rax)
    3d95:	00 00                	add    %al,(%rax)
    3d97:	00 a1 00 00 00 00    	add    %ah,0x0(%rcx)
    3d9d:	00 00                	add    %al,(%rax)
    3d9f:	00 01                	add    %al,(%rcx)
    3da1:	00 00                	add    %al,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 ab 00 00 00 00    	add    %ch,0x0(%rbx)
    3dad:	00 00                	add    %al,(%rax)
    3daf:	00 01                	add    %al,(%rcx)
    3db1:	00 00                	add    %al,(%rax)
    3db3:	00 00                	add    %al,(%rax)
    3db5:	00 00                	add    %al,(%rax)
    3db7:	00 b9 00 00 00 00    	add    %bh,0x0(%rcx)
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 01                	add    %al,(%rcx)
    3dc1:	00 00                	add    %al,(%rax)
    3dc3:	00 00                	add    %al,(%rax)
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 ca                	add    %cl,%dl
    3dc9:	00 00                	add    %al,(%rax)
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 0f                	add    %cl,(%rdi)
    3dd1:	00 00                	add    %al,(%rax)
    3dd3:	00 00                	add    %al,(%rax)
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 f6                	add    %dh,%dh
    3dd9:	00 00                	add    %al,(%rax)
    3ddb:	00 00                	add    %al,(%rax)
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	00 10                	add    %dl,(%rax)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	0d 00 00 00 00       	or     $0x0,%eax
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 19                	add    %bl,(%rcx)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 70 3d             	add    %dh,0x3d(%rax)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	1b 00                	sbb    (%rax),%eax
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	08 00                	or     %al,(%rax)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	1a 00                	sbb    (%rax),%al
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	78 3d                	js     3e67 <_DYNAMIC+0xe7>
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	1c 00                	sbb    $0x0,%al
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	08 00                	or     %al,(%rax)
    3e3a:	00 00                	add    %al,(%rax)
    3e3c:	00 00                	add    %al,(%rax)
    3e3e:	00 00                	add    %al,(%rax)
    3e40:	04 00                	add    $0x0,%al
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	38 03                	cmp    %al,(%rbx)
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	f5                   	cmc
    3e51:	fe                   	(bad)
    3e52:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 70 03             	add    %dh,0x3(%rax)
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	05 00 00 00 00       	add    $0x0,%eax
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 58 04             	add    %bl,0x4(%rax)
    3e6a:	00 00                	add    %al,(%rax)
    3e6c:	00 00                	add    %al,(%rax)
    3e6e:	00 00                	add    %al,(%rax)
    3e70:	06                   	(bad)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 98 03 00 00 00    	add    %bl,0x3(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 0a                	add    %cl,(%rdx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 11                	add    %dl,(%rcx)
    3e89:	01 00                	add    %eax,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 0b                	add    %cl,(%rbx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 18                	add    %bl,(%rax)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ea5 <_DYNAMIC+0x125>
	...
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 03                	add    %al,(%rbx)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 e8                	add    %ch,%al
    3eb9:	3f                   	(bad)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	02 00                	add    (%rax),%al
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	30 00                	xor    %al,(%rax)
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	14 00                	adc    $0x0,%al
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	07                   	(bad)
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 17                	add    %dl,(%rdi)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 90 06 00 00 00    	add    %dl,0x6(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 07                	add    %al,(%rdi)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 d0                	add    %dl,%al
    3ef9:	05 00 00 00 00       	add    $0x0,%eax
    3efe:	00 00                	add    %al,(%rax)
    3f00:	08 00                	or     %al,(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	c0 00 00             	rolb   $0x0,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 09                	add    %cl,(%rcx)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 18                	add    %bl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 fb                	add    %bh,%bl
    3f21:	ff                   	(bad)
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 00                	add    %al,(%rax)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	08 00                	or     %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 fe                	add    %bh,%dh
    3f31:	ff                   	(bad)
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 80 05 00 00 00    	add    %al,0x5(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 ff                	add    %bh,%bh
    3f41:	ff                   	(bad)
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 02                	add    %al,(%rdx)
    3f49:	00 00                	add    %al,(%rax)
    3f4b:	00 00                	add    %al,(%rax)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 f0                	add    %dh,%al
    3f51:	ff                   	(bad)
    3f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 6a 05             	add    %ch,0x5(%rdx)
    3f5a:	00 00                	add    %al,(%rax)
    3f5c:	00 00                	add    %al,(%rax)
    3f5e:	00 00                	add    %al,(%rax)
    3f60:	f9                   	stc
    3f61:	ff                   	(bad)
    3f62:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fc0 <.got>:
	...

Disassembly of section .got.plt:

0000000000003fe8 <_GLOBAL_OFFSET_TABLE_>:
    3fe8:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 3fef <_GLOBAL_OFFSET_TABLE_+0x7>
	...
    3fff:	00 36                	add    %dh,(%rsi)
    4001:	10 00                	adc    %al,(%rax)
    4003:	00 00                	add    %al,(%rax)
    4005:	00 00                	add    %al,(%rax)
    4007:	00 46 10             	add    %al,0x10(%rsi)
    400a:	00 00                	add    %al,(%rax)
    400c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004010 <__data_start>:
	...

0000000000004018 <__dso_handle>:
    4018:	18 40 00             	sbb    %al,0x0(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004020 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 31                	xor    %esi,(%rcx)
   d:	2e 34 2e             	cs xor $0x2e,%al
  10:	31 20                	xor    %esp,(%rax)
  12:	32 30                	xor    (%rax),%dh
  14:	32 33                	xor    (%rbx),%dh
  16:	30 36                	xor    %dh,(%rsi)
  18:	30 35 20 28 52 65    	xor    %dh,0x65522820(%rip)        # 6552283e <_end+0x6551e816>
  1e:	64 20 48 61          	and    %cl,%fs:0x61(%rax)
  22:	74 20                	je     44 <_init-0xfbc>
  24:	31 31                	xor    %esi,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	31 2d 32 29 00 47    	xor    %ebp,0x47002932(%rip)        # 47002961 <_end+0x46ffe939>
  2f:	43                   	rex.XB
  30:	43 3a 20             	rex.XB cmp (%r8),%spl
  33:	28 63 6f             	sub    %ah,0x6f(%rbx)
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	64 61                	fs (bad)
  39:	2d 66 6f 72 67       	sub    $0x67726f66,%eax
  3e:	65 20 67 63          	and    %ah,%gs:0x63(%rdi)
  42:	63 20                	movsxd (%rax),%esp
  44:	31 35 2e 31 2e 30    	xor    %esi,0x302e312e(%rip)        # 302e3178 <_end+0x302df150>
  4a:	2d 33 29 20 31       	sub    $0x31202933,%eax
  4f:	35 2e 31 2e 30       	xor    $0x302e312e,%eax
	...

Disassembly of section .gnu.build.attributes:

0000000000006028 <.gnu.build.attributes>:
    6028:	0b 00                	or     (%rax),%eax
    602a:	00 00                	add    %al,(%rax)
    602c:	10 00                	adc    %al,(%rax)
    602e:	00 00                	add    %al,(%rax)
    6030:	00 01                	add    %al,(%rcx)
    6032:	00 00                	add    %al,(%rax)
    6034:	47                   	rex.RXB
    6035:	41 24 01             	rex.B and $0x1,%al
    6038:	33 70 31             	xor    0x31(%rax),%esi
    603b:	32 31                	xor    (%rcx),%dh
    603d:	32 00                	xor    (%rax),%al
    603f:	00 86 10 00 00 00    	add    %al,0x10(%rsi)
    6045:	00 00                	add    %al,(%rax)
    6047:	00 86 10 00 00 00    	add    %al,0x10(%rsi)
    604d:	00 00                	add    %al,(%rax)
    604f:	00 20                	add    %ah,(%rax)
	...
    6059:	01 00                	add    %eax,(%rax)
    605b:	00 47 41             	add    %al,0x41(%rdi)
    605e:	24 05                	and    $0x5,%al
    6060:	72 75                	jb     60d7 <_end+0x20af>
    6062:	6e                   	outsb  %ds:(%rsi),(%dx)
    6063:	6e                   	outsb  %ds:(%rsi),(%dx)
    6064:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    606b:	20 31                	and    %dh,(%rcx)
    606d:	31 2e                	xor    %ebp,(%rsi)
    606f:	34 2e                	xor    $0x2e,%al
    6071:	31 20                	xor    %esp,(%rax)
    6073:	32 30                	xor    (%rax),%dh
    6075:	32 33                	xor    (%rbx),%dh
    6077:	30 36                	xor    %dh,(%rsi)
    6079:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 807f <_end+0x4057>
    607f:	00 00                	add    %al,(%rax)
    6081:	00 00                	add    %al,(%rax)
    6083:	00 00                	add    %al,(%rax)
    6085:	01 00                	add    %eax,(%rax)
    6087:	00 47 41             	add    %al,0x41(%rdi)
    608a:	24 05                	and    $0x5,%al
    608c:	61                   	(bad)
    608d:	6e                   	outsb  %ds:(%rsi),(%dx)
    608e:	6e                   	outsb  %ds:(%rsi),(%dx)
    608f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6090:	62                   	(bad)
    6091:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6098:	31 31                	xor    %esi,(%rcx)
    609a:	2e 34 2e             	cs xor $0x2e,%al
    609d:	31 20                	xor    %esp,(%rax)
    609f:	32 30                	xor    (%rax),%dh
    60a1:	32 33                	xor    (%rbx),%dh
    60a3:	30 36                	xor    %dh,(%rsi)
    60a5:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 6bab <_end+0x2b83>
    60ab:	00 00                	add    %al,(%rax)
    60ad:	00 00                	add    %al,(%rax)
    60af:	00 00                	add    %al,(%rax)
    60b1:	01 00                	add    %eax,(%rax)
    60b3:	00 47 41             	add    %al,0x41(%rdi)
    60b6:	2a 47 4f             	sub    0x4f(%rdi),%al
    60b9:	57                   	push   %rdi
    60ba:	00 6a 05             	add    %ch,0x5(%rdx)
    60bd:	22 00                	and    (%rax),%al
    60bf:	00 06                	add    %al,(%rsi)
	...
    60c9:	01 00                	add    %eax,(%rax)
    60cb:	00 47 41             	add    %al,0x41(%rdi)
    60ce:	2a 02                	sub    (%rdx),%al
    60d0:	03 00                	add    (%rax),%eax
    60d2:	00 00                	add    %al,(%rax)
    60d4:	0f 00 00             	sldt   (%rax)
    60d7:	00 00                	add    %al,(%rax)
    60d9:	00 00                	add    %al,(%rax)
    60db:	00 00                	add    %al,(%rax)
    60dd:	01 00                	add    %eax,(%rax)
    60df:	00 47 41             	add    %al,0x41(%rdi)
    60e2:	2b 73 74             	sub    0x74(%rbx),%esi
    60e5:	61                   	(bad)
    60e6:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    60e9:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    60ed:	68 00 00 13 00       	push   $0x130000
    60f2:	00 00                	add    %al,(%rax)
    60f4:	00 00                	add    %al,(%rax)
    60f6:	00 00                	add    %al,(%rax)
    60f8:	00 01                	add    %al,(%rcx)
    60fa:	00 00                	add    %al,(%rax)
    60fc:	47                   	rex.RXB
    60fd:	41 2a 63 66          	sub    0x66(%r11),%spl
    6101:	5f                   	pop    %rdi
    6102:	70 72                	jo     6176 <_end+0x214e>
    6104:	6f                   	outsl  %ds:(%rsi),(%dx)
    6105:	74 65                	je     616c <_end+0x2144>
    6107:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    610b:	6e                   	outsb  %ds:(%rsi),(%dx)
    610c:	00 08                	add    %cl,(%rax)
    610e:	00 00                	add    %al,(%rax)
    6110:	0d 00 00 00 00       	or     $0x0,%eax
    6115:	00 00                	add    %al,(%rax)
    6117:	00 00                	add    %al,(%rax)
    6119:	01 00                	add    %eax,(%rax)
    611b:	00 47 41             	add    %al,0x41(%rdi)
    611e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6121:	52                   	push   %rdx
    6122:	54                   	push   %rsp
    6123:	49                   	rex.WB
    6124:	46 59                	rex.RX pop %rcx
    6126:	00 ff                	add    %bh,%bh
    6128:	00 00                	add    %al,(%rax)
    612a:	00 00                	add    %al,(%rax)
    612c:	16                   	(bad)
	...
    6135:	01 00                	add    %eax,(%rax)
    6137:	00 47 41             	add    %al,0x41(%rdi)
    613a:	2b 47 4c             	sub    0x4c(%rdi),%eax
    613d:	49                   	rex.WB
    613e:	42                   	rex.X
    613f:	43 58                	rex.XB pop %r8
    6141:	58                   	pop    %rax
    6142:	5f                   	pop    %rdi
    6143:	41 53                	push   %r11
    6145:	53                   	push   %rbx
    6146:	45 52                	rex.RB push %r10
    6148:	54                   	push   %rsp
    6149:	49                   	rex.WB
    614a:	4f                   	rex.WRXB
    614b:	4e 53                	rex.WRX push %rbx
    614d:	00 00                	add    %al,(%rax)
    614f:	00 06                	add    %al,(%rsi)
	...
    6159:	01 00                	add    %eax,(%rax)
    615b:	00 47 41             	add    %al,0x41(%rdi)
    615e:	2a 07                	sub    (%rdi),%al
    6160:	03 00                	add    (%rax),%eax
    6162:	00 00                	add    %al,(%rax)
    6164:	05 00 00 00 00       	add    $0x0,%eax
    6169:	00 00                	add    %al,(%rax)
    616b:	00 00                	add    %al,(%rax)
    616d:	01 00                	add    %eax,(%rax)
    616f:	00 47 41             	add    %al,0x41(%rdi)
    6172:	21 08                	and    %ecx,(%rax)
    6174:	00 00                	add    %al,(%rax)
    6176:	00 00                	add    %al,(%rax)
    6178:	11 00                	adc    %eax,(%rax)
    617a:	00 00                	add    %al,(%rax)
    617c:	00 00                	add    %al,(%rax)
    617e:	00 00                	add    %al,(%rax)
    6180:	00 01                	add    %al,(%rcx)
    6182:	00 00                	add    %al,(%rax)
    6184:	47                   	rex.RXB
    6185:	41 21 73 74          	and    %esi,0x74(%r11)
    6189:	61                   	(bad)
    618a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    618d:	72 65                	jb     61f4 <_end+0x21cc>
    618f:	61                   	(bad)
    6190:	6c                   	insb   (%dx),%es:(%rdi)
    6191:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6198:	0b 00                	or     (%rax),%eax
    619a:	00 00                	add    %al,(%rax)
    619c:	10 00                	adc    %al,(%rax)
    619e:	00 00                	add    %al,(%rax)
    61a0:	00 01                	add    %al,(%rcx)
    61a2:	00 00                	add    %al,(%rax)
    61a4:	47                   	rex.RXB
    61a5:	41 24 01             	rex.B and $0x1,%al
    61a8:	33 70 31             	xor    0x31(%rax),%esi
    61ab:	32 31                	xor    (%rcx),%dh
    61ad:	32 00                	xor    (%rax),%al
    61af:	00 60 10             	add    %ah,0x10(%rax)
    61b2:	00 00                	add    %al,(%rax)
    61b4:	00 00                	add    %al,(%rax)
    61b6:	00 00                	add    %al,(%rax)
    61b8:	60                   	(bad)
    61b9:	10 00                	adc    %al,(%rax)
    61bb:	00 00                	add    %al,(%rax)
    61bd:	00 00                	add    %al,(%rax)
    61bf:	00 20                	add    %ah,(%rax)
	...
    61c9:	01 00                	add    %eax,(%rax)
    61cb:	00 47 41             	add    %al,0x41(%rdi)
    61ce:	24 05                	and    $0x5,%al
    61d0:	72 75                	jb     6247 <_end+0x221f>
    61d2:	6e                   	outsb  %ds:(%rsi),(%dx)
    61d3:	6e                   	outsb  %ds:(%rsi),(%dx)
    61d4:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    61db:	20 31                	and    %dh,(%rcx)
    61dd:	31 2e                	xor    %ebp,(%rsi)
    61df:	34 2e                	xor    $0x2e,%al
    61e1:	31 20                	xor    %esp,(%rax)
    61e3:	32 30                	xor    (%rax),%dh
    61e5:	32 33                	xor    (%rbx),%dh
    61e7:	30 36                	xor    %dh,(%rsi)
    61e9:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 81ef <_end+0x41c7>
    61ef:	00 00                	add    %al,(%rax)
    61f1:	00 00                	add    %al,(%rax)
    61f3:	00 00                	add    %al,(%rax)
    61f5:	01 00                	add    %eax,(%rax)
    61f7:	00 47 41             	add    %al,0x41(%rdi)
    61fa:	24 05                	and    $0x5,%al
    61fc:	61                   	(bad)
    61fd:	6e                   	outsb  %ds:(%rsi),(%dx)
    61fe:	6e                   	outsb  %ds:(%rsi),(%dx)
    61ff:	6f                   	outsl  %ds:(%rsi),(%dx)
    6200:	62                   	(bad)
    6201:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6208:	31 31                	xor    %esi,(%rcx)
    620a:	2e 34 2e             	cs xor $0x2e,%al
    620d:	31 20                	xor    %esp,(%rax)
    620f:	32 30                	xor    (%rax),%dh
    6211:	32 33                	xor    (%rbx),%dh
    6213:	30 36                	xor    %dh,(%rsi)
    6215:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 6d1b <_end+0x2cf3>
    621b:	00 00                	add    %al,(%rax)
    621d:	00 00                	add    %al,(%rax)
    621f:	00 00                	add    %al,(%rax)
    6221:	01 00                	add    %eax,(%rax)
    6223:	00 47 41             	add    %al,0x41(%rdi)
    6226:	2a 47 4f             	sub    0x4f(%rdi),%al
    6229:	57                   	push   %rdi
    622a:	00 6a 05             	add    %ch,0x5(%rdx)
    622d:	22 00                	and    (%rax),%al
    622f:	00 06                	add    %al,(%rsi)
	...
    6239:	01 00                	add    %eax,(%rax)
    623b:	00 47 41             	add    %al,0x41(%rdi)
    623e:	2a 02                	sub    (%rdx),%al
    6240:	03 00                	add    (%rax),%eax
    6242:	00 00                	add    %al,(%rax)
    6244:	0f 00 00             	sldt   (%rax)
    6247:	00 00                	add    %al,(%rax)
    6249:	00 00                	add    %al,(%rax)
    624b:	00 00                	add    %al,(%rax)
    624d:	01 00                	add    %eax,(%rax)
    624f:	00 47 41             	add    %al,0x41(%rdi)
    6252:	2b 73 74             	sub    0x74(%rbx),%esi
    6255:	61                   	(bad)
    6256:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6259:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    625d:	68 00 00 13 00       	push   $0x130000
    6262:	00 00                	add    %al,(%rax)
    6264:	00 00                	add    %al,(%rax)
    6266:	00 00                	add    %al,(%rax)
    6268:	00 01                	add    %al,(%rcx)
    626a:	00 00                	add    %al,(%rax)
    626c:	47                   	rex.RXB
    626d:	41 2a 63 66          	sub    0x66(%r11),%spl
    6271:	5f                   	pop    %rdi
    6272:	70 72                	jo     62e6 <_end+0x22be>
    6274:	6f                   	outsl  %ds:(%rsi),(%dx)
    6275:	74 65                	je     62dc <_end+0x22b4>
    6277:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    627b:	6e                   	outsb  %ds:(%rsi),(%dx)
    627c:	00 08                	add    %cl,(%rax)
    627e:	00 00                	add    %al,(%rax)
    6280:	0d 00 00 00 00       	or     $0x0,%eax
    6285:	00 00                	add    %al,(%rax)
    6287:	00 00                	add    %al,(%rax)
    6289:	01 00                	add    %eax,(%rax)
    628b:	00 47 41             	add    %al,0x41(%rdi)
    628e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6291:	52                   	push   %rdx
    6292:	54                   	push   %rsp
    6293:	49                   	rex.WB
    6294:	46 59                	rex.RX pop %rcx
    6296:	00 ff                	add    %bh,%bh
    6298:	00 00                	add    %al,(%rax)
    629a:	00 00                	add    %al,(%rax)
    629c:	16                   	(bad)
	...
    62a5:	01 00                	add    %eax,(%rax)
    62a7:	00 47 41             	add    %al,0x41(%rdi)
    62aa:	2b 47 4c             	sub    0x4c(%rdi),%eax
    62ad:	49                   	rex.WB
    62ae:	42                   	rex.X
    62af:	43 58                	rex.XB pop %r8
    62b1:	58                   	pop    %rax
    62b2:	5f                   	pop    %rdi
    62b3:	41 53                	push   %r11
    62b5:	53                   	push   %rbx
    62b6:	45 52                	rex.RB push %r10
    62b8:	54                   	push   %rsp
    62b9:	49                   	rex.WB
    62ba:	4f                   	rex.WRXB
    62bb:	4e 53                	rex.WRX push %rbx
    62bd:	00 00                	add    %al,(%rax)
    62bf:	00 06                	add    %al,(%rsi)
	...
    62c9:	01 00                	add    %eax,(%rax)
    62cb:	00 47 41             	add    %al,0x41(%rdi)
    62ce:	2a 07                	sub    (%rdi),%al
    62d0:	03 00                	add    (%rax),%eax
    62d2:	00 00                	add    %al,(%rax)
    62d4:	05 00 00 00 00       	add    $0x0,%eax
    62d9:	00 00                	add    %al,(%rax)
    62db:	00 00                	add    %al,(%rax)
    62dd:	01 00                	add    %eax,(%rax)
    62df:	00 47 41             	add    %al,0x41(%rdi)
    62e2:	21 08                	and    %ecx,(%rax)
    62e4:	00 00                	add    %al,(%rax)
    62e6:	00 00                	add    %al,(%rax)
    62e8:	11 00                	adc    %eax,(%rax)
    62ea:	00 00                	add    %al,(%rax)
    62ec:	00 00                	add    %al,(%rax)
    62ee:	00 00                	add    %al,(%rax)
    62f0:	00 01                	add    %al,(%rcx)
    62f2:	00 00                	add    %al,(%rax)
    62f4:	47                   	rex.RXB
    62f5:	41 21 73 74          	and    %esi,0x74(%r11)
    62f9:	61                   	(bad)
    62fa:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    62fd:	72 65                	jb     6364 <_end+0x233c>
    62ff:	61                   	(bad)
    6300:	6c                   	insb   (%dx),%es:(%rdi)
    6301:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6308:	0b 00                	or     (%rax),%eax
    630a:	00 00                	add    %al,(%rax)
    630c:	10 00                	adc    %al,(%rax)
    630e:	00 00                	add    %al,(%rax)
    6310:	00 01                	add    %al,(%rcx)
    6312:	00 00                	add    %al,(%rax)
    6314:	47                   	rex.RXB
    6315:	41 24 01             	rex.B and $0x1,%al
    6318:	33 70 31             	xor    0x31(%rax),%esi
    631b:	32 31                	xor    (%rcx),%dh
    631d:	32 00                	xor    (%rax),%al
    631f:	00 60 10             	add    %ah,0x10(%rax)
    6322:	00 00                	add    %al,(%rax)
    6324:	00 00                	add    %al,(%rax)
    6326:	00 00                	add    %al,(%rax)
    6328:	60                   	(bad)
    6329:	10 00                	adc    %al,(%rax)
    632b:	00 00                	add    %al,(%rax)
    632d:	00 00                	add    %al,(%rax)
    632f:	00 20                	add    %ah,(%rax)
	...
    6339:	01 00                	add    %eax,(%rax)
    633b:	00 47 41             	add    %al,0x41(%rdi)
    633e:	24 05                	and    $0x5,%al
    6340:	72 75                	jb     63b7 <_end+0x238f>
    6342:	6e                   	outsb  %ds:(%rsi),(%dx)
    6343:	6e                   	outsb  %ds:(%rsi),(%dx)
    6344:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    634b:	20 31                	and    %dh,(%rcx)
    634d:	31 2e                	xor    %ebp,(%rsi)
    634f:	34 2e                	xor    $0x2e,%al
    6351:	31 20                	xor    %esp,(%rax)
    6353:	32 30                	xor    (%rax),%dh
    6355:	32 33                	xor    (%rbx),%dh
    6357:	30 36                	xor    %dh,(%rsi)
    6359:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 835f <_end+0x4337>
    635f:	00 00                	add    %al,(%rax)
    6361:	00 00                	add    %al,(%rax)
    6363:	00 00                	add    %al,(%rax)
    6365:	01 00                	add    %eax,(%rax)
    6367:	00 47 41             	add    %al,0x41(%rdi)
    636a:	24 05                	and    $0x5,%al
    636c:	61                   	(bad)
    636d:	6e                   	outsb  %ds:(%rsi),(%dx)
    636e:	6e                   	outsb  %ds:(%rsi),(%dx)
    636f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6370:	62                   	(bad)
    6371:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6378:	31 31                	xor    %esi,(%rcx)
    637a:	2e 34 2e             	cs xor $0x2e,%al
    637d:	31 20                	xor    %esp,(%rax)
    637f:	32 30                	xor    (%rax),%dh
    6381:	32 33                	xor    (%rbx),%dh
    6383:	30 36                	xor    %dh,(%rsi)
    6385:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 6e8b <_end+0x2e63>
    638b:	00 00                	add    %al,(%rax)
    638d:	00 00                	add    %al,(%rax)
    638f:	00 00                	add    %al,(%rax)
    6391:	01 00                	add    %eax,(%rax)
    6393:	00 47 41             	add    %al,0x41(%rdi)
    6396:	2a 47 4f             	sub    0x4f(%rdi),%al
    6399:	57                   	push   %rdi
    639a:	00 6a 05             	add    %ch,0x5(%rdx)
    639d:	22 00                	and    (%rax),%al
    639f:	00 06                	add    %al,(%rsi)
	...
    63a9:	01 00                	add    %eax,(%rax)
    63ab:	00 47 41             	add    %al,0x41(%rdi)
    63ae:	2a 02                	sub    (%rdx),%al
    63b0:	03 00                	add    (%rax),%eax
    63b2:	00 00                	add    %al,(%rax)
    63b4:	0f 00 00             	sldt   (%rax)
    63b7:	00 00                	add    %al,(%rax)
    63b9:	00 00                	add    %al,(%rax)
    63bb:	00 00                	add    %al,(%rax)
    63bd:	01 00                	add    %eax,(%rax)
    63bf:	00 47 41             	add    %al,0x41(%rdi)
    63c2:	2b 73 74             	sub    0x74(%rbx),%esi
    63c5:	61                   	(bad)
    63c6:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    63c9:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    63cd:	68 00 00 13 00       	push   $0x130000
    63d2:	00 00                	add    %al,(%rax)
    63d4:	00 00                	add    %al,(%rax)
    63d6:	00 00                	add    %al,(%rax)
    63d8:	00 01                	add    %al,(%rcx)
    63da:	00 00                	add    %al,(%rax)
    63dc:	47                   	rex.RXB
    63dd:	41 2a 63 66          	sub    0x66(%r11),%spl
    63e1:	5f                   	pop    %rdi
    63e2:	70 72                	jo     6456 <_end+0x242e>
    63e4:	6f                   	outsl  %ds:(%rsi),(%dx)
    63e5:	74 65                	je     644c <_end+0x2424>
    63e7:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    63eb:	6e                   	outsb  %ds:(%rsi),(%dx)
    63ec:	00 08                	add    %cl,(%rax)
    63ee:	00 00                	add    %al,(%rax)
    63f0:	0d 00 00 00 00       	or     $0x0,%eax
    63f5:	00 00                	add    %al,(%rax)
    63f7:	00 00                	add    %al,(%rax)
    63f9:	01 00                	add    %eax,(%rax)
    63fb:	00 47 41             	add    %al,0x41(%rdi)
    63fe:	2a 46 4f             	sub    0x4f(%rsi),%al
    6401:	52                   	push   %rdx
    6402:	54                   	push   %rsp
    6403:	49                   	rex.WB
    6404:	46 59                	rex.RX pop %rcx
    6406:	00 ff                	add    %bh,%bh
    6408:	00 00                	add    %al,(%rax)
    640a:	00 00                	add    %al,(%rax)
    640c:	16                   	(bad)
	...
    6415:	01 00                	add    %eax,(%rax)
    6417:	00 47 41             	add    %al,0x41(%rdi)
    641a:	2b 47 4c             	sub    0x4c(%rdi),%eax
    641d:	49                   	rex.WB
    641e:	42                   	rex.X
    641f:	43 58                	rex.XB pop %r8
    6421:	58                   	pop    %rax
    6422:	5f                   	pop    %rdi
    6423:	41 53                	push   %r11
    6425:	53                   	push   %rbx
    6426:	45 52                	rex.RB push %r10
    6428:	54                   	push   %rsp
    6429:	49                   	rex.WB
    642a:	4f                   	rex.WRXB
    642b:	4e 53                	rex.WRX push %rbx
    642d:	00 00                	add    %al,(%rax)
    642f:	00 06                	add    %al,(%rsi)
	...
    6439:	01 00                	add    %eax,(%rax)
    643b:	00 47 41             	add    %al,0x41(%rdi)
    643e:	2a 07                	sub    (%rdi),%al
    6440:	03 00                	add    (%rax),%eax
    6442:	00 00                	add    %al,(%rax)
    6444:	05 00 00 00 00       	add    $0x0,%eax
    6449:	00 00                	add    %al,(%rax)
    644b:	00 00                	add    %al,(%rax)
    644d:	01 00                	add    %eax,(%rax)
    644f:	00 47 41             	add    %al,0x41(%rdi)
    6452:	21 08                	and    %ecx,(%rax)
    6454:	00 00                	add    %al,(%rax)
    6456:	00 00                	add    %al,(%rax)
    6458:	11 00                	adc    %eax,(%rax)
    645a:	00 00                	add    %al,(%rax)
    645c:	00 00                	add    %al,(%rax)
    645e:	00 00                	add    %al,(%rax)
    6460:	00 01                	add    %al,(%rcx)
    6462:	00 00                	add    %al,(%rax)
    6464:	47                   	rex.RXB
    6465:	41 21 73 74          	and    %esi,0x74(%r11)
    6469:	61                   	(bad)
    646a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    646d:	72 65                	jb     64d4 <_end+0x24ac>
    646f:	61                   	(bad)
    6470:	6c                   	insb   (%dx),%es:(%rdi)
    6471:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6478:	0b 00                	or     (%rax),%eax
    647a:	00 00                	add    %al,(%rax)
    647c:	10 00                	adc    %al,(%rax)
    647e:	00 00                	add    %al,(%rax)
    6480:	00 01                	add    %al,(%rcx)
    6482:	00 00                	add    %al,(%rax)
    6484:	47                   	rex.RXB
    6485:	41 24 01             	rex.B and $0x1,%al
    6488:	33 70 31             	xor    0x31(%rax),%esi
    648b:	32 31                	xor    (%rcx),%dh
    648d:	32 00                	xor    (%rax),%al
    648f:	00 60 10             	add    %ah,0x10(%rax)
    6492:	00 00                	add    %al,(%rax)
    6494:	00 00                	add    %al,(%rax)
    6496:	00 00                	add    %al,(%rax)
    6498:	60                   	(bad)
    6499:	10 00                	adc    %al,(%rax)
    649b:	00 00                	add    %al,(%rax)
    649d:	00 00                	add    %al,(%rax)
    649f:	00 20                	add    %ah,(%rax)
	...
    64a9:	01 00                	add    %eax,(%rax)
    64ab:	00 47 41             	add    %al,0x41(%rdi)
    64ae:	24 05                	and    $0x5,%al
    64b0:	72 75                	jb     6527 <_end+0x24ff>
    64b2:	6e                   	outsb  %ds:(%rsi),(%dx)
    64b3:	6e                   	outsb  %ds:(%rsi),(%dx)
    64b4:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    64bb:	20 31                	and    %dh,(%rcx)
    64bd:	31 2e                	xor    %ebp,(%rsi)
    64bf:	34 2e                	xor    $0x2e,%al
    64c1:	31 20                	xor    %esp,(%rax)
    64c3:	32 30                	xor    (%rax),%dh
    64c5:	32 33                	xor    (%rbx),%dh
    64c7:	30 36                	xor    %dh,(%rsi)
    64c9:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 84cf <_end+0x44a7>
    64cf:	00 00                	add    %al,(%rax)
    64d1:	00 00                	add    %al,(%rax)
    64d3:	00 00                	add    %al,(%rax)
    64d5:	01 00                	add    %eax,(%rax)
    64d7:	00 47 41             	add    %al,0x41(%rdi)
    64da:	24 05                	and    $0x5,%al
    64dc:	61                   	(bad)
    64dd:	6e                   	outsb  %ds:(%rsi),(%dx)
    64de:	6e                   	outsb  %ds:(%rsi),(%dx)
    64df:	6f                   	outsl  %ds:(%rsi),(%dx)
    64e0:	62                   	(bad)
    64e1:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    64e8:	31 31                	xor    %esi,(%rcx)
    64ea:	2e 34 2e             	cs xor $0x2e,%al
    64ed:	31 20                	xor    %esp,(%rax)
    64ef:	32 30                	xor    (%rax),%dh
    64f1:	32 33                	xor    (%rbx),%dh
    64f3:	30 36                	xor    %dh,(%rsi)
    64f5:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 6ffb <_end+0x2fd3>
    64fb:	00 00                	add    %al,(%rax)
    64fd:	00 00                	add    %al,(%rax)
    64ff:	00 00                	add    %al,(%rax)
    6501:	01 00                	add    %eax,(%rax)
    6503:	00 47 41             	add    %al,0x41(%rdi)
    6506:	2a 47 4f             	sub    0x4f(%rdi),%al
    6509:	57                   	push   %rdi
    650a:	00 6a 05             	add    %ch,0x5(%rdx)
    650d:	22 00                	and    (%rax),%al
    650f:	00 06                	add    %al,(%rsi)
	...
    6519:	01 00                	add    %eax,(%rax)
    651b:	00 47 41             	add    %al,0x41(%rdi)
    651e:	2a 02                	sub    (%rdx),%al
    6520:	03 00                	add    (%rax),%eax
    6522:	00 00                	add    %al,(%rax)
    6524:	0f 00 00             	sldt   (%rax)
    6527:	00 00                	add    %al,(%rax)
    6529:	00 00                	add    %al,(%rax)
    652b:	00 00                	add    %al,(%rax)
    652d:	01 00                	add    %eax,(%rax)
    652f:	00 47 41             	add    %al,0x41(%rdi)
    6532:	2b 73 74             	sub    0x74(%rbx),%esi
    6535:	61                   	(bad)
    6536:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6539:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    653d:	68 00 00 13 00       	push   $0x130000
    6542:	00 00                	add    %al,(%rax)
    6544:	00 00                	add    %al,(%rax)
    6546:	00 00                	add    %al,(%rax)
    6548:	00 01                	add    %al,(%rcx)
    654a:	00 00                	add    %al,(%rax)
    654c:	47                   	rex.RXB
    654d:	41 2a 63 66          	sub    0x66(%r11),%spl
    6551:	5f                   	pop    %rdi
    6552:	70 72                	jo     65c6 <_end+0x259e>
    6554:	6f                   	outsl  %ds:(%rsi),(%dx)
    6555:	74 65                	je     65bc <_end+0x2594>
    6557:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    655b:	6e                   	outsb  %ds:(%rsi),(%dx)
    655c:	00 08                	add    %cl,(%rax)
    655e:	00 00                	add    %al,(%rax)
    6560:	0d 00 00 00 00       	or     $0x0,%eax
    6565:	00 00                	add    %al,(%rax)
    6567:	00 00                	add    %al,(%rax)
    6569:	01 00                	add    %eax,(%rax)
    656b:	00 47 41             	add    %al,0x41(%rdi)
    656e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6571:	52                   	push   %rdx
    6572:	54                   	push   %rsp
    6573:	49                   	rex.WB
    6574:	46 59                	rex.RX pop %rcx
    6576:	00 ff                	add    %bh,%bh
    6578:	00 00                	add    %al,(%rax)
    657a:	00 00                	add    %al,(%rax)
    657c:	16                   	(bad)
	...
    6585:	01 00                	add    %eax,(%rax)
    6587:	00 47 41             	add    %al,0x41(%rdi)
    658a:	2b 47 4c             	sub    0x4c(%rdi),%eax
    658d:	49                   	rex.WB
    658e:	42                   	rex.X
    658f:	43 58                	rex.XB pop %r8
    6591:	58                   	pop    %rax
    6592:	5f                   	pop    %rdi
    6593:	41 53                	push   %r11
    6595:	53                   	push   %rbx
    6596:	45 52                	rex.RB push %r10
    6598:	54                   	push   %rsp
    6599:	49                   	rex.WB
    659a:	4f                   	rex.WRXB
    659b:	4e 53                	rex.WRX push %rbx
    659d:	00 00                	add    %al,(%rax)
    659f:	00 06                	add    %al,(%rsi)
	...
    65a9:	01 00                	add    %eax,(%rax)
    65ab:	00 47 41             	add    %al,0x41(%rdi)
    65ae:	2a 07                	sub    (%rdi),%al
    65b0:	03 00                	add    (%rax),%eax
    65b2:	00 00                	add    %al,(%rax)
    65b4:	05 00 00 00 00       	add    $0x0,%eax
    65b9:	00 00                	add    %al,(%rax)
    65bb:	00 00                	add    %al,(%rax)
    65bd:	01 00                	add    %eax,(%rax)
    65bf:	00 47 41             	add    %al,0x41(%rdi)
    65c2:	21 08                	and    %ecx,(%rax)
    65c4:	00 00                	add    %al,(%rax)
    65c6:	00 00                	add    %al,(%rax)
    65c8:	11 00                	adc    %eax,(%rax)
    65ca:	00 00                	add    %al,(%rax)
    65cc:	00 00                	add    %al,(%rax)
    65ce:	00 00                	add    %al,(%rax)
    65d0:	00 01                	add    %al,(%rcx)
    65d2:	00 00                	add    %al,(%rax)
    65d4:	47                   	rex.RXB
    65d5:	41 21 73 74          	and    %esi,0x74(%r11)
    65d9:	61                   	(bad)
    65da:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    65dd:	72 65                	jb     6644 <_end+0x261c>
    65df:	61                   	(bad)
    65e0:	6c                   	insb   (%dx),%es:(%rdi)
    65e1:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    65e8:	0b 00                	or     (%rax),%eax
    65ea:	00 00                	add    %al,(%rax)
    65ec:	10 00                	adc    %al,(%rax)
    65ee:	00 00                	add    %al,(%rax)
    65f0:	00 01                	add    %al,(%rcx)
    65f2:	00 00                	add    %al,(%rax)
    65f4:	47                   	rex.RXB
    65f5:	41 24 01             	rex.B and $0x1,%al
    65f8:	33 70 31             	xor    0x31(%rax),%esi
    65fb:	32 31                	xor    (%rcx),%dh
    65fd:	32 00                	xor    (%rax),%al
    65ff:	00 60 10             	add    %ah,0x10(%rax)
    6602:	00 00                	add    %al,(%rax)
    6604:	00 00                	add    %al,(%rax)
    6606:	00 00                	add    %al,(%rax)
    6608:	60                   	(bad)
    6609:	10 00                	adc    %al,(%rax)
    660b:	00 00                	add    %al,(%rax)
    660d:	00 00                	add    %al,(%rax)
    660f:	00 20                	add    %ah,(%rax)
	...
    6619:	01 00                	add    %eax,(%rax)
    661b:	00 47 41             	add    %al,0x41(%rdi)
    661e:	24 05                	and    $0x5,%al
    6620:	72 75                	jb     6697 <_end+0x266f>
    6622:	6e                   	outsb  %ds:(%rsi),(%dx)
    6623:	6e                   	outsb  %ds:(%rsi),(%dx)
    6624:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    662b:	20 31                	and    %dh,(%rcx)
    662d:	31 2e                	xor    %ebp,(%rsi)
    662f:	34 2e                	xor    $0x2e,%al
    6631:	31 20                	xor    %esp,(%rax)
    6633:	32 30                	xor    (%rax),%dh
    6635:	32 33                	xor    (%rbx),%dh
    6637:	30 36                	xor    %dh,(%rsi)
    6639:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 863f <_end+0x4617>
    663f:	00 00                	add    %al,(%rax)
    6641:	00 00                	add    %al,(%rax)
    6643:	00 00                	add    %al,(%rax)
    6645:	01 00                	add    %eax,(%rax)
    6647:	00 47 41             	add    %al,0x41(%rdi)
    664a:	24 05                	and    $0x5,%al
    664c:	61                   	(bad)
    664d:	6e                   	outsb  %ds:(%rsi),(%dx)
    664e:	6e                   	outsb  %ds:(%rsi),(%dx)
    664f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6650:	62                   	(bad)
    6651:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6658:	31 31                	xor    %esi,(%rcx)
    665a:	2e 34 2e             	cs xor $0x2e,%al
    665d:	31 20                	xor    %esp,(%rax)
    665f:	32 30                	xor    (%rax),%dh
    6661:	32 33                	xor    (%rbx),%dh
    6663:	30 36                	xor    %dh,(%rsi)
    6665:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 716b <_end+0x3143>
    666b:	00 00                	add    %al,(%rax)
    666d:	00 00                	add    %al,(%rax)
    666f:	00 00                	add    %al,(%rax)
    6671:	01 00                	add    %eax,(%rax)
    6673:	00 47 41             	add    %al,0x41(%rdi)
    6676:	2a 47 4f             	sub    0x4f(%rdi),%al
    6679:	57                   	push   %rdi
    667a:	00 6a 05             	add    %ch,0x5(%rdx)
    667d:	22 00                	and    (%rax),%al
    667f:	00 06                	add    %al,(%rsi)
	...
    6689:	01 00                	add    %eax,(%rax)
    668b:	00 47 41             	add    %al,0x41(%rdi)
    668e:	2a 02                	sub    (%rdx),%al
    6690:	03 00                	add    (%rax),%eax
    6692:	00 00                	add    %al,(%rax)
    6694:	0f 00 00             	sldt   (%rax)
    6697:	00 00                	add    %al,(%rax)
    6699:	00 00                	add    %al,(%rax)
    669b:	00 00                	add    %al,(%rax)
    669d:	01 00                	add    %eax,(%rax)
    669f:	00 47 41             	add    %al,0x41(%rdi)
    66a2:	2b 73 74             	sub    0x74(%rbx),%esi
    66a5:	61                   	(bad)
    66a6:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    66a9:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    66ad:	68 00 00 13 00       	push   $0x130000
    66b2:	00 00                	add    %al,(%rax)
    66b4:	00 00                	add    %al,(%rax)
    66b6:	00 00                	add    %al,(%rax)
    66b8:	00 01                	add    %al,(%rcx)
    66ba:	00 00                	add    %al,(%rax)
    66bc:	47                   	rex.RXB
    66bd:	41 2a 63 66          	sub    0x66(%r11),%spl
    66c1:	5f                   	pop    %rdi
    66c2:	70 72                	jo     6736 <_end+0x270e>
    66c4:	6f                   	outsl  %ds:(%rsi),(%dx)
    66c5:	74 65                	je     672c <_end+0x2704>
    66c7:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    66cb:	6e                   	outsb  %ds:(%rsi),(%dx)
    66cc:	00 08                	add    %cl,(%rax)
    66ce:	00 00                	add    %al,(%rax)
    66d0:	0d 00 00 00 00       	or     $0x0,%eax
    66d5:	00 00                	add    %al,(%rax)
    66d7:	00 00                	add    %al,(%rax)
    66d9:	01 00                	add    %eax,(%rax)
    66db:	00 47 41             	add    %al,0x41(%rdi)
    66de:	2a 46 4f             	sub    0x4f(%rsi),%al
    66e1:	52                   	push   %rdx
    66e2:	54                   	push   %rsp
    66e3:	49                   	rex.WB
    66e4:	46 59                	rex.RX pop %rcx
    66e6:	00 ff                	add    %bh,%bh
    66e8:	00 00                	add    %al,(%rax)
    66ea:	00 00                	add    %al,(%rax)
    66ec:	16                   	(bad)
	...
    66f5:	01 00                	add    %eax,(%rax)
    66f7:	00 47 41             	add    %al,0x41(%rdi)
    66fa:	2b 47 4c             	sub    0x4c(%rdi),%eax
    66fd:	49                   	rex.WB
    66fe:	42                   	rex.X
    66ff:	43 58                	rex.XB pop %r8
    6701:	58                   	pop    %rax
    6702:	5f                   	pop    %rdi
    6703:	41 53                	push   %r11
    6705:	53                   	push   %rbx
    6706:	45 52                	rex.RB push %r10
    6708:	54                   	push   %rsp
    6709:	49                   	rex.WB
    670a:	4f                   	rex.WRXB
    670b:	4e 53                	rex.WRX push %rbx
    670d:	00 00                	add    %al,(%rax)
    670f:	00 06                	add    %al,(%rsi)
	...
    6719:	01 00                	add    %eax,(%rax)
    671b:	00 47 41             	add    %al,0x41(%rdi)
    671e:	2a 07                	sub    (%rdi),%al
    6720:	03 00                	add    (%rax),%eax
    6722:	00 00                	add    %al,(%rax)
    6724:	05 00 00 00 00       	add    $0x0,%eax
    6729:	00 00                	add    %al,(%rax)
    672b:	00 00                	add    %al,(%rax)
    672d:	01 00                	add    %eax,(%rax)
    672f:	00 47 41             	add    %al,0x41(%rdi)
    6732:	21 08                	and    %ecx,(%rax)
    6734:	00 00                	add    %al,(%rax)
    6736:	00 00                	add    %al,(%rax)
    6738:	11 00                	adc    %eax,(%rax)
    673a:	00 00                	add    %al,(%rax)
    673c:	00 00                	add    %al,(%rax)
    673e:	00 00                	add    %al,(%rax)
    6740:	00 01                	add    %al,(%rcx)
    6742:	00 00                	add    %al,(%rax)
    6744:	47                   	rex.RXB
    6745:	41 21 73 74          	and    %esi,0x74(%r11)
    6749:	61                   	(bad)
    674a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    674d:	72 65                	jb     67b4 <_end+0x278c>
    674f:	61                   	(bad)
    6750:	6c                   	insb   (%dx),%es:(%rdi)
    6751:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6758:	0b 00                	or     (%rax),%eax
    675a:	00 00                	add    %al,(%rax)
    675c:	10 00                	adc    %al,(%rax)
    675e:	00 00                	add    %al,(%rax)
    6760:	00 01                	add    %al,(%rcx)
    6762:	00 00                	add    %al,(%rax)
    6764:	47                   	rex.RXB
    6765:	41 24 01             	rex.B and $0x1,%al
    6768:	33 70 31             	xor    0x31(%rax),%esi
    676b:	32 31                	xor    (%rcx),%dh
    676d:	32 00                	xor    (%rax),%al
    676f:	00 86 10 00 00 00    	add    %al,0x10(%rsi)
    6775:	00 00                	add    %al,(%rax)
    6777:	00 86 10 00 00 00    	add    %al,0x10(%rsi)
    677d:	00 00                	add    %al,(%rax)
    677f:	00 20                	add    %ah,(%rax)
	...
    6789:	01 00                	add    %eax,(%rax)
    678b:	00 47 41             	add    %al,0x41(%rdi)
    678e:	24 05                	and    $0x5,%al
    6790:	72 75                	jb     6807 <_end+0x27df>
    6792:	6e                   	outsb  %ds:(%rsi),(%dx)
    6793:	6e                   	outsb  %ds:(%rsi),(%dx)
    6794:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    679b:	20 31                	and    %dh,(%rcx)
    679d:	31 2e                	xor    %ebp,(%rsi)
    679f:	34 2e                	xor    $0x2e,%al
    67a1:	31 20                	xor    %esp,(%rax)
    67a3:	32 30                	xor    (%rax),%dh
    67a5:	32 33                	xor    (%rbx),%dh
    67a7:	30 36                	xor    %dh,(%rsi)
    67a9:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 87af <_end+0x4787>
    67af:	00 00                	add    %al,(%rax)
    67b1:	00 00                	add    %al,(%rax)
    67b3:	00 00                	add    %al,(%rax)
    67b5:	01 00                	add    %eax,(%rax)
    67b7:	00 47 41             	add    %al,0x41(%rdi)
    67ba:	24 05                	and    $0x5,%al
    67bc:	61                   	(bad)
    67bd:	6e                   	outsb  %ds:(%rsi),(%dx)
    67be:	6e                   	outsb  %ds:(%rsi),(%dx)
    67bf:	6f                   	outsl  %ds:(%rsi),(%dx)
    67c0:	62                   	(bad)
    67c1:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    67c8:	31 31                	xor    %esi,(%rcx)
    67ca:	2e 34 2e             	cs xor $0x2e,%al
    67cd:	31 20                	xor    %esp,(%rax)
    67cf:	32 30                	xor    (%rax),%dh
    67d1:	32 33                	xor    (%rbx),%dh
    67d3:	30 36                	xor    %dh,(%rsi)
    67d5:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 72db <_end+0x32b3>
    67db:	00 00                	add    %al,(%rax)
    67dd:	00 00                	add    %al,(%rax)
    67df:	00 00                	add    %al,(%rax)
    67e1:	01 00                	add    %eax,(%rax)
    67e3:	00 47 41             	add    %al,0x41(%rdi)
    67e6:	2a 47 4f             	sub    0x4f(%rdi),%al
    67e9:	57                   	push   %rdi
    67ea:	00 6a 05             	add    %ch,0x5(%rdx)
    67ed:	22 00                	and    (%rax),%al
    67ef:	00 06                	add    %al,(%rsi)
	...
    67f9:	01 00                	add    %eax,(%rax)
    67fb:	00 47 41             	add    %al,0x41(%rdi)
    67fe:	2a 02                	sub    (%rdx),%al
    6800:	03 00                	add    (%rax),%eax
    6802:	00 00                	add    %al,(%rax)
    6804:	0f 00 00             	sldt   (%rax)
    6807:	00 00                	add    %al,(%rax)
    6809:	00 00                	add    %al,(%rax)
    680b:	00 00                	add    %al,(%rax)
    680d:	01 00                	add    %eax,(%rax)
    680f:	00 47 41             	add    %al,0x41(%rdi)
    6812:	2b 73 74             	sub    0x74(%rbx),%esi
    6815:	61                   	(bad)
    6816:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6819:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    681d:	68 00 00 13 00       	push   $0x130000
    6822:	00 00                	add    %al,(%rax)
    6824:	00 00                	add    %al,(%rax)
    6826:	00 00                	add    %al,(%rax)
    6828:	00 01                	add    %al,(%rcx)
    682a:	00 00                	add    %al,(%rax)
    682c:	47                   	rex.RXB
    682d:	41 2a 63 66          	sub    0x66(%r11),%spl
    6831:	5f                   	pop    %rdi
    6832:	70 72                	jo     68a6 <_end+0x287e>
    6834:	6f                   	outsl  %ds:(%rsi),(%dx)
    6835:	74 65                	je     689c <_end+0x2874>
    6837:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    683b:	6e                   	outsb  %ds:(%rsi),(%dx)
    683c:	00 08                	add    %cl,(%rax)
    683e:	00 00                	add    %al,(%rax)
    6840:	0d 00 00 00 00       	or     $0x0,%eax
    6845:	00 00                	add    %al,(%rax)
    6847:	00 00                	add    %al,(%rax)
    6849:	01 00                	add    %eax,(%rax)
    684b:	00 47 41             	add    %al,0x41(%rdi)
    684e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6851:	52                   	push   %rdx
    6852:	54                   	push   %rsp
    6853:	49                   	rex.WB
    6854:	46 59                	rex.RX pop %rcx
    6856:	00 ff                	add    %bh,%bh
    6858:	00 00                	add    %al,(%rax)
    685a:	00 00                	add    %al,(%rax)
    685c:	16                   	(bad)
	...
    6865:	01 00                	add    %eax,(%rax)
    6867:	00 47 41             	add    %al,0x41(%rdi)
    686a:	2b 47 4c             	sub    0x4c(%rdi),%eax
    686d:	49                   	rex.WB
    686e:	42                   	rex.X
    686f:	43 58                	rex.XB pop %r8
    6871:	58                   	pop    %rax
    6872:	5f                   	pop    %rdi
    6873:	41 53                	push   %r11
    6875:	53                   	push   %rbx
    6876:	45 52                	rex.RB push %r10
    6878:	54                   	push   %rsp
    6879:	49                   	rex.WB
    687a:	4f                   	rex.WRXB
    687b:	4e 53                	rex.WRX push %rbx
    687d:	00 00                	add    %al,(%rax)
    687f:	00 06                	add    %al,(%rsi)
	...
    6889:	01 00                	add    %eax,(%rax)
    688b:	00 47 41             	add    %al,0x41(%rdi)
    688e:	2a 07                	sub    (%rdi),%al
    6890:	03 00                	add    (%rax),%eax
    6892:	00 00                	add    %al,(%rax)
    6894:	05 00 00 00 00       	add    $0x0,%eax
    6899:	00 00                	add    %al,(%rax)
    689b:	00 00                	add    %al,(%rax)
    689d:	01 00                	add    %eax,(%rax)
    689f:	00 47 41             	add    %al,0x41(%rdi)
    68a2:	21 08                	and    %ecx,(%rax)
    68a4:	00 00                	add    %al,(%rax)
    68a6:	00 00                	add    %al,(%rax)
    68a8:	11 00                	adc    %eax,(%rax)
    68aa:	00 00                	add    %al,(%rax)
    68ac:	00 00                	add    %al,(%rax)
    68ae:	00 00                	add    %al,(%rax)
    68b0:	00 01                	add    %al,(%rcx)
    68b2:	00 00                	add    %al,(%rax)
    68b4:	47                   	rex.RXB
    68b5:	41 21 73 74          	and    %esi,0x74(%r11)
    68b9:	61                   	(bad)
    68ba:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    68bd:	72 65                	jb     6924 <_end+0x28fc>
    68bf:	61                   	(bad)
    68c0:	6c                   	insb   (%dx),%es:(%rdi)
    68c1:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    68c8:	0b 00                	or     (%rax),%eax
    68ca:	00 00                	add    %al,(%rax)
    68cc:	10 00                	adc    %al,(%rax)
    68ce:	00 00                	add    %al,(%rax)
    68d0:	00 01                	add    %al,(%rcx)
    68d2:	00 00                	add    %al,(%rax)
    68d4:	47                   	rex.RXB
    68d5:	41 24 01             	rex.B and $0x1,%al
    68d8:	33 70 31             	xor    0x31(%rax),%esi
    68db:	32 31                	xor    (%rcx),%dh
    68dd:	32 00                	xor    (%rax),%al
    68df:	00 60 10             	add    %ah,0x10(%rax)
    68e2:	00 00                	add    %al,(%rax)
    68e4:	00 00                	add    %al,(%rax)
    68e6:	00 00                	add    %al,(%rax)
    68e8:	60                   	(bad)
    68e9:	10 00                	adc    %al,(%rax)
    68eb:	00 00                	add    %al,(%rax)
    68ed:	00 00                	add    %al,(%rax)
    68ef:	00 20                	add    %ah,(%rax)
	...
    68f9:	01 00                	add    %eax,(%rax)
    68fb:	00 47 41             	add    %al,0x41(%rdi)
    68fe:	24 05                	and    $0x5,%al
    6900:	72 75                	jb     6977 <_end+0x294f>
    6902:	6e                   	outsb  %ds:(%rsi),(%dx)
    6903:	6e                   	outsb  %ds:(%rsi),(%dx)
    6904:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    690b:	20 31                	and    %dh,(%rcx)
    690d:	31 2e                	xor    %ebp,(%rsi)
    690f:	34 2e                	xor    $0x2e,%al
    6911:	31 20                	xor    %esp,(%rax)
    6913:	32 30                	xor    (%rax),%dh
    6915:	32 33                	xor    (%rbx),%dh
    6917:	30 36                	xor    %dh,(%rsi)
    6919:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 891f <_end+0x48f7>
    691f:	00 00                	add    %al,(%rax)
    6921:	00 00                	add    %al,(%rax)
    6923:	00 00                	add    %al,(%rax)
    6925:	01 00                	add    %eax,(%rax)
    6927:	00 47 41             	add    %al,0x41(%rdi)
    692a:	24 05                	and    $0x5,%al
    692c:	61                   	(bad)
    692d:	6e                   	outsb  %ds:(%rsi),(%dx)
    692e:	6e                   	outsb  %ds:(%rsi),(%dx)
    692f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6930:	62                   	(bad)
    6931:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6938:	31 31                	xor    %esi,(%rcx)
    693a:	2e 34 2e             	cs xor $0x2e,%al
    693d:	31 20                	xor    %esp,(%rax)
    693f:	32 30                	xor    (%rax),%dh
    6941:	32 33                	xor    (%rbx),%dh
    6943:	30 36                	xor    %dh,(%rsi)
    6945:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 744b <_end+0x3423>
    694b:	00 00                	add    %al,(%rax)
    694d:	00 00                	add    %al,(%rax)
    694f:	00 00                	add    %al,(%rax)
    6951:	01 00                	add    %eax,(%rax)
    6953:	00 47 41             	add    %al,0x41(%rdi)
    6956:	2a 47 4f             	sub    0x4f(%rdi),%al
    6959:	57                   	push   %rdi
    695a:	00 6a 05             	add    %ch,0x5(%rdx)
    695d:	22 00                	and    (%rax),%al
    695f:	00 06                	add    %al,(%rsi)
	...
    6969:	01 00                	add    %eax,(%rax)
    696b:	00 47 41             	add    %al,0x41(%rdi)
    696e:	2a 02                	sub    (%rdx),%al
    6970:	03 00                	add    (%rax),%eax
    6972:	00 00                	add    %al,(%rax)
    6974:	0f 00 00             	sldt   (%rax)
    6977:	00 00                	add    %al,(%rax)
    6979:	00 00                	add    %al,(%rax)
    697b:	00 00                	add    %al,(%rax)
    697d:	01 00                	add    %eax,(%rax)
    697f:	00 47 41             	add    %al,0x41(%rdi)
    6982:	2b 73 74             	sub    0x74(%rbx),%esi
    6985:	61                   	(bad)
    6986:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6989:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    698d:	68 00 00 13 00       	push   $0x130000
    6992:	00 00                	add    %al,(%rax)
    6994:	00 00                	add    %al,(%rax)
    6996:	00 00                	add    %al,(%rax)
    6998:	00 01                	add    %al,(%rcx)
    699a:	00 00                	add    %al,(%rax)
    699c:	47                   	rex.RXB
    699d:	41 2a 63 66          	sub    0x66(%r11),%spl
    69a1:	5f                   	pop    %rdi
    69a2:	70 72                	jo     6a16 <_end+0x29ee>
    69a4:	6f                   	outsl  %ds:(%rsi),(%dx)
    69a5:	74 65                	je     6a0c <_end+0x29e4>
    69a7:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    69ab:	6e                   	outsb  %ds:(%rsi),(%dx)
    69ac:	00 08                	add    %cl,(%rax)
    69ae:	00 00                	add    %al,(%rax)
    69b0:	0d 00 00 00 00       	or     $0x0,%eax
    69b5:	00 00                	add    %al,(%rax)
    69b7:	00 00                	add    %al,(%rax)
    69b9:	01 00                	add    %eax,(%rax)
    69bb:	00 47 41             	add    %al,0x41(%rdi)
    69be:	2a 46 4f             	sub    0x4f(%rsi),%al
    69c1:	52                   	push   %rdx
    69c2:	54                   	push   %rsp
    69c3:	49                   	rex.WB
    69c4:	46 59                	rex.RX pop %rcx
    69c6:	00 ff                	add    %bh,%bh
    69c8:	00 00                	add    %al,(%rax)
    69ca:	00 00                	add    %al,(%rax)
    69cc:	16                   	(bad)
	...
    69d5:	01 00                	add    %eax,(%rax)
    69d7:	00 47 41             	add    %al,0x41(%rdi)
    69da:	2b 47 4c             	sub    0x4c(%rdi),%eax
    69dd:	49                   	rex.WB
    69de:	42                   	rex.X
    69df:	43 58                	rex.XB pop %r8
    69e1:	58                   	pop    %rax
    69e2:	5f                   	pop    %rdi
    69e3:	41 53                	push   %r11
    69e5:	53                   	push   %rbx
    69e6:	45 52                	rex.RB push %r10
    69e8:	54                   	push   %rsp
    69e9:	49                   	rex.WB
    69ea:	4f                   	rex.WRXB
    69eb:	4e 53                	rex.WRX push %rbx
    69ed:	00 00                	add    %al,(%rax)
    69ef:	00 06                	add    %al,(%rsi)
	...
    69f9:	01 00                	add    %eax,(%rax)
    69fb:	00 47 41             	add    %al,0x41(%rdi)
    69fe:	2a 07                	sub    (%rdi),%al
    6a00:	03 00                	add    (%rax),%eax
    6a02:	00 00                	add    %al,(%rax)
    6a04:	05 00 00 00 00       	add    $0x0,%eax
    6a09:	00 00                	add    %al,(%rax)
    6a0b:	00 00                	add    %al,(%rax)
    6a0d:	01 00                	add    %eax,(%rax)
    6a0f:	00 47 41             	add    %al,0x41(%rdi)
    6a12:	21 08                	and    %ecx,(%rax)
    6a14:	00 00                	add    %al,(%rax)
    6a16:	00 00                	add    %al,(%rax)
    6a18:	11 00                	adc    %eax,(%rax)
    6a1a:	00 00                	add    %al,(%rax)
    6a1c:	00 00                	add    %al,(%rax)
    6a1e:	00 00                	add    %al,(%rax)
    6a20:	00 01                	add    %al,(%rcx)
    6a22:	00 00                	add    %al,(%rax)
    6a24:	47                   	rex.RXB
    6a25:	41 21 73 74          	and    %esi,0x74(%r11)
    6a29:	61                   	(bad)
    6a2a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6a2d:	72 65                	jb     6a94 <_end+0x2a6c>
    6a2f:	61                   	(bad)
    6a30:	6c                   	insb   (%dx),%es:(%rdi)
    6a31:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6a38:	0b 00                	or     (%rax),%eax
    6a3a:	00 00                	add    %al,(%rax)
    6a3c:	10 00                	adc    %al,(%rax)
    6a3e:	00 00                	add    %al,(%rax)
    6a40:	00 01                	add    %al,(%rcx)
    6a42:	00 00                	add    %al,(%rax)
    6a44:	47                   	rex.RXB
    6a45:	41 24 01             	rex.B and $0x1,%al
    6a48:	33 70 31             	xor    0x31(%rax),%esi
    6a4b:	32 31                	xor    (%rcx),%dh
    6a4d:	32 00                	xor    (%rax),%al
    6a4f:	00 60 10             	add    %ah,0x10(%rax)
    6a52:	00 00                	add    %al,(%rax)
    6a54:	00 00                	add    %al,(%rax)
    6a56:	00 00                	add    %al,(%rax)
    6a58:	60                   	(bad)
    6a59:	10 00                	adc    %al,(%rax)
    6a5b:	00 00                	add    %al,(%rax)
    6a5d:	00 00                	add    %al,(%rax)
    6a5f:	00 20                	add    %ah,(%rax)
	...
    6a69:	01 00                	add    %eax,(%rax)
    6a6b:	00 47 41             	add    %al,0x41(%rdi)
    6a6e:	24 05                	and    $0x5,%al
    6a70:	72 75                	jb     6ae7 <_end+0x2abf>
    6a72:	6e                   	outsb  %ds:(%rsi),(%dx)
    6a73:	6e                   	outsb  %ds:(%rsi),(%dx)
    6a74:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    6a7b:	20 31                	and    %dh,(%rcx)
    6a7d:	31 2e                	xor    %ebp,(%rsi)
    6a7f:	34 2e                	xor    $0x2e,%al
    6a81:	31 20                	xor    %esp,(%rax)
    6a83:	32 30                	xor    (%rax),%dh
    6a85:	32 33                	xor    (%rbx),%dh
    6a87:	30 36                	xor    %dh,(%rsi)
    6a89:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 8a8f <_end+0x4a67>
    6a8f:	00 00                	add    %al,(%rax)
    6a91:	00 00                	add    %al,(%rax)
    6a93:	00 00                	add    %al,(%rax)
    6a95:	01 00                	add    %eax,(%rax)
    6a97:	00 47 41             	add    %al,0x41(%rdi)
    6a9a:	24 05                	and    $0x5,%al
    6a9c:	61                   	(bad)
    6a9d:	6e                   	outsb  %ds:(%rsi),(%dx)
    6a9e:	6e                   	outsb  %ds:(%rsi),(%dx)
    6a9f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6aa0:	62                   	(bad)
    6aa1:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6aa8:	31 31                	xor    %esi,(%rcx)
    6aaa:	2e 34 2e             	cs xor $0x2e,%al
    6aad:	31 20                	xor    %esp,(%rax)
    6aaf:	32 30                	xor    (%rax),%dh
    6ab1:	32 33                	xor    (%rbx),%dh
    6ab3:	30 36                	xor    %dh,(%rsi)
    6ab5:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 75bb <_end+0x3593>
    6abb:	00 00                	add    %al,(%rax)
    6abd:	00 00                	add    %al,(%rax)
    6abf:	00 00                	add    %al,(%rax)
    6ac1:	01 00                	add    %eax,(%rax)
    6ac3:	00 47 41             	add    %al,0x41(%rdi)
    6ac6:	2a 47 4f             	sub    0x4f(%rdi),%al
    6ac9:	57                   	push   %rdi
    6aca:	00 6a 05             	add    %ch,0x5(%rdx)
    6acd:	22 00                	and    (%rax),%al
    6acf:	00 06                	add    %al,(%rsi)
	...
    6ad9:	01 00                	add    %eax,(%rax)
    6adb:	00 47 41             	add    %al,0x41(%rdi)
    6ade:	2a 02                	sub    (%rdx),%al
    6ae0:	03 00                	add    (%rax),%eax
    6ae2:	00 00                	add    %al,(%rax)
    6ae4:	0f 00 00             	sldt   (%rax)
    6ae7:	00 00                	add    %al,(%rax)
    6ae9:	00 00                	add    %al,(%rax)
    6aeb:	00 00                	add    %al,(%rax)
    6aed:	01 00                	add    %eax,(%rax)
    6aef:	00 47 41             	add    %al,0x41(%rdi)
    6af2:	2b 73 74             	sub    0x74(%rbx),%esi
    6af5:	61                   	(bad)
    6af6:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6af9:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    6afd:	68 00 00 13 00       	push   $0x130000
    6b02:	00 00                	add    %al,(%rax)
    6b04:	00 00                	add    %al,(%rax)
    6b06:	00 00                	add    %al,(%rax)
    6b08:	00 01                	add    %al,(%rcx)
    6b0a:	00 00                	add    %al,(%rax)
    6b0c:	47                   	rex.RXB
    6b0d:	41 2a 63 66          	sub    0x66(%r11),%spl
    6b11:	5f                   	pop    %rdi
    6b12:	70 72                	jo     6b86 <_end+0x2b5e>
    6b14:	6f                   	outsl  %ds:(%rsi),(%dx)
    6b15:	74 65                	je     6b7c <_end+0x2b54>
    6b17:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    6b1b:	6e                   	outsb  %ds:(%rsi),(%dx)
    6b1c:	00 08                	add    %cl,(%rax)
    6b1e:	00 00                	add    %al,(%rax)
    6b20:	0d 00 00 00 00       	or     $0x0,%eax
    6b25:	00 00                	add    %al,(%rax)
    6b27:	00 00                	add    %al,(%rax)
    6b29:	01 00                	add    %eax,(%rax)
    6b2b:	00 47 41             	add    %al,0x41(%rdi)
    6b2e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6b31:	52                   	push   %rdx
    6b32:	54                   	push   %rsp
    6b33:	49                   	rex.WB
    6b34:	46 59                	rex.RX pop %rcx
    6b36:	00 ff                	add    %bh,%bh
    6b38:	00 00                	add    %al,(%rax)
    6b3a:	00 00                	add    %al,(%rax)
    6b3c:	16                   	(bad)
	...
    6b45:	01 00                	add    %eax,(%rax)
    6b47:	00 47 41             	add    %al,0x41(%rdi)
    6b4a:	2b 47 4c             	sub    0x4c(%rdi),%eax
    6b4d:	49                   	rex.WB
    6b4e:	42                   	rex.X
    6b4f:	43 58                	rex.XB pop %r8
    6b51:	58                   	pop    %rax
    6b52:	5f                   	pop    %rdi
    6b53:	41 53                	push   %r11
    6b55:	53                   	push   %rbx
    6b56:	45 52                	rex.RB push %r10
    6b58:	54                   	push   %rsp
    6b59:	49                   	rex.WB
    6b5a:	4f                   	rex.WRXB
    6b5b:	4e 53                	rex.WRX push %rbx
    6b5d:	00 00                	add    %al,(%rax)
    6b5f:	00 06                	add    %al,(%rsi)
	...
    6b69:	01 00                	add    %eax,(%rax)
    6b6b:	00 47 41             	add    %al,0x41(%rdi)
    6b6e:	2a 07                	sub    (%rdi),%al
    6b70:	03 00                	add    (%rax),%eax
    6b72:	00 00                	add    %al,(%rax)
    6b74:	05 00 00 00 00       	add    $0x0,%eax
    6b79:	00 00                	add    %al,(%rax)
    6b7b:	00 00                	add    %al,(%rax)
    6b7d:	01 00                	add    %eax,(%rax)
    6b7f:	00 47 41             	add    %al,0x41(%rdi)
    6b82:	21 08                	and    %ecx,(%rax)
    6b84:	00 00                	add    %al,(%rax)
    6b86:	00 00                	add    %al,(%rax)
    6b88:	11 00                	adc    %eax,(%rax)
    6b8a:	00 00                	add    %al,(%rax)
    6b8c:	00 00                	add    %al,(%rax)
    6b8e:	00 00                	add    %al,(%rax)
    6b90:	00 01                	add    %al,(%rcx)
    6b92:	00 00                	add    %al,(%rax)
    6b94:	47                   	rex.RXB
    6b95:	41 21 73 74          	and    %esi,0x74(%r11)
    6b99:	61                   	(bad)
    6b9a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6b9d:	72 65                	jb     6c04 <_end+0x2bdc>
    6b9f:	61                   	(bad)
    6ba0:	6c                   	insb   (%dx),%es:(%rdi)
    6ba1:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6ba8:	0b 00                	or     (%rax),%eax
    6baa:	00 00                	add    %al,(%rax)
    6bac:	10 00                	adc    %al,(%rax)
    6bae:	00 00                	add    %al,(%rax)
    6bb0:	00 01                	add    %al,(%rcx)
    6bb2:	00 00                	add    %al,(%rax)
    6bb4:	47                   	rex.RXB
    6bb5:	41 24 01             	rex.B and $0x1,%al
    6bb8:	33 70 31             	xor    0x31(%rax),%esi
    6bbb:	32 31                	xor    (%rcx),%dh
    6bbd:	32 00                	xor    (%rax),%al
    6bbf:	00 60 10             	add    %ah,0x10(%rax)
    6bc2:	00 00                	add    %al,(%rax)
    6bc4:	00 00                	add    %al,(%rax)
    6bc6:	00 00                	add    %al,(%rax)
    6bc8:	60                   	(bad)
    6bc9:	10 00                	adc    %al,(%rax)
    6bcb:	00 00                	add    %al,(%rax)
    6bcd:	00 00                	add    %al,(%rax)
    6bcf:	00 20                	add    %ah,(%rax)
	...
    6bd9:	01 00                	add    %eax,(%rax)
    6bdb:	00 47 41             	add    %al,0x41(%rdi)
    6bde:	24 05                	and    $0x5,%al
    6be0:	72 75                	jb     6c57 <_end+0x2c2f>
    6be2:	6e                   	outsb  %ds:(%rsi),(%dx)
    6be3:	6e                   	outsb  %ds:(%rsi),(%dx)
    6be4:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    6beb:	20 31                	and    %dh,(%rcx)
    6bed:	31 2e                	xor    %ebp,(%rsi)
    6bef:	34 2e                	xor    $0x2e,%al
    6bf1:	31 20                	xor    %esp,(%rax)
    6bf3:	32 30                	xor    (%rax),%dh
    6bf5:	32 33                	xor    (%rbx),%dh
    6bf7:	30 36                	xor    %dh,(%rsi)
    6bf9:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 8bff <_end+0x4bd7>
    6bff:	00 00                	add    %al,(%rax)
    6c01:	00 00                	add    %al,(%rax)
    6c03:	00 00                	add    %al,(%rax)
    6c05:	01 00                	add    %eax,(%rax)
    6c07:	00 47 41             	add    %al,0x41(%rdi)
    6c0a:	24 05                	and    $0x5,%al
    6c0c:	61                   	(bad)
    6c0d:	6e                   	outsb  %ds:(%rsi),(%dx)
    6c0e:	6e                   	outsb  %ds:(%rsi),(%dx)
    6c0f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6c10:	62                   	(bad)
    6c11:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6c18:	31 31                	xor    %esi,(%rcx)
    6c1a:	2e 34 2e             	cs xor $0x2e,%al
    6c1d:	31 20                	xor    %esp,(%rax)
    6c1f:	32 30                	xor    (%rax),%dh
    6c21:	32 33                	xor    (%rbx),%dh
    6c23:	30 36                	xor    %dh,(%rsi)
    6c25:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 772b <_end+0x3703>
    6c2b:	00 00                	add    %al,(%rax)
    6c2d:	00 00                	add    %al,(%rax)
    6c2f:	00 00                	add    %al,(%rax)
    6c31:	01 00                	add    %eax,(%rax)
    6c33:	00 47 41             	add    %al,0x41(%rdi)
    6c36:	2a 47 4f             	sub    0x4f(%rdi),%al
    6c39:	57                   	push   %rdi
    6c3a:	00 6a 05             	add    %ch,0x5(%rdx)
    6c3d:	22 00                	and    (%rax),%al
    6c3f:	00 06                	add    %al,(%rsi)
	...
    6c49:	01 00                	add    %eax,(%rax)
    6c4b:	00 47 41             	add    %al,0x41(%rdi)
    6c4e:	2a 02                	sub    (%rdx),%al
    6c50:	03 00                	add    (%rax),%eax
    6c52:	00 00                	add    %al,(%rax)
    6c54:	0f 00 00             	sldt   (%rax)
    6c57:	00 00                	add    %al,(%rax)
    6c59:	00 00                	add    %al,(%rax)
    6c5b:	00 00                	add    %al,(%rax)
    6c5d:	01 00                	add    %eax,(%rax)
    6c5f:	00 47 41             	add    %al,0x41(%rdi)
    6c62:	2b 73 74             	sub    0x74(%rbx),%esi
    6c65:	61                   	(bad)
    6c66:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6c69:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    6c6d:	68 00 00 13 00       	push   $0x130000
    6c72:	00 00                	add    %al,(%rax)
    6c74:	00 00                	add    %al,(%rax)
    6c76:	00 00                	add    %al,(%rax)
    6c78:	00 01                	add    %al,(%rcx)
    6c7a:	00 00                	add    %al,(%rax)
    6c7c:	47                   	rex.RXB
    6c7d:	41 2a 63 66          	sub    0x66(%r11),%spl
    6c81:	5f                   	pop    %rdi
    6c82:	70 72                	jo     6cf6 <_end+0x2cce>
    6c84:	6f                   	outsl  %ds:(%rsi),(%dx)
    6c85:	74 65                	je     6cec <_end+0x2cc4>
    6c87:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    6c8b:	6e                   	outsb  %ds:(%rsi),(%dx)
    6c8c:	00 08                	add    %cl,(%rax)
    6c8e:	00 00                	add    %al,(%rax)
    6c90:	0d 00 00 00 00       	or     $0x0,%eax
    6c95:	00 00                	add    %al,(%rax)
    6c97:	00 00                	add    %al,(%rax)
    6c99:	01 00                	add    %eax,(%rax)
    6c9b:	00 47 41             	add    %al,0x41(%rdi)
    6c9e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6ca1:	52                   	push   %rdx
    6ca2:	54                   	push   %rsp
    6ca3:	49                   	rex.WB
    6ca4:	46 59                	rex.RX pop %rcx
    6ca6:	00 ff                	add    %bh,%bh
    6ca8:	00 00                	add    %al,(%rax)
    6caa:	00 00                	add    %al,(%rax)
    6cac:	16                   	(bad)
	...
    6cb5:	01 00                	add    %eax,(%rax)
    6cb7:	00 47 41             	add    %al,0x41(%rdi)
    6cba:	2b 47 4c             	sub    0x4c(%rdi),%eax
    6cbd:	49                   	rex.WB
    6cbe:	42                   	rex.X
    6cbf:	43 58                	rex.XB pop %r8
    6cc1:	58                   	pop    %rax
    6cc2:	5f                   	pop    %rdi
    6cc3:	41 53                	push   %r11
    6cc5:	53                   	push   %rbx
    6cc6:	45 52                	rex.RB push %r10
    6cc8:	54                   	push   %rsp
    6cc9:	49                   	rex.WB
    6cca:	4f                   	rex.WRXB
    6ccb:	4e 53                	rex.WRX push %rbx
    6ccd:	00 00                	add    %al,(%rax)
    6ccf:	00 06                	add    %al,(%rsi)
	...
    6cd9:	01 00                	add    %eax,(%rax)
    6cdb:	00 47 41             	add    %al,0x41(%rdi)
    6cde:	2a 07                	sub    (%rdi),%al
    6ce0:	03 00                	add    (%rax),%eax
    6ce2:	00 00                	add    %al,(%rax)
    6ce4:	05 00 00 00 00       	add    $0x0,%eax
    6ce9:	00 00                	add    %al,(%rax)
    6ceb:	00 00                	add    %al,(%rax)
    6ced:	01 00                	add    %eax,(%rax)
    6cef:	00 47 41             	add    %al,0x41(%rdi)
    6cf2:	21 08                	and    %ecx,(%rax)
    6cf4:	00 00                	add    %al,(%rax)
    6cf6:	00 00                	add    %al,(%rax)
    6cf8:	11 00                	adc    %eax,(%rax)
    6cfa:	00 00                	add    %al,(%rax)
    6cfc:	00 00                	add    %al,(%rax)
    6cfe:	00 00                	add    %al,(%rax)
    6d00:	00 01                	add    %al,(%rcx)
    6d02:	00 00                	add    %al,(%rax)
    6d04:	47                   	rex.RXB
    6d05:	41 21 73 74          	and    %esi,0x74(%r11)
    6d09:	61                   	(bad)
    6d0a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6d0d:	72 65                	jb     6d74 <_end+0x2d4c>
    6d0f:	61                   	(bad)
    6d10:	6c                   	insb   (%dx),%es:(%rdi)
    6d11:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6d18:	0b 00                	or     (%rax),%eax
    6d1a:	00 00                	add    %al,(%rax)
    6d1c:	10 00                	adc    %al,(%rax)
    6d1e:	00 00                	add    %al,(%rax)
    6d20:	00 01                	add    %al,(%rcx)
    6d22:	00 00                	add    %al,(%rax)
    6d24:	47                   	rex.RXB
    6d25:	41 24 01             	rex.B and $0x1,%al
    6d28:	33 70 31             	xor    0x31(%rax),%esi
    6d2b:	32 31                	xor    (%rcx),%dh
    6d2d:	32 00                	xor    (%rax),%al
    6d2f:	00 60 10             	add    %ah,0x10(%rax)
    6d32:	00 00                	add    %al,(%rax)
    6d34:	00 00                	add    %al,(%rax)
    6d36:	00 00                	add    %al,(%rax)
    6d38:	60                   	(bad)
    6d39:	10 00                	adc    %al,(%rax)
    6d3b:	00 00                	add    %al,(%rax)
    6d3d:	00 00                	add    %al,(%rax)
    6d3f:	00 20                	add    %ah,(%rax)
	...
    6d49:	01 00                	add    %eax,(%rax)
    6d4b:	00 47 41             	add    %al,0x41(%rdi)
    6d4e:	24 05                	and    $0x5,%al
    6d50:	72 75                	jb     6dc7 <_end+0x2d9f>
    6d52:	6e                   	outsb  %ds:(%rsi),(%dx)
    6d53:	6e                   	outsb  %ds:(%rsi),(%dx)
    6d54:	69 6e 67 20 67 63 63 	imul   $0x63636720,0x67(%rsi),%ebp
    6d5b:	20 31                	and    %dh,(%rcx)
    6d5d:	31 2e                	xor    %ebp,(%rsi)
    6d5f:	34 2e                	xor    $0x2e,%al
    6d61:	31 20                	xor    %esp,(%rax)
    6d63:	32 30                	xor    (%rax),%dh
    6d65:	32 33                	xor    (%rbx),%dh
    6d67:	30 36                	xor    %dh,(%rsi)
    6d69:	30 35 00 20 00 00    	xor    %dh,0x2000(%rip)        # 8d6f <_end+0x4d47>
    6d6f:	00 00                	add    %al,(%rax)
    6d71:	00 00                	add    %al,(%rax)
    6d73:	00 00                	add    %al,(%rax)
    6d75:	01 00                	add    %eax,(%rax)
    6d77:	00 47 41             	add    %al,0x41(%rdi)
    6d7a:	24 05                	and    $0x5,%al
    6d7c:	61                   	(bad)
    6d7d:	6e                   	outsb  %ds:(%rsi),(%dx)
    6d7e:	6e                   	outsb  %ds:(%rsi),(%dx)
    6d7f:	6f                   	outsl  %ds:(%rsi),(%dx)
    6d80:	62                   	(bad)
    6d81:	69 6e 20 67 63 63 20 	imul   $0x20636367,0x20(%rsi),%ebp
    6d88:	31 31                	xor    %esi,(%rcx)
    6d8a:	2e 34 2e             	cs xor $0x2e,%al
    6d8d:	31 20                	xor    %esp,(%rax)
    6d8f:	32 30                	xor    (%rax),%dh
    6d91:	32 33                	xor    (%rbx),%dh
    6d93:	30 36                	xor    %dh,(%rsi)
    6d95:	30 35 00 0b 00 00    	xor    %dh,0xb00(%rip)        # 789b <_end+0x3873>
    6d9b:	00 00                	add    %al,(%rax)
    6d9d:	00 00                	add    %al,(%rax)
    6d9f:	00 00                	add    %al,(%rax)
    6da1:	01 00                	add    %eax,(%rax)
    6da3:	00 47 41             	add    %al,0x41(%rdi)
    6da6:	2a 47 4f             	sub    0x4f(%rdi),%al
    6da9:	57                   	push   %rdi
    6daa:	00 6a 05             	add    %ch,0x5(%rdx)
    6dad:	22 00                	and    (%rax),%al
    6daf:	00 06                	add    %al,(%rsi)
	...
    6db9:	01 00                	add    %eax,(%rax)
    6dbb:	00 47 41             	add    %al,0x41(%rdi)
    6dbe:	2a 02                	sub    (%rdx),%al
    6dc0:	03 00                	add    (%rax),%eax
    6dc2:	00 00                	add    %al,(%rax)
    6dc4:	0f 00 00             	sldt   (%rax)
    6dc7:	00 00                	add    %al,(%rax)
    6dc9:	00 00                	add    %al,(%rax)
    6dcb:	00 00                	add    %al,(%rax)
    6dcd:	01 00                	add    %eax,(%rax)
    6dcf:	00 47 41             	add    %al,0x41(%rdi)
    6dd2:	2b 73 74             	sub    0x74(%rbx),%esi
    6dd5:	61                   	(bad)
    6dd6:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6dd9:	63 6c 61 73          	movsxd 0x73(%rcx,%riz,2),%ebp
    6ddd:	68 00 00 13 00       	push   $0x130000
    6de2:	00 00                	add    %al,(%rax)
    6de4:	00 00                	add    %al,(%rax)
    6de6:	00 00                	add    %al,(%rax)
    6de8:	00 01                	add    %al,(%rcx)
    6dea:	00 00                	add    %al,(%rax)
    6dec:	47                   	rex.RXB
    6ded:	41 2a 63 66          	sub    0x66(%r11),%spl
    6df1:	5f                   	pop    %rdi
    6df2:	70 72                	jo     6e66 <_end+0x2e3e>
    6df4:	6f                   	outsl  %ds:(%rsi),(%dx)
    6df5:	74 65                	je     6e5c <_end+0x2e34>
    6df7:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    6dfb:	6e                   	outsb  %ds:(%rsi),(%dx)
    6dfc:	00 08                	add    %cl,(%rax)
    6dfe:	00 00                	add    %al,(%rax)
    6e00:	0d 00 00 00 00       	or     $0x0,%eax
    6e05:	00 00                	add    %al,(%rax)
    6e07:	00 00                	add    %al,(%rax)
    6e09:	01 00                	add    %eax,(%rax)
    6e0b:	00 47 41             	add    %al,0x41(%rdi)
    6e0e:	2a 46 4f             	sub    0x4f(%rsi),%al
    6e11:	52                   	push   %rdx
    6e12:	54                   	push   %rsp
    6e13:	49                   	rex.WB
    6e14:	46 59                	rex.RX pop %rcx
    6e16:	00 ff                	add    %bh,%bh
    6e18:	00 00                	add    %al,(%rax)
    6e1a:	00 00                	add    %al,(%rax)
    6e1c:	16                   	(bad)
	...
    6e25:	01 00                	add    %eax,(%rax)
    6e27:	00 47 41             	add    %al,0x41(%rdi)
    6e2a:	2b 47 4c             	sub    0x4c(%rdi),%eax
    6e2d:	49                   	rex.WB
    6e2e:	42                   	rex.X
    6e2f:	43 58                	rex.XB pop %r8
    6e31:	58                   	pop    %rax
    6e32:	5f                   	pop    %rdi
    6e33:	41 53                	push   %r11
    6e35:	53                   	push   %rbx
    6e36:	45 52                	rex.RB push %r10
    6e38:	54                   	push   %rsp
    6e39:	49                   	rex.WB
    6e3a:	4f                   	rex.WRXB
    6e3b:	4e 53                	rex.WRX push %rbx
    6e3d:	00 00                	add    %al,(%rax)
    6e3f:	00 06                	add    %al,(%rsi)
	...
    6e49:	01 00                	add    %eax,(%rax)
    6e4b:	00 47 41             	add    %al,0x41(%rdi)
    6e4e:	2a 07                	sub    (%rdi),%al
    6e50:	03 00                	add    (%rax),%eax
    6e52:	00 00                	add    %al,(%rax)
    6e54:	05 00 00 00 00       	add    $0x0,%eax
    6e59:	00 00                	add    %al,(%rax)
    6e5b:	00 00                	add    %al,(%rax)
    6e5d:	01 00                	add    %eax,(%rax)
    6e5f:	00 47 41             	add    %al,0x41(%rdi)
    6e62:	21 08                	and    %ecx,(%rax)
    6e64:	00 00                	add    %al,(%rax)
    6e66:	00 00                	add    %al,(%rax)
    6e68:	11 00                	adc    %eax,(%rax)
    6e6a:	00 00                	add    %al,(%rax)
    6e6c:	00 00                	add    %al,(%rax)
    6e6e:	00 00                	add    %al,(%rax)
    6e70:	00 01                	add    %al,(%rcx)
    6e72:	00 00                	add    %al,(%rax)
    6e74:	47                   	rex.RXB
    6e75:	41 21 73 74          	and    %esi,0x74(%r11)
    6e79:	61                   	(bad)
    6e7a:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
    6e7d:	72 65                	jb     6ee4 <_end+0x2ebc>
    6e7f:	61                   	(bad)
    6e80:	6c                   	insb   (%dx),%es:(%rdi)
    6e81:	69 67 6e 00 00 00 00 	imul   $0x0,0x6e(%rdi),%esp
    6e88:	08 00                	or     %al,(%rax)
    6e8a:	00 00                	add    %al,(%rax)
    6e8c:	10 00                	adc    %al,(%rax)
    6e8e:	00 00                	add    %al,(%rax)
    6e90:	00 01                	add    %al,(%rcx)
    6e92:	00 00                	add    %al,(%rax)
    6e94:	47                   	rex.RXB
    6e95:	41 24 01             	rex.B and $0x1,%al
    6e98:	33 61 31             	xor    0x31(%rcx),%esp
    6e9b:	00 60 10             	add    %ah,0x10(%rax)
    6e9e:	00 00                	add    %al,(%rax)
    6ea0:	00 00                	add    %al,(%rax)
    6ea2:	00 00                	add    %al,(%rax)
    6ea4:	86 10                	xchg   %dl,(%rax)
    6ea6:	00 00                	add    %al,(%rax)
    6ea8:	00 00                	add    %al,(%rax)
    6eaa:	00 00                	add    %al,(%rax)
    6eac:	08 00                	or     %al,(%rax)
    6eae:	00 00                	add    %al,(%rax)
    6eb0:	10 00                	adc    %al,(%rax)
    6eb2:	00 00                	add    %al,(%rax)
    6eb4:	00 01                	add    %al,(%rcx)
    6eb6:	00 00                	add    %al,(%rax)
    6eb8:	47                   	rex.RXB
    6eb9:	41 24 01             	rex.B and $0x1,%al
    6ebc:	33 61 31             	xor    0x31(%rcx),%esp
    6ebf:	00 86 10 00 00 00    	add    %al,0x10(%rsi)
    6ec5:	00 00                	add    %al,(%rax)
    6ec7:	00 86 10 00 00 00    	add    %al,0x10(%rsi)
    6ecd:	00 00                	add    %al,(%rax)
    6ecf:	00 08                	add    %cl,(%rax)
    6ed1:	00 00                	add    %al,(%rax)
    6ed3:	00 10                	add    %dl,(%rax)
    6ed5:	00 00                	add    %al,(%rax)
    6ed7:	00 00                	add    %al,(%rax)
    6ed9:	01 00                	add    %eax,(%rax)
    6edb:	00 47 41             	add    %al,0x41(%rdi)
    6ede:	24 01                	and    $0x1,%al
    6ee0:	33 61 31             	xor    0x31(%rcx),%esp
    6ee3:	00 00                	add    %al,(%rax)
    6ee5:	10 00                	adc    %al,(%rax)
    6ee7:	00 00                	add    %al,(%rax)
    6ee9:	00 00                	add    %al,(%rax)
    6eeb:	00 16                	add    %dl,(%rsi)
    6eed:	10 00                	adc    %al,(%rax)
    6eef:	00 00                	add    %al,(%rax)
    6ef1:	00 00                	add    %al,(%rax)
    6ef3:	00 08                	add    %cl,(%rax)
    6ef5:	00 00                	add    %al,(%rax)
    6ef7:	00 10                	add    %dl,(%rax)
    6ef9:	00 00                	add    %al,(%rax)
    6efb:	00 00                	add    %al,(%rax)
    6efd:	01 00                	add    %eax,(%rax)
    6eff:	00 47 41             	add    %al,0x41(%rdi)
    6f02:	24 01                	and    $0x1,%al
    6f04:	33 61 31             	xor    0x31(%rcx),%esp
    6f07:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
    6f0b:	00 00                	add    %al,(%rax)
    6f0d:	00 00                	add    %al,(%rax)
    6f0f:	00 84 11 00 00 00 00 	add    %al,0x0(%rcx,%rdx,1)
    6f16:	00 00                	add    %al,(%rax)
    6f18:	08 00                	or     %al,(%rax)
    6f1a:	00 00                	add    %al,(%rax)
    6f1c:	10 00                	adc    %al,(%rax)
    6f1e:	00 00                	add    %al,(%rax)
    6f20:	00 01                	add    %al,(%rcx)
    6f22:	00 00                	add    %al,(%rax)
    6f24:	47                   	rex.RXB
    6f25:	41 24 01             	rex.B and $0x1,%al
    6f28:	33 61 31             	xor    0x31(%rcx),%esp
    6f2b:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
    6f2f:	00 00                	add    %al,(%rax)
    6f31:	00 00                	add    %al,(%rax)
    6f33:	00 7c 11 00          	add    %bh,0x0(%rcx,%rdx,1)
    6f37:	00 00                	add    %al,(%rax)
    6f39:	00 00                	add    %al,(%rax)
    6f3b:	00 08                	add    %cl,(%rax)
    6f3d:	00 00                	add    %al,(%rax)
    6f3f:	00 10                	add    %dl,(%rax)
    6f41:	00 00                	add    %al,(%rax)
    6f43:	00 00                	add    %al,(%rax)
    6f45:	01 00                	add    %eax,(%rax)
    6f47:	00 47 41             	add    %al,0x41(%rdi)
    6f4a:	24 01                	and    $0x1,%al
    6f4c:	33 61 31             	xor    0x31(%rcx),%esp
    6f4f:	00 16                	add    %dl,(%rsi)
    6f51:	10 00                	adc    %al,(%rax)
    6f53:	00 00                	add    %al,(%rax)
    6f55:	00 00                	add    %al,(%rax)
    6f57:	00 1b                	add    %bl,(%rbx)
    6f59:	10 00                	adc    %al,(%rax)
    6f5b:	00 00                	add    %al,(%rax)
    6f5d:	00 00                	add    %al,(%rax)
    6f5f:	00 08                	add    %cl,(%rax)
    6f61:	00 00                	add    %al,(%rax)
    6f63:	00 10                	add    %dl,(%rax)
    6f65:	00 00                	add    %al,(%rax)
    6f67:	00 00                	add    %al,(%rax)
    6f69:	01 00                	add    %eax,(%rax)
    6f6b:	00 47 41             	add    %al,0x41(%rdi)
    6f6e:	24 01                	and    $0x1,%al
    6f70:	33 61 31             	xor    0x31(%rcx),%esp
    6f73:	00 84 11 00 00 00 00 	add    %al,0x0(%rcx,%rdx,1)
    6f7a:	00 00                	add    %al,(%rax)
    6f7c:	89 11                	mov    %edx,(%rcx)
    6f7e:	00 00                	add    %al,(%rax)
    6f80:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	1d 11 00 00 00       	sbb    $0x11,%eax
  15:	00 00                	add    %al,(%rax)
  17:	00 5f 00             	add    %bl,0x0(%rdi)
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	c2 00 00             	ret    $0x0
   3:	00 05 00 01 08 00    	add    %al,0x80100(%rip)        # 80109 <_end+0x7c0e1>
   9:	00 00                	add    %al,(%rax)
   b:	00 04 27             	add    %al,(%rdi,%riz,1)
   e:	00 00                	add    %al,(%rax)
  10:	00 23                	add    %ah,(%rbx)
  12:	02 83 00 00 00 00    	add    0x0(%rbx),%al
  18:	00 00                	add    %al,(%rax)
  1a:	00 1d 11 00 00 00    	add    %bl,0x11(%rip)        # 31 <_init-0xfcf>
  20:	00 00                	add    %al,(%rax)
  22:	00 5f 00             	add    %bl,0x0(%rdi)
	...
  31:	00 00                	add    %al,(%rax)
  33:	05 3e 01 00 00       	add    $0x13e,%eax
  38:	01 0c 13             	add    %ecx,(%rbx,%rdx,1)
  3b:	6f                   	outsl  %ds:(%rsi),(%dx)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 3c 11             	add    %bh,(%rcx,%rdx,1)
  41:	00 00                	add    %al,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	40 00 00             	rex add %al,(%rax)
  4a:	00 00                	add    %al,(%rax)
  4c:	00 00                	add    %al,(%rax)
  4e:	00 01                	add    %al,(%rcx)
  50:	9c                   	pushf
  51:	6f                   	outsl  %ds:(%rsi),(%dx)
  52:	00 00                	add    %al,(%rax)
  54:	00 02                	add    %al,(%rdx)
  56:	12 00                	adc    (%rax),%al
  58:	00 00                	add    %al,(%rax)
  5a:	76 00                	jbe    5c <_init-0xfa4>
  5c:	00 00                	add    %al,(%rax)
  5e:	02 91 6c 02 4b 01    	add    0x14b026c(%rcx),%dl
  64:	00 00                	add    %al,(%rax)
  66:	7b 00                	jnp    68 <_init-0xf98>
  68:	00 00                	add    %al,(%rax)
  6a:	03 91 60 06 00 03    	add    0x3000660(%rcx),%edx
  70:	04 05                	add    $0x5,%al
  72:	17                   	(bad)
  73:	00 00                	add    %al,(%rax)
  75:	00 06                	add    %al,(%rsi)
  77:	6f                   	outsl  %ds:(%rsi),(%dx)
  78:	00 00                	add    %al,(%rax)
  7a:	00 07                	add    %al,(%rdi)
  7c:	08 81 00 00 00 03    	or     %al,0x3000000(%rcx)
  82:	01 08                	add    %ecx,(%rax)
  84:	00 00                	add    %al,(%rax)
  86:	00 00                	add    %al,(%rax)
  88:	08 43 01             	or     %al,0x1(%rbx)
  8b:	00 00                	add    %al,(%rax)
  8d:	01 01                	add    %eax,(%rcx)
  8f:	0f 02 1d 11 00 00 00 	lar    0x11(%rip),%ebx        # a7 <_init-0xf59>
  96:	00 00                	add    %al,(%rax)
  98:	00 1f                	add    %bl,(%rdi)
  9a:	00 00                	add    %al,(%rax)
  9c:	00 00                	add    %al,(%rax)
  9e:	00 00                	add    %al,(%rax)
  a0:	00 01                	add    %al,(%rcx)
  a2:	9c                   	pushf
  a3:	01 61 00             	add    %esp,0x0(%rcx)
  a6:	1c 6f                	sbb    $0x6f,%al
  a8:	00 00                	add    %al,(%rax)
  aa:	00 02                	add    %al,(%rdx)
  ac:	91                   	xchg   %eax,%ecx
  ad:	6c                   	insb   (%dx),%es:(%rdi)
  ae:	01 62 00             	add    %esp,0x0(%rdx)
  b1:	1f                   	(bad)
  b2:	6f                   	outsl  %ds:(%rsi),(%dx)
  b3:	00 00                	add    %al,(%rax)
  b5:	00 02                	add    %al,(%rdx)
  b7:	91                   	xchg   %eax,%ecx
  b8:	68 01 63 00 22       	push   $0x22006301
  bd:	6f                   	outsl  %ds:(%rsi),(%dx)
  be:	00 00                	add    %al,(%rax)
  c0:	00 02                	add    %al,(%rdx)
  c2:	91                   	xchg   %eax,%ecx
  c3:	64 00 00             	add    %al,%fs:(%rax)

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 34 00             	add    %esi,(%rax,%rax,1)
   3:	03 08                	add    (%rax),%ecx
   5:	3a 21                	cmp    (%rcx),%ah
   7:	01 3b                	add    %edi,(%rbx)
   9:	21 05 39 0b 49 13    	and    %eax,0x13490b39(%rip)        # 13490b48 <_end+0x1348cb20>
   f:	02 18                	add    (%rax),%bl
  11:	00 00                	add    %al,(%rax)
  13:	02 05 00 03 0e 3a    	add    0x3a0e0300(%rip),%al        # 3a0e0319 <_end+0x3a0dc2f1>
  19:	21 01                	and    %eax,(%rcx)
  1b:	3b 21                	cmp    (%rcx),%esp
  1d:	0c 39                	or     $0x39,%al
  1f:	21 13                	and    %edx,(%rbx)
  21:	49 13 02             	adc    (%r10),%rax
  24:	18 00                	sbb    %al,(%rax)
  26:	00 03                	add    %al,(%rbx)
  28:	24 00                	and    $0x0,%al
  2a:	0b 0b                	or     (%rbx),%ecx
  2c:	3e 0b 03             	ds or  (%rbx),%eax
  2f:	0e                   	(bad)
  30:	00 00                	add    %al,(%rax)
  32:	04 11                	add    $0x11,%al
  34:	01 25 0e 13 0b 42    	add    %esp,0x420b130e(%rip)        # 420b1348 <_end+0x420ad320>
  3a:	0b 03                	or     (%rbx),%eax
  3c:	1f                   	(bad)
  3d:	1b 1f                	sbb    (%rdi),%ebx
  3f:	11 01                	adc    %eax,(%rcx)
  41:	12 07                	adc    (%rdi),%al
  43:	10 17                	adc    %dl,(%rdi)
  45:	79 17                	jns    5e <_init-0xfa2>
  47:	00 00                	add    %al,(%rax)
  49:	05 2e 01 3f 19       	add    $0x193f012e,%eax
  4e:	03 0e                	add    (%rsi),%ecx
  50:	3a 0b                	cmp    (%rbx),%cl
  52:	3b 0b                	cmp    (%rbx),%ecx
  54:	39 0b                	cmp    %ecx,(%rbx)
  56:	49 13 11             	adc    (%r9),%rdx
  59:	01 12                	add    %edx,(%rdx)
  5b:	07                   	(bad)
  5c:	40 18 7c 19 01       	sbb    %dil,0x1(%rcx,%rbx,1)
  61:	13 00                	adc    (%rax),%eax
  63:	00 06                	add    %al,(%rsi)
  65:	26 00 49 13          	es add %cl,0x13(%rcx)
  69:	00 00                	add    %al,(%rax)
  6b:	07                   	(bad)
  6c:	0f 00 0b             	str    (%rbx)
  6f:	0b 49 13             	or     0x13(%rcx),%ecx
  72:	00 00                	add    %al,(%rax)
  74:	08 2e                	or     %ch,(%rsi)
  76:	01 03                	add    %eax,(%rbx)
  78:	0e                   	(bad)
  79:	3a 0b                	cmp    (%rbx),%cl
  7b:	3b 0b                	cmp    (%rbx),%ecx
  7d:	39 0b                	cmp    %ecx,(%rbx)
  7f:	6a 19                	push   $0x19
  81:	36 0b 11             	ss or  (%rcx),%edx
  84:	01 12                	add    %edx,(%rdx)
  86:	07                   	(bad)
  87:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  8b:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	6f                   	outsl  %ds:(%rsi),(%dx)
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 33    	add    %al,0x33000800(%rip)        # 33000809 <_end+0x32ffc7e1>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
  20:	1f                   	(bad)
  21:	02 00                	add    (%rax),%al
  23:	00 00                	add    %al,(%rax)
  25:	00 8f 00 00 00 02    	add    %cl,0x2000000(%rdi)
  2b:	01 1f                	add    %ebx,(%rdi)
  2d:	02 0f                	add    (%rdi),%cl
  2f:	03 83 00 00 00 00    	add    0x0(%rbx),%eax
  35:	83 00 00             	addl   $0x0,(%rax)
  38:	00 00                	add    %al,(%rax)
  3a:	e1 00                	loope  3c <_init-0xfc4>
  3c:	00 00                	add    %al,(%rax)
  3e:	01 05 0f 00 09 02    	add    %eax,0x209000f(%rip)        # 2090053 <_end+0x208c02b>
  44:	1d 11 00 00 00       	sbb    $0x11,%eax
  49:	00 00                	add    %al,(%rax)
  4b:	00 01                	add    %al,(%rcx)
  4d:	05 0e 50 05 0d       	add    $0xd05500e,%eax
  52:	75 05                	jne    59 <_init-0xfa7>
  54:	15 76 05 13 a0       	adc    $0xa0130576,%eax
  59:	3c e4                	cmp    $0xe4,%al
  5b:	00 02                	add    %al,(%rdx)
  5d:	04 01                	add    $0x1,%al
  5f:	06                   	(bad)
  60:	08 12                	or     %dl,(%rdx)
  62:	00 02                	add    %al,(%rdx)
  64:	04 02                	add    $0x2,%al
  66:	08 3c 00             	or     %bh,(%rax,%rax,1)
  69:	02 04 03             	add    (%rbx,%rax,1),%al
  6c:	58                   	pop    %rax
  6d:	58                   	pop    %rax
  6e:	02 02                	add    (%rdx),%al
  70:	00 01                	add    %al,(%rcx)
  72:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	63 68 61             	movsxd 0x61(%rax),%ebp
   3:	72 61                	jb     66 <_init-0xf9a>
   5:	63 74 65 72          	movsxd 0x72(%rbp,%riz,2),%esi
   9:	28 6b 69             	sub    %ch,0x69(%rbx)
   c:	6e                   	outsb  %ds:(%rsi),(%dx)
   d:	64 3d 31 29 00 61    	fs cmp $0x61002931,%eax
  13:	72 67                	jb     7c <_init-0xf84>
  15:	63 00                	movsxd (%rax),%eax
  17:	69 6e 74 65 67 65 72 	imul   $0x72656765,0x74(%rsi),%ebp
  1e:	28 6b 69             	sub    %ch,0x69(%rbx)
  21:	6e                   	outsb  %ds:(%rsi),(%dx)
  22:	64 3d 34 29 00 47    	fs cmp $0x47002934,%eax
  28:	4e 55                	rex.WRX push %rbp
  2a:	20 46 6f             	and    %al,0x6f(%rsi)
  2d:	72 74                	jb     a3 <_init-0xf5d>
  2f:	72 61                	jb     92 <_init-0xf6e>
  31:	6e                   	outsb  %ds:(%rsi),(%dx)
  32:	32 30                	xor    (%rax),%dh
  34:	30 38                	xor    %bh,(%rax)
  36:	20 31                	and    %dh,(%rcx)
  38:	35 2e 31 2e 30       	xor    $0x302e312e,%eax
  3d:	20 2d 6d 74 75 6e    	and    %ch,0x6e75746d(%rip)        # 6e7574b0 <_end+0x6e753488>
  43:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  49:	72 69                	jb     b4 <_init-0xf4c>
  4b:	63 20                	movsxd (%rax),%esp
  4d:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  52:	68 3d 78 38 36       	push   $0x3638783d
  57:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  5c:	67 67 64 62 33       	addr32 addr32 fs (bad)
  61:	20 2d 66 69 6e 74    	and    %ch,0x746e6966(%rip)        # 746e69cd <_end+0x746e29a5>
  67:	72 69                	jb     d2 <_init-0xf2e>
  69:	6e                   	outsb  %ds:(%rsi),(%dx)
  6a:	73 69                	jae    d5 <_init-0xf2b>
  6c:	63 2d 6d 6f 64 75    	movsxd 0x75646f6d(%rip),%ebp        # 75646fdf <_end+0x75642fb7>
  72:	6c                   	insb   (%dx),%es:(%rdi)
  73:	65 73 2d             	gs jae a3 <_init-0xf5d>
  76:	70 61                	jo     d9 <_init-0xf27>
  78:	74 68                	je     e2 <_init-0xf1e>
  7a:	20 2f                	and    %ch,(%rdi)
  7c:	68 6f 6d 65 2f       	push   $0x2f656d6f
  81:	68 61 78 6f 72       	push   $0x726f7861
  86:	2f                   	(bad)
  87:	6d                   	insl   (%dx),%es:(%rdi)
  88:	61                   	(bad)
  89:	6d                   	insl   (%dx),%es:(%rdi)
  8a:	62 61 66 6f 72       	(bad)
  8f:	67 65 2f             	addr32 gs (bad)
  92:	62                   	(bad)
  93:	69 6e 2f 2e 2e 2f 6c 	imul   $0x6c2f2e2e,0x2f(%rsi),%ebp
  9a:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  a1:	78 38                	js     db <_init-0xf25>
  a3:	36 5f                	ss pop %rdi
  a5:	36 34 2d             	ss xor $0x2d,%al
  a8:	63 6f 6e             	movsxd 0x6e(%rdi),%ebp
  ab:	64 61                	fs (bad)
  ad:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  b2:	78 2d                	js     e1 <_init-0xf1f>
  b4:	67 6e                	outsb  %ds:(%esi),(%dx)
  b6:	75 2f                	jne    e7 <_init-0xf19>
  b8:	31 35 2e 31 2e 30    	xor    %esi,0x302e312e(%rip)        # 302e31ec <_end+0x302df1c4>
  be:	2f                   	(bad)
  bf:	66 69 6e 63 6c 75    	imul   $0x756c,0x63(%rsi),%bp
  c5:	64 65 20 2d 66 70 72 	fs and %ch,%gs:0x65727066(%rip)        # 65727133 <_end+0x6572310b>
  cc:	65 
  cd:	2d 69 6e 63 6c       	sub    $0x6c636e69,%eax
  d2:	75 64                	jne    138 <_init-0xec8>
  d4:	65 3d 2f 68 6f 6d    	gs cmp $0x6d6f682f,%eax
  da:	65 2f                	gs (bad)
  dc:	68 61 78 6f 72       	push   $0x726f7861
  e1:	2f                   	(bad)
  e2:	6d                   	insl   (%dx),%es:(%rdi)
  e3:	61                   	(bad)
  e4:	6d                   	insl   (%dx),%es:(%rdi)
  e5:	62 61 66 6f 72       	(bad)
  ea:	67 65 2f             	addr32 gs (bad)
  ed:	62                   	(bad)
  ee:	69 6e 2f 2e 2e 2f 78 	imul   $0x782f2e2e,0x2f(%rsi),%ebp
  f5:	38 36                	cmp    %dh,(%rsi)
  f7:	5f                   	pop    %rdi
  f8:	36 34 2d             	ss xor $0x2d,%al
  fb:	63 6f 6e             	movsxd 0x6e(%rdi),%ebp
  fe:	64 61                	fs (bad)
 100:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 105:	78 2d                	js     134 <_init-0xecc>
 107:	67 6e                	outsb  %ds:(%esi),(%dx)
 109:	75 2f                	jne    13a <_init-0xec6>
 10b:	73 79                	jae    186 <_init-0xe7a>
 10d:	73 72                	jae    181 <_init-0xe7f>
 10f:	6f                   	outsl  %ds:(%rsi),(%dx)
 110:	6f                   	outsl  %ds:(%rsi),(%dx)
 111:	74 2f                	je     142 <_init-0xebe>
 113:	75 73                	jne    188 <_init-0xe78>
 115:	72 2f                	jb     146 <_init-0xeba>
 117:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
 11e:	2f                   	(bad)
 11f:	66 69 6e 63 6c 75    	imul   $0x756c,0x63(%rsi),%bp
 125:	64 65 2f             	fs gs (bad)
 128:	6d                   	insl   (%dx),%es:(%rdi)
 129:	61                   	(bad)
 12a:	74 68                	je     194 <_init-0xe6c>
 12c:	2d 76 65 63 74       	sub    $0x74636576,%eax
 131:	6f                   	outsl  %ds:(%rsi),(%dx)
 132:	72 2d                	jb     161 <_init-0xe9f>
 134:	66 6f                	outsw  %ds:(%rsi),(%dx)
 136:	72 74                	jb     1ac <_init-0xe54>
 138:	72 61                	jb     19b <_init-0xe65>
 13a:	6e                   	outsb  %ds:(%rsi),(%dx)
 13b:	2e 68 00 6d 61 69    	cs push $0x69616d00
 141:	6e                   	outsb  %ds:(%rsi),(%dx)
 142:	00 6d 6f             	add    %ch,0x6f(%rbp)
 145:	64 5f                	fs pop %rdi
 147:	69 6e 74 00 61 72 67 	imul   $0x67726100,0x74(%rsi),%ebp
 14e:	76 00                	jbe    150 <_init-0xeb0>

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	68 6f 6d 65 2f       	push   $0x2f656d6f
   6:	68 61 78 6f 72       	push   $0x726f7861
   b:	2f                   	(bad)
   c:	44 6f                	rex.R outsl %ds:(%rsi),(%dx)
   e:	63 75 6d             	movsxd 0x6d(%rbp),%esi
  11:	65 6e                	outsb  %gs:(%rsi),(%dx)
  13:	74 73                	je     88 <_init-0xf78>
  15:	2f                   	(bad)
  16:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
  18:	67 69 6e 65 65 72 69 	imul   $0x6e697265,0x65(%esi),%ebp
  1f:	6e 
  20:	67 2f                	addr32 (bad)
  22:	44 69 73 61 73 73 65 	imul   $0x6d657373,0x61(%rbx),%r14d
  29:	6d 
  2a:	62                   	(bad)
  2b:	6c                   	insb   (%dx),%es:(%rdi)
  2c:	69 6e 67 2d 42 69 6e 	imul   $0x6e69422d,0x67(%rsi),%ebp
  33:	61                   	(bad)
  34:	72 69                	jb     9f <_init-0xf61>
  36:	65 73 2f             	gs jae 68 <_init-0xf98>
  39:	46 6f                	rex.RX outsl %ds:(%rsi),(%dx)
  3b:	72 74                	jb     b1 <_init-0xf4f>
  3d:	72 61                	jb     a0 <_init-0xf60>
  3f:	6e                   	outsb  %ds:(%rsi),(%dx)
  40:	2f                   	(bad)
  41:	41 52                	push   %r10
  43:	4d 5f                	rex.WRB pop %r15
  45:	61                   	(bad)
  46:	72 63                	jb     ab <_init-0xf55>
  48:	68 69 74 65 63       	push   $0x63657469
  4d:	74 75                	je     c4 <_init-0xf3c>
  4f:	72 65                	jb     b6 <_init-0xf4a>
  51:	2f                   	(bad)
  52:	41 52                	push   %r10
  54:	4d                   	rex.WRB
  55:	36 34 2f             	ss xor $0x2f,%al
  58:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
  5a:	74 65                	je     c1 <_init-0xf3f>
  5c:	67 65 72 5f          	addr32 gs jb bf <_init-0xf41>
  60:	4f 70 65             	rex.WRXB jo c8 <_init-0xf38>
  63:	72 61                	jb     c6 <_init-0xf3a>
  65:	74 69                	je     d0 <_init-0xf30>
  67:	6f                   	outsl  %ds:(%rsi),(%dx)
  68:	6e                   	outsb  %ds:(%rsi),(%dx)
  69:	73 2f                	jae    9a <_init-0xf66>
  6b:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
  6d:	64 5f                	fs pop %rdi
  6f:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
  71:	74 2f                	je     a2 <_init-0xf5e>
  73:	57                   	push   %rdi
  74:	69 74 68 5f 44 65 62 	imul   $0x75626544,0x5f(%rax,%rbp,2),%esi
  7b:	75 
  7c:	67 5f                	addr32 pop %rdi
  7e:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
  80:	66 6f                	outsw  %ds:(%rsi),(%dx)
  82:	00 6d 6f             	add    %ch,0x6f(%rbp)
  85:	64 5f                	fs pop %rdi
  87:	69 6e 74 2e 66 30 38 	imul   $0x3830662e,0x74(%rsi),%ebp
  8e:	00 2f                	add    %ch,(%rdi)
  90:	68 6f 6d 65 2f       	push   $0x2f656d6f
  95:	68 61 78 6f 72       	push   $0x726f7861
  9a:	2f                   	(bad)
  9b:	6d                   	insl   (%dx),%es:(%rdi)
  9c:	61                   	(bad)
  9d:	6d                   	insl   (%dx),%es:(%rdi)
  9e:	62 61 66 6f 72       	(bad)
  a3:	67 65 2f             	addr32 gs (bad)
  a6:	62                   	(bad)
  a7:	69 6e 2f 2e 2e 2f 78 	imul   $0x782f2e2e,0x2f(%rsi),%ebp
  ae:	38 36                	cmp    %dh,(%rsi)
  b0:	5f                   	pop    %rdi
  b1:	36 34 2d             	ss xor $0x2d,%al
  b4:	63 6f 6e             	movsxd 0x6e(%rdi),%ebp
  b7:	64 61                	fs (bad)
  b9:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  be:	78 2d                	js     ed <_init-0xf13>
  c0:	67 6e                	outsb  %ds:(%esi),(%dx)
  c2:	75 2f                	jne    f3 <_init-0xf0d>
  c4:	73 79                	jae    13f <_init-0xec1>
  c6:	73 72                	jae    13a <_init-0xec6>
  c8:	6f                   	outsl  %ds:(%rsi),(%dx)
  c9:	6f                   	outsl  %ds:(%rsi),(%dx)
  ca:	74 2f                	je     fb <_init-0xf05>
  cc:	75 73                	jne    141 <_init-0xebf>
  ce:	72 2f                	jb     ff <_init-0xf01>
  d0:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  d7:	2f                   	(bad)
  d8:	66 69 6e 63 6c 75    	imul   $0x756c,0x63(%rsi),%bp
  de:	64 65 00 6d 61       	fs add %ch,%gs:0x61(%rbp)
  e3:	74 68                	je     14d <_init-0xeb3>
  e5:	2d 76 65 63 74       	sub    $0x74636576,%eax
  ea:	6f                   	outsl  %ds:(%rsi),(%dx)
  eb:	72 2d                	jb     11a <_init-0xee6>
  ed:	66 6f                	outsw  %ds:(%rsi),(%dx)
  ef:	72 74                	jb     165 <_init-0xe9b>
  f1:	72 61                	jb     154 <_init-0xeac>
  f3:	6e                   	outsb  %ds:(%rsi),(%dx)
  f4:	2e                   	cs
  f5:	68                   	.byte 0x68
	...

Disassembly of section .debug_macro:

0000000000000000 <.debug_macro>:
   0:	05 00 02 00 00       	add    $0x200,%eax
   5:	00 00                	add    %al,(%rax)
   7:	03 00                	add    (%rax),%eax
   9:	01 03                	add    %eax,(%rbx)
   b:	00 02                	add    %al,(%rdx)
   d:	04 04                	add    $0x4,%al
	...
Contents of the .eh_frame section (loaded from mod_int_Fortran_aarch64_ggdb3):


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Augmentation data:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000018 0000000000000014 0000001c FDE cie=00000000 pc=0000000000001060..0000000000001086
  DW_CFA_advance_loc: 4 to 0000000000001064
  DW_CFA_undefined: r16 (rip)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000024 00000034 FDE cie=00000000 pc=0000000000001020..0000000000001050
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000001026
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000001030
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000058 0000000000000014 0000005c FDE cie=00000000 pc=0000000000001050..0000000000001058
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 000000000000001c 00000074 FDE cie=00000000 pc=000000000000111d..000000000000113c
  DW_CFA_advance_loc: 1 to 000000000000111e
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000001121
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 26 to 000000000000113b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000090 000000000000001c 00000094 FDE cie=00000000 pc=000000000000113c..000000000000117c
  DW_CFA_advance_loc: 1 to 000000000000113d
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (rbp) at cfa-16
  DW_CFA_advance_loc: 3 to 0000000000001140
  DW_CFA_def_cfa_register: r6 (rbp)
  DW_CFA_advance_loc: 59 to 000000000000117b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000b0 ZERO terminator


Contents of the .debug_aranges section (loaded from mod_int_Fortran_aarch64_ggdb3):

  Length:                   44
  Version:                  2
  Offset into .debug_info:  0
  Pointer Size:             8
  Segment Size:             0

    Address            Length
    000000000000111d 000000000000005f
    0000000000000000 0000000000000000

Contents of the .debug_info section (loaded from mod_int_Fortran_aarch64_ggdb3):

  Compilation Unit @ offset 0:
   Length:        0xc2 (32-bit)
   Version:       5
   Unit Type:     DW_UT_compile (1)
   Abbrev Offset: 0
   Pointer Size:  8
 <0><c>: Abbrev Number: 4 (DW_TAG_compile_unit)
    <d>   DW_AT_producer    : (indirect string, offset: 0x27): GNU Fortran2008 15.1.0 -mtune=generic -march=x86-64 -ggdb3 -fintrinsic-modules-path /home/haxor/mambaforge/bin/../lib/gcc/x86_64-conda-linux-gnu/15.1.0/finclude -fpre-include=/home/haxor/mambaforge/bin/../x86_64-conda-linux-gnu/sysroot/usr/include/finclude/math-vector-fortran.h
    <11>   DW_AT_language    : 35	(Fortran 08)
    <12>   DW_AT_identifier_case: 2	(down_case)
    <13>   DW_AT_name        : (indirect line string, offset: 0x83): mod_int.f08
    <17>   DW_AT_comp_dir    : (indirect line string, offset: 0): /home/haxor/Documents/Engineering/Disassembling-Binaries/Fortran/ARM_architecture/ARM64/Integer_Operations/Mod_Int/With_Debug_Info
    <1b>   DW_AT_low_pc      : 0x111d
    <23>   DW_AT_high_pc     : 0x5f
    <2b>   DW_AT_stmt_list   : 0
    <2f>   DW_AT_macros      : 0
 <1><33>: Abbrev Number: 5 (DW_TAG_subprogram)
    <34>   DW_AT_external    : 1
    <34>   DW_AT_name        : (indirect string, offset: 0x13e): main
    <38>   DW_AT_decl_file   : 1
    <39>   DW_AT_decl_line   : 12
    <3a>   DW_AT_decl_column : 19
    <3b>   DW_AT_type        : <0x6f>
    <3f>   DW_AT_low_pc      : 0x113c
    <47>   DW_AT_high_pc     : 0x40
    <4f>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <51>   DW_AT_call_all_tail_calls: 1
    <51>   DW_AT_sibling     : <0x6f>
 <2><55>: Abbrev Number: 2 (DW_TAG_formal_parameter)
    <56>   DW_AT_name        : (indirect string, offset: 0x12): argc
    <5a>   DW_AT_decl_file   : 1
    <5a>   DW_AT_decl_line   : 12
    <5a>   DW_AT_decl_column : 19
    <5a>   DW_AT_type        : <0x76>
    <5e>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><61>: Abbrev Number: 2 (DW_TAG_formal_parameter)
    <62>   DW_AT_name        : (indirect string, offset: 0x14b): argv
    <66>   DW_AT_decl_file   : 1
    <66>   DW_AT_decl_line   : 12
    <66>   DW_AT_decl_column : 19
    <66>   DW_AT_type        : <0x7b>
    <6a>   DW_AT_location    : 3 byte block: 91 60 6 	(DW_OP_fbreg: -32; DW_OP_deref)
 <2><6e>: Abbrev Number: 0
 <1><6f>: Abbrev Number: 3 (DW_TAG_base_type)
    <70>   DW_AT_byte_size   : 4
    <71>   DW_AT_encoding    : 5	(signed)
    <72>   DW_AT_name        : (indirect string, offset: 0x17): integer(kind=4)
 <1><76>: Abbrev Number: 6 (DW_TAG_const_type)
    <77>   DW_AT_type        : <0x6f>
 <1><7b>: Abbrev Number: 7 (DW_TAG_pointer_type)
    <7c>   DW_AT_byte_size   : 8
    <7d>   DW_AT_type        : <0x81>
 <1><81>: Abbrev Number: 3 (DW_TAG_base_type)
    <82>   DW_AT_byte_size   : 1
    <83>   DW_AT_encoding    : 8	(unsigned char)
    <84>   DW_AT_name        : (indirect string, offset: 0): character(kind=1)
 <1><88>: Abbrev Number: 8 (DW_TAG_subprogram)
    <89>   DW_AT_name        : (indirect string, offset: 0x143): mod_int
    <8d>   DW_AT_decl_file   : 1
    <8e>   DW_AT_decl_line   : 1
    <8f>   DW_AT_decl_column : 15
    <90>   DW_AT_main_subprogram: 1
    <90>   DW_AT_calling_convention: 2	(program)
    <91>   DW_AT_low_pc      : 0x111d
    <99>   DW_AT_high_pc     : 0x1f
    <a1>   DW_AT_frame_base  : 1 byte block: 9c 	(DW_OP_call_frame_cfa)
    <a3>   DW_AT_call_all_calls: 1
 <2><a3>: Abbrev Number: 1 (DW_TAG_variable)
    <a4>   DW_AT_name        : a
    <a6>   DW_AT_decl_file   : 1
    <a6>   DW_AT_decl_line   : 5
    <a6>   DW_AT_decl_column : 28
    <a7>   DW_AT_type        : <0x6f>
    <ab>   DW_AT_location    : 2 byte block: 91 6c 	(DW_OP_fbreg: -20)
 <2><ae>: Abbrev Number: 1 (DW_TAG_variable)
    <af>   DW_AT_name        : b
    <b1>   DW_AT_decl_file   : 1
    <b1>   DW_AT_decl_line   : 5
    <b1>   DW_AT_decl_column : 31
    <b2>   DW_AT_type        : <0x6f>
    <b6>   DW_AT_location    : 2 byte block: 91 68 	(DW_OP_fbreg: -24)
 <2><b9>: Abbrev Number: 1 (DW_TAG_variable)
    <ba>   DW_AT_name        : c
    <bc>   DW_AT_decl_file   : 1
    <bc>   DW_AT_decl_line   : 5
    <bc>   DW_AT_decl_column : 34
    <bd>   DW_AT_type        : <0x6f>
    <c1>   DW_AT_location    : 2 byte block: 91 64 	(DW_OP_fbreg: -28)
 <2><c4>: Abbrev Number: 0
 <1><c5>: Abbrev Number: 0

Contents of the .debug_abbrev section (loaded from mod_int_Fortran_aarch64_ggdb3):

  Number TAG (0)
   1      DW_TAG_variable    [no children]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 5
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_formal_parameter    [no children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_implicit_const: 1
    DW_AT_decl_line    DW_FORM_implicit_const: 12
    DW_AT_decl_column  DW_FORM_implicit_const: 19
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_compile_unit    [has children]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_identifier_case DW_FORM_data1
    DW_AT_name         DW_FORM_line_strp
    DW_AT_comp_dir     DW_FORM_line_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT_macros       DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_subprogram    [has children]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_tail_calls DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_const_type    [no children]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_pointer_type    [no children]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_subprogram    [has children]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_main_subprogram DW_FORM_flag_present
    DW_AT_calling_convention DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_call_all_calls DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0

Raw dump of debug contents of section .debug_line (loaded from mod_int_Fortran_aarch64_ggdb3):

  Offset:                      0
  Length:                      111
  DWARF Version:               5
  Address size (bytes):        8
  Segment selector (bytes):    0
  Prologue Length:             51
  Minimum Instruction Length:  1
  Maximum Ops per Instruction: 1
  Initial value of 'is_stmt':  1
  Line Base:                   -5
  Line Range:                  14
  Opcode Base:                 13

 Opcodes:
  Opcode 1 has 0 args
  Opcode 2 has 1 arg
  Opcode 3 has 1 arg
  Opcode 4 has 1 arg
  Opcode 5 has 1 arg
  Opcode 6 has 0 args
  Opcode 7 has 0 args
  Opcode 8 has 0 args
  Opcode 9 has 1 arg
  Opcode 10 has 0 args
  Opcode 11 has 0 args
  Opcode 12 has 1 arg

 The Directory Table (offset 0x22, lines 2, columns 1):
  Entry	Name
  0	(indirect line string, offset: 0): /home/haxor/Documents/Engineering/Disassembling-Binaries/Fortran/ARM_architecture/ARM64/Integer_Operations/Mod_Int/With_Debug_Info
  1	(indirect line string, offset: 0x8f): /home/haxor/mambaforge/bin/../x86_64-conda-linux-gnu/sysroot/usr/include/finclude

 The File Name Table (offset 0x30, lines 3, columns 2):
  Entry	Dir	Name
  0	0	(indirect line string, offset: 0x83): mod_int.f08
  1	0	(indirect line string, offset: 0x83): mod_int.f08
  2	1	(indirect line string, offset: 0xe1): math-vector-fortran.h

 Line Number Statements:
  [0x0000003f]  Set column to 15
  [0x00000041]  Extended opcode 2: set Address to 0x111d
  [0x0000004c]  Copy
  [0x0000004d]  Set column to 14
  [0x0000004f]  Special opcode 67: advance Address by 4 to 0x1121 and Line by 6 to 7
  [0x00000050]  Set column to 13
  [0x00000052]  Special opcode 104: advance Address by 7 to 0x1128 and Line by 1 to 8
  [0x00000053]  Set column to 21
  [0x00000055]  Special opcode 105: advance Address by 7 to 0x112f and Line by 2 to 10
  [0x00000056]  Set column to 19
  [0x00000058]  Special opcode 147: advance Address by 10 to 0x1139 and Line by 2 to 12
  [0x00000059]  Special opcode 47: advance Address by 3 to 0x113c and Line by 0 to 12
  [0x0000005a]  Special opcode 215: advance Address by 15 to 0x114b and Line by 0 to 12
  [0x0000005b]  Extended opcode 4: set Discriminator to 1
  [0x0000005f]  Set is_stmt to 0
  [0x00000060]  Advance PC by constant 17 to 0x115c
  [0x00000061]  Special opcode 5: advance Address by 0 to 0x115c and Line by 0 to 12
  [0x00000062]  Extended opcode 4: set Discriminator to 2
  [0x00000066]  Advance PC by constant 17 to 0x116d
  [0x00000067]  Special opcode 47: advance Address by 3 to 0x1170 and Line by 0 to 12
  [0x00000068]  Extended opcode 4: set Discriminator to 3
  [0x0000006c]  Special opcode 75: advance Address by 5 to 0x1175 and Line by 0 to 12
  [0x0000006d]  Special opcode 75: advance Address by 5 to 0x117a and Line by 0 to 12
  [0x0000006e]  Advance PC by 2 to 0x117c
  [0x00000070]  Extended opcode 1: End of Sequence


Contents of the .debug_str section (loaded from mod_int_Fortran_aarch64_ggdb3):

  0x00000000 63686172 61637465 72286b69 6e643d31 character(kind=1
  0x00000010 29006172 67630069 6e746567 6572286b ).argc.integer(k
  0x00000020 696e643d 34290047 4e552046 6f727472 ind=4).GNU Fortr
  0x00000030 616e3230 30382031 352e312e 30202d6d an2008 15.1.0 -m
  0x00000040 74756e65 3d67656e 65726963 202d6d61 tune=generic -ma
  0x00000050 7263683d 7838362d 3634202d 67676462 rch=x86-64 -ggdb
  0x00000060 33202d66 696e7472 696e7369 632d6d6f 3 -fintrinsic-mo
  0x00000070 64756c65 732d7061 7468202f 686f6d65 dules-path /home
  0x00000080 2f686178 6f722f6d 616d6261 666f7267 /haxor/mambaforg
  0x00000090 652f6269 6e2f2e2e 2f6c6962 2f676363 e/bin/../lib/gcc
  0x000000a0 2f783836 5f36342d 636f6e64 612d6c69 /x86_64-conda-li
  0x000000b0 6e75782d 676e752f 31352e31 2e302f66 nux-gnu/15.1.0/f
  0x000000c0 696e636c 75646520 2d667072 652d696e include -fpre-in
  0x000000d0 636c7564 653d2f68 6f6d652f 6861786f clude=/home/haxo
  0x000000e0 722f6d61 6d626166 6f726765 2f62696e r/mambaforge/bin
  0x000000f0 2f2e2e2f 7838365f 36342d63 6f6e6461 /../x86_64-conda
  0x00000100 2d6c696e 75782d67 6e752f73 7973726f -linux-gnu/sysro
  0x00000110 6f742f75 73722f69 6e636c75 64652f66 ot/usr/include/f
  0x00000120 696e636c 7564652f 6d617468 2d766563 include/math-vec
  0x00000130 746f722d 666f7274 72616e2e 68006d61 tor-fortran.h.ma
  0x00000140 696e006d 6f645f69 6e740061 72677600 in.mod_int.argv.

Contents of the .debug_line_str section (loaded from mod_int_Fortran_aarch64_ggdb3):

  0x00000000 2f686f6d 652f6861 786f722f 446f6375 /home/haxor/Docu
  0x00000010 6d656e74 732f456e 67696e65 6572696e ments/Engineerin
  0x00000020 672f4469 73617373 656d626c 696e672d g/Disassembling-
  0x00000030 42696e61 72696573 2f466f72 7472616e Binaries/Fortran
  0x00000040 2f41524d 5f617263 68697465 63747572 /ARM_architectur
  0x00000050 652f4152 4d36342f 496e7465 6765725f e/ARM64/Integer_
  0x00000060 4f706572 6174696f 6e732f4d 6f645f49 Operations/Mod_I
  0x00000070 6e742f57 6974685f 44656275 675f496e nt/With_Debug_In
  0x00000080 666f006d 6f645f69 6e742e66 3038002f fo.mod_int.f08./
  0x00000090 686f6d65 2f686178 6f722f6d 616d6261 home/haxor/mamba
  0x000000a0 666f7267 652f6269 6e2f2e2e 2f783836 forge/bin/../x86
  0x000000b0 5f36342d 636f6e64 612d6c69 6e75782d _64-conda-linux-
  0x000000c0 676e752f 73797372 6f6f742f 7573722f gnu/sysroot/usr/
  0x000000d0 696e636c 7564652f 66696e63 6c756465 include/finclude
  0x000000e0 006d6174 682d7665 63746f72 2d666f72 .math-vector-for
  0x000000f0 7472616e 2e6800                     tran.h.

Contents of the .debug_macro section (loaded from mod_int_Fortran_aarch64_ggdb3):

  Offset:                      0
  Version:                     5
  Offset size:                 4
  Offset into .debug_line:     0

 DW_MACRO_start_file - lineno: 0 filenum: 1
 DW_MACRO_start_file - lineno: 0 filenum: 2
 DW_MACRO_end_file
 DW_MACRO_end_file

